
 class TriggerListener extends TriggerEventListener {
     public void onTrigger(TriggerEvent event) {
          // Do Work.

     // As it is a one shot sensor, it will be canceled automatically.
     // SensorManager.requestTriggerSensor(this, mSigMotion); needs to
     // be called again, if needed.
     }
 }
 public class SensorActivity extends Activity {
     private final SensorManager mSensorManager;
     private final Sensor mSigMotion;
     private final TriggerEventListener mListener = new TriggerEventListener();

     public SensorActivity() {
         mSensorManager = (SensorManager)getSystemService(SENSOR_SERVICE);
         mSigMotion = mSensorManager.getDefaultSensor(Sensor.TYPE_SIGNIFICANT_MOTION);
     }

     protected void onResume() {
         super.onResume();
         mSensorManager.requestTriggerSensor(mListener, mSigMotion);
     }

     protected void onPause() {
         super.onPause();
         // Call disable to ensure that the trigger request has been canceled.
         mSensorManager.cancelTriggerSensor(mListener, mSigMotion);
     }

 }
 