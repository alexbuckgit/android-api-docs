<Type Name="CategoryExpression" FullName="NUnit.Framework.Internal.Filters.CategoryExpression">
  <TypeSignature Language="C#" Value="public class CategoryExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CategoryExpression extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Android.NUnitLite</AssemblyName>
    <AssemblyVersion>0.9.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            CategoryExpression parses strings representing boolean
            combinations of categories according to the following
            grammar:
            CategoryName ::= string not containing any of ',', '&amp;', '+', '-'
            CategoryFilter ::= CategoryName | CategoryFilter ',' CategoryName
            CategoryPrimitive ::= CategoryFilter | '-' CategoryPrimitive
            CategoryTerm ::= CategoryPrimitive | CategoryTerm '&amp;' CategoryPrimitive
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CategoryExpression (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">The text of the expression</param>
        <summary>
            Construct expression from a text string
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public NUnit.Framework.Internal.TestFilter Filter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class NUnit.Framework.Internal.TestFilter Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Internal.TestFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the TestFilter represented by the expression
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
