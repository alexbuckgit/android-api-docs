<Type Name="Assume" FullName="NUnit.Framework.Assume">
  <TypeSignature Language="C#" Value="public class Assume" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Assume extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Android.NUnitLite</AssemblyName>
    <AssemblyVersion>0.9.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary ToolPath="Trimmed" tool="FirstSentenceInLongSummaries">Provides static methods to express the assumptions that must be met for a test to give a meaningful result.</summary>
    <remarks>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Assume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (object a, object b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(object a, object b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Object" />
        <Parameter Name="b" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="a" />
        <param name="b" />
        <summary>
            The Equals method throws an AssertionException. This is done
            to make sure there is no mistake by calling this function.
            </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceEquals">
      <MemberSignature Language="C#" Value="public static void ReferenceEquals (object a, object b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReferenceEquals(object a, object b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Object" />
        <Parameter Name="b" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="a" />
        <param name="b" />
        <summary ToolPath="Trimmed" tool="FirstSentenceInLongSummaries">override the default ReferenceEquals to throw an AssertionException.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="That">
      <MemberSignature Language="C#" Value="public static void That (bool condition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void That(bool condition) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="condition">The evaluated condition</param>
        <summary>
            Asserts that a condition is true. If the condition is false the
            method throws an <see cref="T:NUnit.Framework.InconclusiveException" />.
            </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="That">
      <MemberSignature Language="C#" Value="public static void That (NUnit.Framework.TestDelegate code, NUnit.Framework.Constraints.IResolveConstraint constraint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void That(class NUnit.Framework.TestDelegate code, class NUnit.Framework.Constraints.IResolveConstraint constraint) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="NUnit.Framework.TestDelegate" />
        <Parameter Name="constraint" Type="NUnit.Framework.Constraints.IResolveConstraint" />
      </Parameters>
      <Docs>
        <param name="code">A TestDelegate to be executed</param>
        <param name="constraint">A ThrowsConstraint used in the test</param>
        <summary>
            Asserts that the code represented by a delegate throws an exception
            that satisfies the constraint provided.
            </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="That">
      <MemberSignature Language="C#" Value="public static void That (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void That(bool condition, string message) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">The evaluated condition</param>
        <param name="message">The message to display if the condition is false</param>
        <summary>
            Asserts that a condition is true. If the condition is false the method throws
            an <see cref="T:NUnit.Framework.InconclusiveException" />.
            </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="That">
      <MemberSignature Language="C#" Value="public static void That (object actual, NUnit.Framework.Constraints.IResolveConstraint expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void That(object actual, class NUnit.Framework.Constraints.IResolveConstraint expression) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actual" Type="System.Object" />
        <Parameter Name="expression" Type="NUnit.Framework.Constraints.IResolveConstraint" />
      </Parameters>
      <Docs>
        <param name="actual">The actual value to test</param>
        <param name="expression">A Constraint expression to be applied</param>
        <summary>
            Apply a constraint to an actual value, succeeding if the constraint
            is satisfied and throwing an InconclusiveException on failure.
            </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="That">
      <MemberSignature Language="C#" Value="public static void That (bool condition, string message, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void That(bool condition, string message, object[] args) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="condition">The evaluated condition</param>
        <param name="message">The message to display if the condition is false</param>
        <param name="args">Arguments to be used in formatting the message</param>
        <summary>
            Asserts that a condition is true. If the condition is false the method throws
            an <see cref="T:NUnit.Framework.InconclusiveException" />.
            </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="That">
      <MemberSignature Language="C#" Value="public static void That (object actual, NUnit.Framework.Constraints.IResolveConstraint expression, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void That(object actual, class NUnit.Framework.Constraints.IResolveConstraint expression, string message) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actual" Type="System.Object" />
        <Parameter Name="expression" Type="NUnit.Framework.Constraints.IResolveConstraint" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="actual">The actual value to test</param>
        <param name="expression">A Constraint expression to be applied</param>
        <param name="message">The message that will be displayed on failure</param>
        <summary>
            Apply a constraint to an actual value, succeeding if the constraint
            is satisfied and throwing an InconclusiveException on failure.
            </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="That">
      <MemberSignature Language="C#" Value="public static void That (object actual, NUnit.Framework.Constraints.IResolveConstraint expression, string message, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void That(object actual, class NUnit.Framework.Constraints.IResolveConstraint expression, string message, object[] args) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actual" Type="System.Object" />
        <Parameter Name="expression" Type="NUnit.Framework.Constraints.IResolveConstraint" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="actual">The actual value to test</param>
        <param name="expression">A Constraint expression to be applied</param>
        <param name="message">The message that will be displayed on failure</param>
        <param name="args">Arguments to be used in formatting the message</param>
        <summary>
            Apply a constraint to an actual value, succeeding if the constraint
            is satisfied and throwing an InconclusiveException on failure.
            </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="That&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void That&lt;T&gt; (NUnit.Framework.Constraints.ActualValueDelegate&lt;T&gt; del, NUnit.Framework.Constraints.IResolveConstraint expr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void That&lt;T&gt;(class NUnit.Framework.Constraints.ActualValueDelegate`1&lt;!!T&gt; del, class NUnit.Framework.Constraints.IResolveConstraint expr) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="del" Type="NUnit.Framework.Constraints.ActualValueDelegate&lt;T&gt;" />
        <Parameter Name="expr" Type="NUnit.Framework.Constraints.IResolveConstraint" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="del">An ActualValueDelegate returning the value to be tested</param>
        <param name="expr">A Constraint expression to be applied</param>
        <summary>
            Apply a constraint to an actual value, succeeding if the constraint
            is satisfied and throwing an InconclusiveException on failure.
            </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="That&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void That&lt;T&gt; (ref T actual, NUnit.Framework.Constraints.IResolveConstraint expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void That&lt;T&gt;(!!T actual, class NUnit.Framework.Constraints.IResolveConstraint expression) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="actual" Type="T&amp;" RefType="ref" />
        <Parameter Name="expression" Type="NUnit.Framework.Constraints.IResolveConstraint" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="actual">The actual value to test</param>
        <param name="expression">A Constraint expression to be applied</param>
        <summary>
            Apply a constraint to a referenced value, succeeding if the constraint
            is satisfied and throwing an InconclusiveException on failure.
            </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="That&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void That&lt;T&gt; (NUnit.Framework.Constraints.ActualValueDelegate&lt;T&gt; del, NUnit.Framework.Constraints.IResolveConstraint expr, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void That&lt;T&gt;(class NUnit.Framework.Constraints.ActualValueDelegate`1&lt;!!T&gt; del, class NUnit.Framework.Constraints.IResolveConstraint expr, string message) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="del" Type="NUnit.Framework.Constraints.ActualValueDelegate&lt;T&gt;" />
        <Parameter Name="expr" Type="NUnit.Framework.Constraints.IResolveConstraint" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="del">An ActualValueDelegate returning the value to be tested</param>
        <param name="expr">A Constraint expression to be applied</param>
        <param name="message">The message that will be displayed on failure</param>
        <summary>
            Apply a constraint to an actual value, succeeding if the constraint
            is satisfied and throwing an InconclusiveException on failure.
            </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="That&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void That&lt;T&gt; (ref T actual, NUnit.Framework.Constraints.IResolveConstraint expression, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void That&lt;T&gt;(!!T actual, class NUnit.Framework.Constraints.IResolveConstraint expression, string message) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="actual" Type="T&amp;" RefType="ref" />
        <Parameter Name="expression" Type="NUnit.Framework.Constraints.IResolveConstraint" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="actual">The actual value to test</param>
        <param name="expression">A Constraint expression to be applied</param>
        <param name="message">The message that will be displayed on failure</param>
        <summary>
            Apply a constraint to a referenced value, succeeding if the constraint
            is satisfied and throwing an InconclusiveException on failure.
            </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="That&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void That&lt;T&gt; (NUnit.Framework.Constraints.ActualValueDelegate&lt;T&gt; del, NUnit.Framework.Constraints.IResolveConstraint expr, string message, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void That&lt;T&gt;(class NUnit.Framework.Constraints.ActualValueDelegate`1&lt;!!T&gt; del, class NUnit.Framework.Constraints.IResolveConstraint expr, string message, object[] args) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="del" Type="NUnit.Framework.Constraints.ActualValueDelegate&lt;T&gt;" />
        <Parameter Name="expr" Type="NUnit.Framework.Constraints.IResolveConstraint" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="del">An ActualValueDelegate returning the value to be tested</param>
        <param name="expr">A Constraint expression to be applied</param>
        <param name="message">The message that will be displayed on failure</param>
        <param name="args">Arguments to be used in formatting the message</param>
        <summary>
            Apply a constraint to an actual value, succeeding if the constraint
            is satisfied and throwing an InconclusiveException on failure.
            </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="That&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void That&lt;T&gt; (ref T actual, NUnit.Framework.Constraints.IResolveConstraint expression, string message, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void That&lt;T&gt;(!!T actual, class NUnit.Framework.Constraints.IResolveConstraint expression, string message, object[] args) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="actual" Type="T&amp;" RefType="ref" />
        <Parameter Name="expression" Type="NUnit.Framework.Constraints.IResolveConstraint" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="actual">The actual value to test</param>
        <param name="expression">A Constraint expression to be applied</param>
        <param name="message">The message that will be displayed on failure</param>
        <param name="args">Arguments to be used in formatting the message</param>
        <summary>
            Apply a constraint to a referenced value, succeeding if the constraint
            is satisfied and throwing an InconclusiveException on failure.
            </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
