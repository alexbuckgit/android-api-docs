<Type Name="NUnitLiteTestAssemblyRunner" FullName="NUnit.Framework.Internal.NUnitLiteTestAssemblyRunner">
  <TypeSignature Language="C#" Value="public class NUnitLiteTestAssemblyRunner : NUnit.Framework.Api.ITestAssemblyRunner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NUnitLiteTestAssemblyRunner extends System.Object implements class NUnit.Framework.Api.ITestAssemblyRunner" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Android.NUnitLite</AssemblyName>
    <AssemblyVersion>0.9.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>NUnit.Framework.Api.ITestAssemblyRunner</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Default implementation of ITestAssemblyRunner
            </summary>
    <remarks />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NUnitLiteTestAssemblyRunner (NUnit.Framework.Api.ITestAssemblyBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class NUnit.Framework.Api.ITestAssemblyBuilder builder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="NUnit.Framework.Api.ITestAssemblyBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">The builder.</param>
        <summary>
            Initializes a new instance of the <see cref="T:NUnit.Framework.Internal.NUnitLiteTestAssemblyRunner" /> class.
            </summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public bool Load (System.Reflection.Assembly assembly, System.Collections.IDictionary settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Load(class System.Reflection.Assembly assembly, class System.Collections.IDictionary settings) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="settings" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="assembly">The assembly to load</param>
        <param name="settings">Dictionary of option settings for loading the assembly</param>
        <summary>
            Loads the tests found in an Assembly
            </summary>
        <returns>True if the load was successful</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public bool Load (string assemblyName, System.Collections.IDictionary settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Load(string assemblyName, class System.Collections.IDictionary settings) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="settings" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="assemblyName">File name of the assembly to load</param>
        <param name="settings">Dictionary of option settings for loading the assembly</param>
        <summary>
            Loads the tests found in an Assembly
            </summary>
        <returns>True if the load was successful</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="LoadedTest">
      <MemberSignature Language="C#" Value="public NUnit.Framework.Api.ITest LoadedTest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class NUnit.Framework.Api.ITest LoadedTest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Api.ITest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            TODO: Documentation needed for property
            </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public NUnit.Framework.Api.ITestResult Run (NUnit.Framework.Api.ITestListener listener, NUnit.Framework.Api.ITestFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class NUnit.Framework.Api.ITestResult Run(class NUnit.Framework.Api.ITestListener listener, class NUnit.Framework.Api.ITestFilter filter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Api.ITestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="NUnit.Framework.Api.ITestListener" />
        <Parameter Name="filter" Type="NUnit.Framework.Api.ITestFilter" />
      </Parameters>
      <Docs>
        <param name="listener">Interface to receive EventListener notifications.</param>
        <param name="filter">A test filter used to select tests to be run</param>
        <summary>
            Run selected tests and return a test result. The test is run synchronously,
            and the listener interface is notified as it progresses.
            </summary>
        <returns />
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
