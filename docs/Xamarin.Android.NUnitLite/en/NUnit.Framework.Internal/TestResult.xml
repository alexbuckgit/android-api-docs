<Type Name="TestResult" FullName="NUnit.Framework.Internal.TestResult">
  <TypeSignature Language="C#" Value="public abstract class TestResult : NUnit.Framework.Api.ITestResult" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TestResult extends System.Object implements class NUnit.Framework.Api.ITestResult, class NUnit.Framework.Api.IXmlNodeBuilder" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Android.NUnitLite</AssemblyName>
    <AssemblyVersion>0.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>NUnit.Framework.Api.ITestResult</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            The TestResult class represents the result of a test.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TestResult (NUnit.Framework.Api.ITest test);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class NUnit.Framework.Api.ITest test) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="test" Type="NUnit.Framework.Api.ITest" />
      </Parameters>
      <Docs>
        <param name="test">The test to be used</param>
        <summary>
            Construct a test result given a Test
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddResult">
      <MemberSignature Language="C#" Value="public virtual void AddResult (NUnit.Framework.Internal.TestResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddResult(class NUnit.Framework.Internal.TestResult result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="NUnit.Framework.Internal.TestResult" />
      </Parameters>
      <Docs>
        <param name="result">The child result to be added</param>
        <summary>
            Add a child result
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToXml">
      <MemberSignature Language="C#" Value="public virtual NUnit.Framework.Api.XmlNode AddToXml (NUnit.Framework.Api.XmlNode parentNode, bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class NUnit.Framework.Api.XmlNode AddToXml(class NUnit.Framework.Api.XmlNode parentNode, bool recursive) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Api.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentNode" Type="NUnit.Framework.Api.XmlNode" />
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parentNode">The parent node.</param>
        <param name="recursive">If true, descendant results are included</param>
        <summary>
            Adds the XML representation of the result as a child of the
            supplied parent node..
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="assertCount">
      <MemberSignature Language="C#" Value="protected int assertCount;" />
      <MemberSignature Language="ILAsm" Value=".field family int32 assertCount" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Number of asserts executed by this test
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssertCount">
      <MemberSignature Language="C#" Value="public int AssertCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AssertCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the count of asserts executed
            when running the test.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Collections.IList Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the collection of child results.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public TimeSpan Duration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the elapsed time for running the test
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FailCount">
      <MemberSignature Language="C#" Value="public abstract int FailCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FailCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the number of test cases that failed
            when running the test and all its children.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FailureSite">
      <MemberSignature Language="C#" Value="public NUnit.Framework.Api.FailureSite FailureSite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype NUnit.Framework.Api.FailureSite FailureSite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Api.FailureSite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the failure site, which indicates the point
            in the processing of the test where it failed.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public virtual string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the full name of the test result
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasChildren">
      <MemberSignature Language="C#" Value="public bool HasChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Indicates whether this result has any child results.
            Test HasChildren before accessing Children to avoid
            the creation of an empty collection.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InconclusiveCount">
      <MemberSignature Language="C#" Value="public abstract int InconclusiveCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InconclusiveCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the number of test cases that were inconclusive
            when running the test and all its children.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="message">
      <MemberSignature Language="C#" Value="protected string message;" />
      <MemberSignature Language="ILAsm" Value=".field family string message" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Message giving the reason for failure, error or skipping the test
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the message associated with a test
            failure or with not running the test
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the test result
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PassCount">
      <MemberSignature Language="C#" Value="public abstract int PassCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PassCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the number of test cases that passed
            when running the test and all its children.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordException">
      <MemberSignature Language="C#" Value="public void RecordException (Exception ex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RecordException(class System.Exception ex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ex" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="ex">The exception that was thrown</param>
        <summary>
            Set the test result based on the type of exception thrown
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordException">
      <MemberSignature Language="C#" Value="public virtual void RecordException (Exception ex, NUnit.Framework.Api.FailureSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RecordException(class System.Exception ex, valuetype NUnit.Framework.Api.FailureSite site) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ex" Type="System.Exception" />
        <Parameter Name="site" Type="NUnit.Framework.Api.FailureSite" />
      </Parameters>
      <Docs>
        <param name="ex">The exception that was thrown</param>
        <param name="site">The FailureSite</param>
        <summary>
            Set the test result based on the type of exception thrown
            and the site of the Failure.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="resultState">
      <MemberSignature Language="C#" Value="protected NUnit.Framework.Api.ResultState resultState;" />
      <MemberSignature Language="ILAsm" Value=".field family class NUnit.Framework.Api.ResultState resultState" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Api.ResultState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Indicates the result of the test
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResultState">
      <MemberSignature Language="C#" Value="public NUnit.Framework.Api.ResultState ResultState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class NUnit.Framework.Api.ResultState ResultState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Api.ResultState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the ResultState of the test result, which
            indicates the success or failure of the test.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetResult">
      <MemberSignature Language="C#" Value="public void SetResult (NUnit.Framework.Api.ResultState resultState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetResult(class NUnit.Framework.Api.ResultState resultState) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultState" Type="NUnit.Framework.Api.ResultState" />
      </Parameters>
      <Docs>
        <param name="resultState">The ResultState to use in the result</param>
        <summary>
            Set the result of the test
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetResult">
      <MemberSignature Language="C#" Value="public void SetResult (NUnit.Framework.Api.ResultState resultState, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetResult(class NUnit.Framework.Api.ResultState resultState, string message) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultState" Type="NUnit.Framework.Api.ResultState" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resultState">The ResultState to use in the result</param>
        <param name="message">A message associated with the result state</param>
        <summary>
            Set the result of the test
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetResult">
      <MemberSignature Language="C#" Value="public void SetResult (NUnit.Framework.Api.ResultState resultState, string message, string stackTrace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetResult(class NUnit.Framework.Api.ResultState resultState, string message, string stackTrace) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultState" Type="NUnit.Framework.Api.ResultState" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="stackTrace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resultState">The ResultState to use in the result</param>
        <param name="message">A message associated with the result state</param>
        <param name="stackTrace">Stack trace giving the location of the command</param>
        <summary>
            Set the result of the test
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetResult">
      <MemberSignature Language="C#" Value="public void SetResult (NUnit.Framework.Api.ResultState resultState, string message, string stackTrace, NUnit.Framework.Api.FailureSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetResult(class NUnit.Framework.Api.ResultState resultState, string message, string stackTrace, valuetype NUnit.Framework.Api.FailureSite site) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultState" Type="NUnit.Framework.Api.ResultState" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="stackTrace" Type="System.String" />
        <Parameter Name="site" Type="NUnit.Framework.Api.FailureSite" />
      </Parameters>
      <Docs>
        <param name="resultState">The ResultState to use in the result</param>
        <param name="message">A message associated with the result state</param>
        <param name="stackTrace">Stack trace giving the location of the command</param>
        <param name="site">The FailureSite for any failure or error</param>
        <summary>
            Set the result of the test
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipCount">
      <MemberSignature Language="C#" Value="public abstract int SkipCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SkipCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the number of test cases that were skipped
            when running the test and all its children.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StackTrace">
      <MemberSignature Language="C#" Value="public virtual string StackTrace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StackTrace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets any stacktrace associated with an
            error or failure. Not available in
            the Compact Framework 1.0.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="test">
      <MemberSignature Language="C#" Value="protected readonly NUnit.Framework.Api.ITest test;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly class NUnit.Framework.Api.ITest test" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Api.ITest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The test that this result pertains to
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Test">
      <MemberSignature Language="C#" Value="public NUnit.Framework.Api.ITest Test { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class NUnit.Framework.Api.ITest Test" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Api.ITest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the test with which this result is associated.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public NUnit.Framework.Api.XmlNode ToXml (bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class NUnit.Framework.Api.XmlNode ToXml(bool recursive) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Api.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="recursive">If true, descendant results are included</param>
        <summary>
            Returns the Xml representation of the result.
            </summary>
        <returns>An XmlNode representing the result</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
