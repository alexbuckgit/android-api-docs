<Type Name="WorkItem" FullName="NUnit.Framework.Internal.WorkItems.WorkItem">
  <TypeSignature Language="C#" Value="public abstract class WorkItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WorkItem extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Android.NUnitLite</AssemblyName>
    <AssemblyVersion>0.9.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A WorkItem may be an individual test case, a fixture or
            a higher level grouping of tests. All WorkItems inherit
            from the abstract WorkItem class, which uses the template
            pattern to allow derived classes to perform work in
            whatever way is needed.
            </summary>
    <remarks />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkItem (NUnit.Framework.Internal.Test test);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class NUnit.Framework.Internal.Test test) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="test" Type="NUnit.Framework.Internal.Test" />
      </Parameters>
      <Docs>
        <param name="test">To be added.</param>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkItem (NUnit.Framework.Internal.Test test, NUnit.Framework.Internal.TestExecutionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class NUnit.Framework.Internal.Test test, class NUnit.Framework.Internal.TestExecutionContext context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="test" Type="NUnit.Framework.Internal.Test" />
        <Parameter Name="context" Type="NUnit.Framework.Internal.TestExecutionContext" />
      </Parameters>
      <Docs>
        <param name="test">The test that the WorkItem will run</param>
        <param name="context">The context to be used for running this test</param>
        <summary>
            Construct a WorkItem for a particular test.
            </summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public event EventHandler Completed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Completed" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Event triggered when the item is complete
            </summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="protected NUnit.Framework.Internal.TestExecutionContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class NUnit.Framework.Internal.TestExecutionContext Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Internal.TestExecutionContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The execution context in use
            </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CreateWorkItem">
      <MemberSignature Language="C#" Value="public static NUnit.Framework.Internal.WorkItems.WorkItem CreateWorkItem (NUnit.Framework.Internal.Test test, NUnit.Framework.Internal.TestExecutionContext context, NUnit.Framework.Api.ITestFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class NUnit.Framework.Internal.WorkItems.WorkItem CreateWorkItem(class NUnit.Framework.Internal.Test test, class NUnit.Framework.Internal.TestExecutionContext context, class NUnit.Framework.Api.ITestFilter filter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Internal.WorkItems.WorkItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="test" Type="NUnit.Framework.Internal.Test" />
        <Parameter Name="context" Type="NUnit.Framework.Internal.TestExecutionContext" />
        <Parameter Name="filter" Type="NUnit.Framework.Api.ITestFilter" />
      </Parameters>
      <Docs>
        <param name="test">The test to be executed</param>
        <param name="context">The execution context in which the test will be run</param>
        <param name="filter">A filter for selecting chind tests</param>
        <summary>
            Create a WorkItem appropriate for the test to be run
            </summary>
        <returns />
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public virtual void Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Execute() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Execute the current work item, including any
            child work items.
            </summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public virtual void Execute (NUnit.Framework.Internal.TestExecutionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Execute(class NUnit.Framework.Internal.TestExecutionContext context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="NUnit.Framework.Internal.TestExecutionContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="PerformWork">
      <MemberSignature Language="C#" Value="protected abstract void PerformWork ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PerformWork() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Method that performs actually performs the work. It should
            set the State to WorkItemState.Complete when done.
            </summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="PriorContext">
      <MemberSignature Language="C#" Value="protected NUnit.Framework.Internal.TestExecutionContext PriorContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class NUnit.Framework.Internal.TestExecutionContext PriorContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Internal.TestExecutionContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The original context supplied from the fixture
            or other higher-level test
            </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public NUnit.Framework.Internal.TestResult Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class NUnit.Framework.Internal.TestResult Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Internal.TestResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The test result
            </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public NUnit.Framework.Internal.WorkItems.WorkItemState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype NUnit.Framework.Internal.WorkItems.WorkItemState State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Internal.WorkItems.WorkItemState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the current state of the WorkItem
            </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Test">
      <MemberSignature Language="C#" Value="public NUnit.Framework.Internal.Test Test { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class NUnit.Framework.Internal.Test Test" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Internal.Test</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The test being executed by the work item
            </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="testResult">
      <MemberSignature Language="C#" Value="protected NUnit.Framework.Internal.TestResult testResult;" />
      <MemberSignature Language="ILAsm" Value=".field family class NUnit.Framework.Internal.TestResult testResult" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NUnit.Framework.Internal.TestResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The result of running the test
            </summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="WorkItemComplete">
      <MemberSignature Language="C#" Value="protected void WorkItemComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WorkItemComplete() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Method called by the derived class when all work is complete
            </summary>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
