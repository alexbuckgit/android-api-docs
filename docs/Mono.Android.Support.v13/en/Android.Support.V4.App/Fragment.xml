<Type Name="Fragment" FullName="Android.Support.V4.App.Fragment">
  <TypeSignature Language="C#" Value="public class Fragment : Java.Lang.Object, Android.Content.IComponentCallbacks, Android.Views.View.IOnCreateContextMenuListener, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Fragment extends Java.Lang.Object implements class Android.Content.IComponentCallbacks, class Android.Runtime.IJavaObject, class Android.Views.View/IOnCreateContextMenuListener, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android.Support.v13</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Content.IComponentCallbacks</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Views.View+IOnCreateContextMenuListener</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/support/v4/app/Fragment", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Static library support version of the framework's <c><see cref="T:Android.App.Fragment" /></c>.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Static library support version of the framework's <c><see cref="T:Android.App.Fragment" /></c>.
 Used to write apps that run on platforms prior to Android 3.0.  When running
 on Android 3.0 or above, this implementation is still used; it does not try
 to switch to the framework's implementation. See the framework SDK
 documentation for a class overview.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Fragment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Default constructor.  <i>Every</i> fragment must have an
 empty constructor, so it can be instantiated when restoring its
 activity's state.  It is strongly recommended that subclasses do not
 have other constructors with parameters, since these constructors
 will not be called when the fragment is re-instantiated; instead,
 arguments can be supplied by the caller with <c><see cref="P:Android.Support.V4.App.Fragment.Arguments" /></c>
 and later retrieved by the Fragment with <c><see cref="P:Android.Support.V4.App.Fragment.Arguments" /></c>.
 
 </para>
          <para tool="javadoc-to-mdoc">Applications should generally not implement a constructor.  The
 first place application code an run where the fragment is ready to
 be used is in <c><see cref="M:Android.Support.V4.App.Fragment.OnAttach(Android.App.Activity)" /></c>, the point where the fragment
 is actually associated with its activity.  Some applications may also
 want to implement <c><see cref="M:Android.Support.V4.App.Fragment.OnInflate(Android.App.Activity, Android.Util.IAttributeSet, Android.Util.IAttributeSet)" /></c> to retrieve attributes from a
 layout resource, though should take care here because this happens for
 the fragment is attached to its activity.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#Fragment()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Fragment (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T}(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activity">
      <MemberSignature Language="C#" Value="public Android.Support.V4.App.FragmentActivity Activity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Support.V4.App.FragmentActivity Activity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getActivity", "()Landroid/support/v4/app/FragmentActivity;", "GetGetActivityHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Support.V4.App.FragmentActivity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the Activity this fragment is currently associated with.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the Activity this fragment is currently associated with.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#getActivity()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="Arguments">
      <MemberSignature Language="C#" Value="public Android.OS.Bundle Arguments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.OS.Bundle Arguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getArguments", "()Landroid/os/Bundle;", "GetGetArgumentsHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setArguments", "(Landroid/os/Bundle;)V", "GetSetArguments_Landroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Bundle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the arguments supplied when the fragment was instantiated,
 if any.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#getArguments()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Return the arguments supplied when the fragment was instantiated,
 if any.
</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#setArguments(android.os.Bundle)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Supply the construction arguments for this fragment.  This can only
 be called before the fragment has been attached to its activity; that
 is, you should call it immediately after constructing the fragment.  The
 arguments supplied here will be retained across fragment destroy and
 creation.
</para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="ChildFragmentManager">
      <MemberSignature Language="C#" Value="public Android.Support.V4.App.FragmentManager ChildFragmentManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Support.V4.App.FragmentManager ChildFragmentManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getChildFragmentManager", "()Landroid/support/v4/app/FragmentManager;", "GetGetChildFragmentManagerHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Support.V4.App.FragmentManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return a private FragmentManager for placing and managing Fragments
 inside of this Fragment.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return a private FragmentManager for placing and managing Fragments
 inside of this Fragment.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#getChildFragmentManager()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="Dump">
      <MemberSignature Language="C#" Value="public virtual void Dump (string prefix, Java.IO.FileDescriptor fd, Java.IO.PrintWriter writer, string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dump(string prefix, class Java.IO.FileDescriptor fd, class Java.IO.PrintWriter writer, string[] args) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dump", "(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V", "GetDump_Ljava_lang_String_Ljava_io_FileDescriptor_Ljava_io_PrintWriter_arrayLjava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
        <Parameter Name="writer" Type="Java.IO.PrintWriter" />
        <Parameter Name="args" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="prefix">Text to print at the front of each line.</param>
        <param name="fd">The raw file descriptor that the dump is being sent to.</param>
        <param name="writer">The PrintWriter to which you should dump your state.  This will be
 closed for you after you return.</param>
        <param name="args">additional arguments to the dump request.
</param>
        <summary>Print the Fragments's state into the given stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Print the Fragments's state into the given stream.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override sealed bool Equals (Java.Lang.Object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(class Java.Lang.Object o) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("equals", "(Ljava/lang/Object;)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="o">the object to compare this instance with.</param>
        <summary>Subclasses can not override equals().</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Subclasses can not override equals().
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#equals(java.lang.Object)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="FragmentManager">
      <MemberSignature Language="C#" Value="public Android.Support.V4.App.FragmentManager FragmentManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Support.V4.App.FragmentManager FragmentManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFragmentManager", "()Landroid/support/v4/app/FragmentManager;", "GetGetFragmentManagerHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Support.V4.App.FragmentManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the FragmentManager for interacting with fragments associated
 with this fragment's activity.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the FragmentManager for interacting with fragments associated
 with this fragment's activity.  Note that this will be non-null slightly
 before <c><see cref="P:Android.Support.V4.App.Fragment.Activity" /></c>, during the time from when the fragment is
 placed in a <c><see cref="T:Android.Support.V4.App.FragmentTransaction" /></c> until it is committed and
 attached to its activity.

 </para>
          <para tool="javadoc-to-mdoc">If this Fragment is a child of another Fragment, the FragmentManager
 returned here will be the parent's <c><see cref="P:Android.Support.V4.App.Fragment.ChildFragmentManager" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#getFragmentManager()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override sealed int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("hashCode", "()I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Subclasses can not override hashCode().</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Subclasses can not override hashCode().
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#hashCode()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="GetLayoutInflater">
      <MemberSignature Language="C#" Value="public virtual Android.Views.LayoutInflater GetLayoutInflater (Android.OS.Bundle p0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.LayoutInflater GetLayoutInflater(class Android.OS.Bundle p0) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getLayoutInflater", "(Landroid/os/Bundle;)Landroid/view/LayoutInflater;", "GetGetLayoutInflater_Landroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.LayoutInflater</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="p0">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public string GetString (int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetString(int32 resId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getString", "(I)Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resId">Resource id for the string
</param>
        <summary>Return a localized string from the application's package's
 default string table.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return a localized string from the application's package's
 default string table.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#getString(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public string GetString (int resId, Java.Lang.Object[] formatArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetString(int32 resId, class Java.Lang.Object[] formatArgs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getString", "(I[Ljava/lang/Object;)Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resId" Type="System.Int32" />
        <Parameter Name="formatArgs" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="resId">To be added.</param>
        <param name="formatArgs">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public string GetText (int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetText(int32 resId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextFormatted">
      <MemberSignature Language="C#" Value="public Java.Lang.ICharSequence GetTextFormatted (int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.ICharSequence GetTextFormatted(int32 resId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getText", "(I)Ljava/lang/CharSequence;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resId">Resource id for the CharSequence text
</param>
        <summary>Return a localized, styled CharSequence from the application's package's
 default string table.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return a localized, styled CharSequence from the application's package's
 default string table.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#getText(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public int Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getId", "()I", "GetGetIdHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the identifier this fragment is known by.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the identifier this fragment is known by.  This is either
 the android:id value supplied in a layout or the container view ID
 supplied when adding the fragment.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#getId()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="Instantiate">
      <MemberSignature Language="C#" Value="public static Android.Support.V4.App.Fragment Instantiate (Android.Content.Context context, string fname);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Support.V4.App.Fragment Instantiate(class Android.Content.Context context, string fname) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("instantiate", "(Landroid/content/Context;Ljava/lang/String;)Landroid/support/v4/app/Fragment;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Support.V4.App.Fragment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="fname" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="fname">To be added.</param>
        <summary>Like <c><see cref="M:Android.Support.V4.App.Fragment.Instantiate(Android.Content.Context, System.String, System.String)" /></c> but with a null
 argument Bundle.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Like <c><see cref="M:Android.Support.V4.App.Fragment.Instantiate(Android.Content.Context, System.String, System.String)" /></c> but with a null
 argument Bundle.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#instantiate(android.content.Context, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="Instantiate">
      <MemberSignature Language="C#" Value="public static Android.Support.V4.App.Fragment Instantiate (Android.Content.Context context, string fname, Android.OS.Bundle args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Support.V4.App.Fragment Instantiate(class Android.Content.Context context, string fname, class Android.OS.Bundle args) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("instantiate", "(Landroid/content/Context;Ljava/lang/String;Landroid/os/Bundle;)Landroid/support/v4/app/Fragment;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Support.V4.App.Fragment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="fname" Type="System.String" />
        <Parameter Name="args" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="context">The calling context being used to instantiate the fragment.
 This is currently just used to get its ClassLoader.</param>
        <param name="fname">The class name of the fragment to instantiate.</param>
        <param name="args">Bundle of arguments to supply to the fragment, which it
 can retrieve with <c><see cref="P:Android.Support.V4.App.Fragment.Arguments" /></c>.  May be null.</param>
        <summary>Create a new instance of a Fragment with the given class name.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new instance of a Fragment with the given class name.  This is
 the same as calling its empty constructor.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#instantiate(android.content.Context, java.lang.String, android.os.Bundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <exception cref="T:Java.Lang.InstantiationException">If there is a failure in instantiating
 the given fragment class.  This is a runtime exception; it is not
 normally expected to happen.
</exception>
      </Docs>
    </Member>
    <Member MemberName="IsAdded">
      <MemberSignature Language="C#" Value="public bool IsAdded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAdded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isAdded", "()Z", "GetIsAddedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return true if the fragment is currently added to its activity.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return true if the fragment is currently added to its activity.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#isAdded()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="IsDetached">
      <MemberSignature Language="C#" Value="public bool IsDetached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDetached" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isDetached", "()Z", "GetIsDetachedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return true if the fragment has been explicitly detached from the UI.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return true if the fragment has been explicitly detached from the UI.
 That is, <c><see cref="M:Android.Support.V4.App.FragmentTransaction.Detach(Android.Support.V4.App.Fragment)" /></c> has been used on it.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#isDetached()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="IsHidden">
      <MemberSignature Language="C#" Value="public bool IsHidden { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHidden" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isHidden", "()Z", "GetIsHiddenHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return true if the fragment has been hidden.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return true if the fragment has been hidden.  By default fragments
 are shown.  You can find out about changes to this state with
 <c><see cref="M:Android.Support.V4.App.Fragment.OnHiddenChanged(System.Boolean)" /></c>.  Note that the hidden state is orthogonal
 to other states -- that is, to be visible to the user, a fragment
 must be both started and not hidden.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#isHidden()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="IsInLayout">
      <MemberSignature Language="C#" Value="public bool IsInLayout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isInLayout", "()Z", "GetIsInLayoutHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return true if the layout is included as part of an activity view
 hierarchy via the &lt;fragment&gt; tag.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return true if the layout is included as part of an activity view
 hierarchy via the &lt;fragment&gt; tag.  This will always be true when
 fragments are created through the &lt;fragment&gt; tag, <i>except</i>
 in the case where an old fragment is restored from a previous state and
 it does not appear in the layout of the current state.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#isInLayout()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="IsRemoving">
      <MemberSignature Language="C#" Value="public bool IsRemoving { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRemoving" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isRemoving", "()Z", "GetIsRemovingHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return true if this fragment is currently being removed from its
 activity.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return true if this fragment is currently being removed from its
 activity.  This is  <i>not</i> whether its activity is finishing, but
 rather whether it is in the process of being removed from its activity.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#isRemoving()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="IsResumed">
      <MemberSignature Language="C#" Value="public bool IsResumed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsResumed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isResumed", "()Z", "GetIsResumedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return true if the fragment is in the resumed state.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return true if the fragment is in the resumed state.  This is true
 for the duration of <c><see cref="M:Android.Support.V4.App.Fragment.OnResume" /></c> and <c><see cref="M:Android.Support.V4.App.Fragment.OnPause" /></c> as well.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#isResumed()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isVisible", "()Z", "GetIsVisibleHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return true if the fragment is currently visible to the user.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return true if the fragment is currently visible to the user.  This means
 it: (1) has been added, (2) has its view attached to the window, and 
 (3) is not hidden.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#isVisible()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="LoaderManager">
      <MemberSignature Language="C#" Value="public virtual Android.Support.V4.App.LoaderManager LoaderManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Support.V4.App.LoaderManager LoaderManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLoaderManager", "()Landroid/support/v4/app/LoaderManager;", "GetGetLoaderManagerHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Support.V4.App.LoaderManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the LoaderManager for this fragment, creating it if needed.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the LoaderManager for this fragment, creating it if needed.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#getLoaderManager()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnActivityCreated">
      <MemberSignature Language="C#" Value="public virtual void OnActivityCreated (Android.OS.Bundle savedInstanceState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnActivityCreated(class Android.OS.Bundle savedInstanceState) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onActivityCreated", "(Landroid/os/Bundle;)V", "GetOnActivityCreated_Landroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedInstanceState" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="savedInstanceState">If the fragment is being re-created from
 a previous saved state, this is the state.
</param>
        <summary>Called when the fragment's activity has been created and this
 fragment's view hierarchy instantiated.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when the fragment's activity has been created and this
 fragment's view hierarchy instantiated.  It can be used to do final
 initialization once these pieces are in place, such as retrieving
 views or restoring state.  It is also useful for fragments that use
 <c><see cref="P:Android.Support.V4.App.Fragment.RetainInstance" /></c> to retain their instance,
 as this callback tells the fragment when it is fully associated with
 the new activity instance.  This is called after <c><see cref="M:Android.Support.V4.App.Fragment.OnCreateView(Android.Views.LayoutInflater, Android.Views.ViewGroup, Android.Views.ViewGroup)" /></c>
 and before <c><see cref="M:Android.Support.V4.App.Fragment.OnViewStateRestored(Android.OS.Bundle)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#onActivityCreated(android.os.Bundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnActivityResult">
      <MemberSignature Language="C#" Value="public virtual void OnActivityResult (int requestCode, int resultCode, Android.Content.Intent data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnActivityResult(int32 requestCode, int32 resultCode, class Android.Content.Intent data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onActivityResult", "(IILandroid/content/Intent;)V", "GetOnActivityResult_IILandroid_content_Intent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestCode" Type="System.Int32" />
        <Parameter Name="resultCode" Type="System.Int32" />
        <Parameter Name="data" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="requestCode">The integer request code originally supplied to
                    startActivityForResult(), allowing you to identify who this
                    result came from.</param>
        <param name="resultCode">The integer result code returned by the child activity
                   through its setResult().</param>
        <param name="data">An Intent, which can return result data to the caller
               (various data can be attached to Intent "extras").
</param>
        <summary>Receive the result from a previous call to
 <c><see cref="M:Android.Support.V4.App.Fragment.StartActivityForResult(Android.Content.Intent, System.Int32)" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Receive the result from a previous call to
 <c><see cref="M:Android.Support.V4.App.Fragment.StartActivityForResult(Android.Content.Intent, System.Int32)" /></c>.  This follows the
 related Activity API as described there in
 <c><see cref="M:Android.App.Activity.OnActivityResult(System.Int32, Android.App.Result, Android.App.Result)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#onActivityResult(int, int, android.content.Intent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnAttach">
      <MemberSignature Language="C#" Value="public virtual void OnAttach (Android.App.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnAttach(class Android.App.Activity activity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onAttach", "(Landroid/app/Activity;)V", "GetOnAttach_Landroid_app_Activity_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Android.App.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">To be added.</param>
        <summary>Called when a fragment is first attached to its activity.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when a fragment is first attached to its activity.
 <c><see cref="M:Android.Support.V4.App.Fragment.OnCreate(Android.OS.Bundle)" /></c> will be called after this.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#onAttach(android.app.Activity)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnConfigurationChanged">
      <MemberSignature Language="C#" Value="public virtual void OnConfigurationChanged (Android.Content.Res.Configuration newConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnConfigurationChanged(class Android.Content.Res.Configuration newConfig) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onConfigurationChanged", "(Landroid/content/res/Configuration;)V", "GetOnConfigurationChanged_Landroid_content_res_Configuration_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newConfig" Type="Android.Content.Res.Configuration" />
      </Parameters>
      <Docs>
        <param name="newConfig">The new device configuration.
</param>
        <summary>Called by the system when the device configuration changes while your
 component is running.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called by the system when the device configuration changes while your
 component is running.  Note that, unlike activities, other components
 are never restarted when a configuration changes: they must always deal
 with the results of the change, such as by re-retrieving resources.
 
 </para>
          <para tool="javadoc-to-mdoc">At the time that this function has been called, your Resources
 object will have been updated to return resource values matching the
 new configuration.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#onConfigurationChanged(android.content.res.Configuration)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnContextItemSelected">
      <MemberSignature Language="C#" Value="public virtual bool OnContextItemSelected (Android.Views.IMenuItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnContextItemSelected(class Android.Views.IMenuItem item) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onContextItemSelected", "(Landroid/view/MenuItem;)Z", "GetOnContextItemSelected_Landroid_view_MenuItem_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Android.Views.IMenuItem" />
      </Parameters>
      <Docs>
        <param name="item">The context menu item that was selected.</param>
        <summary>This hook is called whenever an item in a context menu is selected.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">This hook is called whenever an item in a context menu is selected. The
 default implementation simply returns false to have the normal processing
 happen (calling the item's Runnable or sending a message to its Handler
 as appropriate). You can use this method for any items for which you
 would like to do processing without those other facilities.
 </para>
          <para tool="javadoc-to-mdoc">
 Use <c><see cref="P:Android.Views.IMenuItem.MenuInfo" /></c> to get extra information set by the
 View that added this menu item.
 </para>
          <para tool="javadoc-to-mdoc">
 Derived classes should call through to the base class for it to perform
 the default menu handling.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#onContextItemSelected(android.view.MenuItem)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnCreate">
      <MemberSignature Language="C#" Value="public virtual void OnCreate (Android.OS.Bundle savedInstanceState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCreate(class Android.OS.Bundle savedInstanceState) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onCreate", "(Landroid/os/Bundle;)V", "GetOnCreate_Landroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedInstanceState" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="savedInstanceState">If the fragment is being re-created from
 a previous saved state, this is the state.
</param>
        <summary>Called to do initial creation of a fragment.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called to do initial creation of a fragment.  This is called after
 <c><see cref="M:Android.Support.V4.App.Fragment.OnAttach(Android.App.Activity)" /></c> and before
 <c><see cref="M:Android.Support.V4.App.Fragment.OnCreateView(Android.Views.LayoutInflater, Android.Views.ViewGroup, Android.Views.ViewGroup)" /></c>.
 
 </para>
          <para tool="javadoc-to-mdoc">Note that this can be called while the fragment's activity is
 still in the process of being created.  As such, you can not rely
 on things like the activity's content view hierarchy being initialized
 at this point.  If you want to do work once the activity itself is
 created, see <c><see cref="M:Android.Support.V4.App.Fragment.OnActivityCreated(Android.OS.Bundle)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#onCreate(android.os.Bundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateAnimation">
      <MemberSignature Language="C#" Value="public virtual Android.Views.Animations.Animation OnCreateAnimation (int transit, bool enter, int nextAnim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.Animations.Animation OnCreateAnimation(int32 transit, bool enter, int32 nextAnim) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onCreateAnimation", "(IZI)Landroid/view/animation/Animation;", "GetOnCreateAnimation_IZIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Animations.Animation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transit" Type="System.Int32" />
        <Parameter Name="enter" Type="System.Boolean" />
        <Parameter Name="nextAnim" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="transit">To be added.</param>
        <param name="enter">To be added.</param>
        <param name="nextAnim">To be added.</param>
        <summary>Called when a fragment loads an animation.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when a fragment loads an animation.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#onCreateAnimation(int, boolean, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateContextMenu">
      <MemberSignature Language="C#" Value="public virtual void OnCreateContextMenu (Android.Views.IContextMenu menu, Android.Views.View v, Android.Views.IContextMenuContextMenuInfo menuInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCreateContextMenu(class Android.Views.IContextMenu menu, class Android.Views.View v, class Android.Views.IContextMenuContextMenuInfo menuInfo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onCreateContextMenu", "(Landroid/view/ContextMenu;Landroid/view/View;Landroid/view/ContextMenu$ContextMenuInfo;)V", "GetOnCreateContextMenu_Landroid_view_ContextMenu_Landroid_view_View_Landroid_view_ContextMenu_ContextMenuInfo_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menu" Type="Android.Views.IContextMenu" />
        <Parameter Name="v" Type="Android.Views.View" />
        <Parameter Name="menuInfo" Type="Android.Views.IContextMenuContextMenuInfo" />
      </Parameters>
      <Docs>
        <param name="menu">The context menu that is being built</param>
        <param name="v">The view for which the context menu is being built</param>
        <param name="menuInfo">Extra information about the item for which the
            context menu should be shown. This information will vary
            depending on the class of v.
</param>
        <summary>Called when a context menu for the <c>view</c> is about to be shown.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when a context menu for the <c>view</c> is about to be shown.
 Unlike <c><see cref="M:Android.Support.V4.App.Fragment.OnCreateOptionsMenu(Android.Views.IMenu, Android.Views.MenuInflater)" /></c>, this will be called every
 time the context menu is about to be shown and should be populated for
 the view (or item inside the view for <c><see cref="T:Android.Widget.AdapterView" /></c> subclasses,
 this can be found in the <c>menuInfo</c>)).
 </para>
          <para tool="javadoc-to-mdoc">
 Use <c><see cref="M:Android.Support.V4.App.Fragment.OnContextItemSelected(Android.Views.IMenuItem)" /></c> to know when an
 item has been selected.
 </para>
          <para tool="javadoc-to-mdoc">
 The default implementation calls up to
 <c><see cref="M:Android.App.Activity.OnCreateContextMenu(Android.Views.IContextMenu, Android.Views.View, Android.Views.View)" /></c>, though
 you can not call this implementation if you don't want that behavior.
 </para>
          <para tool="javadoc-to-mdoc">
 It is not safe to hold onto the context menu after this method returns.
 Called when the context menu for this view is being built. It is not
 safe to hold onto the menu after this method returns.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu.ContextMenuInfo)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateOptionsMenu">
      <MemberSignature Language="C#" Value="public virtual void OnCreateOptionsMenu (Android.Views.IMenu menu, Android.Views.MenuInflater inflater);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCreateOptionsMenu(class Android.Views.IMenu menu, class Android.Views.MenuInflater inflater) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onCreateOptionsMenu", "(Landroid/view/Menu;Landroid/view/MenuInflater;)V", "GetOnCreateOptionsMenu_Landroid_view_Menu_Landroid_view_MenuInflater_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menu" Type="Android.Views.IMenu" />
        <Parameter Name="inflater" Type="Android.Views.MenuInflater" />
      </Parameters>
      <Docs>
        <param name="menu">The options menu in which you place your items.</param>
        <param name="inflater">To be added.</param>
        <summary>Initialize the contents of the Activity's standard options menu.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Initialize the contents of the Activity's standard options menu.  You
 should place your menu items in to <format type="text/html"><var>menu</var></format>.  For this method
 to be called, you must have first called <c><see cref="M:Android.Support.V4.App.Fragment.SetHasOptionsMenu(System.Boolean)" /></c>.  See
 <c><see cref="M:Android.App.Activity.OnCreateOptionsMenu(Android.Views.IMenu)" /></c>
 for more information.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#onCreateOptionsMenu(android.view.Menu, android.view.MenuInflater)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <altmember cref="M:Android.Support.V4.App.Fragment.SetHasOptionsMenu(System.Boolean)" />
        <altmember cref="M:Android.Support.V4.App.Fragment.OnPrepareOptionsMenu(Android.Views.IMenu)" />
        <altmember cref="M:Android.Support.V4.App.Fragment.OnOptionsItemSelected(Android.Views.IMenuItem)" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateView">
      <MemberSignature Language="C#" Value="public virtual Android.Views.View OnCreateView (Android.Views.LayoutInflater inflater, Android.Views.ViewGroup container, Android.OS.Bundle savedInstanceState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.View OnCreateView(class Android.Views.LayoutInflater inflater, class Android.Views.ViewGroup container, class Android.OS.Bundle savedInstanceState) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onCreateView", "(Landroid/view/LayoutInflater;Landroid/view/ViewGroup;Landroid/os/Bundle;)Landroid/view/View;", "GetOnCreateView_Landroid_view_LayoutInflater_Landroid_view_ViewGroup_Landroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inflater" Type="Android.Views.LayoutInflater" />
        <Parameter Name="container" Type="Android.Views.ViewGroup" />
        <Parameter Name="savedInstanceState" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="inflater">The LayoutInflater object that can be used to inflate
 any views in the fragment,</param>
        <param name="container">If non-null, this is the parent view that the fragment's
 UI should be attached to.  The fragment should not add the view itself,
 but this can be used to generate the LayoutParams of the view.</param>
        <param name="savedInstanceState">If non-null, this fragment is being re-constructed
 from a previous saved state as given here.</param>
        <summary>Called to have the fragment instantiate its user interface view.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Called to have the fragment instantiate its user interface view.
 This is optional, and non-graphical fragments can return null (which
 is the default implementation).  This will be called between
 <c><see cref="M:Android.Support.V4.App.Fragment.OnCreate(Android.OS.Bundle)" /></c> and <c><see cref="M:Android.Support.V4.App.Fragment.OnActivityCreated(Android.OS.Bundle)" /></c>.
 
 </para>
          <para tool="javadoc-to-mdoc">If you return a View from here, you will later be called in
 <c><see cref="M:Android.Support.V4.App.Fragment.OnDestroyView" /></c> when the view is being released.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnDestroy">
      <MemberSignature Language="C#" Value="public virtual void OnDestroy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDestroy() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onDestroy", "()V", "GetOnDestroyHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when the fragment is no longer in use.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when the fragment is no longer in use.  This is called
 after <c><see cref="M:Android.Support.V4.App.Fragment.OnStop" /></c> and before <c><see cref="M:Android.Support.V4.App.Fragment.OnDetach" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#onDestroy()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnDestroyOptionsMenu">
      <MemberSignature Language="C#" Value="public virtual void OnDestroyOptionsMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDestroyOptionsMenu() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onDestroyOptionsMenu", "()V", "GetOnDestroyOptionsMenuHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when this fragment's option menu items are no longer being
 included in the overall options menu.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when this fragment's option menu items are no longer being
 included in the overall options menu.  Receiving this call means that
 the menu needed to be rebuilt, but this fragment's items were not
 included in the newly built menu (its <c><see cref="M:Android.Support.V4.App.Fragment.OnCreateOptionsMenu(Android.Views.IMenu, Android.Views.MenuInflater)" /></c>
 was not called).
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#onDestroyOptionsMenu()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnDestroyView">
      <MemberSignature Language="C#" Value="public virtual void OnDestroyView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDestroyView() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onDestroyView", "()V", "GetOnDestroyViewHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when the view previously created by <c><see cref="M:Android.Support.V4.App.Fragment.OnCreateView(Android.Views.LayoutInflater, Android.Views.ViewGroup, Android.Views.ViewGroup)" /></c> has
 been detached from the fragment.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when the view previously created by <c><see cref="M:Android.Support.V4.App.Fragment.OnCreateView(Android.Views.LayoutInflater, Android.Views.ViewGroup, Android.Views.ViewGroup)" /></c> has
 been detached from the fragment.  The next time the fragment needs
 to be displayed, a new view will be created.  This is called
 after <c><see cref="M:Android.Support.V4.App.Fragment.OnStop" /></c> and before <c><see cref="M:Android.Support.V4.App.Fragment.OnDestroy" /></c>.  It is called
 <i>regardless</i> of whether <c><see cref="M:Android.Support.V4.App.Fragment.OnCreateView(Android.Views.LayoutInflater, Android.Views.ViewGroup, Android.Views.ViewGroup)" /></c> returned a
 non-null view.  Internally it is called after the view's state has
 been saved but before it has been removed from its parent.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#onDestroyView()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnDetach">
      <MemberSignature Language="C#" Value="public virtual void OnDetach ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDetach() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onDetach", "()V", "GetOnDetachHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when the fragment is no longer attached to its activity.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when the fragment is no longer attached to its activity.  This
 is called after <c><see cref="M:Android.Support.V4.App.Fragment.OnDestroy" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#onDetach()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnHiddenChanged">
      <MemberSignature Language="C#" Value="public virtual void OnHiddenChanged (bool hidden);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnHiddenChanged(bool hidden) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onHiddenChanged", "(Z)V", "GetOnHiddenChanged_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hidden" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="hidden">True if the fragment is now hidden, false if it is not
 visible.
</param>
        <summary>Called when the hidden state (as returned by <c><see cref="P:Android.Support.V4.App.Fragment.IsHidden" /></c> of
 the fragment has changed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when the hidden state (as returned by <c><see cref="P:Android.Support.V4.App.Fragment.IsHidden" /></c> of
 the fragment has changed.  Fragments start out not hidden; this will
 be called whenever the fragment changes state from that.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#onHiddenChanged(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnInflate">
      <MemberSignature Language="C#" Value="public virtual void OnInflate (Android.App.Activity activity, Android.Util.IAttributeSet attrs, Android.OS.Bundle savedInstanceState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnInflate(class Android.App.Activity activity, class Android.Util.IAttributeSet attrs, class Android.OS.Bundle savedInstanceState) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onInflate", "(Landroid/app/Activity;Landroid/util/AttributeSet;Landroid/os/Bundle;)V", "GetOnInflate_Landroid_app_Activity_Landroid_util_AttributeSet_Landroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Android.App.Activity" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="savedInstanceState" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="activity">The Activity that is inflating this fragment.</param>
        <param name="attrs">The attributes at the tag where the fragment is
 being created.</param>
        <param name="savedInstanceState">If the fragment is being re-created from
 a previous saved state, this is the state.
</param>
        <summary>Called when a fragment is being created as part of a view layout
 inflation, typically from setting the content view of an activity.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when a fragment is being created as part of a view layout
 inflation, typically from setting the content view of an activity.  This
 may be called immediately after the fragment is created from a <format type="text/html"><fragment>
 tag in a layout file.  Note this is <i>before</i> the fragment's
 <c><see cref="M:Android.Support.V4.App.Fragment.OnAttach(Android.App.Activity)" /></c> has been called; all you should do here is
 parse the attributes and save them away.
 
 <example><code lang="C#">public class MyFragment : Fragment
{
  string mLabel;

  /**
   * Create a new instance of MyFragment that will be initialized
   * with the given arguments.
   **/
  static MyFragment NewInstance(ICharSequence label) {
    MyFragment f = new MyFragment();
    Bundle b = new Bundle();
    b.PutCharSequence("label", label);
    f.Arguments =  b;
    return f;
  }

  /**
   * Parse attributes during inflation from a view hierarchy into the
   * arguments we handle.
   */
  public override void OnInflate(Activity activity, IAttributeSet attrs, Bundle bundle) {
    base.OnInflate(activity, attrs, bundle);


    TypedArray a = activity.ObtainStyledAttributes(attrs, Resource.styleable.FragmentArguments);
    mLabel = a.getText(Resource.styleable.FragmentArguments_android_label);
    a.Recycle();
  }

  /**
   * During creation, if arguments have been supplied to the fragment
   * then parse those out.
   */

  public override void OnCreate(Bundle bundle) {
    base.OnCreate(bundle);

    Bundle args = this.Arguments;
    if (args != null) {
      mLabel = args.GetCharSequence("label", mLabel);
    }

  }

  /**
   * Create the view for this fragment, using the arguments given to it.
   */

  public override View OnCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
    View v = inflater.Inflate(Resource.Layout.hello_world, container, false);
    View tv = v.FindViewById(Resource.Id.text);
    ((TextView)tv).SetText(mLabel != null ? mLabel : "(no label)", TextView.BufferType.Editable);
    tv.SetBackgroundDrawable(this.Resources.GetDrawable(Android.Resource.Drawable.gallery_thumb));
    return v;

  }

}</code></example><example><code lang="XML">&lt;declare-styleable name="FragmentArguments"&gt;
    &lt;attr name="android:label" /&gt;
&lt;/declare-styleable&gt;</code></example><example><code lang="XML">&lt;fragment class="com.example.android.apis.app.FragmentArguments$MyFragment"
        android:id="@+id/embedded"
        android:layout_width="0px" android:layout_height="wrap_content"
        android:layout_weight="1"
        android:label="@string/fragment_arguments_embedded" /&gt;</code></example><example><code lang="C#">protected override void OnCreate(Bundle savedInstanceState) {
  base.OnCreate(savedInstanceState);
  SetContentView(Resource.Layout.fragment_arguments);

  if (bundle == null) {
    // First-time init; create fragment to embed in activity.
    FragmentTransaction ft = this.FragmentManager.BeginTransaction();
    Fragment newFragment = MyFragment.NewInstance("From Arguments");
    ft.Add(Resource.Id.created, newFragment);
    ft.Commit();
  }
}</code></example></fragment></format></para>
          <para tool="javadoc-to-mdoc">This is called every time the fragment is inflated, even if it is
 being inflated into a new instance with saved state.  It typically makes
 sense to re-parse the parameters each time, to allow them to change with
 different configurations.</para>
          <para tool="javadoc-to-mdoc">Here is a typical implementation of a fragment that can take parameters
 both through attributes supplied here as well from <c><see cref="P:Android.Support.V4.App.Fragment.Arguments" /></c>:</para>
          <para tool="javadoc-to-mdoc">Note that parsing the XML attributes uses a "styleable" resource.  The
 declaration for the styleable used here is:</para>
          <para tool="javadoc-to-mdoc">The fragment can then be declared within its activity's content layout
 through a tag like this:</para>
          <para tool="javadoc-to-mdoc">This fragment can also be created dynamically from arguments given
 at runtime in the arguments Bundle; here is an example of doing so at
 creation of the containing activity:</para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#onInflate(android.app.Activity, android.util.AttributeSet, android.os.Bundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnLowMemory">
      <MemberSignature Language="C#" Value="public virtual void OnLowMemory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnLowMemory() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onLowMemory", "()V", "GetOnLowMemoryHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This is called when the overall system is running low on memory, and
 would like actively running process to try to tighten their belt.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This is called when the overall system is running low on memory, and
 would like actively running process to try to tighten their belt.  While
 the exact point at which this will be called is not defined, generally
 it will happen around the time all background process have been killed,
 that is before reaching the point of killing processes hosting
 service and foreground UI that we would like to avoid killing.
 
 </para>
          <para tool="javadoc-to-mdoc">Applications that want to be nice can implement this method to release
 any caches or other unnecessary resources they may be holding on to.
 The system will perform a gc for you after returning from this method.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#onLowMemory()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnOptionsItemSelected">
      <MemberSignature Language="C#" Value="public virtual bool OnOptionsItemSelected (Android.Views.IMenuItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnOptionsItemSelected(class Android.Views.IMenuItem item) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onOptionsItemSelected", "(Landroid/view/MenuItem;)Z", "GetOnOptionsItemSelected_Landroid_view_MenuItem_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Android.Views.IMenuItem" />
      </Parameters>
      <Docs>
        <param name="item">The menu item that was selected.</param>
        <summary>This hook is called whenever an item in your options menu is selected.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">This hook is called whenever an item in your options menu is selected.
 The default implementation simply returns false to have the normal
 processing happen (calling the item's Runnable or sending a message to
 its Handler as appropriate).  You can use this method for any items
 for which you would like to do processing without those other
 facilities.
 
 </para>
          <para tool="javadoc-to-mdoc">Derived classes should call through to the base class for it to
 perform the default menu handling.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#onOptionsItemSelected(android.view.MenuItem)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <altmember cref="M:Android.Support.V4.App.Fragment.OnCreateOptionsMenu(Android.Views.IMenu, Android.Views.MenuInflater)" />
      </Docs>
    </Member>
    <Member MemberName="OnOptionsMenuClosed">
      <MemberSignature Language="C#" Value="public virtual void OnOptionsMenuClosed (Android.Views.IMenu menu);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnOptionsMenuClosed(class Android.Views.IMenu menu) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onOptionsMenuClosed", "(Landroid/view/Menu;)V", "GetOnOptionsMenuClosed_Landroid_view_Menu_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menu" Type="Android.Views.IMenu" />
      </Parameters>
      <Docs>
        <param name="menu">The options menu as last shown or first initialized by
             onCreateOptionsMenu().
</param>
        <summary>This hook is called whenever the options menu is being closed (either by the user canceling
 the menu with the back/menu button, or when an item is selected).</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This hook is called whenever the options menu is being closed (either by the user canceling
 the menu with the back/menu button, or when an item is selected).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#onOptionsMenuClosed(android.view.Menu)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnPause">
      <MemberSignature Language="C#" Value="public virtual void OnPause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPause() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onPause", "()V", "GetOnPauseHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when the Fragment is no longer resumed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when the Fragment is no longer resumed.  This is generally
 tied to <c><see cref="M:Android.App.Activity.OnPause" /></c> of the containing
 Activity's lifecycle.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#onPause()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnPrepareOptionsMenu">
      <MemberSignature Language="C#" Value="public virtual void OnPrepareOptionsMenu (Android.Views.IMenu menu);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPrepareOptionsMenu(class Android.Views.IMenu menu) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onPrepareOptionsMenu", "(Landroid/view/Menu;)V", "GetOnPrepareOptionsMenu_Landroid_view_Menu_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menu" Type="Android.Views.IMenu" />
      </Parameters>
      <Docs>
        <param name="menu">The options menu as last shown or first initialized by
             onCreateOptionsMenu().</param>
        <summary>Prepare the Screen's standard options menu to be displayed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Prepare the Screen's standard options menu to be displayed.  This is
 called right before the menu is shown, every time it is shown.  You can
 use this method to efficiently enable/disable items or otherwise
 dynamically modify the contents.  See
 <c><see cref="M:Android.App.Activity.OnPrepareOptionsMenu(Android.Views.IMenu)" /></c>
 for more information.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#onPrepareOptionsMenu(android.view.Menu)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <altmember cref="M:Android.Support.V4.App.Fragment.SetHasOptionsMenu(System.Boolean)" />
        <altmember cref="M:Android.Support.V4.App.Fragment.OnCreateOptionsMenu(Android.Views.IMenu, Android.Views.MenuInflater)" />
      </Docs>
    </Member>
    <Member MemberName="OnResume">
      <MemberSignature Language="C#" Value="public virtual void OnResume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnResume() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onResume", "()V", "GetOnResumeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when the fragment is visible to the user and actively running.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when the fragment is visible to the user and actively running.
 This is generally
 tied to <c><see cref="M:Android.App.Activity.OnResume" /></c> of the containing
 Activity's lifecycle.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#onResume()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnSaveInstanceState">
      <MemberSignature Language="C#" Value="public virtual void OnSaveInstanceState (Android.OS.Bundle outState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSaveInstanceState(class Android.OS.Bundle outState) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onSaveInstanceState", "(Landroid/os/Bundle;)V", "GetOnSaveInstanceState_Landroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outState" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="outState">Bundle in which to place your saved state.
</param>
        <summary>Called to ask the fragment to save its current dynamic state, so it
 can later be reconstructed in a new instance of its process is
 restarted.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called to ask the fragment to save its current dynamic state, so it
 can later be reconstructed in a new instance of its process is
 restarted.  If a new instance of the fragment later needs to be
 created, the data you place in the Bundle here will be available
 in the Bundle given to <c><see cref="M:Android.Support.V4.App.Fragment.OnCreate(Android.OS.Bundle)" /></c>,
 <c><see cref="M:Android.Support.V4.App.Fragment.OnCreateView(Android.Views.LayoutInflater, Android.Views.ViewGroup, Android.Views.ViewGroup)" /></c>, and
 <c><see cref="M:Android.Support.V4.App.Fragment.OnActivityCreated(Android.OS.Bundle)" /></c>.

 </para>
          <para tool="javadoc-to-mdoc">This corresponds to <c><see cref="M:Android.App.Activity.OnSaveInstanceState(Android.OS.Bundle)" /></c> and most of the discussion there
 applies here as well.  Note however: <i>this method may be called
 at any time before <c><see cref="M:Android.Support.V4.App.Fragment.OnDestroy" /></c></i>.  There are many situations
 where a fragment may be mostly torn down (such as when placed on the
 back stack with no UI showing), but its state will not be saved until
 its owning activity actually needs to save its state.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#onSaveInstanceState(android.os.Bundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnStart">
      <MemberSignature Language="C#" Value="public virtual void OnStart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnStart() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onStart", "()V", "GetOnStartHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when the Fragment is visible to the user.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when the Fragment is visible to the user.  This is generally
 tied to <c><see cref="M:Android.App.Activity.OnStart" /></c> of the containing
 Activity's lifecycle.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#onStart()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnStop">
      <MemberSignature Language="C#" Value="public virtual void OnStop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnStop() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onStop", "()V", "GetOnStopHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when the Fragment is no longer started.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when the Fragment is no longer started.  This is generally
 tied to <c><see cref="M:Android.App.Activity.OnStop" /></c> of the containing
 Activity's lifecycle.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#onStop()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnViewCreated">
      <MemberSignature Language="C#" Value="public virtual void OnViewCreated (Android.Views.View view, Android.OS.Bundle savedInstanceState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnViewCreated(class Android.Views.View view, class Android.OS.Bundle savedInstanceState) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onViewCreated", "(Landroid/view/View;Landroid/os/Bundle;)V", "GetOnViewCreated_Landroid_view_View_Landroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="savedInstanceState" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="view">The View returned by <c><see cref="M:Android.Support.V4.App.Fragment.OnCreateView(Android.Views.LayoutInflater, Android.Views.ViewGroup, Android.Views.ViewGroup)" /></c>.</param>
        <param name="savedInstanceState">If non-null, this fragment is being re-constructed
 from a previous saved state as given here.
</param>
        <summary>Called immediately after <c><see cref="M:Android.Support.V4.App.Fragment.OnCreateView(Android.Views.LayoutInflater, Android.Views.ViewGroup, Android.Views.ViewGroup)" /></c>
 has returned, but before any saved state has been restored in to the view.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called immediately after <c><see cref="M:Android.Support.V4.App.Fragment.OnCreateView(Android.Views.LayoutInflater, Android.Views.ViewGroup, Android.Views.ViewGroup)" /></c>
 has returned, but before any saved state has been restored in to the view.
 This gives subclasses a chance to initialize themselves once
 they know their view hierarchy has been completely created.  The fragment's
 view hierarchy is not however attached to its parent at this point.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#onViewCreated(android.view.View, android.os.Bundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnViewStateRestored">
      <MemberSignature Language="C#" Value="public virtual void OnViewStateRestored (Android.OS.Bundle savedInstanceState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnViewStateRestored(class Android.OS.Bundle savedInstanceState) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onViewStateRestored", "(Landroid/os/Bundle;)V", "GetOnViewStateRestored_Landroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedInstanceState" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="savedInstanceState">If the fragment is being re-created from
 a previous saved state, this is the state.
</param>
        <summary>Called when all saved state has been restored into the view hierarchy
 of the fragment.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when all saved state has been restored into the view hierarchy
 of the fragment.  This can be used to do initialization based on saved
 state that you are letting the view hierarchy track itself, such as
 whether check box widgets are currently checked.  This is called
 after <c><see cref="M:Android.Support.V4.App.Fragment.OnActivityCreated(Android.OS.Bundle)" /></c> and before
 <c><see cref="M:Android.Support.V4.App.Fragment.OnStart" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#onViewStateRestored(android.os.Bundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="ParentFragment">
      <MemberSignature Language="C#" Value="public Android.Support.V4.App.Fragment ParentFragment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Support.V4.App.Fragment ParentFragment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getParentFragment", "()Landroid/support/v4/app/Fragment;", "GetGetParentFragmentHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Support.V4.App.Fragment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the parent Fragment containing this Fragment.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the parent Fragment containing this Fragment.  If this Fragment
 is attached directly to an Activity, returns null.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#getParentFragment()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="RegisterForContextMenu">
      <MemberSignature Language="C#" Value="public virtual void RegisterForContextMenu (Android.Views.View view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterForContextMenu(class Android.Views.View view) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerForContextMenu", "(Landroid/view/View;)V", "GetRegisterForContextMenu_Landroid_view_View_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="view">The view that should show a context menu.
</param>
        <summary>Registers a context menu to be shown for the given view (multiple views
 can show the context menu).</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Registers a context menu to be shown for the given view (multiple views
 can show the context menu). This method will set the
 <c><see cref="T:Android.Views.View+IOnCreateContextMenuListener" /></c> on the view to this fragment, so
 <c><see cref="M:Android.Support.V4.App.Fragment.OnCreateContextMenu(Android.Views.IContextMenu, Android.Views.View, Android.Views.View)" /></c> will be
 called when it is time to show the context menu.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#registerForContextMenu(android.view.View)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <altmember cref="M:Android.Support.V4.App.Fragment.UnregisterForContextMenu(Android.Views.View)" />
      </Docs>
    </Member>
    <Member MemberName="Resources">
      <MemberSignature Language="C#" Value="public Android.Content.Res.Resources Resources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.Res.Resources Resources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getResources", "()Landroid/content/res/Resources;", "GetGetResourcesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.Resources</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return <c>getActivity().getResources()</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return <c>getActivity().getResources()</c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#getResources()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="RetainInstance">
      <MemberSignature Language="C#" Value="public bool RetainInstance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RetainInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getRetainInstance", "()Z", "GetGetRetainInstanceHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setRetainInstance", "(Z)V", "GetSetRetainInstance_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#getRetainInstance()" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#setRetainInstance(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Control whether a fragment instance is retained across Activity
 re-creation (such as from a configuration change).  This can only
 be used with fragments not in the back stack.  If set, the fragment
 lifecycle will be slightly different when an activity is recreated:
 <list type="bullet"><item><term><c><see cref="M:Android.Support.V4.App.Fragment.OnDestroy" /></c> will not be called (but <c><see cref="M:Android.Support.V4.App.Fragment.OnDetach" /></c> still
 will be, because the fragment is being detached from its current activity).
 </term></item><item><term><c><see cref="M:Android.Support.V4.App.Fragment.OnCreate(Android.OS.Bundle)" /></c> will not be called since the fragment
 is not being re-created.
 </term></item><item><term><c><see cref="M:Android.Support.V4.App.Fragment.OnAttach(Android.App.Activity)" /></c> and <c><see cref="M:Android.Support.V4.App.Fragment.OnActivityCreated(Android.OS.Bundle)" /></c><format type="text/html"><b>will</b></format>
 still be called.
 </term></item></list></para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="SetHasOptionsMenu">
      <MemberSignature Language="C#" Value="public virtual void SetHasOptionsMenu (bool hasMenu);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetHasOptionsMenu(bool hasMenu) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setHasOptionsMenu", "(Z)V", "GetSetHasOptionsMenu_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hasMenu" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="hasMenu">If true, the fragment has menu items to contribute.
</param>
        <summary>Report that this fragment would like to participate in populating
 the options menu by receiving a call to <c><see cref="M:Android.Support.V4.App.Fragment.OnCreateOptionsMenu(Android.Views.IMenu, Android.Views.MenuInflater)" /></c>
 and related methods.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Report that this fragment would like to participate in populating
 the options menu by receiving a call to <c><see cref="M:Android.Support.V4.App.Fragment.OnCreateOptionsMenu(Android.Views.IMenu, Android.Views.MenuInflater)" /></c>
 and related methods.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#setHasOptionsMenu(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="SetInitialSavedState">
      <MemberSignature Language="C#" Value="public virtual void SetInitialSavedState (Android.Support.V4.App.Fragment.SavedState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInitialSavedState(class Android.Support.V4.App.Fragment/SavedState state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setInitialSavedState", "(Landroid/support/v4/app/Fragment$SavedState;)V", "GetSetInitialSavedState_Landroid_support_v4_app_Fragment_SavedState_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Android.Support.V4.App.Fragment+SavedState" />
      </Parameters>
      <Docs>
        <param name="state">The state the fragment should be restored from.
</param>
        <summary>Set the initial saved state that this Fragment should restore itself
 from when first being constructed, as returned by
 <c><see cref="M:Android.Support.V4.App.FragmentManager.SaveFragmentInstanceState(Android.Support.V4.App.Fragment)" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the initial saved state that this Fragment should restore itself
 from when first being constructed, as returned by
 <c><see cref="M:Android.Support.V4.App.FragmentManager.SaveFragmentInstanceState(Android.Support.V4.App.Fragment)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#setInitialSavedState(android.support.v4.app.Fragment.SavedState)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="SetMenuVisibility">
      <MemberSignature Language="C#" Value="public virtual void SetMenuVisibility (bool menuVisible);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMenuVisibility(bool menuVisible) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setMenuVisibility", "(Z)V", "GetSetMenuVisibility_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menuVisible" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="menuVisible">The default is true, meaning the fragment's menu will
 be shown as usual.  If false, the user will not see the menu.
</param>
        <summary>Set a hint for whether this fragment's menu should be visible.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set a hint for whether this fragment's menu should be visible.  This
 is useful if you know that a fragment has been placed in your view
 hierarchy so that the user can not currently seen it, so any menu items
 it has should also not be shown.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#setMenuVisibility(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="SetTargetFragment">
      <MemberSignature Language="C#" Value="public virtual void SetTargetFragment (Android.Support.V4.App.Fragment fragment, int requestCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTargetFragment(class Android.Support.V4.App.Fragment fragment, int32 requestCode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTargetFragment", "(Landroid/support/v4/app/Fragment;I)V", "GetSetTargetFragment_Landroid_support_v4_app_Fragment_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fragment" Type="Android.Support.V4.App.Fragment" />
        <Parameter Name="requestCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fragment">The fragment that is the target of this one.</param>
        <param name="requestCode">Optional request code, for convenience if you
 are going to call back with <c><see cref="M:Android.Support.V4.App.Fragment.OnActivityResult(System.Int32, System.Int32, System.Int32)" /></c>.
</param>
        <summary>Optional target for this fragment.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Optional target for this fragment.  This may be used, for example,
 if this fragment is being started by another, and when done wants to
 give a result back to the first.  The target set here is retained
 across instances via <c><see cref="M:Android.Support.V4.App.FragmentManager.PutFragment(Android.OS.Bundle, System.String, System.String)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#setTargetFragment(android.support.v4.app.Fragment, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="StartActivity">
      <MemberSignature Language="C#" Value="public virtual void StartActivity (Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartActivity(class Android.Content.Intent intent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startActivity", "(Landroid/content/Intent;)V", "GetStartActivity_Landroid_content_Intent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="intent">To be added.</param>
        <summary>Call <c><see cref="M:Android.Content.ContextWrapper.StartActivity(Android.Content.Intent)" /></c> on the fragment's
 containing Activity.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Call <c><see cref="M:Android.Content.ContextWrapper.StartActivity(Android.Content.Intent)" /></c> on the fragment's
 containing Activity.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#startActivity(android.content.Intent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="StartActivityForResult">
      <MemberSignature Language="C#" Value="public virtual void StartActivityForResult (Android.Content.Intent intent, int requestCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartActivityForResult(class Android.Content.Intent intent, int32 requestCode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startActivityForResult", "(Landroid/content/Intent;I)V", "GetStartActivityForResult_Landroid_content_Intent_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="requestCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="intent">To be added.</param>
        <param name="requestCode">To be added.</param>
        <summary>Call <c><see cref="M:Android.App.Activity.StartActivityForResult(Android.Content.Intent, System.Int32)" /></c> on the fragment's
 containing Activity.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Call <c><see cref="M:Android.App.Activity.StartActivityForResult(Android.Content.Intent, System.Int32)" /></c> on the fragment's
 containing Activity.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#startActivityForResult(android.content.Intent, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public string Tag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTag", "()Ljava/lang/String;", "GetGetTagHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the tag name of the fragment, if specified.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the tag name of the fragment, if specified.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#getTag()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="TargetFragment">
      <MemberSignature Language="C#" Value="public Android.Support.V4.App.Fragment TargetFragment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Support.V4.App.Fragment TargetFragment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTargetFragment", "()Landroid/support/v4/app/Fragment;", "GetGetTargetFragmentHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Support.V4.App.Fragment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the target fragment set by <c><see cref="M:Android.Support.V4.App.Fragment.SetTargetFragment(Android.Support.V4.App.Fragment, System.Int32)" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the target fragment set by <c><see cref="M:Android.Support.V4.App.Fragment.SetTargetFragment(Android.Support.V4.App.Fragment, System.Int32)" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#getTargetFragment()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="TargetRequestCode">
      <MemberSignature Language="C#" Value="public int TargetRequestCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TargetRequestCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTargetRequestCode", "()I", "GetGetTargetRequestCodeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the target request code set by <c><see cref="M:Android.Support.V4.App.Fragment.SetTargetFragment(Android.Support.V4.App.Fragment, System.Int32)" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the target request code set by <c><see cref="M:Android.Support.V4.App.Fragment.SetTargetFragment(Android.Support.V4.App.Fragment, System.Int32)" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#getTargetRequestCode()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterForContextMenu">
      <MemberSignature Language="C#" Value="public virtual void UnregisterForContextMenu (Android.Views.View view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterForContextMenu(class Android.Views.View view) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unregisterForContextMenu", "(Landroid/view/View;)V", "GetUnregisterForContextMenu_Landroid_view_View_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="view">The view that should stop showing a context menu.
</param>
        <summary>Prevents a context menu to be shown for the given view.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Prevents a context menu to be shown for the given view. This method will
 remove the <c><see cref="T:Android.Views.View+IOnCreateContextMenuListener" /></c> on the view.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#unregisterForContextMenu(android.view.View)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <altmember cref="M:Android.Support.V4.App.Fragment.RegisterForContextMenu(Android.Views.View)" />
      </Docs>
    </Member>
    <Member MemberName="UserVisibleHint">
      <MemberSignature Language="C#" Value="public virtual bool UserVisibleHint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UserVisibleHint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getUserVisibleHint", "()Z", "GetGetUserVisibleHintHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setUserVisibleHint", "(Z)V", "GetSetUserVisibleHint_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#getUserVisibleHint()" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#setUserVisibleHint(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set a hint to the system about whether this fragment's UI is currently visible
 to the user. This hint defaults to true and is persistent across fragment instance
 state save and restore.

 </para>
          <para tool="javadoc-to-mdoc">An app may set this to false to indicate that the fragment's UI is
 scrolled out of visibility or is otherwise not directly visible to the user.
 This may be used by the system to prioritize operations such as fragment lifecycle updates
 or loader ordering behavior.</para>
        </remarks>
        <since version="" />
        <altmember cref="P:Android.Support.V4.App.Fragment.UserVisibleHint" />
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public virtual Android.Views.View View { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.View View" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getView", "()Landroid/view/View;", "GetGetViewHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the root view for the fragment's layout (the one returned by <c><see cref="M:Android.Support.V4.App.Fragment.OnCreateView(Android.Views.LayoutInflater, Android.Views.ViewGroup, Android.Views.ViewGroup)" /></c>),
 if provided.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the root view for the fragment's layout (the one returned by <c><see cref="M:Android.Support.V4.App.Fragment.OnCreateView(Android.Views.LayoutInflater, Android.Views.ViewGroup, Android.Views.ViewGroup)" /></c>),
 if provided.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/Fragment.html#getView()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
  </Members>
</Type>
