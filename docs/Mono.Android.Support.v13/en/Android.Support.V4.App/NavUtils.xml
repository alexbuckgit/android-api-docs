<Type Name="NavUtils" FullName="Android.Support.V4.App.NavUtils">
  <TypeSignature Language="C#" Value="public class NavUtils : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NavUtils extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android.Support.v13</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/support/v4/app/NavUtils", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>NavUtils provides helper functionality for applications implementing
 recommended Android UI navigation patterns.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">NavUtils provides helper functionality for applications implementing
 recommended Android UI navigation patterns. For information about recommended
 navigation patterns see
 <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/fundamentals/tasks-and-back-stack.html">Tasks and Back Stack</a></format>
 from the developer guide and <format type="text/html"><a href="http://developer.android.com/reference/../design/patterns/navigation.html">Navigation</a></format>
 from the design guide.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/support/v4/app/NavUtils.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NavUtils (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T}(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParentActivityIntent">
      <MemberSignature Language="C#" Value="public static Android.Content.Intent GetParentActivityIntent (Android.App.Activity sourceActivity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Content.Intent GetParentActivityIntent(class Android.App.Activity sourceActivity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getParentActivityIntent", "(Landroid/app/Activity;)Landroid/content/Intent;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Intent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceActivity" Type="Android.App.Activity" />
      </Parameters>
      <Docs>
        <param name="sourceActivity">Activity to fetch a parent intent for</param>
        <summary>Obtain an <c><see cref="T:Android.Content.Intent" /></c> that will launch an explicit target activity
 specified by sourceActivity's <c><see cref="F:Android.Support.V4.App.NavUtils.ParentActivity" /></c> &lt;meta-data&gt;
 element in the application's manifest.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Obtain an <c><see cref="T:Android.Content.Intent" /></c> that will launch an explicit target activity
 specified by sourceActivity's <c><see cref="F:Android.Support.V4.App.NavUtils.ParentActivity" /></c> &lt;meta-data&gt;
 element in the application's manifest. If the device is running
 Jellybean or newer, the android:parentActivityName attribute will be preferred
 if it is present.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/NavUtils.html#getParentActivityIntent(android.app.Activity)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="GetParentActivityIntent">
      <MemberSignature Language="C#" Value="public static Android.Content.Intent GetParentActivityIntent (Android.Content.Context context, Android.Content.ComponentName componentName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Content.Intent GetParentActivityIntent(class Android.Content.Context context, class Android.Content.ComponentName componentName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getParentActivityIntent", "(Landroid/content/Context;Landroid/content/ComponentName;)Landroid/content/Intent;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Intent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="componentName" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="context">Context for looking up the activity component for the source activity</param>
        <param name="componentName">ComponentName for the source Activity</param>
        <summary>Obtain an <c><see cref="T:Android.Content.Intent" /></c> that will launch an explicit target activity
 specified by sourceActivityClass's <c><see cref="F:Android.Support.V4.App.NavUtils.ParentActivity" /></c> &lt;meta-data&gt;
 element in the application's manifest.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Obtain an <c><see cref="T:Android.Content.Intent" /></c> that will launch an explicit target activity
 specified by sourceActivityClass's <c><see cref="F:Android.Support.V4.App.NavUtils.ParentActivity" /></c> &lt;meta-data&gt;
 element in the application's manifest.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/NavUtils.html#getParentActivityIntent(android.content.Context, android.content.ComponentName)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <exception cref="T:Android.Content.PM.PackageManager+NameNotFoundException">if the ComponentName for sourceActivityClass is invalid
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetParentActivityIntent">
      <MemberSignature Language="C#" Value="public static Android.Content.Intent GetParentActivityIntent (Android.Content.Context context, Java.Lang.Class sourceActivityClass);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Content.Intent GetParentActivityIntent(class Android.Content.Context context, class Java.Lang.Class sourceActivityClass) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getParentActivityIntent", "(Landroid/content/Context;Ljava/lang/Class;)Landroid/content/Intent;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Intent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="sourceActivityClass" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="sourceActivityClass">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParentActivityName">
      <MemberSignature Language="C#" Value="public static string GetParentActivityName (Android.App.Activity sourceActivity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetParentActivityName(class Android.App.Activity sourceActivity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getParentActivityName", "(Landroid/app/Activity;)Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceActivity" Type="Android.App.Activity" />
      </Parameters>
      <Docs>
        <param name="sourceActivity">Activity to fetch a parent class name for</param>
        <summary>Return the fully qualified class name of sourceActivity's parent activity as specified by
 a <c><see cref="F:Android.Support.V4.App.NavUtils.ParentActivity" /></c> &lt;meta-data&gt; element within the activity element in
 the application's manifest.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the fully qualified class name of sourceActivity's parent activity as specified by
 a <c><see cref="F:Android.Support.V4.App.NavUtils.ParentActivity" /></c> &lt;meta-data&gt; element within the activity element in
 the application's manifest.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/NavUtils.html#getParentActivityName(android.app.Activity)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="GetParentActivityName">
      <MemberSignature Language="C#" Value="public static string GetParentActivityName (Android.Content.Context context, Android.Content.ComponentName componentName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetParentActivityName(class Android.Content.Context context, class Android.Content.ComponentName componentName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getParentActivityName", "(Landroid/content/Context;Landroid/content/ComponentName;)Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="componentName" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="context">Context for looking up the activity component for the source activity</param>
        <param name="componentName">ComponentName for the source Activity</param>
        <summary>Return the fully qualified class name of a source activity's parent activity as specified by
 a <c><see cref="F:Android.Support.V4.App.NavUtils.ParentActivity" /></c> &lt;meta-data&gt; element within the activity element in
 the application's manifest.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the fully qualified class name of a source activity's parent activity as specified by
 a <c><see cref="F:Android.Support.V4.App.NavUtils.ParentActivity" /></c> &lt;meta-data&gt; element within the activity element in
 the application's manifest. The source activity is provided by componentName.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/NavUtils.html#getParentActivityName(android.content.Context, android.content.ComponentName)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <exception cref="T:Android.Content.PM.PackageManager+NameNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="NavigateUpFromSameTask">
      <MemberSignature Language="C#" Value="public static void NavigateUpFromSameTask (Android.App.Activity sourceActivity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NavigateUpFromSameTask(class Android.App.Activity sourceActivity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("navigateUpFromSameTask", "(Landroid/app/Activity;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceActivity" Type="Android.App.Activity" />
      </Parameters>
      <Docs>
        <param name="sourceActivity">The current activity from which the user is attempting to navigate up
</param>
        <summary>Convenience method that is equivalent to calling
 <c><c><see cref="M:Android.Support.V4.App.NavUtils.NavigateUpTo(Android.App.Activity, Android.Content.Intent)" /></c>(sourceActivity,
 <c><see cref="M:Android.Support.V4.App.NavUtils.GetParentActivityIntent(Android.App.Activity)" /></c> (sourceActivity))</c>.
 sourceActivity will be finished by this call.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Convenience method that is equivalent to calling
 <c><c><see cref="M:Android.Support.V4.App.NavUtils.NavigateUpTo(Android.App.Activity, Android.Content.Intent)" /></c>(sourceActivity,
 <c><see cref="M:Android.Support.V4.App.NavUtils.GetParentActivityIntent(Android.App.Activity)" /></c> (sourceActivity))</c>.
 sourceActivity will be finished by this call.

 </para>
          <para tool="javadoc-to-mdoc">
            <i>Note:</i> This method should only be used when sourceActivity and the corresponding
 parent are within the same task. If up navigation should cross tasks in some cases, see
 <c><see cref="M:Android.Support.V4.App.NavUtils.ShouldUpRecreateTask(Android.App.Activity, Android.Content.Intent)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/NavUtils.html#navigateUpFromSameTask(android.app.Activity)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="NavigateUpTo">
      <MemberSignature Language="C#" Value="public static void NavigateUpTo (Android.App.Activity sourceActivity, Android.Content.Intent upIntent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NavigateUpTo(class Android.App.Activity sourceActivity, class Android.Content.Intent upIntent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("navigateUpTo", "(Landroid/app/Activity;Landroid/content/Intent;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceActivity" Type="Android.App.Activity" />
        <Parameter Name="upIntent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="sourceActivity">The current activity from which the user is attempting to navigate up</param>
        <param name="upIntent">An intent representing the target destination for up navigation
</param>
        <summary>Navigate from sourceActivity to the activity specified by upIntent, finishing sourceActivity
 in the process. upIntent will have the flag <c><see cref="F:Android.Content.ActivityFlags.ClearTop" /></c> set
 by this method, along with any others required for proper up navigation as outlined
 in the Android Design Guide.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Navigate from sourceActivity to the activity specified by upIntent, finishing sourceActivity
 in the process. upIntent will have the flag <c><see cref="F:Android.Content.ActivityFlags.ClearTop" /></c> set
 by this method, along with any others required for proper up navigation as outlined
 in the Android Design Guide.

 </para>
          <para tool="javadoc-to-mdoc">This method should be used when performing up navigation from within the same task
 as the destination. If up navigation should cross tasks in some cases, see
 <c><see cref="M:Android.Support.V4.App.NavUtils.ShouldUpRecreateTask(Android.App.Activity, Android.Content.Intent)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/NavUtils.html#navigateUpTo(android.app.Activity, android.content.Intent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="ParentActivity">
      <MemberSignature Language="C#" Value="public const string ParentActivity;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ParentActivity" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PARENT_ACTIVITY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/NavUtils.html#PARENT_ACTIVITY" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="ShouldUpRecreateTask">
      <MemberSignature Language="C#" Value="public static bool ShouldUpRecreateTask (Android.App.Activity sourceActivity, Android.Content.Intent targetIntent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ShouldUpRecreateTask(class Android.App.Activity sourceActivity, class Android.Content.Intent targetIntent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("shouldUpRecreateTask", "(Landroid/app/Activity;Landroid/content/Intent;)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceActivity" Type="Android.App.Activity" />
        <Parameter Name="targetIntent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="sourceActivity">The current activity from which the user is attempting to navigate up</param>
        <param name="targetIntent">An intent representing the target destination for up navigation</param>
        <summary>Returns true if sourceActivity should recreate the task when navigating 'up'
 by using targetIntent.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns true if sourceActivity should recreate the task when navigating 'up'
 by using targetIntent.

 </para>
          <para tool="javadoc-to-mdoc">If this method returns false the app can trivially call
 <c><see cref="M:Android.Support.V4.App.NavUtils.NavigateUpTo(Android.App.Activity, Android.Content.Intent)" /></c> using the same parameters to correctly perform
 up navigation. If this method returns false, the app should synthesize a new task stack
 by using <c><see cref="T:Android.Support.V4.App.TaskStackBuilder" /></c> or another similar mechanism to perform up navigation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/NavUtils.html#shouldUpRecreateTask(android.app.Activity, android.content.Intent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>