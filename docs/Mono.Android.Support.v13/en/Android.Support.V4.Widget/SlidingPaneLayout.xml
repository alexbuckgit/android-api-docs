<Type Name="SlidingPaneLayout" FullName="Android.Support.V4.Widget.SlidingPaneLayout">
  <TypeSignature Language="C#" Value="public class SlidingPaneLayout : Android.Views.ViewGroup" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SlidingPaneLayout extends Android.Views.ViewGroup" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android.Support.v13</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Views.ViewGroup</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/support/v4/widget/SlidingPaneLayout", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>SlidingPaneLayout provides a horizontal, multi-pane layout for use at the top level
 of a UI.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">SlidingPaneLayout provides a horizontal, multi-pane layout for use at the top level
 of a UI. A left (or first) pane is treated as a content list or browser, subordinate to a
 primary detail view for displaying content.

 </para>
      <para tool="javadoc-to-mdoc">Child views may overlap if their combined width exceeds the available width
 in the SlidingPaneLayout. When this occurs the user may slide the topmost view out of the way
 by dragging it, or by navigating in the direction of the overlapped view using a keyboard.
 If the content of the dragged child view is itself horizontally scrollable, the user may
 grab it by the very edge.</para>
      <para tool="javadoc-to-mdoc">Thanks to this sliding behavior, SlidingPaneLayout may be suitable for creating layouts
 that can smoothly adapt across many different screen sizes, expanding out fully on larger
 screens and collapsing on smaller screens.</para>
      <para tool="javadoc-to-mdoc">SlidingPaneLayout is distinct from a navigation drawer as described in the design
 guide and should not be used in the same scenarios. SlidingPaneLayout should be thought
 of only as a way to allow a two-pane layout normally used on larger screens to adapt to smaller
 screens in a natural way. The interaction patterns expressed by SlidingPaneLayout imply
 a physicality and direct information hierarchy between panes that does not necessarily exist
 in a scenario where a navigation drawer should be used instead.</para>
      <para tool="javadoc-to-mdoc">Appropriate uses of SlidingPaneLayout include pairings of panes such as a contact list and
 subordinate interactions with those contacts, or an email thread list with the content pane
 displaying the contents of the selected thread. Inappropriate uses of SlidingPaneLayout include
 switching between disparate functions of your app, such as jumping from a social stream view
 to a view of your personal profile - cases such as this should use the navigation drawer
 pattern instead. (<c><see cref="T:Android.Support.V4.Widget.DrawerLayout" /></c> implements this pattern.)</para>
      <para tool="javadoc-to-mdoc">Like <c><see cref="T:Android.Widget.LinearLayout" /></c>, SlidingPaneLayout supports
 the use of the layout parameter <c>layout_weight</c> on child views to determine
 how to divide leftover space after measurement is complete. It is only relevant for width.
 When views do not overlap weight behaves as it does in a LinearLayout.</para>
      <para tool="javadoc-to-mdoc">When views do overlap, weight on a slideable pane indicates that the pane should be
 sized to fill all available space in the closed state. Weight on a pane that becomes covered
 indicates that the pane should be sized to fill all available space except a small minimum strip
 that the user may use to grab the slideable view and pull it back over into a closed state.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/support/v4/widget/SlidingPaneLayout.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SlidingPaneLayout (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/widget/SlidingPaneLayout.html#SlidingPaneLayout(android.content.Context)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SlidingPaneLayout (Android.Content.Context context, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/widget/SlidingPaneLayout.html#SlidingPaneLayout(android.content.Context, android.util.AttributeSet)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SlidingPaneLayout (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SlidingPaneLayout (Android.Content.Context context, Android.Util.IAttributeSet attrs, int defStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs, int32 defStyle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="defStyle" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <param name="defStyle">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/widget/SlidingPaneLayout.html#SlidingPaneLayout(android.content.Context, android.util.AttributeSet, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="CanScroll">
      <MemberSignature Language="C#" Value="protected virtual bool CanScroll (Android.Views.View v, bool checkV, int dx, int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanScroll(class Android.Views.View v, bool checkV, int32 dx, int32 x, int32 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("canScroll", "(Landroid/view/View;ZIII)Z", "GetCanScroll_Landroid_view_View_ZIIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="Android.Views.View" />
        <Parameter Name="checkV" Type="System.Boolean" />
        <Parameter Name="dx" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="v">View to test for horizontal scrollability</param>
        <param name="checkV">Whether the view v passed should itself be checked for scrollability (true),
               or just its children (false).</param>
        <param name="dx">Delta scrolled in pixels</param>
        <param name="x">X coordinate of the active touch point</param>
        <param name="y">Y coordinate of the active touch point</param>
        <summary>Tests scrollability within child views of v given a delta of dx.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Tests scrollability within child views of v given a delta of dx.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/widget/SlidingPaneLayout.html#canScroll(android.view.View, boolean, int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="CanSlide">
      <MemberSignature Language="C#" Value="public virtual bool CanSlide ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanSlide() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("canSlide", "()Z", "GetCanSlideHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/widget/SlidingPaneLayout.html#canSlide()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="ClosePane">
      <MemberSignature Language="C#" Value="public virtual bool ClosePane ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ClosePane() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("closePane", "()Z", "GetClosePaneHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Close the sliding pane if it is currently slideable.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Close the sliding pane if it is currently slideable. If first layout
 has already completed this will animate.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/widget/SlidingPaneLayout.html#closePane()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="CoveredFadeColor">
      <MemberSignature Language="C#" Value="public virtual int CoveredFadeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CoveredFadeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCoveredFadeColor", "()I", "GetGetCoveredFadeColorHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setCoveredFadeColor", "(I)V", "GetSetCoveredFadeColor_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/support/v4/widget/SlidingPaneLayout.html#getCoveredFadeColor()" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/support/v4/widget/SlidingPaneLayout.html#setCoveredFadeColor(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the color used to fade the pane covered by the sliding pane out when the pane
 will become fully covered in the closed state.</para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="IsOpen">
      <MemberSignature Language="C#" Value="public virtual bool IsOpen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isOpen", "()Z", "GetIsOpenHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Check if the layout is completely open.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Check if the layout is completely open. It can be open either because the slider
 itself is open revealing the left pane, or if all content fits without sliding.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/widget/SlidingPaneLayout.html#isOpen()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="IsSlideable">
      <MemberSignature Language="C#" Value="public virtual bool IsSlideable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSlideable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isSlideable", "()Z", "GetIsSlideableHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Check if the content in this layout cannot fully fit side by side and therefore
 the content pane can be slid back and forth.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Check if the content in this layout cannot fully fit side by side and therefore
 the content pane can be slid back and forth.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/widget/SlidingPaneLayout.html#isSlideable()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnLayout">
      <MemberSignature Language="C#" Value="protected override void OnLayout (bool changed, int l, int t, int r, int b);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLayout(bool changed, int32 l, int32 t, int32 r, int32 b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onLayout", "(ZIIII)V", "GetOnLayout_ZIIIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changed" Type="System.Boolean" />
        <Parameter Name="l" Type="System.Int32" />
        <Parameter Name="t" Type="System.Int32" />
        <Parameter Name="r" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="changed">This is a new size or position for this view</param>
        <param name="l">Left position, relative to parent</param>
        <param name="t">Top position, relative to parent</param>
        <param name="r">Right position, relative to parent</param>
        <param name="b">Bottom position, relative to parent
</param>
        <summary>Called from layout when this view should
 assign a size and position to each of its children.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called from layout when this view should
 assign a size and position to each of its children.

 Derived classes with children should override
 this method and call layout on each of
 their children.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/widget/SlidingPaneLayout.html#onLayout(boolean, int, int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OpenPane">
      <MemberSignature Language="C#" Value="public virtual bool OpenPane ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OpenPane() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("openPane", "()Z", "GetOpenPaneHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Open the sliding pane if it is currently slideable.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Open the sliding pane if it is currently slideable. If first layout
 has already completed this will animate.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/widget/SlidingPaneLayout.html#openPane()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="PanelClosed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Support.V4.Widget.SlidingPaneLayout.PanelClosedEventArgs&gt; PanelClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Support.V4.Widget.SlidingPaneLayout/PanelClosedEventArgs&gt; PanelClosed" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Support.V4.Widget.SlidingPaneLayout+PanelClosedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PanelOpened">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Support.V4.Widget.SlidingPaneLayout.PanelOpenedEventArgs&gt; PanelOpened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Support.V4.Widget.SlidingPaneLayout/PanelOpenedEventArgs&gt; PanelOpened" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Support.V4.Widget.SlidingPaneLayout+PanelOpenedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PanelSlide">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Support.V4.Widget.SlidingPaneLayout.PanelSlideEventArgs&gt; PanelSlide;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Support.V4.Widget.SlidingPaneLayout/PanelSlideEventArgs&gt; PanelSlide" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Support.V4.Widget.SlidingPaneLayout+PanelSlideEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParallaxDistance">
      <MemberSignature Language="C#" Value="public virtual int ParallaxDistance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ParallaxDistance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getParallaxDistance", "()I", "GetGetParallaxDistanceHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setParallaxDistance", "(I)V", "GetSetParallaxDistance_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/support/v4/widget/SlidingPaneLayout.html#getParallaxDistance()" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/support/v4/widget/SlidingPaneLayout.html#setParallaxDistance(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set a distance to parallax the lower pane by when the upper pane is in its
 fully closed state. The lower pane will scroll between this position and
 its fully open state.</para>
        </remarks>
        <since version="" />
        <altmember cref="P:Android.Support.V4.Widget.SlidingPaneLayout.ParallaxDistance" />
      </Docs>
    </Member>
    <Member MemberName="SetPanelSlideListener">
      <MemberSignature Language="C#" Value="public virtual void SetPanelSlideListener (Android.Support.V4.Widget.SlidingPaneLayout.IPanelSlideListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPanelSlideListener(class Android.Support.V4.Widget.SlidingPaneLayout/IPanelSlideListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPanelSlideListener", "(Landroid/support/v4/widget/SlidingPaneLayout$PanelSlideListener;)V", "GetSetPanelSlideListener_Landroid_support_v4_widget_SlidingPaneLayout_PanelSlideListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Support.V4.Widget.SlidingPaneLayout+IPanelSlideListener" />
      </Parameters>
      <Docs>
        <param name="listener">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/widget/SlidingPaneLayout.html#setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout.PanelSlideListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="SetShadowDrawable">
      <MemberSignature Language="C#" Value="public virtual void SetShadowDrawable (Android.Graphics.Drawables.Drawable d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetShadowDrawable(class Android.Graphics.Drawables.Drawable d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setShadowDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetShadowDrawable_Landroid_graphics_drawable_Drawable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="d">drawable to use as a shadow
</param>
        <summary>Set a drawable to use as a shadow cast by the right pane onto the left pane
 during opening/closing.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set a drawable to use as a shadow cast by the right pane onto the left pane
 during opening/closing.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/widget/SlidingPaneLayout.html#setShadowDrawable(android.graphics.drawable.Drawable)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="SetShadowResource">
      <MemberSignature Language="C#" Value="public virtual void SetShadowResource (int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetShadowResource(int32 resId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setShadowResource", "(I)V", "GetSetShadowResource_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resId">Resource ID of a drawable to use
</param>
        <summary>Set a drawable to use as a shadow cast by the right pane onto the left pane
 during opening/closing.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set a drawable to use as a shadow cast by the right pane onto the left pane
 during opening/closing.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/widget/SlidingPaneLayout.html#setShadowResource(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="SliderFadeColor">
      <MemberSignature Language="C#" Value="public virtual int SliderFadeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SliderFadeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSliderFadeColor", "()I", "GetGetSliderFadeColorHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSliderFadeColor", "(I)V", "GetSetSliderFadeColor_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/support/v4/widget/SlidingPaneLayout.html#getSliderFadeColor()" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/support/v4/widget/SlidingPaneLayout.html#setSliderFadeColor(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the color used to fade the sliding pane out when it is slid most of the way offscreen.</para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="SmoothSlideClosed">
      <MemberSignature Language="C#" Value="public virtual void SmoothSlideClosed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SmoothSlideClosed() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("smoothSlideClosed", "()V", "GetSmoothSlideClosedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/widget/SlidingPaneLayout.html#smoothSlideClosed()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="SmoothSlideOpen">
      <MemberSignature Language="C#" Value="public virtual void SmoothSlideOpen ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SmoothSlideOpen() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("smoothSlideOpen", "()V", "GetSmoothSlideOpenHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/widget/SlidingPaneLayout.html#smoothSlideOpen()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
