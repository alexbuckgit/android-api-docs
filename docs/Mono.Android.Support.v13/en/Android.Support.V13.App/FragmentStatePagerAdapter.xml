<Type Name="FragmentStatePagerAdapter" FullName="Android.Support.V13.App.FragmentStatePagerAdapter">
  <TypeSignature Language="C#" Value="public abstract class FragmentStatePagerAdapter : Android.Support.V4.View.PagerAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FragmentStatePagerAdapter extends Android.Support.V4.View.PagerAdapter" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android.Support.v13</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Support.V4.View.PagerAdapter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/support/v13/app/FragmentStatePagerAdapter", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Implementation of <c><see cref="T:Android.Support.V4.View.PagerAdapter" /></c> that
 uses a <c><see cref="T:Android.App.Fragment" /></c> to manage each page.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Implementation of <c><see cref="T:Android.Support.V4.View.PagerAdapter" /></c> that
 uses a <c><see cref="T:Android.App.Fragment" /></c> to manage each page. This class also handles
 saving and restoring of fragment's state.

 </para>
      <para tool="javadoc-to-mdoc">This version of the pager is more useful when there are a large number
 of pages, working more like a list view.  When pages are not visible to
 the user, their entire fragment may be destroyed, only keeping the saved
 state of that fragment.  This allows the pager to hold on to much less
 memory associated with each visited page as compared to
 <c><see cref="T:Android.Support.V13.App.FragmentPagerAdapter" /></c> at the cost of potentially more overhead when
 switching between pages.

 </para>
      <para tool="javadoc-to-mdoc">When using FragmentPagerAdapter the host ViewPager must have a
 valid ID set.</para>
      <para tool="javadoc-to-mdoc">Subclasses only need to implement <c><see cref="M:Android.Support.V13.App.FragmentStatePagerAdapter.GetItem(System.Int32)" /></c>
 and <c><see cref="P:Android.Support.V4.View.PagerAdapter.Count" /></c> to have a working adapter.

 </para>
      <para tool="javadoc-to-mdoc">Here is an example implementation of a pager containing fragments of
 lists:

 <sample external-id="198DA05759089F6E99E905DF0165F2A8" /></para>
      <para tool="javadoc-to-mdoc">The <c>R.layout.fragment_pager</c> resource of the top-level fragment is:

 <example><code lang="java">&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
        android:orientation="vertical" android:padding="4dip"
        android:gravity="center_horizontal"
        android:layout_width="match_parent" android:layout_height="match_parent"&gt;

    &lt;android.support.v4.view.ViewPager
            android:id="@+id/pager"
            android:layout_width="match_parent"
            android:layout_height="0px"
            android:layout_weight="1"&gt;
    &lt;/android.support.v4.view.ViewPager&gt;

    &lt;LinearLayout android:orientation="horizontal"
            android:gravity="center" android:measureWithLargestChild="true"
            android:layout_width="match_parent" android:layout_height="wrap_content"
            android:layout_weight="0"&gt;
        &lt;Button android:id="@+id/goto_first"
            android:layout_width="wrap_content" android:layout_height="wrap_content"
            android:text="@string/first"&gt;
        &lt;/Button&gt;
        &lt;Button android:id="@+id/goto_last"
            android:layout_width="wrap_content" android:layout_height="wrap_content"
            android:text="@string/last"&gt;
        &lt;/Button&gt;
    &lt;/LinearLayout&gt;
&lt;/LinearLayout&gt;</code></example></para>
      <para tool="javadoc-to-mdoc">The <c>R.layout.fragment_pager_list</c> resource containing each
 individual fragment's layout is:

 <example><code lang="java">&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@android:drawable/gallery_thumb"&gt;

    &lt;TextView android:id="@+id/text"
        android:layout_width="match_parent" android:layout_height="wrap_content"
        android:gravity="center_vertical|center_horizontal"
        android:textAppearance="?android:attr/textAppearanceMedium"
        android:text="@string/hello_world"/&gt;

    &lt;!-- The frame layout is here since we will be showing either
    the empty view or the list view.  --&gt;
    &lt;FrameLayout
        android:layout_width="match_parent"
        android:layout_height="0dip"
        android:layout_weight="1" &gt;
        &lt;!-- Here is the list. Since we are using a ListActivity, we
             have to call it "@android:id/list" so ListActivity will
             find it --&gt;
        &lt;ListView android:id="@android:id/list"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:drawSelectorOnTop="false"/&gt;

        &lt;!-- Here is the view to show if the list is emtpy --&gt;
        &lt;TextView android:id="@android:id/empty"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:textAppearance="?android:attr/textAppearanceMedium"
            android:text="No items."/&gt;

    &lt;/FrameLayout&gt;

&lt;/LinearLayout&gt;</code></example></para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/support/v13/app/FragmentStatePagerAdapter.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FragmentStatePagerAdapter (Android.App.FragmentManager fm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.App.FragmentManager fm) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/app/FragmentManager;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fm" Type="Android.App.FragmentManager" />
      </Parameters>
      <Docs>
        <param name="fm">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v13/app/FragmentStatePagerAdapter.html#FragmentStatePagerAdapter(android.app.FragmentManager)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FragmentStatePagerAdapter (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public abstract Android.App.Fragment GetItem (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Fragment GetItem(int32 position) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getItem", "(I)Landroid/app/Fragment;", "GetGetItem_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Fragment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">To be added.</param>
        <summary>Return the Fragment associated with a specified position.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the Fragment associated with a specified position.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v13/app/FragmentStatePagerAdapter.html#getItem(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="IsViewFromObject">
      <MemberSignature Language="C#" Value="public override bool IsViewFromObject (Android.Views.View view, Java.Lang.Object object);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsViewFromObject(class Android.Views.View view, class Java.Lang.Object object) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isViewFromObject", "(Landroid/view/View;Ljava/lang/Object;)Z", "GetIsViewFromObject_Landroid_view_View_Ljava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="object" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="view">Page View to check for association with <c>object</c></param>
        <param name="object">Object to check for association with <c>view</c></param>
        <summary>Determines whether a page View is associated with a specific key object
 as returned by <c><see cref="M:Android.Support.V4.View.PagerAdapter.InstantiateItem(Android.Views.ViewGroup, System.Int32)" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Determines whether a page View is associated with a specific key object
 as returned by <c><see cref="M:Android.Support.V4.View.PagerAdapter.InstantiateItem(Android.Views.ViewGroup, System.Int32)" /></c>. This method is
 required for a PagerAdapter to function properly.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v13/app/FragmentStatePagerAdapter.html#isViewFromObject(android.view.View, java.lang.Object)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
