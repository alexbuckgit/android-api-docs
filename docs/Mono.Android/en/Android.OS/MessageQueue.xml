<Type Name="MessageQueue" FullName="Android.OS.MessageQueue">
  <TypeSignature Language="C#" Value="public class MessageQueue : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageQueue extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/os/MessageQueue", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Low-level class holding the list of messages to be dispatched by a
 <c><see cref="T:Android.OS.Looper" /></c>.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Low-level class holding the list of messages to be dispatched by a
 <c><see cref="T:Android.OS.Looper" /></c>.  Messages are not added directly to a MessageQueue,
 but rather through <c><see cref="T:Android.OS.Handler" /></c> objects associated with the Looper.
 
 </para>
      <para tool="javadoc-to-mdoc">You can retrieve the MessageQueue for the current thread with
 <c><see cref="M:Android.OS.Looper.MyQueue" /></c>.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/os/MessageQueue.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MessageQueue (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIdleHandler">
      <MemberSignature Language="C#" Value="public virtual void AddIdleHandler (Android.OS.MessageQueue.IIdleHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddIdleHandler(class Android.OS.MessageQueue/IIdleHandler handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addIdleHandler", "(Landroid/os/MessageQueue$IdleHandler;)V", "GetAddIdleHandler_Landroid_os_MessageQueue_IdleHandler_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="Android.OS.MessageQueue+IIdleHandler" />
      </Parameters>
      <Docs>
        <param name="handler">The IdleHandler to be added.
</param>
        <summary>Add a new <c><see cref="T:Android.OS.MessageQueue+IIdleHandler" /></c> to this message queue.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Add a new <c><see cref="T:Android.OS.MessageQueue+IIdleHandler" /></c> to this message queue.  This may be
 removed automatically for you by returning false from
 <c><see cref="M:Android.OS.MessageQueue.IIdleHandler.QueueIdle" /></c> when it is
 invoked, or explicitly removing it with <c><see cref="M:Android.OS.MessageQueue.RemoveIdleHandler(Android.OS.MessageQueue.IIdleHandler)" /></c>.
 
 </para>
          <para tool="javadoc-to-mdoc">This method is safe to call from any thread.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/MessageQueue.html#addIdleHandler(android.os.MessageQueue.IdleHandler)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RemoveIdleHandler">
      <MemberSignature Language="C#" Value="public virtual void RemoveIdleHandler (Android.OS.MessageQueue.IIdleHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveIdleHandler(class Android.OS.MessageQueue/IIdleHandler handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeIdleHandler", "(Landroid/os/MessageQueue$IdleHandler;)V", "GetRemoveIdleHandler_Landroid_os_MessageQueue_IdleHandler_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="Android.OS.MessageQueue+IIdleHandler" />
      </Parameters>
      <Docs>
        <param name="handler">The IdleHandler to be removed.
</param>
        <summary>Remove an <c><see cref="T:Android.OS.MessageQueue+IIdleHandler" /></c> from the queue that was previously added
 with <c><see cref="M:Android.OS.MessageQueue.AddIdleHandler(Android.OS.MessageQueue.IIdleHandler)" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Remove an <c><see cref="T:Android.OS.MessageQueue+IIdleHandler" /></c> from the queue that was previously added
 with <c><see cref="M:Android.OS.MessageQueue.AddIdleHandler(Android.OS.MessageQueue.IIdleHandler)" /></c>.  If the given object is not currently
 in the idle list, nothing is done.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/MessageQueue.html#removeIdleHandler(android.os.MessageQueue.IdleHandler)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
