<Type Name="Trace" FullName="Android.OS.Trace">
  <TypeSignature Language="C#" Value="public sealed class Trace : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Trace extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/os/Trace", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="18">
    <summary>Writes trace events to the system trace buffer.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Writes trace events to the system trace buffer.  These trace events can be
 collected and visualized using the Systrace tool.

 </para>
      <para tool="javadoc-to-mdoc">This tracing mechanism is independent of the method tracing mechanism
 offered by <c><see cref="M:Android.OS.Debug.StartMethodTracing" /></c>.  In particular, it enables
 tracing of events that occur across multiple processes.
 </para>
      <para tool="javadoc-to-mdoc">For information about using the Systrace tool, read <format type="text/html"><a href="http://developer.android.com/reference/../tools/debugging/systrace.html">Analyzing Display and Performance
 with Systrace</a></format>.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/os/Trace.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 18" />
  </Docs>
  <Members>
    <Member MemberName="BeginSection">
      <MemberSignature Language="C#" Value="public static void BeginSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BeginSection(string sectionName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("beginSection", "(Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName">The name of the code section to appear in the trace.  This may be at
 most 127 Unicode code units long.
</param>
        <summary>Writes a trace message to indicate that a given section of code has begun.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Writes a trace message to indicate that a given section of code has begun. This call must
 be followed by a corresponding call to <c><see cref="M:Android.OS.Trace.EndSection" /></c> on the same thread.

 </para>
          <para tool="javadoc-to-mdoc"> At this time the vertical bar character '|', newline character '\n', and
 null character '\0' are used internally by the tracing mechanism.  If sectionName contains
 these characters they will be replaced with a space character in the trace.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Trace.html#beginSection(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="EndSection">
      <MemberSignature Language="C#" Value="public static void EndSection ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndSection() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("endSection", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Writes a trace message to indicate that a given section of code has ended.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Writes a trace message to indicate that a given section of code has ended. This call must
 be preceeded by a corresponding call to <c><see cref="M:Android.OS.Trace.BeginSection(System.String)" /></c>. Calling this method
 will mark the end of the most recently begun section of code, so care must be taken to
 ensure that beginSection / endSection pairs are properly nested and called from the same
 thread.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Trace.html#endSection()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>