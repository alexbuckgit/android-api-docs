<Type Name="Environment" FullName="Android.OS.Environment">
  <TypeSignature Language="C#" Value="public class Environment : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Environment extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.OS.Environment" />
  <TypeSignature Language="F#" Value="type Environment = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/os/Environment", ApiSince=1, DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Provides access to environment variables.</summary>
    <remarks />
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Environment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Environment.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Environment (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Environment.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.OS.Environment : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.OS.Environment" Usage="new Android.OS.Environment (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="DataDirectory">
      <MemberSignature Language="C#" Value="public static Java.IO.File DataDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.IO.File DataDirectory" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.DataDirectory" />
      <MemberSignature Language="F#" Value="member this.DataDirectory : Java.IO.File" Usage="Android.OS.Environment.DataDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDataDirectory", "()Ljava/io/File;", "GetGetDataDirectoryHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the user data directory.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectoryAlarms">
      <MemberSignature Language="C#" Value="public static string DirectoryAlarms { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DirectoryAlarms" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.DirectoryAlarms" />
      <MemberSignature Language="F#" Value="member this.DirectoryAlarms : string with get, set" Usage="Android.OS.Environment.DirectoryAlarms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTORY_ALARMS", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Standard directory in which to place any audio files that should be
 in the list of alarms that the user can select (not as regular
 music).</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DirectoryDcim">
      <MemberSignature Language="C#" Value="public static string DirectoryDcim { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DirectoryDcim" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.DirectoryDcim" />
      <MemberSignature Language="F#" Value="member this.DirectoryDcim : string with get, set" Usage="Android.OS.Environment.DirectoryDcim" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTORY_DCIM", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The traditional location for pictures and videos when mounting the
 device as a camera.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DirectoryDocuments">
      <MemberSignature Language="C#" Value="public static string DirectoryDocuments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DirectoryDocuments" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.DirectoryDocuments" />
      <MemberSignature Language="F#" Value="member this.DirectoryDocuments : string with get, set" Usage="Android.OS.Environment.DirectoryDocuments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTORY_DOCUMENTS", ApiSince=19)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Standard directory in which to place documents that have been created by
 the user.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="DirectoryDownloads">
      <MemberSignature Language="C#" Value="public static string DirectoryDownloads { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DirectoryDownloads" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.DirectoryDownloads" />
      <MemberSignature Language="F#" Value="member this.DirectoryDownloads : string with get, set" Usage="Android.OS.Environment.DirectoryDownloads" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTORY_DOWNLOADS", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Standard directory in which to place files that have been downloaded by
 the user.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DirectoryMovies">
      <MemberSignature Language="C#" Value="public static string DirectoryMovies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DirectoryMovies" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.DirectoryMovies" />
      <MemberSignature Language="F#" Value="member this.DirectoryMovies : string with get, set" Usage="Android.OS.Environment.DirectoryMovies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTORY_MOVIES", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Standard directory in which to place movies that are available to
 the user.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DirectoryMusic">
      <MemberSignature Language="C#" Value="public static string DirectoryMusic { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DirectoryMusic" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.DirectoryMusic" />
      <MemberSignature Language="F#" Value="member this.DirectoryMusic : string with get, set" Usage="Android.OS.Environment.DirectoryMusic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTORY_MUSIC", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Standard directory in which to place any audio files that should be
 in the regular list of music for the user.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DirectoryNotifications">
      <MemberSignature Language="C#" Value="public static string DirectoryNotifications { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DirectoryNotifications" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.DirectoryNotifications" />
      <MemberSignature Language="F#" Value="member this.DirectoryNotifications : string with get, set" Usage="Android.OS.Environment.DirectoryNotifications" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTORY_NOTIFICATIONS", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Standard directory in which to place any audio files that should be
 in the list of notifications that the user can select (not as regular
 music).</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DirectoryPictures">
      <MemberSignature Language="C#" Value="public static string DirectoryPictures { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DirectoryPictures" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.DirectoryPictures" />
      <MemberSignature Language="F#" Value="member this.DirectoryPictures : string with get, set" Usage="Android.OS.Environment.DirectoryPictures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTORY_PICTURES", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Standard directory in which to place pictures that are available to
 the user.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DirectoryPodcasts">
      <MemberSignature Language="C#" Value="public static string DirectoryPodcasts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DirectoryPodcasts" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.DirectoryPodcasts" />
      <MemberSignature Language="F#" Value="member this.DirectoryPodcasts : string with get, set" Usage="Android.OS.Environment.DirectoryPodcasts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTORY_PODCASTS", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Standard directory in which to place any audio files that should be
 in the list of podcasts that the user can select (not as regular
 music).</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DirectoryRingtones">
      <MemberSignature Language="C#" Value="public static string DirectoryRingtones { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DirectoryRingtones" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.DirectoryRingtones" />
      <MemberSignature Language="F#" Value="member this.DirectoryRingtones : string with get, set" Usage="Android.OS.Environment.DirectoryRingtones" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTORY_RINGTONES", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Standard directory in which to place any audio files that should be
 in the list of ringtones that the user can select (not as regular
 music).</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DownloadCacheDirectory">
      <MemberSignature Language="C#" Value="public static Java.IO.File DownloadCacheDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.IO.File DownloadCacheDirectory" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.DownloadCacheDirectory" />
      <MemberSignature Language="F#" Value="member this.DownloadCacheDirectory : Java.IO.File" Usage="Android.OS.Environment.DownloadCacheDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDownloadCacheDirectory", "()Ljava/io/File;", "GetGetDownloadCacheDirectoryHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the download/cache content directory.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ExternalStorageDirectory">
      <MemberSignature Language="C#" Value="public static Java.IO.File ExternalStorageDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.IO.File ExternalStorageDirectory" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.ExternalStorageDirectory" />
      <MemberSignature Language="F#" Value="member this.ExternalStorageDirectory : Java.IO.File" Usage="Android.OS.Environment.ExternalStorageDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getExternalStorageDirectory", "()Ljava/io/File;", "GetGetExternalStorageDirectoryHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the primary external storage directory.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.OS.Environment.ExternalStorageState" />
        <altmember cref="P:Android.OS.Environment.IsExternalStorageRemovable" />
      </Docs>
    </Member>
    <Member MemberName="ExternalStorageState">
      <MemberSignature Language="C#" Value="public static string ExternalStorageState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ExternalStorageState" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.ExternalStorageState" />
      <MemberSignature Language="F#" Value="member this.ExternalStorageState : string" Usage="Android.OS.Environment.ExternalStorageState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getExternalStorageState", "()Ljava/lang/String;", "GetGetExternalStorageStateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current state of the primary "external" storage device.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.OS.Environment.ExternalStorageDirectory" />
      </Docs>
    </Member>
    <Member MemberName="GetExternalStoragePublicDirectory">
      <MemberSignature Language="C#" Value="public static Java.IO.File GetExternalStoragePublicDirectory (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.IO.File GetExternalStoragePublicDirectory(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Environment.GetExternalStoragePublicDirectory(System.String)" />
      <MemberSignature Language="F#" Value="static member GetExternalStoragePublicDirectory : string -&gt; Java.IO.File" Usage="Android.OS.Environment.GetExternalStoragePublicDirectory type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getExternalStoragePublicDirectory", "(Ljava/lang/String;)Ljava/io/File;", "", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">The type of storage directory to return.  Should be one of
 <c><see cref="P:Android.OS.Environment.DirectoryMusic" /></c>, <c><see cref="P:Android.OS.Environment.DirectoryPodcasts" /></c>,
 <c><see cref="P:Android.OS.Environment.DirectoryRingtones" /></c>, <c><see cref="P:Android.OS.Environment.DirectoryAlarms" /></c>,
 <c><see cref="P:Android.OS.Environment.DirectoryNotifications" /></c>, <c><see cref="P:Android.OS.Environment.DirectoryPictures" /></c>,
 <c><see cref="P:Android.OS.Environment.DirectoryMovies" /></c>, <c><see cref="P:Android.OS.Environment.DirectoryDownloads" /></c>, or
 <c><see cref="P:Android.OS.Environment.DirectoryDcim" /></c>.  May not be null.</param>
        <summary>Get a top-level public external storage directory for placing files of
 a particular type.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetExternalStorageState">
      <MemberSignature Language="C#" Value="public static string GetExternalStorageState (Java.IO.File path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetExternalStorageState(class Java.IO.File path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Environment.GetExternalStorageState(Java.IO.File)" />
      <MemberSignature Language="F#" Value="static member GetExternalStorageState : Java.IO.File -&gt; string" Usage="Android.OS.Environment.GetExternalStorageState path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getExternalStorageState", "(Ljava/io/File;)Ljava/lang/String;", "", ApiSince=21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>Returns the current state of the storage device that provides the given
 path.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetStorageState">
      <MemberSignature Language="C#" Value="public static string GetStorageState (Java.IO.File path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetStorageState(class Java.IO.File path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Environment.GetStorageState(Java.IO.File)" />
      <MemberSignature Language="F#" Value="static member GetStorageState : Java.IO.File -&gt; string" Usage="Android.OS.Environment.GetStorageState path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getStorageState", "(Ljava/io/File;)Ljava/lang/String;", "", ApiSince=19)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="InvokeIsExternalStorageEmulated">
      <MemberSignature Language="C#" Value="public static bool InvokeIsExternalStorageEmulated (Java.IO.File path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool InvokeIsExternalStorageEmulated(class Java.IO.File path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Environment.InvokeIsExternalStorageEmulated(Java.IO.File)" />
      <MemberSignature Language="F#" Value="static member InvokeIsExternalStorageEmulated : Java.IO.File -&gt; bool" Usage="Android.OS.Environment.InvokeIsExternalStorageEmulated path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isExternalStorageEmulated", "(Ljava/io/File;)Z", "", ApiSince=21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>Returns whether the storage device that provides the given path is
 emulated.</summary>
        <returns>To be added.</returns>
        <remarks />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the path is not a valid storage
             device.
</exception>
      </Docs>
    </Member>
    <Member MemberName="InvokeIsExternalStorageRemovable">
      <MemberSignature Language="C#" Value="public static bool InvokeIsExternalStorageRemovable (Java.IO.File path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool InvokeIsExternalStorageRemovable(class Java.IO.File path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Environment.InvokeIsExternalStorageRemovable(Java.IO.File)" />
      <MemberSignature Language="F#" Value="static member InvokeIsExternalStorageRemovable : Java.IO.File -&gt; bool" Usage="Android.OS.Environment.InvokeIsExternalStorageRemovable path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isExternalStorageRemovable", "(Ljava/io/File;)Z", "", ApiSince=21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>Returns whether the storage device that provides the given path is
 removable.</summary>
        <returns>To be added.</returns>
        <remarks />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the path is not a valid storage
             device.
</exception>
      </Docs>
    </Member>
    <Member MemberName="IsExternalStorageEmulated">
      <MemberSignature Language="C#" Value="public static bool IsExternalStorageEmulated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsExternalStorageEmulated" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.IsExternalStorageEmulated" />
      <MemberSignature Language="F#" Value="member this.IsExternalStorageEmulated : bool" Usage="Android.OS.Environment.IsExternalStorageEmulated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isExternalStorageEmulated", "()Z", "GetIsExternalStorageEmulatedHandler", ApiSince=11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether the primary "external" storage device is emulated.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="M:Android.App.Admin.DevicePolicyManager.SetStorageEncryption(Android.Content.ComponentName, System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsExternalStorageRemovable">
      <MemberSignature Language="C#" Value="public static bool IsExternalStorageRemovable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsExternalStorageRemovable" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.IsExternalStorageRemovable" />
      <MemberSignature Language="F#" Value="member this.IsExternalStorageRemovable : bool" Usage="Android.OS.Environment.IsExternalStorageRemovable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isExternalStorageRemovable", "()Z", "GetIsExternalStorageRemovableHandler", ApiSince=9)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether the primary "external" storage device is removable.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.OS.Environment.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaBadRemoval">
      <MemberSignature Language="C#" Value="public const string MediaBadRemoval;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MediaBadRemoval" />
      <MemberSignature Language="DocId" Value="F:Android.OS.Environment.MediaBadRemoval" />
      <MemberSignature Language="F#" Value="val mutable MediaBadRemoval : string" Usage="Android.OS.Environment.MediaBadRemoval" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEDIA_BAD_REMOVAL")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Storage state if the media was removed before it was unmounted.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.OS.Environment.GetExternalStorageState(Java.IO.File)" />
      </Docs>
    </Member>
    <Member MemberName="MediaChecking">
      <MemberSignature Language="C#" Value="public const string MediaChecking;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MediaChecking" />
      <MemberSignature Language="DocId" Value="F:Android.OS.Environment.MediaChecking" />
      <MemberSignature Language="F#" Value="val mutable MediaChecking : string" Usage="Android.OS.Environment.MediaChecking" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEDIA_CHECKING", ApiSince=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Storage state if the media is present and being disk-checked.</summary>
        <remarks />
        <since version="Added in API level 3" />
        <altmember cref="M:Android.OS.Environment.GetExternalStorageState(Java.IO.File)" />
      </Docs>
    </Member>
    <Member MemberName="MediaEjecting">
      <MemberSignature Language="C#" Value="public const string MediaEjecting;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MediaEjecting" />
      <MemberSignature Language="DocId" Value="F:Android.OS.Environment.MediaEjecting" />
      <MemberSignature Language="F#" Value="val mutable MediaEjecting : string" Usage="Android.OS.Environment.MediaEjecting" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEDIA_EJECTING", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaMounted">
      <MemberSignature Language="C#" Value="public const string MediaMounted;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MediaMounted" />
      <MemberSignature Language="DocId" Value="F:Android.OS.Environment.MediaMounted" />
      <MemberSignature Language="F#" Value="val mutable MediaMounted : string" Usage="Android.OS.Environment.MediaMounted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEDIA_MOUNTED")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Storage state if the media is present and mounted at its mount point with
 read/write access.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.OS.Environment.GetExternalStorageState(Java.IO.File)" />
      </Docs>
    </Member>
    <Member MemberName="MediaMountedReadOnly">
      <MemberSignature Language="C#" Value="public const string MediaMountedReadOnly;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MediaMountedReadOnly" />
      <MemberSignature Language="DocId" Value="F:Android.OS.Environment.MediaMountedReadOnly" />
      <MemberSignature Language="F#" Value="val mutable MediaMountedReadOnly : string" Usage="Android.OS.Environment.MediaMountedReadOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEDIA_MOUNTED_READ_ONLY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Storage state if the media is present and mounted at its mount point with
 read-only access.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.OS.Environment.GetExternalStorageState(Java.IO.File)" />
      </Docs>
    </Member>
    <Member MemberName="MediaNofs">
      <MemberSignature Language="C#" Value="public const string MediaNofs;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MediaNofs" />
      <MemberSignature Language="DocId" Value="F:Android.OS.Environment.MediaNofs" />
      <MemberSignature Language="F#" Value="val mutable MediaNofs : string" Usage="Android.OS.Environment.MediaNofs" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEDIA_NOFS", ApiSince=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Storage state if the media is present but is blank or is using an
 unsupported filesystem.</summary>
        <remarks />
        <since version="Added in API level 3" />
        <altmember cref="M:Android.OS.Environment.GetExternalStorageState(Java.IO.File)" />
      </Docs>
    </Member>
    <Member MemberName="MediaRemoved">
      <MemberSignature Language="C#" Value="public const string MediaRemoved;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MediaRemoved" />
      <MemberSignature Language="DocId" Value="F:Android.OS.Environment.MediaRemoved" />
      <MemberSignature Language="F#" Value="val mutable MediaRemoved : string" Usage="Android.OS.Environment.MediaRemoved" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEDIA_REMOVED")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Storage state if the media is not present.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.OS.Environment.GetExternalStorageState(Java.IO.File)" />
      </Docs>
    </Member>
    <Member MemberName="MediaShared">
      <MemberSignature Language="C#" Value="public const string MediaShared;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MediaShared" />
      <MemberSignature Language="DocId" Value="F:Android.OS.Environment.MediaShared" />
      <MemberSignature Language="F#" Value="val mutable MediaShared : string" Usage="Android.OS.Environment.MediaShared" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEDIA_SHARED")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Storage state if the media is present not mounted, and shared via USB
 mass storage.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.OS.Environment.GetExternalStorageState(Java.IO.File)" />
      </Docs>
    </Member>
    <Member MemberName="MediaUnknown">
      <MemberSignature Language="C#" Value="public const string MediaUnknown;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MediaUnknown" />
      <MemberSignature Language="DocId" Value="F:Android.OS.Environment.MediaUnknown" />
      <MemberSignature Language="F#" Value="val mutable MediaUnknown : string" Usage="Android.OS.Environment.MediaUnknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEDIA_UNKNOWN", ApiSince=19)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Unknown storage state, such as when a path isn't backed by known storage
 media.</summary>
        <remarks />
        <altmember cref="M:Android.OS.Environment.GetExternalStorageState(Java.IO.File)" />
      </Docs>
    </Member>
    <Member MemberName="MediaUnmountable">
      <MemberSignature Language="C#" Value="public const string MediaUnmountable;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MediaUnmountable" />
      <MemberSignature Language="DocId" Value="F:Android.OS.Environment.MediaUnmountable" />
      <MemberSignature Language="F#" Value="val mutable MediaUnmountable : string" Usage="Android.OS.Environment.MediaUnmountable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEDIA_UNMOUNTABLE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Storage state if the media is present but cannot be mounted.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.OS.Environment.GetExternalStorageState(Java.IO.File)" />
      </Docs>
    </Member>
    <Member MemberName="MediaUnmounted">
      <MemberSignature Language="C#" Value="public const string MediaUnmounted;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MediaUnmounted" />
      <MemberSignature Language="DocId" Value="F:Android.OS.Environment.MediaUnmounted" />
      <MemberSignature Language="F#" Value="val mutable MediaUnmounted : string" Usage="Android.OS.Environment.MediaUnmounted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEDIA_UNMOUNTED")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Storage state if the media is present but not mounted.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.OS.Environment.GetExternalStorageState(Java.IO.File)" />
      </Docs>
    </Member>
    <Member MemberName="RootDirectory">
      <MemberSignature Language="C#" Value="public static Java.IO.File RootDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.IO.File RootDirectory" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.RootDirectory" />
      <MemberSignature Language="F#" Value="member this.RootDirectory : Java.IO.File" Usage="Android.OS.Environment.RootDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getRootDirectory", "()Ljava/io/File;", "GetGetRootDirectoryHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return root of the "system" partition holding the core Android OS.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.OS.Environment.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.OS.Environment.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
