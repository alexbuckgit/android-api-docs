<Type Name="SystemClock" FullName="Android.OS.SystemClock">
  <TypeSignature Language="C#" Value="public sealed class SystemClock : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SystemClock extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/os/SystemClock", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Core timekeeping facilities.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Core timekeeping facilities.

 </para>
      <para tool="javadoc-to-mdoc"> Three different clocks are available, and they should not be confused:

 <list type="bullet"><item><term><c><see cref="M:Java.Lang.JavaSystem.CurrentTimeMillis" /></c>
     is the standard "wall" clock (time and date) expressing milliseconds
     since the epoch.  The wall clock can be set by the user or the phone
     network (see <c><see cref="M:Android.OS.SystemClock.SetCurrentTimeMillis(System.Int64)" /></c>), so the time may jump
     backwards or forwards unpredictably.  This clock should only be used
     when correspondence with real-world dates and times is important, such
     as in a calendar or alarm clock application.  Interval or elapsed
     time measurements should use a different clock.  If you are using
     System.currentTimeMillis(), consider listening to the
     <c><see cref="F:Android.Content.Intent.ActionTimeTick" /></c>,
     <c><see cref="F:Android.Content.Intent.ActionTimeChanged" /></c>
     and <c><see cref="F:Android.Content.Intent.ActionTimezoneChanged" /></c><c><see cref="T:Android.Content.Intent" /></c>
     broadcasts to find out when the time changes.

     </term></item><item><term><c><see cref="M:Android.OS.SystemClock.UptimeMillis" /></c> is counted in milliseconds since the
     system was booted.  This clock stops when the system enters deep
     sleep (CPU off, display dark, device waiting for external input),
     but is not affected by clock scaling, idle, or other power saving
     mechanisms.  This is the basis for most interval timing
     such as <c><see cref="M:Java.Lang.Thread.Sleep(System.Int64)" /></c>,
     <c><see cref="M:Java.Lang.Object.Wait(System.Int64)" /></c>, and
     <c><see cref="M:Java.Lang.JavaSystem.NanoTime" /></c>.  This clock is guaranteed
     to be monotonic, and is suitable for interval timing when the
     interval does not span device sleep.  Most methods that accept a
     timestamp value currently expect the <c><see cref="M:Android.OS.SystemClock.UptimeMillis" /></c> clock.

     </term></item><item><term><c><see cref="M:Android.OS.SystemClock.ElapsedRealtime" /></c> and <c><see cref="M:Android.OS.SystemClock.ElapsedRealtimeNanos" /></c>
     return the time since the system was booted, and include deep sleep.
     This clock is guaranteed to be monotonic, and continues to tick even
     when the CPU is in power saving modes, so is the recommend basis
     for general purpose interval timing.

 </term></item></list>

 There are several mechanisms for controlling the timing of events:

 <list type="bullet"><item><term> Standard functions like <c><see cref="M:Java.Lang.Thread.Sleep(System.Int64)" /></c> and <c><see cref="M:Java.Lang.Object.Wait(System.Int64)" /></c>
     are always available.  These functions use the <c><see cref="M:Android.OS.SystemClock.UptimeMillis" /></c>
     clock; if the device enters sleep, the remainder of the time will be
     postponed until the device wakes up.  These synchronous functions may
     be interrupted with <c><see cref="M:Java.Lang.Thread.Interrupt" /></c>, and
     you must handle <c><see cref="T:Java.Lang.InterruptedException" /></c>.

     </term></item><item><term><c><see cref="M:Android.OS.SystemClock.Sleep(System.Int64)" /></c> is a utility function
     very similar to <c><see cref="M:Java.Lang.Thread.Sleep(System.Int64)" /></c>, but it
     ignores <c><see cref="T:Java.Lang.InterruptedException" /></c>.  Use this function for delays if
     you do not use <c><see cref="M:Java.Lang.Thread.Interrupt" /></c>, as it will
     preserve the interrupted state of the thread.

     </term></item><item><term> The <c><see cref="T:Android.OS.Handler" /></c> class can schedule asynchronous
     callbacks at an absolute or relative time.  Handler objects also use the
     <c><see cref="M:Android.OS.SystemClock.UptimeMillis" /></c> clock, and require an <c><see cref="T:Android.OS.Looper" /></c> (normally present in any GUI application).

     </term></item><item><term> The <c><see cref="T:Android.App.AlarmManager" /></c> can trigger one-time or
     recurring events which occur even when the device is in deep sleep
     or your application is not running.  Events may be scheduled with your
     choice of <c><see cref="M:Java.Lang.JavaSystem.CurrentTimeMillis" /></c> (RTC) or
     <c><see cref="M:Android.OS.SystemClock.ElapsedRealtime" /></c> (ELAPSED_REALTIME), and cause an
     <c><see cref="T:Android.Content.Intent" /></c> broadcast when they occur.
 </term></item></list></para>
      <para tool="javadoc-to-mdoc" />
      <para tool="javadoc-to-mdoc" />
      <para tool="javadoc-to-mdoc" />
      <para tool="javadoc-to-mdoc" />
      <para tool="javadoc-to-mdoc" />
      <para tool="javadoc-to-mdoc" />
      <para tool="javadoc-to-mdoc" />
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/os/SystemClock.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="CurrentThreadTimeMillis">
      <MemberSignature Language="C#" Value="public static long CurrentThreadTimeMillis ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 CurrentThreadTimeMillis() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("currentThreadTimeMillis", "()J", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns milliseconds running in the current thread.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns milliseconds running in the current thread.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/SystemClock.html#currentThreadTimeMillis()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ElapsedRealtime">
      <MemberSignature Language="C#" Value="public static long ElapsedRealtime ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ElapsedRealtime() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("elapsedRealtime", "()J", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns milliseconds since boot, including time spent in sleep.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns milliseconds since boot, including time spent in sleep.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/SystemClock.html#elapsedRealtime()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ElapsedRealtimeNanos">
      <MemberSignature Language="C#" Value="public static long ElapsedRealtimeNanos ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ElapsedRealtimeNanos() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("elapsedRealtimeNanos", "()J", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns nanoseconds since boot, including time spent in sleep.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns nanoseconds since boot, including time spent in sleep.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/SystemClock.html#elapsedRealtimeNanos()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="SetCurrentTimeMillis">
      <MemberSignature Language="C#" Value="public static bool SetCurrentTimeMillis (long millis);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SetCurrentTimeMillis(int64 millis) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setCurrentTimeMillis", "(J)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millis" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="millis">To be added.</param>
        <summary>Sets the current wall time, in milliseconds.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the current wall time, in milliseconds.  Requires the calling
 process to have appropriate permissions.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/SystemClock.html#setCurrentTimeMillis(long)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Sleep">
      <MemberSignature Language="C#" Value="public static void Sleep (long ms);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sleep(int64 ms) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sleep", "(J)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ms" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="ms">to sleep before returning, in milliseconds of uptime.
</param>
        <summary>Waits a given number of milliseconds (of uptimeMillis) before returning.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Waits a given number of milliseconds (of uptimeMillis) before returning.
 Similar to <c><see cref="M:Java.Lang.Thread.Sleep(System.Int64)" /></c>, but does not throw
 <c><see cref="T:Java.Lang.InterruptedException" /></c>; <c><see cref="M:Java.Lang.Thread.Interrupt" /></c> events are
 deferred until the next interruptible operation.  Does not return until
 at least the specified number of milliseconds has elapsed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/SystemClock.html#sleep(long)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UptimeMillis">
      <MemberSignature Language="C#" Value="public static long UptimeMillis ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 UptimeMillis() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("uptimeMillis", "()J", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns milliseconds since boot, not counting time spent in deep sleep.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns milliseconds since boot, not counting time spent in deep sleep.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/SystemClock.html#uptimeMillis()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
