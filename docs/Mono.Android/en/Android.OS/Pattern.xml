<Type Name="Pattern" FullName="Android.OS.Pattern">
  <TypeSignature Language="C#" Value="public enum Pattern" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Pattern extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Enumerates values returned by  several types and taken as a parameter of  several types.</summary>
    <remarks>Enumerates values returned by the following: <list type="bullet"><item><term><see cref="M:Android.Content.IntentFilter.GetDataPath" /></term></item><item><term><see cref="M:Android.Content.IntentFilter.GetDataSchemeSpecificPart" /></term></item><item><term><see cref="M:Android.Content.PM.ProviderInfo.UriPermissionPatterns" /></term></item><item><term><see cref="M:Android.OS.Pattern.Literal" /></term></item><item><term><see cref="M:Android.OS.Pattern.Prefix" /></term></item><item><term><see cref="M:Android.OS.Pattern.SimpleGlob" /></term></item><item><term><see cref="M:Android.OS.PatternMatcher.Type" /></term></item></list>
 and taken as a parameter of the following: <list type="bullet"><item><term><see cref="M:Android.Content.IntentFilter.AddDataPath" /></term></item><item><term><see cref="M:Android.Content.IntentFilter.AddDataSchemeSpecificPart" /></term></item><item><term><see cref="M:Android.Content.PM.PathPermission..ctor" /></term></item><item><term><see cref="M:Android.OS.PatternMatcher..ctor" /></term></item></list>
.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Literal">
      <MemberSignature Language="C#" Value="Literal" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.OS.Pattern Literal = int32(0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.OS.Pattern</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Pattern type: the given pattern must exactly match the string it is
 tested against.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="Prefix" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.OS.Pattern Prefix = int32(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.OS.Pattern</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Pattern type: the given pattern must match the
 beginning of the string it is tested against.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SimpleGlob">
      <MemberSignature Language="C#" Value="SimpleGlob" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.OS.Pattern SimpleGlob = int32(2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.OS.Pattern</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Pattern type: the given pattern is interpreted with a
 simple glob syntax for matching against the string it is tested against.
 In this syntax, you can use the '*' character to match against zero or
 more occurrences of the character immediately before.  If the
 character before it is '.' it will match any character.  The character
 '\' can be used as an escape.  This essentially provides only the '*'
 wildcard part of a normal regexp. 
</para>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>