<Type Name="RecoverySystem" FullName="Android.OS.RecoverySystem">
  <TypeSignature Language="C#" Value="public class RecoverySystem : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RecoverySystem extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/os/RecoverySystem", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>RecoverySystem contains methods for interacting with the Android
 recovery system (the separate partition that can be used to install
 system updates, wipe user data, etc.</summary>
    <remarks><para tool="javadoc-to-mdoc">RecoverySystem contains methods for interacting with the Android
 recovery system (the separate partition that can be used to install
 system updates, wipe user data, etc.)
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/os/RecoverySystem.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RecoverySystem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary></summary>
        <remarks><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/os/RecoverySystem.html#RecoverySystem()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RecoverySystem (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstallPackage">
      <MemberSignature Language="C#" Value="public static void InstallPackage (Android.Content.Context context, Java.IO.File packageFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InstallPackage(class Android.Content.Context context, class Java.IO.File packageFile) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("installPackage", "(Landroid/content/Context;Ljava/io/File;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="packageFile" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="context">the Context to use</param>
        <param name="packageFile">the update package to install.  Must be on
 a partition mountable by recovery.  (The set of partitions
 known to recovery may vary from device to device.  Generally,
 /cache and /data are safe.)</param>
        <summary>Reboots the device in order to install the given update
 package.</summary>
        <remarks><para tool="javadoc-to-mdoc">Reboots the device in order to install the given update
 package.
 Requires the <c><see cref="!:NoType:android/Manifest$permission;Href=../../../reference/android/Manifest.permission.html#REBOOT" /></c> permission.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/os/RecoverySystem.html#installPackage(android.content.Context, java.io.File)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.IO.IOException">if writing the recovery command file
 fails, or if the reboot itself fails.
</exception>
      </Docs>
    </Member>
    <Member MemberName="RebootWipeCache">
      <MemberSignature Language="C#" Value="public static void RebootWipeCache (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RebootWipeCache(class Android.Content.Context context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("rebootWipeCache", "(Landroid/content/Context;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>Reboot into the recovery system to wipe the /cache partition.</summary>
        <remarks><para tool="javadoc-to-mdoc">Reboot into the recovery system to wipe the /cache partition.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/os/RecoverySystem.html#rebootWipeCache(android.content.Context)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 14" />
        <exception cref="T:Java.IO.IOException">if something goes wrong.
</exception>
      </Docs>
    </Member>
    <Member MemberName="RebootWipeUserData">
      <MemberSignature Language="C#" Value="public static void RebootWipeUserData (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RebootWipeUserData(class Android.Content.Context context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("rebootWipeUserData", "(Landroid/content/Context;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">the Context to use</param>
        <summary>Reboots the device and wipes the user data and cache
 partitions.</summary>
        <remarks><para tool="javadoc-to-mdoc">Reboots the device and wipes the user data and cache
 partitions.  This is sometimes called a "factory reset", which
 is something of a misnomer because the system partition is not
 restored to its factory state.  Requires the
 <c><see cref="!:NoType:android/Manifest$permission;Href=../../../reference/android/Manifest.permission.html#REBOOT" /></c> permission.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/os/RecoverySystem.html#rebootWipeUserData(android.content.Context)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.IO.IOException">if writing the recovery command file
 fails, or if the reboot itself fails.</exception>
        <exception cref="T:Java.Lang.SecurityException">if the current user is not allowed to wipe data.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyPackage">
      <MemberSignature Language="C#" Value="public static void VerifyPackage (Java.IO.File packageFile, Android.OS.RecoverySystem.IProgressListener listener, Java.IO.File deviceCertsZipFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VerifyPackage(class Java.IO.File packageFile, class Android.OS.RecoverySystem/IProgressListener listener, class Java.IO.File deviceCertsZipFile) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("verifyPackage", "(Ljava/io/File;Landroid/os/RecoverySystem$ProgressListener;Ljava/io/File;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageFile" Type="Java.IO.File" />
        <Parameter Name="listener" Type="Android.OS.RecoverySystem+IProgressListener" />
        <Parameter Name="deviceCertsZipFile" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="packageFile">the package to be verified</param>
        <param name="listener">an object to receive periodic progress
 updates as verification proceeds.  May be null.</param>
        <param name="deviceCertsZipFile">the zip file of certificates whose
 public keys we will accept.  Verification succeeds if the
 package is signed by the private key corresponding to any
 public key in this file.  May be null to use the system default
 file (currently "/system/etc/security/otacerts.zip").</param>
        <summary>Verify the cryptographic signature of a system update package
 before installing it.</summary>
        <remarks><para tool="javadoc-to-mdoc">Verify the cryptographic signature of a system update package
 before installing it.  Note that the package is also verified
 separately by the installer once the device is rebooted into
 the recovery system.  This function will return only if the
 package was successfully verified; otherwise it will throw an
 exception.

 Verification of a package can take significant time, so this
 function should not be called from a UI thread.  Interrupting
 the thread while this function is in progress will result in a
 SecurityException being thrown (and the thread's interrupt flag
 will be cleared).</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/os/RecoverySystem.html#verifyPackage(java.io.File, android.os.RecoverySystem.ProgressListener, java.io.File)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.IO.IOException">if there were any errors reading the
 package or certs files.</exception>
        <exception cref="T:Java.Security.GeneralSecurityException">if verification failed
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
