<Type Name="LSParser" FullName="Org.W3c.Dom.LS.LSParser">
  <TypeSignature Language="C#" Value="public abstract class LSParser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit LSParser extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("org/w3c/dom/ls/LSParser")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="8">
    <summary>An interface to an object that is able to build, or augment, a DOM tree
 from various input sources.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">An interface to an object that is able to build, or augment, a DOM tree
 from various input sources.
 </para>
      <para tool="javadoc-to-mdoc">
        <c>LSParser</c> provides an API for parsing XML and building the
 corresponding DOM document structure. A <c>LSParser</c> instance
 can be obtained by invoking the
 <c>DOMImplementationLS.createLSParser()</c> method.
 </para>
      <para tool="javadoc-to-mdoc"> As specified in []
 , when a document is first made available via the LSParser:
 <list type="bullet"><item><term> there will
 never be two adjacent nodes of type NODE_TEXT, and there will never be
 empty text nodes.
 </term></item><item><term> it is expected that the <c>value</c> and
 <c>nodeValue</c> attributes of an <c>Attr</c> node initially
 return the . However, if the parameters "" and "" are set to <c>true</c>, depending on the attribute normalization
 used, the attribute values may differ from the ones obtained by the XML
 1.0 attribute normalization. If the parameters "" is set to <c>false</c>, the XML 1.0 attribute normalization is
 guaranteed to occur, and if the attributes list does not contain
 namespace declarations, the <c>attributes</c> attribute on
 <c>Element</c> node represents the property <format type="text/html"><b>[attributes]</b></format> defined in []
 .
 </term></item></list></para>
      <para tool="javadoc-to-mdoc"> Asynchronous <c>LSParser</c> objects are expected to also
 implement the <c>events::EventTarget</c> interface so that event
 listeners can be registered on asynchronous <c>LSParser</c>
 objects.
 </para>
      <para tool="javadoc-to-mdoc"> Events supported by asynchronous <c>LSParser</c> objects are:
 <format type="text/html"><dl><dt>load</dt><dd>
  The <c>LSParser</c> finishes to load the document. See also the
 definition of the <c>LSLoadEvent</c> interface. </dd><dt>progress</dt><dd> The
 <c>LSParser</c> signals progress as data is parsed.  This
 specification does not attempt to define exactly when progress events
 should be dispatched. That is intentionally left as
 implementation-dependent. Here is one example of how an application might
 dispatch progress events: Once the parser starts receiving data, a
 progress event is dispatched to indicate that the parsing starts. From
 there on, a progress event is dispatched for every 4096 bytes of data
 that is received and processed. This is only one example, though, and
 implementations can choose to dispatch progress events at any time while
 parsing, or not dispatch them at all.  See also the definition of the
 <c>LSProgressEvent</c> interface. </dd></dl></format></para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <b>Note:</b>
        </format>  All events defined in this specification use the
 namespace URI <c>"http://www.w3.org/2002/DOMLS"</c>.
 </para>
      <para tool="javadoc-to-mdoc"> While parsing an input source, errors are reported to the application
 through the error handler (<c>LSParser.domConfig</c>'s "" parameter). This specification does in no way try to define all possible
 errors that can occur while parsing XML, or any other markup, but some
 common error cases are defined. The types (<c>DOMError.type</c>) of
 errors and warnings defined by this specification are:
 <format type="text/html"><dl><dt><c>"check-character-normalization-failure" [error]</c></dt><dd> Raised if
 the parameter "" is set to true and a string is encountered that fails normalization
 checking. </dd><dt><c>"doctype-not-allowed" [fatal]</c></dt><dd> Raised if the
 configuration parameter "disallow-doctype" is set to <c>true</c>
 and a doctype is encountered. </dd><dt><c>"no-input-specified" [fatal]</c></dt><dd>
 Raised when loading a document and no input is specified in the
 <c>LSInput</c> object. </dd><dt><c>"pi-base-uri-not-preserved" [warning]</c></dt><dd> Raised if a processing
 instruction is encountered in a location where the base URI of the
 processing instruction can not be preserved.  One example of a case where
 this warning will be raised is if the configuration parameter "" is set to <c>false</c> and the following XML file is parsed:
 <example><code lang="xml">
 &lt;!DOCTYPE root [ &lt;!ENTITY e SYSTEM 'subdir/myentity.ent' ]&gt;
 &lt;root&gt; &amp;e; &lt;/root&gt;</code></example>
  And <c>subdir/myentity.ent</c>
 contains:
 <example><code lang="xml">&lt;one&gt; &lt;two/&gt; &lt;/one&gt; &lt;?pi 3.14159?&gt;
 &lt;more/&gt;</code></example></dd><dt><c>"unbound-prefix-in-entity" [warning]</c></dt><dd> An
 implementation dependent warning that may be raised if the configuration
 parameter "" is set to <c>true</c> and an unbound namespace prefix is
 encountered in an entity's replacement text. Raising this warning is not
 enforced since some existing parsers may not recognize unbound namespace
 prefixes in the replacement text of entities. </dd><dt><c>"unknown-character-denormalization" [fatal]</c></dt><dd> Raised if the
 configuration parameter "ignore-unknown-character-denormalizations" is
 set to <c>false</c> and a character is encountered for which the
 processor cannot determine the normalization properties. </dd><dt><c>"unsupported-encoding" [fatal]</c></dt><dd> Raised if an unsupported
 encoding is encountered. </dd><dt><c>"unsupported-media-type" [fatal]</c></dt><dd>
 Raised if the configuration parameter "supported-media-types-only" is set
 to <c>true</c> and an unsupported media type is encountered. </dd></dl></format></para>
      <para tool="javadoc-to-mdoc"> In addition to raising the defined errors and warnings, implementations
 are expected to raise implementation specific errors and warnings for any
 other error and warning cases such as IO errors (file not found,
 permission denied,...), XML well-formedness errors, and so on.
 </para>
      <para tool="javadoc-to-mdoc">See also the .
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/org/w3c/dom/ls/LSParser.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 8" />
  </Docs>
  <Members>
    <Member MemberName="ActionAppendAsChildren">
      <MemberSignature Language="C#" Value="public const short ActionAppendAsChildren = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int16 ActionAppendAsChildren = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACTION_APPEND_AS_CHILDREN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Append the result of the parse operation as children of the context
 node.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Append the result of the parse operation as children of the context
 node. For this action to work, the context node must be an
 <c>Element</c> or a <c>DocumentFragment</c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/w3c/dom/ls/LSParser.html#ACTION_APPEND_AS_CHILDREN" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ActionInsertAfter">
      <MemberSignature Language="C#" Value="public const short ActionInsertAfter = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int16 ActionInsertAfter = (4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACTION_INSERT_AFTER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Insert the result of the parse operation as the immediately following
 sibling of the context node.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Insert the result of the parse operation as the immediately following
 sibling of the context node. For this action to work the context
 node's parent must be an <c>Element</c> or a
 <c>DocumentFragment</c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/w3c/dom/ls/LSParser.html#ACTION_INSERT_AFTER" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ActionInsertBefore">
      <MemberSignature Language="C#" Value="public const short ActionInsertBefore = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int16 ActionInsertBefore = (3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACTION_INSERT_BEFORE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Insert the result of the parse operation as the immediately preceding
 sibling of the context node.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Insert the result of the parse operation as the immediately preceding
 sibling of the context node. For this action to work the context
 node's parent must be an <c>Element</c> or a
 <c>DocumentFragment</c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/w3c/dom/ls/LSParser.html#ACTION_INSERT_BEFORE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ActionReplace">
      <MemberSignature Language="C#" Value="public const short ActionReplace = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int16 ActionReplace = (5)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACTION_REPLACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>Replace the context node with the result of the parse operation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Replace the context node with the result of the parse operation. For
 this action to work, the context node must have a parent, and the
 parent must be an <c>Element</c> or a
 <c>DocumentFragment</c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/w3c/dom/ls/LSParser.html#ACTION_REPLACE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ActionReplaceChildren">
      <MemberSignature Language="C#" Value="public const short ActionReplaceChildren = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int16 ActionReplaceChildren = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACTION_REPLACE_CHILDREN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Replace all the children of the context node with the result of the
 parse operation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Replace all the children of the context node with the result of the
 parse operation. For this action to work, the context node must be an
 <c>Element</c>, a <c>Document</c>, or a
 <c>DocumentFragment</c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/w3c/dom/ls/LSParser.html#ACTION_REPLACE_CHILDREN" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
  </Members>
</Type>