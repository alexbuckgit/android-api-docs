<Type Name="Linkify" FullName="Android.Text.Util.Linkify">
  <TypeSignature Language="C#" Value="public class Linkify : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Linkify extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/text/util/Linkify", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Linkify take a piece of text and a regular expression and turns all of the
  regex matches in the text into clickable links.</summary>
    <remarks />
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Linkify ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Linkify (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AddLinks">
      <MemberSignature Language="C#" Value="public static bool AddLinks (Android.Text.ISpannable text, Android.Text.Util.MatchOptions mask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool AddLinks(class Android.Text.ISpannable text, valuetype Android.Text.Util.MatchOptions mask) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addLinks", "(Landroid/text/Spannable;I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Android.Text.ISpannable" />
        <Parameter Name="mask" Type="Android.Text.Util.MatchOptions">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="mask">To be added.</param>
        <summary tool="true">Scans the text of the provided Spannable and turns all occurrences
  of the link types indicated in the mask into clickable links.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AddLinks">
      <MemberSignature Language="C#" Value="public static bool AddLinks (Android.Widget.TextView text, Android.Text.Util.MatchOptions mask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool AddLinks(class Android.Widget.TextView text, valuetype Android.Text.Util.MatchOptions mask) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addLinks", "(Landroid/widget/TextView;I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Android.Widget.TextView" />
        <Parameter Name="mask" Type="Android.Text.Util.MatchOptions">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="mask">To be added.</param>
        <summary>Scans the text of the provided TextView and turns all occurrences of
  the link types indicated in the mask into clickable links.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AddLinks">
      <MemberSignature Language="C#" Value="public static bool AddLinks (Android.Text.ISpannable text, Java.Util.Regex.Pattern pattern, string scheme);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool AddLinks(class Android.Text.ISpannable text, class Java.Util.Regex.Pattern pattern, string scheme) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addLinks", "(Landroid/text/Spannable;Ljava/util/regex/Pattern;Ljava/lang/String;)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Android.Text.ISpannable" />
        <Parameter Name="pattern" Type="Java.Util.Regex.Pattern" />
        <Parameter Name="scheme" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Spannable whose text is to be marked-up with
                      links</param>
        <param name="pattern">Regex pattern to be used for finding links</param>
        <param name="scheme">Url scheme string (eg <c>http://</c> to be
                      prepended to the url of links that do not have
                      a scheme specified in the link text
</param>
        <summary>Applies a regex to a Spannable turning the matches into
  links.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AddLinks">
      <MemberSignature Language="C#" Value="public static void AddLinks (Android.Widget.TextView text, Java.Util.Regex.Pattern pattern, string scheme);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddLinks(class Android.Widget.TextView text, class Java.Util.Regex.Pattern pattern, string scheme) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addLinks", "(Landroid/widget/TextView;Ljava/util/regex/Pattern;Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Android.Widget.TextView" />
        <Parameter Name="pattern" Type="Java.Util.Regex.Pattern" />
        <Parameter Name="scheme" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">TextView whose text is to be marked-up with links</param>
        <param name="pattern">Regex pattern to be used for finding links</param>
        <param name="scheme">Url scheme string (eg <c>http://</c> to be
                      prepended to the url of links that do not have
                      a scheme specified in the link text
</param>
        <summary>Applies a regex to the text of a TextView turning the matches into
  links.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AddLinks">
      <MemberSignature Language="C#" Value="public static bool AddLinks (Android.Text.ISpannable s, Java.Util.Regex.Pattern p, string scheme, Android.Text.Util.Linkify.IMatchFilter matchFilter, Android.Text.Util.Linkify.ITransformFilter transformFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool AddLinks(class Android.Text.ISpannable s, class Java.Util.Regex.Pattern p, string scheme, class Android.Text.Util.Linkify/IMatchFilter matchFilter, class Android.Text.Util.Linkify/ITransformFilter transformFilter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addLinks", "(Landroid/text/Spannable;Ljava/util/regex/Pattern;Ljava/lang/String;Landroid/text/util/Linkify$MatchFilter;Landroid/text/util/Linkify$TransformFilter;)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="Android.Text.ISpannable" />
        <Parameter Name="p" Type="Java.Util.Regex.Pattern" />
        <Parameter Name="scheme" Type="System.String" />
        <Parameter Name="matchFilter" Type="Android.Text.Util.Linkify+IMatchFilter" />
        <Parameter Name="transformFilter" Type="Android.Text.Util.Linkify+ITransformFilter" />
      </Parameters>
      <Docs>
        <param name="s">Spannable whose text is to be marked-up with
                      links</param>
        <param name="p">Regex pattern to be used for finding links</param>
        <param name="scheme">Url scheme string (eg <c>http://</c> to be
                      prepended to the url of links that do not have
                      a scheme specified in the link text</param>
        <param name="matchFilter">The filter that is used to allow the client code
                      additional control over which pattern matches are
                      to be converted into links.
</param>
        <param name="transformFilter">To be added.</param>
        <summary>Applies a regex to a Spannable turning the matches into
  links.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AddLinks">
      <MemberSignature Language="C#" Value="public static void AddLinks (Android.Widget.TextView text, Java.Util.Regex.Pattern p, string scheme, Android.Text.Util.Linkify.IMatchFilter matchFilter, Android.Text.Util.Linkify.ITransformFilter transformFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddLinks(class Android.Widget.TextView text, class Java.Util.Regex.Pattern p, string scheme, class Android.Text.Util.Linkify/IMatchFilter matchFilter, class Android.Text.Util.Linkify/ITransformFilter transformFilter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addLinks", "(Landroid/widget/TextView;Ljava/util/regex/Pattern;Ljava/lang/String;Landroid/text/util/Linkify$MatchFilter;Landroid/text/util/Linkify$TransformFilter;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Android.Widget.TextView" />
        <Parameter Name="p" Type="Java.Util.Regex.Pattern" />
        <Parameter Name="scheme" Type="System.String" />
        <Parameter Name="matchFilter" Type="Android.Text.Util.Linkify+IMatchFilter" />
        <Parameter Name="transformFilter" Type="Android.Text.Util.Linkify+ITransformFilter" />
      </Parameters>
      <Docs>
        <param name="text">TextView whose text is to be marked-up with links</param>
        <param name="p">Regex pattern to be used for finding links</param>
        <param name="scheme">Url scheme string (eg <c>http://</c> to be
                      prepended to the url of links that do not have
                      a scheme specified in the link text</param>
        <param name="matchFilter">The filter that is used to allow the client code
                      additional control over which pattern matches are
                      to be converted into links.
</param>
        <param name="transformFilter">To be added.</param>
        <summary>Applies a regex to the text of a TextView turning the matches into
  links.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SPhoneNumberMatchFilter">
      <MemberSignature Language="C#" Value="public static Android.Text.Util.Linkify.IMatchFilter SPhoneNumberMatchFilter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Text.Util.Linkify/IMatchFilter SPhoneNumberMatchFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sPhoneNumberMatchFilter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.Util.Linkify+IMatchFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Filters out URL matches that don't have enough digits to be a
  phone number.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SPhoneNumberTransformFilter">
      <MemberSignature Language="C#" Value="public static Android.Text.Util.Linkify.ITransformFilter SPhoneNumberTransformFilter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Text.Util.Linkify/ITransformFilter SPhoneNumberTransformFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sPhoneNumberTransformFilter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.Util.Linkify+ITransformFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Transforms matched phone number text into something suitable
  to be used in a tel: URL.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SUrlMatchFilter">
      <MemberSignature Language="C#" Value="public static Android.Text.Util.Linkify.IMatchFilter SUrlMatchFilter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Text.Util.Linkify/IMatchFilter SUrlMatchFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sUrlMatchFilter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.Util.Linkify+IMatchFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Filters out web URL matches that occur after an at-sign (@).</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
