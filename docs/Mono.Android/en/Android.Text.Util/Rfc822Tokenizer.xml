<Type Name="Rfc822Tokenizer" FullName="Android.Text.Util.Rfc822Tokenizer">
  <TypeSignature Language="C#" Value="public class Rfc822Tokenizer : Java.Lang.Object, Android.Widget.MultiAutoCompleteTextView.ITokenizer, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Rfc822Tokenizer extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Android.Widget.MultiAutoCompleteTextView/ITokenizer, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Widget.MultiAutoCompleteTextView+ITokenizer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/text/util/Rfc822Tokenizer", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This class works as a Tokenizer for MultiAutoCompleteTextView for
 address list fields, and also provides a method for converting
 a string of addresses (such as might be typed into such a field)
 into a series of Rfc822Tokens.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">This class works as a Tokenizer for MultiAutoCompleteTextView for
 address list fields, and also provides a method for converting
 a string of addresses (such as might be typed into such a field)
 into a series of Rfc822Tokens.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/text/util/Rfc822Tokenizer.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc822Tokenizer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary></summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/util/Rfc822Tokenizer.html#Rfc822Tokenizer()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Rfc822Tokenizer (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindTokenEnd">
      <MemberSignature Language="C#" Value="public virtual int FindTokenEnd (Java.Lang.ICharSequence text, int cursor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 FindTokenEnd(class Java.Lang.ICharSequence text, int32 cursor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("findTokenEnd", "(Ljava/lang/CharSequence;I)I", "GetFindTokenEnd_Ljava_lang_CharSequence_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="cursor" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="cursor">To be added.</param>
        <summary>Returns the end of the token (minus trailing punctuation)
 that begins at offset <c>cursor</c> within <c>text</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the end of the token (minus trailing punctuation)
 that begins at offset <c>cursor</c> within <c>text</c>.

</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/util/Rfc822Tokenizer.html#findTokenEnd(java.lang.CharSequence, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FindTokenEnd">
      <MemberSignature Language="C#" Value="public int FindTokenEnd (string text, int cursor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindTokenEnd(string text, int32 cursor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="cursor" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="cursor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindTokenStart">
      <MemberSignature Language="C#" Value="public virtual int FindTokenStart (Java.Lang.ICharSequence text, int cursor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 FindTokenStart(class Java.Lang.ICharSequence text, int32 cursor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("findTokenStart", "(Ljava/lang/CharSequence;I)I", "GetFindTokenStart_Ljava_lang_CharSequence_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="cursor" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="cursor">To be added.</param>
        <summary>Returns the start of the token that ends at offset
 <c>cursor</c> within <c>text</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the start of the token that ends at offset
 <c>cursor</c> within <c>text</c>.

</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/util/Rfc822Tokenizer.html#findTokenStart(java.lang.CharSequence, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FindTokenStart">
      <MemberSignature Language="C#" Value="public int FindTokenStart (string text, int cursor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindTokenStart(string text, int32 cursor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="cursor" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="cursor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TerminateToken">
      <MemberSignature Language="C#" Value="public string TerminateToken (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string TerminateToken(string text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TerminateTokenFormatted">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence TerminateTokenFormatted (Java.Lang.ICharSequence text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.ICharSequence TerminateTokenFormatted(class Java.Lang.ICharSequence text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("terminateToken", "(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;", "GetTerminateToken_Ljava_lang_CharSequence_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <summary>Terminates the specified address with a comma and space.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Terminates the specified address with a comma and space.
 This assumes that the specified text already has valid syntax.
 The Adapter subclass's convertToString() method must make that
 guarantee.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/util/Rfc822Tokenizer.html#terminateToken(java.lang.CharSequence)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tokenize">
      <MemberSignature Language="C#" Value="public static Android.Text.Util.Rfc822Token[] Tokenize (Java.Lang.ICharSequence text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Text.Util.Rfc822Token[] Tokenize(class Java.Lang.ICharSequence text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("tokenize", "(Ljava/lang/CharSequence;)[Landroid/text/util/Rfc822Token;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.Util.Rfc822Token[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <summary tool="true">This method will try to take a string like
 "Foo Bar (something) &lt;foo\@google.com&gt;,
 blah\@google.com (something)"
 and convert it into one or more Rfc822Tokens.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">This method will try to take a string like
 "Foo Bar (something) &lt;foo\@google.com&gt;,
 blah\@google.com (something)"
 and convert it into one or more Rfc822Tokens.
 It does *not* decode MIME encoded-words; charset conversion
 must already have taken place if necessary.
 It will try to be tolerant of broken syntax instead of
 returning an error.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/util/Rfc822Tokenizer.html#tokenize(java.lang.CharSequence)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Tokenize">
      <MemberSignature Language="C#" Value="public static Android.Text.Util.Rfc822Token[] Tokenize (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Text.Util.Rfc822Token[] Tokenize(string text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Text.Util.Rfc822Token[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tokenize">
      <MemberSignature Language="C#" Value="public static void Tokenize (Java.Lang.ICharSequence text, System.Collections.Generic.ICollection&lt;Android.Text.Util.Rfc822Token&gt; out);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Tokenize(class Java.Lang.ICharSequence text, class System.Collections.Generic.ICollection`1&lt;class Android.Text.Util.Rfc822Token&gt; out) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("tokenize", "(Ljava/lang/CharSequence;Ljava/util/Collection;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="out" Type="System.Collections.Generic.ICollection&lt;Android.Text.Util.Rfc822Token&gt;" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="out">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tokenize">
      <MemberSignature Language="C#" Value="public static void Tokenize (string text, System.Collections.Generic.ICollection&lt;Android.Text.Util.Rfc822Token&gt; out);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Tokenize(string text, class System.Collections.Generic.ICollection`1&lt;class Android.Text.Util.Rfc822Token&gt; out) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="out" Type="System.Collections.Generic.ICollection&lt;Android.Text.Util.Rfc822Token&gt;" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="out">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
