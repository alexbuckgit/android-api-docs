<Type Name="LocationManager" FullName="Android.Locations.LocationManager">
  <TypeSignature Language="C#" Value="public class LocationManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LocationManager extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/location/LocationManager", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This class provides access to the system location services.</summary>
    <remarks />
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LocationManager (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AddGpsStatusListener">
      <MemberSignature Language="C#" Value="public virtual bool AddGpsStatusListener (Android.Locations.GpsStatus.IListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AddGpsStatusListener(class Android.Locations.GpsStatus/IListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addGpsStatusListener", "(Landroid/location/GpsStatus$Listener;)Z", "GetAddGpsStatusListener_Landroid_location_GpsStatus_Listener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Locations.GpsStatus+IListener" />
      </Parameters>
      <Docs>
        <param name="listener">GPS status listener object to register</param>
        <summary>Adds a GPS status listener.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.SecurityException">if the ACCESS_FINE_LOCATION permission is not present
</exception>
      </Docs>
    </Member>
    <Member MemberName="AddNmeaListener">
      <MemberSignature Language="C#" Value="public virtual bool AddNmeaListener (Android.Locations.GpsStatus.INmeaListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AddNmeaListener(class Android.Locations.GpsStatus/INmeaListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addNmeaListener", "(Landroid/location/GpsStatus$NmeaListener;)Z", "GetAddNmeaListener_Landroid_location_GpsStatus_NmeaListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Locations.GpsStatus+INmeaListener" />
      </Parameters>
      <Docs>
        <param name="listener">a <c><see cref="!:NoType:android/location/GpsStatus$NmeaListener;Href=../../../reference/android/location/GpsStatus.NmeaListener.html" /></c> object to register</param>
        <summary>Adds an NMEA listener.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 5" />
        <exception cref="T:Java.Lang.SecurityException">if the ACCESS_FINE_LOCATION permission is not present
</exception>
      </Docs>
    </Member>
    <Member MemberName="AddProximityAlert">
      <MemberSignature Language="C#" Value="public virtual void AddProximityAlert (double latitude, double longitude, float radius, long expiration, Android.App.PendingIntent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddProximityAlert(float64 latitude, float64 longitude, float32 radius, int64 expiration, class Android.App.PendingIntent intent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addProximityAlert", "(DDFJLandroid/app/PendingIntent;)V", "GetAddProximityAlert_DDFJLandroid_app_PendingIntent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="latitude" Type="System.Double" />
        <Parameter Name="longitude" Type="System.Double" />
        <Parameter Name="radius" Type="System.Single" />
        <Parameter Name="expiration" Type="System.Int64" />
        <Parameter Name="intent" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="latitude">the latitude of the central point of the
 alert region</param>
        <param name="longitude">the longitude of the central point of the
 alert region</param>
        <param name="radius">the radius of the central point of the
 alert region, in meters</param>
        <param name="expiration">time for this proximity alert, in milliseconds,
 or -1 to indicate no expiration</param>
        <param name="intent">a PendingIntent that will be used to generate an Intent to
 fire when entry to or exit from the alert region is detected</param>
        <summary>Set a proximity alert for the location given by the position
 (latitude, longitude) and the given radius.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.SecurityException">if <c><see cref="F:Android.Manifest.Permission.AccessFineLocation" tool="ReplaceLinkValue" /></c>
 permission is not present
</exception>
      </Docs>
    </Member>
    <Member MemberName="AddTestProvider">
      <MemberSignature Language="C#" Value="public virtual void AddTestProvider (string name, bool requiresNetwork, bool requiresSatellite, bool requiresCell, bool hasMonetaryCost, bool supportsAltitude, bool supportsSpeed, bool supportsBearing, Android.Locations.Power powerRequirement, Android.Hardware.SensorStatus accuracy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddTestProvider(string name, bool requiresNetwork, bool requiresSatellite, bool requiresCell, bool hasMonetaryCost, bool supportsAltitude, bool supportsSpeed, bool supportsBearing, valuetype Android.Locations.Power powerRequirement, valuetype Android.Hardware.SensorStatus accuracy) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addTestProvider", "(Ljava/lang/String;ZZZZZZZII)V", "GetAddTestProvider_Ljava_lang_String_ZZZZZZZIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="requiresNetwork" Type="System.Boolean" />
        <Parameter Name="requiresSatellite" Type="System.Boolean" />
        <Parameter Name="requiresCell" Type="System.Boolean" />
        <Parameter Name="hasMonetaryCost" Type="System.Boolean" />
        <Parameter Name="supportsAltitude" Type="System.Boolean" />
        <Parameter Name="supportsSpeed" Type="System.Boolean" />
        <Parameter Name="supportsBearing" Type="System.Boolean" />
        <Parameter Name="powerRequirement" Type="Android.Locations.Power">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="accuracy" Type="Android.Hardware.SensorStatus">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">the provider name</param>
        <param name="requiresNetwork">To be added.</param>
        <param name="requiresSatellite">To be added.</param>
        <param name="requiresCell">To be added.</param>
        <param name="hasMonetaryCost">To be added.</param>
        <param name="supportsAltitude">To be added.</param>
        <param name="supportsSpeed">To be added.</param>
        <param name="supportsBearing">To be added.</param>
        <param name="powerRequirement">To be added.</param>
        <param name="accuracy">To be added.</param>
        <summary>Creates a mock location provider and adds it to the set of active providers.</summary>
        <remarks />
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.SecurityException">if <c><see cref="F:Android.App.AppOpsManager.OpstrMockLocation" /></c> is not set to <c><see cref="F:Android.App.AppOpsManager.ModeAllowed" /></c> for your app.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if a provider with the given name already exists
</exception>
      </Docs>
    </Member>
    <Member MemberName="AllProviders">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; AllProviders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; AllProviders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAllProviders", "()Ljava/util/List;", "GetGetAllProvidersHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a list of the names of all known location providers.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ClearTestProviderEnabled">
      <MemberSignature Language="C#" Value="public virtual void ClearTestProviderEnabled (string provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearTestProviderEnabled(string provider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearTestProviderEnabled", "(Ljava/lang/String;)V", "GetClearTestProviderEnabled_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="provider">the provider name</param>
        <summary>Removes any mock enabled value associated with the given provider.</summary>
        <remarks />
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.SecurityException">if <c><see cref="F:Android.App.AppOpsManager.OpstrMockLocation" /></c> is not set to <c><see cref="F:Android.App.AppOpsManager.ModeAllowed" /></c> for your app.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if no provider with the given name exists
</exception>
      </Docs>
    </Member>
    <Member MemberName="ClearTestProviderLocation">
      <MemberSignature Language="C#" Value="public virtual void ClearTestProviderLocation (string provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearTestProviderLocation(string provider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearTestProviderLocation", "(Ljava/lang/String;)V", "GetClearTestProviderLocation_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="provider">the provider name</param>
        <summary>Removes any mock location associated with the given provider.</summary>
        <remarks />
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.SecurityException">if <c><see cref="F:Android.App.AppOpsManager.OpstrMockLocation" /></c> is not set to <c><see cref="F:Android.App.AppOpsManager.ModeAllowed" /></c> for your app.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if no provider with the given name exists
</exception>
      </Docs>
    </Member>
    <Member MemberName="ClearTestProviderStatus">
      <MemberSignature Language="C#" Value="public virtual void ClearTestProviderStatus (string provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearTestProviderStatus(string provider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearTestProviderStatus", "(Ljava/lang/String;)V", "GetClearTestProviderStatus_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="provider">the provider name</param>
        <summary>Removes any mock status values associated with the given provider.</summary>
        <remarks />
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.SecurityException">if <c><see cref="F:Android.App.AppOpsManager.OpstrMockLocation" /></c> is not set to <c><see cref="F:Android.App.AppOpsManager.ModeAllowed" /></c> for your app.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if no provider with the given name exists
</exception>
      </Docs>
    </Member>
    <Member MemberName="FromContext">
      <MemberSignature Language="C#" Value="public static Android.Locations.LocationManager FromContext (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Locations.LocationManager FromContext(class Android.Content.Context context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Locations.LocationManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetBestProvider">
      <MemberSignature Language="C#" Value="public virtual string GetBestProvider (Android.Locations.Criteria criteria, bool enabledOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetBestProvider(class Android.Locations.Criteria criteria, bool enabledOnly) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getBestProvider", "(Landroid/location/Criteria;Z)Ljava/lang/String;", "GetGetBestProvider_Landroid_location_Criteria_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="criteria" Type="Android.Locations.Criteria" />
        <Parameter Name="enabledOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="criteria">the criteria that need to be matched</param>
        <param name="enabledOnly">if true then only a provider that is currently enabled is returned</param>
        <summary>Returns the name of the provider that best meets the given criteria.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetGpsStatus">
      <MemberSignature Language="C#" Value="public virtual Android.Locations.GpsStatus GetGpsStatus (Android.Locations.GpsStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Locations.GpsStatus GetGpsStatus(class Android.Locations.GpsStatus status) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getGpsStatus", "(Landroid/location/GpsStatus;)Landroid/location/GpsStatus;", "GetGetGpsStatus_Landroid_location_GpsStatus_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Locations.GpsStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="Android.Locations.GpsStatus" />
      </Parameters>
      <Docs>
        <param name="status">object containing GPS status details, or null.</param>
        <summary>Retrieves information about the current status of the GPS engine.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="GetLastKnownLocation">
      <MemberSignature Language="C#" Value="public virtual Android.Locations.Location GetLastKnownLocation (string provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Locations.Location GetLastKnownLocation(string provider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getLastKnownLocation", "(Ljava/lang/String;)Landroid/location/Location;", "GetGetLastKnownLocation_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Locations.Location</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="provider">the name of the provider</param>
        <summary>Returns a Location indicating the data from the last known
 location fix obtained from the given provider.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.SecurityException">if no suitable permission is present</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if provider is null or doesn't exist
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetProvider">
      <MemberSignature Language="C#" Value="public virtual Android.Locations.LocationProvider GetProvider (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Locations.LocationProvider GetProvider(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getProvider", "(Ljava/lang/String;)Landroid/location/LocationProvider;", "GetGetProvider_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Locations.LocationProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">the provider name</param>
        <summary>Returns the information associated with the location provider of the
 given name, or null if no provider exists by that name.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if name is null or does not exist</exception>
        <exception cref="T:Java.Lang.SecurityException">if the caller is not permitted to access the
 given provider.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetProviders">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetProviders (bool enabledOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetProviders(bool enabledOnly) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getProviders", "(Z)Ljava/util/List;", "GetGetProviders_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enabledOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enabledOnly">if true then only the providers which are currently
 enabled are returned.</param>
        <summary tool="true">Returns a list of the names of location providers.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetProviders">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetProviders (Android.Locations.Criteria criteria, bool enabledOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetProviders(class Android.Locations.Criteria criteria, bool enabledOnly) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getProviders", "(Landroid/location/Criteria;Z)Ljava/util/List;", "GetGetProviders_Landroid_location_Criteria_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="criteria" Type="Android.Locations.Criteria" />
        <Parameter Name="enabledOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="criteria">the criteria that the returned providers must match</param>
        <param name="enabledOnly">if true then only the providers which are currently
 enabled are returned.</param>
        <summary>Returns a list of the names of LocationProviders that satisfy the given
 criteria, or null if none do.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GpsProvider">
      <MemberSignature Language="C#" Value="public const string GpsProvider;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string GpsProvider" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("GPS_PROVIDER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Name of the GPS location provider.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsProviderEnabled">
      <MemberSignature Language="C#" Value="public virtual bool IsProviderEnabled (string provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsProviderEnabled(string provider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isProviderEnabled", "(Ljava/lang/String;)Z", "GetIsProviderEnabled_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="provider">the name of the provider</param>
        <summary>Returns the current enabled/disabled status of the given provider.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if provider is null
</exception>
      </Docs>
    </Member>
    <Member MemberName="KeyLocationChanged">
      <MemberSignature Language="C#" Value="public const string KeyLocationChanged;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string KeyLocationChanged" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("KEY_LOCATION_CHANGED")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Key used for a Bundle extra holding a Location value
 when a location change is broadcast using a PendingIntent.</summary>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="KeyProviderEnabled">
      <MemberSignature Language="C#" Value="public const string KeyProviderEnabled;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string KeyProviderEnabled" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("KEY_PROVIDER_ENABLED")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Key used for a Bundle extra holding an Boolean status value
 when a provider enabled/disabled event is broadcast using a PendingIntent.</summary>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="KeyProximityEntering">
      <MemberSignature Language="C#" Value="public const string KeyProximityEntering;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string KeyProximityEntering" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("KEY_PROXIMITY_ENTERING")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Key used for the Bundle extra holding a boolean indicating whether
 a proximity alert is entering (true) or exiting (false).</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="KeyStatusChanged">
      <MemberSignature Language="C#" Value="public const string KeyStatusChanged;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string KeyStatusChanged" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("KEY_STATUS_CHANGED")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Key used for a Bundle extra holding an Integer status value
 when a status change is broadcast using a PendingIntent.</summary>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ModeChangedAction">
      <MemberSignature Language="C#" Value="public const string ModeChangedAction;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ModeChangedAction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MODE_CHANGED_ACTION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast intent action when <c><see cref="!:NoType:android/provider/Settings$Secure;Href=../../../reference/android/provider/Settings.Secure.html#LOCATION_MODE" /></c> changes.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="NetworkProvider">
      <MemberSignature Language="C#" Value="public const string NetworkProvider;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string NetworkProvider" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("NETWORK_PROVIDER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Name of the network location provider.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PassiveProvider">
      <MemberSignature Language="C#" Value="public const string PassiveProvider;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PassiveProvider" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PASSIVE_PROVIDER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A special location provider for receiving locations without actually initiating
 a location fix.</summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ProvidersChangedAction">
      <MemberSignature Language="C#" Value="public const string ProvidersChangedAction;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ProvidersChangedAction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PROVIDERS_CHANGED_ACTION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast intent action when the configured location providers
 change.</summary>
        <remarks />
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="RemoveGpsStatusListener">
      <MemberSignature Language="C#" Value="public virtual void RemoveGpsStatusListener (Android.Locations.GpsStatus.IListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveGpsStatusListener(class Android.Locations.GpsStatus/IListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeGpsStatusListener", "(Landroid/location/GpsStatus$Listener;)V", "GetRemoveGpsStatusListener_Landroid_location_GpsStatus_Listener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Locations.GpsStatus+IListener" />
      </Parameters>
      <Docs>
        <param name="listener">GPS status listener object to remove
</param>
        <summary>Removes a GPS status listener.</summary>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="RemoveNmeaListener">
      <MemberSignature Language="C#" Value="public virtual void RemoveNmeaListener (Android.Locations.GpsStatus.INmeaListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveNmeaListener(class Android.Locations.GpsStatus/INmeaListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeNmeaListener", "(Landroid/location/GpsStatus$NmeaListener;)V", "GetRemoveNmeaListener_Landroid_location_GpsStatus_NmeaListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Locations.GpsStatus+INmeaListener" />
      </Parameters>
      <Docs>
        <param name="listener">a <c><see cref="!:NoType:android/location/GpsStatus$NmeaListener;Href=../../../reference/android/location/GpsStatus.NmeaListener.html" /></c> object to remove
</param>
        <summary>Removes an NMEA listener.</summary>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="RemoveProximityAlert">
      <MemberSignature Language="C#" Value="public virtual void RemoveProximityAlert (Android.App.PendingIntent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveProximityAlert(class Android.App.PendingIntent intent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeProximityAlert", "(Landroid/app/PendingIntent;)V", "GetRemoveProximityAlert_Landroid_app_PendingIntent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="intent">the PendingIntent that no longer needs to be notified of
 proximity alerts</param>
        <summary>Removes the proximity alert with the given PendingIntent.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if intent is null</exception>
        <exception cref="T:Java.Lang.SecurityException">if <c><see cref="F:Android.Manifest.Permission.AccessFineLocation" tool="ReplaceLinkValue" /></c>
 permission is not present
</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveTestProvider">
      <MemberSignature Language="C#" Value="public virtual void RemoveTestProvider (string provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveTestProvider(string provider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeTestProvider", "(Ljava/lang/String;)V", "GetRemoveTestProvider_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="provider">the provider name</param>
        <summary>Removes the mock location provider with the given name.</summary>
        <remarks />
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.SecurityException">if <c><see cref="F:Android.App.AppOpsManager.OpstrMockLocation" /></c> is not set to <c><see cref="F:Android.App.AppOpsManager.ModeAllowed" /></c> for your app.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if no provider with the given name exists
</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveUpdates">
      <MemberSignature Language="C#" Value="public virtual void RemoveUpdates (Android.App.PendingIntent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveUpdates(class Android.App.PendingIntent intent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeUpdates", "(Landroid/app/PendingIntent;)V", "GetRemoveUpdates_Landroid_app_PendingIntent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="intent">pending intent object that no longer needs location updates</param>
        <summary>Removes all location updates for the specified pending intent.</summary>
        <remarks />
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if intent is null
</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveUpdates">
      <MemberSignature Language="C#" Value="public virtual void RemoveUpdates (Android.Locations.ILocationListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveUpdates(class Android.Locations.ILocationListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeUpdates", "(Landroid/location/LocationListener;)V", "GetRemoveUpdates_Landroid_location_LocationListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Locations.ILocationListener" />
      </Parameters>
      <Docs>
        <param name="listener">listener object that no longer needs location updates</param>
        <summary>Removes all location updates for the specified LocationListener.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if listener is null
</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestLocationUpdates">
      <MemberSignature Language="C#" Value="public virtual void RequestLocationUpdates (long minTime, float minDistance, Android.Locations.Criteria criteria, Android.App.PendingIntent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestLocationUpdates(int64 minTime, float32 minDistance, class Android.Locations.Criteria criteria, class Android.App.PendingIntent intent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requestLocationUpdates", "(JFLandroid/location/Criteria;Landroid/app/PendingIntent;)V", "GetRequestLocationUpdates_JFLandroid_location_Criteria_Landroid_app_PendingIntent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minTime" Type="System.Int64" />
        <Parameter Name="minDistance" Type="System.Single" />
        <Parameter Name="criteria" Type="Android.Locations.Criteria" />
        <Parameter Name="intent" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="minTime">minimum time interval between location updates, in milliseconds</param>
        <param name="minDistance">minimum distance between location updates, in meters</param>
        <param name="criteria">contains parameters for the location manager to choose the
 appropriate provider and parameters to compute the location</param>
        <param name="intent">a <c><see cref="T:Android.App.PendingIntent" /></c> to be sent for each location update</param>
        <summary>Register for location updates using a Criteria and pending intent.</summary>
        <remarks />
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if criteria is null</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if intent is null</exception>
        <exception cref="T:Java.Lang.SecurityException">if no suitable permission is present
</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestLocationUpdates">
      <MemberSignature Language="C#" Value="public virtual void RequestLocationUpdates (string provider, long minTime, float minDistance, Android.App.PendingIntent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestLocationUpdates(string provider, int64 minTime, float32 minDistance, class Android.App.PendingIntent intent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requestLocationUpdates", "(Ljava/lang/String;JFLandroid/app/PendingIntent;)V", "GetRequestLocationUpdates_Ljava_lang_String_JFLandroid_app_PendingIntent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
        <Parameter Name="minTime" Type="System.Int64" />
        <Parameter Name="minDistance" Type="System.Single" />
        <Parameter Name="intent" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="provider">the name of the provider with which to register</param>
        <param name="minTime">minimum time interval between location updates, in milliseconds</param>
        <param name="minDistance">minimum distance between location updates, in meters</param>
        <param name="intent">a <c><see cref="T:Android.App.PendingIntent" /></c> to be sent for each location update</param>
        <summary>Register for location updates using the named provider, and a
 pending intent.</summary>
        <remarks />
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if provider is null or doesn't exist
 on this device</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if intent is null</exception>
        <exception cref="T:Java.Lang.SecurityException">if no suitable permission is present
</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestLocationUpdates">
      <MemberSignature Language="C#" Value="public virtual void RequestLocationUpdates (string provider, long minTime, float minDistance, Android.Locations.ILocationListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestLocationUpdates(string provider, int64 minTime, float32 minDistance, class Android.Locations.ILocationListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requestLocationUpdates", "(Ljava/lang/String;JFLandroid/location/LocationListener;)V", "GetRequestLocationUpdates_Ljava_lang_String_JFLandroid_location_LocationListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
        <Parameter Name="minTime" Type="System.Int64" />
        <Parameter Name="minDistance" Type="System.Single" />
        <Parameter Name="listener" Type="Android.Locations.ILocationListener" />
      </Parameters>
      <Docs>
        <param name="provider">the name of the provider with which to register</param>
        <param name="minTime">minimum time interval between location updates, in milliseconds</param>
        <param name="minDistance">minimum distance between location updates, in meters</param>
        <param name="listener">a <c><see cref="T:Android.Locations.ILocationListener" /></c> whose
 <c><see cref="M:Android.Locations.ILocationListener.OnLocationChanged(Android.Locations.Location)" /></c> method will be called for
 each location update</param>
        <summary>Register for location updates using the named provider, and a
 pending intent.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if provider is null or doesn't exist
 on this device</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if listener is null</exception>
        <exception cref="T:Java.Lang.RuntimeException">if the calling thread has no Looper</exception>
        <exception cref="T:Java.Lang.SecurityException">if no suitable permission is present
</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestLocationUpdates">
      <MemberSignature Language="C#" Value="public virtual void RequestLocationUpdates (long minTime, float minDistance, Android.Locations.Criteria criteria, Android.Locations.ILocationListener listener, Android.OS.Looper looper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestLocationUpdates(int64 minTime, float32 minDistance, class Android.Locations.Criteria criteria, class Android.Locations.ILocationListener listener, class Android.OS.Looper looper) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requestLocationUpdates", "(JFLandroid/location/Criteria;Landroid/location/LocationListener;Landroid/os/Looper;)V", "GetRequestLocationUpdates_JFLandroid_location_Criteria_Landroid_location_LocationListener_Landroid_os_Looper_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minTime" Type="System.Int64" />
        <Parameter Name="minDistance" Type="System.Single" />
        <Parameter Name="criteria" Type="Android.Locations.Criteria" />
        <Parameter Name="listener" Type="Android.Locations.ILocationListener" />
        <Parameter Name="looper" Type="Android.OS.Looper" />
      </Parameters>
      <Docs>
        <param name="minTime">minimum time interval between location updates, in milliseconds</param>
        <param name="minDistance">minimum distance between location updates, in meters</param>
        <param name="criteria">contains parameters for the location manager to choose the
 appropriate provider and parameters to compute the location</param>
        <param name="listener">a <c><see cref="T:Android.Locations.ILocationListener" /></c> whose
 <c><see cref="M:Android.Locations.ILocationListener.OnLocationChanged(Android.Locations.Location)" /></c> method will be called for
 each location update</param>
        <param name="looper">a Looper object whose message queue will be used to
 implement the callback mechanism, or null to make callbacks on the calling
 thread</param>
        <summary>Register for location updates using a Criteria, and a callback
 on the specified looper thread.</summary>
        <remarks />
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if criteria is null</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if listener is null</exception>
        <exception cref="T:Java.Lang.SecurityException">if no suitable permission is present
</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestLocationUpdates">
      <MemberSignature Language="C#" Value="public virtual void RequestLocationUpdates (string provider, long minTime, float minDistance, Android.Locations.ILocationListener listener, Android.OS.Looper looper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestLocationUpdates(string provider, int64 minTime, float32 minDistance, class Android.Locations.ILocationListener listener, class Android.OS.Looper looper) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requestLocationUpdates", "(Ljava/lang/String;JFLandroid/location/LocationListener;Landroid/os/Looper;)V", "GetRequestLocationUpdates_Ljava_lang_String_JFLandroid_location_LocationListener_Landroid_os_Looper_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
        <Parameter Name="minTime" Type="System.Int64" />
        <Parameter Name="minDistance" Type="System.Single" />
        <Parameter Name="listener" Type="Android.Locations.ILocationListener" />
        <Parameter Name="looper" Type="Android.OS.Looper" />
      </Parameters>
      <Docs>
        <param name="provider">the name of the provider with which to register</param>
        <param name="minTime">minimum time interval between location updates, in milliseconds</param>
        <param name="minDistance">minimum distance between location updates, in meters</param>
        <param name="listener">a <c><see cref="T:Android.Locations.ILocationListener" /></c> whose
 <c><see cref="M:Android.Locations.ILocationListener.OnLocationChanged(Android.Locations.Location)" /></c> method will be called for
 each location update</param>
        <param name="looper">a Looper object whose message queue will be used to
 implement the callback mechanism, or null to make callbacks on the calling
 thread</param>
        <summary>Register for location updates using the named provider, and a callback on
 the specified looper thread.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if provider is null or doesn't exist</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if listener is null</exception>
        <exception cref="T:Java.Lang.SecurityException">if no suitable permission is present
</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestSingleUpdate">
      <MemberSignature Language="C#" Value="public virtual void RequestSingleUpdate (Android.Locations.Criteria criteria, Android.App.PendingIntent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestSingleUpdate(class Android.Locations.Criteria criteria, class Android.App.PendingIntent intent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requestSingleUpdate", "(Landroid/location/Criteria;Landroid/app/PendingIntent;)V", "GetRequestSingleUpdate_Landroid_location_Criteria_Landroid_app_PendingIntent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="criteria" Type="Android.Locations.Criteria" />
        <Parameter Name="intent" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="criteria">contains parameters for the location manager to choose the
 appropriate provider and parameters to compute the location</param>
        <param name="intent">a <c><see cref="T:Android.App.PendingIntent" /></c> to be sent for the location update</param>
        <summary>Register for a single location update using a Criteria and pending intent.</summary>
        <remarks />
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if provider is null or doesn't exist</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if intent is null</exception>
        <exception cref="T:Java.Lang.SecurityException">if no suitable permission is present
</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestSingleUpdate">
      <MemberSignature Language="C#" Value="public virtual void RequestSingleUpdate (string provider, Android.App.PendingIntent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestSingleUpdate(string provider, class Android.App.PendingIntent intent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requestSingleUpdate", "(Ljava/lang/String;Landroid/app/PendingIntent;)V", "GetRequestSingleUpdate_Ljava_lang_String_Landroid_app_PendingIntent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
        <Parameter Name="intent" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="provider">the name of the provider with which to register</param>
        <param name="intent">a <c><see cref="T:Android.App.PendingIntent" /></c> to be sent for the location update</param>
        <summary>Register for a single location update using a named provider and pending intent.</summary>
        <remarks />
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if provider is null or doesn't exist</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if intent is null</exception>
        <exception cref="T:Java.Lang.SecurityException">if no suitable permission is present
</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestSingleUpdate">
      <MemberSignature Language="C#" Value="public virtual void RequestSingleUpdate (Android.Locations.Criteria criteria, Android.Locations.ILocationListener listener, Android.OS.Looper looper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestSingleUpdate(class Android.Locations.Criteria criteria, class Android.Locations.ILocationListener listener, class Android.OS.Looper looper) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requestSingleUpdate", "(Landroid/location/Criteria;Landroid/location/LocationListener;Landroid/os/Looper;)V", "GetRequestSingleUpdate_Landroid_location_Criteria_Landroid_location_LocationListener_Landroid_os_Looper_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="criteria" Type="Android.Locations.Criteria" />
        <Parameter Name="listener" Type="Android.Locations.ILocationListener" />
        <Parameter Name="looper" Type="Android.OS.Looper" />
      </Parameters>
      <Docs>
        <param name="criteria">contains parameters for the location manager to choose the
 appropriate provider and parameters to compute the location</param>
        <param name="listener">a <c><see cref="T:Android.Locations.ILocationListener" /></c> whose
 <c><see cref="M:Android.Locations.ILocationListener.OnLocationChanged(Android.Locations.Location)" /></c> method will be called when
 the location update is available</param>
        <param name="looper">a Looper object whose message queue will be used to
 implement the callback mechanism, or null to make callbacks on the calling
 thread</param>
        <summary>Register for a single location update using a Criteria and
 a callback.</summary>
        <remarks />
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if criteria is null</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if listener is null</exception>
        <exception cref="T:Java.Lang.SecurityException">if no suitable permission is present
</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestSingleUpdate">
      <MemberSignature Language="C#" Value="public virtual void RequestSingleUpdate (string provider, Android.Locations.ILocationListener listener, Android.OS.Looper looper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestSingleUpdate(string provider, class Android.Locations.ILocationListener listener, class Android.OS.Looper looper) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requestSingleUpdate", "(Ljava/lang/String;Landroid/location/LocationListener;Landroid/os/Looper;)V", "GetRequestSingleUpdate_Ljava_lang_String_Landroid_location_LocationListener_Landroid_os_Looper_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
        <Parameter Name="listener" Type="Android.Locations.ILocationListener" />
        <Parameter Name="looper" Type="Android.OS.Looper" />
      </Parameters>
      <Docs>
        <param name="provider">the name of the provider with which to register</param>
        <param name="listener">a <c><see cref="T:Android.Locations.ILocationListener" /></c> whose
 <c><see cref="M:Android.Locations.ILocationListener.OnLocationChanged(Android.Locations.Location)" /></c> method will be called when
 the location update is available</param>
        <param name="looper">a Looper object whose message queue will be used to
 implement the callback mechanism, or null to make callbacks on the calling
 thread</param>
        <summary>Register for a single location update using the named provider and
 a callback.</summary>
        <remarks />
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if provider is null or doesn't exist</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if listener is null</exception>
        <exception cref="T:Java.Lang.SecurityException">if no suitable permission is present
</exception>
      </Docs>
    </Member>
    <Member MemberName="SendExtraCommand">
      <MemberSignature Language="C#" Value="public virtual bool SendExtraCommand (string provider, string command, Android.OS.Bundle extras);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SendExtraCommand(string provider, string command, class Android.OS.Bundle extras) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sendExtraCommand", "(Ljava/lang/String;Ljava/lang/String;Landroid/os/Bundle;)Z", "GetSendExtraCommand_Ljava_lang_String_Ljava_lang_String_Landroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
        <Parameter Name="command" Type="System.String" />
        <Parameter Name="extras" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="provider">name of the location provider.</param>
        <param name="command">name of the command to send to the provider.</param>
        <param name="extras">optional arguments for the command (or null).
 The provider may optionally fill the extras Bundle with results from the command.</param>
        <summary>Sends additional commands to a location provider.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetTestProviderEnabled">
      <MemberSignature Language="C#" Value="public virtual void SetTestProviderEnabled (string provider, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTestProviderEnabled(string provider, bool enabled) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTestProviderEnabled", "(Ljava/lang/String;Z)V", "GetSetTestProviderEnabled_Ljava_lang_String_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="provider">the provider name</param>
        <param name="enabled">the mock enabled value</param>
        <summary>Sets a mock enabled value for the given provider.</summary>
        <remarks />
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.SecurityException">if <c><see cref="F:Android.App.AppOpsManager.OpstrMockLocation" /></c> is not set to <c><see cref="F:Android.App.AppOpsManager.ModeAllowed" /></c> for your app.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if no provider with the given name exists
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetTestProviderLocation">
      <MemberSignature Language="C#" Value="public virtual void SetTestProviderLocation (string provider, Android.Locations.Location loc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTestProviderLocation(string provider, class Android.Locations.Location loc) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTestProviderLocation", "(Ljava/lang/String;Landroid/location/Location;)V", "GetSetTestProviderLocation_Ljava_lang_String_Landroid_location_Location_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
        <Parameter Name="loc" Type="Android.Locations.Location" />
      </Parameters>
      <Docs>
        <param name="provider">the provider name</param>
        <param name="loc">the mock location</param>
        <summary>Sets a mock location for the given provider.</summary>
        <remarks />
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.SecurityException">if <c><see cref="F:Android.App.AppOpsManager.OpstrMockLocation" /></c> is not set to <c><see cref="F:Android.App.AppOpsManager.ModeAllowed" /></c> for your app.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if no provider with the given name exists</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the location is incomplete
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetTestProviderStatus">
      <MemberSignature Language="C#" Value="public virtual void SetTestProviderStatus (string provider, Android.Locations.Availability status, Android.OS.Bundle extras, long updateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTestProviderStatus(string provider, valuetype Android.Locations.Availability status, class Android.OS.Bundle extras, int64 updateTime) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTestProviderStatus", "(Ljava/lang/String;ILandroid/os/Bundle;J)V", "GetSetTestProviderStatus_Ljava_lang_String_ILandroid_os_Bundle_JHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.String" />
        <Parameter Name="status" Type="Android.Locations.Availability">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="extras" Type="Android.OS.Bundle" />
        <Parameter Name="updateTime" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="provider">the provider name</param>
        <param name="status">the mock status</param>
        <param name="extras">a Bundle containing mock extras</param>
        <param name="updateTime">the mock update time</param>
        <summary>Sets mock status values for the given provider.</summary>
        <remarks />
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.SecurityException">if <c><see cref="F:Android.App.AppOpsManager.OpstrMockLocation" /></c> is not set to <c><see cref="F:Android.App.AppOpsManager.ModeAllowed" /></c> for your app.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if no provider with the given name exists
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
