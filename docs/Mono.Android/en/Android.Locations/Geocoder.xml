<Type Name="Geocoder" FullName="Android.Locations.Geocoder">
  <TypeSignature Language="C#" Value="public sealed class Geocoder : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Geocoder extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/location/Geocoder", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A class for handling geocoding and reverse geocoding.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">A class for handling geocoding and reverse geocoding.  Geocoding is
 the process of transforming a street address or other description
 of a location into a (latitude, longitude) coordinate.  Reverse
 geocoding is the process of transforming a (latitude, longitude)
 coordinate into a (partial) address.  The amount of detail in a
 reverse geocoded location description may vary, for example one
 might contain the full street address of the closest building, while
 another might contain only a city name and postal code.

 The Geocoder class requires a backend service that is not included in
 the core android framework.  The Geocoder query methods will return an
 empty list if there no backend service in the platform.  Use the
 isPresent() method to determine whether a Geocoder implementation
 exists.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/location/Geocoder.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Geocoder (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>Constructs a Geocoder whose responses will be localized for the
 default system Locale.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a Geocoder whose responses will be localized for the
 default system Locale.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/location/Geocoder.html#Geocoder(android.content.Context)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Geocoder (Android.Content.Context context, Java.Util.Locale locale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Java.Util.Locale locale) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Ljava/util/Locale;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="locale" Type="Java.Util.Locale" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="locale">To be added.</param>
        <summary>Constructs a Geocoder whose responses will be localized for the
 given Locale.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a Geocoder whose responses will be localized for the
 given Locale.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/location/Geocoder.html#Geocoder(android.content.Context, java.util.Locale)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if Locale is null
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFromLocation">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Android.Locations.Address&gt; GetFromLocation (double latitude, double longitude, int maxResults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Android.Locations.Address&gt; GetFromLocation(float64 latitude, float64 longitude, int32 maxResults) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getFromLocation", "(DDI)Ljava/util/List;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Locations.Address&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="latitude" Type="System.Double" />
        <Parameter Name="longitude" Type="System.Double" />
        <Parameter Name="maxResults" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="latitude">the latitude a point for the search</param>
        <param name="longitude">the longitude a point for the search</param>
        <param name="maxResults">max number of addresses to return. Smaller numbers (1 to 5) are recommended</param>
        <summary>Returns an array of Addresses that are known to describe the
 area immediately surrounding the given latitude and longitude.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns an array of Addresses that are known to describe the
 area immediately surrounding the given latitude and longitude.
 The returned addresses will be localized for the locale
 provided to this class's constructor.

 </para>
          <para tool="javadoc-to-mdoc"> The returned values may be obtained by means of a network lookup.
 The results are a best guess and are not guaranteed to be meaningful or
 correct. It may be useful to call this method from a thread separate from your
 primary UI thread.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/location/Geocoder.html#getFromLocation(double, double, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if latitude is
 less than -90 or greater than 90</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if longitude is
 less than -180 or greater than 180</exception>
        <exception cref="T:Java.IO.IOException">if the network is unavailable or any other
 I/O problem occurs
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFromLocationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Android.Locations.Address&gt;&gt; GetFromLocationAsync (double latitude, double longitude, int maxResults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class Android.Locations.Address&gt;&gt; GetFromLocationAsync(float64 latitude, float64 longitude, int32 maxResults) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Android.Locations.Address&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="latitude" Type="System.Double" />
        <Parameter Name="longitude" Type="System.Double" />
        <Parameter Name="maxResults" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="latitude">To be added.</param>
        <param name="longitude">To be added.</param>
        <param name="maxResults">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFromLocationName">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Android.Locations.Address&gt; GetFromLocationName (string locationName, int maxResults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Android.Locations.Address&gt; GetFromLocationName(string locationName, int32 maxResults) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getFromLocationName", "(Ljava/lang/String;I)Ljava/util/List;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Locations.Address&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="maxResults" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="locationName">a user-supplied description of a location</param>
        <param name="maxResults">max number of results to return. Smaller numbers (1 to 5) are recommended</param>
        <summary>Returns an array of Addresses that are known to describe the
 named location, which may be a place name such as "Dalvik,
 Iceland", an address such as "1600 Amphitheatre Parkway,
 Mountain View, CA", an airport code such as "SFO", etc.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns an array of Addresses that are known to describe the
 named location, which may be a place name such as "Dalvik,
 Iceland", an address such as "1600 Amphitheatre Parkway,
 Mountain View, CA", an airport code such as "SFO", etc..  The
 returned addresses will be localized for the locale provided to
 this class's constructor.

 </para>
          <para tool="javadoc-to-mdoc"> The query will block and returned values will be obtained by means of a network lookup.
 The results are a best guess and are not guaranteed to be meaningful or
 correct. It may be useful to call this method from a thread separate from your
 primary UI thread.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/location/Geocoder.html#getFromLocationName(java.lang.String, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if locationName is null</exception>
        <exception cref="T:Java.IO.IOException">if the network is unavailable or any other
 I/O problem occurs
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFromLocationName">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Android.Locations.Address&gt; GetFromLocationName (string locationName, int maxResults, double lowerLeftLatitude, double lowerLeftLongitude, double upperRightLatitude, double upperRightLongitude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Android.Locations.Address&gt; GetFromLocationName(string locationName, int32 maxResults, float64 lowerLeftLatitude, float64 lowerLeftLongitude, float64 upperRightLatitude, float64 upperRightLongitude) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getFromLocationName", "(Ljava/lang/String;IDDDD)Ljava/util/List;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Locations.Address&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="maxResults" Type="System.Int32" />
        <Parameter Name="lowerLeftLatitude" Type="System.Double" />
        <Parameter Name="lowerLeftLongitude" Type="System.Double" />
        <Parameter Name="upperRightLatitude" Type="System.Double" />
        <Parameter Name="upperRightLongitude" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="locationName">a user-supplied description of a location</param>
        <param name="maxResults">max number of addresses to return. Smaller numbers (1 to 5) are recommended</param>
        <param name="lowerLeftLatitude">the latitude of the lower left corner of the bounding box</param>
        <param name="lowerLeftLongitude">the longitude of the lower left corner of the bounding box</param>
        <param name="upperRightLatitude">the latitude of the upper right corner of the bounding box</param>
        <param name="upperRightLongitude">the longitude of the upper right corner of the bounding box</param>
        <summary>Returns an array of Addresses that are known to describe the
 named location, which may be a place name such as "Dalvik,
 Iceland", an address such as "1600 Amphitheatre Parkway,
 Mountain View, CA", an airport code such as "SFO", etc.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns an array of Addresses that are known to describe the
 named location, which may be a place name such as "Dalvik,
 Iceland", an address such as "1600 Amphitheatre Parkway,
 Mountain View, CA", an airport code such as "SFO", etc..  The
 returned addresses will be localized for the locale provided to
 this class's constructor.

 </para>
          <para tool="javadoc-to-mdoc"> You may specify a bounding box for the search results by including
 the Latitude and Longitude of the Lower Left point and Upper Right
 point of the box.

 </para>
          <para tool="javadoc-to-mdoc"> The query will block and returned values will be obtained by means of a network lookup.
 The results are a best guess and are not guaranteed to be meaningful or
 correct. It may be useful to call this method from a thread separate from your
 primary UI thread.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/location/Geocoder.html#getFromLocationName(java.lang.String, int, double, double, double, double)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if locationName is null</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if any latitude is
 less than -90 or greater than 90</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if any longitude is
 less than -180 or greater than 180</exception>
        <exception cref="T:Java.IO.IOException">if the network is unavailable or any other
 I/O problem occurs
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFromLocationNameAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Android.Locations.Address&gt;&gt; GetFromLocationNameAsync (string locationName, int maxResults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class Android.Locations.Address&gt;&gt; GetFromLocationNameAsync(string locationName, int32 maxResults) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Android.Locations.Address&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="maxResults" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="locationName">To be added.</param>
        <param name="maxResults">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFromLocationNameAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Android.Locations.Address&gt;&gt; GetFromLocationNameAsync (string locationName, int maxResults, double lowerLeftLatitude, double lowerLeftLongitude, double upperRightLatitude, double upperRightLongitude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IList`1&lt;class Android.Locations.Address&gt;&gt; GetFromLocationNameAsync(string locationName, int32 maxResults, float64 lowerLeftLatitude, float64 lowerLeftLongitude, float64 upperRightLatitude, float64 upperRightLongitude) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IList&lt;Android.Locations.Address&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="maxResults" Type="System.Int32" />
        <Parameter Name="lowerLeftLatitude" Type="System.Double" />
        <Parameter Name="lowerLeftLongitude" Type="System.Double" />
        <Parameter Name="upperRightLatitude" Type="System.Double" />
        <Parameter Name="upperRightLongitude" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="locationName">To be added.</param>
        <param name="maxResults">To be added.</param>
        <param name="lowerLeftLatitude">To be added.</param>
        <param name="lowerLeftLongitude">To be added.</param>
        <param name="upperRightLatitude">To be added.</param>
        <param name="upperRightLongitude">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPresent">
      <MemberSignature Language="C#" Value="public static bool IsPresent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsPresent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isPresent", "()Z", "GetIsPresentHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if the Geocoder methods getFromLocation and
 getFromLocationName are implemented.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns true if the Geocoder methods getFromLocation and
 getFromLocationName are implemented.  Lack of network
 connectivity may still cause these methods to return null or
 empty lists.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/location/Geocoder.html#isPresent()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>