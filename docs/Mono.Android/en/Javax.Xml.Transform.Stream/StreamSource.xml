<Type Name="StreamSource" FullName="Javax.Xml.Transform.Stream.StreamSource">
  <TypeSignature Language="C#" Value="public class StreamSource : Java.Lang.Object, IDisposable, Javax.Xml.Transform.ISource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StreamSource extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Javax.Xml.Transform.ISource, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Javax.Xml.Transform.ISource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("javax/xml/transform/stream/StreamSource", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary></summary>
    <remarks><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc">Acts as an holder for a transformation Source in the form
 of a stream of XML markup.</para><para tool="javadoc-to-mdoc"><i>Note:</i> Due to their internal use of either a <c><see cref="T:Java.IO.Reader" /></c> or <c><see cref="T:Java.IO.InputStream" /></c> instance,
 <c>StreamSource</c> instances may only be used once.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/javax/xml/transform/stream/StreamSource.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary></summary>
        <remarks><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc">Zero-argument default constructor.  If this constructor is used, and
 no Stream source is set using
 <c><see cref="P:Javax.Xml.Transform.Stream.StreamSource.InputStream" /></c> or
 <c><see cref="P:Javax.Xml.Transform.Stream.StreamSource.Reader" /></c>, then the
 <c>Transformer</c> will
 create an empty source <c><see cref="T:Java.IO.InputStream" /></c> using
 <c><see cref="C:Java.IO.InputStream" /></c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/javax/xml/transform/stream/StreamSource.html#StreamSource()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
        <altmember cref="M:Javax.Xml.Transform.Transformer.Transform(Javax.Xml.Transform.ISource, Javax.Xml.Transform.IResult)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamSource (Java.IO.File f);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.IO.File f) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/File;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="f" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="f">To be added.</param>
        <summary>Construct a StreamSource from a File.</summary>
        <remarks><para tool="javadoc-to-mdoc">Construct a StreamSource from a File.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/javax/xml/transform/stream/StreamSource.html#StreamSource(java.io.File)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamSource (Java.IO.Reader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.IO.Reader reader) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/Reader;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="reader" Type="Java.IO.Reader" />
      </Parameters>
      <Docs>
        <param name="reader">To be added.</param>
        <summary>Construct a StreamSource from a character reader.</summary>
        <remarks><para tool="javadoc-to-mdoc">Construct a StreamSource from a character reader.  Normally,
 a stream should be used rather than a reader, so that
 the XML parser can resolve character encoding specified
 by the XML declaration.  However, in many cases the encoding
 of the input stream is already resolved, as in the case of
 reading XML from a StringReader.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/javax/xml/transform/stream/StreamSource.html#StreamSource(java.io.Reader)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamSource (System.IO.Stream inputStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream inputStream) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/InputStream;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="inputStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inputStream">To be added.</param>
        <summary>Construct a StreamSource from a byte stream.</summary>
        <remarks><para tool="javadoc-to-mdoc">Construct a StreamSource from a byte stream.  Normally,
 a stream should be used rather than a reader, so
 the XML parser can resolve character encoding specified
 by the XML declaration.

 </para><para tool="javadoc-to-mdoc">If this constructor is used to process a stylesheet, normally
 setSystemId should also be called, so that relative URI references
 can be resolved.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/javax/xml/transform/stream/StreamSource.html#StreamSource(java.io.InputStream)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamSource (string systemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string systemId) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="systemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="systemId">To be added.</param>
        <summary>Construct a StreamSource from a URL.</summary>
        <remarks><para tool="javadoc-to-mdoc">Construct a StreamSource from a URL.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/javax/xml/transform/stream/StreamSource.html#StreamSource(java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamSource (Java.IO.Reader reader, string systemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.IO.Reader reader, string systemId) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/Reader;Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="reader" Type="Java.IO.Reader" />
        <Parameter Name="systemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader">To be added.</param>
        <param name="systemId">To be added.</param>
        <summary>Construct a StreamSource from a character reader.</summary>
        <remarks><para tool="javadoc-to-mdoc">Construct a StreamSource from a character reader.  Normally,
 a stream should be used rather than a reader, so that
 the XML parser may resolve character encoding specified
 by the XML declaration.  However, in many cases the encoding
 of the input stream is already resolved, as in the case of
 reading XML from a StringReader.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/javax/xml/transform/stream/StreamSource.html#StreamSource(java.io.Reader, java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected StreamSource (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamSource (System.IO.Stream inputStream, string systemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream inputStream, string systemId) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/InputStream;Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="inputStream" Type="System.IO.Stream" />
        <Parameter Name="systemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputStream">To be added.</param>
        <param name="systemId">To be added.</param>
        <summary>Construct a StreamSource from a byte stream.</summary>
        <remarks><para tool="javadoc-to-mdoc">Construct a StreamSource from a byte stream.  Normally,
 a stream should be used rather than a reader, so that
 the XML parser can resolve character encoding specified
 by the XML declaration.

 </para><para tool="javadoc-to-mdoc">This constructor allows the systemID to be set in addition
 to the input stream, which allows relative URIs
 to be processed.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/javax/xml/transform/stream/StreamSource.html#StreamSource(java.io.InputStream, java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="Feature">
      <MemberSignature Language="C#" Value="public const string Feature;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Feature" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If <c><see cref="M:Javax.Xml.Transform.TransformerFactory.GetFeature(System.String)" /></c>
 returns true when passed this value as an argument,
 the Transformer supports Source input of this type.</summary>
        <remarks><para tool="javadoc-to-mdoc">If <c><see cref="M:Javax.Xml.Transform.TransformerFactory.GetFeature(System.String)" /></c>
 returns true when passed this value as an argument,
 the Transformer supports Source input of this type.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/javax/xml/transform/stream/StreamSource.html#FEATURE" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="InputStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream InputStream { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream InputStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getInputStream", "()Ljava/io/InputStream;", "GetGetInputStreamHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setInputStream", "(Ljava/io/InputStream;)V", "GetSetInputStream_Ljava_io_InputStream_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the byte stream that was set with setByteStream.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/javax/xml/transform/stream/StreamSource.html#getInputStream()" target="_blank">[Android Documentation]</a><br /></format>Get the byte stream that was set with setByteStream.</para><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/javax/xml/transform/stream/StreamSource.html#setInputStream(java.io.InputStream)" target="_blank">[Android Documentation]</a><br /></format>Set the byte stream to be used as input.  Normally,
 a stream should be used rather than a reader, so that
 the XML parser can resolve character encoding specified
 by the XML declaration.

 </para><para tool="javadoc-to-mdoc">If this Source object is used to process a stylesheet, normally
 setSystemId should also be called, so that relative URL references
 can be resolved.</para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="PublicId">
      <MemberSignature Language="C#" Value="public virtual string PublicId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PublicId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPublicId", "()Ljava/lang/String;", "GetGetPublicIdHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setPublicId", "(Ljava/lang/String;)V", "GetSetPublicId_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the public identifier that was set with setPublicId.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/javax/xml/transform/stream/StreamSource.html#getPublicId()" target="_blank">[Android Documentation]</a><br /></format>Get the public identifier that was set with setPublicId.</para><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/javax/xml/transform/stream/StreamSource.html#setPublicId(java.lang.String)" target="_blank">[Android Documentation]</a><br /></format>Set the public identifier for this Source.

 </para><para tool="javadoc-to-mdoc">The public identifier is always optional: if the application
 writer includes one, it will be provided as part of the
 location information.</para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="Reader">
      <MemberSignature Language="C#" Value="public virtual Java.IO.Reader Reader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.IO.Reader Reader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getReader", "()Ljava/io/Reader;", "GetGetReaderHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setReader", "(Ljava/io/Reader;)V", "GetSetReader_Ljava_io_Reader_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.Reader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the character stream that was set with setReader.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/javax/xml/transform/stream/StreamSource.html#getReader()" target="_blank">[Android Documentation]</a><br /></format>Get the character stream that was set with setReader.</para><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/javax/xml/transform/stream/StreamSource.html#setReader(java.io.Reader)" target="_blank">[Android Documentation]</a><br /></format>Set the input to be a character reader.  Normally,
 a stream should be used rather than a reader, so that
 the XML parser can resolve character encoding specified
 by the XML declaration.  However, in many cases the encoding
 of the input stream is already resolved, as in the case of
 reading XML from a StringReader.</para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetSystemId">
      <MemberSignature Language="C#" Value="public virtual void SetSystemId (Java.IO.File f);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSystemId(class Java.IO.File f) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSystemId", "(Ljava/io/File;)V", "GetSetSystemId_Ljava_io_File_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="f" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="f">Must a non-null File reference.
</param>
        <summary>Set the system ID from a File reference.</summary>
        <remarks><para tool="javadoc-to-mdoc">Set the system ID from a File reference.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/javax/xml/transform/stream/StreamSource.html#setSystemId(java.io.File)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SystemId">
      <MemberSignature Language="C#" Value="public virtual string SystemId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SystemId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSystemId", "()Ljava/lang/String;", "GetGetSystemIdHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSystemId", "(Ljava/lang/String;)V", "GetSetSystemId_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the system identifier that was set with setSystemId.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/javax/xml/transform/stream/StreamSource.html#getSystemId()" target="_blank">[Android Documentation]</a><br /></format>Get the system identifier that was set with setSystemId.</para><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/javax/xml/transform/stream/StreamSource.html#setSystemId(java.lang.String)" target="_blank">[Android Documentation]</a><br /></format>Set the system identifier for this Source.

 </para><para tool="javadoc-to-mdoc">The system identifier is optional if there is a byte stream
 or a character stream, but it is still useful to provide one,
 since the application can use it to resolve relative URIs
 and can include it in error messages and warnings (the parser
 will attempt to open a connection to the URI only if
 there is no byte stream or character stream specified).</para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
