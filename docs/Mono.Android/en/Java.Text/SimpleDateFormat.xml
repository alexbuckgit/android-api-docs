<Type Name="SimpleDateFormat" FullName="Java.Text.SimpleDateFormat">
  <TypeSignature Language="C#" Value="public class SimpleDateFormat : Java.Text.DateFormat" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SimpleDateFormat extends Java.Text.DateFormat" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Text.DateFormat</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/text/SimpleDateFormat", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Formats and parses dates in a locale-sensitive manner.</summary>
    <remarks />
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SimpleDateFormat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Constructs a new <c>SimpleDateFormat</c> for formatting and parsing
 dates and times in the <c>SHORT</c> style for the user's default locale.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SimpleDateFormat (string pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pattern">To be added.</param>
        <summary>Constructs a new <c>SimpleDateFormat</c> using the specified
 non-localized pattern and the <c>DateFormatSymbols</c> and <c>Calendar</c> for the user's default locale.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the pattern is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>pattern</c> is not considered to be usable by this
            formatter.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SimpleDateFormat (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SimpleDateFormat (string template, Java.Text.DateFormatSymbols value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string template, class Java.Text.DateFormatSymbols value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;Ljava/text/DateFormatSymbols;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="template" Type="System.String" />
        <Parameter Name="value" Type="Java.Text.DateFormatSymbols" />
      </Parameters>
      <Docs>
        <param name="template">To be added.</param>
        <param name="value">To be added.</param>
        <summary>Constructs a new <c>SimpleDateFormat</c> using the specified
 non-localized pattern and <c>DateFormatSymbols</c> and the <c>Calendar</c> for the user's default locale.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the pattern is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the pattern is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SimpleDateFormat (string template, Java.Util.Locale locale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string template, class Java.Util.Locale locale) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;Ljava/util/Locale;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="template" Type="System.String" />
        <Parameter Name="locale" Type="Java.Util.Locale" />
      </Parameters>
      <Docs>
        <param name="template">To be added.</param>
        <param name="locale">To be added.</param>
        <summary>Constructs a new <c>SimpleDateFormat</c> using the specified
 non-localized pattern and the <c>DateFormatSymbols</c> and <c>Calendar</c> for the specified locale.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the pattern is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the pattern is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ApplyLocalizedPattern">
      <MemberSignature Language="C#" Value="public virtual void ApplyLocalizedPattern (string template);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyLocalizedPattern(string template) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("applyLocalizedPattern", "(Ljava/lang/String;)V", "GetApplyLocalizedPattern_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="template" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="template">the localized pattern.
</param>
        <summary>Changes the pattern of this simple date format to the specified pattern
 which uses localized pattern characters.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ApplyPattern">
      <MemberSignature Language="C#" Value="public virtual void ApplyPattern (string template);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyPattern(string template) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("applyPattern", "(Ljava/lang/String;)V", "GetApplyPattern_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="template" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="template">the non-localized pattern.</param>
        <summary>Changes the pattern of this simple date format to the specified pattern
 which uses non-localized pattern characters.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the pattern is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the pattern is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DateFormatSymbols">
      <MemberSignature Language="C#" Value="public virtual Java.Text.DateFormatSymbols DateFormatSymbols { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Text.DateFormatSymbols DateFormatSymbols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDateFormatSymbols", "()Ljava/text/DateFormatSymbols;", "GetGetDateFormatSymbolsHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setDateFormatSymbols", "(Ljava/text/DateFormatSymbols;)V", "GetSetDateFormatSymbols_Ljava_text_DateFormatSymbols_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.DateFormatSymbols</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the <c>DateFormatSymbols</c> used by this simple date format.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public override Java.Lang.StringBuffer Format (Java.Util.Date date, Java.Lang.StringBuffer buffer, Java.Text.FieldPosition fieldPos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Lang.StringBuffer Format(class Java.Util.Date date, class Java.Lang.StringBuffer buffer, class Java.Text.FieldPosition fieldPos) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("format", "(Ljava/util/Date;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;", "GetFormat_Ljava_util_Date_Ljava_lang_StringBuffer_Ljava_text_FieldPosition_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.StringBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="date" Type="Java.Util.Date" />
        <Parameter Name="buffer" Type="Java.Lang.StringBuffer" />
        <Parameter Name="fieldPos" Type="Java.Text.FieldPosition" />
      </Parameters>
      <Docs>
        <param name="date">the date to format.</param>
        <param name="buffer">the target string buffer to append the formatted date/time to.</param>
        <param name="fieldPos">on input: an optional alignment field; on output: the offsets
            of the alignment field in the formatted text.</param>
        <summary>Formats the specified date as a string using the pattern of this date
 format and appends the string to the specified string buffer.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if there are invalid characters in the pattern.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Get2DigitYearStart">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Date Get2DigitYearStart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Date Get2DigitYearStart() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("get2DigitYearStart", "()Ljava/util/Date;", "GetGet2DigitYearStartHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Date</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the date which is the start of the one hundred year period for two-digit year values.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public override Java.Util.Date Parse (string string, Java.Text.ParsePosition position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Util.Date Parse(string string, class Java.Text.ParsePosition position) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parse", "(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;", "GetParse_Ljava_lang_String_Ljava_text_ParsePosition_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Date</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string" Type="System.String" />
        <Parameter Name="position" Type="Java.Text.ParsePosition" />
      </Parameters>
      <Docs>
        <param name="string">the string to parse using the pattern of this simple date
            format.</param>
        <param name="position">input/output parameter, specifies the start index in <c>string</c> from where to start parsing. If parsing is successful,
            it is updated with the index following the parsed text; on
            error, the index is unchanged and the error index is set to
            the index where the error occurred.</param>
        <summary>Parses a date from the specified string starting at the index specified
 by <c>position</c>.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if there are invalid characters in the pattern.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Set2DigitYearStart">
      <MemberSignature Language="C#" Value="public virtual void Set2DigitYearStart (Java.Util.Date date);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set2DigitYearStart(class Java.Util.Date date) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("set2DigitYearStart", "(Ljava/util/Date;)V", "GetSet2DigitYearStart_Ljava_util_Date_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="date" Type="Java.Util.Date" />
      </Parameters>
      <Docs>
        <param name="date">To be added.</param>
        <summary>Sets the date which is the start of the one hundred year period for two-digit year values.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ToLocalizedPattern">
      <MemberSignature Language="C#" Value="public virtual string ToLocalizedPattern ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToLocalizedPattern() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("toLocalizedPattern", "()Ljava/lang/String;", "GetToLocalizedPatternHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the pattern of this simple date format using localized pattern
 characters.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ToPattern">
      <MemberSignature Language="C#" Value="public virtual string ToPattern ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToPattern() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("toPattern", "()Ljava/lang/String;", "GetToPatternHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the pattern of this simple date format using non-localized
 pattern characters.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
