<Type Name="BreakIterator" FullName="Java.Text.BreakIterator">
  <TypeSignature Language="C#" Value="public abstract class BreakIterator : Java.Lang.Object, IDisposable, Java.Lang.ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BreakIterator extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Lang.ICloneable, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Java.Lang.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/text/BreakIterator", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Locates boundaries in text.</summary>
    <remarks><para tool="javadoc-to-mdoc">Locates boundaries in text. This class defines a protocol for objects that
 break up a piece of natural-language text according to a set of criteria.
 Instances or subclasses of <c>BreakIterator</c> can be provided, for
 example, to break a piece of text into words, sentences, or logical
 characters according to the conventions of some language or group of
 languages. We provide four built-in types of <c>BreakIterator</c>:
 <list type="bullet"><item><term><c><see cref="P:Java.Text.BreakIterator.SentenceInstance" /></c> returns a <c>BreakIterator</c> that
 locates boundaries between sentences. This is useful for triple-click
 selection, for example.</term></item><item><term><c><see cref="P:Java.Text.BreakIterator.WordInstance" /></c> returns a <c>BreakIterator</c> that locates
 boundaries between words. This is useful for double-click selection or "find
 whole words" searches. This type of <c>BreakIterator</c> makes sure there is
 a boundary position at the beginning and end of each legal word (numbers
 count as words, too). Whitespace and punctuation are kept separate from real
 words.</term></item><item><term><c>getLineInstance()</c> returns a <c>BreakIterator</c> that locates
 positions where it is legal for a text editor to wrap lines. This is similar
 to word breaking, but not the same: punctuation and whitespace are generally
 kept with words (you don't want a line to start with whitespace, for
 example), and some special characters can force a position to be considered a
 line break position or prevent a position from being a line break position.</term></item><item><term><c>getCharacterInstance()</c> returns a <c>BreakIterator</c> that
 locates boundaries between logical characters. Because of the structure of
 the Unicode encoding, a logical character may be stored internally as more
 than one Unicode code point. (A with an umlaut may be stored as an a followed
 by a separate combining umlaut character, for example, but the user still
 thinks of it as one character.) This iterator allows various processes
 (especially text editors) to treat as characters the units of text that a
 user would think of as characters, rather than the units of text that the
 computer sees as "characters".</term></item></list><c>BreakIterator</c>'s interface follows an "iterator" model (hence
 the name), meaning it has a concept of a "current position" and methods like
 <c>first()</c>, <c>last()</c>, <c>next()</c>, and <c>previous()</c> that
 update the current position. All <c>BreakIterator</c>s uphold the following
 invariants:
 <list type="bullet"><item><term>The beginning and end of the text are always treated as boundary
 positions.</term></item><item><term>The current position of the iterator is always a boundary position
 (random- access methods move the iterator to the nearest boundary position
 before or after the specified position, not <format type="text/html"><i>to</i></format> the specified
 position).</term></item><item><term><c>DONE</c> is used as a flag to indicate when iteration has stopped.
 <c>DONE</c> is only returned when the current position is the end of the
 text and the user calls <c>next()</c>, or when the current position is the
 beginning of the text and the user calls <c>previous()</c>.</term></item><item><term>Break positions are numbered by the positions of the characters that
 follow them. Thus, under normal circumstances, the position before the first
 character is 0, the position after the first character is 1, and the position
 after the last character is 1 plus the length of the string.</term></item><item><term>The client can change the position of an iterator, or the text it
 analyzes, at will, but cannot change the behavior. If the user wants
 different behavior, he must instantiate a new iterator.</term></item></list></para><para tool="javadoc-to-mdoc"><c>BreakIterator</c> accesses the text it analyzes through a
 <c><see cref="T:Java.Text.CharacterIterator" /></c>, which makes it possible to use <c>BreakIterator</c> to analyze text in any text-storage vehicle that provides a
 <c>CharacterIterator</c> interface.
 </para><para tool="javadoc-to-mdoc"><i>Note:</i> Some types of <c>BreakIterator</c> can take a long time to
 create, and instances of <c>BreakIterator</c> are not currently cached by
 the system. For optimal performance, keep instances of <c>BreakIterator</c>
 around as long as it makes sense. For example, when word-wrapping a document,
 don't create and destroy a new <c>BreakIterator</c> for each line. Create
 one break iterator for the whole document (or whatever stretch of text you're
 wrapping) and use it to do the whole job of wrapping the text.
 </para><para tool="javadoc-to-mdoc"><i>Examples</i>:
 </para><para tool="javadoc-to-mdoc">
 Creating and using text boundaries:
 <format type="text/html"><blockquote><sample external-id="0FC0572C68C4029A77AA2F1C747F97DD" /></blockquote></format></para><para tool="javadoc-to-mdoc">
 Print each element in order:
 <format type="text/html"><blockquote><sample external-id="D784057815FB2DF7CD801F479B513587" /></blockquote></format></para><para tool="javadoc-to-mdoc">
 Print each element in reverse order:
 <format type="text/html"><blockquote><sample external-id="8F1F146630650EAF2FF0552B03605862" /></blockquote></format></para><para tool="javadoc-to-mdoc">
 Print the first element:
 <format type="text/html"><blockquote><sample external-id="D0D6E241B8688FD30B850634C91FA6AD" /></blockquote></format></para><para tool="javadoc-to-mdoc">
 Print the last element:
 <format type="text/html"><blockquote><sample external-id="C373AF412ED5ABFD18A939A81D309EFD" /></blockquote></format></para><para tool="javadoc-to-mdoc">
 Print the element at a specified position:
 <format type="text/html"><blockquote><sample external-id="A40ECAE036EDDBAD51F834DA5660E9AB" /></blockquote></format></para><para tool="javadoc-to-mdoc">
 Find the next word:
 <format type="text/html"><blockquote><sample external-id="A75916E5C09519B6BB5BC3A6F8260A26" /></blockquote></format></para><para tool="javadoc-to-mdoc">
 The iterator returned by <c>BreakIterator.getWordInstance()</c> is unique in
 that the break positions it returns don't represent both the start and end of
 the thing being iterated over. That is, a sentence-break iterator returns
 breaks that each represent the end of one sentence and the beginning of the
 next. With the word-break iterator, the characters between two boundaries
 might be a word, or they might be the punctuation or whitespace between two
 words. The above code uses a simple heuristic to determine which boundary is
 the beginning of a word: If the characters between this boundary and the next
 boundary include at least one letter (this can be an alphabetical letter, a
 CJK ideograph, a Hangul syllable, a Kana character, etc.), then the text
 between this boundary and the next is a word; otherwise, it's the material
 between words.)</para><format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="T:Java.Text.CharacterIterator" /></c></term></item></list><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/BreakIterator.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BreakIterator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor, for use by subclasses.</summary>
        <remarks><para tool="javadoc-to-mdoc">Default constructor, for use by subclasses.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/BreakIterator.html#BreakIterator()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BreakIterator (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterInstance">
      <MemberSignature Language="C#" Value="public static Java.Text.BreakIterator CharacterInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Text.BreakIterator CharacterInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCharacterInstance", "()Ljava/text/BreakIterator;", "GetGetCharacterInstanceHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.BreakIterator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a new instance of <c>BreakIterator</c> to iterate over
 characters using the user's default locale.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns a new instance of <c>BreakIterator</c> to iterate over
 characters using the user's default locale.
 See "<format type="text/html"><a href="http://developer.android.com/reference/../util/Locale.html#default_locale">Be wary of the default locale</a></format>".</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/BreakIterator.html#getCharacterInstance()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object Clone() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clone", "()Ljava/lang/Object;", "GetCloneHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a copy of this iterator.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns a copy of this iterator.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/BreakIterator.html#clone()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public abstract int Current ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Current() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("current", "()I", "GetCurrentHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns this iterator's current position.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns this iterator's current position.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/BreakIterator.html#current()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Done">
      <MemberSignature Language="C#" Value="public const int Done = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 Done = (-1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DONE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>This constant is returned by iterate methods like <c>previous()</c> or
 <c>next()</c> if they have returned all valid boundaries.</summary>
        <remarks><para tool="javadoc-to-mdoc">This constant is returned by iterate methods like <c>previous()</c> or
 <c>next()</c> if they have returned all valid boundaries.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/BreakIterator.html#DONE" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="First">
      <MemberSignature Language="C#" Value="public abstract int First ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 First() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("first", "()I", "GetFirstHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sets this iterator's current position to the first boundary and returns
 that position.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Sets this iterator's current position to the first boundary and returns
 that position.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/BreakIterator.html#first()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Following">
      <MemberSignature Language="C#" Value="public abstract int Following (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Following(int32 offset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("following", "(I)I", "GetFollowing_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset">the given position to be searched for.</param>
        <summary>Sets the position of the first boundary to the one following the given
 offset and returns this position.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Sets the position of the first boundary to the one following the given
 offset and returns this position. Returns <c>DONE</c> if there is no
 boundary after the given offset.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/BreakIterator.html#following(int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the offset is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableLocales">
      <MemberSignature Language="C#" Value="public static Java.Util.Locale[] GetAvailableLocales ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.Locale[] GetAvailableLocales() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getAvailableLocales", "()[Ljava/util/Locale;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Locale[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an array of locales for which custom <c>BreakIterator</c> instances
 are available.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns an array of locales for which custom <c>BreakIterator</c> instances
 are available.
 </para><para tool="javadoc-to-mdoc">Note that Android does not support user-supplied locale service providers.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/BreakIterator.html#getAvailableLocales()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetCharacterInstance">
      <MemberSignature Language="C#" Value="public static Java.Text.BreakIterator GetCharacterInstance (Java.Util.Locale where);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Text.BreakIterator GetCharacterInstance(class Java.Util.Locale where) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getCharacterInstance", "(Ljava/util/Locale;)Ljava/text/BreakIterator;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.BreakIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="where" Type="Java.Util.Locale" />
      </Parameters>
      <Docs>
        <param name="where">the given locale.</param>
        <summary>Returns a new instance of <c>BreakIterator</c> to iterate over
 characters using the given locale.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns a new instance of <c>BreakIterator</c> to iterate over
 characters using the given locale.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/BreakIterator.html#getCharacterInstance(java.util.Locale)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineInstance">
      <MemberSignature Language="C#" Value="public static Java.Text.BreakIterator GetLineInstance (Java.Util.Locale where);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Text.BreakIterator GetLineInstance(class Java.Util.Locale where) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getLineInstance", "(Ljava/util/Locale;)Ljava/text/BreakIterator;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.BreakIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="where" Type="Java.Util.Locale" />
      </Parameters>
      <Docs>
        <param name="where">the given locale.</param>
        <summary>Returns a new instance of <c>BreakIterator</c> to iterate over
 line breaks using the given locale.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns a new instance of <c>BreakIterator</c> to iterate over
 line breaks using the given locale.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/BreakIterator.html#getLineInstance(java.util.Locale)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>where</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSentenceInstance">
      <MemberSignature Language="C#" Value="public static Java.Text.BreakIterator GetSentenceInstance (Java.Util.Locale where);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Text.BreakIterator GetSentenceInstance(class Java.Util.Locale where) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getSentenceInstance", "(Ljava/util/Locale;)Ljava/text/BreakIterator;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.BreakIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="where" Type="Java.Util.Locale" />
      </Parameters>
      <Docs>
        <param name="where">the given locale.</param>
        <summary>Returns a new instance of <c>BreakIterator</c> to iterate over
 sentence-breaks using the given locale.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns a new instance of <c>BreakIterator</c> to iterate over
 sentence-breaks using the given locale.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/BreakIterator.html#getSentenceInstance(java.util.Locale)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>where</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetWordInstance">
      <MemberSignature Language="C#" Value="public static Java.Text.BreakIterator GetWordInstance (Java.Util.Locale where);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Text.BreakIterator GetWordInstance(class Java.Util.Locale where) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getWordInstance", "(Ljava/util/Locale;)Ljava/text/BreakIterator;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.BreakIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="where" Type="Java.Util.Locale" />
      </Parameters>
      <Docs>
        <param name="where">the given locale.</param>
        <summary>Returns a new instance of <c>BreakIterator</c> to iterate over
 word-breaks using the given locale.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns a new instance of <c>BreakIterator</c> to iterate over
 word-breaks using the given locale.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/BreakIterator.html#getWordInstance(java.util.Locale)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>where</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="IsBoundary">
      <MemberSignature Language="C#" Value="public virtual bool IsBoundary (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsBoundary(int32 offset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isBoundary", "(I)Z", "GetIsBoundary_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset">the given offset to check.</param>
        <summary>Indicates whether the given offset is a boundary position.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Indicates whether the given offset is a boundary position. If this method
 returns true, the current iteration position is set to the given
 position; if the function returns false, the current iteration position
 is set as though <c><see cref="M:Java.Text.BreakIterator.Following(System.Int32)" /></c> had been called.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/BreakIterator.html#isBoundary(int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Last">
      <MemberSignature Language="C#" Value="public abstract int Last ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Last() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("last", "()I", "GetLastHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sets this iterator's current position to the last boundary and returns
 that position.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Sets this iterator's current position to the last boundary and returns
 that position.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/BreakIterator.html#last()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LineInstance">
      <MemberSignature Language="C#" Value="public static Java.Text.BreakIterator LineInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Text.BreakIterator LineInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLineInstance", "()Ljava/text/BreakIterator;", "GetGetLineInstanceHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.BreakIterator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a new instance of {<c>BreakIterator</c> to iterate over
 line breaks using the user's default locale.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns a new instance of {<c>BreakIterator</c> to iterate over
 line breaks using the user's default locale.
 See "<format type="text/html"><a href="http://developer.android.com/reference/../util/Locale.html#default_locale">Be wary of the default locale</a></format>".</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/BreakIterator.html#getLineInstance()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public abstract int Next ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Next() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("next", "()I", "GetNextHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sets this iterator's current position to the next boundary after the
 current position, and returns this position.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Sets this iterator's current position to the next boundary after the
 current position, and returns this position. Returns <c>DONE</c> if no
 boundary was found after the current position.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/BreakIterator.html#next()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public abstract int Next (int n);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Next(int32 n) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("next", "(I)I", "GetNext_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="n">the given position.</param>
        <summary>Sets this iterator's current position to the next boundary after the
 given position, and returns that position.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Sets this iterator's current position to the next boundary after the
 given position, and returns that position. Returns <c>DONE</c> if no
 boundary was found after the given position.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/BreakIterator.html#next(int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Preceding">
      <MemberSignature Language="C#" Value="public virtual int Preceding (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Preceding(int32 offset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("preceding", "(I)I", "GetPreceding_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset">the given start position to be searched for.</param>
        <summary>Returns the position of last boundary preceding the given offset, and
 sets the current position to the returned value, or <c>DONE</c> if the
 given offset specifies the starting position.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns the position of last boundary preceding the given offset, and
 sets the current position to the returned value, or <c>DONE</c> if the
 given offset specifies the starting position.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/BreakIterator.html#preceding(int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the offset is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="public abstract int Previous ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Previous() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("previous", "()I", "GetPreviousHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sets this iterator's current position to the previous boundary before the
 current position and returns that position.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Sets this iterator's current position to the previous boundary before the
 current position and returns that position. Returns <c>DONE</c> if
 no boundary was found before the current position.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/BreakIterator.html#previous()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SentenceInstance">
      <MemberSignature Language="C#" Value="public static Java.Text.BreakIterator SentenceInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Text.BreakIterator SentenceInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSentenceInstance", "()Ljava/text/BreakIterator;", "GetGetSentenceInstanceHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.BreakIterator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a new instance of <c>BreakIterator</c> to iterate over
 sentence-breaks using the default locale.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns a new instance of <c>BreakIterator</c> to iterate over
 sentence-breaks using the default locale.
 See "<format type="text/html"><a href="http://developer.android.com/reference/../util/Locale.html#default_locale">Be wary of the default locale</a></format>".</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/BreakIterator.html#getSentenceInstance()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public virtual void SetText (string newText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetText(string newText) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setText", "(Ljava/lang/String;)V", "GetSetText_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="newText">the new text string to be analyzed.
</param>
        <summary>Sets the new text string to be analyzed, the current position will be
 reset to the beginning of this new string, and the old string will be
 lost.</summary>
        <remarks><para tool="javadoc-to-mdoc">Sets the new text string to be analyzed, the current position will be
 reset to the beginning of this new string, and the old string will be
 lost.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/BreakIterator.html#setText(java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public abstract Java.Text.ICharacterIterator Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Text.ICharacterIterator Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getText", "()Ljava/text/CharacterIterator;", "GetGetTextHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setText", "(Ljava/text/CharacterIterator;)V", "GetSetText_Ljava_text_CharacterIterator_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.ICharacterIterator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a <c>CharacterIterator</c> which represents the text being
 analyzed.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/java/text/BreakIterator.html#getText()" target="_blank">[Android Documentation]</a><br /></format>Returns a <c>CharacterIterator</c> which represents the text being
 analyzed. Please note that the returned value is probably the internal
 iterator used by this object. If the invoker wants to modify the status
 of the returned iterator, it is recommended to first create a clone of
 the iterator returned.</para><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/java/text/BreakIterator.html#setText(java.text.CharacterIterator)" target="_blank">[Android Documentation]</a><br /></format>Sets the new text to be analyzed by the given <c>CharacterIterator</c>.
 The position will be reset to the beginning of the new text, and other
 status information of this iterator will be kept.</para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WordInstance">
      <MemberSignature Language="C#" Value="public static Java.Text.BreakIterator WordInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Text.BreakIterator WordInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getWordInstance", "()Ljava/text/BreakIterator;", "GetGetWordInstanceHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.BreakIterator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a new instance of <c>BreakIterator</c> to iterate over
 word-breaks using the default locale.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns a new instance of <c>BreakIterator</c> to iterate over
 word-breaks using the default locale.
 See "<format type="text/html"><a href="http://developer.android.com/reference/../util/Locale.html#default_locale">Be wary of the default locale</a></format>".</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/BreakIterator.html#getWordInstance()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
