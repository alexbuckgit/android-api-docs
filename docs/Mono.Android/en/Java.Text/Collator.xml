<Type Name="Collator" FullName="Java.Text.Collator">
  <TypeSignature Language="C#" Value="public abstract class Collator : Java.Lang.Object, IDisposable, Java.Lang.ICloneable, Java.Util.IComparator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Collator extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Lang.ICloneable, class Java.Util.IComparator, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Java.Lang.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Util.IComparator</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/text/Collator", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Performs locale-sensitive string comparison.</summary>
    <remarks><para tool="javadoc-to-mdoc">Performs locale-sensitive string comparison. A concrete subclass,
 <c><see cref="T:Java.Text.RuleBasedCollator" /></c>, allows customization of the collation ordering by
 the use of rule sets.
 </para><para tool="javadoc-to-mdoc">
 Following the 's
 specifications for the , there are 4 different levels of strength used in
 comparisons:
 <list type="bullet"><item><term>PRIMARY strength: Typically, this is used to denote differences between
 base characters (for example, "a" &lt; "b"). It is the strongest difference.
 For example, dictionaries are divided into different sections by base
 character.
 </term></item><item><term>SECONDARY strength: Accents in the characters are considered secondary
 differences (for example, "as" &lt; "&amp;agrave;s" &lt; "at"). Other differences
 between letters can also be considered secondary differences, depending on
 the language. A secondary difference is ignored when there is a primary
 difference anywhere in the strings.
 </term></item><item><term>TERTIARY strength: Upper and lower case differences in characters are
 distinguished at tertiary strength (for example, "ao" &lt; "Ao" &lt;
 "a&amp;ograve;"). In addition, a variant of a letter differs from the base form
 on the tertiary strength (such as "A" and "&amp;#9398;"). Another example is the
 difference between large and small Kana. A tertiary difference is ignored
 when there is a primary or secondary difference anywhere in the strings.
 </term></item><item><term>IDENTICAL strength: When all other strengths are equal, the IDENTICAL
 strength is used as a tiebreaker. The Unicode code point values of the NFD
 form of each string are compared, just in case there is no difference. For
 example, Hebrew cantellation marks are only distinguished at this strength.
 This strength should be used sparingly, as only code point value differences
 between two strings are an extremely rare occurrence. Using this strength
 substantially decreases the performance for both comparison and collation key
 generation APIs. This strength also increases the size of the collation key.
 </term></item></list></para><para tool="javadoc-to-mdoc">
 This <c>Collator</c> deals only with two decomposition modes, the canonical
 decomposition mode and one that does not use any decomposition. The
 compatibility decomposition mode
 <c>java.text.Collator.FULL_DECOMPOSITION</c> is not supported here. If the
 canonical decomposition mode is set, <c>Collator</c> handles un-normalized
 text properly, producing the same results as if the text were normalized in
 NFD. If canonical decomposition is turned off, it is the user's
 responsibility to ensure that all text is already in the appropriate form
 before performing a comparison or before getting a <c><see cref="T:Java.Text.CollationKey" /></c>.
 </para><para tool="javadoc-to-mdoc"><i>Examples:</i><format type="text/html"><blockquote><sample external-id="2013235B1F519A31823417CEB4353242" /></blockquote></format></para><para tool="javadoc-to-mdoc">
 The following example shows how to compare two strings using the collator for
 the default locale.
 <format type="text/html"><blockquote><sample external-id="DB2A080094D3B837D3122D871F6BB8E7" /></blockquote></format></para><format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="T:Java.Text.RuleBasedCollator" /></c></term></item><item><term><c><see cref="T:Java.Text.CollationKey" /></c></term></item></list><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/Collator.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Collator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Constructs a new <c>Collator</c> instance.</summary>
        <remarks><para tool="javadoc-to-mdoc">Constructs a new <c>Collator</c> instance.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/Collator.html#Collator()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Collator (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanonicalDecomposition">
      <MemberSignature Language="C#" Value="public const int CanonicalDecomposition = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 CanonicalDecomposition = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CANONICAL_DECOMPOSITION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Constant used to specify the decomposition rule.</summary>
        <remarks><para tool="javadoc-to-mdoc">Constant used to specify the decomposition rule.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/Collator.html#CANONICAL_DECOMPOSITION" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object Clone() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clone", "()Ljava/lang/Object;", "GetCloneHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a new collator with the same decomposition mode and
 strength value as this collator.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns a new collator with the same decomposition mode and
 strength value as this collator.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/Collator.html#clone()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Java.Lang.ICloneable" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (Java.Lang.Object object1, Java.Lang.Object object2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(class Java.Lang.Object object1, class Java.Lang.Object object2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("compare", "(Ljava/lang/Object;Ljava/lang/Object;)I", "GetCompare_Ljava_lang_Object_Ljava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="object1" Type="Java.Lang.Object" />
        <Parameter Name="object2" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="object1">the first string to compare.</param>
        <param name="object2">the second string to compare.</param>
        <summary>Compares two objects to determine their relative order.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Compares two objects to determine their relative order. The objects must
 be strings.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/Collator.html#compare(java.lang.Object, java.lang.Object)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassCastException">if <c>object1</c> or <c>object2</c> is not a <c>String</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public abstract int Compare (string string1, string string2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, string string2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("compare", "(Ljava/lang/String;Ljava/lang/String;)I", "GetCompare_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="string2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="string1">the first string to compare.</param>
        <param name="string2">the second string to compare.</param>
        <summary>Compares two strings to determine their relative order.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Compares two strings to determine their relative order.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/Collator.html#compare(java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Decomposition">
      <MemberSignature Language="C#" Value="public virtual int Decomposition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Decomposition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDecomposition", "()I", "GetGetDecompositionHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setDecomposition", "(I)V", "GetSetDecomposition_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the decomposition rule for this collator.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/java/text/Collator.html#getDecomposition()" target="_blank">[Android Documentation]</a><br /></format>Returns the decomposition rule for this collator.</para><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/java/text/Collator.html#setDecomposition(int)" target="_blank">[Android Documentation]</a><br /></format>Sets the decomposition rule for this collator.</para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the provided decomposition rule is not valid. This includes
            <c>FULL_DECOMPOSITION</c>.
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the provided decomposition rule is not valid. This includes
            <c>FULL_DECOMPOSITION</c>.
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the provided decomposition rule is not valid. This includes
            <c>FULL_DECOMPOSITION</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public virtual bool Equals (string string1, string string2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(string string1, string string2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("equals", "(Ljava/lang/String;Ljava/lang/String;)Z", "GetEquals_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="string2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="string1">the first string to compare.</param>
        <param name="string2">the second string to compare.</param>
        <summary>Compares two strings using the collation rules to determine if they are
 equal.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Compares two strings using the collation rules to determine if they are
 equal.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/Collator.html#equals(java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FullDecomposition">
      <MemberSignature Language="C#" Value="public const int FullDecomposition = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 FullDecomposition = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FULL_DECOMPOSITION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Constant used to specify the decomposition rule.</summary>
        <remarks><para tool="javadoc-to-mdoc">Constant used to specify the decomposition rule. This value for
 decomposition is not supported.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/Collator.html#FULL_DECOMPOSITION" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetAvailableLocales">
      <MemberSignature Language="C#" Value="public static Java.Util.Locale[] GetAvailableLocales ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.Locale[] GetAvailableLocales() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getAvailableLocales", "()[Ljava/util/Locale;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Locale[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an array of locales for which custom <c>Collator</c> instances
 are available.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns an array of locales for which custom <c>Collator</c> instances
 are available.
 </para><para tool="javadoc-to-mdoc">Note that Android does not support user-supplied locale service providers.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/Collator.html#getAvailableLocales()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetCollationKey">
      <MemberSignature Language="C#" Value="public abstract Java.Text.CollationKey GetCollationKey (string string);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Text.CollationKey GetCollationKey(string string) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getCollationKey", "(Ljava/lang/String;)Ljava/text/CollationKey;", "GetGetCollationKey_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.CollationKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="string">the source string that is converted into a collation key.</param>
        <summary>Returns a <c><see cref="T:Java.Text.CollationKey" /></c> for the specified string for this collator
 with the current decomposition rule and strength value.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns a <c><see cref="T:Java.Text.CollationKey" /></c> for the specified string for this collator
 with the current decomposition rule and strength value.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/Collator.html#getCollationKey(java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public abstract int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("hashCode", "()I", "GetGetHashCodeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an integer hash code for this object.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns an integer hash code for this object. By contract, any two
 objects for which <c><see cref="M:Java.Lang.Object.Equals(Java.Lang.Object)" /></c> returns <c>true</c> must return
 the same hash code value. This means that subclasses of <c>Object</c>
 usually override both methods or neither method.

 </para><para tool="javadoc-to-mdoc">Note that hash values must not change over time unless information used in equals
 comparisons also changes.

 </para><para tool="javadoc-to-mdoc">See <see cref="!:Java.Lang.Object.writing_hashCode" />
 if you intend implementing your own <c>hashCode</c> method.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/Collator.html#hashCode()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Java.Text.Collator GetInstance (Java.Util.Locale locale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Text.Collator GetInstance(class Java.Util.Locale locale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInstance", "(Ljava/util/Locale;)Ljava/text/Collator;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.Collator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locale" Type="Java.Util.Locale" />
      </Parameters>
      <Docs>
        <param name="locale">To be added.</param>
        <summary>Returns a <c>Collator</c> instance which is appropriate for <c>locale</c>.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns a <c>Collator</c> instance which is appropriate for <c>locale</c>.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/Collator.html#getInstance(java.util.Locale)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Identical">
      <MemberSignature Language="C#" Value="public const int Identical = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 Identical = (3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("IDENTICAL")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Constant used to specify the collation strength.</summary>
        <remarks><para tool="javadoc-to-mdoc">Constant used to specify the collation strength.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/Collator.html#IDENTICAL" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static Java.Text.Collator Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Text.Collator Instance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getInstance", "()Ljava/text/Collator;", "GetGetInstanceHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.Collator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a <c>Collator</c> instance which is appropriate for the user's default
 <c>Locale</c>.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns a <c>Collator</c> instance which is appropriate for the user's default
 <c>Locale</c>.
 See "<format type="text/html"><a href="http://developer.android.com/reference/../util/Locale.html#default_locale">Be wary of the default locale</a></format>".
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/Collator.html#getInstance()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Java.Util.IComparator.Compare">
      <MemberSignature Language="C#" Value="int IComparator.Compare (Java.Lang.Object object1, Java.Lang.Object object2);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 Java.Util.IComparator.Compare(class Java.Lang.Object object1, class Java.Lang.Object object2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="object1" Type="Java.Lang.Object" />
        <Parameter Name="object2" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="object1">To be added.</param>
        <param name="object2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoDecomposition">
      <MemberSignature Language="C#" Value="public const int NoDecomposition = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 NoDecomposition = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("NO_DECOMPOSITION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Constant used to specify the decomposition rule.</summary>
        <remarks><para tool="javadoc-to-mdoc">Constant used to specify the decomposition rule.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/Collator.html#NO_DECOMPOSITION" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Primary">
      <MemberSignature Language="C#" Value="public const int Primary = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 Primary = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PRIMARY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Constant used to specify the collation strength.</summary>
        <remarks><para tool="javadoc-to-mdoc">Constant used to specify the collation strength.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/Collator.html#PRIMARY" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Secondary">
      <MemberSignature Language="C#" Value="public const int Secondary = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 Secondary = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SECONDARY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Constant used to specify the collation strength.</summary>
        <remarks><para tool="javadoc-to-mdoc">Constant used to specify the collation strength.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/Collator.html#SECONDARY" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Strength">
      <MemberSignature Language="C#" Value="public virtual int Strength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Strength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getStrength", "()I", "GetGetStrengthHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setStrength", "(I)V", "GetSetStrength_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the strength value for this collator.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/java/text/Collator.html#getStrength()" target="_blank">[Android Documentation]</a><br /></format>Returns the strength value for this collator.</para><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/java/text/Collator.html#setStrength(int)" target="_blank">[Android Documentation]</a><br /></format>Sets the strength value for this collator.</para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the provided strength value is not valid.
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the provided strength value is not valid.
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the provided strength value is not valid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Tertiary">
      <MemberSignature Language="C#" Value="public const int Tertiary = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 Tertiary = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TERTIARY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Constant used to specify the collation strength.</summary>
        <remarks><para tool="javadoc-to-mdoc">Constant used to specify the collation strength.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/text/Collator.html#TERTIARY" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
