<Type Name="NumberFormat" FullName="Java.Text.NumberFormat">
  <TypeSignature Language="C#" Value="public abstract class NumberFormat : Java.Text._Format" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit NumberFormat extends Java.Text._Format" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Text._Format</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/text/NumberFormat", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>The abstract base class for all number formats.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">The abstract base class for all number formats. This class provides the
 interface for formatting and parsing numbers. <c>NumberFormat</c> also
 provides methods for determining which locales have number formats, and what
 their names are.
 </para>
      <para tool="javadoc-to-mdoc">
        <c>NumberFormat</c> helps you to format and parse numbers for any locale.
 Your code can be completely independent of the locale conventions for decimal
 points, thousands-separators, or even the particular decimal digits used, or
 whether the number format is even decimal.
 </para>
      <para tool="javadoc-to-mdoc">
 To format a number for the current locale, use one of the factory class
 methods:
 <format type="text/html"><blockquote><example><code lang="java">
 myString = NumberFormat.getInstance().format(myNumber);
 </code></example></blockquote></format></para>
      <para tool="javadoc-to-mdoc">
 If you are formatting multiple numbers, it is more efficient to get the
 format and use it multiple times so that the system doesn't have to fetch the
 information about the local language and country conventions multiple times.
 <format type="text/html"><blockquote><example><code lang="java">
 NumberFormat nf = NumberFormat.getInstance();
 for (int i = 0; i &lt; a.length; ++i) {
     output.println(nf.format(myNumber[i]) + "; ");
 }
 </code></example></blockquote></format></para>
      <para tool="javadoc-to-mdoc">
 To format a number for a different locale, specify it in the call to
 <c>getInstance</c>.
 <format type="text/html"><blockquote><example><code lang="java">
 NumberFormat nf = NumberFormat.getInstance(Locale.FRENCH);
 </code></example></blockquote></format></para>
      <para tool="javadoc-to-mdoc">
 You can also use a <c>NumberFormat</c> to parse numbers:
 <format type="text/html"><blockquote><example><code lang="java">
 myNumber = nf.parse(myString);
 </code></example></blockquote></format></para>
      <para tool="javadoc-to-mdoc">Use <c>#getInstance</c> or <c>#getNumberInstance</c> to get the default number
 format. Use <c><see cref="P:Java.Text.NumberFormat.IntegerInstance" /></c> to get an integer number format,
 <c><see cref="P:Java.Text.NumberFormat.CurrencyInstance" /></c> to get the currency number format, and
 <c><see cref="P:Java.Text.NumberFormat.PercentInstance" /></c> to get a format for displaying percentages.

 </para>
      <para tool="javadoc-to-mdoc">You can also control the display of numbers with methods such as
 <c>setMinimumFractionDigits</c>. If you want even more control over the
 format or parsing, or want to give your users more control, you can try
 casting the <c>NumberFormat</c> you get from the factory methods to a
 <c>DecimalFormat</c>. This will work for the vast majority of locales; just
 remember to put it in a <c>try</c> block in case you encounter an unusual
 one.
 </para>
      <para tool="javadoc-to-mdoc">
        <c>NumberFormat</c> is designed such that some controls work for formatting
 and others work for parsing. For example, <c>setParseIntegerOnly</c> only
 affects parsing: If set to <c>true</c>, "3456.78" is parsed as 3456 (and
 leaves the parse position just after '6'); if set to <c>false</c>,
 "3456.78" is parsed as 3456.78 (and leaves the parse position just after
 '8'). This is independent of formatting.
 </para>
      <para tool="javadoc-to-mdoc">
 You can also use forms of the <c>parse</c> and <c>format</c> methods with
 <c>ParsePosition</c> and <c>FieldPosition</c> to allow you to:
 <list type="bullet"><item><term>progressively parse through pieces of a string;</term></item><item><term>align the decimal point and other areas.</term></item></list>
 For example, you can align numbers in two ways:
 <list type="number"><item><term> If you are using a monospaced font with spacing for alignment, you can
 pass the <c>FieldPosition</c> in your format call, with <c>field</c> =
 <c>INTEGER_FIELD</c>. On output, <c>getEndIndex</c> will be set to the
 offset between the last character of the integer and the decimal. Add
 (desiredSpaceCount - getEndIndex) spaces to the front of the string.</term></item><item><term> If you are using proportional fonts, instead of padding with spaces,
 measure the width of the string in pixels from the start to
 <c>getEndIndex</c>. Then move the pen by (desiredPixelWidth -
 widthToAlignmentPoint) before drawing the text. This also works where there
 is no decimal but possibly additional characters before or after the number,
 for example with parentheses in negative numbers: "(12)" for -12.</term></item></list><format type="text/html"><h4>Synchronization</h4></format></para>
      <para tool="javadoc-to-mdoc">
 Number formats are generally not synchronized. It is recommended to create
 separate format instances for each thread. If multiple threads access a
 format concurrently, it must be synchronized externally.
 </para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <h4>DecimalFormat</h4>
        </format>
      </para>
      <para tool="javadoc-to-mdoc">
        <c>DecimalFormat</c> is the concrete implementation of <c>NumberFormat</c>,
 and the <c>NumberFormat</c> API is essentially an abstraction of
 <c>DecimalFormat's</c> API. Refer to <c>DecimalFormat</c> for more
 information about this API.</para>
      <format type="text/html">
        <h5 class="jd-tagtitle">See Also</h5>
      </format>
      <list type="bullet">
        <item>
          <term>
            <c>
              <see cref="T:Java.Text.DecimalFormat" />
            </c>
          </term>
        </item>
        <item>
          <term>
            <c>
              <see cref="T:Java.Text.ChoiceFormat" />
            </c>
          </term>
        </item>
      </list>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/java/text/NumberFormat.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NumberFormat ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Used by subclasses.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Used by subclasses. This was public in Java 5.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#NumberFormat()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NumberFormat (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Currency">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Currency Currency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.Currency Currency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCurrency", "()Ljava/util/Currency;", "GetGetCurrencyHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setCurrency", "(Ljava/util/Currency;)V", "GetSetCurrency_Ljava_util_Currency_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Currency</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the currency used by this number format.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#getCurrency()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the currency used by this number format.
 
 This implementation throws <c>UnsupportedOperationException</c>,
 concrete subclasses should override this method if they support currency
 formatting.
 </para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#setCurrency(java.util.Currency)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the currency used by this number format when formatting currency
 values. The min and max fraction digits remain the same.
 
 This implementation throws <c>UnsupportedOperationException</c>,
 concrete subclasses should override this method if they support currency
 formatting.</para>
          <para tool="javadoc-to-mdoc" />
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.UnsupportedOperationException" />
        <exception cref="T:Java.Lang.UnsupportedOperationException" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyInstance">
      <MemberSignature Language="C#" Value="public static Java.Text.NumberFormat CurrencyInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Text.NumberFormat CurrencyInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCurrencyInstance", "()Ljava/text/NumberFormat;", "GetGetCurrencyInstanceHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.NumberFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a <c>NumberFormat</c> for formatting and parsing currency values
 for the user's default locale.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c>NumberFormat</c> for formatting and parsing currency values
 for the user's default locale.
 See "<format type="text/html"><a href="http://developer.android.com/reference/../util/Locale.html#default_locale">Be wary of the default locale</a></format>".</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#getCurrencyInstance()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public string Format (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Format(float64 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("format", "(D)Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">the double to format.</param>
        <summary tool="true">Formats the specified long using the rules of this number format.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Formats the specified double using the rules of this number format.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#format(double)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public string Format (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Format(int64 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("format", "(J)Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">the long to format.</param>
        <summary>Formats the specified long using the rules of this number format.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Formats the specified long using the rules of this number format.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#format(long)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public override Java.Lang.StringBuffer Format (Java.Lang.Object object, Java.Lang.StringBuffer buffer, Java.Text.FieldPosition field);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Lang.StringBuffer Format(class Java.Lang.Object object, class Java.Lang.StringBuffer buffer, class Java.Text.FieldPosition field) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("format", "(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;", "GetFormat_Ljava_lang_Object_Ljava_lang_StringBuffer_Ljava_text_FieldPosition_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.StringBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="object" Type="Java.Lang.Object" />
        <Parameter Name="buffer" Type="Java.Lang.StringBuffer" />
        <Parameter Name="field" Type="Java.Text.FieldPosition" />
      </Parameters>
      <Docs>
        <param name="object">the object to format, must be a <c>Number</c>.</param>
        <param name="buffer">the target string buffer to append the formatted number to.</param>
        <param name="field">on input: an optional alignment field; on output: the offsets
            of the alignment field in the formatted text.</param>
        <summary>Formats a number into a supplied buffer.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Formats a number into a supplied buffer.
 </para>
          <para tool="javadoc-to-mdoc">
 The number must be a subclass of <c>Number</c>. Instances of <c>Byte</c>, <c>Short</c>,
 <c>Integer</c>, and <c>Long</c> have <c>Number.longValue</c> invoked, as do instances of
 <c>BigInteger</c> where <c>BigInteger.bitLength</c> returns <format type="text/html"><i>less than</i></format> 64. All other
 values have <c>Number.doubleValue</c> invoked instead.
 </para>
          <para tool="javadoc-to-mdoc">
 If the <c>field</c> member of <c>field</c> contains a value specifying
 a format field, then its <c>beginIndex</c> and <c>endIndex</c> members
 will be updated with the position of the first occurrence of this field
 in the formatted text.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>object</c> is not an instance of <c>Number</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public abstract Java.Lang.StringBuffer Format (double value, Java.Lang.StringBuffer buffer, Java.Text.FieldPosition field);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.StringBuffer Format(float64 value, class Java.Lang.StringBuffer buffer, class Java.Text.FieldPosition field) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("format", "(DLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;", "GetFormat_DLjava_lang_StringBuffer_Ljava_text_FieldPosition_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.StringBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="buffer" Type="Java.Lang.StringBuffer" />
        <Parameter Name="field" Type="Java.Text.FieldPosition" />
      </Parameters>
      <Docs>
        <param name="value">the double to format.</param>
        <param name="buffer">the target string buffer to append the formatted double value
            to.</param>
        <param name="field">on input: an optional alignment field; on output: the offsets
            of the alignment field in the formatted text.</param>
        <summary>Formats the specified double value as a string using the pattern of this
 number format and appends the string to the specified string buffer.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Formats the specified double value as a string using the pattern of this
 number format and appends the string to the specified string buffer.
 </para>
          <para tool="javadoc-to-mdoc">
 If the <c>field</c> member of <c>position</c> contains a value
 specifying a format field, then its <c>beginIndex</c> and
 <c>endIndex</c> members will be updated with the position of the first
 occurrence of this field in the formatted text.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#format(double, java.lang.StringBuffer, java.text.FieldPosition)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public abstract Java.Lang.StringBuffer Format (long value, Java.Lang.StringBuffer buffer, Java.Text.FieldPosition field);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.StringBuffer Format(int64 value, class Java.Lang.StringBuffer buffer, class Java.Text.FieldPosition field) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("format", "(JLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;", "GetFormat_JLjava_lang_StringBuffer_Ljava_text_FieldPosition_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.StringBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="buffer" Type="Java.Lang.StringBuffer" />
        <Parameter Name="field" Type="Java.Text.FieldPosition" />
      </Parameters>
      <Docs>
        <param name="value">the long to format.</param>
        <param name="buffer">the target string buffer to append the formatted long value
            to.</param>
        <param name="field">on input: an optional alignment field; on output: the offsets
            of the alignment field in the formatted text.</param>
        <summary>Formats the specified long value as a string using the pattern of this
 number format and appends the string to the specified string buffer.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Formats the specified long value as a string using the pattern of this
 number format and appends the string to the specified string buffer.
 </para>
          <para tool="javadoc-to-mdoc">
 If the <c>field</c> member of <c>position</c> contains a value
 specifying a format field, then its <c>beginIndex</c> and
 <c>endIndex</c> members will be updated with the position of the first
 occurrence of this field in the formatted text.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#format(long, java.lang.StringBuffer, java.text.FieldPosition)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FractionField">
      <MemberSignature Language="C#" Value="public const int FractionField = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 FractionField = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FRACTION_FIELD")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Field constant identifying the fractional part of a number.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Field constant identifying the fractional part of a number.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#FRACTION_FIELD" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetAvailableLocales">
      <MemberSignature Language="C#" Value="public static Java.Util.Locale[] GetAvailableLocales ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.Locale[] GetAvailableLocales() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getAvailableLocales", "()[Ljava/util/Locale;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Locale[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an array of locales for which custom <c>NumberFormat</c> instances
 are available.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns an array of locales for which custom <c>NumberFormat</c> instances
 are available.
 </para>
          <para tool="javadoc-to-mdoc">Note that Android does not support user-supplied locale service providers.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#getAvailableLocales()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrencyInstance">
      <MemberSignature Language="C#" Value="public static Java.Text.NumberFormat GetCurrencyInstance (Java.Util.Locale locale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Text.NumberFormat GetCurrencyInstance(class Java.Util.Locale locale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getCurrencyInstance", "(Ljava/util/Locale;)Ljava/text/NumberFormat;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.NumberFormat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locale" Type="Java.Util.Locale" />
      </Parameters>
      <Docs>
        <param name="locale">the locale to use.</param>
        <summary>Returns a <c>NumberFormat</c> for formatting and parsing currency values
 for the specified locale.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c>NumberFormat</c> for formatting and parsing currency values
 for the specified locale.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#getCurrencyInstance(java.util.Locale)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Java.Text.NumberFormat GetInstance (Java.Util.Locale locale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Text.NumberFormat GetInstance(class Java.Util.Locale locale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInstance", "(Ljava/util/Locale;)Ljava/text/NumberFormat;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.NumberFormat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locale" Type="Java.Util.Locale" />
      </Parameters>
      <Docs>
        <param name="locale">the locale to use.</param>
        <summary>Returns a <c>NumberFormat</c> for formatting and parsing numbers for the
 specified locale.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c>NumberFormat</c> for formatting and parsing numbers for the
 specified locale.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#getInstance(java.util.Locale)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetIntegerInstance">
      <MemberSignature Language="C#" Value="public static Java.Text.NumberFormat GetIntegerInstance (Java.Util.Locale locale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Text.NumberFormat GetIntegerInstance(class Java.Util.Locale locale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getIntegerInstance", "(Ljava/util/Locale;)Ljava/text/NumberFormat;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.NumberFormat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locale" Type="Java.Util.Locale" />
      </Parameters>
      <Docs>
        <param name="locale">the locale to use.</param>
        <summary>Returns a <c>NumberFormat</c> for formatting and parsing integers for
 the specified locale.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c>NumberFormat</c> for formatting and parsing integers for
 the specified locale.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#getIntegerInstance(java.util.Locale)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetNumberInstance">
      <MemberSignature Language="C#" Value="public static Java.Text.NumberFormat GetNumberInstance (Java.Util.Locale locale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Text.NumberFormat GetNumberInstance(class Java.Util.Locale locale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getNumberInstance", "(Ljava/util/Locale;)Ljava/text/NumberFormat;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.NumberFormat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locale" Type="Java.Util.Locale" />
      </Parameters>
      <Docs>
        <param name="locale">the locale to use.</param>
        <summary>Returns a <c>NumberFormat</c> for formatting and parsing numbers for the
 specified locale.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c>NumberFormat</c> for formatting and parsing numbers for the
 specified locale.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#getNumberInstance(java.util.Locale)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetPercentInstance">
      <MemberSignature Language="C#" Value="public static Java.Text.NumberFormat GetPercentInstance (Java.Util.Locale locale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Text.NumberFormat GetPercentInstance(class Java.Util.Locale locale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPercentInstance", "(Ljava/util/Locale;)Ljava/text/NumberFormat;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.NumberFormat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locale" Type="Java.Util.Locale" />
      </Parameters>
      <Docs>
        <param name="locale">To be added.</param>
        <summary>Returns a <c>NumberFormat</c> for formatting and parsing percentage
 values for the given <c>locale</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c>NumberFormat</c> for formatting and parsing percentage
 values for the given <c>locale</c>.

 </para>
          <para tool="javadoc-to-mdoc">The <c>NumberFormat</c> returned by this method should only be used
 to format floating-point numbers typically between 0 and 1 (with 1 being 100%).
 A value such as 0.53 will be treated as 53%, but 53.0 (or the integer 53) will be
 treated as 5,300%, which is rarely what you intended.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#getPercentInstance(java.util.Locale)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GroupingUsed">
      <MemberSignature Language="C#" Value="public virtual bool GroupingUsed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GroupingUsed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isGroupingUsed", "()Z", "GetIsGroupingUsedHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setGroupingUsed", "(Z)V", "GetSetGroupingUsed_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this number format formats and parses numbers using a
 grouping separator.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#isGroupingUsed()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Indicates whether this number format formats and parses numbers using a
 grouping separator.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#setGroupingUsed(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets whether this number format formats and parses numbers using a
 grouping separator.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static Java.Text.NumberFormat Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Text.NumberFormat Instance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getInstance", "()Ljava/text/NumberFormat;", "GetGetInstanceHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.NumberFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a <c>NumberFormat</c> for formatting and parsing numbers for the
 default locale.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c>NumberFormat</c> for formatting and parsing numbers for the
 default locale.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#getInstance()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IntegerField">
      <MemberSignature Language="C#" Value="public const int IntegerField = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 IntegerField = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("INTEGER_FIELD")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Field constant identifying the integer part of a number.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Field constant identifying the integer part of a number.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#INTEGER_FIELD" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IntegerInstance">
      <MemberSignature Language="C#" Value="public static Java.Text.NumberFormat IntegerInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Text.NumberFormat IntegerInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getIntegerInstance", "()Ljava/text/NumberFormat;", "GetGetIntegerInstanceHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.NumberFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a <c>NumberFormat</c> for formatting and parsing integers for the
 user's default locale.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c>NumberFormat</c> for formatting and parsing integers for the
 user's default locale.
 See "<format type="text/html"><a href="http://developer.android.com/reference/../util/Locale.html#default_locale">Be wary of the default locale</a></format>".</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#getIntegerInstance()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MaximumFractionDigits">
      <MemberSignature Language="C#" Value="public virtual int MaximumFractionDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumFractionDigits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMaximumFractionDigits", "()I", "GetGetMaximumFractionDigitsHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setMaximumFractionDigits", "(I)V", "GetSetMaximumFractionDigits_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the maximum number of fraction digits that are printed when
 formatting.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#getMaximumFractionDigits()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the maximum number of fraction digits that are printed when
 formatting. If the maximum is less than the number of fraction digits,
 the least significant digits are truncated.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#setMaximumFractionDigits(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the maximum number of fraction digits that are printed when
 formatting. If the maximum is less than the number of fraction digits,
 the least significant digits are truncated.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MaximumIntegerDigits">
      <MemberSignature Language="C#" Value="public virtual int MaximumIntegerDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumIntegerDigits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMaximumIntegerDigits", "()I", "GetGetMaximumIntegerDigitsHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setMaximumIntegerDigits", "(I)V", "GetSetMaximumIntegerDigits_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the maximum number of integer digits that are printed when
 formatting.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#getMaximumIntegerDigits()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the maximum number of integer digits that are printed when
 formatting. If the maximum is less than the number of integer digits, the
 most significant digits are truncated.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#setMaximumIntegerDigits(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the new maximum count of integer digits that are printed when
 formatting. If the maximum is less than the number of integer digits, the
 most significant digits are truncated.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MinimumFractionDigits">
      <MemberSignature Language="C#" Value="public virtual int MinimumFractionDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumFractionDigits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMinimumFractionDigits", "()I", "GetGetMinimumFractionDigitsHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setMinimumFractionDigits", "(I)V", "GetSetMinimumFractionDigits_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the minimum number of fraction digits that are printed when
 formatting.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#getMinimumFractionDigits()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the minimum number of fraction digits that are printed when
 formatting.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#setMinimumFractionDigits(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the minimum number of fraction digits that are printed when
 formatting.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MinimumIntegerDigits">
      <MemberSignature Language="C#" Value="public virtual int MinimumIntegerDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumIntegerDigits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMinimumIntegerDigits", "()I", "GetGetMinimumIntegerDigitsHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setMinimumIntegerDigits", "(I)V", "GetSetMinimumIntegerDigits_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the minimum number of integer digits that are printed when
 formatting.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#getMinimumIntegerDigits()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the minimum number of integer digits that are printed when
 formatting.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#setMinimumIntegerDigits(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the minimum number of integer digits that are printed when
 formatting.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NumberInstance">
      <MemberSignature Language="C#" Value="public static Java.Text.NumberFormat NumberInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Text.NumberFormat NumberInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getNumberInstance", "()Ljava/text/NumberFormat;", "GetGetNumberInstanceHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.NumberFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a <c>NumberFormat</c> for formatting and parsing numbers for the
 user's default locale.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c>NumberFormat</c> for formatting and parsing numbers for the
 user's default locale.
 See "<format type="text/html"><a href="http://developer.android.com/reference/../util/Locale.html#default_locale">Be wary of the default locale</a></format>".</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#getNumberInstance()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Number Parse (string string);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Number Parse(string string) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parse", "(Ljava/lang/String;)Ljava/lang/Number;", "GetParse_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Number</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="string">the string to parse.</param>
        <summary tool="true">Parses a <c>Number</c> from the specified string starting at the index
 specified by <c>position</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Parses a <c>Number</c> from the specified string using the rules of this
 number format.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#parse(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Text.ParseException">if an error occurs during parsing.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public abstract Java.Lang.Number Parse (string string, Java.Text.ParsePosition position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Number Parse(string string, class Java.Text.ParsePosition position) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parse", "(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;", "GetParse_Ljava_lang_String_Ljava_text_ParsePosition_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Number</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string" Type="System.String" />
        <Parameter Name="position" Type="Java.Text.ParsePosition" />
      </Parameters>
      <Docs>
        <param name="string">the string to parse.</param>
        <param name="position">input/output parameter, specifies the start index in
            <c>string</c> from where to start parsing. If parsing is
            successful, it is updated with the index following the parsed
            text; on error, the index is unchanged and the error index is
            set to the index where the error occurred.</param>
        <summary>Parses a <c>Number</c> from the specified string starting at the index
 specified by <c>position</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Parses a <c>Number</c> from the specified string starting at the index
 specified by <c>position</c>. If the string is successfully parsed then
 the index of the <c>ParsePosition</c> is updated to the index following
 the parsed text. On error, the index is unchanged and the error index of
 <c>ParsePosition</c> is set to the index where the error occurred.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#parse(java.lang.String, java.text.ParsePosition)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ParseIntegerOnly">
      <MemberSignature Language="C#" Value="public virtual bool ParseIntegerOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ParseIntegerOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isParseIntegerOnly", "()Z", "GetIsParseIntegerOnlyHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setParseIntegerOnly", "(Z)V", "GetSetParseIntegerOnly_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this number format only parses integer numbers.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#isParseIntegerOnly()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns true if this number format only parses integer numbers. Parsing
 stops if a decimal separator is encountered.
</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#setParseIntegerOnly(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Specifies if this number format should parse numbers only as integers or
 else as any kind of number. If this method is called with a <c>true</c>
 value then subsequent parsing attempts will stop if a decimal separator
 is encountered.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ParseObject">
      <MemberSignature Language="C#" Value="public override sealed Java.Lang.Object ParseObject (string string, Java.Text.ParsePosition position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Lang.Object ParseObject(string string, class Java.Text.ParsePosition position) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parseObject", "(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string" Type="System.String" />
        <Parameter Name="position" Type="Java.Text.ParsePosition" />
      </Parameters>
      <Docs>
        <param name="string">the string to parse.</param>
        <param name="position">input/output parameter, specifies the start index in
            <c>string</c> from where to start parsing. If parsing is
            successful, it is updated with the index following the parsed
            text; on error, the index is unchanged and the error index is
            set to the index where the error occurred.</param>
        <summary>Parses the specified string starting at the index specified by
 <c>position</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Parses the specified string starting at the index specified by
 <c>position</c>. If the string is successfully parsed then the index of
 the <c>ParsePosition</c> is updated to the index following the parsed
 text. On error, the index is unchanged and the error index of
 <c>ParsePosition</c> is set to the index where the error occurred.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#parseObject(java.lang.String, java.text.ParsePosition)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PercentInstance">
      <MemberSignature Language="C#" Value="public static Java.Text.NumberFormat PercentInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Text.NumberFormat PercentInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPercentInstance", "()Ljava/text/NumberFormat;", "GetGetPercentInstanceHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.NumberFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a <c>NumberFormat</c> for formatting and parsing percentage
 values for the user's default locale.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c>NumberFormat</c> for formatting and parsing percentage
 values for the user's default locale.
 See "<format type="text/html"><a href="http://developer.android.com/reference/../util/Locale.html#default_locale">Be wary of the default locale</a></format>".

 </para>
          <para tool="javadoc-to-mdoc">The <c>NumberFormat</c> returned by this method should only be used
 to format floating-point numbers typically between 0 and 1 (with 1 being 100%).
 A value such as 0.53 will be treated as 53%, but 53.0 (or the integer 53) will be
 treated as 5,300%, which is rarely what you intended.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#getPercentInstance()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RoundingMode">
      <MemberSignature Language="C#" Value="public virtual Java.Math.RoundingMode RoundingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Math.RoundingMode RoundingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getRoundingMode", "()Ljava/math/RoundingMode;", "GetGetRoundingModeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setRoundingMode", "(Ljava/math/RoundingMode;)V", "GetSetRoundingMode_Ljava_math_RoundingMode_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.RoundingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the <c>RoundingMode</c> used by this <c>NumberFormat</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#getRoundingMode()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the <c>RoundingMode</c> used by this <c>NumberFormat</c>. The default
 implementation in <c>NumberFormat</c> throws <c>UnsupportedOperationException</c>.
 Subclasses for which a rounding mode is meaningful are expected to override this method.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/java/text/NumberFormat.html#setRoundingMode(java.math.RoundingMode)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the <c>RoundingMode</c> used by this <c>NumberFormat</c>. The default
 implementation in <c>NumberFormat</c> throws <c>UnsupportedOperationException</c>.
 Subclasses for which a rounding mode is meaningful are expected to override this method.</para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>