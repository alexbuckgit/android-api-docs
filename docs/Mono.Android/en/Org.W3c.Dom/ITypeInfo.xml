<Type Name="ITypeInfo" FullName="Org.W3c.Dom.ITypeInfo">
  <TypeSignature Language="C#" Value="public interface ITypeInfo : Android.Runtime.IJavaObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypeInfo implements class Android.Runtime.IJavaObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("org/w3c/dom/TypeInfo", "", "Org.W3c.Dom.ITypeInfoInvoker")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>The <c>TypeInfo</c> interface represents a type referenced from
 <c>Element</c> or <c>Attr</c> nodes, specified in the schemas
 associated with the document.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">The <c>TypeInfo</c> interface represents a type referenced from
 <c>Element</c> or <c>Attr</c> nodes, specified in the schemas
 associated with the document. The type is a pair of a namespace URI and
 name properties, and depends on the document's schema.
 </para>
      <para tool="javadoc-to-mdoc"> If the document's schema is an XML DTD [], the values
 are computed as follows:
 <list type="bullet"><item><term> If this type is referenced from an
 <c>Attr</c> node, <c>typeNamespace</c> is
 <c>"http://www.w3.org/TR/REC-xml"</c> and <c>typeName</c>
 represents the <format type="text/html"><b>[attribute type]</b></format> property in the []
 . If there is no declaration for the attribute, <c>typeNamespace</c>
  and <c>typeName</c> are <c>null</c>.
 </term></item><item><term> If this type is
 referenced from an <c>Element</c> node, <c>typeNamespace</c>
 and <c>typeName</c> are <c>null</c>.
 </term></item></list></para>
      <para tool="javadoc-to-mdoc"> If the document's schema is an XML Schema []
 , the values are computed as follows using the post-schema-validation
 infoset contributions (also called PSVI contributions):
 <list type="bullet"><item><term> If the <format type="text/html"><b>[validity]</b></format> property exists AND is <i>"invalid"</i> or <i>"notKnown"</i>: the {target namespace} and {name} properties of the declared type if
 available, otherwise <c>null</c>.
 <format type="text/html"><b>Note:</b></format>  At the time of writing, the XML Schema specification does
 not require exposing the declared type. Thus, DOM implementations might
 choose not to provide type information if validity is not valid.
 </term></item><item><term> If the <format type="text/html"><b>[validity]</b></format> property exists and is <i>"valid"</i>:
 <list type="number" /></term></item><item><term> If <format type="text/html"><b>[member type definition]</b></format> exists:
 <list type="number" /></term></item><item><term>If {name} is not absent, then expose {name} and {target
 namespace} properties of the <format type="text/html"><b>[member type definition]</b></format> property;
 </term></item><item><term>Otherwise, expose the namespace and local name of the
 corresponding anonymous type name.
 </term></item><item><term> If the <format type="text/html"><b>[type definition]</b></format> property exists:
 <list type="number" /></term></item><item><term>If {name} is not absent, then expose {name} and {target
 namespace} properties of the <format type="text/html"><b>[type definition]</b></format> property;
 </term></item><item><term>Otherwise, expose the namespace and local name of the
 corresponding anonymous type name.
 </term></item><item><term> If the <format type="text/html"><b>[member type definition anonymous]</b></format> exists:
 <list type="number" /></term></item><item><term>If it is false, then expose <format type="text/html"><b>[member type definition name]</b></format> and <format type="text/html"><b>[member type definition namespace]</b></format> properties;
 </term></item><item><term>Otherwise, expose the namespace and local name of the
 corresponding anonymous type name.
 </term></item><item><term> If the <format type="text/html"><b>[type definition anonymous]</b></format> exists:
 <list type="number" /></term></item><item><term>If it is false, then expose <format type="text/html"><b>[type definition name]</b></format> and <format type="text/html"><b>[type definition namespace]</b></format> properties;
 </term></item><item><term>Otherwise, expose the namespace and local name of the
 corresponding anonymous type name.
 </term></item></list></para>
      <para tool="javadoc-to-mdoc" />
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <b>Note:</b>
        </format>  Other schema languages are outside the scope of the W3C
 and therefore should define how to represent their type systems using
 <c>TypeInfo</c>.
 </para>
      <para tool="javadoc-to-mdoc">See also the .</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/org/w3c/dom/TypeInfo.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 8" />
  </Docs>
  <Members>
    <Member MemberName="IsDerivedFrom">
      <MemberSignature Language="C#" Value="public bool IsDerivedFrom (string typeNamespaceArg, string typeNameArg, int derivationMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDerivedFrom(string typeNamespaceArg, string typeNameArg, int32 derivationMethod) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isDerivedFrom", "(Ljava/lang/String;Ljava/lang/String;I)Z", "GetIsDerivedFrom_Ljava_lang_String_Ljava_lang_String_IHandler:Org.W3c.Dom.ITypeInfoInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeNamespaceArg" Type="System.String" />
        <Parameter Name="typeNameArg" Type="System.String" />
        <Parameter Name="derivationMethod" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="typeNamespaceArg">the namespace of the other type definition.</param>
        <param name="typeNameArg">the name of the other type definition.</param>
        <param name="derivationMethod">the type of derivation and conditions applied
   between two types, as described in the list of constants provided
   in this interface.</param>
        <summary>This method returns if there is a derivation between the reference
 type definition, i.e. the <c>TypeInfo</c> on which the method
 is being called, and the other type definition, i.e. the one passed
 as parameters.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">This method returns if there is a derivation between the reference
 type definition, i.e. the <c>TypeInfo</c> on which the method
 is being called, and the other type definition, i.e. the one passed
 as parameters.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/w3c/dom/TypeInfo.html#isDerivedFrom(java.lang.String, java.lang.String, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTypeName", "()Ljava/lang/String;", "GetGetTypeNameHandler:Org.W3c.Dom.ITypeInfoInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of a type declared for the associated element or attribute,
 or <c>null</c> if unknown.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">The name of a type declared for the associated element or attribute,
 or <c>null</c> if unknown.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/w3c/dom/TypeInfo.html#getTypeName()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="TypeNamespace">
      <MemberSignature Language="C#" Value="public string TypeNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTypeNamespace", "()Ljava/lang/String;", "GetGetTypeNamespaceHandler:Org.W3c.Dom.ITypeInfoInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The namespace of the type declared for the associated element or
 attribute or <c>null</c> if the element does not have
 declaration or if no namespace information is available.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">The namespace of the type declared for the associated element or
 attribute or <c>null</c> if the element does not have
 declaration or if no namespace information is available.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/w3c/dom/TypeInfo.html#getTypeNamespace()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
  </Members>
</Type>
