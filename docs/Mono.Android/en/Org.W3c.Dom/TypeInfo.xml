<Type Name="TypeInfo" FullName="Org.W3c.Dom.TypeInfo">
  <TypeSignature Language="C#" Value="public abstract class TypeInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TypeInfo extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("org/w3c/dom/TypeInfo")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="8">
    <summary>The <c>TypeInfo</c> interface represents a type referenced from
 <c>Element</c> or <c>Attr</c> nodes, specified in the schemas
 associated with the document.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">The <c>TypeInfo</c> interface represents a type referenced from
 <c>Element</c> or <c>Attr</c> nodes, specified in the schemas
 associated with the document. The type is a pair of a namespace URI and
 name properties, and depends on the document's schema.
 </para>
      <para tool="javadoc-to-mdoc"> If the document's schema is an XML DTD [], the values
 are computed as follows:
 <list type="bullet"><item><term> If this type is referenced from an
 <c>Attr</c> node, <c>typeNamespace</c> is
 <c>"http://www.w3.org/TR/REC-xml"</c> and <c>typeName</c>
 represents the <format type="text/html"><b>[attribute type]</b></format> property in the []
 . If there is no declaration for the attribute, <c>typeNamespace</c>
  and <c>typeName</c> are <c>null</c>.
 </term></item><item><term> If this type is
 referenced from an <c>Element</c> node, <c>typeNamespace</c>
 and <c>typeName</c> are <c>null</c>.
 </term></item></list></para>
      <para tool="javadoc-to-mdoc"> If the document's schema is an XML Schema []
 , the values are computed as follows using the post-schema-validation
 infoset contributions (also called PSVI contributions):
 <list type="bullet"><item><term> If the <format type="text/html"><b>[validity]</b></format> property exists AND is <i>"invalid"</i> or <i>"notKnown"</i>: the {target namespace} and {name} properties of the declared type if
 available, otherwise <c>null</c>.
 <format type="text/html"><b>Note:</b></format>  At the time of writing, the XML Schema specification does
 not require exposing the declared type. Thus, DOM implementations might
 choose not to provide type information if validity is not valid.
 </term></item><item><term> If the <format type="text/html"><b>[validity]</b></format> property exists and is <i>"valid"</i>:
 <list type="number" /></term></item><item><term> If <format type="text/html"><b>[member type definition]</b></format> exists:
 <list type="number" /></term></item><item><term>If {name} is not absent, then expose {name} and {target
 namespace} properties of the <format type="text/html"><b>[member type definition]</b></format> property;
 </term></item><item><term>Otherwise, expose the namespace and local name of the
 corresponding anonymous type name.
 </term></item><item><term> If the <format type="text/html"><b>[type definition]</b></format> property exists:
 <list type="number" /></term></item><item><term>If {name} is not absent, then expose {name} and {target
 namespace} properties of the <format type="text/html"><b>[type definition]</b></format> property;
 </term></item><item><term>Otherwise, expose the namespace and local name of the
 corresponding anonymous type name.
 </term></item><item><term> If the <format type="text/html"><b>[member type definition anonymous]</b></format> exists:
 <list type="number" /></term></item><item><term>If it is false, then expose <format type="text/html"><b>[member type definition name]</b></format> and <format type="text/html"><b>[member type definition namespace]</b></format> properties;
 </term></item><item><term>Otherwise, expose the namespace and local name of the
 corresponding anonymous type name.
 </term></item><item><term> If the <format type="text/html"><b>[type definition anonymous]</b></format> exists:
 <list type="number" /></term></item><item><term>If it is false, then expose <format type="text/html"><b>[type definition name]</b></format> and <format type="text/html"><b>[type definition namespace]</b></format> properties;
 </term></item><item><term>Otherwise, expose the namespace and local name of the
 corresponding anonymous type name.
 </term></item></list></para>
      <para tool="javadoc-to-mdoc" />
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <b>Note:</b>
        </format>  Other schema languages are outside the scope of the W3C
 and therefore should define how to represent their type systems using
 <c>TypeInfo</c>.
 </para>
      <para tool="javadoc-to-mdoc">See also the .</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/org/w3c/dom/TypeInfo.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 8" />
  </Docs>
  <Members>
    <Member MemberName="DerivationExtension">
      <MemberSignature Language="C#" Value="public const int DerivationExtension = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 DerivationExtension = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DERIVATION_EXTENSION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>If the document's schema is an XML Schema []
 , this constant represents the derivation by .</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">If the document's schema is an XML Schema []
 , this constant represents the derivation by .
 <format type="text/html"><br /></format>  The reference type definition is derived by extension from the
 other type definition if the other type definition can be reached
 recursively following the {base type definition} property from the
 reference type definition, and at least one of the <i>derivation methods</i> involved is an extension.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/w3c/dom/TypeInfo.html#DERIVATION_EXTENSION" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DerivationList">
      <MemberSignature Language="C#" Value="public const int DerivationList = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 DerivationList = (8)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DERIVATION_LIST")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>If the document's schema is an XML Schema []
 , this constant represents the .</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">If the document's schema is an XML Schema []
 , this constant represents the .
 <format type="text/html"><br /></format> The reference type definition is derived by list from the other
 type definition if there exists two type definitions T1 and T2 such
 as the reference type definition is derived from T1 by
 <c>DERIVATION_RESTRICTION</c> or
 <c>DERIVATION_EXTENSION</c>, T2 is derived from the other type
 definition by <c>DERIVATION_RESTRICTION</c>, T1 has {variety} <i>list</i>, and T2 is the {item type definition}. Note that T1 could be the same as
 the reference type definition, and T2 could be the same as the other
 type definition.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/w3c/dom/TypeInfo.html#DERIVATION_LIST" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DerivationRestriction">
      <MemberSignature Language="C#" Value="public const int DerivationRestriction = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 DerivationRestriction = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DERIVATION_RESTRICTION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>If the document's schema is an XML Schema []
 , this constant represents the derivation by  if complex types are involved, or a  if simple types are involved.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">If the document's schema is an XML Schema []
 , this constant represents the derivation by  if complex types are involved, or a  if simple types are involved.
 <format type="text/html"><br /></format>  The reference type definition is derived by restriction from the
 other type definition if the other type definition is the same as the
 reference type definition, or if the other type definition can be
 reached recursively following the {base type definition} property
 from the reference type definition, and all the <i>derivation methods</i> involved are restriction.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/w3c/dom/TypeInfo.html#DERIVATION_RESTRICTION" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DerivationUnion">
      <MemberSignature Language="C#" Value="public const int DerivationUnion = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 DerivationUnion = (4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DERIVATION_UNION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>If the document's schema is an XML Schema []
 , this constant represents the  if simple types are involved.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">If the document's schema is an XML Schema []
 , this constant represents the  if simple types are involved.
 <format type="text/html"><br /></format> The reference type definition is derived by union from the other
 type definition if there exists two type definitions T1 and T2 such
 as the reference type definition is derived from T1 by
 <c>DERIVATION_RESTRICTION</c> or
 <c>DERIVATION_EXTENSION</c>, T2 is derived from the other type
 definition by <c>DERIVATION_RESTRICTION</c>, T1 has {variety} <i>union</i>, and one of the {member type definitions} is T2. Note that T1 could be
 the same as the reference type definition, and T2 could be the same
 as the other type definition.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/w3c/dom/TypeInfo.html#DERIVATION_UNION" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
  </Members>
</Type>
