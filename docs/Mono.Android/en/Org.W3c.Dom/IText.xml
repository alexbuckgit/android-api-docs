<Type Name="IText" FullName="Org.W3c.Dom.IText">
  <TypeSignature Language="C#" Value="public interface IText : IDisposable, Org.W3c.Dom.ICharacterData" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IText implements class Android.Runtime.IJavaObject, class Org.W3c.Dom.ICharacterData, class Org.W3c.Dom.INode, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Org.W3c.Dom.ICharacterData</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("org/w3c/dom/Text", "", "Org.W3c.Dom.ITextInvoker")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>The <c>Text</c> interface inherits from <c>CharacterData</c>
 and represents the textual content (termed  in XML) of an <c>Element</c> or <c>Attr</c>.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">The <c>Text</c> interface inherits from <c>CharacterData</c>
 and represents the textual content (termed  in XML) of an <c>Element</c> or <c>Attr</c>. If there is no
 markup inside an element's content, the text is contained in a single
 object implementing the <c>Text</c> interface that is the only
 child of the element. If there is markup, it is parsed into the
 information items (elements, comments, etc.) and <c>Text</c> nodes
 that form the list of children of the element.
 </para>
      <para tool="javadoc-to-mdoc">When a document is first made available via the DOM, there is only one
 <c>Text</c> node for each block of text. Users may create adjacent
 <c>Text</c> nodes that represent the contents of a given element
 without any intervening markup, but should be aware that there is no way
 to represent the separations between these nodes in XML or HTML, so they
 will not (in general) persist between DOM editing sessions. The
 <c>Node.normalize()</c> method merges any such adjacent
 <c>Text</c> objects into a single node for each block of text.
 </para>
      <para tool="javadoc-to-mdoc"> No lexical check is done on the content of a <c>Text</c> node
 and, depending on its position in the document, some characters must be
 escaped during serialization using character references; e.g. the
 characters "&lt;&amp;" if the textual content is part of an element or of
 an attribute, the character sequence "]]&gt;" when part of an element,
 the quotation mark character " or the apostrophe character ' when part of
 an attribute.
 </para>
      <para tool="javadoc-to-mdoc">See also the .
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/org/w3c/dom/Text.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="IsElementContentWhitespace">
      <MemberSignature Language="C#" Value="public bool IsElementContentWhitespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsElementContentWhitespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isElementContentWhitespace", "()Z", "GetIsElementContentWhitespaceHandler:Org.W3c.Dom.ITextInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether this text node contains , often abusively called "ignorable whitespace".</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns whether this text node contains , often abusively called "ignorable whitespace". The text node is
 determined to contain whitespace in element content during the load
 of the document or if validation occurs while using
 <c>Document.normalizeDocument()</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/w3c/dom/Text.html#isElementContentWhitespace()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ReplaceWholeText">
      <MemberSignature Language="C#" Value="public Org.W3c.Dom.IText ReplaceWholeText (string content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.W3c.Dom.IText ReplaceWholeText(string content) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("replaceWholeText", "(Ljava/lang/String;)Lorg/w3c/dom/Text;", "GetReplaceWholeText_Ljava_lang_String_Handler:Org.W3c.Dom.ITextInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.IText</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="content">The content of the replacing <c>Text</c> node.</param>
        <summary>Replaces the text of the current node and all logically-adjacent text
 nodes with the specified text.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Replaces the text of the current node and all logically-adjacent text
 nodes with the specified text. All logically-adjacent text nodes are
 removed including the current node unless it was the recipient of the
 replacement text.
 <format type="text/html"><br /></format>This method returns the node which received the replacement text.
 The returned node is:
 <list type="bullet"><item><term><c>null</c>, when the replacement text is
 the empty string;
 </term></item><item><term>the current node, except when the current node is
 read-only;
 </term></item><item><term> a new <c>Text</c> node of the same type (
 <c>Text</c> or <c>CDATASection</c>) as the current node
 inserted at the location of the replacement.
 </term></item></list><format type="text/html"><br /></format>For instance, in the above example calling
 <c>replaceWholeText</c> on the <c>Text</c> node that
 contains "bar" with "yo" in argument results in the following:
 <format type="text/html"><br /></format>Where the nodes to be removed are read-only descendants of an
 <c>EntityReference</c>, the <c>EntityReference</c> must
 be removed instead of the read-only nodes. If any
 <c>EntityReference</c> to be removed has descendants that are
 not <c>EntityReference</c>, <c>Text</c>, or
 <c>CDATASection</c> nodes, the <c>replaceWholeText</c>
 method must fail before performing any modification of the document,
 raising a <c>DOMException</c> with the code
 <c>NO_MODIFICATION_ALLOWED_ERR</c>.
 <format type="text/html"><br /></format>For instance, in the example below calling
 <c>replaceWholeText</c> on the <c>Text</c> node that
 contains "bar" fails, because the <c>EntityReference</c> node
 "ent" contains an <c>Element</c> node which cannot be removed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/w3c/dom/Text.html#replaceWholeText(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Org.W3c.Dom.DOMException">NO_MODIFICATION_ALLOWED_ERR: Raised if one of the <c>Text</c>
   nodes being replaced is readonly.</exception>
      </Docs>
    </Member>
    <Member MemberName="SplitText">
      <MemberSignature Language="C#" Value="public Org.W3c.Dom.IText SplitText (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.W3c.Dom.IText SplitText(int32 offset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("splitText", "(I)Lorg/w3c/dom/Text;", "GetSplitText_IHandler:Org.W3c.Dom.ITextInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.IText</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset">The 16-bit unit offset at which to split, starting from
   <c>0</c>.</param>
        <summary>Breaks this node into two nodes at the specified <c>offset</c>,
 keeping both in the tree as siblings.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Breaks this node into two nodes at the specified <c>offset</c>,
 keeping both in the tree as siblings. After being split, this node
 will contain all the content up to the <c>offset</c> point. A
 new node of the same type, which contains all the content at and
 after the <c>offset</c> point, is returned. If the original
 node had a parent node, the new node is inserted as the next sibling
 of the original node. When the <c>offset</c> is equal to the
 length of this node, the new node has no data.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/w3c/dom/Text.html#splitText(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.W3c.Dom.DOMException">INDEX_SIZE_ERR: Raised if the specified offset is negative or greater
   than the number of 16-bit units in <c>data</c>.
   <format type="text/html"><br /></format>NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly.
</exception>
      </Docs>
    </Member>
    <Member MemberName="WholeText">
      <MemberSignature Language="C#" Value="public string WholeText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WholeText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getWholeText", "()Ljava/lang/String;", "GetGetWholeTextHandler:Org.W3c.Dom.ITextInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns all text of <c>Text</c> nodes logically-adjacent text
 nodes to this node, concatenated in document order.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns all text of <c>Text</c> nodes logically-adjacent text
 nodes to this node, concatenated in document order.
 <format type="text/html"><br /></format>For instance, in the example below <c>wholeText</c> on the
 <c>Text</c> node that contains "bar" returns "barfoo", while on
 the <c>Text</c> node that contains "foo" it returns "barfoo".</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/w3c/dom/Text.html#getWholeText()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
  </Members>
</Type>