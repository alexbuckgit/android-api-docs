<Type Name="IHttpClientConnection" FullName="Org.Apache.Http.IHttpClientConnection">
  <TypeSignature Language="C#" Value="public interface IHttpClientConnection : IDisposable, Org.Apache.Http.IHttpConnection" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IHttpClientConnection implements class Android.Runtime.IJavaObject, class Org.Apache.Http.IHttpConnection, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Org.Apache.Http.IHttpConnection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("org/apache/http/HttpClientConnection", "", "Org.Apache.Http.IHttpClientConnectionInvoker")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>An HTTP connection for use on the client side.</summary>
    <remarks><para tool="javadoc-to-mdoc">An HTTP connection for use on the client side.
 It is used for sending requests and receiving responses.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/org/apache/http/HttpClientConnection.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("flush", "()V", "GetFlushHandler:Org.Apache.Http.IHttpClientConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Writes out all pending buffered data over the open connection.</summary>
        <remarks><para tool="javadoc-to-mdoc">Writes out all pending buffered data over the open connection.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/org/apache/http/HttpClientConnection.html#flush()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="IsResponseAvailable">
      <MemberSignature Language="C#" Value="public bool IsResponseAvailable (int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsResponseAvailable(int32 timeout) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isResponseAvailable", "(I)Z", "GetIsResponseAvailable_IHandler:Org.Apache.Http.IHttpClientConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="timeout">the maximum time in milliseconds to wait for data</param>
        <summary>Checks if response data is available from the connection.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Checks if response data is available from the connection. May wait for
 the specified time until some data becomes available. Note that some
 implementations may completely ignore the timeout parameter.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/org/apache/http/HttpClientConnection.html#isResponseAvailable(int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error happens on the connection
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveResponseEntity">
      <MemberSignature Language="C#" Value="public void ReceiveResponseEntity (Org.Apache.Http.IHttpResponse response);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReceiveResponseEntity(class Org.Apache.Http.IHttpResponse response) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("receiveResponseEntity", "(Lorg/apache/http/HttpResponse;)V", "GetReceiveResponseEntity_Lorg_apache_http_HttpResponse_Handler:Org.Apache.Http.IHttpClientConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="Org.Apache.Http.IHttpResponse" />
      </Parameters>
      <Docs>
        <param name="response">the response to attach the entity to</param>
        <summary>Receives the next response entity available from this connection and
 attaches it to an existing HttpResponse object.</summary>
        <remarks><para tool="javadoc-to-mdoc">Receives the next response entity available from this connection and
 attaches it to an existing HttpResponse object.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/org/apache/http/HttpClientConnection.html#receiveResponseEntity(org.apache.http.HttpResponse)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="!:NoType:HttpException" />
        <exception cref="T:Java.IO.IOException" />
        <exception cref="T:Org.Apache.Http.HttpException" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveResponseHeader">
      <MemberSignature Language="C#" Value="public Org.Apache.Http.IHttpResponse ReceiveResponseHeader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.Apache.Http.IHttpResponse ReceiveResponseHeader() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("receiveResponseHeader", "()Lorg/apache/http/HttpResponse;", "GetReceiveResponseHeaderHandler:Org.Apache.Http.IHttpClientConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.IHttpResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Receives the request line and headers of the next response available from
 this connection.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Receives the request line and headers of the next response available from
 this connection. The caller should examine the HttpResponse object to
 find out if it should try to receive a response entity as well.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/org/apache/http/HttpClientConnection.html#receiveResponseHeader()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="!:NoType:HttpException" />
        <exception cref="T:Java.IO.IOException" />
        <exception cref="T:Org.Apache.Http.HttpException" />
      </Docs>
    </Member>
    <Member MemberName="SendRequestEntity">
      <MemberSignature Language="C#" Value="public void SendRequestEntity (Org.Apache.Http.IHttpEntityEnclosingRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendRequestEntity(class Org.Apache.Http.IHttpEntityEnclosingRequest request) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sendRequestEntity", "(Lorg/apache/http/HttpEntityEnclosingRequest;)V", "GetSendRequestEntity_Lorg_apache_http_HttpEntityEnclosingRequest_Handler:Org.Apache.Http.IHttpClientConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Org.Apache.Http.IHttpEntityEnclosingRequest" />
      </Parameters>
      <Docs>
        <param name="request">the request whose entity to send.</param>
        <summary>Sends the request entity over the connection.</summary>
        <remarks><para tool="javadoc-to-mdoc">Sends the request entity over the connection.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/org/apache/http/HttpClientConnection.html#sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="!:NoType:HttpException" />
        <exception cref="T:Java.IO.IOException" />
        <exception cref="T:Org.Apache.Http.HttpException" />
      </Docs>
    </Member>
    <Member MemberName="SendRequestHeader">
      <MemberSignature Language="C#" Value="public void SendRequestHeader (Org.Apache.Http.IHttpRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendRequestHeader(class Org.Apache.Http.IHttpRequest request) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sendRequestHeader", "(Lorg/apache/http/HttpRequest;)V", "GetSendRequestHeader_Lorg_apache_http_HttpRequest_Handler:Org.Apache.Http.IHttpClientConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Org.Apache.Http.IHttpRequest" />
      </Parameters>
      <Docs>
        <param name="request">the request whose headers to send.</param>
        <summary>Sends the request line and all headers over the connection.</summary>
        <remarks><para tool="javadoc-to-mdoc">Sends the request line and all headers over the connection.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/org/apache/http/HttpClientConnection.html#sendRequestHeader(org.apache.http.HttpRequest)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="!:NoType:HttpException" />
        <exception cref="T:Java.IO.IOException" />
        <exception cref="T:Org.Apache.Http.HttpException" />
      </Docs>
    </Member>
  </Members>
</Type>
