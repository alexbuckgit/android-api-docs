<Type Name="IHttpEntity" FullName="Org.Apache.Http.IHttpEntity">
  <TypeSignature Language="C#" Value="public interface IHttpEntity : Android.Runtime.IJavaObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IHttpEntity implements class Android.Runtime.IJavaObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("org/apache/http/HttpEntity", "", "Org.Apache.Http.IHttpEntityInvoker")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>An entity that can be sent or received with an HTTP message.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">An entity that can be sent or received with an HTTP message.
 Entities can be found in some
 <c><see cref="T:Org.Apache.Http.IHttpEntityEnclosingRequest" /></c> and in
 <c><see cref="T:Org.Apache.Http.IHttpResponse" /></c>, where they are optional.
 </para>
      <para tool="javadoc-to-mdoc">
 In some places, the JavaDoc distinguishes three kinds of entities,
 depending on where their <c><see cref="P:Org.Apache.Http.IHttpEntity.Content" /></c> originates:
 <list type="bullet"><item><term><format type="text/html"><b>streamed</b></format>: The content is received from a stream, or
     generated on the fly. In particular, this category includes
     entities being received from a <c><see cref="T:Org.Apache.Http.IHttpConnection" /></c>.
     <c><see cref="P:Org.Apache.Http.IHttpEntity.IsStreaming" /></c> entities are generally not
      <c><see cref="P:Org.Apache.Http.IHttpEntity.IsRepeatable" /></c>.
     </term></item><item><term><format type="text/html"><b>self-contained</b></format>: The content is in memory or obtained by
     means that are independent from a connection or other entity.
     Self-contained entities are generally <c><see cref="P:Org.Apache.Http.IHttpEntity.IsRepeatable" /></c>.
     </term></item><item><term><format type="text/html"><b>wrapping</b></format>: The content is obtained from another entity.
     </term></item></list>
 This distinction is important for connection management with incoming
 entities. For entities that are created by an application and only sent
 using the HTTP components framework, the difference between streamed
 and self-contained is of little importance. In that case, it is suggested
 to consider non-repeatable entities as streamed, and those that are
 repeatable (without a huge effort) as self-contained.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/org/apache/http/HttpEntity.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="ConsumeContent">
      <MemberSignature Language="C#" Value="public void ConsumeContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConsumeContent() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("consumeContent", "()V", "GetConsumeContentHandler:Org.Apache.Http.IHttpEntityInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>TODO: The name of this method is misnomer.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">TODO: The name of this method is misnomer. It will be renamed to
 #finish() in the next major release.
 <format type="text/html"><br /></format>
 This method is called to indicate that the content of this entity
 is no longer required. All entity implementations are expected to
 release all allocated resources as a result of this method 
 invocation. Content streaming entities are also expected to 
 dispose of the remaining content, if any. Wrapping entities should 
 delegate this call to the wrapped entity.
 <format type="text/html"><br /></format>
 This method is of particular importance for entities being
 received from a <c><see cref="T:Org.Apache.Http.IHttpConnection" /></c>. The entity
 needs to be consumed completely in order to re-use the connection
 with keep-alive.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/HttpEntity.html#consumeContent()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs.
          This indicates that connection keep-alive is not possible.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public System.IO.Stream Content { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getContent", "()Ljava/io/InputStream;", "GetGetContentHandler:Org.Apache.Http.IHttpEntityInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Creates a new InputStream object of the entity.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new InputStream object of the entity.
 It is a programming error
 to return the same InputStream object more than once.
 Entities that are not <c><see cref="P:Org.Apache.Http.IHttpEntity.IsRepeatable" /></c>
 will throw an exception if this method is called multiple times.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/HttpEntity.html#getContent()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if the stream could not be created</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this entity is not repeatable and the stream
  has already been obtained previously
</exception>
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public Org.Apache.Http.IHeader ContentEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.Apache.Http.IHeader ContentEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getContentEncoding", "()Lorg/apache/http/Header;", "GetGetContentEncodingHandler:Org.Apache.Http.IHttpEntityInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.IHeader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtains the Content-Encoding header, if known.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Obtains the Content-Encoding header, if known.
 This is the header that should be used when sending the entity,
 or the one that was received with the entity.
 Wrapping entities that modify the content encoding should
 adjust this header accordingly.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/HttpEntity.html#getContentEncoding()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public long ContentLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getContentLength", "()J", "GetGetContentLengthHandler:Org.Apache.Http.IHttpEntityInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tells the length of the content, if known.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Tells the length of the content, if known.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/HttpEntity.html#getContentLength()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public Org.Apache.Http.IHeader ContentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.Apache.Http.IHeader ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getContentType", "()Lorg/apache/http/Header;", "GetGetContentTypeHandler:Org.Apache.Http.IHttpEntityInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.IHeader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtains the Content-Type header, if known.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Obtains the Content-Type header, if known.
 This is the header that should be used when sending the entity,
 or the one that was received with the entity. It can include a
 charset attribute.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/HttpEntity.html#getContentType()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsChunked">
      <MemberSignature Language="C#" Value="public bool IsChunked { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsChunked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isChunked", "()Z", "GetIsChunkedHandler:Org.Apache.Http.IHttpEntityInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tells about chunked encoding for this entity.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Tells about chunked encoding for this entity.
 The primary purpose of this method is to indicate whether
 chunked encoding should be used when the entity is sent.
 For entities that are received, it can also indicate whether
 the entity was received with chunked encoding.
 <format type="text/html"><br /></format>
 The behavior of wrapping entities is implementation dependent,
 but should respect the primary purpose.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/HttpEntity.html#isChunked()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsRepeatable">
      <MemberSignature Language="C#" Value="public bool IsRepeatable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRepeatable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isRepeatable", "()Z", "GetIsRepeatableHandler:Org.Apache.Http.IHttpEntityInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tells if the entity is capable to produce its data more than once.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Tells if the entity is capable to produce its data more than once.
 A repeatable entity's getContent() and writeTo(OutputStream) methods
 can be called more than once whereas a non-repeatable entity's can not.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/HttpEntity.html#isRepeatable()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsStreaming">
      <MemberSignature Language="C#" Value="public bool IsStreaming { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStreaming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isStreaming", "()Z", "GetIsStreamingHandler:Org.Apache.Http.IHttpEntityInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tells whether this entity depends on an underlying stream.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Tells whether this entity depends on an underlying stream.
 Streamed entities should return <c>true</c> until the
 content has been consumed, <c>false</c> afterwards.
 Self-contained entities should return <c>false</c>.
 Wrapping entities should delegate this call to the wrapped entity.
 <format type="text/html"><br /></format>
 The content of a streamed entity is consumed when the stream
 returned by <c><see cref="P:Org.Apache.Http.IHttpEntity.Content" /></c> has been read to EOF,
 or after <c><see cref="M:Org.Apache.Http.IHttpEntity.ConsumeContent" /></c> has been called.
 If a streamed entity can not detect whether the stream has been
 read to EOF, it should return <c>true</c> until
 <c><see cref="M:Org.Apache.Http.IHttpEntity.ConsumeContent" /></c> is called.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/HttpEntity.html#isStreaming()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public void WriteTo (System.IO.Stream outstream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteTo(class System.IO.Stream outstream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeTo", "(Ljava/io/OutputStream;)V", "GetWriteTo_Ljava_io_OutputStream_Handler:Org.Apache.Http.IHttpEntityInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outstream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="outstream">the output stream to write entity content to</param>
        <summary>Writes the entity content to the output stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Writes the entity content to the output stream.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/HttpEntity.html#writeTo(java.io.OutputStream)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
