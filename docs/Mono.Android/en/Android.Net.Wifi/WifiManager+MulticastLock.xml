<Type Name="WifiManager+MulticastLock" FullName="Android.Net.Wifi.WifiManager+MulticastLock">
  <TypeSignature Language="C#" Value="public class WifiManager.MulticastLock : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit WifiManager/MulticastLock extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/net/wifi/WifiManager$MulticastLock", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Allows an application to receive Wifi Multicast packets.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Allows an application to receive Wifi Multicast packets.
 Normally the Wifi stack filters out packets not explicitly
 addressed to this device.  Acquring a MulticastLock will
 cause the stack to receive packets addressed to multicast
 addresses.  Processing these extra packets can cause a noticable
 battery drain and should be disabled when not needed.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/net/wifi/WifiManager.MulticastLock.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 4" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MulticastLock (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T}(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Acquire">
      <MemberSignature Language="C#" Value="public virtual void Acquire ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Acquire() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("acquire", "()V", "GetAcquireHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Locks Wifi Multicast on until <c><see cref="M:Android.Net.Wifi.WifiManager.MulticastLock.Release" /></c> is called.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Locks Wifi Multicast on until <c><see cref="M:Android.Net.Wifi.WifiManager.MulticastLock.Release" /></c> is called.

 If this MulticastLock is reference-counted each call to
 <c>acquire</c> will increment the reference count, and the
 wifi interface will receive multicast packets as long as the
 reference count is above zero.

 If this MulticastLock is not reference-counted, the first call to
 <c>acquire</c> will turn on the multicast packets, but subsequent
 calls will be ignored.  Only one call to <c><see cref="M:Android.Net.Wifi.WifiManager.MulticastLock.Release" /></c> will
 be required, regardless of the number of times that <c>acquire</c>
 is called.

 Note that other applications may also lock Wifi Multicast on.
 Only they can relinquish their lock.

 Also note that applications cannot leave Multicast locked on.
 When an app exits or crashes, any Multicast locks will be released.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/WifiManager.MulticastLock.html#acquire()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="IsHeld">
      <MemberSignature Language="C#" Value="public virtual bool IsHeld { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHeld" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isHeld", "()Z", "GetIsHeldHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Checks whether this MulticastLock is currently held.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Checks whether this MulticastLock is currently held.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/WifiManager.MulticastLock.html#isHeld()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public virtual void Release ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Release() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("release", "()V", "GetReleaseHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Unlocks Wifi Multicast, restoring the filter of packets
 not addressed specifically to this device and saving power.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Unlocks Wifi Multicast, restoring the filter of packets
 not addressed specifically to this device and saving power.

 If this MulticastLock is reference-counted, each call to
 <c>release</c> will decrement the reference count, and the
 multicast packets will only stop being received when the reference
 count reaches zero.  If the reference count goes below zero (that
 is, if <c>release</c> is called a greater number of times than
 <c><see cref="M:Android.Net.Wifi.WifiManager.MulticastLock.Acquire" /></c>), an exception is thrown.

 If this MulticastLock is not reference-counted, the first call to
 <c>release</c> (after the radio was multicast locked using
 <c><see cref="M:Android.Net.Wifi.WifiManager.MulticastLock.Acquire" /></c>) will unlock the multicast, and subsequent calls
 will be ignored.

 Note that if any other Wifi Multicast Locks are still outstanding
 this <c>release</c> call will not have an immediate effect.  Only
 when all applications have released all their Multicast Locks will
 the Multicast filter be turned back on.

 Also note that when an app exits or crashes all of its Multicast
 Locks will be automatically released.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/WifiManager.MulticastLock.html#release()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="SetReferenceCounted">
      <MemberSignature Language="C#" Value="public virtual void SetReferenceCounted (bool refCounted);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetReferenceCounted(bool refCounted) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setReferenceCounted", "(Z)V", "GetSetReferenceCounted_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="refCounted" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="refCounted">true if this MulticastLock should keep a reference
 count
</param>
        <summary>Controls whether this is a reference-counted or non-reference-
 counted MulticastLock.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Controls whether this is a reference-counted or non-reference-
 counted MulticastLock.

 Reference-counted MulticastLocks keep track of the number of calls
 to <c><see cref="M:Android.Net.Wifi.WifiManager.MulticastLock.Acquire" /></c> and <c><see cref="M:Android.Net.Wifi.WifiManager.MulticastLock.Release" /></c>, and only stop the
 reception of multicast packets when every call to <c><see cref="M:Android.Net.Wifi.WifiManager.MulticastLock.Acquire" /></c>
 has been balanced with a call to <c><see cref="M:Android.Net.Wifi.WifiManager.MulticastLock.Release" /></c>.  Non-reference-
 counted MulticastLocks allow the reception of multicast packets
 whenever <c><see cref="M:Android.Net.Wifi.WifiManager.MulticastLock.Acquire" /></c> is called and stop accepting multicast
 packets whenever <c><see cref="M:Android.Net.Wifi.WifiManager.MulticastLock.Release" /></c> is called.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/WifiManager.MulticastLock.html#setReferenceCounted(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
