<Type Name="SupplicantState" FullName="Android.Net.Wifi.SupplicantState">
  <TypeSignature Language="C#" Value="public sealed class SupplicantState : Java.Lang.Enum, Android.OS.IParcelable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SupplicantState extends Java.Lang.Enum implements class Android.OS.IParcelable, class Android.Runtime.IJavaObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Enum</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.OS.IParcelable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/net/wifi/SupplicantState", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>From <c>defs.h</c> in <c>wpa_supplicant</c>.</summary>
    <remarks><para tool="javadoc-to-mdoc">From <c>defs.h</c> in <c>wpa_supplicant</c>.
 </para><para tool="javadoc-to-mdoc">
 These enumeration values are used to indicate the current wpa_supplicant
 state. This is more fine-grained than most users will be interested in.
 In general, it is better to use
 <c><see cref="!:NoType:android/net/NetworkInfo$State;Href=../../../../reference/android/net/NetworkInfo.State.html" /></c>.
 </para><para tool="javadoc-to-mdoc">
 Note, the order of these enum constants must match the numerical values of the
 state constants in <c>defs.h</c> in <c>wpa_supplicant</c>.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/wifi/SupplicantState.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="Associated">
      <MemberSignature Language="C#" Value="public static Android.Net.Wifi.SupplicantState Associated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Net.Wifi.SupplicantState Associated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ASSOCIATED")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Wifi.SupplicantState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Association completed.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Association completed.
 </para><para tool="javadoc-to-mdoc">
 This state is entered when the driver reports that association has
 been successfully completed with an AP. If IEEE 802.1X is used
 (with or without WPA/WPA2), wpa_supplicant remains in this state
 until the IEEE 802.1X/EAPOL authentication has been completed.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/wifi/SupplicantState.html#ASSOCIATED" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="Associating">
      <MemberSignature Language="C#" Value="public static Android.Net.Wifi.SupplicantState Associating { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Net.Wifi.SupplicantState Associating" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ASSOCIATING")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Wifi.SupplicantState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Trying to associate with a BSS/SSID.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Trying to associate with a BSS/SSID.
 </para><para tool="javadoc-to-mdoc">
 This state is entered when wpa_supplicant has found a suitable BSS
 to associate with and the driver is configured to try to associate
 with this BSS in ap_scan=1 mode. When using ap_scan=2 mode, this
 state is entered when the driver is configured to try to associate
 with a network using the configured SSID and security policy.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/wifi/SupplicantState.html#ASSOCIATING" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="Authenticating">
      <MemberSignature Language="C#" Value="public static Android.Net.Wifi.SupplicantState Authenticating { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Net.Wifi.SupplicantState Authenticating" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("AUTHENTICATING")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Wifi.SupplicantState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Trying to authenticate with a BSS/SSID
 </summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Trying to authenticate with a BSS/SSID
 </para><para tool="javadoc-to-mdoc">
 This state is entered when wpa_supplicant has found a suitable BSS
 to authenticate with and the driver is configured to try to
 authenticate with this BSS.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/wifi/SupplicantState.html#AUTHENTICATING" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public static Android.Net.Wifi.SupplicantState Completed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Net.Wifi.SupplicantState Completed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("COMPLETED")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Wifi.SupplicantState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>All authentication completed.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">All authentication completed.
 </para><para tool="javadoc-to-mdoc">
 This state is entered when the full authentication process is
 completed. In case of WPA2, this happens when the 4-Way Handshake is
 successfully completed. With WPA, this state is entered after the
 Group Key Handshake; with IEEE 802.1X (non-WPA) connection is
 completed after dynamic keys are received (or if not used, after
 the EAP authentication has been completed). With static WEP keys and
 plaintext connections, this state is entered when an association
 has been completed.
 </para><para tool="javadoc-to-mdoc">
 This state indicates that the supplicant has completed its
 processing for the association phase and that data connection is
 fully configured. Note, however, that there may not be any IP
 address associated with the connection yet. Typically, a DHCP
 request needs to be sent at this point to obtain an address.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/wifi/SupplicantState.html#COMPLETED" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="DescribeContents">
      <MemberSignature Language="C#" Value="public int DescribeContents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 DescribeContents() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("describeContents", "()I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Disconnected">
      <MemberSignature Language="C#" Value="public static Android.Net.Wifi.SupplicantState Disconnected { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Net.Wifi.SupplicantState Disconnected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DISCONNECTED")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Wifi.SupplicantState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This state indicates that client is not associated, but is likely to
 start looking for an access point.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">This state indicates that client is not associated, but is likely to
 start looking for an access point. This state is entered when a
 connection is lost.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/wifi/SupplicantState.html#DISCONNECTED" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="Dormant">
      <MemberSignature Language="C#" Value="public static Android.Net.Wifi.SupplicantState Dormant { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Net.Wifi.SupplicantState Dormant" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DORMANT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Wifi.SupplicantState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An Android-added state that is reported when a client issues an
 explicit DISCONNECT command.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">An Android-added state that is reported when a client issues an
 explicit DISCONNECT command. In such a case, the supplicant is
 not only dissociated from the current access point (as for the
 DISCONNECTED state above), but it also does not attempt to connect
 to any access point until a RECONNECT or REASSOCIATE command
 is issued by the client.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/wifi/SupplicantState.html#DORMANT" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="FourWayHandshake">
      <MemberSignature Language="C#" Value="public static Android.Net.Wifi.SupplicantState FourWayHandshake { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Net.Wifi.SupplicantState FourWayHandshake" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FOUR_WAY_HANDSHAKE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Wifi.SupplicantState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>WPA 4-Way Key Handshake in progress.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">WPA 4-Way Key Handshake in progress.
 </para><para tool="javadoc-to-mdoc">
 This state is entered when WPA/WPA2 4-Way Handshake is started. In
 case of WPA-PSK, this happens when receiving the first EAPOL-Key
 frame after association. In case of WPA-EAP, this state is entered
 when the IEEE 802.1X/EAPOL authentication has been completed.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/wifi/SupplicantState.html#FOUR_WAY_HANDSHAKE" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="GroupHandshake">
      <MemberSignature Language="C#" Value="public static Android.Net.Wifi.SupplicantState GroupHandshake { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Net.Wifi.SupplicantState GroupHandshake" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("GROUP_HANDSHAKE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Wifi.SupplicantState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>WPA Group Key Handshake in progress.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">WPA Group Key Handshake in progress.
 </para><para tool="javadoc-to-mdoc">
 This state is entered when 4-Way Key Handshake has been completed
 (i.e., when the supplicant sends out message 4/4) and when Group
 Key rekeying is started by the AP (i.e., when supplicant receives
 message 1/2).
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/wifi/SupplicantState.html#GROUP_HANDSHAKE" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="Inactive">
      <MemberSignature Language="C#" Value="public static Android.Net.Wifi.SupplicantState Inactive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Net.Wifi.SupplicantState Inactive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("INACTIVE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Wifi.SupplicantState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Inactive state (wpa_supplicant disabled).</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Inactive state (wpa_supplicant disabled).
 </para><para tool="javadoc-to-mdoc">
 This state is entered if there are no enabled networks in the
 configuration. wpa_supplicant is not trying to associate with a new
 network and external interaction (e.g., ctrl_iface call to add or
 enable a network) is needed to start association.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/wifi/SupplicantState.html#INACTIVE" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="InterfaceDisabled">
      <MemberSignature Language="C#" Value="public static Android.Net.Wifi.SupplicantState InterfaceDisabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Net.Wifi.SupplicantState InterfaceDisabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("INTERFACE_DISABLED")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Wifi.SupplicantState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Interface is disabled
 </summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Interface is disabled
 </para><para tool="javadoc-to-mdoc">
 This state is entered if the network interface is disabled.
 wpa_supplicant refuses any new operations that would
 use the radio until the interface has been enabled.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/wifi/SupplicantState.html#INTERFACE_DISABLED" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="Invalid">
      <MemberSignature Language="C#" Value="public static Android.Net.Wifi.SupplicantState Invalid { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Net.Wifi.SupplicantState Invalid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("INVALID")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Wifi.SupplicantState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A pseudo-state that should normally never be seen.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">A pseudo-state that should normally never be seen.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/wifi/SupplicantState.html#INVALID" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="IsValidState">
      <MemberSignature Language="C#" Value="public static bool IsValidState (Android.Net.Wifi.SupplicantState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidState(class Android.Net.Wifi.SupplicantState state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isValidState", "(Landroid/net/wifi/SupplicantState;)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Android.Net.Wifi.SupplicantState" />
      </Parameters>
      <Docs>
        <param name="state">The supplicant state</param>
        <summary>Returns <c>true</c> if the supplicant state is valid and <c>false</c>
 otherwise.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns <c>true</c> if the supplicant state is valid and <c>false</c>
 otherwise.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/wifi/SupplicantState.html#isValidState(android.net.wifi.SupplicantState)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Scanning">
      <MemberSignature Language="C#" Value="public static Android.Net.Wifi.SupplicantState Scanning { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Net.Wifi.SupplicantState Scanning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SCANNING")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Wifi.SupplicantState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Scanning for a network.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Scanning for a network.
 </para><para tool="javadoc-to-mdoc">
 This state is entered when wpa_supplicant starts scanning for a
 network.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/wifi/SupplicantState.html#SCANNING" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uninitialized">
      <MemberSignature Language="C#" Value="public static Android.Net.Wifi.SupplicantState Uninitialized { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Net.Wifi.SupplicantState Uninitialized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("UNINITIALIZED")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Wifi.SupplicantState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>No connection to wpa_supplicant.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">No connection to wpa_supplicant.
 </para><para tool="javadoc-to-mdoc">
 This is an additional pseudo-state to handle the case where
 wpa_supplicant is not running and/or we have not been able
 to establish a connection to it.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/wifi/SupplicantState.html#UNINITIALIZED" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="ValueOf">
      <MemberSignature Language="C#" Value="public static Android.Net.Wifi.SupplicantState ValueOf (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Net.Wifi.SupplicantState ValueOf(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("valueOf", "(Ljava/lang/String;)Landroid/net/wifi/SupplicantState;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Wifi.SupplicantState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary></summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/wifi/SupplicantState.html#valueOf(java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public static Android.Net.Wifi.SupplicantState[] Values ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Net.Wifi.SupplicantState[] Values() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("values", "()[Landroid/net/wifi/SupplicantState;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Wifi.SupplicantState[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary></summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/wifi/SupplicantState.html#values()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WriteToParcel">
      <MemberSignature Language="C#" Value="public void WriteToParcel (Android.OS.Parcel p0, Android.OS.ParcelableWriteFlags p1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteToParcel(class Android.OS.Parcel p0, valuetype Android.OS.ParcelableWriteFlags p1) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeToParcel", "(Landroid/os/Parcel;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="Android.OS.Parcel" />
        <Parameter Name="p1" Type="Android.OS.ParcelableWriteFlags" />
      </Parameters>
      <Docs>
        <param name="p0">To be added.</param>
        <param name="p1">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
