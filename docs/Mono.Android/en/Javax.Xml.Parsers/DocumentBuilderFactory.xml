<Type Name="DocumentBuilderFactory" FullName="Javax.Xml.Parsers.DocumentBuilderFactory">
  <TypeSignature Language="C#" Value="public abstract class DocumentBuilderFactory : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DocumentBuilderFactory extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("javax/xml/parsers/DocumentBuilderFactory", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Defines a factory API that enables applications to obtain a
 parser that produces DOM object trees from XML documents.</summary>
    <remarks />
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DocumentBuilderFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DocumentBuilderFactory (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Coalescing">
      <MemberSignature Language="C#" Value="public virtual bool Coalescing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Coalescing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isCoalescing", "()Z", "GetIsCoalescingHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setCoalescing", "(Z)V", "GetSetCoalescing_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether or not the factory is configured to produce
 parsers which converts CDATA nodes to Text nodes and appends it to
 the adjacent (if any) Text node.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ExpandEntityReferences">
      <MemberSignature Language="C#" Value="public virtual bool ExpandEntityReferences { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExpandEntityReferences" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isExpandEntityReferences", "()Z", "GetIsExpandEntityReferencesHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setExpandEntityReferences", "(Z)V", "GetSetExpandEntityReferences_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether or not the factory is configured to produce
 parsers which expand entity reference nodes.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public abstract Java.Lang.Object GetAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object GetAttribute(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getAttribute", "(Ljava/lang/String;)Ljava/lang/Object;", "GetGetAttribute_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the attribute.</param>
        <summary>Allows the user to retrieve specific attributes on the underlying
 implementation.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">thrown if the underlying
 implementation doesn't recognize the attribute.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFeature">
      <MemberSignature Language="C#" Value="public abstract bool GetFeature (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetFeature(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getFeature", "(Ljava/lang/String;)Z", "GetGetFeature_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Feature name.</param>
        <summary tool="true">
        </summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Xml.Parsers.ParserConfigurationException">if this <c>DocumentBuilderFactory</c>
   or the <c>DocumentBuilder</c>s it creates cannot support this feature.
</exception>
      </Docs>
    </Member>
    <Member MemberName="IgnoringComments">
      <MemberSignature Language="C#" Value="public virtual bool IgnoringComments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoringComments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isIgnoringComments", "()Z", "GetIsIgnoringCommentsHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setIgnoringComments", "(Z)V", "GetSetIgnoringComments_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether or not the factory is configured to produce
 parsers which ignores comments.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IgnoringElementContentWhitespace">
      <MemberSignature Language="C#" Value="public virtual bool IgnoringElementContentWhitespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoringElementContentWhitespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isIgnoringElementContentWhitespace", "()Z", "GetIsIgnoringElementContentWhitespaceHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setIgnoringElementContentWhitespace", "(Z)V", "GetSetIgnoringElementContentWhitespace_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether or not the factory is configured to produce
 parsers which ignore ignorable whitespace in element content.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NamespaceAware">
      <MemberSignature Language="C#" Value="public virtual bool NamespaceAware { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NamespaceAware" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isNamespaceAware", "()Z", "GetIsNamespaceAwareHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setNamespaceAware", "(Z)V", "GetSetNamespaceAware_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether or not the factory is configured to produce
 parsers which are namespace aware.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NewDocumentBuilder">
      <MemberSignature Language="C#" Value="public abstract Javax.Xml.Parsers.DocumentBuilder NewDocumentBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Javax.Xml.Parsers.DocumentBuilder NewDocumentBuilder() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newDocumentBuilder", "()Ljavax/xml/parsers/DocumentBuilder;", "GetNewDocumentBuilderHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Parsers.DocumentBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a new instance of a <c><see cref="T:Javax.Xml.Parsers.DocumentBuilder" /></c>
 using the currently configured parameters.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Xml.Parsers.ParserConfigurationException">if a DocumentBuilder
 cannot be created which satisfies the configuration requested.</exception>
      </Docs>
    </Member>
    <Member MemberName="NewInstance">
      <MemberSignature Language="C#" Value="public static Javax.Xml.Parsers.DocumentBuilderFactory NewInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Xml.Parsers.DocumentBuilderFactory NewInstance() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newInstance", "()Ljavax/xml/parsers/DocumentBuilderFactory;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Parsers.DocumentBuilderFactory</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">Returns Android's implementation of <c>DocumentBuilderFactory</c>.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="NewInstance">
      <MemberSignature Language="C#" Value="public static Javax.Xml.Parsers.DocumentBuilderFactory NewInstance (string factoryClassName, Java.Lang.ClassLoader classLoader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Xml.Parsers.DocumentBuilderFactory NewInstance(string factoryClassName, class Java.Lang.ClassLoader classLoader) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newInstance", "(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljavax/xml/parsers/DocumentBuilderFactory;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Parsers.DocumentBuilderFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.String" />
        <Parameter Name="p1" Type="Java.Lang.ClassLoader" />
      </Parameters>
      <Docs>
        <param name="factoryClassName">To be added.</param>
        <param name="classLoader">To be added.</param>
        <summary>Returns an instance of the named implementation of <c>DocumentBuilderFactory</c>.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 9" />
        <exception cref="T:Javax.Xml.Parsers.FactoryConfigurationError">if <c>factoryClassName</c> is not available or cannot be
     instantiated.</exception>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public virtual Javax.Xml.Validation.Schema Schema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Javax.Xml.Validation.Schema Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSchema", "()Ljavax/xml/validation/Schema;", "GetGetSchemaHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSchema", "(Ljavax/xml/validation/Schema;)V", "GetSetSchema_Ljavax_xml_validation_Schema_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Validation.Schema</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <c><see cref="T:Javax.Xml.Validation.Schema" /></c> object specified through
 the <c><see cref="P:Javax.Xml.Parsers.DocumentBuilderFactory.Schema" /></c> method.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.UnsupportedOperationException">For backward compatibility, when implementations for
      earlier versions of JAXP is used, this exception will be
      thrown.</exception>
        <exception cref="T:Java.Lang.UnsupportedOperationException">For backward compatibility, when implementations for
      earlier versions of JAXP is used, this exception will be
      thrown.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAttribute">
      <MemberSignature Language="C#" Value="public abstract void SetAttribute (string name, Java.Lang.Object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAttribute(string name, class Java.Lang.Object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAttribute", "(Ljava/lang/String;Ljava/lang/Object;)V", "GetSetAttribute_Ljava_lang_String_Ljava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="name">The name of the attribute.</param>
        <param name="value">The value of the attribute.</param>
        <summary>Allows the user to set specific attributes on the underlying
 implementation.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">thrown if the underlying
 implementation doesn't recognize the attribute.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetFeature">
      <MemberSignature Language="C#" Value="public abstract void SetFeature (string name, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFeature(string name, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setFeature", "(Ljava/lang/String;Z)V", "GetSetFeature_Ljava_lang_String_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">Feature name.</param>
        <param name="value">Is feature state <c>true</c> or <c>false</c>.</param>
        <summary tool="true">
          <list type="bullet">
            <item>
              <term>
                <c>true</c>: the implementation will limit XML processing to conform to implementation limits.
     Examples include entity expansion limits and XML Schema constructs that would consume large amounts of resources.
     If XML processing is limited for security reasons, it will be reported via a call to the registered
    <c><see cref="M:Org.Xml.Sax.IErrorHandler.FatalError(Org.Xml.Sax.SAXParseException)" /></c>.
     See <c><see cref="M:Javax.Xml.Parsers.DocumentBuilder.SetErrorHandler(Org.Xml.Sax.IErrorHandler)" /></c>.
   </term>
            </item>
            <item>
              <term>
                <c>false</c>: the implementation will processing XML according to the XML specifications without
     regard to possible implementation limits.
   </term>
            </item>
          </list>
        </summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Xml.Parsers.ParserConfigurationException">if this <c>DocumentBuilderFactory</c> or the <c>DocumentBuilder</c>s
   it creates cannot support this feature.</exception>
        <exception cref="T:Java.Lang.NullPointerException">If the <c>name</c> parameter is null.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Validating">
      <MemberSignature Language="C#" Value="public virtual bool Validating { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Validating" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isValidating", "()Z", "GetIsValidatingHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setValidating", "(Z)V", "GetSetValidating_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether or not the factory is configured to produce
 parsers which validate the XML content during parse.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="XIncludeAware">
      <MemberSignature Language="C#" Value="public virtual bool XIncludeAware { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool XIncludeAware" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isXIncludeAware", "()Z", "GetIsXIncludeAwareHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setXIncludeAware", "(Z)V", "GetSetXIncludeAware_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
        </summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.UnsupportedOperationException">For backward compatibility, when implementations for
      earlier versions of JAXP is used, this exception will be
      thrown.</exception>
        <exception cref="T:Java.Lang.UnsupportedOperationException">For backward compatibility, when implementations for
      earlier versions of JAXP is used, this exception will be
      thrown.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
