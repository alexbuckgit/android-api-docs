<Type Name="SAXParser" FullName="Javax.Xml.Parsers.SAXParser">
  <TypeSignature Language="C#" Value="public abstract class SAXParser : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SAXParser extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("javax/xml/parsers/SAXParser", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Defines the API that wraps an <c><see cref="T:Org.Xml.Sax.IXMLReader" /></c>
 implementation class.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Defines the API that wraps an <c><see cref="T:Org.Xml.Sax.IXMLReader" /></c>
 implementation class. In JAXP 1.0, this class wrapped the
 <c><see cref="T:Org.Xml.Sax.IParser" /></c> interface, however this interface was
 replaced by the <c><see cref="T:Org.Xml.Sax.IXMLReader" /></c>. For ease
 of transition, this class continues to support the same name
 and interface as well as supporting new methods.

 An instance of this class can be obtained from the
 <c><see cref="M:Javax.Xml.Parsers.SAXParserFactory.NewSAXParser" /></c> method.
 Once an instance of this class is obtained, XML can be parsed from
 a variety of input sources. These input sources are InputStreams,
 Files, URLs, and SAX InputSources.</para>
      <para tool="javadoc-to-mdoc">

 This static method creates a new factory instance based
 on a system property setting or uses the platform default
 if no property has been defined.</para>
      <para tool="javadoc-to-mdoc">

 The system property that controls which Factory implementation
 to create is named <c>"javax.xml.parsers.SAXParserFactory"</c>.
 This property names a class that is a concrete subclass of this
 abstract class. If no property is defined, a platform default
 will be used.</para>

 As the content is parsed by the underlying parser, methods of the
 given <c><see cref="T:Org.Xml.Sax.HandlerBase" /></c> or the
 <c><see cref="T:Org.Xml.Sax.Helpers.DefaultHandler" /></c> are called.<para tool="javadoc-to-mdoc">

 Implementations of this class which wrap an underlying implementation
 can consider using the <c><see cref="T:Org.Xml.Sax.Helpers.ParserAdapter" /></c>
 class to initially adapt their SAX1 implementation to work under
 this revised class.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/javax/xml/parsers/SAXParser.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SAXParser ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary></summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Protected constructor to prevent instantiation.
 Use <c><see cref="M:Javax.Xml.Parsers.SAXParserFactory.NewSAXParser" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/SAXParser.html#SAXParser()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SAXParser (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public abstract Java.Lang.Object GetProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object GetProperty(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getProperty", "(Ljava/lang/String;)Ljava/lang/Object;", "GetGetProperty_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the property to be retrieved.</param>
        <summary tool="true"></summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Returns the particular property requested for in the underlying
 implementation of <c><see cref="T:Org.Xml.Sax.IXMLReader" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/SAXParser.html#getProperty(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXNotRecognizedException">When the underlying XMLReader does
    not recognize the property name.</exception>
        <exception cref="T:Org.Xml.Sax.SAXNotSupportedException">When the underlying XMLReader
  recognizes the property name but doesn't support the property.</exception>
        <altmember cref="M:Org.Xml.Sax.IXMLReader.GetProperty(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsNamespaceAware">
      <MemberSignature Language="C#" Value="public abstract bool IsNamespaceAware { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNamespaceAware" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isNamespaceAware", "()Z", "GetIsNamespaceAwareHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether or not this parser is configured to
 understand namespaces.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates whether or not this parser is configured to
 understand namespaces.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/SAXParser.html#isNamespaceAware()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsValidating">
      <MemberSignature Language="C#" Value="public abstract bool IsValidating { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValidating" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isValidating", "()Z", "GetIsValidatingHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether or not this parser is configured to
 validate XML documents.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates whether or not this parser is configured to
 validate XML documents.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/SAXParser.html#isValidating()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsXIncludeAware">
      <MemberSignature Language="C#" Value="public virtual bool IsXIncludeAware { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsXIncludeAware" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isXIncludeAware", "()Z", "GetIsXIncludeAwareHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true"></summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Get the XInclude processing mode for this parser.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/SAXParser.html#isXIncludeAware()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.UnsupportedOperationException">For backward compatibility, when implementations for
      earlier versions of JAXP is used, this exception will be
      thrown.</exception>
        <altmember cref="P:Javax.Xml.Parsers.SAXParserFactory.XIncludeAware" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual void Parse (Java.IO.File f, Org.Xml.Sax.HandlerBase hb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Parse(class Java.IO.File f, class Org.Xml.Sax.HandlerBase hb) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parse", "(Ljava/io/File;Lorg/xml/sax/HandlerBase;)V", "GetParse_Ljava_io_File_Lorg_xml_sax_HandlerBase_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="Java.IO.File" />
        <Parameter Name="handler" Type="Org.Xml.Sax.HandlerBase" />
      </Parameters>
      <Docs>
        <param name="f">The file containing the XML to parse</param>
        <param name="hb">The SAX HandlerBase to use.</param>
        <summary tool="true">Parse the content of the file specified as XML using the
 specified <c><see cref="T:Org.Xml.Sax.HandlerBase" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Parse the content of the file specified as XML using the
 specified <c><see cref="T:Org.Xml.Sax.HandlerBase" /></c>.
 <format type="text/html"><i> Use of the DefaultHandler version of this method is recommended as
 the HandlerBase class has been deprecated in SAX 2.0</i></format></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/SAXParser.html#parse(java.io.File, org.xml.sax.HandlerBase)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">If the File object is null.</exception>
        <exception cref="T:Java.IO.IOException">If any IO errors occur.</exception>
        <exception cref="T:Org.Xml.Sax.SAXException">If any SAX errors occur during processing.</exception>
        <altmember cref="T:Org.Xml.Sax.IDocumentHandler" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual void Parse (Java.IO.File f, Org.Xml.Sax.Helpers.DefaultHandler dh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Parse(class Java.IO.File f, class Org.Xml.Sax.Helpers.DefaultHandler dh) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parse", "(Ljava/io/File;Lorg/xml/sax/helpers/DefaultHandler;)V", "GetParse_Ljava_io_File_Lorg_xml_sax_helpers_DefaultHandler_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="Java.IO.File" />
        <Parameter Name="handler" Type="Org.Xml.Sax.Helpers.DefaultHandler" />
      </Parameters>
      <Docs>
        <param name="f">The file containing the XML to parse</param>
        <param name="dh">The SAX DefaultHandler to use.</param>
        <summary>Parse the content of the file specified as XML using the
 specified <c><see cref="T:Org.Xml.Sax.Helpers.DefaultHandler" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Parse the content of the file specified as XML using the
 specified <c><see cref="T:Org.Xml.Sax.Helpers.DefaultHandler" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/SAXParser.html#parse(java.io.File, org.xml.sax.helpers.DefaultHandler)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">If the File object is null.</exception>
        <exception cref="T:Java.IO.IOException">If any IO errors occur.</exception>
        <exception cref="T:Org.Xml.Sax.SAXException">If any SAX errors occur during processing.</exception>
        <altmember cref="T:Org.Xml.Sax.IDocumentHandler" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual void Parse (Org.Xml.Sax.InputSource is, Org.Xml.Sax.HandlerBase hb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Parse(class Org.Xml.Sax.InputSource is, class Org.Xml.Sax.HandlerBase hb) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parse", "(Lorg/xml/sax/InputSource;Lorg/xml/sax/HandlerBase;)V", "GetParse_Lorg_xml_sax_InputSource_Lorg_xml_sax_HandlerBase_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Org.Xml.Sax.InputSource" />
        <Parameter Name="handler" Type="Org.Xml.Sax.HandlerBase" />
      </Parameters>
      <Docs>
        <param name="is">The InputSource containing the content to be parsed.</param>
        <param name="hb">The SAX HandlerBase to use.</param>
        <summary>Parse the content given <c><see cref="T:Org.Xml.Sax.InputSource" /></c>
 as XML using the specified
 <c><see cref="T:Org.Xml.Sax.HandlerBase" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Parse the content given <c><see cref="T:Org.Xml.Sax.InputSource" /></c>
 as XML using the specified
 <c><see cref="T:Org.Xml.Sax.HandlerBase" /></c>.
 <format type="text/html"><i> Use of the DefaultHandler version of this method is recommended as
 the HandlerBase class has been deprecated in SAX 2.0</i></format></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/SAXParser.html#parse(org.xml.sax.InputSource, org.xml.sax.HandlerBase)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">If the <c>InputSource</c> object
   is <c>null</c>.</exception>
        <exception cref="T:Java.IO.IOException">If any IO errors occur.</exception>
        <exception cref="T:Org.Xml.Sax.SAXException">If any SAX errors occur during processing.</exception>
        <altmember cref="T:Org.Xml.Sax.IDocumentHandler" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual void Parse (Org.Xml.Sax.InputSource is, Org.Xml.Sax.Helpers.DefaultHandler dh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Parse(class Org.Xml.Sax.InputSource is, class Org.Xml.Sax.Helpers.DefaultHandler dh) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parse", "(Lorg/xml/sax/InputSource;Lorg/xml/sax/helpers/DefaultHandler;)V", "GetParse_Lorg_xml_sax_InputSource_Lorg_xml_sax_helpers_DefaultHandler_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Org.Xml.Sax.InputSource" />
        <Parameter Name="handler" Type="Org.Xml.Sax.Helpers.DefaultHandler" />
      </Parameters>
      <Docs>
        <param name="is">The InputSource containing the content to be parsed.</param>
        <param name="dh">The SAX DefaultHandler to use.</param>
        <summary>Parse the content given <c><see cref="T:Org.Xml.Sax.InputSource" /></c>
 as XML using the specified
 <c><see cref="T:Org.Xml.Sax.Helpers.DefaultHandler" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Parse the content given <c><see cref="T:Org.Xml.Sax.InputSource" /></c>
 as XML using the specified
 <c><see cref="T:Org.Xml.Sax.Helpers.DefaultHandler" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/SAXParser.html#parse(org.xml.sax.InputSource, org.xml.sax.helpers.DefaultHandler)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">If the <c>InputSource</c> object
   is <c>null</c>.</exception>
        <exception cref="T:Java.IO.IOException">If any IO errors occur.</exception>
        <exception cref="T:Org.Xml.Sax.SAXException">If any SAX errors occur during processing.</exception>
        <altmember cref="T:Org.Xml.Sax.IDocumentHandler" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual void Parse (System.IO.Stream is, Org.Xml.Sax.HandlerBase hb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Parse(class System.IO.Stream is, class Org.Xml.Sax.HandlerBase hb) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parse", "(Ljava/io/InputStream;Lorg/xml/sax/HandlerBase;)V", "GetParse_Ljava_io_InputStream_Lorg_xml_sax_HandlerBase_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="handler" Type="Org.Xml.Sax.HandlerBase" />
      </Parameters>
      <Docs>
        <param name="is">InputStream containing the content to be parsed.</param>
        <param name="hb">The SAX HandlerBase to use.</param>
        <summary></summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Parse the content of the given <c><see cref="T:Java.IO.InputStream" /></c>
 instance as XML using the specified <c><see cref="T:Org.Xml.Sax.HandlerBase" /></c>.
 <format type="text/html"><i> Use of the DefaultHandler version of this method is recommended as
 the HandlerBase class has been deprecated in SAX 2.0</i></format>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/SAXParser.html#parse(java.io.InputStream, org.xml.sax.HandlerBase)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">If the given InputStream is null.</exception>
        <exception cref="T:Org.Xml.Sax.SAXException">If parse produces a SAX error.</exception>
        <exception cref="T:Java.IO.IOException">If an IO error occurs interacting with the
   <c>InputStream</c>.</exception>
        <altmember cref="T:Org.Xml.Sax.IDocumentHandler" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual void Parse (System.IO.Stream is, Org.Xml.Sax.Helpers.DefaultHandler dh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Parse(class System.IO.Stream is, class Org.Xml.Sax.Helpers.DefaultHandler dh) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parse", "(Ljava/io/InputStream;Lorg/xml/sax/helpers/DefaultHandler;)V", "GetParse_Ljava_io_InputStream_Lorg_xml_sax_helpers_DefaultHandler_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="handler" Type="Org.Xml.Sax.Helpers.DefaultHandler" />
      </Parameters>
      <Docs>
        <param name="is">InputStream containing the content to be parsed.</param>
        <param name="dh">The SAX DefaultHandler to use.</param>
        <summary>Parse the content of the given <c><see cref="T:Java.IO.InputStream" /></c>
 instance as XML using the specified
 <c><see cref="T:Org.Xml.Sax.Helpers.DefaultHandler" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Parse the content of the given <c><see cref="T:Java.IO.InputStream" /></c>
 instance as XML using the specified
 <c><see cref="T:Org.Xml.Sax.Helpers.DefaultHandler" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/SAXParser.html#parse(java.io.InputStream, org.xml.sax.helpers.DefaultHandler)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">If the given InputStream is null.</exception>
        <exception cref="T:Java.IO.IOException">If any IO errors occur.</exception>
        <exception cref="T:Org.Xml.Sax.SAXException">If any SAX errors occur during processing.</exception>
        <altmember cref="T:Org.Xml.Sax.IDocumentHandler" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual void Parse (string uri, Org.Xml.Sax.HandlerBase hb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Parse(string uri, class Org.Xml.Sax.HandlerBase hb) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parse", "(Ljava/lang/String;Lorg/xml/sax/HandlerBase;)V", "GetParse_Ljava_lang_String_Lorg_xml_sax_HandlerBase_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
        <Parameter Name="handler" Type="Org.Xml.Sax.HandlerBase" />
      </Parameters>
      <Docs>
        <param name="uri">The location of the content to be parsed.</param>
        <param name="hb">The SAX HandlerBase to use.</param>
        <summary>Parse the content described by the giving Uniform Resource
 Identifier (URI) as XML using the specified
 <c><see cref="T:Org.Xml.Sax.HandlerBase" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Parse the content described by the giving Uniform Resource
 Identifier (URI) as XML using the specified
 <c><see cref="T:Org.Xml.Sax.HandlerBase" /></c>.
 <format type="text/html"><i> Use of the DefaultHandler version of this method is recommended as
 the <c>HandlerBase</c> class has been deprecated in SAX 2.0</i></format></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/SAXParser.html#parse(java.lang.String, org.xml.sax.HandlerBase)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">If the uri is null.</exception>
        <exception cref="T:Java.IO.IOException">If any IO errors occur.</exception>
        <exception cref="T:Org.Xml.Sax.SAXException">If any SAX errors occur during processing.</exception>
        <altmember cref="T:Org.Xml.Sax.IDocumentHandler" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual void Parse (string uri, Org.Xml.Sax.Helpers.DefaultHandler dh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Parse(string uri, class Org.Xml.Sax.Helpers.DefaultHandler dh) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parse", "(Ljava/lang/String;Lorg/xml/sax/helpers/DefaultHandler;)V", "GetParse_Ljava_lang_String_Lorg_xml_sax_helpers_DefaultHandler_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
        <Parameter Name="handler" Type="Org.Xml.Sax.Helpers.DefaultHandler" />
      </Parameters>
      <Docs>
        <param name="uri">The location of the content to be parsed.</param>
        <param name="dh">The SAX DefaultHandler to use.</param>
        <summary>Parse the content described by the giving Uniform Resource
 Identifier (URI) as XML using the specified
 <c><see cref="T:Org.Xml.Sax.Helpers.DefaultHandler" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Parse the content described by the giving Uniform Resource
 Identifier (URI) as XML using the specified
 <c><see cref="T:Org.Xml.Sax.Helpers.DefaultHandler" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/SAXParser.html#parse(java.lang.String, org.xml.sax.helpers.DefaultHandler)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">If the uri is null.</exception>
        <exception cref="T:Java.IO.IOException">If any IO errors occur.</exception>
        <exception cref="T:Org.Xml.Sax.SAXException">If any SAX errors occur during processing.</exception>
        <altmember cref="T:Org.Xml.Sax.IDocumentHandler" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual void Parse (System.IO.Stream is, Org.Xml.Sax.HandlerBase hb, string systemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Parse(class System.IO.Stream is, class Org.Xml.Sax.HandlerBase hb, string systemId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parse", "(Ljava/io/InputStream;Lorg/xml/sax/HandlerBase;Ljava/lang/String;)V", "GetParse_Ljava_io_InputStream_Lorg_xml_sax_HandlerBase_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="handler" Type="Org.Xml.Sax.HandlerBase" />
        <Parameter Name="systemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="is">InputStream containing the content to be parsed.</param>
        <param name="hb">The SAX HandlerBase to use.</param>
        <param name="systemId">The systemId which is needed for resolving relative URIs.</param>
        <summary></summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Parse the content of the given <c><see cref="T:Java.IO.InputStream" /></c>
 instance as XML using the specified <c><see cref="T:Org.Xml.Sax.HandlerBase" /></c>.
 <format type="text/html"><i> Use of the DefaultHandler version of this method is recommended as
 the HandlerBase class has been deprecated in SAX 2.0</i></format>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/SAXParser.html#parse(java.io.InputStream, org.xml.sax.HandlerBase, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">If the given <c>InputStream</c> is
   <c>null</c>.</exception>
        <exception cref="T:Java.IO.IOException">If any IO error occurs interacting with the
   <c>InputStream</c>.</exception>
        <exception cref="T:Org.Xml.Sax.SAXException">If any SAX errors occur during processing.</exception>
        <altmember cref="T:Org.Xml.Sax.IDocumentHandler" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual void Parse (System.IO.Stream is, Org.Xml.Sax.Helpers.DefaultHandler dh, string systemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Parse(class System.IO.Stream is, class Org.Xml.Sax.Helpers.DefaultHandler dh, string systemId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parse", "(Ljava/io/InputStream;Lorg/xml/sax/helpers/DefaultHandler;Ljava/lang/String;)V", "GetParse_Ljava_io_InputStream_Lorg_xml_sax_helpers_DefaultHandler_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="handler" Type="Org.Xml.Sax.Helpers.DefaultHandler" />
        <Parameter Name="systemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="is">InputStream containing the content to be parsed.</param>
        <param name="dh">The SAX DefaultHandler to use.</param>
        <param name="systemId">The systemId which is needed for resolving relative URIs.</param>
        <summary>Parse the content of the given <c><see cref="T:Java.IO.InputStream" /></c>
 instance as XML using the specified
 <c><see cref="T:Org.Xml.Sax.Helpers.DefaultHandler" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Parse the content of the given <c><see cref="T:Java.IO.InputStream" /></c>
 instance as XML using the specified
 <c><see cref="T:Org.Xml.Sax.Helpers.DefaultHandler" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/SAXParser.html#parse(java.io.InputStream, org.xml.sax.helpers.DefaultHandler, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">If the given InputStream is null.</exception>
        <exception cref="T:Java.IO.IOException">If any IO errors occur.</exception>
        <exception cref="T:Org.Xml.Sax.SAXException">If any SAX errors occur during processing.</exception>
        <altmember cref="T:Org.Xml.Sax.IDocumentHandler" />
      </Docs>
    </Member>
    <Member MemberName="ParseAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ParseAsync (Java.IO.File f, Org.Xml.Sax.HandlerBase hb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ParseAsync(class Java.IO.File f, class Org.Xml.Sax.HandlerBase hb) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="Java.IO.File" />
        <Parameter Name="handler" Type="Org.Xml.Sax.HandlerBase" />
      </Parameters>
      <Docs>
        <param name="f">To be added.</param>
        <param name="hb">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ParseAsync (Java.IO.File f, Org.Xml.Sax.Helpers.DefaultHandler dh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ParseAsync(class Java.IO.File f, class Org.Xml.Sax.Helpers.DefaultHandler dh) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="Java.IO.File" />
        <Parameter Name="handler" Type="Org.Xml.Sax.Helpers.DefaultHandler" />
      </Parameters>
      <Docs>
        <param name="f">To be added.</param>
        <param name="dh">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ParseAsync (Org.Xml.Sax.InputSource is, Org.Xml.Sax.HandlerBase hb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ParseAsync(class Org.Xml.Sax.InputSource is, class Org.Xml.Sax.HandlerBase hb) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Org.Xml.Sax.InputSource" />
        <Parameter Name="handler" Type="Org.Xml.Sax.HandlerBase" />
      </Parameters>
      <Docs>
        <param name="is">To be added.</param>
        <param name="hb">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ParseAsync (Org.Xml.Sax.InputSource is, Org.Xml.Sax.Helpers.DefaultHandler dh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ParseAsync(class Org.Xml.Sax.InputSource is, class Org.Xml.Sax.Helpers.DefaultHandler dh) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Org.Xml.Sax.InputSource" />
        <Parameter Name="handler" Type="Org.Xml.Sax.Helpers.DefaultHandler" />
      </Parameters>
      <Docs>
        <param name="is">To be added.</param>
        <param name="dh">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ParseAsync (System.IO.Stream is, Org.Xml.Sax.HandlerBase hb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ParseAsync(class System.IO.Stream is, class Org.Xml.Sax.HandlerBase hb) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="handler" Type="Org.Xml.Sax.HandlerBase" />
      </Parameters>
      <Docs>
        <param name="is">To be added.</param>
        <param name="hb">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ParseAsync (System.IO.Stream is, Org.Xml.Sax.Helpers.DefaultHandler dh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ParseAsync(class System.IO.Stream is, class Org.Xml.Sax.Helpers.DefaultHandler dh) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="handler" Type="Org.Xml.Sax.Helpers.DefaultHandler" />
      </Parameters>
      <Docs>
        <param name="is">To be added.</param>
        <param name="dh">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ParseAsync (string uri, Org.Xml.Sax.HandlerBase hb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ParseAsync(string uri, class Org.Xml.Sax.HandlerBase hb) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
        <Parameter Name="handler" Type="Org.Xml.Sax.HandlerBase" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <param name="hb">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ParseAsync (string uri, Org.Xml.Sax.Helpers.DefaultHandler dh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ParseAsync(string uri, class Org.Xml.Sax.Helpers.DefaultHandler dh) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
        <Parameter Name="handler" Type="Org.Xml.Sax.Helpers.DefaultHandler" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <param name="dh">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ParseAsync (System.IO.Stream is, Org.Xml.Sax.HandlerBase hb, string systemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ParseAsync(class System.IO.Stream is, class Org.Xml.Sax.HandlerBase hb, string systemId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="handler" Type="Org.Xml.Sax.HandlerBase" />
        <Parameter Name="systemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="is">To be added.</param>
        <param name="hb">To be added.</param>
        <param name="systemId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ParseAsync (System.IO.Stream is, Org.Xml.Sax.Helpers.DefaultHandler dh, string systemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ParseAsync(class System.IO.Stream is, class Org.Xml.Sax.Helpers.DefaultHandler dh, string systemId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="handler" Type="Org.Xml.Sax.Helpers.DefaultHandler" />
        <Parameter Name="systemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="is">To be added.</param>
        <param name="dh">To be added.</param>
        <param name="systemId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parser">
      <MemberSignature Language="C#" Value="public abstract Org.Xml.Sax.IParser Parser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.Xml.Sax.IParser Parser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getParser", "()Lorg/xml/sax/Parser;", "GetGetParserHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Xml.Sax.IParser</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the SAX parser that is encapsulated by the
 implementation of this class.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the SAX parser that is encapsulated by the
 implementation of this class.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/SAXParser.html#getParser()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">If any SAX errors occur during processing.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("reset", "()V", "GetResetHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true"></summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Reset this <c>SAXParser</c> to its original configuration.</para>
          <para tool="javadoc-to-mdoc">
            <c>SAXParser</c> is reset to the same state as when it was created with
 <c><see cref="M:Javax.Xml.Parsers.SAXParserFactory.NewSAXParser" /></c>.
 <c>reset()</c> is designed to allow the reuse of existing <c>SAXParser</c>s
 thus saving resources associated with the creation of new <c>SAXParser</c>s.</para>
          <para tool="javadoc-to-mdoc">The reset <c>SAXParser</c> is not guaranteed to have the same <c><see cref="T:Javax.Xml.Validation.Schema" /></c><c>Object</c>, e.g. <c><see cref="M:Java.Lang.Object.Equals(Java.Lang.Object)" /></c>.  It is guaranteed to have a functionally equal
 <c>Schema</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/SAXParser.html#reset()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public virtual Javax.Xml.Validation.Schema Schema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Javax.Xml.Validation.Schema Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSchema", "()Ljavax/xml/validation/Schema;", "GetGetSchemaHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Validation.Schema</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true"></summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Get a reference to the the <c><see cref="T:Javax.Xml.Validation.Schema" /></c> being used by
 the XML processor.</para>
          <para tool="javadoc-to-mdoc">If no schema is being used, <c>null</c> is returned.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/SAXParser.html#getSchema()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.UnsupportedOperationException">For backward compatibility, when implementations for
      earlier versions of JAXP is used, this exception will be
      thrown.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public abstract void SetProperty (string name, Java.Lang.Object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetProperty(string name, class Java.Lang.Object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setProperty", "(Ljava/lang/String;Ljava/lang/Object;)V", "GetSetProperty_Ljava_lang_String_Ljava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="name">The name of the property to be set.</param>
        <param name="value">The value of the property to be set.</param>
        <summary tool="true"></summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Sets the particular property in the underlying implementation of
 <c><see cref="T:Org.Xml.Sax.IXMLReader" /></c>.
 A list of the core features and properties can be found at
 .</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/SAXParser.html#setProperty(java.lang.String, java.lang.Object)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXNotRecognizedException">When the underlying XMLReader does
   not recognize the property name.</exception>
        <exception cref="T:Org.Xml.Sax.SAXNotSupportedException">When the underlying XMLReader
  recognizes the property name but doesn't support the property.</exception>
        <altmember cref="M:Org.Xml.Sax.IXMLReader.SetProperty(System.String, Java.Lang.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XMLReader">
      <MemberSignature Language="C#" Value="public abstract Org.Xml.Sax.IXMLReader XMLReader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.Xml.Sax.IXMLReader XMLReader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getXMLReader", "()Lorg/xml/sax/XMLReader;", "GetGetXMLReaderHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Xml.Sax.IXMLReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the <c><see cref="T:Org.Xml.Sax.IXMLReader" /></c> that is encapsulated by the
 implementation of this class.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the <c><see cref="T:Org.Xml.Sax.IXMLReader" /></c> that is encapsulated by the
 implementation of this class.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/SAXParser.html#getXMLReader()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">If any SAX errors occur during processing.
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
