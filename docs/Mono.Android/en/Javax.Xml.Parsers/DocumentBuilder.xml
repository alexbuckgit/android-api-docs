<Type Name="DocumentBuilder" FullName="Javax.Xml.Parsers.DocumentBuilder">
  <TypeSignature Language="C#" Value="public abstract class DocumentBuilder : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DocumentBuilder extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("javax/xml/parsers/DocumentBuilder", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Defines the API to obtain DOM Document instances from an XML
 document.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Defines the API to obtain DOM Document instances from an XML
 document. Using this class, an application programmer can obtain a
 <c><see cref="T:Org.W3c.Dom.IDocument" /></c> from XML.</para>
      <para tool="javadoc-to-mdoc">

 An instance of this class can be obtained from the
 <c><see cref="M:Javax.Xml.Parsers.DocumentBuilderFactory.NewDocumentBuilder" /></c> method. Once
 an instance of this class is obtained, XML can be parsed from a
 variety of input sources. These input sources are InputStreams,
 Files, URLs, and SAX InputSources.</para>
      <para tool="javadoc-to-mdoc">

 Note that this class reuses several classes from the SAX API. This
 does not require that the implementor of the underlying DOM
 implementation use a SAX parser to parse XML document into a
 <c>Document</c>. It merely requires that the implementation
 communicate with the application using these existing APIs.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/javax/xml/parsers/DocumentBuilder.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DocumentBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Protected constructor </summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Protected constructor </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/DocumentBuilder.html#DocumentBuilder()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DocumentBuilder (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DOMImplementation">
      <MemberSignature Language="C#" Value="public abstract Org.W3c.Dom.IDOMImplementation DOMImplementation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.W3c.Dom.IDOMImplementation DOMImplementation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDOMImplementation", "()Lorg/w3c/dom/DOMImplementation;", "GetGetDOMImplementationHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.IDOMImplementation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtain an instance of a <c><see cref="T:Org.W3c.Dom.IDOMImplementation" /></c> object.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Obtain an instance of a <c><see cref="T:Org.W3c.Dom.IDOMImplementation" /></c> object.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/DocumentBuilder.html#getDOMImplementation()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsNamespaceAware">
      <MemberSignature Language="C#" Value="public abstract bool IsNamespaceAware { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNamespaceAware" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isNamespaceAware", "()Z", "GetIsNamespaceAwareHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether or not this parser is configured to
 understand namespaces.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates whether or not this parser is configured to
 understand namespaces.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/DocumentBuilder.html#isNamespaceAware()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsValidating">
      <MemberSignature Language="C#" Value="public abstract bool IsValidating { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValidating" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isValidating", "()Z", "GetIsValidatingHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether or not this parser is configured to
 validate XML documents.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates whether or not this parser is configured to
 validate XML documents.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/DocumentBuilder.html#isValidating()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsXIncludeAware">
      <MemberSignature Language="C#" Value="public virtual bool IsXIncludeAware { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsXIncludeAware" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isXIncludeAware", "()Z", "GetIsXIncludeAwareHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true"></summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Get the XInclude processing mode for this parser.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/DocumentBuilder.html#isXIncludeAware()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.UnsupportedOperationException">For backward compatibility, when implementations for
      earlier versions of JAXP is used, this exception will be
      thrown.</exception>
        <altmember cref="P:Javax.Xml.Parsers.DocumentBuilderFactory.XIncludeAware" />
      </Docs>
    </Member>
    <Member MemberName="NewDocument">
      <MemberSignature Language="C#" Value="public abstract Org.W3c.Dom.IDocument NewDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.W3c.Dom.IDocument NewDocument() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newDocument", "()Lorg/w3c/dom/Document;", "GetNewDocumentHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.IDocument</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtain a new instance of a DOM <c><see cref="T:Org.W3c.Dom.IDocument" /></c> object
 to build a DOM tree with.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Obtain a new instance of a DOM <c><see cref="T:Org.W3c.Dom.IDocument" /></c> object
 to build a DOM tree with.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/DocumentBuilder.html#newDocument()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual Org.W3c.Dom.IDocument Parse (Java.IO.File f);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.W3c.Dom.IDocument Parse(class Java.IO.File f) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parse", "(Ljava/io/File;)Lorg/w3c/dom/Document;", "GetParse_Ljava_io_File_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.IDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="f">The file containing the XML to parse.</param>
        <summary tool="true">Parse the content of the given file as an XML document
 and return a new DOM <c><see cref="T:Org.W3c.Dom.IDocument" /></c> object.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Parse the content of the given file as an XML document
 and return a new DOM <c><see cref="T:Org.W3c.Dom.IDocument" /></c> object.
 An <c>IllegalArgumentException</c> is thrown if the
 <c>File</c> is <c>null</c> null.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/DocumentBuilder.html#parse(java.io.File)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">If any IO errors occur.</exception>
        <exception cref="T:Org.Xml.Sax.SAXException">If any parse errors occur.</exception>
        <altmember cref="T:Org.Xml.Sax.IDocumentHandler" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public abstract Org.W3c.Dom.IDocument Parse (Org.Xml.Sax.InputSource is);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.W3c.Dom.IDocument Parse(class Org.Xml.Sax.InputSource is) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parse", "(Lorg/xml/sax/InputSource;)Lorg/w3c/dom/Document;", "GetParse_Lorg_xml_sax_InputSource_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.IDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Org.Xml.Sax.InputSource" />
      </Parameters>
      <Docs>
        <param name="is">InputSource containing the content to be parsed.</param>
        <summary>Parse the content of the given input source as an XML document
 and return a new DOM <c><see cref="T:Org.W3c.Dom.IDocument" /></c> object.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Parse the content of the given input source as an XML document
 and return a new DOM <c><see cref="T:Org.W3c.Dom.IDocument" /></c> object.
 An <c>IllegalArgumentException</c> is thrown if the
 <c>InputSource</c> is <c>null</c> null.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/DocumentBuilder.html#parse(org.xml.sax.InputSource)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">If any IO errors occur.</exception>
        <exception cref="T:Org.Xml.Sax.SAXException">If any parse errors occur.</exception>
        <altmember cref="T:Org.Xml.Sax.IDocumentHandler" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual Org.W3c.Dom.IDocument Parse (System.IO.Stream is);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.W3c.Dom.IDocument Parse(class System.IO.Stream is) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parse", "(Ljava/io/InputStream;)Lorg/w3c/dom/Document;", "GetParse_Ljava_io_InputStream_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.IDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="is">InputStream containing the content to be parsed.</param>
        <summary>Parse the content of the given <c>InputStream</c> as an XML
 document and return a new DOM <c><see cref="T:Org.W3c.Dom.IDocument" /></c> object.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Parse the content of the given <c>InputStream</c> as an XML
 document and return a new DOM <c><see cref="T:Org.W3c.Dom.IDocument" /></c> object.
 An <c>IllegalArgumentException</c> is thrown if the
 <c>InputStream</c> is null.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/DocumentBuilder.html#parse(java.io.InputStream)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">If any IO errors occur.</exception>
        <exception cref="T:Org.Xml.Sax.SAXException">If any parse errors occur.</exception>
        <altmember cref="T:Org.Xml.Sax.IDocumentHandler" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual Org.W3c.Dom.IDocument Parse (string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.W3c.Dom.IDocument Parse(string uri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parse", "(Ljava/lang/String;)Lorg/w3c/dom/Document;", "GetParse_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.IDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">The location of the content to be parsed.</param>
        <summary>Parse the content of the given URI as an XML document
 and return a new DOM <c><see cref="T:Org.W3c.Dom.IDocument" /></c> object.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Parse the content of the given URI as an XML document
 and return a new DOM <c><see cref="T:Org.W3c.Dom.IDocument" /></c> object.
 An <c>IllegalArgumentException</c> is thrown if the
 URI is <c>null</c> null.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/DocumentBuilder.html#parse(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">If any IO errors occur.</exception>
        <exception cref="T:Org.Xml.Sax.SAXException">If any parse errors occur.</exception>
        <altmember cref="T:Org.Xml.Sax.IDocumentHandler" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual Org.W3c.Dom.IDocument Parse (System.IO.Stream is, string systemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.W3c.Dom.IDocument Parse(class System.IO.Stream is, string systemId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parse", "(Ljava/io/InputStream;Ljava/lang/String;)Lorg/w3c/dom/Document;", "GetParse_Ljava_io_InputStream_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.IDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="systemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="is">InputStream containing the content to be parsed.</param>
        <param name="systemId">Provide a base for resolving relative URIs.</param>
        <summary>Parse the content of the given <c>InputStream</c> as an
 XML document and return a new DOM <c><see cref="T:Org.W3c.Dom.IDocument" /></c> object.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Parse the content of the given <c>InputStream</c> as an
 XML document and return a new DOM <c><see cref="T:Org.W3c.Dom.IDocument" /></c> object.
 An <c>IllegalArgumentException</c> is thrown if the
 <c>InputStream</c> is null.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/DocumentBuilder.html#parse(java.io.InputStream, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">If any IO errors occur.</exception>
        <exception cref="T:Org.Xml.Sax.SAXException">If any parse errors occur.</exception>
        <altmember cref="T:Org.Xml.Sax.IDocumentHandler" />
      </Docs>
    </Member>
    <Member MemberName="ParseAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Org.W3c.Dom.IDocument&gt; ParseAsync (Java.IO.File f);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Org.W3c.Dom.IDocument&gt; ParseAsync(class Java.IO.File f) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Org.W3c.Dom.IDocument&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="f">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Org.W3c.Dom.IDocument&gt; ParseAsync (Org.Xml.Sax.InputSource is);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Org.W3c.Dom.IDocument&gt; ParseAsync(class Org.Xml.Sax.InputSource is) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Org.W3c.Dom.IDocument&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Org.Xml.Sax.InputSource" />
      </Parameters>
      <Docs>
        <param name="is">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Org.W3c.Dom.IDocument&gt; ParseAsync (System.IO.Stream is);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Org.W3c.Dom.IDocument&gt; ParseAsync(class System.IO.Stream is) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Org.W3c.Dom.IDocument&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="is">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Org.W3c.Dom.IDocument&gt; ParseAsync (string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Org.W3c.Dom.IDocument&gt; ParseAsync(string uri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Org.W3c.Dom.IDocument&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Org.W3c.Dom.IDocument&gt; ParseAsync (System.IO.Stream is, string systemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Org.W3c.Dom.IDocument&gt; ParseAsync(class System.IO.Stream is, string systemId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Org.W3c.Dom.IDocument&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="systemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="is">To be added.</param>
        <param name="systemId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("reset", "()V", "GetResetHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary></summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Reset this <c>DocumentBuilder</c> to its original configuration.</para>
          <para tool="javadoc-to-mdoc">
            <c>DocumentBuilder</c> is reset to the same state as when it was created with
 <c><see cref="M:Javax.Xml.Parsers.DocumentBuilderFactory.NewDocumentBuilder" /></c>.
 <c>reset()</c> is designed to allow the reuse of existing <c>DocumentBuilder</c>s
 thus saving resources associated with the creation of new <c>DocumentBuilder</c>s.</para>
          <para tool="javadoc-to-mdoc">The reset <c>DocumentBuilder</c> is not guaranteed to have the same <c><see cref="T:Org.Xml.Sax.IEntityResolver" /></c> or <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c><c>Object</c>s, e.g. <c><see cref="M:Java.Lang.Object.Equals(Java.Lang.Object)" /></c>.  It is guaranteed to have a functionally equal
 <c>EntityResolver</c> and <c>ErrorHandler</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/DocumentBuilder.html#reset()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public virtual Javax.Xml.Validation.Schema Schema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Javax.Xml.Validation.Schema Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSchema", "()Ljavax/xml/validation/Schema;", "GetGetSchemaHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Validation.Schema</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true"></summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Get a reference to the the <c><see cref="T:Javax.Xml.Validation.Schema" /></c> being used by
 the XML processor.</para>
          <para tool="javadoc-to-mdoc">If no schema is being used, <c>null</c> is returned.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/DocumentBuilder.html#getSchema()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.UnsupportedOperationException">For backward compatibility, when implementations for
      earlier versions of JAXP is used, this exception will be
      thrown.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetEntityResolver">
      <MemberSignature Language="C#" Value="public abstract void SetEntityResolver (Org.Xml.Sax.IEntityResolver er);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEntityResolver(class Org.Xml.Sax.IEntityResolver er) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setEntityResolver", "(Lorg/xml/sax/EntityResolver;)V", "GetSetEntityResolver_Lorg_xml_sax_EntityResolver_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resolver" Type="Org.Xml.Sax.IEntityResolver" />
      </Parameters>
      <Docs>
        <param name="er">The <c>EntityResolver</c> to be used to resolve entities
           present in the XML document to be parsed.
</param>
        <summary>Specify the <c><see cref="T:Org.Xml.Sax.IEntityResolver" /></c> to be used to resolve
 entities present in the XML document to be parsed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Specify the <c><see cref="T:Org.Xml.Sax.IEntityResolver" /></c> to be used to resolve
 entities present in the XML document to be parsed. Setting
 this to <c>null</c> will result in the underlying
 implementation using it's own default implementation and
 behavior.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/DocumentBuilder.html#setEntityResolver(org.xml.sax.EntityResolver)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetErrorHandler">
      <MemberSignature Language="C#" Value="public abstract void SetErrorHandler (Org.Xml.Sax.IErrorHandler eh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetErrorHandler(class Org.Xml.Sax.IErrorHandler eh) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setErrorHandler", "(Lorg/xml/sax/ErrorHandler;)V", "GetSetErrorHandler_Lorg_xml_sax_ErrorHandler_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="Org.Xml.Sax.IErrorHandler" />
      </Parameters>
      <Docs>
        <param name="eh">The <c>ErrorHandler</c> to be used by the parser.
</param>
        <summary>Specify the <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c> to be used by the parser.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Specify the <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c> to be used by the parser.
 Setting this to <c>null</c> will result in the underlying
 implementation using it's own default implementation and
 behavior.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/DocumentBuilder.html#setErrorHandler(org.xml.sax.ErrorHandler)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>