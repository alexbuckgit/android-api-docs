<Type Name="SAXParserFactory" FullName="Javax.Xml.Parsers.SAXParserFactory">
  <TypeSignature Language="C#" Value="public abstract class SAXParserFactory : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SAXParserFactory extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("javax/xml/parsers/SAXParserFactory", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Defines a factory API that enables applications to configure and
 obtain a SAX based parser to parse XML documents.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Defines a factory API that enables applications to configure and
 obtain a SAX based parser to parse XML documents.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/javax/xml/parsers/SAXParserFactory.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SAXParserFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Protected constructor to force use of <c><see cref="M:Javax.Xml.Parsers.SAXParserFactory.NewInstance" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/SAXParserFactory.html#SAXParserFactory()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SAXParserFactory (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFeature">
      <MemberSignature Language="C#" Value="public abstract bool GetFeature (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetFeature(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getFeature", "(Ljava/lang/String;)Z", "GetGetFeature_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the property to be retrieved.</param>
        <summary tool="true">Returns the particular property requested for in the underlying
 implementation of org.xml.sax.XMLReader.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Returns the particular property requested for in the underlying
 implementation of org.xml.sax.XMLReader.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/SAXParserFactory.html#getFeature(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Xml.Parsers.ParserConfigurationException">if a parser cannot be created which satisfies the requested configuration.</exception>
        <exception cref="T:Org.Xml.Sax.SAXNotRecognizedException">When the underlying XMLReader does not recognize the property name.</exception>
        <exception cref="T:Org.Xml.Sax.SAXNotSupportedException">When the underlying XMLReader recognizes the property name but doesn't support the property.</exception>
        <altmember cref="M:Org.Xml.Sax.IXMLReader.GetProperty(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="NamespaceAware">
      <MemberSignature Language="C#" Value="public virtual bool NamespaceAware { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NamespaceAware" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isNamespaceAware", "()Z", "GetIsNamespaceAwareHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setNamespaceAware", "(Z)V", "GetSetNamespaceAware_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether or not the factory is configured to produce
 parsers which are namespace aware.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/javax/xml/parsers/SAXParserFactory.html#isNamespaceAware()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Indicates whether or not the factory is configured to produce
 parsers which are namespace aware.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/javax/xml/parsers/SAXParserFactory.html#setNamespaceAware(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Specifies that the parser produced by this code will
 provide support for XML namespaces. By default the value of this is set
 to <c>false</c>.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NewInstance">
      <MemberSignature Language="C#" Value="public static Javax.Xml.Parsers.SAXParserFactory NewInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Xml.Parsers.SAXParserFactory NewInstance() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newInstance", "()Ljavax/xml/parsers/SAXParserFactory;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Parsers.SAXParserFactory</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">Returns an instance of the named implementation of <c>SAXParserFactory</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns Android's implementation of <c>SAXParserFactory</c>. Unlike
 other Java implementations, this method does not consult system
 properties, property files, or the services API.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/SAXParserFactory.html#newInstance()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Javax.Xml.Parsers.FactoryConfigurationError">never. Included for API
     compatibility with other Java implementations.
</exception>
      </Docs>
    </Member>
    <Member MemberName="NewInstance">
      <MemberSignature Language="C#" Value="public static Javax.Xml.Parsers.SAXParserFactory NewInstance (string factoryClassName, Java.Lang.ClassLoader classLoader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Xml.Parsers.SAXParserFactory NewInstance(string factoryClassName, class Java.Lang.ClassLoader classLoader) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newInstance", "(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljavax/xml/parsers/SAXParserFactory;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Parsers.SAXParserFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.String" />
        <Parameter Name="p1" Type="Java.Lang.ClassLoader" />
      </Parameters>
      <Docs>
        <param name="factoryClassName">To be added.</param>
        <param name="classLoader">To be added.</param>
        <summary>Returns an instance of the named implementation of <c>SAXParserFactory</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns an instance of the named implementation of <c>SAXParserFactory</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/SAXParserFactory.html#newInstance(java.lang.String, java.lang.ClassLoader)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Javax.Xml.Parsers.FactoryConfigurationError">if <c>factoryClassName</c> is not available or cannot be
     instantiated.</exception>
      </Docs>
    </Member>
    <Member MemberName="NewSAXParser">
      <MemberSignature Language="C#" Value="public abstract Javax.Xml.Parsers.SAXParser NewSAXParser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Javax.Xml.Parsers.SAXParser NewSAXParser() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newSAXParser", "()Ljavax/xml/parsers/SAXParser;", "GetNewSAXParserHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Parsers.SAXParser</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">Creates a new instance of a SAXParser using the currently
 configured factory parameters.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Creates a new instance of a SAXParser using the currently
 configured factory parameters.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/SAXParserFactory.html#newSAXParser()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Xml.Parsers.ParserConfigurationException">if a parser cannot
   be created which satisfies the requested configuration.</exception>
        <exception cref="T:Org.Xml.Sax.SAXException">for SAX errors.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public virtual Javax.Xml.Validation.Schema Schema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Javax.Xml.Validation.Schema Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSchema", "()Ljavax/xml/validation/Schema;", "GetGetSchemaHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSchema", "(Ljavax/xml/validation/Schema;)V", "GetSetSchema_Ljavax_xml_validation_Schema_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Validation.Schema</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <c><see cref="T:Javax.Xml.Validation.Schema" /></c> object specified through
 the <c><see cref="P:Javax.Xml.Parsers.SAXParserFactory.Schema" /></c> method.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/javax/xml/parsers/SAXParserFactory.html#getSchema()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the <c><see cref="T:Javax.Xml.Validation.Schema" /></c> object specified through
 the <c><see cref="P:Javax.Xml.Parsers.SAXParserFactory.Schema" /></c> method.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/javax/xml/parsers/SAXParserFactory.html#setSchema(javax.xml.validation.Schema)" target="_blank">[Android Documentation]</a>
              <br />
            </format>When warnings/errors/fatal errors are found by the validator, the parser must
 handle them as if those errors were found by the parser itself.
 In other words, if the user-specified <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c>
 is set, it must receive those errors, and if not, they must be
 treated according to the implementation specific
 default error handling rules.

 This processing will take effect even if
 the <c><see cref="P:Javax.Xml.Parsers.SAXParserFactory.Validating" /></c> method returns <c>false</c>.

 <format type="text/html"><h4>Note for implementors</h4></format></para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Set the <c><see cref="T:Javax.Xml.Validation.Schema" /></c> to be used by parsers created
 from this factory.</para>
          <para tool="javadoc-to-mdoc">When a <c><see cref="T:Javax.Xml.Validation.Schema" /></c> is non-null, a parser will use a validator
 created from it to validate documents before it passes information
 down to the application.</para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">A validator may modify the SAX event stream (for example by
 adding default values that were missing in documents), and a parser
 is responsible to make sure that the application will receive
 those modified event stream.</para>
          <para tool="javadoc-to-mdoc">Initially, <c>null</c> is set as the <c><see cref="T:Javax.Xml.Validation.Schema" /></c>.</para>
          <para tool="javadoc-to-mdoc">It is an error to use
 the <c>http://java.sun.com/xml/jaxp/properties/schemaSource</c>
 property and/or the <c>http://java.sun.com/xml/jaxp/properties/schemaLanguage</c>
 property in conjunction with a non-null <c><see cref="T:Javax.Xml.Validation.Schema" /></c> object.
 Such configuration will cause a <c><see cref="T:Org.Xml.Sax.SAXException" /></c>
 exception when those properties are set on a <c><see cref="T:Javax.Xml.Parsers.SAXParser" /></c>.</para>
          <para tool="javadoc-to-mdoc">
 A parser must be able to work with any <c><see cref="T:Javax.Xml.Validation.Schema" /></c>
 implementation. However, parsers and schemas are allowed
 to use implementation-specific custom mechanisms
 as long as they yield the result described in the specification.
 </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.UnsupportedOperationException">For backward compatibility, when implementations for
      earlier versions of JAXP is used, this exception will be
      thrown.</exception>
        <exception cref="T:Java.Lang.UnsupportedOperationException">For backward compatibility, when implementations for
      earlier versions of JAXP is used, this exception will be
      thrown.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetFeature">
      <MemberSignature Language="C#" Value="public abstract void SetFeature (string name, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFeature(string name, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setFeature", "(Ljava/lang/String;Z)V", "GetSetFeature_Ljava_lang_String_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">The name of the feature to be set.</param>
        <param name="value">The value of the feature to be set.</param>
        <summary tool="true">Sets the particular feature in the underlying implementation of
 org.xml.sax.XMLReader.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">
            <list type="bullet">
              <item>
                <term>
                  <c>true</c>: the implementation will limit XML processing to conform to implementation limits.
     Examples include entity expansion limits and XML Schema constructs that would consume large amounts of resources.
     If XML processing is limited for security reasons, it will be reported via a call to the registered
     <c><see cref="M:Org.Xml.Sax.IErrorHandler.FatalError(Org.Xml.Sax.SAXParseException)" /></c>.
     See <c><see cref="T:Javax.Xml.Parsers.SAXParser" /></c><c>parse</c> methods for handler specification.
   </term>
              </item>
              <item>
                <term>
     When the feature is <c>false</c>, the implementation will processing XML according to the XML specifications without
     regard to possible implementation limits.
   </term>
              </item>
            </list>
          </para>
          <para tool="javadoc-to-mdoc">Sets the particular feature in the underlying implementation of
 org.xml.sax.XMLReader.
 A list of the core features and properties can be found at
 </para>
          <para tool="javadoc-to-mdoc">All implementations are required to support the <c><see cref="F:Javax.Xml.XMLConstants.FeatureSecureProcessing" /></c> feature.
 When the feature is</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/parsers/SAXParserFactory.html#setFeature(java.lang.String, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Xml.Parsers.ParserConfigurationException">if a parser cannot
     be created which satisfies the requested configuration.</exception>
        <exception cref="T:Org.Xml.Sax.SAXNotRecognizedException">When the underlying XMLReader does
            not recognize the property name.</exception>
        <exception cref="T:Org.Xml.Sax.SAXNotSupportedException">When the underlying XMLReader
            recognizes the property name but doesn't support the
            property.</exception>
        <exception cref="T:Java.Lang.NullPointerException">If the <c>name</c> parameter is null.</exception>
        <altmember cref="M:Org.Xml.Sax.IXMLReader.SetFeature(System.String, System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validating">
      <MemberSignature Language="C#" Value="public virtual bool Validating { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Validating" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isValidating", "()Z", "GetIsValidatingHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setValidating", "(Z)V", "GetSetValidating_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether or not the factory is configured to produce
 parsers which validate the XML content during parse.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/javax/xml/parsers/SAXParserFactory.html#isValidating()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Indicates whether or not the factory is configured to produce
 parsers which validate the XML content during parse.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/javax/xml/parsers/SAXParserFactory.html#setValidating(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Specifies that the parser produced by this code will
 validate documents as they are parsed. By default the value of this is
 set to <c>false</c>.

 </para>
          <para tool="javadoc-to-mdoc">
 Note that "the validation" here means
  as defined in the XML recommendation.
 In other words, it essentially just controls the DTD validation.
 (except the legacy two properties defined in JAXP 1.2.
 See  for more details.)
 </para>
          <para tool="javadoc-to-mdoc">
 To use modern schema languages such as W3C XML Schema or
 RELAX NG instead of DTD, you can configure your parser to be
 a non-validating parser by leaving the <c><see cref="P:Javax.Xml.Parsers.SAXParserFactory.Validating" /></c>
 method <c>false</c>, then use the <c><see cref="P:Javax.Xml.Parsers.SAXParserFactory.Schema" /></c>
 method to associate a schema to a parser.
 </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="XIncludeAware">
      <MemberSignature Language="C#" Value="public virtual bool XIncludeAware { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool XIncludeAware" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isXIncludeAware", "()Z", "GetIsXIncludeAwareHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setXIncludeAware", "(Z)V", "GetSetXIncludeAware_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">Get state of XInclude processing.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/javax/xml/parsers/SAXParserFactory.html#isXIncludeAware()" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc">Get state of XInclude processing.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/javax/xml/parsers/SAXParserFactory.html#setXIncludeAware(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc">Set state of XInclude processing.</para>
          <para tool="javadoc-to-mdoc">If XInclude markup is found in the document instance, should it be
 processed as specified in .</para>
          <para tool="javadoc-to-mdoc">XInclude processing defaults to <c>false</c>.</para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.UnsupportedOperationException">For backward compatibility, when implementations for
      earlier versions of JAXP is used, this exception will be
      thrown.</exception>
        <exception cref="T:Java.Lang.UnsupportedOperationException">For backward compatibility, when implementations for
      earlier versions of JAXP is used, this exception will be
      thrown.</exception>
      </Docs>
    </Member>
  </Members>
</Type>