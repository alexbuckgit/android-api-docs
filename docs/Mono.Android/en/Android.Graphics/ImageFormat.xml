<Type Name="ImageFormat" FullName="Android.Graphics.ImageFormat">
  <TypeSignature Language="C#" Value="public class ImageFormat : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImageFormat extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/graphics/ImageFormat", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="8">
    <summary>
      <format type="text/html">
        <a href="http://developer.android.com/reference/android/graphics/ImageFormat.html" target="_blank">[Android Documentation]</a>
      </format>
    </summary>
    <remarks>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/graphics/ImageFormat.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageFormat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary></summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/ImageFormat.html#ImageFormat()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ImageFormat (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBitsPerPixel">
      <MemberSignature Language="C#" Value="public static int GetBitsPerPixel (Android.Graphics.ImageFormatType format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetBitsPerPixel(valuetype Android.Graphics.ImageFormatType format) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getBitsPerPixel", "(I)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="Android.Graphics.ImageFormatType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">To be added.</param>
        <summary>Use this function to retrieve the number of bits per pixel of an
 ImageFormat.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Use this function to retrieve the number of bits per pixel of an
 ImageFormat.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/ImageFormat.html#getBitsPerPixel(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="Jpeg">
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageFormatType Jpeg = 256;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageFormatType Jpeg = (256)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("JPEG")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageFormatType</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary>Compressed JPEG format.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Compressed JPEG format.

 </para>
          <para tool="javadoc-to-mdoc">This format is always supported as an output format for the
 <c><see cref="N:Android.Hardware.Camera2" /></c> API, and as a picture format for the older
 <c><see cref="T:Android.Hardware.Camera" /></c> API</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/ImageFormat.html#JPEG" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="Nv16">
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageFormatType Nv16 = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageFormatType Nv16 = (16)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("NV16")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageFormatType</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>YCbCr format, used for video.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">YCbCr format, used for video.

 </para>
          <para tool="javadoc-to-mdoc">For the <c><see cref="N:Android.Hardware.Camera2" /></c> API, the <c><see cref="F:Android.Graphics.ImageFormat.Yuv420888" /></c> format is
 recommended for YUV output instead.</para>
          <para tool="javadoc-to-mdoc">Whether this format is supported by the old camera API can be determined by
 <c><see cref="!:NoType:android/hardware/Camera$Parameters;Href=../../../reference/android/hardware/Camera.Parameters.html#getSupportedPreviewFormats()" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/ImageFormat.html#NV16" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="Nv21">
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageFormatType Nv21 = 17;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageFormatType Nv21 = (17)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("NV21")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageFormatType</ReturnType>
      </ReturnValue>
      <MemberValue>17</MemberValue>
      <Docs>
        <summary>YCrCb format used for images, which uses the NV21 encoding format.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">YCrCb format used for images, which uses the NV21 encoding format.

 </para>
          <para tool="javadoc-to-mdoc">This is the default format
 for <c><see cref="T:Android.Hardware.Camera" /></c> preview images, when not otherwise set with
 <c><see cref="!:NoType:android/hardware/Camera$Parameters;Href=../../../reference/android/hardware/Camera.Parameters.html#setPreviewFormat(int)" /></c>.</para>
          <para tool="javadoc-to-mdoc">For the <c><see cref="N:Android.Hardware.Camera2" /></c> API, the <c><see cref="F:Android.Graphics.ImageFormat.Yuv420888" /></c> format is
 recommended for YUV output instead.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/ImageFormat.html#NV21" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="Raw10">
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageFormatType Raw10 = 37;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageFormatType Raw10 = (37)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("RAW10")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageFormatType</ReturnType>
      </ReturnValue>
      <MemberValue>37</MemberValue>
      <Docs>
        <summary>
          <format type="text/html">
            <table>
              <thead>
                <tr>
                  <th align="center" />
                  <th align="center">bit 7</th>
                  <th align="center">bit 6</th>
                  <th align="center">bit 5</th>
                  <th align="center">bit 4</th>
                  <th align="center">bit 3</th>
                  <th align="center">bit 2</th>
                  <th align="center">bit 1</th>
                  <th align="center">bit 0</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td align="center">Byte 0:</td>
                  <td align="center">P0[9]</td>
                  <td align="center">P0[8]</td>
                  <td align="center">P0[7]</td>
                  <td align="center">P0[6]</td>
                  <td align="center">P0[5]</td>
                  <td align="center">P0[4]</td>
                  <td align="center">P0[3]</td>
                  <td align="center">P0[2]</td>
                </tr>
                <tr>
                  <td align="center">Byte 1:</td>
                  <td align="center">P1[9]</td>
                  <td align="center">P1[8]</td>
                  <td align="center">P1[7]</td>
                  <td align="center">P1[6]</td>
                  <td align="center">P1[5]</td>
                  <td align="center">P1[4]</td>
                  <td align="center">P1[3]</td>
                  <td align="center">P1[2]</td>
                </tr>
                <tr>
                  <td align="center">Byte 2:</td>
                  <td align="center">P2[9]</td>
                  <td align="center">P2[8]</td>
                  <td align="center">P2[7]</td>
                  <td align="center">P2[6]</td>
                  <td align="center">P2[5]</td>
                  <td align="center">P2[4]</td>
                  <td align="center">P2[3]</td>
                  <td align="center">P2[2]</td>
                </tr>
                <tr>
                  <td align="center">Byte 3:</td>
                  <td align="center">P3[9]</td>
                  <td align="center">P3[8]</td>
                  <td align="center">P3[7]</td>
                  <td align="center">P3[6]</td>
                  <td align="center">P3[5]</td>
                  <td align="center">P3[4]</td>
                  <td align="center">P3[3]</td>
                  <td align="center">P3[2]</td>
                </tr>
                <tr>
                  <td align="center">Byte 4:</td>
                  <td align="center">P3[1]</td>
                  <td align="center">P3[0]</td>
                  <td align="center">P2[1]</td>
                  <td align="center">P2[0]</td>
                  <td align="center">P1[1]</td>
                  <td align="center">P1[0]</td>
                  <td align="center">P0[1]</td>
                  <td align="center">P0[0]</td>
                </tr>
              </tbody>
            </table>
          </format>
          <sample external-id="F5ED0852D53F78E12C23A7D767A3B12C" /> where the row stride is in <i>bytes</i>,
 not pixels.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <table>
                <thead>
                  <tr>
                    <th align="center" />
                    <th align="center">bit 7</th>
                    <th align="center">bit 6</th>
                    <th align="center">bit 5</th>
                    <th align="center">bit 4</th>
                    <th align="center">bit 3</th>
                    <th align="center">bit 2</th>
                    <th align="center">bit 1</th>
                    <th align="center">bit 0</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td align="center">Byte 0:</td>
                    <td align="center">P0[9]</td>
                    <td align="center">P0[8]</td>
                    <td align="center">P0[7]</td>
                    <td align="center">P0[6]</td>
                    <td align="center">P0[5]</td>
                    <td align="center">P0[4]</td>
                    <td align="center">P0[3]</td>
                    <td align="center">P0[2]</td>
                  </tr>
                  <tr>
                    <td align="center">Byte 1:</td>
                    <td align="center">P1[9]</td>
                    <td align="center">P1[8]</td>
                    <td align="center">P1[7]</td>
                    <td align="center">P1[6]</td>
                    <td align="center">P1[5]</td>
                    <td align="center">P1[4]</td>
                    <td align="center">P1[3]</td>
                    <td align="center">P1[2]</td>
                  </tr>
                  <tr>
                    <td align="center">Byte 2:</td>
                    <td align="center">P2[9]</td>
                    <td align="center">P2[8]</td>
                    <td align="center">P2[7]</td>
                    <td align="center">P2[6]</td>
                    <td align="center">P2[5]</td>
                    <td align="center">P2[4]</td>
                    <td align="center">P2[3]</td>
                    <td align="center">P2[2]</td>
                  </tr>
                  <tr>
                    <td align="center">Byte 3:</td>
                    <td align="center">P3[9]</td>
                    <td align="center">P3[8]</td>
                    <td align="center">P3[7]</td>
                    <td align="center">P3[6]</td>
                    <td align="center">P3[5]</td>
                    <td align="center">P3[4]</td>
                    <td align="center">P3[3]</td>
                    <td align="center">P3[2]</td>
                  </tr>
                  <tr>
                    <td align="center">Byte 4:</td>
                    <td align="center">P3[1]</td>
                    <td align="center">P3[0]</td>
                    <td align="center">P2[1]</td>
                    <td align="center">P2[0]</td>
                    <td align="center">P1[1]</td>
                    <td align="center">P1[0]</td>
                    <td align="center">P0[1]</td>
                    <td align="center">P0[0]</td>
                  </tr>
                </tbody>
              </table>
            </format>
            <sample external-id="F5ED0852D53F78E12C23A7D767A3B12C" /> where the row stride is in <i>bytes</i>,
 not pixels.

 </para>
          <para tool="javadoc-to-mdoc">
 Android 10-bit raw format
 </para>
          <para tool="javadoc-to-mdoc">
 This is a single-plane, 10-bit per pixel, densely packed (in each row),
 unprocessed format, usually representing raw Bayer-pattern images coming
 from an image sensor.
 </para>
          <para tool="javadoc-to-mdoc">
 In an image buffer with this format, starting from the first pixel of
 each row, each 4 consecutive pixels are packed into 5 bytes (40 bits).
 Each one of the first 4 bytes contains the top 8 bits of each pixel, The
 fifth byte contains the 2 least significant bits of the 4 pixels, the
 exact layout data for each 4 consecutive pixels is illustrated below
 (<c>Pi[j]</c> stands for the jth bit of the ith pixel):
 </para>
          <para tool="javadoc-to-mdoc">
 This format assumes
 <list type="bullet"><item><term>a width multiple of 4 pixels</term></item><item><term>an even height</term></item></list></para>
          <para tool="javadoc-to-mdoc">
 Since this is a densely packed format, the pixel stride is always 0. The
 application must use the pixel data layout defined in above table to
 access each row data. When row stride is equal to <c>width * (10 / 8)</c>, there
 will be no padding bytes at the end of each row, the entire image data is
 densely packed. When stride is larger than <c>width * (10 / 8)</c>, padding
 bytes will be present at the end of each row.
 </para>
          <para tool="javadoc-to-mdoc">
 For example, the <c><see cref="T:Android.Media.Image" /></c> object can provide data in
 this format from a <c><see cref="T:Android.Hardware.Camera2.CameraDevice" /></c> (if
 supported) through a <c><see cref="T:Android.Media.ImageReader" /></c> object. The
 <c><see cref="M:Android.Media.Image.GetPlanes" /></c> will return a
 single plane containing the pixel data. The pixel stride is always 0 in
 <c><see cref="!:NoType:android/media/Image$Plane;Href=../../../reference/android/media/Image.Plane.html#getPixelStride()" /></c>, and the
 <c><see cref="!:NoType:android/media/Image$Plane;Href=../../../reference/android/media/Image.Plane.html#getRowStride()" /></c> describes the vertical
 neighboring pixel distance (in bytes) between adjacent rows.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/ImageFormat.html#RAW10" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="T:Android.Media.Image" />
        <altmember cref="T:Android.Media.ImageReader" />
        <altmember cref="T:Android.Hardware.Camera2.CameraDevice" />
      </Docs>
    </Member>
    <Member MemberName="RawSensor">
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageFormatType RawSensor = 32;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageFormatType RawSensor = (32)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("RAW_SENSOR")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageFormatType</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary></summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">General raw camera sensor image format, usually representing a
 single-channel Bayer-mosaic image. Each pixel color sample is stored with
 16 bits of precision.</para>
          <para tool="javadoc-to-mdoc">The layout of the color mosaic, the maximum and minimum encoding
 values of the raw pixel data, the color space of the image, and all other
 needed information to interpret a raw sensor image must be queried from
 the <c><see cref="T:Android.Hardware.Camera2.CameraDevice" /></c> which produced the
 image.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/ImageFormat.html#RAW_SENSOR" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rgb565">
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageFormatType Rgb565 = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageFormatType Rgb565 = (4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("RGB_565")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageFormatType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>RGB format used for pictures encoded as RGB_565.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">RGB format used for pictures encoded as RGB_565. See
 <c><see cref="!:NoType:android/hardware/Camera$Parameters;Href=../../../reference/android/hardware/Camera.Parameters.html#setPictureFormat(int)" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/ImageFormat.html#RGB_565" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unknown">
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageFormatType Unknown = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageFormatType Unknown = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("UNKNOWN")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageFormatType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary></summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/ImageFormat.html#UNKNOWN" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="Yuv420888">
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageFormatType Yuv420888 = 35;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageFormatType Yuv420888 = (35)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("YUV_420_888")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageFormatType</ReturnType>
      </ReturnValue>
      <MemberValue>35</MemberValue>
      <Docs>
        <summary></summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Multi-plane Android YUV 420 format</para>
          <para tool="javadoc-to-mdoc">This format is a generic YCbCr format, capable of describing any 4:2:0
 chroma-subsampled planar or semiplanar buffer (but not fully interleaved),
 with 8 bits per color sample.</para>
          <para tool="javadoc-to-mdoc">Images in this format are always represented by three separate buffers
 of data, one for each color plane. Additional information always
 accompanies the buffers, describing the row stride and the pixel stride
 for each plane.</para>
          <para tool="javadoc-to-mdoc">The order of planes in the array returned by
 <c><see cref="M:Android.Media.Image.GetPlanes" /></c> is guaranteed such that
 plane #0 is always Y, plane #1 is always U (Cb), and plane #2 is always V (Cr).</para>
          <para tool="javadoc-to-mdoc">The Y-plane is guaranteed not to be interleaved with the U/V planes
 (in particular, pixel stride is always 1 in
 <c><see cref="!:NoType:android/media/Image$Plane;Href=../../../reference/android/media/Image.Plane.html#getPixelStride()" /></c>).</para>
          <para tool="javadoc-to-mdoc">The U/V planes are guaranteed to have the same row stride and pixel stride
 (in particular,
 <c><see cref="!:NoType:android/media/Image$Plane;Href=../../../reference/android/media/Image.Plane.html#getRowStride()" /></c>
 == <c><see cref="!:NoType:android/media/Image$Plane;Href=../../../reference/android/media/Image.Plane.html#getRowStride()" /></c> and
 <c><see cref="!:NoType:android/media/Image$Plane;Href=../../../reference/android/media/Image.Plane.html#getPixelStride()" /></c>
 == <c><see cref="!:NoType:android/media/Image$Plane;Href=../../../reference/android/media/Image.Plane.html#getPixelStride()" /></c>;
 ).</para>
          <para tool="javadoc-to-mdoc">For example, the <c><see cref="T:Android.Media.Image" /></c> object can provide data
 in this format from a <c><see cref="T:Android.Hardware.Camera2.CameraDevice" /></c>
 through a <c><see cref="T:Android.Media.ImageReader" /></c> object.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/ImageFormat.html#YUV_420_888" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="T:Android.Media.Image" />
        <altmember cref="T:Android.Media.ImageReader" />
        <altmember cref="T:Android.Hardware.Camera2.CameraDevice" />
      </Docs>
    </Member>
    <Member MemberName="Yuy2">
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageFormatType Yuy2 = 20;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageFormatType Yuy2 = (20)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("YUY2")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageFormatType</ReturnType>
      </ReturnValue>
      <MemberValue>20</MemberValue>
      <Docs>
        <summary>YCbCr format used for images, which uses YUYV (YUY2) encoding format.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">YCbCr format used for images, which uses YUYV (YUY2) encoding format.

 </para>
          <para tool="javadoc-to-mdoc">For the <c><see cref="N:Android.Hardware.Camera2" /></c> API, the <c><see cref="F:Android.Graphics.ImageFormat.Yuv420888" /></c> format is
 recommended for YUV output instead.</para>
          <para tool="javadoc-to-mdoc">This is an alternative format for <c><see cref="T:Android.Hardware.Camera" /></c> preview images. Whether
 this format is supported by the camera hardware can be determined by
 <c><see cref="!:NoType:android/hardware/Camera$Parameters;Href=../../../reference/android/hardware/Camera.Parameters.html#getSupportedPreviewFormats()" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/ImageFormat.html#YUY2" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="Yv12">
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageFormatType Yv12 = 842094169;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageFormatType Yv12 = (842094169)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("YV12")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageFormatType</ReturnType>
      </ReturnValue>
      <MemberValue>842094169</MemberValue>
      <Docs>
        <summary></summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Android YUV format.</para>
          <para tool="javadoc-to-mdoc">This format is exposed to software decoders and applications.</para>
          <para tool="javadoc-to-mdoc">YV12 is a 4:2:0 YCrCb planar format comprised of a WxH Y plane followed
 by (W/2) x (H/2) Cr and Cb planes.</para>
          <para tool="javadoc-to-mdoc">This format assumes
 <list type="bullet"><item><term>an even width</term></item><item><term>an even height</term></item><item><term>a horizontal stride multiple of 16 pixels</term></item><item><term>a vertical stride equal to the height</term></item></list></para>
          <example>
            <code lang="java"> y_size = stride * height
 c_stride = ALIGN(stride/2, 16)
 c_size = c_stride * height/2
 size = y_size + c_size * 2
 cr_offset = y_size
 cb_offset = y_size + c_size</code>
          </example>
          <para tool="javadoc-to-mdoc">For the <c><see cref="N:Android.Hardware.Camera2" /></c> API, the <c><see cref="F:Android.Graphics.ImageFormat.Yuv420888" /></c> format is
 recommended for YUV output instead.</para>
          <para tool="javadoc-to-mdoc">For the older camera API, this format is guaranteed to be supported for
 <c><see cref="T:Android.Hardware.Camera" /></c> preview images since API level 12; for earlier API versions,
 check <c><see cref="!:NoType:android/hardware/Camera$Parameters;Href=../../../reference/android/hardware/Camera.Parameters.html#getSupportedPreviewFormats()" /></c>.

 </para>
          <para tool="javadoc-to-mdoc">Note that for camera preview callback use (see
 <c><see cref="M:Android.Hardware.Camera.SetPreviewCallback(.IPreviewCallback)" /></c>), the
 <format type="text/html"><var>stride</var></format> value is the smallest possible; that is, it is equal
 to:

 <example><code lang="java">stride = ALIGN(width, 16)</code></example></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/ImageFormat.html#YV12" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <altmember cref="M:Android.Hardware.Camera.SetPreviewCallback(.IPreviewCallback)" />
      </Docs>
    </Member>
  </Members>
</Type>