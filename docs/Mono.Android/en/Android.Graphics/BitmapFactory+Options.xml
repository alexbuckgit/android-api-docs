<Type Name="BitmapFactory+Options" FullName="Android.Graphics.BitmapFactory+Options">
  <TypeSignature Language="C#" Value="public class BitmapFactory.Options : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit BitmapFactory/Options extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/graphics/BitmapFactory$Options", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Options ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Create a default Options object, which if left unchanged will give
 the same result from the decoder as if null were passed.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Options (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="InBitmap">
      <MemberSignature Language="C#" Value="public Android.Graphics.Bitmap InBitmap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Bitmap InBitmap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("inBitmap")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If set, decode methods that take the Options object will attempt to
 reuse this bitmap when loading content.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="InDensity">
      <MemberSignature Language="C#" Value="public int InDensity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InDensity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("inDensity")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The pixel density to use for the bitmap.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 4" />
        <altmember cref="P:Android.Graphics.BitmapFactory.Options.InTargetDensity" />
        <altmember cref="P:Android.Graphics.BitmapFactory.Options.InScreenDensity" />
        <altmember cref="P:Android.Graphics.BitmapFactory.Options.InScaled" />
        <altmember cref="P:Android.Graphics.Bitmap.Density" />
        <altmember cref="P:Android.Util.DisplayMetrics.DensityDpi" />
      </Docs>
    </Member>
    <Member MemberName="InDither">
      <MemberSignature Language="C#" Value="public bool InDither { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InDither" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("inDither")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If dither is true, the decoder will attempt to dither the decoded
 image.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InInputShareable">
      <MemberSignature Language="C#" Value="public bool InInputShareable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InInputShareable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("inInputShareable")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This field works in conjuction with inPurgeable.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="InJustDecodeBounds">
      <MemberSignature Language="C#" Value="public bool InJustDecodeBounds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InJustDecodeBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("inJustDecodeBounds")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If set to true, the decoder will return null (no bitmap), but
 the out... fields will still be set, allowing the caller to query
 the bitmap without having to allocate the memory for its pixels.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InMutable">
      <MemberSignature Language="C#" Value="public bool InMutable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InMutable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("inMutable")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If set, decode methods will always return a mutable Bitmap instead of
 an immutable one.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="InPreferQualityOverSpeed">
      <MemberSignature Language="C#" Value="public bool InPreferQualityOverSpeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InPreferQualityOverSpeed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("inPreferQualityOverSpeed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If inPreferQualityOverSpeed is set to true, the decoder will try to
 decode the reconstructed image to a higher quality even at the
 expense of the decoding speed.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="InPreferredConfig">
      <MemberSignature Language="C#" Value="public Android.Graphics.Bitmap.Config InPreferredConfig { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Bitmap/Config InPreferredConfig" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("inPreferredConfig")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap+Config</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If this is non-null, the decoder will try to decode into this
 internal configuration.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InPremultiplied">
      <MemberSignature Language="C#" Value="public bool InPremultiplied { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InPremultiplied" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("inPremultiplied")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="InPurgeable">
      <MemberSignature Language="C#" Value="public bool InPurgeable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InPurgeable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("inPurgeable")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If this is set to true, then the resulting bitmap will allocate its
 pixels such that they can be purged if the system needs to reclaim
 memory.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="InSampleSize">
      <MemberSignature Language="C#" Value="public int InSampleSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InSampleSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("inSampleSize")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If set to a value &gt; 1, requests the decoder to subsample the original
 image, returning a smaller image to save memory.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InScaled">
      <MemberSignature Language="C#" Value="public bool InScaled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InScaled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("inScaled")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When this flag is set, if <c><see cref="P:Android.Graphics.BitmapFactory.Options.InDensity" /></c> and
 <c><see cref="P:Android.Graphics.BitmapFactory.Options.InTargetDensity" /></c> are not 0, the
 bitmap will be scaled to match <c><see cref="P:Android.Graphics.BitmapFactory.Options.InTargetDensity" /></c> when loaded,
 rather than relying on the graphics system scaling it each time it
 is drawn to a Canvas.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="InScreenDensity">
      <MemberSignature Language="C#" Value="public int InScreenDensity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InScreenDensity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("inScreenDensity")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The pixel density of the actual screen that is being used.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 4" />
        <altmember cref="P:Android.Graphics.BitmapFactory.Options.InDensity" />
        <altmember cref="P:Android.Graphics.BitmapFactory.Options.InTargetDensity" />
        <altmember cref="P:Android.Graphics.BitmapFactory.Options.InScaled" />
        <altmember cref="P:Android.Util.DisplayMetrics.DensityDpi" />
      </Docs>
    </Member>
    <Member MemberName="InTargetDensity">
      <MemberSignature Language="C#" Value="public int InTargetDensity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InTargetDensity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("inTargetDensity")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The pixel density of the destination this bitmap will be drawn to.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 4" />
        <altmember cref="P:Android.Graphics.BitmapFactory.Options.InDensity" />
        <altmember cref="P:Android.Graphics.BitmapFactory.Options.InScreenDensity" />
        <altmember cref="P:Android.Graphics.BitmapFactory.Options.InScaled" />
        <altmember cref="P:Android.Util.DisplayMetrics.DensityDpi" />
      </Docs>
    </Member>
    <Member MemberName="InTempStorage">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;byte&gt; InTempStorage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;unsigned int8&gt; InTempStorage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("inTempStorage")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Temp storage to use for decoding.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MCancel">
      <MemberSignature Language="C#" Value="public bool MCancel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MCancel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("mCancel")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Flag to indicate that cancel has been called on this object.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OutHeight">
      <MemberSignature Language="C#" Value="public int OutHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OutHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("outHeight")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The resulting height of the bitmap, set independent of the state of
 inJustDecodeBounds.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OutMimeType">
      <MemberSignature Language="C#" Value="public string OutMimeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OutMimeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("outMimeType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If known, this string is set to the mimetype of the decoded image.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OutWidth">
      <MemberSignature Language="C#" Value="public int OutWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OutWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("outWidth")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The resulting width of the bitmap, set independent of the state of
 inJustDecodeBounds.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RequestCancelDecode">
      <MemberSignature Language="C#" Value="public virtual void RequestCancelDecode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestCancelDecode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requestCancelDecode", "()V", "GetRequestCancelDecodeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This can be called from another thread while this options object is
  inside a decode... call.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
