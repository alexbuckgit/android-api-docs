<Type Name="Paint" FullName="Android.Graphics.Paint">
  <TypeSignature Language="C#" Value="public class Paint : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Paint extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/graphics/Paint", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>The Paint class holds the style and color information about how to draw
 geometries, text and bitmaps.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">The Paint class holds the style and color information about how to draw
 geometries, text and bitmaps.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/graphics/Paint.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Paint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Create a new paint with default settings.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new paint with default settings.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#Paint()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Paint (Android.Graphics.Paint paint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Graphics.Paint paint) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/graphics/Paint;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="paint" Type="Android.Graphics.Paint" />
      </Parameters>
      <Docs>
        <param name="paint">To be added.</param>
        <summary>Create a new paint, initialized with the attributes in the specified
 paint parameter.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new paint, initialized with the attributes in the specified
 paint parameter.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#Paint(android.graphics.Paint)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Paint (Android.Graphics.PaintFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Android.Graphics.PaintFlags flags) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="flags" Type="Android.Graphics.PaintFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">To be added.</param>
        <summary>Create a new paint with the specified flags.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new paint with the specified flags. Use setFlags() to change
 these after the paint is created.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#Paint(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Paint (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Alpha">
      <MemberSignature Language="C#" Value="public virtual int Alpha { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Alpha" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAlpha", "()I", "GetGetAlphaHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setAlpha", "(I)V", "GetSetAlpha_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Helper to getColor() that just returns the color's alpha value.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#getAlpha()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Helper to getColor() that just returns the color's alpha value. This is
 the same as calling getColor() &gt;&gt;&gt; 24. It always returns a value between
 0 (completely transparent) and 255 (completely opaque).</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#setAlpha(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Helper to setColor(), that only assigns the color's alpha value,
 leaving its r,g,b values unchanged. Results are undefined if the alpha
 value is outside of the range [0..255]</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AntiAlias">
      <MemberSignature Language="C#" Value="public bool AntiAlias { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AntiAlias" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isAntiAlias", "()Z", "GetIsAntiAliasHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setAntiAlias", "(Z)V", "GetSetAntiAlias_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Helper for getFlags(), returning true if ANTI_ALIAS_FLAG bit is set
 AntiAliasing smooths out the edges of what is being drawn, but is has
 no impact on the interior of the shape.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#isAntiAlias()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Helper for getFlags(), returning true if ANTI_ALIAS_FLAG bit is set
 AntiAliasing smooths out the edges of what is being drawn, but is has
 no impact on the interior of the shape. See setDither() and
 setFilterBitmap() to affect how colors are treated.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#setAntiAlias(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Helper for setFlags(), setting or clearing the ANTI_ALIAS_FLAG bit
 AntiAliasing smooths out the edges of what is being drawn, but is has
 no impact on the interior of the shape. See setDither() and
 setFilterBitmap() to affect how colors are treated.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Ascent">
      <MemberSignature Language="C#" Value="public virtual float Ascent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 Ascent() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ascent", "()F", "GetAscentHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return the distance above (negative) the baseline (ascent) based on the
 current typeface and text size.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the distance above (negative) the baseline (ascent) based on the
 current typeface and text size.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#ascent()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BreakText">
      <MemberSignature Language="C#" Value="public virtual int BreakText (string text, bool measureForwards, float maxWidth, float[] measuredWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 BreakText(string text, bool measureForwards, float32 maxWidth, float32[] measuredWidth) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("breakText", "(Ljava/lang/String;ZF[F)I", "GetBreakText_Ljava_lang_String_ZFarrayFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="measureForwards" Type="System.Boolean" />
        <Parameter Name="maxWidth" Type="System.Single" />
        <Parameter Name="measuredWidth" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="text">The text to measure. Cannot be null.</param>
        <param name="measureForwards">If true, measure forwards, starting with the
                        first character in the string. Otherwise,
                        measure backwards, starting with the
                        last character in the string.</param>
        <param name="maxWidth">The maximum width to accumulate.</param>
        <param name="measuredWidth">Optional. If not null, returns the actual width
                     measured.</param>
        <summary>Measure the text, stopping early if the measured width exceeds maxWidth.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Measure the text, stopping early if the measured width exceeds maxWidth.
 Return the number of chars that were measured, and if measuredWidth is
 not null, return in it the actual width measured.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#breakText(java.lang.String, boolean, float, float[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BreakText">
      <MemberSignature Language="C#" Value="public virtual int BreakText (char[] text, int index, int count, float maxWidth, float[] measuredWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 BreakText(char[] text, int32 index, int32 count, float32 maxWidth, float32[] measuredWidth) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("breakText", "([CIIF[F)I", "GetBreakText_arrayCIIFarrayFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="maxWidth" Type="System.Single" />
        <Parameter Name="measuredWidth" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="text">The text to measure. Cannot be null.</param>
        <param name="index">The offset into text to begin measuring at</param>
        <param name="count">The number of maximum number of entries to measure. If count
              is negative, then the characters are measured in reverse order.</param>
        <param name="maxWidth">The maximum width to accumulate.</param>
        <param name="measuredWidth">Optional. If not null, returns the actual width
                     measured.</param>
        <summary>Measure the text, stopping early if the measured width exceeds maxWidth.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Measure the text, stopping early if the measured width exceeds maxWidth.
 Return the number of chars that were measured, and if measuredWidth is
 not null, return in it the actual width measured.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#breakText(char[], int, int, float, float[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BreakText">
      <MemberSignature Language="C#" Value="public virtual int BreakText (Java.Lang.ICharSequence text, int start, int end, bool measureForwards, float maxWidth, float[] measuredWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 BreakText(class Java.Lang.ICharSequence text, int32 start, int32 end, bool measureForwards, float32 maxWidth, float32[] measuredWidth) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("breakText", "(Ljava/lang/CharSequence;IIZF[F)I", "GetBreakText_Ljava_lang_CharSequence_IIZFarrayFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="measureForwards" Type="System.Boolean" />
        <Parameter Name="maxWidth" Type="System.Single" />
        <Parameter Name="measuredWidth" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="text">The text to measure. Cannot be null.</param>
        <param name="start">The offset into text to begin measuring at</param>
        <param name="end">The end of the text slice to measure.</param>
        <param name="measureForwards">If true, measure forwards, starting at start.
                        Otherwise, measure backwards, starting with end.</param>
        <param name="maxWidth">The maximum width to accumulate.</param>
        <param name="measuredWidth">Optional. If not null, returns the actual width
                     measured.</param>
        <summary>Measure the text, stopping early if the measured width exceeds maxWidth.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Measure the text, stopping early if the measured width exceeds maxWidth.
 Return the number of chars that were measured, and if measuredWidth is
 not null, return in it the actual width measured.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#breakText(java.lang.CharSequence, int, int, boolean, float, float[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BreakText">
      <MemberSignature Language="C#" Value="public int BreakText (string text, int start, int end, bool measureForwards, float maxWidth, float[] measuredWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 BreakText(string text, int32 start, int32 end, bool measureForwards, float32 maxWidth, float32[] measuredWidth) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="measureForwards" Type="System.Boolean" />
        <Parameter Name="maxWidth" Type="System.Single" />
        <Parameter Name="measuredWidth" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <param name="measureForwards">To be added.</param>
        <param name="maxWidth">To be added.</param>
        <param name="measuredWidth">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearShadowLayer">
      <MemberSignature Language="C#" Value="public virtual void ClearShadowLayer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearShadowLayer() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearShadowLayer", "()V", "GetClearShadowLayerHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clear the shadow layer.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Clear the shadow layer.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#clearShadowLayer()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Color">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Color Color { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Graphics.Color Color" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getColor", "()I", "GetGetColorHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setColor", "(I)V", "GetSetColor_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the paint's color.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#getColor()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Return the paint's color. Note that the color is a 32bit value
 containing alpha as well as r,g,b. This 32bit value is not premultiplied,
 meaning that its alpha can be any value, regardless of the values of
 r,g,b. See the Color class for more details.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#setColor(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the paint's color. Note that the color is an int containing alpha
 as well as r,g,b. This 32bit value is not premultiplied, meaning that
 its alpha can be any value, regardless of the values of r,g,b.
 See the Color class for more details.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ColorFilter">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.ColorFilter ColorFilter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.ColorFilter ColorFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getColorFilter", "()Landroid/graphics/ColorFilter;", "GetGetColorFilterHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ColorFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the paint's colorfilter (maybe be null).</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the paint's colorfilter (maybe be null).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#getColorFilter()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Descent">
      <MemberSignature Language="C#" Value="public virtual float Descent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 Descent() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("descent", "()F", "GetDescentHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return the distance below (positive) the baseline (descent) based on the
 current typeface and text size.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the distance below (positive) the baseline (descent) based on the
 current typeface and text size.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#descent()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Dither">
      <MemberSignature Language="C#" Value="public bool Dither { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dither" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isDither", "()Z", "GetIsDitherHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setDither", "(Z)V", "GetSetDither_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Helper for getFlags(), returning true if DITHER_FLAG bit is set
 Dithering affects how colors that are higher precision than the device
 are down-sampled.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#isDither()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Helper for getFlags(), returning true if DITHER_FLAG bit is set
 Dithering affects how colors that are higher precision than the device
 are down-sampled. No dithering is generally faster, but higher precision
 colors are just truncated down (e.g. 8888 -&gt; 565). Dithering tries to
 distribute the error inherent in this process, to reduce the visual
 artifacts.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#setDither(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Helper for setFlags(), setting or clearing the DITHER_FLAG bit
 Dithering affects how colors that are higher precision than the device
 are down-sampled. No dithering is generally faster, but higher precision
 colors are just truncated down (e.g. 8888 -&gt; 565). Dithering tries to
 distribute the error inherent in this process, to reduce the visual
 artifacts.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ElegantTextHeight">
      <MemberSignature Language="C#" Value="public virtual bool ElegantTextHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ElegantTextHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isElegantTextHeight", "()Z", "GetIsElegantTextHeightHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setElegantTextHeight", "(Z)V", "GetSetElegantTextHeight_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FakeBoldText">
      <MemberSignature Language="C#" Value="public bool FakeBoldText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FakeBoldText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isFakeBoldText", "()Z", "GetIsFakeBoldTextHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setFakeBoldText", "(Z)V", "GetSetFakeBoldText_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Helper for getFlags(), returning true if FAKE_BOLD_TEXT_FLAG bit is set</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#isFakeBoldText()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Helper for getFlags(), returning true if FAKE_BOLD_TEXT_FLAG bit is set</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#setFakeBoldText(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Helper for setFlags(), setting or clearing the FAKE_BOLD_TEXT_FLAG bit</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FilterBitmap">
      <MemberSignature Language="C#" Value="public bool FilterBitmap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FilterBitmap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isFilterBitmap", "()Z", "GetIsFilterBitmapHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setFilterBitmap", "(Z)V", "GetSetFilterBitmap_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether or not the bitmap filter is activated.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#isFilterBitmap()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Whether or not the bitmap filter is activated.
 Filtering affects the sampling of bitmaps when they are transformed.
 Filtering does not affect how the colors in the bitmap are converted into
 device pixels. That is dependent on dithering and xfermodes.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#setFilterBitmap(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Helper for setFlags(), setting or clearing the FILTER_BITMAP_FLAG bit.
 Filtering affects the sampling of bitmaps when they are transformed.
 Filtering does not affect how the colors in the bitmap are converted into
 device pixels. That is dependent on dithering and xfermodes.</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Graphics.Paint.FilterBitmap" />
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.PaintFlags Flags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Graphics.PaintFlags Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFlags", "()I", "GetGetFlagsHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setFlags", "(I)V", "GetSetFlags_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.PaintFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the paint's flags.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#getFlags()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Return the paint's flags. Use the Flag enum to test flag values.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#setFlags(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the paint's flags. Use the Flag enum to specific flag values.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FontFeatureSettings">
      <MemberSignature Language="C#" Value="public virtual string FontFeatureSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FontFeatureSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFontFeatureSettings", "()Ljava/lang/String;", "GetGetFontFeatureSettingsHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setFontFeatureSettings", "(Ljava/lang/String;)V", "GetSetFontFeatureSettings_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontSpacing">
      <MemberSignature Language="C#" Value="public virtual float FontSpacing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 FontSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFontSpacing", "()F", "GetGetFontSpacingHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the recommend line spacing based on the current typeface and
 text size.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the recommend line spacing based on the current typeface and
 text size.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#getFontSpacing()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetFillPath">
      <MemberSignature Language="C#" Value="public virtual bool GetFillPath (Android.Graphics.Path src, Android.Graphics.Path dst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetFillPath(class Android.Graphics.Path src, class Android.Graphics.Path dst) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getFillPath", "(Landroid/graphics/Path;Landroid/graphics/Path;)Z", "GetGetFillPath_Landroid_graphics_Path_Landroid_graphics_Path_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Android.Graphics.Path" />
        <Parameter Name="dst" Type="Android.Graphics.Path" />
      </Parameters>
      <Docs>
        <param name="src">input path</param>
        <param name="dst">output path (may be the same as src)</param>
        <summary>Applies any/all effects (patheffect, stroking) to src, returning the
 result in dst.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Applies any/all effects (patheffect, stroking) to src, returning the
 result in dst. The result is that drawing src with this paint will be
 the same as drawing dst with a default paint (at least from the
 geometric perspective).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#getFillPath(android.graphics.Path, android.graphics.Path)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetFontMetrics">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Paint.FontMetrics GetFontMetrics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Paint/FontMetrics GetFontMetrics() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getFontMetrics", "()Landroid/graphics/Paint$FontMetrics;", "GetGetFontMetricsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Paint+FontMetrics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Allocates a new FontMetrics object, and then calls getFontMetrics(fm)
 with it, returning the object.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Allocates a new FontMetrics object, and then calls getFontMetrics(fm)
 with it, returning the object.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#getFontMetrics()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetFontMetrics">
      <MemberSignature Language="C#" Value="public virtual float GetFontMetrics (Android.Graphics.Paint.FontMetrics metrics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetFontMetrics(class Android.Graphics.Paint/FontMetrics metrics) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getFontMetrics", "(Landroid/graphics/Paint$FontMetrics;)F", "GetGetFontMetrics_Landroid_graphics_Paint_FontMetrics_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metrics" Type="Android.Graphics.Paint+FontMetrics" />
      </Parameters>
      <Docs>
        <param name="metrics">If this object is not null, its fields are filled with
                the appropriate values given the paint's text attributes.</param>
        <summary>Return the font's recommended interline spacing, given the Paint's
 settings for typeface, textSize, etc.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the font's recommended interline spacing, given the Paint's
 settings for typeface, textSize, etc. If metrics is not null, return the
 fontmetric values in it.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#getFontMetrics(android.graphics.Paint.FontMetrics)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetFontMetricsInt">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Paint.FontMetricsInt GetFontMetricsInt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Paint/FontMetricsInt GetFontMetricsInt() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getFontMetricsInt", "()Landroid/graphics/Paint$FontMetricsInt;", "GetGetFontMetricsIntHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Paint+FontMetricsInt</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#getFontMetricsInt()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetFontMetricsInt">
      <MemberSignature Language="C#" Value="public virtual int GetFontMetricsInt (Android.Graphics.Paint.FontMetricsInt fmi);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetFontMetricsInt(class Android.Graphics.Paint/FontMetricsInt fmi) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getFontMetricsInt", "(Landroid/graphics/Paint$FontMetricsInt;)I", "GetGetFontMetricsInt_Landroid_graphics_Paint_FontMetricsInt_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fmi" Type="Android.Graphics.Paint+FontMetricsInt" />
      </Parameters>
      <Docs>
        <param name="fmi">To be added.</param>
        <summary>Return the font's interline spacing, given the Paint's settings for
 typeface, textSize, etc.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the font's interline spacing, given the Paint's settings for
 typeface, textSize, etc. If metrics is not null, return the fontmetric
 values in it. Note: all values have been converted to integers from
 floats, in such a way has to make the answers useful for both spacing
 and clipping. If you want more control over the rounding, call
 getFontMetrics().</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#getFontMetricsInt(android.graphics.Paint.FontMetricsInt)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetStyle">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Paint.Style GetStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Paint/Style GetStyle() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getStyle", "()Landroid/graphics/Paint$Style;", "GetGetStyleHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Paint+Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return the paint's style, used for controlling how primitives'
 geometries are interpreted (except for drawBitmap, which always assumes
 FILL_STYLE).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the paint's style, used for controlling how primitives'
 geometries are interpreted (except for drawBitmap, which always assumes
 FILL_STYLE).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#getStyle()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetTextBounds">
      <MemberSignature Language="C#" Value="public virtual void GetTextBounds (char[] text, int index, int count, Android.Graphics.Rect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTextBounds(char[] text, int32 index, int32 count, class Android.Graphics.Rect bounds) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getTextBounds", "([CIILandroid/graphics/Rect;)V", "GetGetTextBounds_arrayCIILandroid_graphics_Rect_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="bounds" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="text">Array of chars to measure and return their unioned bounds</param>
        <param name="index">Index of the first char in the array to measure</param>
        <param name="count">The number of chars, beginning at index, to measure</param>
        <param name="bounds">Returns the unioned bounds of all the text. Must be
               allocated by the caller.
</param>
        <summary>Return in bounds (allocated by the caller) the smallest rectangle that
 encloses all of the characters, with an implied origin at (0,0).</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Return in bounds (allocated by the caller) the smallest rectangle that
 encloses all of the characters, with an implied origin at (0,0).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#getTextBounds(char[], int, int, android.graphics.Rect)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetTextBounds">
      <MemberSignature Language="C#" Value="public virtual void GetTextBounds (string text, int start, int end, Android.Graphics.Rect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTextBounds(string text, int32 start, int32 end, class Android.Graphics.Rect bounds) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getTextBounds", "(Ljava/lang/String;IILandroid/graphics/Rect;)V", "GetGetTextBounds_Ljava_lang_String_IILandroid_graphics_Rect_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="bounds" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="text">String to measure and return its bounds</param>
        <param name="start">Index of the first char in the string to measure</param>
        <param name="end">1 past the last char in the string measure</param>
        <param name="bounds">Returns the unioned bounds of all the text. Must be
               allocated by the caller.
</param>
        <summary>Return in bounds (allocated by the caller) the smallest rectangle that
 encloses all of the characters, with an implied origin at (0,0).</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Return in bounds (allocated by the caller) the smallest rectangle that
 encloses all of the characters, with an implied origin at (0,0).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#getTextBounds(java.lang.String, int, int, android.graphics.Rect)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetTextPath">
      <MemberSignature Language="C#" Value="public virtual void GetTextPath (char[] text, int index, int count, float x, float y, Android.Graphics.Path path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTextPath(char[] text, int32 index, int32 count, float32 x, float32 y, class Android.Graphics.Path path) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getTextPath", "([CIIFFLandroid/graphics/Path;)V", "GetGetTextPath_arrayCIIFFLandroid_graphics_Path_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="path" Type="Android.Graphics.Path" />
      </Parameters>
      <Docs>
        <param name="text">The text to retrieve the path from</param>
        <param name="index">The index of the first character in text</param>
        <param name="count">The number of characterss starting with index</param>
        <param name="x">The x coordinate of the text's origin</param>
        <param name="y">The y coordinate of the text's origin</param>
        <param name="path">The path to receive the data describing the text. Must
                 be allocated by the caller.
</param>
        <summary>Return the path (outline) for the specified text.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the path (outline) for the specified text.
 Note: just like Canvas.drawText, this will respect the Align setting in
 the paint.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#getTextPath(char[], int, int, float, float, android.graphics.Path)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetTextPath">
      <MemberSignature Language="C#" Value="public virtual void GetTextPath (string text, int start, int end, float x, float y, Android.Graphics.Path path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTextPath(string text, int32 start, int32 end, float32 x, float32 y, class Android.Graphics.Path path) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getTextPath", "(Ljava/lang/String;IIFFLandroid/graphics/Path;)V", "GetGetTextPath_Ljava_lang_String_IIFFLandroid_graphics_Path_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="path" Type="Android.Graphics.Path" />
      </Parameters>
      <Docs>
        <param name="text">The text to retrieve the path from</param>
        <param name="start">The first character in the text</param>
        <param name="end">1 past the last charcter in the text</param>
        <param name="x">The x coordinate of the text's origin</param>
        <param name="y">The y coordinate of the text's origin</param>
        <param name="path">The path to receive the data describing the text. Must
              be allocated by the caller.
</param>
        <summary>Return the path (outline) for the specified text.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the path (outline) for the specified text.
 Note: just like Canvas.drawText, this will respect the Align setting
 in the paint.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#getTextPath(java.lang.String, int, int, float, float, android.graphics.Path)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetTextWidths">
      <MemberSignature Language="C#" Value="public virtual int GetTextWidths (string text, float[] widths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetTextWidths(string text, float32[] widths) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getTextWidths", "(Ljava/lang/String;[F)I", "GetGetTextWidths_Ljava_lang_String_arrayFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="widths" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="text">The text to measure</param>
        <param name="widths">array to receive the advance widths of the characters.
               Must be at least a large as the text.</param>
        <summary>Return the advance widths for the characters in the string.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the advance widths for the characters in the string.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#getTextWidths(java.lang.String, float[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetTextWidths">
      <MemberSignature Language="C#" Value="public virtual int GetTextWidths (Java.Lang.ICharSequence text, int start, int end, float[] widths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetTextWidths(class Java.Lang.ICharSequence text, int32 start, int32 end, float32[] widths) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getTextWidths", "(Ljava/lang/CharSequence;II[F)I", "GetGetTextWidths_Ljava_lang_CharSequence_IIarrayFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="widths" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="text">The text to measure. Cannot be null.</param>
        <param name="start">The index of the first char to to measure</param>
        <param name="end">The end of the text slice to measure</param>
        <param name="widths">array to receive the advance widths of the characters.
                 Must be at least a large as (end - start).</param>
        <summary>Return the advance widths for the characters in the string.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the advance widths for the characters in the string.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#getTextWidths(java.lang.CharSequence, int, int, float[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetTextWidths">
      <MemberSignature Language="C#" Value="public virtual int GetTextWidths (char[] text, int index, int count, float[] widths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetTextWidths(char[] text, int32 index, int32 count, float32[] widths) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getTextWidths", "([CII[F)I", "GetGetTextWidths_arrayCIIarrayFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="widths" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="text">The text to measure. Cannot be null.</param>
        <param name="index">The index of the first char to to measure</param>
        <param name="count">The number of chars starting with index to measure</param>
        <param name="widths">array to receive the advance widths of the characters.
                 Must be at least a large as count.</param>
        <summary>Return the advance widths for the characters in the string.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the advance widths for the characters in the string.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#getTextWidths(char[], int, int, float[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetTextWidths">
      <MemberSignature Language="C#" Value="public virtual int GetTextWidths (string text, int start, int end, float[] widths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetTextWidths(string text, int32 start, int32 end, float32[] widths) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getTextWidths", "(Ljava/lang/String;II[F)I", "GetGetTextWidths_Ljava_lang_String_IIarrayFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="widths" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="text">The text to measure. Cannot be null.</param>
        <param name="start">The index of the first char to to measure</param>
        <param name="end">The end of the text slice to measure</param>
        <param name="widths">array to receive the advance widths of the characters.
               Must be at least a large as the text.</param>
        <summary>Return the advance widths for the characters in the string.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the advance widths for the characters in the string.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#getTextWidths(java.lang.String, int, int, float[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Hinting">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.PaintHinting Hinting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Graphics.PaintHinting Hinting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getHinting", "()I", "GetGetHintingHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setHinting", "(I)V", "GetSetHinting_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.PaintHinting</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the paint's hinting mode.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#getHinting()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Return the paint's hinting mode.  Returns either
 <c><see cref="F:Android.Graphics.Paint.HintingOff" /></c> or <c><see cref="F:Android.Graphics.Paint.HintingOn" /></c>.
</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#setHinting(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the paint's hinting mode.  May be either
 <c><see cref="F:Android.Graphics.Paint.HintingOff" /></c> or <c><see cref="F:Android.Graphics.Paint.HintingOn" /></c>.
</para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="HintingOff">
      <MemberSignature Language="C#" Value="public const Android.Graphics.PaintHinting HintingOff = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.PaintHinting HintingOff = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("HINTING_OFF")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.PaintHinting enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.PaintHinting</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Font hinter option that disables font hinting.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Font hinter option that disables font hinting.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#HINTING_OFF" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="P:Android.Graphics.Paint.Hinting" />
      </Docs>
    </Member>
    <Member MemberName="HintingOn">
      <MemberSignature Language="C#" Value="public const Android.Graphics.PaintHinting HintingOn = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.PaintHinting HintingOn = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("HINTING_ON")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.PaintHinting enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.PaintHinting</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Font hinter option that enables font hinting.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Font hinter option that enables font hinting.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#HINTING_ON" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="P:Android.Graphics.Paint.Hinting" />
      </Docs>
    </Member>
    <Member MemberName="LetterSpacing">
      <MemberSignature Language="C#" Value="public virtual float LetterSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 LetterSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLetterSpacing", "()F", "GetGetLetterSpacingHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setLetterSpacing", "(F)V", "GetSetLetterSpacing_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinearText">
      <MemberSignature Language="C#" Value="public bool LinearText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LinearText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isLinearText", "()Z", "GetIsLinearTextHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setLinearText", "(Z)V", "GetSetLinearText_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Helper for getFlags(), returning true if LINEAR_TEXT_FLAG bit is set</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#isLinearText()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Helper for getFlags(), returning true if LINEAR_TEXT_FLAG bit is set</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#setLinearText(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Helper for setFlags(), setting or clearing the LINEAR_TEXT_FLAG bit</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MaskFilter">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.MaskFilter MaskFilter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.MaskFilter MaskFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMaskFilter", "()Landroid/graphics/MaskFilter;", "GetGetMaskFilterHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.MaskFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the paint's maskfilter object.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the paint's maskfilter object.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#getMaskFilter()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public virtual float MeasureText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 MeasureText(string text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("measureText", "(Ljava/lang/String;)F", "GetMeasureText_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">The text to measure. Cannot be null.</param>
        <summary>Return the width of the text.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the width of the text.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#measureText(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public virtual float MeasureText (Java.Lang.ICharSequence text, int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 MeasureText(class Java.Lang.ICharSequence text, int32 start, int32 end) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("measureText", "(Ljava/lang/CharSequence;II)F", "GetMeasureText_Ljava_lang_CharSequence_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">The text to measure</param>
        <param name="start">The index of the first character to start measuring</param>
        <param name="end">1 beyond the index of the last character to measure</param>
        <summary>Return the width of the text.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the width of the text.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#measureText(java.lang.CharSequence, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public virtual float MeasureText (char[] text, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 MeasureText(char[] text, int32 index, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("measureText", "([CII)F", "GetMeasureText_arrayCIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">The text to measure. Cannot be null.</param>
        <param name="index">The index of the first character to start measuring</param>
        <param name="count">THe number of characters to measure, beginning with start</param>
        <summary>Return the width of the text.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the width of the text.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#measureText(char[], int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public virtual float MeasureText (string text, int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 MeasureText(string text, int32 start, int32 end) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("measureText", "(Ljava/lang/String;II)F", "GetMeasureText_Ljava_lang_String_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">The text to measure. Cannot be null.</param>
        <param name="start">The index of the first character to start measuring</param>
        <param name="end">1 beyond the index of the last character to measure</param>
        <summary>Return the width of the text.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the width of the text.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#measureText(java.lang.String, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PathEffect">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.PathEffect PathEffect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.PathEffect PathEffect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPathEffect", "()Landroid/graphics/PathEffect;", "GetGetPathEffectHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.PathEffect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the paint's patheffect object.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the paint's patheffect object.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#getPathEffect()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Rasterizer">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Rasterizer Rasterizer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Rasterizer Rasterizer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getRasterizer", "()Landroid/graphics/Rasterizer;", "GetGetRasterizerHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Rasterizer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the paint's rasterizer (or null).</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the paint's rasterizer (or null).
 </para>
          <para tool="javadoc-to-mdoc">
 The raster controls/modifies how paths/text are turned into alpha masks.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#getRasterizer()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("reset", "()V", "GetResetHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restores the paint to its default settings.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Restores the paint to its default settings. </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#reset()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public virtual void Set (Android.Graphics.Paint src);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(class Android.Graphics.Paint src) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("set", "(Landroid/graphics/Paint;)V", "GetSet_Landroid_graphics_Paint_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Android.Graphics.Paint" />
      </Parameters>
      <Docs>
        <param name="src">To be added.</param>
        <summary>Copy the fields from src into this paint.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy the fields from src into this paint. This is equivalent to calling
 get() on all of the src fields, and calling the corresponding set()
 methods on this.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#set(android.graphics.Paint)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetARGB">
      <MemberSignature Language="C#" Value="public virtual void SetARGB (int a, int r, int g, int b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetARGB(int32 a, int32 r, int32 g, int32 b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setARGB", "(IIII)V", "GetSetARGB_IIIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" />
        <Parameter Name="r" Type="System.Int32" />
        <Parameter Name="g" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">The new alpha component (0..255) of the paint's color.</param>
        <param name="r">The new red component (0..255) of the paint's color.</param>
        <param name="g">The new green component (0..255) of the paint's color.</param>
        <param name="b">The new blue component (0..255) of the paint's color.
</param>
        <summary>Helper to setColor(), that takes a,r,g,b and constructs the color int</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Helper to setColor(), that takes a,r,g,b and constructs the color int</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#setARGB(int, int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetColorFilter">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.ColorFilter SetColorFilter (Android.Graphics.ColorFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.ColorFilter SetColorFilter(class Android.Graphics.ColorFilter filter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setColorFilter", "(Landroid/graphics/ColorFilter;)Landroid/graphics/ColorFilter;", "GetSetColorFilter_Landroid_graphics_ColorFilter_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ColorFilter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="Android.Graphics.ColorFilter" />
      </Parameters>
      <Docs>
        <param name="filter">May be null. The new filter to be installed in the paint</param>
        <summary>Set or clear the paint's colorfilter, returning the parameter.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Set or clear the paint's colorfilter, returning the parameter.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#setColorFilter(android.graphics.ColorFilter)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetMaskFilter">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.MaskFilter SetMaskFilter (Android.Graphics.MaskFilter maskfilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.MaskFilter SetMaskFilter(class Android.Graphics.MaskFilter maskfilter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setMaskFilter", "(Landroid/graphics/MaskFilter;)Landroid/graphics/MaskFilter;", "GetSetMaskFilter_Landroid_graphics_MaskFilter_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.MaskFilter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maskfilter" Type="Android.Graphics.MaskFilter" />
      </Parameters>
      <Docs>
        <param name="maskfilter">May be null. The maskfilter to be installed in the
                   paint</param>
        <summary>Set or clear the maskfilter object.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Set or clear the maskfilter object.
 </para>
          <para tool="javadoc-to-mdoc">
 Pass null to clear any previous maskfilter.
 As a convenience, the parameter passed is also returned.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#setMaskFilter(android.graphics.MaskFilter)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetPathEffect">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.PathEffect SetPathEffect (Android.Graphics.PathEffect effect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.PathEffect SetPathEffect(class Android.Graphics.PathEffect effect) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPathEffect", "(Landroid/graphics/PathEffect;)Landroid/graphics/PathEffect;", "GetSetPathEffect_Landroid_graphics_PathEffect_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.PathEffect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="effect" Type="Android.Graphics.PathEffect" />
      </Parameters>
      <Docs>
        <param name="effect">May be null. The patheffect to be installed in the paint</param>
        <summary>Set or clear the patheffect object.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Set or clear the patheffect object.
 </para>
          <para tool="javadoc-to-mdoc">
 Pass null to clear any previous patheffect.
 As a convenience, the parameter passed is also returned.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#setPathEffect(android.graphics.PathEffect)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetRasterizer">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Rasterizer SetRasterizer (Android.Graphics.Rasterizer rasterizer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Rasterizer SetRasterizer(class Android.Graphics.Rasterizer rasterizer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setRasterizer", "(Landroid/graphics/Rasterizer;)Landroid/graphics/Rasterizer;", "GetSetRasterizer_Landroid_graphics_Rasterizer_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Rasterizer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rasterizer" Type="Android.Graphics.Rasterizer" />
      </Parameters>
      <Docs>
        <param name="rasterizer">May be null. The new rasterizer to be installed in
                   the paint.</param>
        <summary>Set or clear the rasterizer object.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Set or clear the rasterizer object.
 </para>
          <para tool="javadoc-to-mdoc">
 Pass null to clear any previous rasterizer.
 As a convenience, the parameter passed is also returned.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#setRasterizer(android.graphics.Rasterizer)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetShader">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Shader SetShader (Android.Graphics.Shader shader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Shader SetShader(class Android.Graphics.Shader shader) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setShader", "(Landroid/graphics/Shader;)Landroid/graphics/Shader;", "GetSetShader_Landroid_graphics_Shader_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Shader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shader" Type="Android.Graphics.Shader" />
      </Parameters>
      <Docs>
        <param name="shader">May be null. the new shader to be installed in the paint</param>
        <summary>Set or clear the shader object.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Set or clear the shader object.
 </para>
          <para tool="javadoc-to-mdoc">
 Pass null to clear any previous shader.
 As a convenience, the parameter passed is also returned.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#setShader(android.graphics.Shader)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetShadowLayer">
      <MemberSignature Language="C#" Value="public virtual void SetShadowLayer (float radius, float dx, float dy, Android.Graphics.Color shadowColor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetShadowLayer(float32 radius, float32 dx, float32 dy, valuetype Android.Graphics.Color shadowColor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setShadowLayer", "(FFFI)V", "GetSetShadowLayer_FFFIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="radius" Type="System.Single" />
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
        <Parameter Name="color" Type="Android.Graphics.Color" />
      </Parameters>
      <Docs>
        <param name="radius">To be added.</param>
        <param name="dx">To be added.</param>
        <param name="dy">To be added.</param>
        <param name="shadowColor">To be added.</param>
        <summary>This draws a shadow layer below the main layer, with the specified
 offset and color, and blur radius.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This draws a shadow layer below the main layer, with the specified
 offset and color, and blur radius. If radius is 0, then the shadow
 layer is removed.
 </para>
          <para tool="javadoc-to-mdoc">
 Can be used to create a blurred shadow underneath text. Support for use
 with other drawing operations is constrained to the software rendering
 pipeline.
 </para>
          <para tool="javadoc-to-mdoc">
 The alpha of the shadow will be the paint's alpha if the shadow color is
 opaque, or the alpha from the shadow color if not.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#setShadowLayer(float, float, float, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetStyle">
      <MemberSignature Language="C#" Value="public virtual void SetStyle (Android.Graphics.Paint.Style style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetStyle(class Android.Graphics.Paint/Style style) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setStyle", "(Landroid/graphics/Paint$Style;)V", "GetSetStyle_Landroid_graphics_Paint_Style_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="Android.Graphics.Paint+Style" />
      </Parameters>
      <Docs>
        <param name="style">The new style to set in the paint
</param>
        <summary>Set the paint's style, used for controlling how primitives'
 geometries are interpreted (except for drawBitmap, which always assumes
 Fill).</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the paint's style, used for controlling how primitives'
 geometries are interpreted (except for drawBitmap, which always assumes
 Fill).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#setStyle(android.graphics.Paint.Style)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetTypeface">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Typeface SetTypeface (Android.Graphics.Typeface typeface);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Typeface SetTypeface(class Android.Graphics.Typeface typeface) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTypeface", "(Landroid/graphics/Typeface;)Landroid/graphics/Typeface;", "GetSetTypeface_Landroid_graphics_Typeface_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Typeface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeface" Type="Android.Graphics.Typeface" />
      </Parameters>
      <Docs>
        <param name="typeface">May be null. The typeface to be installed in the paint</param>
        <summary>Set or clear the typeface object.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Set or clear the typeface object.
 </para>
          <para tool="javadoc-to-mdoc">
 Pass null to clear any previous typeface.
 As a convenience, the parameter passed is also returned.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#setTypeface(android.graphics.Typeface)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetXfermode">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Xfermode SetXfermode (Android.Graphics.Xfermode xfermode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Xfermode SetXfermode(class Android.Graphics.Xfermode xfermode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setXfermode", "(Landroid/graphics/Xfermode;)Landroid/graphics/Xfermode;", "GetSetXfermode_Landroid_graphics_Xfermode_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Xfermode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xfermode" Type="Android.Graphics.Xfermode" />
      </Parameters>
      <Docs>
        <param name="xfermode">May be null. The xfermode to be installed in the paint</param>
        <summary>Set or clear the xfermode object.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Set or clear the xfermode object.
 </para>
          <para tool="javadoc-to-mdoc">
 Pass null to clear any previous xfermode.
 As a convenience, the parameter passed is also returned.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#setXfermode(android.graphics.Xfermode)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Shader">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Shader Shader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Shader Shader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getShader", "()Landroid/graphics/Shader;", "GetGetShaderHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Shader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the paint's shader object.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the paint's shader object.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#getShader()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StrikeThruText">
      <MemberSignature Language="C#" Value="public bool StrikeThruText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StrikeThruText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isStrikeThruText", "()Z", "GetIsStrikeThruTextHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setStrikeThruText", "(Z)V", "GetSetStrikeThruText_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Helper for getFlags(), returning true if STRIKE_THRU_TEXT_FLAG bit is set</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#isStrikeThruText()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Helper for getFlags(), returning true if STRIKE_THRU_TEXT_FLAG bit is set</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#setStrikeThruText(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Helper for setFlags(), setting or clearing the STRIKE_THRU_TEXT_FLAG bit</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StrokeCap">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Paint.Cap StrokeCap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Paint/Cap StrokeCap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getStrokeCap", "()Landroid/graphics/Paint$Cap;", "GetGetStrokeCapHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setStrokeCap", "(Landroid/graphics/Paint$Cap;)V", "GetSetStrokeCap_Landroid_graphics_Paint_Cap_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Paint+Cap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the paint's Cap, controlling how the start and end of stroked
 lines and paths are treated.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#getStrokeCap()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Return the paint's Cap, controlling how the start and end of stroked
 lines and paths are treated.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#setStrokeCap(android.graphics.Paint.Cap)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the paint's Cap.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StrokeJoin">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Paint.Join StrokeJoin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Paint/Join StrokeJoin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getStrokeJoin", "()Landroid/graphics/Paint$Join;", "GetGetStrokeJoinHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setStrokeJoin", "(Landroid/graphics/Paint$Join;)V", "GetSetStrokeJoin_Landroid_graphics_Paint_Join_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Paint+Join</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the paint's stroke join type.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#getStrokeJoin()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Return the paint's stroke join type.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#setStrokeJoin(android.graphics.Paint.Join)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the paint's Join.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StrokeMiter">
      <MemberSignature Language="C#" Value="public virtual float StrokeMiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 StrokeMiter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getStrokeMiter", "()F", "GetGetStrokeMiterHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setStrokeMiter", "(F)V", "GetSetStrokeMiter_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the paint's stroke miter value.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#getStrokeMiter()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Return the paint's stroke miter value. Used to control the behavior
 of miter joins when the joins angle is sharp.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#setStrokeMiter(float)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the paint's stroke miter value. This is used to control the behavior
 of miter joins when the joins angle is sharp. This value must be &gt;= 0.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StrokeWidth">
      <MemberSignature Language="C#" Value="public virtual float StrokeWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 StrokeWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getStrokeWidth", "()F", "GetGetStrokeWidthHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setStrokeWidth", "(F)V", "GetSetStrokeWidth_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the width for stroking.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#getStrokeWidth()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Return the width for stroking.
 
 A value of 0 strokes in hairline mode.
 Hairlines always draws a single pixel independent of the canva's matrix.</para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#setStrokeWidth(float)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the width for stroking.
 Pass 0 to stroke in hairline mode.
 Hairlines always draws a single pixel independent of the canva's matrix.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SubpixelText">
      <MemberSignature Language="C#" Value="public bool SubpixelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SubpixelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isSubpixelText", "()Z", "GetIsSubpixelTextHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSubpixelText", "(Z)V", "GetSetSubpixelText_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Helper for getFlags(), returning true if SUBPIXEL_TEXT_FLAG bit is set</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#isSubpixelText()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Helper for getFlags(), returning true if SUBPIXEL_TEXT_FLAG bit is set</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#setSubpixelText(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Helper for setFlags(), setting or clearing the SUBPIXEL_TEXT_FLAG bit</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TextAlign">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Paint.Align TextAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Paint/Align TextAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTextAlign", "()Landroid/graphics/Paint$Align;", "GetGetTextAlignHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTextAlign", "(Landroid/graphics/Paint$Align;)V", "GetSetTextAlign_Landroid_graphics_Paint_Align_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Paint+Align</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the paint's Align value for drawing text.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#getTextAlign()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Return the paint's Align value for drawing text. This controls how the
 text is positioned relative to its origin. LEFT align means that all of
 the text will be drawn to the right of its origin (i.e. the origin
 specifieds the LEFT edge of the text) and so on.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#setTextAlign(android.graphics.Paint.Align)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the paint's text alignment. This controls how the
 text is positioned relative to its origin. LEFT align means that all of
 the text will be drawn to the right of its origin (i.e. the origin
 specifieds the LEFT edge of the text) and so on.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TextLocale">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Locale TextLocale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.Locale TextLocale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTextLocale", "()Ljava/util/Locale;", "GetGetTextLocaleHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTextLocale", "(Ljava/util/Locale;)V", "GetSetTextLocale_Ljava_util_Locale_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Locale</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the text Locale.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#getTextLocale()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Get the text Locale.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#setTextLocale(java.util.Locale)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the text locale.

 The text locale affects how the text is drawn for some languages.

 For example, if the locale is <c><see cref="P:Java.Util.Locale.Chinese" /></c> or <c><see cref="P:Java.Util.Locale.China" /></c>,
 then the text renderer will prefer to draw text using a Chinese font. Likewise,
 if the locale is <c><see cref="P:Java.Util.Locale.Japanese" /></c> or <c><see cref="P:Java.Util.Locale.Japan" /></c>, then the text
 renderer will prefer to draw text using a Japanese font.

 This distinction is important because Chinese and Japanese text both use many
 of the same Unicode code points but their appearance is subtly different for
 each language.

 By default, the text locale is initialized to the system locale (as returned
 by <c><see cref="P:Java.Util.Locale.Default" /></c>). This assumes that the text to be rendered will
 most likely be in the user's preferred language.

 If the actual language of the text is known, then it can be provided to the
 text renderer using this method. The text renderer may attempt to guess the
 language script based on the contents of the text to be drawn independent of
 the text locale here. Specifying the text locale just helps it do a better
 job in certain ambiguous cases</para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="TextScaleX">
      <MemberSignature Language="C#" Value="public virtual float TextScaleX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 TextScaleX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTextScaleX", "()F", "GetGetTextScaleXHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTextScaleX", "(F)V", "GetSetTextScaleX_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the paint's horizontal scale factor for text.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#getTextScaleX()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Return the paint's horizontal scale factor for text. The default value
 is 1.0.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#setTextScaleX(float)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the paint's horizontal scale factor for text. The default value
 is 1.0. Values &gt; 1.0 will stretch the text wider. Values </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TextSize">
      <MemberSignature Language="C#" Value="public virtual float TextSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 TextSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTextSize", "()F", "GetGetTextSizeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTextSize", "(F)V", "GetSetTextSize_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the paint's text size.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#getTextSize()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Return the paint's text size.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#setTextSize(float)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the paint's text size. This value must be &gt; 0</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TextSkewX">
      <MemberSignature Language="C#" Value="public virtual float TextSkewX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 TextSkewX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTextSkewX", "()F", "GetGetTextSkewXHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTextSkewX", "(F)V", "GetSetTextSkewX_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the paint's horizontal skew factor for text.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#getTextSkewX()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Return the paint's horizontal skew factor for text. The default value
 is 0.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#setTextSkewX(float)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the paint's horizontal skew factor for text. The default value
 is 0. For approximating oblique text, use values around -0.25.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Typeface">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Typeface Typeface { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Typeface Typeface" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTypeface", "()Landroid/graphics/Typeface;", "GetGetTypefaceHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Typeface</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the paint's typeface object.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the paint's typeface object.
 </para>
          <para tool="javadoc-to-mdoc">
 The typeface object identifies which font to use when drawing or
 measuring text.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#getTypeface()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="UnderlineText">
      <MemberSignature Language="C#" Value="public bool UnderlineText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UnderlineText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isUnderlineText", "()Z", "GetIsUnderlineTextHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setUnderlineText", "(Z)V", "GetSetUnderlineText_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Helper for getFlags(), returning true if UNDERLINE_TEXT_FLAG bit is set</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#isUnderlineText()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Helper for getFlags(), returning true if UNDERLINE_TEXT_FLAG bit is set</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#setUnderlineText(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Helper for setFlags(), setting or clearing the UNDERLINE_TEXT_FLAG bit</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Xfermode">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Xfermode Xfermode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Xfermode Xfermode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getXfermode", "()Landroid/graphics/Xfermode;", "GetGetXfermodeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Xfermode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the paint's xfermode object.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the paint's xfermode object.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/Paint.html#getXfermode()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
