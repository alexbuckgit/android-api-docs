<Type Name="BitmapRegionDecoder" FullName="Android.Graphics.BitmapRegionDecoder">
  <TypeSignature Language="C#" Value="public sealed class BitmapRegionDecoder : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BitmapRegionDecoder extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/graphics/BitmapRegionDecoder", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="10">
    <summary>BitmapRegionDecoder can be used to decode a rectangle region from an image.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">BitmapRegionDecoder can be used to decode a rectangle region from an image.
 BitmapRegionDecoder is particularly useful when an original image is large and
 you only need parts of the image.

 </para>
      <para tool="javadoc-to-mdoc">To create a BitmapRegionDecoder, call newInstance(...).
 Given a BitmapRegionDecoder, users can call decodeRegion() repeatedly
 to get a decoded Bitmap of the specified region.

</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/graphics/BitmapRegionDecoder.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 10" />
  </Docs>
  <Members>
    <Member MemberName="DecodeRegion">
      <MemberSignature Language="C#" Value="public Android.Graphics.Bitmap DecodeRegion (Android.Graphics.Rect rect, Android.Graphics.BitmapFactory.Options options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Graphics.Bitmap DecodeRegion(class Android.Graphics.Rect rect, class Android.Graphics.BitmapFactory/Options options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("decodeRegion", "(Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="Android.Graphics.Rect" />
        <Parameter Name="p1" Type="Android.Graphics.BitmapFactory+Options" />
      </Parameters>
      <Docs>
        <param name="rect">The rectangle that specified the region to be decode.</param>
        <param name="options">null-ok; Options that control downsampling.
             inPurgeable is not supported.</param>
        <summary>Decodes a rectangle region in the image specified by rect.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Decodes a rectangle region in the image specified by rect.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/BitmapRegionDecoder.html#decodeRegion(android.graphics.Rect, android.graphics.BitmapFactory.Options)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public int Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getHeight", "()I", "GetGetHeightHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the original image's height </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the original image's height </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/BitmapRegionDecoder.html#getHeight()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="IsRecycled">
      <MemberSignature Language="C#" Value="public bool IsRecycled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRecycled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isRecycled", "()Z", "GetIsRecycledHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this region decoder has been recycled.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns true if this region decoder has been recycled.
 If so, then it is an error to try use its method.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/BitmapRegionDecoder.html#isRecycled()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="NewInstance">
      <MemberSignature Language="C#" Value="public static Android.Graphics.BitmapRegionDecoder NewInstance (Java.IO.FileDescriptor fd, bool isShareable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.BitmapRegionDecoder NewInstance(class Java.IO.FileDescriptor fd, bool isShareable) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newInstance", "(Ljava/io/FileDescriptor;Z)Landroid/graphics/BitmapRegionDecoder;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.BitmapRegionDecoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="Java.IO.FileDescriptor" />
        <Parameter Name="p1" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fd">The file descriptor containing the data to decode</param>
        <param name="isShareable">If this is true, then the BitmapRegionDecoder may keep a
                    shallow reference to the input. If this is false,
                    then the BitmapRegionDecoder will explicitly make a copy of the
                    input data, and keep that. Even if sharing is allowed,
                    the implementation may still decide to make a deep
                    copy of the input data. If an image is progressively encoded,
                    allowing sharing may degrade the decoding speed.</param>
        <summary tool="true">Create a BitmapRegionDecoder from a file path.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a BitmapRegionDecoder from the file descriptor.
 The position within the descriptor will not be changed when
 this returns, so the descriptor can be used again as is.
 Currently only the JPEG and PNG formats are supported.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/BitmapRegionDecoder.html#newInstance(java.io.FileDescriptor, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 10" />
        <exception cref="T:Java.IO.IOException">if the image format is not supported or can not be decoded.
</exception>
      </Docs>
    </Member>
    <Member MemberName="NewInstance">
      <MemberSignature Language="C#" Value="public static Android.Graphics.BitmapRegionDecoder NewInstance (System.IO.Stream is, bool isShareable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.BitmapRegionDecoder NewInstance(class System.IO.Stream is, bool isShareable) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newInstance", "(Ljava/io/InputStream;Z)Landroid/graphics/BitmapRegionDecoder;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.BitmapRegionDecoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.IO.Stream" />
        <Parameter Name="p1" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="is">The input stream that holds the raw data to be decoded into a
           BitmapRegionDecoder.</param>
        <param name="isShareable">If this is true, then the BitmapRegionDecoder may keep a
                    shallow reference to the input. If this is false,
                    then the BitmapRegionDecoder will explicitly make a copy of the
                    input data, and keep that. Even if sharing is allowed,
                    the implementation may still decide to make a deep
                    copy of the input data. If an image is progressively encoded,
                    allowing sharing may degrade the decoding speed.</param>
        <summary>Create a BitmapRegionDecoder from an input stream.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a BitmapRegionDecoder from an input stream.
 The stream's position will be where ever it was after the encoded data
 was read.
 Currently only the JPEG and PNG formats are supported.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/BitmapRegionDecoder.html#newInstance(java.io.InputStream, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 10" />
        <exception cref="T:Java.IO.IOException">if the image format is not supported or can not be decoded.

 <para tool="javadoc-to-mdoc">Prior to <c><see cref="F:Android.OS.Build.VERSION_CODES.KitKat" /></c>,
 if <c><see cref="M:Java.IO.InputStream.MarkSupported" /></c> returns true,
 <c>is.mark(1024)</c> would be called. As of
 <c><see cref="F:Android.OS.Build.VERSION_CODES.KitKat" /></c>, this is no longer the case.</para></exception>
      </Docs>
    </Member>
    <Member MemberName="NewInstance">
      <MemberSignature Language="C#" Value="public static Android.Graphics.BitmapRegionDecoder NewInstance (string pathName, bool isShareable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.BitmapRegionDecoder NewInstance(string pathName, bool isShareable) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newInstance", "(Ljava/lang/String;Z)Landroid/graphics/BitmapRegionDecoder;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.BitmapRegionDecoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.String" />
        <Parameter Name="p1" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pathName">complete path name for the file to be decoded.</param>
        <param name="isShareable">If this is true, then the BitmapRegionDecoder may keep a
                    shallow reference to the input. If this is false,
                    then the BitmapRegionDecoder will explicitly make a copy of the
                    input data, and keep that. Even if sharing is allowed,
                    the implementation may still decide to make a deep
                    copy of the input data. If an image is progressively encoded,
                    allowing sharing may degrade the decoding speed.</param>
        <summary>Create a BitmapRegionDecoder from a file path.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a BitmapRegionDecoder from a file path.
 Currently only the JPEG and PNG formats are supported.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/BitmapRegionDecoder.html#newInstance(java.lang.String, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 10" />
        <exception cref="T:Java.IO.IOException">if the image format is not supported or can not be decoded.
</exception>
      </Docs>
    </Member>
    <Member MemberName="NewInstance">
      <MemberSignature Language="C#" Value="public static Android.Graphics.BitmapRegionDecoder NewInstance (byte[] data, int offset, int length, bool isShareable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.BitmapRegionDecoder NewInstance(unsigned int8[] data, int32 offset, int32 length, bool isShareable) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newInstance", "([BIIZ)Landroid/graphics/BitmapRegionDecoder;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.BitmapRegionDecoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Byte[]" />
        <Parameter Name="p1" Type="System.Int32" />
        <Parameter Name="p2" Type="System.Int32" />
        <Parameter Name="p3" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="data">byte array of compressed image data.</param>
        <param name="offset">offset into data for where the decoder should begin
               parsing.</param>
        <param name="length">the number of bytes, beginning at offset, to parse</param>
        <param name="isShareable">If this is true, then the BitmapRegionDecoder may keep a
                    shallow reference to the input. If this is false,
                    then the BitmapRegionDecoder will explicitly make a copy of the
                    input data, and keep that. Even if sharing is allowed,
                    the implementation may still decide to make a deep
                    copy of the input data. If an image is progressively encoded,
                    allowing sharing may degrade the decoding speed.</param>
        <summary>Create a BitmapRegionDecoder from the specified byte array.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a BitmapRegionDecoder from the specified byte array.
 Currently only the JPEG and PNG formats are supported.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/BitmapRegionDecoder.html#newInstance(byte[], int, int, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 10" />
        <exception cref="T:Java.IO.IOException">if the image format is not supported or can not be decoded.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Recycle">
      <MemberSignature Language="C#" Value="public void Recycle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Recycle() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("recycle", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Frees up the memory associated with this region decoder, and mark the
 region decoder as "dead", meaning it will throw an exception if decodeRegion(),
 getWidth() or getHeight() is called.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Frees up the memory associated with this region decoder, and mark the
 region decoder as "dead", meaning it will throw an exception if decodeRegion(),
 getWidth() or getHeight() is called.

 </para>
          <para tool="javadoc-to-mdoc">This operation cannot be reversed, so it should only be called if you are
 sure there are no further uses for the region decoder. This is an advanced call,
 and normally need not be called, since the normal GC process will free up this
 memory when there are no more references to this region decoder.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/BitmapRegionDecoder.html#recycle()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public int Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getWidth", "()I", "GetGetWidthHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the original image's width </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the original image's width </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/BitmapRegionDecoder.html#getWidth()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 10" />
      </Docs>
    </Member>
  </Members>
</Type>