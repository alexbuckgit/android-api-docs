<Type Name="PathMeasure" FullName="Android.Graphics.PathMeasure">
  <TypeSignature Language="C#" Value="public class PathMeasure : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PathMeasure extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/graphics/PathMeasure", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><format type="text/html"><a href="http://developer.android.com/reference/android/graphics/PathMeasure.html" target="_blank">[Android Documentation]</a></format></summary>
    <remarks><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/graphics/PathMeasure.html" target="_blank">[Android Documentation]</a></format></para></remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PathMeasure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Create an empty PathMeasure object.</summary>
        <remarks><para tool="javadoc-to-mdoc">Create an empty PathMeasure object. To uses this to measure the length
 of a path, and/or to find the position and tangent along it, call
 setPath.

 Note that once a path is associated with the measure object, it is
 undefined if the path is subsequently modified and the the measure object
 is used. If the path is modified, you must call setPath with the path.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/graphics/PathMeasure.html#PathMeasure()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PathMeasure (Android.Graphics.Path path, bool forceClosed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Graphics.Path path, bool forceClosed) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/graphics/Path;Z)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="Android.Graphics.Path" />
        <Parameter Name="forceClosed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="forceClosed">To be added.</param>
        <summary>Create a PathMeasure object associated with the specified path object
 (already created and specified).</summary>
        <remarks><para tool="javadoc-to-mdoc">Create a PathMeasure object associated with the specified path object
 (already created and specified). The measure object can now return the
 path's length, and the position and tangent of any position along the
 path.

 Note that once a path is associated with the measure object, it is
 undefined if the path is subsequently modified and the the measure object
 is used. If the path is modified, you must call setPath with the path.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/graphics/PathMeasure.html#PathMeasure(android.graphics.Path, boolean)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PathMeasure (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMatrix">
      <MemberSignature Language="C#" Value="public virtual bool GetMatrix (float distance, Android.Graphics.Matrix matrix, Android.Graphics.MatrixFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetMatrix(float32 distance, class Android.Graphics.Matrix matrix, valuetype Android.Graphics.MatrixFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getMatrix", "(FLandroid/graphics/Matrix;I)Z", "GetGetMatrix_FLandroid_graphics_Matrix_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="distance" Type="System.Single" />
        <Parameter Name="matrix" Type="Android.Graphics.Matrix" />
        <Parameter Name="flags" Type="Android.Graphics.MatrixFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="distance">The distance along the associated path</param>
        <param name="matrix">Allocated by the caller, this is set to the transformation
        associated with the position and tangent at the specified distance</param>
        <param name="flags">Specified what aspects should be returned in the matrix.
</param>
        <summary>Pins distance to 0 &lt;= distance &lt;= getLength(), and then computes the
 corresponding matrix.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Pins distance to 0 &lt;= distance &lt;= getLength(), and then computes the
 corresponding matrix. Returns false if there is no path, or a zero-length
 path was specified, in which case matrix is unchanged.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/graphics/PathMeasure.html#getMatrix(float, android.graphics.Matrix, int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetPosTan">
      <MemberSignature Language="C#" Value="public virtual bool GetPosTan (float distance, float[] pos, float[] tan);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetPosTan(float32 distance, float32[] pos, float32[] tan) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPosTan", "(F[F[F)Z", "GetGetPosTan_FarrayFarrayFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="distance" Type="System.Single" />
        <Parameter Name="pos" Type="System.Single[]" />
        <Parameter Name="tan" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="distance">The distance along the current contour to sample</param>
        <param name="pos">If not null, eturns the sampled position (x==[0], y==[1])</param>
        <param name="tan">If not null, returns the sampled tangent (x==[0], y==[1])</param>
        <summary>Pins distance to 0 &lt;= distance &lt;= getLength(), and then computes the
 corresponding position and tangent.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Pins distance to 0 &lt;= distance &lt;= getLength(), and then computes the
 corresponding position and tangent. Returns false if there is no path,
 or a zero-length path was specified, in which case position and tangent
 are unchanged.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/graphics/PathMeasure.html#getPosTan(float, float[], float[])" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetSegment">
      <MemberSignature Language="C#" Value="public virtual bool GetSegment (float startD, float stopD, Android.Graphics.Path dst, bool startWithMoveTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetSegment(float32 startD, float32 stopD, class Android.Graphics.Path dst, bool startWithMoveTo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getSegment", "(FFLandroid/graphics/Path;Z)Z", "GetGetSegment_FFLandroid_graphics_Path_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startD" Type="System.Single" />
        <Parameter Name="stopD" Type="System.Single" />
        <Parameter Name="dst" Type="Android.Graphics.Path" />
        <Parameter Name="startWithMoveTo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startD">To be added.</param>
        <param name="stopD">To be added.</param>
        <param name="dst">To be added.</param>
        <param name="startWithMoveTo">To be added.</param>
        <summary>Given a start and stop distance, return in dst the intervening
 segment(s).</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Given a start and stop distance, return in dst the intervening
 segment(s). If the segment is zero-length, return false, else return
 true. startD and stopD are pinned to legal values (0..getLength()).
 If startD &lt;= stopD then return false (and leave dst untouched).
 Begin the segment with a moveTo if startWithMoveTo is true.

 </para><para tool="javadoc-to-mdoc">On <c><see cref="!:NoType:android/os/Build$VERSION_CODES;Href=../../../reference/android/os/Build.VERSION_CODES.html#KITKAT" /></c> and earlier
 releases, the resulting path may not display on a hardware-accelerated
 Canvas. A simple workaround is to add a single operation to this path,
 such as <c>dst.rLineTo(0, 0)</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/graphics/PathMeasure.html#getSegment(float, float, android.graphics.Path, boolean)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public virtual bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isClosed", "()Z", "GetIsClosedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return true if the current contour is closed()
</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Return true if the current contour is closed()
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/graphics/PathMeasure.html#isClosed()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public virtual float Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLength", "()F", "GetGetLengthHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the total length of the current contour, or 0 if no path is
 associated with this measure object.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Return the total length of the current contour, or 0 if no path is
 associated with this measure object.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/graphics/PathMeasure.html#getLength()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NextContour">
      <MemberSignature Language="C#" Value="public virtual bool NextContour ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool NextContour() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("nextContour", "()Z", "GetNextContourHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Move to the next contour in the path.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Move to the next contour in the path. Return true if one exists, or
 false if we're done with the path.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/graphics/PathMeasure.html#nextContour()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetPath">
      <MemberSignature Language="C#" Value="public virtual void SetPath (Android.Graphics.Path path, bool forceClosed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPath(class Android.Graphics.Path path, bool forceClosed) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPath", "(Landroid/graphics/Path;Z)V", "GetSetPath_Landroid_graphics_Path_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="Android.Graphics.Path" />
        <Parameter Name="forceClosed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="forceClosed">To be added.</param>
        <summary>Assign a new path, or null to have none.</summary>
        <remarks><para tool="javadoc-to-mdoc">Assign a new path, or null to have none.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/graphics/PathMeasure.html#setPath(android.graphics.Path, boolean)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
