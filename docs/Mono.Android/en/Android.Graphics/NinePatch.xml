<Type Name="NinePatch" FullName="Android.Graphics.NinePatch">
  <TypeSignature Language="C#" Value="public class NinePatch : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NinePatch extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/graphics/NinePatch", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>The NinePatch class permits drawing a bitmap in nine or more sections.</summary>
    <remarks />
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NinePatch (Android.Graphics.Bitmap bitmap, byte[] chunk);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Graphics.Bitmap bitmap, unsigned int8[] chunk) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/graphics/Bitmap;[B)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="bitmap" Type="Android.Graphics.Bitmap" />
        <Parameter Name="chunk" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bitmap">To be added.</param>
        <param name="chunk">To be added.</param>
        <summary>Create a drawable projection from a bitmap to nine patches.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NinePatch (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NinePatch (Android.Graphics.Bitmap bitmap, byte[] chunk, string srcName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Graphics.Bitmap bitmap, unsigned int8[] chunk, string srcName) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/graphics/Bitmap;[BLjava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="bitmap" Type="Android.Graphics.Bitmap" />
        <Parameter Name="chunk" Type="System.Byte[]" />
        <Parameter Name="srcName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="bitmap">To be added.</param>
        <param name="chunk">To be added.</param>
        <param name="srcName">To be added.</param>
        <summary>Create a drawable projection from a bitmap to nine patches.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Bitmap">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Bitmap Bitmap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Bitmap Bitmap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getBitmap", "()Landroid/graphics/Bitmap;", "GetGetBitmapHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the bitmap used to draw this NinePatch.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Density">
      <MemberSignature Language="C#" Value="public virtual int Density { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Density" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDensity", "()I", "GetGetDensityHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the underlying bitmap's density, as per
 <c><see cref="P:Android.Graphics.Bitmap.Density" /></c>.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public virtual void Draw (Android.Graphics.Canvas canvas, Android.Graphics.Rect location);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Draw(class Android.Graphics.Canvas canvas, class Android.Graphics.Rect location) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("draw", "(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V", "GetDraw_Landroid_graphics_Canvas_Landroid_graphics_Rect_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
        <Parameter Name="location" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="canvas">A container for the current matrix and clip used to draw the NinePatch.</param>
        <param name="location">Where to draw the NinePatch.
</param>
        <summary>Draws the NinePatch.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public virtual void Draw (Android.Graphics.Canvas canvas, Android.Graphics.RectF location);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Draw(class Android.Graphics.Canvas canvas, class Android.Graphics.RectF location) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("draw", "(Landroid/graphics/Canvas;Landroid/graphics/RectF;)V", "GetDraw_Landroid_graphics_Canvas_Landroid_graphics_RectF_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
        <Parameter Name="location" Type="Android.Graphics.RectF" />
      </Parameters>
      <Docs>
        <param name="canvas">A container for the current matrix and clip used to draw the NinePatch.</param>
        <param name="location">Where to draw the NinePatch.
</param>
        <summary>Draws the NinePatch.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public virtual void Draw (Android.Graphics.Canvas canvas, Android.Graphics.Rect location, Android.Graphics.Paint paint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Draw(class Android.Graphics.Canvas canvas, class Android.Graphics.Rect location, class Android.Graphics.Paint paint) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("draw", "(Landroid/graphics/Canvas;Landroid/graphics/Rect;Landroid/graphics/Paint;)V", "GetDraw_Landroid_graphics_Canvas_Landroid_graphics_Rect_Landroid_graphics_Paint_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
        <Parameter Name="location" Type="Android.Graphics.Rect" />
        <Parameter Name="paint" Type="Android.Graphics.Paint" />
      </Parameters>
      <Docs>
        <param name="canvas">A container for the current matrix and clip used to draw the NinePatch.</param>
        <param name="location">Where to draw the NinePatch.</param>
        <param name="paint">The Paint to draw through.
</param>
        <summary>Draws the NinePatch.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetTransparentRegion">
      <MemberSignature Language="C#" Value="public Android.Graphics.Region GetTransparentRegion (Android.Graphics.Rect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Graphics.Region GetTransparentRegion(class Android.Graphics.Rect bounds) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getTransparentRegion", "(Landroid/graphics/Rect;)Landroid/graphics/Region;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Region</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="bounds">The location and size of the NinePatch.</param>
        <summary>Returns a <c><see cref="T:Android.Graphics.Region" /></c> representing the parts of the NinePatch that are
 completely transparent.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HasAlpha">
      <MemberSignature Language="C#" Value="public bool HasAlpha { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAlpha" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("hasAlpha", "()Z", "GetHasAlphaHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this NinePatch contains transparent or translucent pixels.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public virtual int Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getHeight", "()I", "GetGetHeightHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the intrinsic height, in pixels, of this NinePatch.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsNinePatchChunk">
      <MemberSignature Language="C#" Value="public static bool IsNinePatchChunk (byte[] chunk);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNinePatchChunk(unsigned int8[] chunk) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isNinePatchChunk", "([B)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chunk" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="chunk">A byte array representing a 9-patch data chunk.</param>
        <summary>Verifies that the specified byte array is a valid 9-patch data chunk.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getName", "()Ljava/lang/String;", "GetGetNameHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the name of this NinePatch object if one was specified
 when calling the constructor.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Paint Paint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Paint Paint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPaint", "()Landroid/graphics/Paint;", "GetGetPaintHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Paint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the paint used to draw this NinePatch.</summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="M:Android.Graphics.NinePatch.SetPaint(Android.Graphics.Paint)" />
        <altmember cref="M:Android.Graphics.NinePatch.Draw(Android.Graphics.Canvas, Android.Graphics.Rect)" />
        <altmember cref="M:Android.Graphics.NinePatch.Draw(Android.Graphics.Canvas, Android.Graphics.RectF)" />
      </Docs>
    </Member>
    <Member MemberName="SetPaint">
      <MemberSignature Language="C#" Value="public virtual void SetPaint (Android.Graphics.Paint p);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPaint(class Android.Graphics.Paint p) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPaint", "(Landroid/graphics/Paint;)V", "GetSetPaint_Landroid_graphics_Paint_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p" Type="Android.Graphics.Paint" />
      </Parameters>
      <Docs>
        <param name="p">The paint that will be used to draw this NinePatch.</param>
        <summary>Sets the paint to use when drawing the NinePatch.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Graphics.NinePatch.Paint" />
        <altmember cref="M:Android.Graphics.NinePatch.Draw(Android.Graphics.Canvas, Android.Graphics.Rect)" />
        <altmember cref="M:Android.Graphics.NinePatch.Draw(Android.Graphics.Canvas, Android.Graphics.RectF)" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public virtual int Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getWidth", "()I", "GetGetWidthHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the intrinsic width, in pixels, of this NinePatch.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
