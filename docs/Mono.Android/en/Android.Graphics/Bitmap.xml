<Type Name="Bitmap" FullName="Android.Graphics.Bitmap">
  <TypeSignature Language="C#" Value="public sealed class Bitmap : Java.Lang.Object, Android.OS.IParcelable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Bitmap extends Java.Lang.Object implements class Android.OS.IParcelable, class Android.Runtime.IJavaObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.OS.IParcelable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/graphics/Bitmap", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>
      <format type="text/html">
        <a href="http://developer.android.com/reference/android/graphics/Bitmap.html" target="_blank">[Android Documentation]</a>
      </format>
    </summary>
    <remarks />
  </Docs>
  <Members>
    <Member MemberName="AllocationByteCount">
      <MemberSignature Language="C#" Value="public int AllocationByteCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AllocationByteCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAllocationByteCount", "()I", "GetGetAllocationByteCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the size of the allocated memory used to store this bitmap's pixels.</summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="M:Android.Graphics.Bitmap.Reconfigure(System.Int32, System.Int32, System.Int32)" />
      </Docs>
      <since version="Added in API level 19" />
    </Member>
    <Member MemberName="ByteCount">
      <MemberSignature Language="C#" Value="public int ByteCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ByteCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getByteCount", "()I", "GetGetByteCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the minimum number of bytes that can be used to store this bitmap's pixels.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="Compress">
      <MemberSignature Language="C#" Value="public bool Compress (Android.Graphics.Bitmap.CompressFormat format, int quality, System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Compress(class Android.Graphics.Bitmap/CompressFormat format, int32 quality, class System.IO.Stream stream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("compress", "(Landroid/graphics/Bitmap$CompressFormat;ILjava/io/OutputStream;)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="Android.Graphics.Bitmap+CompressFormat" />
        <Parameter Name="quality" Type="System.Int32" />
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="format">The format of the compressed image</param>
        <param name="quality">Hint to the compressor, 0-100. 0 meaning compress for
                 small size, 100 meaning compress for max quality. Some
                 formats, like PNG which is lossless, will ignore the
                 quality setting</param>
        <param name="stream">The outputstream to write the compressed data.</param>
        <summary>Write a compressed version of the bitmap to the specified outputstream.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CompressAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; CompressAsync (Android.Graphics.Bitmap.CompressFormat format, int quality, System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; CompressAsync(class Android.Graphics.Bitmap/CompressFormat format, int32 quality, class System.IO.Stream stream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="Android.Graphics.Bitmap+CompressFormat" />
        <Parameter Name="quality" Type="System.Int32" />
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="format">To be added.</param>
        <param name="quality">To be added.</param>
        <param name="stream">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public Android.Graphics.Bitmap Copy (Android.Graphics.Bitmap.Config config, bool isMutable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Graphics.Bitmap Copy(class Android.Graphics.Bitmap/Config config, bool isMutable) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copy", "(Landroid/graphics/Bitmap$Config;Z)Landroid/graphics/Bitmap;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="config" Type="Android.Graphics.Bitmap+Config" />
        <Parameter Name="isMutable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="config">The desired config for the resulting bitmap</param>
        <param name="isMutable">True if the resulting bitmap should be mutable (i.e.
                  its pixels can be modified)</param>
        <summary>Tries to make a new bitmap based on the dimensions of this bitmap,
 setting the new bitmap's config to the one specified, and then copying
 this bitmap's pixels into the new bitmap.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CopyPixelsFromBuffer">
      <MemberSignature Language="C#" Value="public void CopyPixelsFromBuffer (Java.Nio.Buffer src);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyPixelsFromBuffer(class Java.Nio.Buffer src) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyPixelsFromBuffer", "(Ljava/nio/Buffer;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Java.Nio.Buffer" />
      </Parameters>
      <Docs>
        <param name="src">To be added.</param>
        <summary tool="true">
        </summary>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="CopyPixelsFromBufferAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CopyPixelsFromBufferAsync (Java.Nio.Buffer src);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CopyPixelsFromBufferAsync(class Java.Nio.Buffer src) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Java.Nio.Buffer" />
      </Parameters>
      <Docs>
        <param name="src">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CopyPixelsToBuffer">
      <MemberSignature Language="C#" Value="public void CopyPixelsToBuffer (Java.Nio.Buffer dst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyPixelsToBuffer(class Java.Nio.Buffer dst) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyPixelsToBuffer", "(Ljava/nio/Buffer;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dst" Type="Java.Nio.Buffer" />
      </Parameters>
      <Docs>
        <param name="dst">To be added.</param>
        <summary tool="true">
        </summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CopyPixelsToBufferAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CopyPixelsToBufferAsync (Java.Nio.Buffer dst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CopyPixelsToBufferAsync(class Java.Nio.Buffer dst) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dst" Type="Java.Nio.Buffer" />
      </Parameters>
      <Docs>
        <param name="dst">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap CreateBitmap (Android.Graphics.Bitmap src);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(class Android.Graphics.Bitmap src) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createBitmap", "(Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="src">To be added.</param>
        <summary tool="true">Returns an immutable bitmap from the source bitmap.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap CreateBitmap (int width, int height, Android.Graphics.Bitmap.Config config);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(int32 width, int32 height, class Android.Graphics.Bitmap/Config config) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createBitmap", "(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="config" Type="Android.Graphics.Bitmap+Config" />
      </Parameters>
      <Docs>
        <param name="width">The width of the bitmap</param>
        <param name="height">The height of the bitmap</param>
        <param name="config">The bitmap config to create.</param>
        <summary>Returns a mutable bitmap with the specified width and height.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the width or height are &lt;= 0
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap CreateBitmap (Android.Util.DisplayMetrics display, int width, int height, Android.Graphics.Bitmap.Config config);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(class Android.Util.DisplayMetrics display, int32 width, int32 height, class Android.Graphics.Bitmap/Config config) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createBitmap", "(Landroid/util/DisplayMetrics;IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="display" Type="Android.Util.DisplayMetrics" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="config" Type="Android.Graphics.Bitmap+Config" />
      </Parameters>
      <Docs>
        <param name="display">Display metrics for the display this bitmap will be
                 drawn on.</param>
        <param name="width">The width of the bitmap</param>
        <param name="height">The height of the bitmap</param>
        <param name="config">The bitmap config to create.</param>
        <summary>Returns a mutable bitmap with the specified width and height.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 17" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the width or height are &lt;= 0
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap CreateBitmap (int[] colors, int width, int height, Android.Graphics.Bitmap.Config config);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(int32[] colors, int32 width, int32 height, class Android.Graphics.Bitmap/Config config) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createBitmap", "([IIILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colors" Type="System.Int32[]" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="config" Type="Android.Graphics.Bitmap+Config" />
      </Parameters>
      <Docs>
        <param name="colors">Array of <c><see cref="T:Android.Graphics._Color" tool="ReplaceLinkValue" /></c> used to initialize the pixels.
                 This array must be at least as large as width * height.</param>
        <param name="width">The width of the bitmap</param>
        <param name="height">The height of the bitmap</param>
        <param name="config">The bitmap config to create. If the config does not
                 support per-pixel alpha (e.g. RGB_565), then the alpha
                 bytes in the colors[] will be ignored (assumed to be FF)</param>
        <summary>Returns a immutable bitmap with the specified width and height, with each
 pixel value set to the corresponding value in the colors array.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the width or height are &lt;= 0, or if
         the color array's length is less than the number of pixels.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap CreateBitmap (Android.Graphics.Bitmap source, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(class Android.Graphics.Bitmap source, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createBitmap", "(Landroid/graphics/Bitmap;IIII)Landroid/graphics/Bitmap;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Android.Graphics.Bitmap" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">The bitmap we are subsetting</param>
        <param name="x">The x coordinate of the first pixel in source</param>
        <param name="y">The y coordinate of the first pixel in source</param>
        <param name="width">The number of pixels in each row</param>
        <param name="height">The number of rows</param>
        <summary>Returns an immutable bitmap from the specified subset of the source
 bitmap.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the x, y, width, height values are
         outside of the dimensions of the source bitmap, or width is &lt;= 0,
         or height is &lt;= 0
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap CreateBitmap (Android.Util.DisplayMetrics display, int[] colors, int width, int height, Android.Graphics.Bitmap.Config config);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(class Android.Util.DisplayMetrics display, int32[] colors, int32 width, int32 height, class Android.Graphics.Bitmap/Config config) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createBitmap", "(Landroid/util/DisplayMetrics;[IIILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="display" Type="Android.Util.DisplayMetrics" />
        <Parameter Name="colors" Type="System.Int32[]" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="config" Type="Android.Graphics.Bitmap+Config" />
      </Parameters>
      <Docs>
        <param name="display">Display metrics for the display this bitmap will be
                 drawn on.</param>
        <param name="colors">Array of <c><see cref="T:Android.Graphics._Color" tool="ReplaceLinkValue" /></c> used to initialize the pixels.
                 This array must be at least as large as width * height.</param>
        <param name="width">The width of the bitmap</param>
        <param name="height">The height of the bitmap</param>
        <param name="config">The bitmap config to create. If the config does not
                 support per-pixel alpha (e.g. RGB_565), then the alpha
                 bytes in the colors[] will be ignored (assumed to be FF)</param>
        <summary>Returns a immutable bitmap with the specified width and height, with each
 pixel value set to the corresponding value in the colors array.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 17" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the width or height are &lt;= 0, or if
         the color array's length is less than the number of pixels.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap CreateBitmap (int[] colors, int offset, int stride, int width, int height, Android.Graphics.Bitmap.Config config);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(int32[] colors, int32 offset, int32 stride, int32 width, int32 height, class Android.Graphics.Bitmap/Config config) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createBitmap", "([IIIIILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colors" Type="System.Int32[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="config" Type="Android.Graphics.Bitmap+Config" />
      </Parameters>
      <Docs>
        <param name="colors">Array of <c><see cref="T:Android.Graphics._Color" tool="ReplaceLinkValue" /></c> used to initialize the pixels.</param>
        <param name="offset">Number of values to skip before the first color in the
                 array of colors.</param>
        <param name="stride">Number of colors in the array between rows (must be &gt;=
                 width or &lt;= -width).</param>
        <param name="width">The width of the bitmap</param>
        <param name="height">The height of the bitmap</param>
        <param name="config">The bitmap config to create. If the config does not
                 support per-pixel alpha (e.g. RGB_565), then the alpha
                 bytes in the colors[] will be ignored (assumed to be FF)</param>
        <summary>Returns a immutable bitmap with the specified width and height, with each
 pixel value set to the corresponding value in the colors array.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the width or height are &lt;= 0, or if
         the color array's length is less than the number of pixels.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap CreateBitmap (Android.Graphics.Bitmap source, int x, int y, int width, int height, Android.Graphics.Matrix m, bool filter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(class Android.Graphics.Bitmap source, int32 x, int32 y, int32 width, int32 height, class Android.Graphics.Matrix m, bool filter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createBitmap", "(Landroid/graphics/Bitmap;IIIILandroid/graphics/Matrix;Z)Landroid/graphics/Bitmap;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Android.Graphics.Bitmap" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="m" Type="Android.Graphics.Matrix" />
        <Parameter Name="filter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">The bitmap we are subsetting</param>
        <param name="x">The x coordinate of the first pixel in source</param>
        <param name="y">The y coordinate of the first pixel in source</param>
        <param name="width">The number of pixels in each row</param>
        <param name="height">The number of rows</param>
        <param name="m">Optional matrix to be applied to the pixels</param>
        <param name="filter">true if the source should be filtered.
                   Only applies if the matrix contains more than just
                   translation.</param>
        <summary>Returns an immutable bitmap from subset of the source bitmap,
 transformed by the optional matrix.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the x, y, width, height values are
         outside of the dimensions of the source bitmap, or width is &lt;= 0,
         or height is &lt;= 0
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap CreateBitmap (Android.Util.DisplayMetrics display, int[] colors, int offset, int stride, int width, int height, Android.Graphics.Bitmap.Config config);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(class Android.Util.DisplayMetrics display, int32[] colors, int32 offset, int32 stride, int32 width, int32 height, class Android.Graphics.Bitmap/Config config) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createBitmap", "(Landroid/util/DisplayMetrics;[IIIIILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="display" Type="Android.Util.DisplayMetrics" />
        <Parameter Name="colors" Type="System.Int32[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="config" Type="Android.Graphics.Bitmap+Config" />
      </Parameters>
      <Docs>
        <param name="display">Display metrics for the display this bitmap will be
                 drawn on.</param>
        <param name="colors">Array of <c><see cref="T:Android.Graphics._Color" tool="ReplaceLinkValue" /></c> used to initialize the pixels.</param>
        <param name="offset">Number of values to skip before the first color in the
                 array of colors.</param>
        <param name="stride">Number of colors in the array between rows (must be &gt;=
                 width or &lt;= -width).</param>
        <param name="width">The width of the bitmap</param>
        <param name="height">The height of the bitmap</param>
        <param name="config">The bitmap config to create. If the config does not
                 support per-pixel alpha (e.g. RGB_565), then the alpha
                 bytes in the colors[] will be ignored (assumed to be FF)</param>
        <summary>Returns a immutable bitmap with the specified width and height, with each
 pixel value set to the corresponding value in the colors array.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 17" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the width or height are &lt;= 0, or if
         the color array's length is less than the number of pixels.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateScaledBitmap">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap CreateScaledBitmap (Android.Graphics.Bitmap src, int dstWidth, int dstHeight, bool filter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateScaledBitmap(class Android.Graphics.Bitmap src, int32 dstWidth, int32 dstHeight, bool filter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createScaledBitmap", "(Landroid/graphics/Bitmap;IIZ)Landroid/graphics/Bitmap;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Android.Graphics.Bitmap" />
        <Parameter Name="dstWidth" Type="System.Int32" />
        <Parameter Name="dstHeight" Type="System.Int32" />
        <Parameter Name="filter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="src">The source bitmap.</param>
        <param name="dstWidth">The new bitmap's desired width.</param>
        <param name="dstHeight">The new bitmap's desired height.</param>
        <param name="filter">true if the source should be filtered.</param>
        <summary>Creates a new bitmap, scaled from an existing bitmap, when possible.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if width is &lt;= 0, or height is &lt;= 0
</exception>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public static Android.OS.IParcelableCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.OS.IParcelableCreator Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CREATOR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IParcelableCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Density">
      <MemberSignature Language="C#" Value="public int Density { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Density" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDensity", "()I", "GetGetDensityHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setDensity", "(I)V", "GetSetDensity_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 4" />
        <altmember cref="P:Android.Graphics.Bitmap.Density" />
        <altmember cref="F:Android.Util.DisplayMetrics.DensityDefault" />
        <altmember cref="P:Android.Util.DisplayMetrics.DensityDpi" />
        <altmember cref="F:Android.Graphics.Bitmap.DensityNone" />
        <altmember cref="P:Android.Graphics.Bitmap.Density" />
        <altmember cref="F:Android.Util.DisplayMetrics.DensityDefault" />
        <altmember cref="P:Android.Util.DisplayMetrics.DensityDpi" />
        <altmember cref="F:Android.Graphics.Bitmap.DensityNone" />
      </Docs>
    </Member>
    <Member MemberName="DensityNone">
      <MemberSignature Language="C#" Value="public const int DensityNone = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 DensityNone = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DENSITY_NONE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Indicates that the bitmap was created for an unknown pixel density.</summary>
        <remarks />
        <since version="Added in API level 4" />
        <altmember cref="P:Android.Graphics.Bitmap.Density" />
        <altmember cref="P:Android.Graphics.Bitmap.Density" />
      </Docs>
    </Member>
    <Member MemberName="DescribeContents">
      <MemberSignature Language="C#" Value="public int DescribeContents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 DescribeContents() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("describeContents", "()I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>No special parcel contents.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EraseColor">
      <MemberSignature Language="C#" Value="public void EraseColor (int c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EraseColor(int32 c) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("eraseColor", "(I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="c">To be added.</param>
        <summary>Fills the bitmap's pixels with the specified <c><see cref="T:Android.Graphics._Color" tool="ReplaceLinkValue" /></c>.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if the bitmap is not mutable.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtractAlpha">
      <MemberSignature Language="C#" Value="public Android.Graphics.Bitmap ExtractAlpha ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Graphics.Bitmap ExtractAlpha() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("extractAlpha", "()Landroid/graphics/Bitmap;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a new bitmap that captures the alpha values of the original.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ExtractAlpha">
      <MemberSignature Language="C#" Value="public Android.Graphics.Bitmap ExtractAlpha (Android.Graphics.Paint paint, int[] offsetXY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Graphics.Bitmap ExtractAlpha(class Android.Graphics.Paint paint, int32[] offsetXY) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("extractAlpha", "(Landroid/graphics/Paint;[I)Landroid/graphics/Bitmap;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paint" Type="Android.Graphics.Paint" />
        <Parameter Name="offsetXY" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="paint">Optional paint used to modify the alpha values in the
              resulting bitmap. Pass null for default behavior.</param>
        <param name="offsetXY">Optional array that returns the X (index 0) and Y
                 (index 1) offset needed to position the returned bitmap
                 so that it visually lines up with the original.</param>
        <summary>Returns a new bitmap that captures the alpha values of the original.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GenerationId">
      <MemberSignature Language="C#" Value="public int GenerationId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GenerationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getGenerationId", "()I", "GetGetGenerationIdHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the generation ID of this bitmap.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="GetBitmapInfo">
      <MemberSignature Language="C#" Value="public Android.Graphics.AndroidBitmapInfo GetBitmapInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Android.Graphics.AndroidBitmapInfo GetBitmapInfo() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Graphics.AndroidBitmapInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetConfig">
      <MemberSignature Language="C#" Value="public Android.Graphics.Bitmap.Config GetConfig ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Graphics.Bitmap/Config GetConfig() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getConfig", "()Landroid/graphics/Bitmap$Config;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap+Config</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>If the bitmap's internal config is in one of the public formats, return
 that config, otherwise return null.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetNinePatchChunk">
      <MemberSignature Language="C#" Value="public byte[] GetNinePatchChunk ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetNinePatchChunk() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getNinePatchChunk", "()[B", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an optional array of private data, used by the UI system for
 some bitmaps.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetPixel">
      <MemberSignature Language="C#" Value="public int GetPixel (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetPixel(int32 x, int32 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPixel", "(II)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">The x coordinate (0...width-1) of the pixel to return</param>
        <param name="y">The y coordinate (0...height-1) of the pixel to return</param>
        <summary>Returns the <c><see cref="T:Android.Graphics._Color" tool="ReplaceLinkValue" /></c> at the specified location.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if x, y exceed the bitmap's bounds
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPixels">
      <MemberSignature Language="C#" Value="public void GetPixels (int[] pixels, int offset, int stride, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetPixels(int32[] pixels, int32 offset, int32 stride, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPixels", "([IIIIIII)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pixels" Type="System.Int32[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pixels">The array to receive the bitmap's colors</param>
        <param name="offset">The first index to write into pixels[]</param>
        <param name="stride">The number of entries in pixels[] to skip between
                 rows (must be &gt;= bitmap's width). Can be negative.</param>
        <param name="x">The x coordinate of the first pixel to read from
                 the bitmap</param>
        <param name="y">The y coordinate of the first pixel to read from
                 the bitmap</param>
        <param name="width">The number of pixels to read from each row</param>
        <param name="height">The number of rows to read</param>
        <summary>Returns in pixels[] a copy of the data in the bitmap.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if x, y, width, height exceed the
         bounds of the bitmap, or if abs(stride) </exception>
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if the pixels array is too small
         to receive the specified number of pixels.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetScaledHeight">
      <MemberSignature Language="C#" Value="public int GetScaledHeight (Android.Graphics.Canvas canvas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetScaledHeight(class Android.Graphics.Canvas canvas) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getScaledHeight", "(Landroid/graphics/Canvas;)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
      </Parameters>
      <Docs>
        <param name="canvas">To be added.</param>
        <summary tool="true">Convenience for calling <c><see cref="M:Android.Graphics.Bitmap.GetScaledHeight(System.Int32)" /></c> with the target
 density of the given <c><see cref="T:Android.Graphics.Canvas" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="GetScaledHeight">
      <MemberSignature Language="C#" Value="public int GetScaledHeight (Android.Util.DisplayMetrics metrics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetScaledHeight(class Android.Util.DisplayMetrics metrics) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getScaledHeight", "(Landroid/util/DisplayMetrics;)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metrics" Type="Android.Util.DisplayMetrics" />
      </Parameters>
      <Docs>
        <param name="metrics">To be added.</param>
        <summary>Convenience for calling <c><see cref="M:Android.Graphics.Bitmap.GetScaledHeight(System.Int32)" /></c> with the target
 density of the given <c><see cref="T:Android.Util.DisplayMetrics" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="GetScaledHeight">
      <MemberSignature Language="C#" Value="public int GetScaledHeight (int targetDensity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetScaledHeight(int32 targetDensity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getScaledHeight", "(I)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDensity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="targetDensity">The density of the target canvas of the bitmap.</param>
        <summary>Convenience method that returns the height of this bitmap divided
 by the density scale factor.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="GetScaledWidth">
      <MemberSignature Language="C#" Value="public int GetScaledWidth (Android.Graphics.Canvas canvas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetScaledWidth(class Android.Graphics.Canvas canvas) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getScaledWidth", "(Landroid/graphics/Canvas;)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
      </Parameters>
      <Docs>
        <param name="canvas">To be added.</param>
        <summary tool="true">Convenience for calling <c><see cref="M:Android.Graphics.Bitmap.GetScaledWidth(System.Int32)" /></c> with the target
 density of the given <c><see cref="T:Android.Graphics.Canvas" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="GetScaledWidth">
      <MemberSignature Language="C#" Value="public int GetScaledWidth (Android.Util.DisplayMetrics metrics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetScaledWidth(class Android.Util.DisplayMetrics metrics) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getScaledWidth", "(Landroid/util/DisplayMetrics;)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metrics" Type="Android.Util.DisplayMetrics" />
      </Parameters>
      <Docs>
        <param name="metrics">To be added.</param>
        <summary>Convenience for calling <c><see cref="M:Android.Graphics.Bitmap.GetScaledWidth(System.Int32)" /></c> with the target
 density of the given <c><see cref="T:Android.Util.DisplayMetrics" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="GetScaledWidth">
      <MemberSignature Language="C#" Value="public int GetScaledWidth (int targetDensity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetScaledWidth(int32 targetDensity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getScaledWidth", "(I)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDensity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="targetDensity">The density of the target canvas of the bitmap.</param>
        <summary>Convenience method that returns the width of this bitmap divided
 by the density scale factor.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="HasAlpha">
      <MemberSignature Language="C#" Value="public bool HasAlpha { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAlpha" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("hasAlpha", "()Z", "GetHasAlphaHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setHasAlpha", "(Z)V", "GetSetHasAlpha_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if the bitmap's config supports per-pixel alpha, and
 if the pixels may contain non-opaque alpha values.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HasMipMap">
      <MemberSignature Language="C#" Value="public bool HasMipMap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasMipMap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("hasMipMap", "()Z", "GetHasMipMapHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setHasMipMap", "(Z)V", "GetSetHasMipMap_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether the renderer responsible for drawing this
 bitmap should attempt to use mipmaps when this bitmap is drawn
 scaled down.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 17" />
        <altmember cref="P:Android.Graphics.Bitmap.HasMipMap" />
        <altmember cref="P:Android.Graphics.Bitmap.HasMipMap" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public int Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getHeight", "()I", "GetGetHeightHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setHeight", "(I)V", "GetSetHeight_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the bitmap's height </summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Graphics.Bitmap.Reconfigure(System.Int32, System.Int32, System.Int32)" />
        <altmember cref="P:Android.Graphics.Bitmap.Width" />
        <altmember cref="M:Android.Graphics.Bitmap.SetConfig(.Config)" />
      </Docs>
    </Member>
    <Member MemberName="IsMutable">
      <MemberSignature Language="C#" Value="public bool IsMutable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isMutable", "()Z", "GetIsMutableHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">Returns true if the bitmap is marked as mutable (i.e. can be drawn into)
</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsRecycled">
      <MemberSignature Language="C#" Value="public bool IsRecycled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRecycled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isRecycled", "()Z", "GetIsRecycledHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this bitmap has been recycled.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LockPixels">
      <MemberSignature Language="C#" Value="public IntPtr LockPixels ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int LockPixels() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Premultiplied">
      <MemberSignature Language="C#" Value="public bool Premultiplied { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Premultiplied" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isPremultiplied", "()Z", "GetIsPremultipliedHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setPremultiplied", "(Z)V", "GetSetPremultiplied_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">Indicates whether pixels stored in this bitmaps are stored pre-multiplied.</summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Graphics.Bitmap.Premultiplied" />
        <altmember cref="P:Android.Graphics.Bitmap.Premultiplied" />
      </Docs>
    </Member>
    <Member MemberName="PrepareToDraw">
      <MemberSignature Language="C#" Value="public void PrepareToDraw ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrepareToDraw() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("prepareToDraw", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rebuilds any caches associated with the bitmap that are used for
 drawing it.</summary>
        <remarks />
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="Reconfigure">
      <MemberSignature Language="C#" Value="public void Reconfigure (int width, int height, Android.Graphics.Bitmap.Config config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reconfigure(int32 width, int32 height, class Android.Graphics.Bitmap/Config config) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("reconfigure", "(IILandroid/graphics/Bitmap$Config;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="config" Type="Android.Graphics.Bitmap+Config" />
      </Parameters>
      <Docs>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <param name="config">To be added.</param>
        <summary>
        </summary>
        <remarks />
        <altmember cref="P:Android.Graphics.Bitmap.Width" />
        <altmember cref="P:Android.Graphics.Bitmap.Height" />
        <altmember cref="M:Android.Graphics.Bitmap.SetConfig(.Config)" />
      </Docs>
    </Member>
    <Member MemberName="Recycle">
      <MemberSignature Language="C#" Value="public void Recycle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Recycle() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("recycle", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Free the native object associated with this bitmap, and clear the
 reference to the pixel data.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RowBytes">
      <MemberSignature Language="C#" Value="public int RowBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getRowBytes", "()I", "GetGetRowBytesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the number of bytes between rows in the bitmap's pixels.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SameAs">
      <MemberSignature Language="C#" Value="public bool SameAs (Android.Graphics.Bitmap other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SameAs(class Android.Graphics.Bitmap other) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sameAs", "(Landroid/graphics/Bitmap;)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>Given another bitmap, return true if it has the same dimensions, config,
  and pixel data as this bitmap.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="SetConfig">
      <MemberSignature Language="C#" Value="public void SetConfig (Android.Graphics.Bitmap.Config config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetConfig(class Android.Graphics.Bitmap/Config config) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setConfig", "(Landroid/graphics/Bitmap$Config;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="config" Type="Android.Graphics.Bitmap+Config" />
      </Parameters>
      <Docs>
        <param name="config">To be added.</param>
        <summary>
        </summary>
        <remarks />
        <altmember cref="M:Android.Graphics.Bitmap.Reconfigure(System.Int32, System.Int32, System.Int32)" />
        <altmember cref="P:Android.Graphics.Bitmap.Width" />
        <altmember cref="P:Android.Graphics.Bitmap.Height" />
      </Docs>
    </Member>
    <Member MemberName="SetPixel">
      <MemberSignature Language="C#" Value="public void SetPixel (int x, int y, Android.Graphics.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPixel(int32 x, int32 y, valuetype Android.Graphics.Color color) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPixel", "(III)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="color" Type="Android.Graphics.Color" />
      </Parameters>
      <Docs>
        <param name="x">The x coordinate of the pixel to replace (0...width-1)</param>
        <param name="y">The y coordinate of the pixel to replace (0...height-1)</param>
        <param name="color">The ARGB color to write into the bitmap</param>
        <summary tool="true">
        </summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if the bitmap is not mutable</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if x, y are outside of the bitmap's
         bounds.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetPixels">
      <MemberSignature Language="C#" Value="public void SetPixels (int[] pixels, int offset, int stride, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPixels(int32[] pixels, int32 offset, int32 stride, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPixels", "([IIIIIII)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pixels" Type="System.Int32[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pixels">The colors to write to the bitmap</param>
        <param name="offset">The index of the first color to read from pixels[]</param>
        <param name="stride">The number of colors in pixels[] to skip between rows.
                 Normally this value will be the same as the width of
                 the bitmap, but it can be larger (or negative).</param>
        <param name="x">The x coordinate of the first pixel to write to in
                 the bitmap.</param>
        <param name="y">The y coordinate of the first pixel to write to in
                 the bitmap.</param>
        <param name="width">The number of colors to copy from pixels[] per row</param>
        <param name="height">The number of rows to write to the bitmap</param>
        <summary>
        </summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if the bitmap is not mutable</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if x, y, width, height are outside of
         the bitmap's bounds.</exception>
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if the pixels array is too small
         to receive the specified number of pixels.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="UnlockPixels">
      <MemberSignature Language="C#" Value="public void UnlockPixels ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnlockPixels() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public int Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getWidth", "()I", "GetGetWidthHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setWidth", "(I)V", "GetSetWidth_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the bitmap's width </summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Graphics.Bitmap.Reconfigure(System.Int32, System.Int32, System.Int32)" />
        <altmember cref="P:Android.Graphics.Bitmap.Height" />
        <altmember cref="M:Android.Graphics.Bitmap.SetConfig(.Config)" />
      </Docs>
    </Member>
    <Member MemberName="WriteToParcel">
      <MemberSignature Language="C#" Value="public void WriteToParcel (Android.OS.Parcel p, Android.OS.ParcelableWriteFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteToParcel(class Android.OS.Parcel p, valuetype Android.OS.ParcelableWriteFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeToParcel", "(Landroid/os/Parcel;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p" Type="Android.OS.Parcel" />
        <Parameter Name="flags" Type="Android.OS.ParcelableWriteFlags" />
      </Parameters>
      <Docs>
        <param name="p">Parcel object to write the bitmap data into
</param>
        <param name="flags">Additional flags about how the object should be written.
 May be 0 or <c><see cref="F:Android.OS.Parcelable.ParcelableWriteReturnValue" /></c>.
</param>
        <summary>Write the bitmap and its pixels to the parcel.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
