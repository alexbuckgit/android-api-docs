<Type Name="SAXParseException" FullName="Org.Xml.Sax.SAXParseException">
  <TypeSignature Language="C#" Value="public class SAXParseException : Org.Xml.Sax.SAXException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SAXParseException extends Org.Xml.Sax.SAXException" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Org.Xml.Sax.SAXException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("org/xml/sax/SAXParseException", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Encapsulate an XML parse error or warning.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Encapsulate an XML parse error or warning.

 <format type="text/html"><blockquote><i>This module, both source code and documentation, is in the
 Public Domain, and comes with <i>NO WARRANTY</i>.</i>
 See 
 for further information.
 </blockquote></format></para>
      <para tool="javadoc-to-mdoc">This exception may include information for locating the error
 in the original XML document, as if it came from a <c><see cref="T:Org.Xml.Sax.ILocator" /></c>
 object.  Note that although the application
 will receive a SAXParseException as the argument to the handlers
 in the <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c> interface,
 the application is not actually required to throw the exception;
 instead, it can simply read the information in it and take a
 different action.</para>
      <para tool="javadoc-to-mdoc">Since this exception is a subclass of <c><see cref="T:Org.Xml.Sax.SAXException" /></c>, it inherits the ability to wrap another exception.</para>
      <format type="text/html">
        <h5 class="jd-tagtitle">See Also</h5>
      </format>
      <list type="bullet">
        <item>
          <term>
            <c>
              <see cref="T:Org.Xml.Sax.SAXException" />
            </c>
          </term>
        </item>
        <item>
          <term>
            <c>
              <see cref="T:Org.Xml.Sax.ILocator" />
            </c>
          </term>
        </item>
        <item>
          <term>
            <c>
              <see cref="T:Org.Xml.Sax.IErrorHandler" />
            </c>
          </term>
        </item>
      </list>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/org/xml/sax/SAXParseException.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SAXParseException (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SAXParseException (string message, Org.Xml.Sax.ILocator locator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class Org.Xml.Sax.ILocator locator) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;Lorg/xml/sax/Locator;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="locator" Type="Org.Xml.Sax.ILocator" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <param name="locator">To be added.</param>
        <summary>Create a new SAXParseException from a message and a Locator.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new SAXParseException from a message and a Locator.

 </para>
          <para tool="javadoc-to-mdoc">This constructor is especially useful when an application is
 creating its own exception from within a <c><see cref="T:Org.Xml.Sax.IContentHandler" /></c> callback.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/SAXParseException.html#SAXParseException(java.lang.String, org.xml.sax.Locator)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Org.Xml.Sax.ILocator" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SAXParseException (string message, Org.Xml.Sax.ILocator locator, Java.Lang.Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class Org.Xml.Sax.ILocator locator, class Java.Lang.Exception e) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;Lorg/xml/sax/Locator;Ljava/lang/Exception;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="locator" Type="Org.Xml.Sax.ILocator" />
        <Parameter Name="e" Type="Java.Lang.Exception" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <param name="locator">To be added.</param>
        <param name="e">To be added.</param>
        <summary>Wrap an existing exception in a SAXParseException.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Wrap an existing exception in a SAXParseException.

 </para>
          <para tool="javadoc-to-mdoc">This constructor is especially useful when an application is
 creating its own exception from within a <c><see cref="T:Org.Xml.Sax.IContentHandler" /></c> callback, and needs to wrap an existing exception that is not a
 subclass of <c><see cref="T:Org.Xml.Sax.SAXException" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/SAXParseException.html#SAXParseException(java.lang.String, org.xml.sax.Locator, java.lang.Exception)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Org.Xml.Sax.ILocator" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SAXParseException (string message, string publicId, string systemId, int lineNumber, int columnNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, string publicId, string systemId, int32 lineNumber, int32 columnNumber) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;II)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="publicId" Type="System.String" />
        <Parameter Name="systemId" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="columnNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <param name="publicId">To be added.</param>
        <param name="systemId">To be added.</param>
        <param name="lineNumber">To be added.</param>
        <param name="columnNumber">To be added.</param>
        <summary>Create a new SAXParseException.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new SAXParseException.

 </para>
          <para tool="javadoc-to-mdoc">This constructor is most useful for parser writers.</para>
          <para tool="javadoc-to-mdoc">All parameters except the message are as if
 they were provided by a <c><see cref="T:Org.Xml.Sax.ILocator" /></c>.  For example, if the
 system identifier is a URL (including relative filename), the
 caller must resolve it fully before creating the exception.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/SAXParseException.html#SAXParseException(java.lang.String, java.lang.String, java.lang.String, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SAXParseException (string message, string publicId, string systemId, int lineNumber, int columnNumber, Java.Lang.Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, string publicId, string systemId, int32 lineNumber, int32 columnNumber, class Java.Lang.Exception e) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IILjava/lang/Exception;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="publicId" Type="System.String" />
        <Parameter Name="systemId" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="columnNumber" Type="System.Int32" />
        <Parameter Name="e" Type="Java.Lang.Exception" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <param name="publicId">To be added.</param>
        <param name="systemId">To be added.</param>
        <param name="lineNumber">To be added.</param>
        <param name="columnNumber">To be added.</param>
        <param name="e">To be added.</param>
        <summary>Create a new SAXParseException with an embedded exception.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new SAXParseException with an embedded exception.

 </para>
          <para tool="javadoc-to-mdoc">This constructor is most useful for parser writers who
 need to wrap an exception that is not a subclass of
 <c><see cref="T:Org.Xml.Sax.SAXException" /></c>.</para>
          <para tool="javadoc-to-mdoc">All parameters except the message and exception are as if
 they were provided by a <c><see cref="T:Org.Xml.Sax.ILocator" /></c>.  For example, if the
 system identifier is a URL (including relative filename), the
 caller must resolve it fully before creating the exception.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/SAXParseException.html#SAXParseException(java.lang.String, java.lang.String, java.lang.String, int, int, java.lang.Exception)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ColumnNumber">
      <MemberSignature Language="C#" Value="public virtual int ColumnNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getColumnNumber", "()I", "GetGetColumnNumberHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The column number of the end of the text where the exception occurred.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">The column number of the end of the text where the exception occurred.

 </para>
          <para tool="javadoc-to-mdoc">The first column in a line is position 1.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/SAXParseException.html#getColumnNumber()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Org.Xml.Sax.ILocator.ColumnNumber" />
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public virtual int LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLineNumber", "()I", "GetGetLineNumberHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The line number of the end of the text where the exception occurred.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">The line number of the end of the text where the exception occurred.

 </para>
          <para tool="javadoc-to-mdoc">The first line is line 1.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/SAXParseException.html#getLineNumber()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Org.Xml.Sax.ILocator.LineNumber" />
      </Docs>
    </Member>
    <Member MemberName="PublicId">
      <MemberSignature Language="C#" Value="public virtual string PublicId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PublicId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPublicId", "()Ljava/lang/String;", "GetGetPublicIdHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the public identifier of the entity where the exception occurred.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the public identifier of the entity where the exception occurred.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/SAXParseException.html#getPublicId()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Org.Xml.Sax.ILocator.PublicId" />
      </Docs>
    </Member>
    <Member MemberName="SystemId">
      <MemberSignature Language="C#" Value="public virtual string SystemId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SystemId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSystemId", "()Ljava/lang/String;", "GetGetSystemIdHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the system identifier of the entity where the exception occurred.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the system identifier of the entity where the exception occurred.

 </para>
          <para tool="javadoc-to-mdoc">If the system identifier is a URL, it will have been resolved
 fully.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/SAXParseException.html#getSystemId()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Org.Xml.Sax.ILocator.SystemId" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>