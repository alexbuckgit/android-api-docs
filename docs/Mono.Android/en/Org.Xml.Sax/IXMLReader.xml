<Type Name="IXMLReader" FullName="Org.Xml.Sax.IXMLReader">
  <TypeSignature Language="C#" Value="public interface IXMLReader : Android.Runtime.IJavaObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IXMLReader implements class Android.Runtime.IJavaObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("org/xml/sax/XMLReader", "", "Org.Xml.Sax.IXMLReaderInvoker")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface for reading an XML document using callbacks.</summary>
    <remarks><para tool="javadoc-to-mdoc">Interface for reading an XML document using callbacks.

 <format type="text/html"><blockquote><i>This module, both source code and documentation, is in the
 Public Domain, and comes with <i>NO WARRANTY</i>.</i>
 See 
 for further information.
 </blockquote></format><list type="number"><item><term>it adds a standard way to query and set features and
  properties; and</term></item><item><term>it adds Namespace support, which is required for many
  higher-level XML standards.</term></item></list></para><para tool="javadoc-to-mdoc"><i>Note:</i> despite its name, this interface does
 <i>not</i> extend the standard Java <c><see cref="T:Java.IO.Reader" /></c>
 interface, because reading XML is a fundamentally different activity
 than reading character data.</para><para tool="javadoc-to-mdoc">XMLReader is the interface that an XML parser's SAX2 driver must
 implement.  This interface allows an application to set and
 query features and properties in the parser, to register
 event handlers for document processing, and to initiate
 a document parse.</para><para tool="javadoc-to-mdoc">All SAX interfaces are assumed to be synchronous: the
 <c><see cref="M:Org.Xml.Sax.IXMLReader.Parse(System.String)" /></c> methods must not return until parsing
 is complete, and readers must wait for an event-handler callback
 to return before reporting the next event.</para><para tool="javadoc-to-mdoc">This interface replaces the (now deprecated) SAX 1.0 <c><see cref="T:Org.Xml.Sax.IParser" /></c> interface.  The XMLReader interface
 contains two important enhancements over the old Parser
 interface (as well as some minor ones):</para><para tool="javadoc-to-mdoc">There are adapters available to convert a SAX1 Parser to
 a SAX2 XMLReader and vice-versa.<format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="T:Org.Xml.Sax.IXMLFilter" /></c></term></item><item><term><c><see cref="T:Org.Xml.Sax.Helpers.ParserAdapter" /></c></term></item><item><term><c><see cref="T:Org.Xml.Sax.Helpers.XMLReaderAdapter" /></c></term></item></list></para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/org/xml/sax/XMLReader.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="ContentHandler">
      <MemberSignature Language="C#" Value="public Org.Xml.Sax.IContentHandler ContentHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.Xml.Sax.IContentHandler ContentHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getContentHandler", "()Lorg/xml/sax/ContentHandler;", "GetGetContentHandlerHandler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setContentHandler", "(Lorg/xml/sax/ContentHandler;)V", "GetSetContentHandler_Lorg_xml_sax_ContentHandler_Handler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Xml.Sax.IContentHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the current content handler.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/org/xml/sax/XMLReader.html#getContentHandler()" target="_blank">[Android Documentation]</a><br /></format>Return the current content handler.</para><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/org/xml/sax/XMLReader.html#setContentHandler(org.xml.sax.ContentHandler)" target="_blank">[Android Documentation]</a><br /></format>Allow an application to register a content event handler.

 </para><para tool="javadoc-to-mdoc">If the application does not register a content handler, all
 content events reported by the SAX parser will be silently
 ignored.</para><para tool="javadoc-to-mdoc">Applications may register a new or different handler in the
 middle of a parse, and the SAX parser must begin using the new
 handler immediately.</para></remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Org.Xml.Sax.IXMLReader.ContentHandler" />
        <altmember cref="P:Org.Xml.Sax.IXMLReader.ContentHandler" />
      </Docs>
    </Member>
    <Member MemberName="DTDHandler">
      <MemberSignature Language="C#" Value="public Org.Xml.Sax.IDTDHandler DTDHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.Xml.Sax.IDTDHandler DTDHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDTDHandler", "()Lorg/xml/sax/DTDHandler;", "GetGetDTDHandlerHandler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setDTDHandler", "(Lorg/xml/sax/DTDHandler;)V", "GetSetDTDHandler_Lorg_xml_sax_DTDHandler_Handler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Xml.Sax.IDTDHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the current DTD handler.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/org/xml/sax/XMLReader.html#getDTDHandler()" target="_blank">[Android Documentation]</a><br /></format>Return the current DTD handler.</para><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/org/xml/sax/XMLReader.html#setDTDHandler(org.xml.sax.DTDHandler)" target="_blank">[Android Documentation]</a><br /></format>Allow an application to register a DTD event handler.

 </para><para tool="javadoc-to-mdoc">If the application does not register a DTD handler, all DTD
 events reported by the SAX parser will be silently ignored.</para><para tool="javadoc-to-mdoc">Applications may register a new or different handler in the
 middle of a parse, and the SAX parser must begin using the new
 handler immediately.</para></remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Org.Xml.Sax.IXMLReader.DTDHandler" />
        <altmember cref="P:Org.Xml.Sax.IXMLReader.DTDHandler" />
      </Docs>
    </Member>
    <Member MemberName="EntityResolver">
      <MemberSignature Language="C#" Value="public Org.Xml.Sax.IEntityResolver EntityResolver { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.Xml.Sax.IEntityResolver EntityResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getEntityResolver", "()Lorg/xml/sax/EntityResolver;", "GetGetEntityResolverHandler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setEntityResolver", "(Lorg/xml/sax/EntityResolver;)V", "GetSetEntityResolver_Lorg_xml_sax_EntityResolver_Handler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Xml.Sax.IEntityResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the current entity resolver.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/org/xml/sax/XMLReader.html#getEntityResolver()" target="_blank">[Android Documentation]</a><br /></format>Return the current entity resolver.</para><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/org/xml/sax/XMLReader.html#setEntityResolver(org.xml.sax.EntityResolver)" target="_blank">[Android Documentation]</a><br /></format>Allow an application to register an entity resolver.

 </para><para tool="javadoc-to-mdoc">If the application does not register an entity resolver,
 the XMLReader will perform its own default resolution.</para><para tool="javadoc-to-mdoc">Applications may register a new or different resolver in the
 middle of a parse, and the SAX parser must begin using the new
 resolver immediately.</para></remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Org.Xml.Sax.IXMLReader.EntityResolver" />
        <altmember cref="P:Org.Xml.Sax.IXMLReader.EntityResolver" />
      </Docs>
    </Member>
    <Member MemberName="ErrorHandler">
      <MemberSignature Language="C#" Value="public Org.Xml.Sax.IErrorHandler ErrorHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.Xml.Sax.IErrorHandler ErrorHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getErrorHandler", "()Lorg/xml/sax/ErrorHandler;", "GetGetErrorHandlerHandler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setErrorHandler", "(Lorg/xml/sax/ErrorHandler;)V", "GetSetErrorHandler_Lorg_xml_sax_ErrorHandler_Handler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Xml.Sax.IErrorHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the current error handler.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/org/xml/sax/XMLReader.html#getErrorHandler()" target="_blank">[Android Documentation]</a><br /></format>Return the current error handler.</para><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/org/xml/sax/XMLReader.html#setErrorHandler(org.xml.sax.ErrorHandler)" target="_blank">[Android Documentation]</a><br /></format>Allow an application to register an error event handler.

 </para><para tool="javadoc-to-mdoc">If the application does not register an error handler, all
 error events reported by the SAX parser will be silently
 ignored; however, normal processing may not continue.  It is
 highly recommended that all SAX applications implement an
 error handler to avoid unexpected bugs.</para><para tool="javadoc-to-mdoc">Applications may register a new or different handler in the
 middle of a parse, and the SAX parser must begin using the new
 handler immediately.</para></remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Org.Xml.Sax.IXMLReader.ErrorHandler" />
        <altmember cref="P:Org.Xml.Sax.IXMLReader.ErrorHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetFeature">
      <MemberSignature Language="C#" Value="public bool GetFeature (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetFeature(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getFeature", "(Ljava/lang/String;)Z", "GetGetFeature_Ljava_lang_String_Handler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The feature name, which is a fully-qualified URI.</param>
        <summary>Look up the value of a feature flag.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Look up the value of a feature flag.

 <sample external-id="F2501AF92FF41EF41E7FA34BAC8C695F" /></para><para tool="javadoc-to-mdoc">The feature name is any fully-qualified URI.  It is
 possible for an XMLReader to recognize a feature name but
 temporarily be unable to return its value.
 Some feature values may be available only in specific
 contexts, such as before, during, or after a parse.
 Also, some feature values may not be programmatically accessible.
 (In the case of an adapter for SAX1 <c><see cref="T:Org.Xml.Sax.IParser" /></c>, there is no
 implementation-independent way to expose whether the underlying
 parser is performing validation, expanding external entities,
 and so forth.) </para><para tool="javadoc-to-mdoc">All XMLReaders are required to recognize the
 http://xml.org/sax/features/namespaces and the
 http://xml.org/sax/features/namespace-prefixes feature names.</para><para tool="javadoc-to-mdoc">Typical usage is something like this:</para><para tool="javadoc-to-mdoc">Implementors are free (and encouraged) to invent their own features,
 using names built on their own URIs.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/org/xml/sax/XMLReader.html#getFeature(java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXNotRecognizedException">If the feature
            value can't be assigned or retrieved.</exception>
        <exception cref="T:Org.Xml.Sax.SAXNotSupportedException">When the
            XMLReader recognizes the feature name but
            cannot determine its value at this time.</exception>
        <altmember cref="M:Org.Xml.Sax.IXMLReader.SetFeature(System.String, System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public Java.Lang.Object GetProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object GetProperty(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getProperty", "(Ljava/lang/String;)Ljava/lang/Object;", "GetGetProperty_Ljava_lang_String_Handler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The property name, which is a fully-qualified URI.</param>
        <summary>Look up the value of a property.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Look up the value of a property.

 </para><para tool="javadoc-to-mdoc">The property name is any fully-qualified URI.  It is
 possible for an XMLReader to recognize a property name but
 temporarily be unable to return its value.
 Some property values may be available only in specific
 contexts, such as before, during, or after a parse.</para><para tool="javadoc-to-mdoc">XMLReaders are not required to recognize any specific
 property names, though an initial core set is documented for
 SAX2.</para><para tool="javadoc-to-mdoc">Implementors are free (and encouraged) to invent their own properties,
 using names built on their own URIs.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/org/xml/sax/XMLReader.html#getProperty(java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXNotRecognizedException">If the property
            value can't be assigned or retrieved.</exception>
        <exception cref="T:Org.Xml.Sax.SAXNotSupportedException">When the
            XMLReader recognizes the property name but
            cannot determine its value at this time.</exception>
        <altmember cref="M:Org.Xml.Sax.IXMLReader.SetProperty(System.String, Java.Lang.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public void Parse (Org.Xml.Sax.InputSource input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Parse(class Org.Xml.Sax.InputSource input) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parse", "(Lorg/xml/sax/InputSource;)V", "GetParse_Lorg_xml_sax_InputSource_Handler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Org.Xml.Sax.InputSource" />
      </Parameters>
      <Docs>
        <param name="input">The input source for the top-level of the
        XML document.</param>
        <summary>Parse an XML document.</summary>
        <remarks><para tool="javadoc-to-mdoc">Parse an XML document.

 </para><para tool="javadoc-to-mdoc">The application can use this method to instruct the XML
 reader to begin parsing an XML document from any valid input
 source (a character stream, a byte stream, or a URI).</para><para tool="javadoc-to-mdoc">Applications may not invoke this method while a parse is in
 progress (they should create a new XMLReader instead for each
 nested XML document).  Once a parse is complete, an
 application may reuse the same XMLReader object, possibly with a
 different input source.
 Configuration of the XMLReader object (such as handler bindings and
 values established for feature flags and properties) is unchanged
 by completion of a parse, unless the definition of that aspect of
 the configuration explicitly specifies other behavior.
 (For example, feature flags or properties exposing
 characteristics of the document being parsed.)
 </para><para tool="javadoc-to-mdoc">During the parse, the XMLReader will provide information
 about the XML document through the registered event
 handlers.</para><para tool="javadoc-to-mdoc">This method is synchronous: it will not return until parsing
 has ended.  If a client application wants to terminate
 parsing early, it should throw an exception.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/org/xml/sax/XMLReader.html#parse(org.xml.sax.InputSource)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly
            wrapping another exception.</exception>
        <exception cref="T:Java.IO.IOException">An IO exception from the parser,
            possibly from a byte stream or character stream
            supplied by the application.</exception>
        <altmember cref="T:Org.Xml.Sax.InputSource" />
        <altmember cref="M:Org.Xml.Sax.IXMLReader.Parse(System.String)" />
        <altmember cref="P:Org.Xml.Sax.IXMLReader.EntityResolver" />
        <altmember cref="P:Org.Xml.Sax.IXMLReader.DTDHandler" />
        <altmember cref="P:Org.Xml.Sax.IXMLReader.ContentHandler" />
        <altmember cref="P:Org.Xml.Sax.IXMLReader.ErrorHandler" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public void Parse (string systemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Parse(string systemId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parse", "(Ljava/lang/String;)V", "GetParse_Ljava_lang_String_Handler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="systemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="systemId">The system identifier (URI).</param>
        <summary>Parse an XML document from a system identifier (URI).</summary>
        <remarks><para tool="javadoc-to-mdoc">Parse an XML document from a system identifier (URI).

 <example><code lang="java">
 parse(new InputSource(systemId));
 </code></example></para><para tool="javadoc-to-mdoc">This method is a shortcut for the common case of reading a
 document from a system identifier.  It is the exact
 equivalent of the following:</para><para tool="javadoc-to-mdoc">If the system identifier is a URL, it must be fully resolved
 by the application before it is passed to the parser.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/org/xml/sax/XMLReader.html#parse(java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly
            wrapping another exception.</exception>
        <exception cref="T:Java.IO.IOException">An IO exception from the parser,
            possibly from a byte stream or character stream
            supplied by the application.</exception>
        <altmember cref="M:Org.Xml.Sax.IXMLReader.Parse(Org.Xml.Sax.InputSource)" />
      </Docs>
    </Member>
    <Member MemberName="SetFeature">
      <MemberSignature Language="C#" Value="public void SetFeature (string name, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFeature(string name, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setFeature", "(Ljava/lang/String;Z)V", "GetSetFeature_Ljava_lang_String_ZHandler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">The feature name, which is a fully-qualified URI.</param>
        <param name="value">The requested value of the feature (true or false).</param>
        <summary>Set the value of a feature flag.</summary>
        <remarks><para tool="javadoc-to-mdoc">Set the value of a feature flag.

 </para><para tool="javadoc-to-mdoc">The feature name is any fully-qualified URI.  It is
 possible for an XMLReader to expose a feature value but
 to be unable to change the current value.
 Some feature values may be immutable or mutable only
 in specific contexts, such as before, during, or after
 a parse.</para><para tool="javadoc-to-mdoc">All XMLReaders are required to support setting
 http://xml.org/sax/features/namespaces to true and
 http://xml.org/sax/features/namespace-prefixes to false.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/org/xml/sax/XMLReader.html#setFeature(java.lang.String, boolean)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXNotRecognizedException">If the feature
            value can't be assigned or retrieved.</exception>
        <exception cref="T:Org.Xml.Sax.SAXNotSupportedException">When the
            XMLReader recognizes the feature name but
            cannot set the requested value.</exception>
        <altmember cref="M:Org.Xml.Sax.IXMLReader.GetFeature(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public void SetProperty (string name, Java.Lang.Object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetProperty(string name, class Java.Lang.Object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setProperty", "(Ljava/lang/String;Ljava/lang/Object;)V", "GetSetProperty_Ljava_lang_String_Ljava_lang_Object_Handler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="name">The property name, which is a fully-qualified URI.</param>
        <param name="value">The requested value for the property.</param>
        <summary>Set the value of a property.</summary>
        <remarks><para tool="javadoc-to-mdoc">Set the value of a property.

 </para><para tool="javadoc-to-mdoc">The property name is any fully-qualified URI.  It is
 possible for an XMLReader to recognize a property name but
 to be unable to change the current value.
 Some property values may be immutable or mutable only
 in specific contexts, such as before, during, or after
 a parse.</para><para tool="javadoc-to-mdoc">XMLReaders are not required to recognize setting
 any specific property names, though a core set is defined by
 SAX2.</para><para tool="javadoc-to-mdoc">This method is also the standard mechanism for setting
 extended handlers.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/org/xml/sax/XMLReader.html#setProperty(java.lang.String, java.lang.Object)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXNotRecognizedException">If the property
            value can't be assigned or retrieved.</exception>
        <exception cref="T:Org.Xml.Sax.SAXNotSupportedException">When the
            XMLReader recognizes the property name but
            cannot set the requested value.
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
