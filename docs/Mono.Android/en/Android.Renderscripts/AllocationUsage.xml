<Type Name="AllocationUsage" FullName="Android.Renderscripts.AllocationUsage">
  <TypeSignature Language="C#" Value="public enum AllocationUsage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed AllocationUsage extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Enumerates values returned by several methods of <see cref="T:Android.Renderscripts.AllocationUsage" /> and taken as a parameter of several methods of <see cref="T:Android.Renderscripts.Allocation" />.</summary>
    <remarks>Enumerates values returned by the following: <list type="bullet"><item><term><see cref="F:Android.Renderscripts.AllocationUsage.GraphicsConstants" /></term></item><item><term><see cref="F:Android.Renderscripts.AllocationUsage.GraphicsRenderTarget" /></term></item><item><term><see cref="F:Android.Renderscripts.AllocationUsage.GraphicsTexture" /></term></item><item><term><see cref="F:Android.Renderscripts.AllocationUsage.GraphicsVertex" /></term></item><item><term><see cref="F:Android.Renderscripts.AllocationUsage.IoInput" /></term></item><item><term><see cref="F:Android.Renderscripts.AllocationUsage.IoOutput" /></term></item><item><term><see cref="F:Android.Renderscripts.AllocationUsage.Script" /></term></item><item><term><see cref="F:Android.Renderscripts.AllocationUsage.Shared" /></term></item></list>
 and taken as a parameter of the following: <list type="bullet"><item><term><see cref="F:Android.Renderscripts.Allocation.CreateCubemapFromBitmap" /></term></item><item><term><see cref="F:Android.Renderscripts.Allocation.CreateCubemapFromCubeFaces" /></term></item><item><term><see cref="F:Android.Renderscripts.Allocation.CreateFromBitmap" /></term></item><item><term><see cref="F:Android.Renderscripts.Allocation.CreateFromBitmapResource" /></term></item><item><term><see cref="F:Android.Renderscripts.Allocation.CreateFromString" /></term></item><item><term><see cref="F:Android.Renderscripts.Allocation.CreateSized" /></term></item><item><term><see cref="F:Android.Renderscripts.Allocation.CreateTyped" /></term></item><item><term><see cref="F:Android.Renderscripts.Allocation.CreateTyped" /></term></item></list>
.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GraphicsConstants">
      <MemberSignature Language="C#" Value="GraphicsConstants" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Renderscripts.AllocationUsage GraphicsConstants = int32(8)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.AllocationUsage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">GRAPHICS_CONSTANTS The allocation will be used as the source
 of shader constants by one or more programs.

</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="GraphicsRenderTarget">
      <MemberSignature Language="C#" Value="GraphicsRenderTarget" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Renderscripts.AllocationUsage GraphicsRenderTarget = int32(16)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.AllocationUsage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">USAGE_GRAPHICS_RENDER_TARGET The allocation will be used as a
 target for offscreen rendering

</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="GraphicsTexture">
      <MemberSignature Language="C#" Value="GraphicsTexture" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Renderscripts.AllocationUsage GraphicsTexture = int32(2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.AllocationUsage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">GRAPHICS_TEXTURE The allocation will be used as a texture
 source by one or more graphics programs.

</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="GraphicsVertex">
      <MemberSignature Language="C#" Value="GraphicsVertex" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Renderscripts.AllocationUsage GraphicsVertex = int32(4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.AllocationUsage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">GRAPHICS_VERTEX The allocation will be used as a graphics
 mesh.

</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="IoInput">
      <MemberSignature Language="C#" Value="IoInput" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Renderscripts.AllocationUsage IoInput = int32(32)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.AllocationUsage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">USAGE_IO_INPUT The allocation will be used as SurfaceTexture
 consumer.  This usage will cause the allocation to be created
 read only.

</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="IoOutput">
      <MemberSignature Language="C#" Value="IoOutput" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Renderscripts.AllocationUsage IoOutput = int32(64)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.AllocationUsage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">USAGE_IO_OUTPUT The allocation will be used as a
 SurfaceTexture producer.  The dimensions and format of the
 SurfaceTexture will be forced to those of the allocation.

</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Script">
      <MemberSignature Language="C#" Value="Script" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Renderscripts.AllocationUsage Script = int32(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.AllocationUsage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">The usage of the allocation.  These signal to renderscript
 where to place the allocation in memory.

 SCRIPT The allocation will be bound to and accessed by
 scripts.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Shared">
      <MemberSignature Language="C#" Value="Shared" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Renderscripts.AllocationUsage Shared = int32(128)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.AllocationUsage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">USAGE_SHARED The allocation's backing store will be inherited
 from another object (usually a Bitmap); calling appropriate
 copy methods will be significantly faster than if the entire
 allocation were copied every time.

 This is set by default for allocations created with
 CreateFromBitmap(RenderScript, Bitmap) in API version 18 and
 higher.

</para>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>