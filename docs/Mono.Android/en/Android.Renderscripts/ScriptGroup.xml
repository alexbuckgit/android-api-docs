<Type Name="ScriptGroup" FullName="Android.Renderscripts.ScriptGroup">
  <TypeSignature Language="C#" Value="public sealed class ScriptGroup : Android.Renderscripts.BaseObj" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ScriptGroup extends Android.Renderscripts.BaseObj" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Renderscripts.BaseObj</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/renderscript/ScriptGroup", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="17">
    <summary>A group of kernels that are executed
 together with one execution call as if they were a single kernel
 </summary>
    <remarks>
      <para tool="javadoc-to-mdoc">A group of kernels that are executed
 together with one execution call as if they were a single kernel
 </para>
      <para tool="javadoc-to-mdoc">
 In addition to kernels, a script group may contain invocable functions as well.
 A script group may take inputs and generate outputs, which are consumed and
 produced by its member kernels.
 Inside a script group, outputs from one kernel can be passed to another kernel as inputs.
 The API disallows cyclic dependencies among kernels in a script group,
 effectively making it a directed acyclic graph (DAG) of kernels.
 </para>
      <para tool="javadoc-to-mdoc">
 Grouping kernels together allows for more efficient execution. For example,
 runtime and compiler optimization can be applied to reduce computation and
 communication overhead, and to make better use of the CPU and the GPU.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/renderscript/ScriptGroup.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 17" />
  </Docs>
  <Members>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Execute() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("execute", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Execute the ScriptGroup.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Execute the ScriptGroup.  This will run all the kernels in
 the ScriptGroup.  No internal connection results will be visible
 after execution of the ScriptGroup.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/ScriptGroup.html#execute()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="SetInput">
      <MemberSignature Language="C#" Value="public void SetInput (Android.Renderscripts.Script.KernelID s, Android.Renderscripts.Allocation a);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetInput(class Android.Renderscripts.Script/KernelID s, class Android.Renderscripts.Allocation a) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setInput", "(Landroid/renderscript/Script$KernelID;Landroid/renderscript/Allocation;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="Android.Renderscripts.Script+KernelID" />
        <Parameter Name="a" Type="Android.Renderscripts.Allocation" />
      </Parameters>
      <Docs>
        <param name="s">The ID of the kernel where the allocation should be
          connected.</param>
        <param name="a">The allocation to connect.
</param>
        <summary>Sets an input of the ScriptGroup.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets an input of the ScriptGroup. This specifies an
 Allocation to be used for kernels that require an input
 Allocation provided from outside of the ScriptGroup.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/ScriptGroup.html#setInput(android.renderscript.Script.KernelID, android.renderscript.Allocation)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="SetOutput">
      <MemberSignature Language="C#" Value="public void SetOutput (Android.Renderscripts.Script.KernelID s, Android.Renderscripts.Allocation a);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutput(class Android.Renderscripts.Script/KernelID s, class Android.Renderscripts.Allocation a) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOutput", "(Landroid/renderscript/Script$KernelID;Landroid/renderscript/Allocation;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="Android.Renderscripts.Script+KernelID" />
        <Parameter Name="a" Type="Android.Renderscripts.Allocation" />
      </Parameters>
      <Docs>
        <param name="s">The ID of the kernel where the allocation should be
          connected.</param>
        <param name="a">The allocation to connect.
</param>
        <summary>Sets an output of the ScriptGroup.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets an output of the ScriptGroup. This specifies an
 Allocation to be used for the kernels that require an output
 Allocation visible after the ScriptGroup is executed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/ScriptGroup.html#setOutput(android.renderscript.Script.KernelID, android.renderscript.Allocation)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
