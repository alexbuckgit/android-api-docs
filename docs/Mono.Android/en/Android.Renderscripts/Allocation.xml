<Type Name="Allocation" FullName="Android.Renderscripts.Allocation">
  <TypeSignature Language="C#" Value="public class Allocation : Android.Renderscripts.BaseObj" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Allocation extends Android.Renderscripts.BaseObj" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Renderscripts.BaseObj</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/renderscript/Allocation", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <list type="bullet">
        <item>
          <term>Script: accessable by RS scripts.</term>
        </item>
        <item>
          <term>Graphics Texture: accessable as a graphics texture.</term>
        </item>
        <item>
          <term>Graphics Vertex: accessable as graphical vertex data.</term>
        </item>
        <item>
          <term>Graphics Constants: Accessable as constants in user shaders</term>
        </item>
      </list>
    </summary>
    <remarks>
      <para tool="javadoc-to-mdoc">
        <list type="bullet">
          <item>
            <term>Script: accessable by RS scripts.</term>
          </item>
          <item>
            <term>Graphics Texture: accessable as a graphics texture.</term>
          </item>
          <item>
            <term>Graphics Vertex: accessable as graphical vertex data.</term>
          </item>
          <item>
            <term>Graphics Constants: Accessable as constants in user shaders</term>
          </item>
        </list>
      </para>
      <para tool="javadoc-to-mdoc">
 Memory allocation class for renderscript.  An allocation combines a
 <c><see cref="T:Android.Renderscripts.Type" /></c> with the memory to provide storage for user data and objects.
 This implies that all memory in Renderscript is typed.
 </para>
      <para tool="javadoc-to-mdoc">Allocations are the primary way data moves into and out of scripts. Memory is user
 synchronized and it's possible for allocations to exist in multiple memory spaces
 concurrently. Currently those spaces are:</para>
      <para tool="javadoc-to-mdoc">
 For example, when creating a allocation for a texture, the user can
 specify its memory spaces as both script and textures. This means that it can both
 be used as script binding and as a GPU texture for rendering. To maintain
 synchronization if a script modifies an allocation used by other targets it must
 call a synchronizing function to push the updates to the memory, otherwise the results
 are undefined.
 </para>
      <para tool="javadoc-to-mdoc">By default, Android system side updates are always applied to the script accessable
 memory. If this is not present, they are then applied to the various HW
 memory types.  A <c><see cref="M:Android.Renderscripts.Allocation.SyncAll(System.Int32)" /></c>
 call is necessary after the script data is updated to
 keep the other memory spaces in sync.</para>
      <para tool="javadoc-to-mdoc">Allocation data is uploaded in one of two primary ways. For simple
 arrays there are copyFrom() functions that take an array from the control code and
 copy it to the slave memory store. Both type checked and unchecked copies are provided.
 The unchecked variants exist to allow apps to copy over arrays of structures from a
 control language that does not support structures.<format type="text/html"><h3>Developer Guides</h3></format></para>
      <para tool="javadoc-to-mdoc">For more information about creating an application that uses Renderscript, read the
 <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/renderscript/index.html">Renderscript</a></format> developer guide.</para>
      <para tool="javadoc-to-mdoc" />
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/renderscript/Allocation.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 11" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Allocation (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BytesSize">
      <MemberSignature Language="C#" Value="public virtual int BytesSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BytesSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getBytesSize", "()I", "GetGetBytesSizeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the size of the Allocation in bytes.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the size of the Allocation in bytes.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#getBytesSize()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeFrom">
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeFrom (int off, int count, byte[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeFrom(int32 off, int32 count, unsigned int8[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copy1DRangeFrom", "(II[B)V", "GetCopy1DRangeFrom_IIarrayBHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="d" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="d">the source data array
</param>
        <summary>Copy part of an allocation from an array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy part of an allocation from an array.  This variant is
 type checked and will generate exceptions if the Allocation
 type is not a 8 bit integer type.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copy1DRangeFrom(int, int, byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeFrom">
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeFrom (int off, int count, short[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeFrom(int32 off, int32 count, int16[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copy1DRangeFrom", "(II[S)V", "GetCopy1DRangeFrom_IIarraySHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="d" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="d">the source data array
</param>
        <summary>Copy part of an allocation from an array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy part of an allocation from an array.  This variant is
 type checked and will generate exceptions if the Allocation
 type is not a 16 bit integer type.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copy1DRangeFrom(int, int, short[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeFrom">
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeFrom (int off, int count, int[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeFrom(int32 off, int32 count, int32[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copy1DRangeFrom", "(II[I)V", "GetCopy1DRangeFrom_IIarrayIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="d" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="d">the source data array
</param>
        <summary>Copy part of an allocation from an array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy part of an allocation from an array.  This variant is
 type checked and will generate exceptions if the Allocation
 type is not a 32 bit integer type.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copy1DRangeFrom(int, int, int[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeFrom">
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeFrom (int off, int count, float[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeFrom(int32 off, int32 count, float32[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copy1DRangeFrom", "(II[F)V", "GetCopy1DRangeFrom_IIarrayFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="d" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="d">the source data array.
</param>
        <summary>Copy part of an allocation from an array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy part of an allocation from an array.  This variant is
 type checked and will generate exceptions if the Allocation
 type is not a 32 bit float type.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copy1DRangeFrom(int, int, float[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeFrom">
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeFrom (int off, int count, Android.Renderscripts.Allocation data, int dataOff);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeFrom(int32 off, int32 count, class Android.Renderscripts.Allocation data, int32 dataOff) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copy1DRangeFrom", "(IILandroid/renderscript/Allocation;I)V", "GetCopy1DRangeFrom_IILandroid_renderscript_Allocation_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="data" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="dataOff" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="data">the source data allocation.</param>
        <param name="dataOff">off The offset of the first element in data to
          be copied.
</param>
        <summary>Copy part of an allocation from another allocation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy part of an allocation from another allocation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copy1DRangeFrom(int, int, android.renderscript.Allocation, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeFromUnchecked">
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeFromUnchecked (int off, int count, byte[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeFromUnchecked(int32 off, int32 count, unsigned int8[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copy1DRangeFromUnchecked", "(II[B)V", "GetCopy1DRangeFromUnchecked_IIarrayBHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="d" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="d">the source data array
</param>
        <summary>Copy part of an allocation from an array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy part of an allocation from an array.  This variant is
 not type checked which allows an application to fill in
 structured data from an array.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copy1DRangeFromUnchecked(int, int, byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeFromUnchecked">
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeFromUnchecked (int off, int count, short[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeFromUnchecked(int32 off, int32 count, int16[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copy1DRangeFromUnchecked", "(II[S)V", "GetCopy1DRangeFromUnchecked_IIarraySHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="d" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="d">the source data array
</param>
        <summary>Copy part of an allocation from an array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy part of an allocation from an array.  This variant is
 not type checked which allows an application to fill in
 structured data from an array.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copy1DRangeFromUnchecked(int, int, short[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeFromUnchecked">
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeFromUnchecked (int off, int count, int[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeFromUnchecked(int32 off, int32 count, int32[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copy1DRangeFromUnchecked", "(II[I)V", "GetCopy1DRangeFromUnchecked_IIarrayIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="d" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="d">the source data array
</param>
        <summary>Copy part of an allocation from an array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy part of an allocation from an array.  This variant is
 not type checked which allows an application to fill in
 structured data from an array.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copy1DRangeFromUnchecked(int, int, int[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeFromUnchecked">
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeFromUnchecked (int off, int count, float[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeFromUnchecked(int32 off, int32 count, float32[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copy1DRangeFromUnchecked", "(II[F)V", "GetCopy1DRangeFromUnchecked_IIarrayFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="d" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="d">the source data array
</param>
        <summary>Copy part of an allocation from an array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy part of an allocation from an array.  This variant is
 not type checked which allows an application to fill in
 structured data from an array.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copy1DRangeFromUnchecked(int, int, float[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy2DRangeFrom">
      <MemberSignature Language="C#" Value="public virtual void Copy2DRangeFrom (int xoff, int yoff, Android.Graphics.Bitmap data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy2DRangeFrom(int32 xoff, int32 yoff, class Android.Graphics.Bitmap data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copy2DRangeFrom", "(IILandroid/graphics/Bitmap;)V", "GetCopy2DRangeFrom_IILandroid_graphics_Bitmap_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="yoff" Type="System.Int32" />
        <Parameter Name="data" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="xoff">X offset of the region to update</param>
        <param name="yoff">Y offset of the region to update</param>
        <param name="data">the bitmap to be copied
</param>
        <summary>Copy a bitmap into an allocation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy a bitmap into an allocation.  The height and width of
 the update will use the height and width of the incoming
 bitmap.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copy2DRangeFrom(int, int, android.graphics.Bitmap)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy2DRangeFrom">
      <MemberSignature Language="C#" Value="public virtual void Copy2DRangeFrom (int xoff, int yoff, int w, int h, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy2DRangeFrom(int32 xoff, int32 yoff, int32 w, int32 h, unsigned int8[] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copy2DRangeFrom", "(IIII[B)V", "GetCopy2DRangeFrom_IIIIarrayBHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="yoff" Type="System.Int32" />
        <Parameter Name="w" Type="System.Int32" />
        <Parameter Name="h" Type="System.Int32" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="xoff">X offset of the region to update</param>
        <param name="yoff">Y offset of the region to update</param>
        <param name="w">Width of the incoming region to update</param>
        <param name="h">Height of the incoming region to update</param>
        <param name="data">to be placed into the allocation
</param>
        <summary>Copy a rectangular region from the array into the allocation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy a rectangular region from the array into the allocation.
 The incoming array is assumed to be tightly packed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copy2DRangeFrom(int, int, int, int, byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy2DRangeFrom">
      <MemberSignature Language="C#" Value="public virtual void Copy2DRangeFrom (int xoff, int yoff, int w, int h, short[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy2DRangeFrom(int32 xoff, int32 yoff, int32 w, int32 h, int16[] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copy2DRangeFrom", "(IIII[S)V", "GetCopy2DRangeFrom_IIIIarraySHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="yoff" Type="System.Int32" />
        <Parameter Name="w" Type="System.Int32" />
        <Parameter Name="h" Type="System.Int32" />
        <Parameter Name="data" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="xoff">To be added.</param>
        <param name="yoff">To be added.</param>
        <param name="w">To be added.</param>
        <param name="h">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copy2DRangeFrom(int, int, int, int, short[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy2DRangeFrom">
      <MemberSignature Language="C#" Value="public virtual void Copy2DRangeFrom (int xoff, int yoff, int w, int h, int[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy2DRangeFrom(int32 xoff, int32 yoff, int32 w, int32 h, int32[] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copy2DRangeFrom", "(IIII[I)V", "GetCopy2DRangeFrom_IIIIarrayIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="yoff" Type="System.Int32" />
        <Parameter Name="w" Type="System.Int32" />
        <Parameter Name="h" Type="System.Int32" />
        <Parameter Name="data" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="xoff">To be added.</param>
        <param name="yoff">To be added.</param>
        <param name="w">To be added.</param>
        <param name="h">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copy2DRangeFrom(int, int, int, int, int[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy2DRangeFrom">
      <MemberSignature Language="C#" Value="public virtual void Copy2DRangeFrom (int xoff, int yoff, int w, int h, float[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy2DRangeFrom(int32 xoff, int32 yoff, int32 w, int32 h, float32[] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copy2DRangeFrom", "(IIII[F)V", "GetCopy2DRangeFrom_IIIIarrayFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="yoff" Type="System.Int32" />
        <Parameter Name="w" Type="System.Int32" />
        <Parameter Name="h" Type="System.Int32" />
        <Parameter Name="data" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="xoff">To be added.</param>
        <param name="yoff">To be added.</param>
        <param name="w">To be added.</param>
        <param name="h">To be added.</param>
        <param name="data">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copy2DRangeFrom(int, int, int, int, float[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy2DRangeFrom">
      <MemberSignature Language="C#" Value="public virtual void Copy2DRangeFrom (int xoff, int yoff, int w, int h, Android.Renderscripts.Allocation data, int dataXoff, int dataYoff);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy2DRangeFrom(int32 xoff, int32 yoff, int32 w, int32 h, class Android.Renderscripts.Allocation data, int32 dataXoff, int32 dataYoff) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copy2DRangeFrom", "(IIIILandroid/renderscript/Allocation;II)V", "GetCopy2DRangeFrom_IIIILandroid_renderscript_Allocation_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="yoff" Type="System.Int32" />
        <Parameter Name="w" Type="System.Int32" />
        <Parameter Name="h" Type="System.Int32" />
        <Parameter Name="data" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="dataXoff" Type="System.Int32" />
        <Parameter Name="dataYoff" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="xoff">X offset of the region to update.</param>
        <param name="yoff">Y offset of the region to update.</param>
        <param name="w">Width of the incoming region to update.</param>
        <param name="h">Height of the incoming region to update.</param>
        <param name="data">source allocation.</param>
        <param name="dataXoff">X offset in data of the region to update.</param>
        <param name="dataYoff">Y offset in data of the region to update.
</param>
        <summary>Copy a rectangular region into the allocation from another
 allocation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy a rectangular region into the allocation from another
 allocation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copy2DRangeFrom(int, int, int, int, android.renderscript.Allocation, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public virtual void CopyFrom (Android.Graphics.Bitmap b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFrom(class Android.Graphics.Bitmap b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyFrom", "(Landroid/graphics/Bitmap;)V", "GetCopyFrom_Landroid_graphics_Bitmap_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="b" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="b">the source bitmap
</param>
        <summary>Copy an allocation from a bitmap.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy an allocation from a bitmap.  The height, width, and
 format of the bitmap must match the existing allocation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copyFrom(android.graphics.Bitmap)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public virtual void CopyFrom (Android.Renderscripts.Allocation a);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFrom(class Android.Renderscripts.Allocation a) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyFrom", "(Landroid/renderscript/Allocation;)V", "GetCopyFrom_Landroid_renderscript_Allocation_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Android.Renderscripts.Allocation" />
      </Parameters>
      <Docs>
        <param name="a">the source allocation
</param>
        <summary>Copy an allocation from an allocation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy an allocation from an allocation.  The types of both allocations
 must be identical.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copyFrom(android.renderscript.Allocation)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public virtual void CopyFrom (Android.Renderscripts.BaseObj[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFrom(class Android.Renderscripts.BaseObj[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyFrom", "([Landroid/renderscript/BaseObj;)V", "GetCopyFrom_arrayLandroid_renderscript_BaseObj_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="Android.Renderscripts.BaseObj[]" />
      </Parameters>
      <Docs>
        <param name="d">Source array.
</param>
        <summary>Copy an array of RS objects to the allocation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy an array of RS objects to the allocation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copyFrom(android.renderscript.BaseObj[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public virtual void CopyFrom (byte[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFrom(unsigned int8[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyFrom", "([B)V", "GetCopyFrom_arrayBHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="d">the source data array
</param>
        <summary>Copy an allocation from an array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy an allocation from an array.  This variant is type
 checked and will generate exceptions if the Allocation type
 is not a 8 bit integer type.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copyFrom(byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public virtual void CopyFrom (short[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFrom(int16[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyFrom", "([S)V", "GetCopyFrom_arraySHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="d">the source data array
</param>
        <summary>Copy an allocation from an array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy an allocation from an array.  This variant is type
 checked and will generate exceptions if the Allocation type
 is not a 16 bit integer type.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copyFrom(short[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public virtual void CopyFrom (int[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFrom(int32[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyFrom", "([I)V", "GetCopyFrom_arrayIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="d">the source data array
</param>
        <summary>Copy an allocation from an array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy an allocation from an array.  This variant is type
 checked and will generate exceptions if the Allocation type
 is not a 32 bit integer type.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copyFrom(int[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public virtual void CopyFrom (float[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFrom(float32[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyFrom", "([F)V", "GetCopyFrom_arrayFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="d">the source data array
</param>
        <summary>Copy an allocation from an array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy an allocation from an array.  This variant is type
 checked and will generate exceptions if the Allocation type
 is not a 32 bit float type.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copyFrom(float[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromUnchecked">
      <MemberSignature Language="C#" Value="public virtual void CopyFromUnchecked (byte[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFromUnchecked(unsigned int8[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyFromUnchecked", "([B)V", "GetCopyFromUnchecked_arrayBHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="d">the source data array
</param>
        <summary>Copy an allocation from an array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy an allocation from an array.  This variant is not type
 checked which allows an application to fill in structured
 data from an array.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copyFromUnchecked(byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromUnchecked">
      <MemberSignature Language="C#" Value="public virtual void CopyFromUnchecked (short[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFromUnchecked(int16[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyFromUnchecked", "([S)V", "GetCopyFromUnchecked_arraySHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="d">the source data array
</param>
        <summary>Copy an allocation from an array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy an allocation from an array.  This variant is not type
 checked which allows an application to fill in structured
 data from an array.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copyFromUnchecked(short[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromUnchecked">
      <MemberSignature Language="C#" Value="public virtual void CopyFromUnchecked (int[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFromUnchecked(int32[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyFromUnchecked", "([I)V", "GetCopyFromUnchecked_arrayIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="d">the source data array
</param>
        <summary>Copy an allocation from an array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy an allocation from an array.  This variant is not type
 checked which allows an application to fill in structured
 data from an array.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copyFromUnchecked(int[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromUnchecked">
      <MemberSignature Language="C#" Value="public virtual void CopyFromUnchecked (float[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFromUnchecked(float32[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyFromUnchecked", "([F)V", "GetCopyFromUnchecked_arrayFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="d">the source data array
</param>
        <summary>Copy an allocation from an array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy an allocation from an array.  This variant is not type
 checked which allows an application to fill in structured
 data from an array.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copyFromUnchecked(float[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Android.Graphics.Bitmap b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class Android.Graphics.Bitmap b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyTo", "(Landroid/graphics/Bitmap;)V", "GetCopyTo_Landroid_graphics_Bitmap_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="b" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="b">The bitmap to be set from the Allocation.
</param>
        <summary>Copy from the Allocation into a Bitmap.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy from the Allocation into a Bitmap.  The bitmap must
 match the dimensions of the Allocation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copyTo(android.graphics.Bitmap)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (byte[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(unsigned int8[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyTo", "([B)V", "GetCopyTo_arrayBHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="d">The array to be set from the Allocation.
</param>
        <summary>Copy from the Allocation into a byte array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy from the Allocation into a byte array.  The array must
 be at least as large as the Allocation.  The allocation must
 be of an 8 bit elemental type.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copyTo(byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (short[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(int16[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyTo", "([S)V", "GetCopyTo_arraySHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="d">The array to be set from the Allocation.
</param>
        <summary>Copy from the Allocation into a short array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy from the Allocation into a short array.  The array must
 be at least as large as the Allocation.  The allocation must
 be of an 16 bit elemental type.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copyTo(short[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (int[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(int32[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyTo", "([I)V", "GetCopyTo_arrayIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="d">The array to be set from the Allocation.
</param>
        <summary>Copy from the Allocation into a int array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy from the Allocation into a int array.  The array must be
 at least as large as the Allocation.  The allocation must be
 of an 32 bit elemental type.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copyTo(int[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (float[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(float32[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyTo", "([F)V", "GetCopyTo_arrayFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="d">The array to be set from the Allocation.
</param>
        <summary>Copy from the Allocation into a float array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy from the Allocation into a float array.  The array must
 be at least as large as the Allocation.  The allocation must
 be of an 32 bit float elemental type.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copyTo(float[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateCubemapFromBitmap">
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation CreateCubemapFromBitmap (Android.Renderscripts.RenderScript rs, Android.Graphics.Bitmap b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateCubemapFromBitmap(class Android.Renderscripts.RenderScript rs, class Android.Graphics.Bitmap b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createCubemapFromBitmap", "(Landroid/renderscript/RenderScript;Landroid/graphics/Bitmap;)Landroid/renderscript/Allocation;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="b" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="rs">Context to which the allocation will belong.</param>
        <param name="b">bitmap with cubemap faces layed out in the following
          format: right, left, top, bottom, front, back</param>
        <summary>Creates a non-mipmapped cubemap allocation for use as a
 graphics texture from a bitmap containing the horizontal list
 of cube faces.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a non-mipmapped cubemap allocation for use as a
 graphics texture from a bitmap containing the horizontal list
 of cube faces. Each individual face must be the same size and
 power of 2</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#createCubemapFromBitmap(android.renderscript.RenderScript, android.graphics.Bitmap)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateCubemapFromBitmap">
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation CreateCubemapFromBitmap (Android.Renderscripts.RenderScript rs, Android.Graphics.Bitmap b, Android.Renderscripts.Allocation.MipmapControl mips, Android.Renderscripts.AllocationUsage usage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateCubemapFromBitmap(class Android.Renderscripts.RenderScript rs, class Android.Graphics.Bitmap b, class Android.Renderscripts.Allocation/MipmapControl mips, valuetype Android.Renderscripts.AllocationUsage usage) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createCubemapFromBitmap", "(Landroid/renderscript/RenderScript;Landroid/graphics/Bitmap;Landroid/renderscript/Allocation$MipmapControl;I)Landroid/renderscript/Allocation;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="b" Type="Android.Graphics.Bitmap" />
        <Parameter Name="mips" Type="Android.Renderscripts.Allocation+MipmapControl" />
        <Parameter Name="usage" Type="Android.Renderscripts.AllocationUsage">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="rs">Context to which the allocation will belong.</param>
        <param name="b">bitmap with cubemap faces layed out in the following
          format: right, left, top, bottom, front, back</param>
        <param name="mips">specifies desired mipmap behaviour for the cubemap</param>
        <param name="usage">bit field specifying how the cubemap is utilized</param>
        <summary>Creates a cubemap allocation from a bitmap containing the
 horizontal list of cube faces.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a cubemap allocation from a bitmap containing the
 horizontal list of cube faces. Each individual face must be
 the same size and power of 2</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#createCubemapFromBitmap(android.renderscript.RenderScript, android.graphics.Bitmap, android.renderscript.Allocation.MipmapControl, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateCubemapFromCubeFaces">
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation CreateCubemapFromCubeFaces (Android.Renderscripts.RenderScript rs, Android.Graphics.Bitmap xpos, Android.Graphics.Bitmap xneg, Android.Graphics.Bitmap ypos, Android.Graphics.Bitmap yneg, Android.Graphics.Bitmap zpos, Android.Graphics.Bitmap zneg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateCubemapFromCubeFaces(class Android.Renderscripts.RenderScript rs, class Android.Graphics.Bitmap xpos, class Android.Graphics.Bitmap xneg, class Android.Graphics.Bitmap ypos, class Android.Graphics.Bitmap yneg, class Android.Graphics.Bitmap zpos, class Android.Graphics.Bitmap zneg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createCubemapFromCubeFaces", "(Landroid/renderscript/RenderScript;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;)Landroid/renderscript/Allocation;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="xpos" Type="Android.Graphics.Bitmap" />
        <Parameter Name="xneg" Type="Android.Graphics.Bitmap" />
        <Parameter Name="ypos" Type="Android.Graphics.Bitmap" />
        <Parameter Name="yneg" Type="Android.Graphics.Bitmap" />
        <Parameter Name="zpos" Type="Android.Graphics.Bitmap" />
        <Parameter Name="zneg" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="rs">Context to which the allocation will belong.</param>
        <param name="xpos">cubemap face in the positive x direction</param>
        <param name="xneg">cubemap face in the negative x direction</param>
        <param name="ypos">cubemap face in the positive y direction</param>
        <param name="yneg">cubemap face in the negative y direction</param>
        <param name="zpos">cubemap face in the positive z direction</param>
        <param name="zneg">cubemap face in the negative z direction</param>
        <summary>Creates a non-mipmapped cubemap allocation for use as a
 graphics texture from 6 bitmaps containing
 the cube faces.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a non-mipmapped cubemap allocation for use as a
 graphics texture from 6 bitmaps containing
 the cube faces. All the faces must be the same size and
 power of 2</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#createCubemapFromCubeFaces(android.renderscript.RenderScript, android.graphics.Bitmap, android.graphics.Bitmap, android.graphics.Bitmap, android.graphics.Bitmap, android.graphics.Bitmap, android.graphics.Bitmap)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateCubemapFromCubeFaces">
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation CreateCubemapFromCubeFaces (Android.Renderscripts.RenderScript rs, Android.Graphics.Bitmap xpos, Android.Graphics.Bitmap xneg, Android.Graphics.Bitmap ypos, Android.Graphics.Bitmap yneg, Android.Graphics.Bitmap zpos, Android.Graphics.Bitmap zneg, Android.Renderscripts.Allocation.MipmapControl mips, Android.Renderscripts.AllocationUsage usage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateCubemapFromCubeFaces(class Android.Renderscripts.RenderScript rs, class Android.Graphics.Bitmap xpos, class Android.Graphics.Bitmap xneg, class Android.Graphics.Bitmap ypos, class Android.Graphics.Bitmap yneg, class Android.Graphics.Bitmap zpos, class Android.Graphics.Bitmap zneg, class Android.Renderscripts.Allocation/MipmapControl mips, valuetype Android.Renderscripts.AllocationUsage usage) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createCubemapFromCubeFaces", "(Landroid/renderscript/RenderScript;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/renderscript/Allocation$MipmapControl;I)Landroid/renderscript/Allocation;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="xpos" Type="Android.Graphics.Bitmap" />
        <Parameter Name="xneg" Type="Android.Graphics.Bitmap" />
        <Parameter Name="ypos" Type="Android.Graphics.Bitmap" />
        <Parameter Name="yneg" Type="Android.Graphics.Bitmap" />
        <Parameter Name="zpos" Type="Android.Graphics.Bitmap" />
        <Parameter Name="zneg" Type="Android.Graphics.Bitmap" />
        <Parameter Name="mips" Type="Android.Renderscripts.Allocation+MipmapControl" />
        <Parameter Name="usage" Type="Android.Renderscripts.AllocationUsage">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="rs">Context to which the allocation will belong.</param>
        <param name="xpos">cubemap face in the positive x direction</param>
        <param name="xneg">cubemap face in the negative x direction</param>
        <param name="ypos">cubemap face in the positive y direction</param>
        <param name="yneg">cubemap face in the negative y direction</param>
        <param name="zpos">cubemap face in the positive z direction</param>
        <param name="zneg">cubemap face in the negative z direction</param>
        <param name="mips">specifies desired mipmap behaviour for the cubemap</param>
        <param name="usage">bit field specifying how the cubemap is utilized</param>
        <summary>Creates a cubemap allocation from 6 bitmaps containing
 the cube faces.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a cubemap allocation from 6 bitmaps containing
 the cube faces. All the faces must be the same size and
 power of 2</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#createCubemapFromCubeFaces(android.renderscript.RenderScript, android.graphics.Bitmap, android.graphics.Bitmap, android.graphics.Bitmap, android.graphics.Bitmap, android.graphics.Bitmap, android.graphics.Bitmap, android.renderscript.Allocation.MipmapControl, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromBitmap">
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation CreateFromBitmap (Android.Renderscripts.RenderScript rs, Android.Graphics.Bitmap b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateFromBitmap(class Android.Renderscripts.RenderScript rs, class Android.Graphics.Bitmap b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createFromBitmap", "(Landroid/renderscript/RenderScript;Landroid/graphics/Bitmap;)Landroid/renderscript/Allocation;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="b" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="rs">Context to which the allocation will belong.</param>
        <param name="b">bitmap source for the allocation data</param>
        <summary>Creates a RenderScript allocation from a bitmap.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a RenderScript allocation from a bitmap.

 With target API version 18 or greater, this allocation will be
 created with USAGE_SHARED. With target API version 17 or lower,
 this allocation will be created with USAGE_GRAPHICS_TEXTURE.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#createFromBitmap(android.renderscript.RenderScript, android.graphics.Bitmap)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromBitmap">
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation CreateFromBitmap (Android.Renderscripts.RenderScript rs, Android.Graphics.Bitmap b, Android.Renderscripts.Allocation.MipmapControl mips, Android.Renderscripts.AllocationUsage usage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateFromBitmap(class Android.Renderscripts.RenderScript rs, class Android.Graphics.Bitmap b, class Android.Renderscripts.Allocation/MipmapControl mips, valuetype Android.Renderscripts.AllocationUsage usage) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createFromBitmap", "(Landroid/renderscript/RenderScript;Landroid/graphics/Bitmap;Landroid/renderscript/Allocation$MipmapControl;I)Landroid/renderscript/Allocation;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="b" Type="Android.Graphics.Bitmap" />
        <Parameter Name="mips" Type="Android.Renderscripts.Allocation+MipmapControl" />
        <Parameter Name="usage" Type="Android.Renderscripts.AllocationUsage">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="rs">Context to which the allocation will belong.</param>
        <param name="b">bitmap source for the allocation data</param>
        <param name="mips">specifies desired mipmap behaviour for the
             allocation</param>
        <param name="usage">bit field specifying how the allocation is
              utilized</param>
        <summary>Creates a renderscript allocation from a bitmap</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a renderscript allocation from a bitmap</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#createFromBitmap(android.renderscript.RenderScript, android.graphics.Bitmap, android.renderscript.Allocation.MipmapControl, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromBitmapResource">
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation CreateFromBitmapResource (Android.Renderscripts.RenderScript rs, Android.Content.Res.Resources res, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateFromBitmapResource(class Android.Renderscripts.RenderScript rs, class Android.Content.Res.Resources res, int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createFromBitmapResource", "(Landroid/renderscript/RenderScript;Landroid/content/res/Resources;I)Landroid/renderscript/Allocation;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="res" Type="Android.Content.Res.Resources" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rs">Context to which the allocation will belong.</param>
        <param name="res">application resources</param>
        <param name="id">resource id to load the data from</param>
        <summary>Creates a non-mipmapped renderscript allocation to use as a
 graphics texture from the bitmap referenced by resource id

 With target API version 18 or greater, this allocation will be
 created with USAGE_SHARED.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a non-mipmapped renderscript allocation to use as a
 graphics texture from the bitmap referenced by resource id

 With target API version 18 or greater, this allocation will be
 created with USAGE_SHARED. With target API version 17 or lower,
 this allocation will be created with USAGE_GRAPHICS_TEXTURE.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#createFromBitmapResource(android.renderscript.RenderScript, android.content.res.Resources, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromBitmapResource">
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation CreateFromBitmapResource (Android.Renderscripts.RenderScript rs, Android.Content.Res.Resources res, int id, Android.Renderscripts.Allocation.MipmapControl mips, Android.Renderscripts.AllocationUsage usage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateFromBitmapResource(class Android.Renderscripts.RenderScript rs, class Android.Content.Res.Resources res, int32 id, class Android.Renderscripts.Allocation/MipmapControl mips, valuetype Android.Renderscripts.AllocationUsage usage) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createFromBitmapResource", "(Landroid/renderscript/RenderScript;Landroid/content/res/Resources;ILandroid/renderscript/Allocation$MipmapControl;I)Landroid/renderscript/Allocation;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="res" Type="Android.Content.Res.Resources" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="mips" Type="Android.Renderscripts.Allocation+MipmapControl" />
        <Parameter Name="usage" Type="Android.Renderscripts.AllocationUsage">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="rs">Context to which the allocation will belong.</param>
        <param name="res">application resources</param>
        <param name="id">resource id to load the data from</param>
        <param name="mips">specifies desired mipmap behaviour for the
             allocation</param>
        <param name="usage">bit field specifying how the allocation is
              utilized</param>
        <summary>Creates a renderscript allocation from the bitmap referenced
 by resource id</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a renderscript allocation from the bitmap referenced
 by resource id</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#createFromBitmapResource(android.renderscript.RenderScript, android.content.res.Resources, int, android.renderscript.Allocation.MipmapControl, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromString">
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation CreateFromString (Android.Renderscripts.RenderScript rs, string str, Android.Renderscripts.AllocationUsage usage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateFromString(class Android.Renderscripts.RenderScript rs, string str, valuetype Android.Renderscripts.AllocationUsage usage) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createFromString", "(Landroid/renderscript/RenderScript;Ljava/lang/String;I)Landroid/renderscript/Allocation;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="usage" Type="Android.Renderscripts.AllocationUsage">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="rs">Context to which the allocation will belong.</param>
        <param name="str">string to create the allocation from</param>
        <param name="usage">bit field specifying how the allocaiton is
              utilized

</param>
        <summary>Creates a renderscript allocation containing string data
 encoded in UTF-8 format</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a renderscript allocation containing string data
 encoded in UTF-8 format</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#createFromString(android.renderscript.RenderScript, java.lang.String, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateSized">
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation CreateSized (Android.Renderscripts.RenderScript rs, Android.Renderscripts.Element e, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateSized(class Android.Renderscripts.RenderScript rs, class Android.Renderscripts.Element e, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createSized", "(Landroid/renderscript/RenderScript;Landroid/renderscript/Element;I)Landroid/renderscript/Allocation;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="e" Type="Android.Renderscripts.Element" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rs">Context to which the allocation will belong.</param>
        <param name="e">describes what each element of an allocation is</param>
        <param name="count">specifies the number of element in the allocation</param>
        <summary>Creates a renderscript allocation with a specified number of
 given elements</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a renderscript allocation with a specified number of
 given elements</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#createSized(android.renderscript.RenderScript, android.renderscript.Element, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateSized">
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation CreateSized (Android.Renderscripts.RenderScript rs, Android.Renderscripts.Element e, int count, Android.Renderscripts.AllocationUsage usage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateSized(class Android.Renderscripts.RenderScript rs, class Android.Renderscripts.Element e, int32 count, valuetype Android.Renderscripts.AllocationUsage usage) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createSized", "(Landroid/renderscript/RenderScript;Landroid/renderscript/Element;II)Landroid/renderscript/Allocation;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="e" Type="Android.Renderscripts.Element" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="usage" Type="Android.Renderscripts.AllocationUsage">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="rs">Context to which the allocation will belong.</param>
        <param name="e">describes what each element of an allocation is</param>
        <param name="count">specifies the number of element in the allocation</param>
        <param name="usage">bit field specifying how the allocation is
              utilized</param>
        <summary>Creates a renderscript allocation with a specified number of
 given elements</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a renderscript allocation with a specified number of
 given elements</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#createSized(android.renderscript.RenderScript, android.renderscript.Element, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateTyped">
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation CreateTyped (Android.Renderscripts.RenderScript rs, Android.Renderscripts.Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateTyped(class Android.Renderscripts.RenderScript rs, class Android.Renderscripts.Type type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createTyped", "(Landroid/renderscript/RenderScript;Landroid/renderscript/Type;)Landroid/renderscript/Allocation;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="type" Type="Android.Renderscripts.Type" />
      </Parameters>
      <Docs>
        <param name="rs">Context to which the allocation will belong.</param>
        <param name="type">renderscript type describing data layout</param>
        <summary>Creates a renderscript allocation for use by the script with
 the size specified by the type and no mipmaps generated by
 default</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a renderscript allocation for use by the script with
 the size specified by the type and no mipmaps generated by
 default</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#createTyped(android.renderscript.RenderScript, android.renderscript.Type)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateTyped">
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation CreateTyped (Android.Renderscripts.RenderScript rs, Android.Renderscripts.Type type, Android.Renderscripts.AllocationUsage usage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateTyped(class Android.Renderscripts.RenderScript rs, class Android.Renderscripts.Type type, valuetype Android.Renderscripts.AllocationUsage usage) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createTyped", "(Landroid/renderscript/RenderScript;Landroid/renderscript/Type;I)Landroid/renderscript/Allocation;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="type" Type="Android.Renderscripts.Type" />
        <Parameter Name="usage" Type="Android.Renderscripts.AllocationUsage">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="rs">Context to which the allocation will belong.</param>
        <param name="type">renderscript type describing data layout</param>
        <param name="usage">bit field specifying how the allocation is
              utilized</param>
        <summary>Creates a renderscript allocation with the size specified by
 the type and no mipmaps generated by default</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a renderscript allocation with the size specified by
 the type and no mipmaps generated by default</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#createTyped(android.renderscript.RenderScript, android.renderscript.Type, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateTyped">
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation CreateTyped (Android.Renderscripts.RenderScript rs, Android.Renderscripts.Type type, Android.Renderscripts.Allocation.MipmapControl mips, Android.Renderscripts.AllocationUsage usage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateTyped(class Android.Renderscripts.RenderScript rs, class Android.Renderscripts.Type type, class Android.Renderscripts.Allocation/MipmapControl mips, valuetype Android.Renderscripts.AllocationUsage usage) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createTyped", "(Landroid/renderscript/RenderScript;Landroid/renderscript/Type;Landroid/renderscript/Allocation$MipmapControl;I)Landroid/renderscript/Allocation;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="type" Type="Android.Renderscripts.Type" />
        <Parameter Name="mips" Type="Android.Renderscripts.Allocation+MipmapControl" />
        <Parameter Name="usage" Type="Android.Renderscripts.AllocationUsage">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="rs">To be added.</param>
        <param name="type">renderscript type describing data layout</param>
        <param name="mips">specifies desired mipmap behaviour for the
             allocation</param>
        <param name="usage">bit field specifying how the allocation is
              utilized
</param>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#createTyped(android.renderscript.RenderScript, android.renderscript.Type, android.renderscript.Allocation.MipmapControl, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Destroy">
      <MemberSignature Language="C#" Value="public override void Destroy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Destroy() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("destroy", "()V", "GetDestroyHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Element">
      <MemberSignature Language="C#" Value="public virtual Android.Renderscripts.Element Element { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Renderscripts.Element Element" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getElement", "()Landroid/renderscript/Element;", "GetGetElementHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Element</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the element of the type of the Allocation.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the element of the type of the Allocation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#getElement()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="GenerateMipmaps">
      <MemberSignature Language="C#" Value="public virtual void GenerateMipmaps ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateMipmaps() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("generateMipmaps", "()V", "GetGenerateMipmapsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Generate a mipmap chain.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Generate a mipmap chain.  Requires the type of the allocation
 include mipmaps.

 This function will generate a complete set of mipmaps from
 the top level lod and place them into the script memoryspace.

 If the allocation is also using other memory spaces a
 followup sync will be required.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#generateMipmaps()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="IoReceive">
      <MemberSignature Language="C#" Value="public virtual void IoReceive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IoReceive() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ioReceive", "()V", "GetIoReceiveHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Receive the latest input into the Allocation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Receive the latest input into the Allocation.

</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#ioReceive()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="IoSend">
      <MemberSignature Language="C#" Value="public virtual void IoSend ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IoSend() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ioSend", "()V", "GetIoSendHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Send a buffer to the output stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Send a buffer to the output stream.  The contents of the
 Allocation will be undefined after this operation.

</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#ioSend()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="C#" Value="public virtual void Resize (int dimX);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Resize(int32 dimX) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resize", "(I)V", "GetResize_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dimX" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dimX">The new size of the allocation.</param>
        <summary>Resize a 1D allocation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Resize a 1D allocation.  The contents of the allocation are
 preserved.  If new elements are allocated objects are created
 with null contents and the new region is otherwise undefined.

 If the new region is smaller the references of any objects
 outside the new region will be released.

 A new type will be created with the new dimension.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#resize(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetFromFieldPacker">
      <MemberSignature Language="C#" Value="public virtual void SetFromFieldPacker (int xoff, Android.Renderscripts.FieldPacker fp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFromFieldPacker(int32 xoff, class Android.Renderscripts.FieldPacker fp) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setFromFieldPacker", "(ILandroid/renderscript/FieldPacker;)V", "GetSetFromFieldPacker_ILandroid_renderscript_FieldPacker_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="fp" Type="Android.Renderscripts.FieldPacker" />
      </Parameters>
      <Docs>
        <param name="xoff">To be added.</param>
        <param name="fp">To be added.</param>
        <summary>This is only intended to be used by auto-generate code reflected from the
 renderscript script files.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This is only intended to be used by auto-generate code reflected from the
 renderscript script files.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#setFromFieldPacker(int, android.renderscript.FieldPacker)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetFromFieldPacker">
      <MemberSignature Language="C#" Value="public virtual void SetFromFieldPacker (int xoff, int component_number, Android.Renderscripts.FieldPacker fp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFromFieldPacker(int32 xoff, int32 component_number, class Android.Renderscripts.FieldPacker fp) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setFromFieldPacker", "(IILandroid/renderscript/FieldPacker;)V", "GetSetFromFieldPacker_IILandroid_renderscript_FieldPacker_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="component_number" Type="System.Int32" />
        <Parameter Name="fp" Type="Android.Renderscripts.FieldPacker" />
      </Parameters>
      <Docs>
        <param name="xoff">To be added.</param>
        <param name="component_number">To be added.</param>
        <param name="fp">To be added.</param>
        <summary>This is only intended to be used by auto-generate code reflected from the
 renderscript script files.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This is only intended to be used by auto-generate code reflected from the
 renderscript script files.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#setFromFieldPacker(int, int, android.renderscript.FieldPacker)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetName">
      <MemberSignature Language="C#" Value="public override void SetName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetName(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setName", "(Ljava/lang/String;)V", "GetSetName_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Surface">
      <MemberSignature Language="C#" Value="public virtual Android.Views.Surface Surface { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.Surface Surface" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSurface", "()Landroid/view/Surface;", "GetGetSurfaceHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSurface", "(Landroid/view/Surface;)V", "GetSetSurface_Landroid_view_Surface_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Surface</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For allocations used with io operations, returns the handle
 onto a raw buffer that is being managed by the screen
 compositor.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#getSurface()" target="_blank">[Android Documentation]</a>
              <br />
            </format>For allocations used with io operations, returns the handle
 onto a raw buffer that is being managed by the screen
 compositor.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#setSurface(android.view.Surface)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Associate a surface for io output with this allocation</para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SyncAll">
      <MemberSignature Language="C#" Value="public virtual void SyncAll (int srcLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SyncAll(int32 srcLocation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("syncAll", "(I)V", "GetSyncAll_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="srcLocation" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="srcLocation">To be added.</param>
        <summary>Propagate changes from one usage of the allocation to the
 remaining usages of the allocation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Propagate changes from one usage of the allocation to the
 remaining usages of the allocation.

</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#syncAll(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public virtual Android.Renderscripts.Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Renderscripts.Type Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getType", "()Landroid/renderscript/Type;", "GetGetTypeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the type of the Allocation.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the type of the Allocation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#getType()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Usage">
      <MemberSignature Language="C#" Value="public virtual int Usage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Usage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getUsage", "()I", "GetGetUsageHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the usage flags of the Allocation.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the usage flags of the Allocation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#getUsage()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
  </Members>
</Type>
