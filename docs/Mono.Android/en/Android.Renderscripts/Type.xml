<Type Name="Type" FullName="Android.Renderscripts.Type">
  <TypeSignature Language="C#" Value="public class Type : Android.Renderscripts.BaseObj" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Type extends Android.Renderscripts.BaseObj" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Renderscripts.BaseObj</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/renderscript/Type", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="11">
    <summary tool="true">
      <format type="text/html">
        <h3>Developer Guides</h3>
      </format>
    </summary>
    <remarks>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <h3>Developer Guides</h3>
        </format>
      </para>
      <para tool="javadoc-to-mdoc">A Type describes the <c><see cref="T:Android.Renderscripts.Element" /></c> and dimensions used for an <c><see cref="T:Android.Renderscripts.Allocation" /></c> or a parallel operation. Types are created through <c><see cref="!:NoType:android/renderscript/Type$Builder;Href=../../../reference/android/renderscript/Type.Builder.html" /></c>.</para>
      <para tool="javadoc-to-mdoc">A Type always includes an <c><see cref="T:Android.Renderscripts.Element" /></c> and an X
 dimension. A Type may be multidimensional, up to three dimensions. A nonzero
 value in the Y or Z dimensions indicates that the dimension is present. Note
 that a Type with only a given X dimension and a Type with the same X
 dimension but Y = 1 are not equivalent.</para>
      <para tool="javadoc-to-mdoc">A Type also supports inclusion of level of detail (LOD) or cube map
 faces. LOD and cube map faces are booleans to indicate present or not
 present. </para>
      <para tool="javadoc-to-mdoc">A Type also supports YUV format information to support an
 <c><see cref="T:Android.Renderscripts.Allocation" /></c> in a YUV format. The YUV formats
 supported are <c><see cref="F:Android.Graphics.ImageFormat.Yv12" /></c>,
 <c><see cref="F:Android.Graphics.ImageFormat.Nv21" /></c>, and
 <c><see cref="F:Android.Graphics.ImageFormat.Yuv420888" /></c></para>
      <para tool="javadoc-to-mdoc">For more information about creating an application that uses RenderScript, read the
 <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/renderscript/index.html">RenderScript</a></format> developer guide.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/renderscript/Type.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 11" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Type (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCount", "()I", "GetGetCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the total number of accessable cells in the Type.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the total number of accessable cells in the Type.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Type.html#getCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateX">
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Type CreateX (Android.Renderscripts.RenderScript rs, Android.Renderscripts.Element e, int dimX);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Type CreateX(class Android.Renderscripts.RenderScript rs, class Android.Renderscripts.Element e, int32 dimX) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createX", "(Landroid/renderscript/RenderScript;Landroid/renderscript/Element;I)Landroid/renderscript/Type;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="e" Type="Android.Renderscripts.Element" />
        <Parameter Name="dimX" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rs">The RenderScript context</param>
        <param name="e">The Element for the Type</param>
        <param name="dimX">The X dimension, must be &gt; 0</param>
        <summary>Utility function for creating basic 1D types.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Utility function for creating basic 1D types. The type is
 created without mipmaps enabled.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Type.html#createX(android.renderscript.RenderScript, android.renderscript.Element, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateXY">
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Type CreateXY (Android.Renderscripts.RenderScript rs, Android.Renderscripts.Element e, int dimX, int dimY);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Type CreateXY(class Android.Renderscripts.RenderScript rs, class Android.Renderscripts.Element e, int32 dimX, int32 dimY) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createXY", "(Landroid/renderscript/RenderScript;Landroid/renderscript/Element;II)Landroid/renderscript/Type;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="e" Type="Android.Renderscripts.Element" />
        <Parameter Name="dimX" Type="System.Int32" />
        <Parameter Name="dimY" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rs">The RenderScript context</param>
        <param name="e">The Element for the Type</param>
        <param name="dimX">The X dimension, must be &gt; 0</param>
        <param name="dimY">The Y dimension, must be &gt; 0</param>
        <summary>Utility function for creating basic 2D types.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Utility function for creating basic 2D types. The type is
 created without mipmaps or cubemaps.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Type.html#createXY(android.renderscript.RenderScript, android.renderscript.Element, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateXYZ">
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Type CreateXYZ (Android.Renderscripts.RenderScript rs, Android.Renderscripts.Element e, int dimX, int dimY, int dimZ);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Type CreateXYZ(class Android.Renderscripts.RenderScript rs, class Android.Renderscripts.Element e, int32 dimX, int32 dimY, int32 dimZ) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createXYZ", "(Landroid/renderscript/RenderScript;Landroid/renderscript/Element;III)Landroid/renderscript/Type;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="e" Type="Android.Renderscripts.Element" />
        <Parameter Name="dimX" Type="System.Int32" />
        <Parameter Name="dimY" Type="System.Int32" />
        <Parameter Name="dimZ" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rs">The RenderScript context</param>
        <param name="e">The Element for the Type</param>
        <param name="dimX">The X dimension, must be &gt; 0</param>
        <param name="dimY">The Y dimension, must be &gt; 0</param>
        <param name="dimZ">The Z dimension, must be &gt; 0</param>
        <summary>Utility function for creating basic 3D types.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Utility function for creating basic 3D types. The type is
 created without mipmaps.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Type.html#createXYZ(android.renderscript.RenderScript, android.renderscript.Element, int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Destroy">
      <MemberSignature Language="C#" Value="public override void Destroy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Destroy() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("destroy", "()V", "GetDestroyHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Element">
      <MemberSignature Language="C#" Value="public virtual Android.Renderscripts.Element Element { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Renderscripts.Element Element" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getElement", "()Landroid/renderscript/Element;", "GetGetElementHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Element</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the element associated with this Type.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the element associated with this Type.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Type.html#getElement()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetX">
      <MemberSignature Language="C#" Value="public virtual int GetX ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetX() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getX", "()I", "GetGetXHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return the value of the X dimension.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the value of the X dimension.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Type.html#getX()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetY">
      <MemberSignature Language="C#" Value="public virtual int GetY ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetY() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getY", "()I", "GetGetYHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return the value of the Y dimension or 0 for a 1D allocation.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the value of the Y dimension or 0 for a 1D allocation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Type.html#getY()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetZ">
      <MemberSignature Language="C#" Value="public virtual int GetZ ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetZ() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getZ", "()I", "GetGetZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return the value of the Z dimension or 0 for a 1D or 2D allocation.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the value of the Z dimension or 0 for a 1D or 2D allocation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Type.html#getZ()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="HasFaces">
      <MemberSignature Language="C#" Value="public virtual bool HasFaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("hasFaces", "()Z", "GetHasFacesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return if the Type is a cube map.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return if the Type is a cube map.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Type.html#hasFaces()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="HasMipmaps">
      <MemberSignature Language="C#" Value="public virtual bool HasMipmaps { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasMipmaps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("hasMipmaps", "()Z", "GetHasMipmapsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return if the Type has a mipmap chain.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return if the Type has a mipmap chain.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Type.html#hasMipmaps()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetName">
      <MemberSignature Language="C#" Value="public override void SetName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetName(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setName", "(Ljava/lang/String;)V", "GetSetName_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Yuv">
      <MemberSignature Language="C#" Value="public virtual int Yuv { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Yuv" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getYuv", "()I", "GetGetYuvHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the YUV format</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the YUV format</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Type.html#getYuv()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
  </Members>
</Type>