<Type Name="AdapterViewFlipper" FullName="Android.Widget.AdapterViewFlipper">
  <TypeSignature Language="C#" Value="public class AdapterViewFlipper : Android.Widget.AdapterViewAnimator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AdapterViewFlipper extends Android.Widget.AdapterViewAnimator" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Widget.AdapterViewAnimator</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/widget/AdapterViewFlipper", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Simple <c><see cref="T:Android.Widget.ViewAnimator" /></c> that will animate between two or more views
 that have been added to it.</summary>
    <remarks><para tool="javadoc-to-mdoc">Simple <c><see cref="T:Android.Widget.ViewAnimator" /></c> that will animate between two or more views
 that have been added to it.  Only one child is shown at a time.  If
 requested, can automatically flip between each child at a regular interval.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/widget/AdapterViewFlipper.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 11" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AdapterViewFlipper (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary></summary>
        <remarks><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/widget/AdapterViewFlipper.html#AdapterViewFlipper(android.content.Context)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AdapterViewFlipper (Android.Content.Context context, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary></summary>
        <remarks><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/widget/AdapterViewFlipper.html#AdapterViewFlipper(android.content.Context, android.util.AttributeSet)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AdapterViewFlipper (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoStart">
      <MemberSignature Language="C#" Value="public virtual bool AutoStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isAutoStart", "()Z", "GetIsAutoStartHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setAutoStart", "(Z)V", "GetSetAutoStart_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this view automatically calls <c><see cref="M:Android.Widget.AdapterViewFlipper.StartFlipping" /></c>
 when it becomes attached to a window.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/android/widget/AdapterViewFlipper.html#isAutoStart()" target="_blank">[Android Documentation]</a><br /></format>Returns true if this view automatically calls <c><see cref="M:Android.Widget.AdapterViewFlipper.StartFlipping" /></c>
 when it becomes attached to a window.
</para><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/android/widget/AdapterViewFlipper.html#setAutoStart(boolean)" target="_blank">[Android Documentation]</a><br /></format>Set if this view automatically calls <c><see cref="M:Android.Widget.AdapterViewFlipper.StartFlipping" /></c> when it
 becomes attached to a window.
</para></remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="FlipInterval">
      <MemberSignature Language="C#" Value="public virtual int FlipInterval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FlipInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFlipInterval", "()I", "GetGetFlipIntervalHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the flip interval, in milliseconds.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns the flip interval, in milliseconds.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/widget/AdapterViewFlipper.html#getFlipInterval()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Widget.AdapterViewFlipper.SetFlipInterval(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsFlipping">
      <MemberSignature Language="C#" Value="public virtual bool IsFlipping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFlipping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isFlipping", "()Z", "GetIsFlippingHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if the child views are flipping.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns true if the child views are flipping.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/widget/AdapterViewFlipper.html#isFlipping()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetFlipInterval">
      <MemberSignature Language="C#" Value="public virtual void SetFlipInterval (int milliseconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFlipInterval(int32 milliseconds) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setFlipInterval", "(I)V", "GetSetFlipInterval_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="milliseconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="milliseconds">To be added.</param>
        <summary>How long to wait before flipping to the next view.</summary>
        <remarks><para tool="javadoc-to-mdoc">How long to wait before flipping to the next view.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/widget/AdapterViewFlipper.html#setFlipInterval(int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 11" />
        <altmember cref="P:Android.Widget.AdapterViewFlipper.FlipInterval" />
      </Docs>
    </Member>
    <Member MemberName="StartFlipping">
      <MemberSignature Language="C#" Value="public virtual void StartFlipping ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartFlipping() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startFlipping", "()V", "GetStartFlippingHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Start a timer to cycle through child views
</summary>
        <remarks><para tool="javadoc-to-mdoc">Start a timer to cycle through child views
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/widget/AdapterViewFlipper.html#startFlipping()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="StopFlipping">
      <MemberSignature Language="C#" Value="public virtual void StopFlipping ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopFlipping() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("stopFlipping", "()V", "GetStopFlippingHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>No more flips
</summary>
        <remarks><para tool="javadoc-to-mdoc">No more flips
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/widget/AdapterViewFlipper.html#stopFlipping()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
