<Type Name="ShareActionProvider" FullName="Android.Widget.ShareActionProvider">
  <TypeSignature Language="C#" Value="public class ShareActionProvider : Android.Views.ActionProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ShareActionProvider extends Android.Views.ActionProvider" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Views.ActionProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/widget/ShareActionProvider", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="14">
    <summary>This is a provider for a share action.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">This is a provider for a share action. It is responsible for creating views
 that enable data sharing and also to show a sub menu with sharing activities
 if the hosting item is placed on the overflow menu.
 <example><code lang="java">
 // In Activity#onCreateOptionsMenu
 public boolean onCreateOptionsMenu(Menu menu) {
     // Get the menu item.
     MenuItem menuItem = menu.findItem(R.id.my_menu_item);
     // Get the provider and hold onto it to set/change the share intent.
     mShareActionProvider = (ShareActionProvider) menuItem.getActionProvider();
     // Set history different from the default before getting the action
     // view since a call to MenuItem.getActionView() calls
     // onCreateActionView() which uses the backing file name. Omit this
     // line if using the default share history file is desired.
     mShareActionProvider.setShareHistoryFileName("custom_share_history.xml");
     . . .
 }

 // Somewhere in the application.
 public void doShare(Intent shareIntent) {
     // When you want to share set the share intent.
     mShareActionProvider.setShareIntent(shareIntent);
 }</code></example></para>
      <para tool="javadoc-to-mdoc">
 Here is how to use the action provider with custom backing file in a <c><see cref="T:Android.Views.IMenuItem" /></c>:
 </para>
      <para tool="javadoc-to-mdoc">
        <i>Note:</i> While the sample snippet demonstrates how to use this provider
 in the context of a menu item, the use of the provider is not limited to menu items.
 </para>
      <format type="text/html">
        <h5 class="jd-tagtitle">See Also</h5>
      </format>
      <list type="bullet">
        <item>
          <term>
            <c>
              <see cref="T:Android.Views.ActionProvider" />
            </c>
          </term>
        </item>
      </list>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/widget/ShareActionProvider.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 14" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ShareActionProvider (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>Creates a new instance.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new instance.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/ShareActionProvider.html#ShareActionProvider(android.content.Context)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ShareActionProvider (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultShareHistoryFileName">
      <MemberSignature Language="C#" Value="public const string DefaultShareHistoryFileName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultShareHistoryFileName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DEFAULT_SHARE_HISTORY_FILE_NAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The default name for storing share history.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The default name for storing share history.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/ShareActionProvider.html#DEFAULT_SHARE_HISTORY_FILE_NAME" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateActionView">
      <MemberSignature Language="C#" Value="public override Android.Views.View OnCreateActionView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Views.View OnCreateActionView() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onCreateActionView", "()Landroid/view/View;", "GetOnCreateActionViewHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Factory method called by the Android framework to create new action views.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Factory method called by the Android framework to create new action views.

 </para>
          <para tool="javadoc-to-mdoc">This method has been deprecated in favor of <c><see cref="M:Android.Views.ActionProvider.OnCreateActionView(Android.Views.IMenuItem)" /></c>.
 Newer apps that wish to support platform versions prior to API 16 should also
 implement this method to return a valid action view.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/ShareActionProvider.html#onCreateActionView()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetOnShareTargetSelectedListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnShareTargetSelectedListener (Android.Widget.ShareActionProvider.IOnShareTargetSelectedListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnShareTargetSelectedListener(class Android.Widget.ShareActionProvider/IOnShareTargetSelectedListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnShareTargetSelectedListener", "(Landroid/widget/ShareActionProvider$OnShareTargetSelectedListener;)V", "GetSetOnShareTargetSelectedListener_Landroid_widget_ShareActionProvider_OnShareTargetSelectedListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Widget.ShareActionProvider+IOnShareTargetSelectedListener" />
      </Parameters>
      <Docs>
        <param name="listener">The listener.
</param>
        <summary>Sets a listener to be notified when a share target has been selected.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets a listener to be notified when a share target has been selected.
 The listener can optionally decide to handle the selection and
 not rely on the default behavior which is to launch the activity.
 </para>
          <para tool="javadoc-to-mdoc">
            <i>Note:</i> If you choose the backing share history file
     you will still be notified in this callback.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/ShareActionProvider.html#setOnShareTargetSelectedListener(android.widget.ShareActionProvider.OnShareTargetSelectedListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetShareHistoryFileName">
      <MemberSignature Language="C#" Value="public virtual void SetShareHistoryFileName (string shareHistoryFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetShareHistoryFileName(string shareHistoryFile) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setShareHistoryFileName", "(Ljava/lang/String;)V", "GetSetShareHistoryFileName_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shareHistoryFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="shareHistoryFile">The share history file name.
</param>
        <summary>Sets the file name of a file for persisting the share history which
 history will be used for ordering share targets.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the file name of a file for persisting the share history which
 history will be used for ordering share targets. This file will be used
 for all view created by <c><see cref="M:Android.Widget.ShareActionProvider.OnCreateActionView" /></c>. Defaults to
 <c><see cref="F:Android.Widget.ShareActionProvider.DefaultShareHistoryFileName" /></c>. Set to <c>null</c>
 if share history should not be persisted between sessions.
 <example><code lang="java">
 private void doShare(Intent intent) {
     if (IMAGE.equals(intent.getMimeType())) {
         mShareActionProvider.setHistoryFileName(SHARE_IMAGE_HISTORY_FILE_NAME);
     } else if (TEXT.equals(intent.getMimeType())) {
         mShareActionProvider.setHistoryFileName(SHARE_TEXT_HISTORY_FILE_NAME);
     }
     mShareActionProvider.setIntent(intent);
     invalidateOptionsMenu();
 }</code></example></para>
          <para tool="javadoc-to-mdoc">
            <i>Note:</i> The history file name can be set any time, however
 only the action views created by <c><see cref="M:Android.Widget.ShareActionProvider.OnCreateActionView" /></c> after setting
 the file name will be backed by the provided file. Therefore, if you want to
 use different history files for sharing specific types of content, every time
 you change the history file <c><see cref="M:Android.Widget.ShareActionProvider.SetShareHistoryFileName(System.String)" /></c> you must
 call <c><see cref="M:Android.App.Activity.InvalidateOptionsMenu" /></c> to recreate the
 action view. You should <i>not</i> call
 <c><see cref="M:Android.App.Activity.InvalidateOptionsMenu" /></c> from
 <c><see cref="M:Android.App.Activity.OnCreateOptionsMenu(Android.Views.IMenu)" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/ShareActionProvider.html#setShareHistoryFileName(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetShareIntent">
      <MemberSignature Language="C#" Value="public virtual void SetShareIntent (Android.Content.Intent shareIntent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetShareIntent(class Android.Content.Intent shareIntent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setShareIntent", "(Landroid/content/Intent;)V", "GetSetShareIntent_Landroid_content_Intent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shareIntent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="shareIntent">The share intent.</param>
        <summary>Sets an intent with information about the share action.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets an intent with information about the share action. Here is a
 sample for constructing a share intent:
 <example><code lang="java">
 Intent shareIntent = new Intent(Intent.ACTION_SEND);
 shareIntent.setType("image/*");
 Uri uri = Uri.fromFile(new File(getFilesDir(), "foo.jpg"));
 shareIntent.putExtra(Intent.EXTRA_STREAM, uri));</code></example></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/ShareActionProvider.html#setShareIntent(android.content.Intent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="F:Android.Content.Intent.ActionSend" />
        <altmember cref="F:Android.Content.Intent.ActionSendMultiple" />
      </Docs>
    </Member>
    <Member MemberName="ShareTargetSelected">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Widget.ShareActionProvider.ShareTargetSelectedEventArgs&gt; ShareTargetSelected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Widget.ShareActionProvider/ShareTargetSelectedEventArgs&gt; ShareTargetSelected" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Widget.ShareActionProvider+ShareTargetSelectedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>