<Type Name="QuickContactBadge" FullName="Android.Widget.QuickContactBadge">
  <TypeSignature Language="C#" Value="public class QuickContactBadge : Android.Widget.ImageView, Android.Views.View.IOnClickListener, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QuickContactBadge extends Android.Widget.ImageView implements class Android.Runtime.IJavaObject, class Android.Views.View/IOnClickListener, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Widget.ImageView</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Views.View+IOnClickListener</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/widget/QuickContactBadge", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="5">
    <summary>Widget used to show an image with the standard QuickContact badge
 and on-click behavior.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Widget used to show an image with the standard QuickContact badge
 and on-click behavior.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/widget/QuickContactBadge.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 5" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QuickContactBadge (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/QuickContactBadge.html#QuickContactBadge(android.content.Context)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QuickContactBadge (Android.Content.Context context, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/QuickContactBadge.html#QuickContactBadge(android.content.Context, android.util.AttributeSet)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected QuickContactBadge (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QuickContactBadge (Android.Content.Context context, Android.Util.IAttributeSet attrs, int defStyleAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs, int32 defStyleAttr) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="defStyle" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <param name="defStyleAttr">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/QuickContactBadge.html#QuickContactBadge(android.content.Context, android.util.AttributeSet, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QuickContactBadge (Android.Content.Context context, Android.Util.IAttributeSet attrs, int defStyleAttr, int defStyleRes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs, int32 defStyleAttr, int32 defStyleRes) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;II)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="defStyleAttr" Type="System.Int32" />
        <Parameter Name="defStyleRes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <param name="defStyleAttr">To be added.</param>
        <param name="defStyleRes">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/QuickContactBadge.html#QuickContactBadge(android.content.Context, android.util.AttributeSet, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AssignContactFromEmail">
      <MemberSignature Language="C#" Value="public virtual void AssignContactFromEmail (string emailAddress, bool lazyLookup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AssignContactFromEmail(string emailAddress, bool lazyLookup) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("assignContactFromEmail", "(Ljava/lang/String;Z)V", "GetAssignContactFromEmail_Ljava_lang_String_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailAddress" Type="System.String" />
        <Parameter Name="lazyLookup" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="emailAddress">The email address of the contact.</param>
        <param name="lazyLookup">If this is true, the lookup query will not be performed
 until this view is clicked.
</param>
        <summary>Assign a contact based on an email address.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Assign a contact based on an email address. This should only be used when
 the contact's URI is not available, as an extra query will have to be
 performed to lookup the URI based on the email.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/QuickContactBadge.html#assignContactFromEmail(java.lang.String, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="AssignContactFromEmail">
      <MemberSignature Language="C#" Value="public virtual void AssignContactFromEmail (string emailAddress, bool lazyLookup, Android.OS.Bundle extras);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AssignContactFromEmail(string emailAddress, bool lazyLookup, class Android.OS.Bundle extras) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("assignContactFromEmail", "(Ljava/lang/String;ZLandroid/os/Bundle;)V", "GetAssignContactFromEmail_Ljava_lang_String_ZLandroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailAddress" Type="System.String" />
        <Parameter Name="lazyLookup" Type="System.Boolean" />
        <Parameter Name="extras" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="emailAddress">The email address of the contact.</param>
        <param name="lazyLookup">If this is true, the lookup query will not be performed
     until this view is clicked.</param>
        <param name="extras">A bundle of extras to populate the contact edit page with if the contact
     is not found and the user chooses to add the email address to an existing contact or
     create a new contact. Uses the same string constants as those found in
     <c><see cref="!:NoType:android/provider/ContactsContract$Intents$Insert;Href=../../../reference/android/provider/ContactsContract.Intents.Insert.html" /></c></param>
        <summary>Assign a contact based on an email address.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Assign a contact based on an email address. This should only be used when
 the contact's URI is not available, as an extra query will have to be
 performed to lookup the URI based on the email.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/QuickContactBadge.html#assignContactFromEmail(java.lang.String, boolean, android.os.Bundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="AssignContactFromPhone">
      <MemberSignature Language="C#" Value="public virtual void AssignContactFromPhone (string phoneNumber, bool lazyLookup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AssignContactFromPhone(string phoneNumber, bool lazyLookup) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("assignContactFromPhone", "(Ljava/lang/String;Z)V", "GetAssignContactFromPhone_Ljava_lang_String_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phoneNumber" Type="System.String" />
        <Parameter Name="lazyLookup" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="phoneNumber">The phone number of the contact.</param>
        <param name="lazyLookup">If this is true, the lookup query will not be performed
 until this view is clicked.
</param>
        <summary>Assign a contact based on a phone number.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Assign a contact based on a phone number. This should only be used when
 the contact's URI is not available, as an extra query will have to be
 performed to lookup the URI based on the phone number.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/QuickContactBadge.html#assignContactFromPhone(java.lang.String, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="AssignContactFromPhone">
      <MemberSignature Language="C#" Value="public virtual void AssignContactFromPhone (string phoneNumber, bool lazyLookup, Android.OS.Bundle extras);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AssignContactFromPhone(string phoneNumber, bool lazyLookup, class Android.OS.Bundle extras) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("assignContactFromPhone", "(Ljava/lang/String;ZLandroid/os/Bundle;)V", "GetAssignContactFromPhone_Ljava_lang_String_ZLandroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phoneNumber" Type="System.String" />
        <Parameter Name="lazyLookup" Type="System.Boolean" />
        <Parameter Name="extras" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="phoneNumber">The phone number of the contact.</param>
        <param name="lazyLookup">If this is true, the lookup query will not be performed
 until this view is clicked.</param>
        <param name="extras">A bundle of extras to populate the contact edit page with if the contact
 is not found and the user chooses to add the phone number to an existing contact or
 create a new contact. Uses the same string constants as those found in
 <c><see cref="!:NoType:android/provider/ContactsContract$Intents$Insert;Href=../../../reference/android/provider/ContactsContract.Intents.Insert.html" /></c></param>
        <summary>Assign a contact based on a phone number.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Assign a contact based on a phone number. This should only be used when
 the contact's URI is not available, as an extra query will have to be
 performed to lookup the URI based on the phone number.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/QuickContactBadge.html#assignContactFromPhone(java.lang.String, boolean, android.os.Bundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="AssignContactUri">
      <MemberSignature Language="C#" Value="public virtual void AssignContactUri (Android.Net.Uri contactUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AssignContactUri(class Android.Net.Uri contactUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("assignContactUri", "(Landroid/net/Uri;)V", "GetAssignContactUri_Landroid_net_Uri_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contactUri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="contactUri">Either a <c><see cref="!:NoType:android/provider/ContactsContract$Contacts;Href=../../../reference/android/provider/ContactsContract.Contacts.html#CONTENT_URI" /></c> or
            <c><see cref="!:NoType:android/provider/ContactsContract$Contacts;Href=../../../reference/android/provider/ContactsContract.Contacts.html#CONTENT_LOOKUP_URI" /></c> style URI.
</param>
        <summary>Assign the contact uri that this QuickContactBadge should be associated
 with.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Assign the contact uri that this QuickContactBadge should be associated
 with. Note that this is only used for displaying the QuickContact window and
 won't bind the contact's photo for you. Call <c><see cref="M:Android.Widget.ImageView.SetImageDrawable(Android.Graphics.Drawables.Drawable)" /></c> to set the
 photo.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/QuickContactBadge.html#assignContactUri(android.net.Uri)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="MExcludeMimes">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IList&lt;string&gt; MExcludeMimes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; MExcludeMimes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("mExcludeMimes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/QuickContactBadge.html#mExcludeMimes" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="public virtual void OnClick (Android.Views.View v);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnClick(class Android.Views.View v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onClick", "(Landroid/view/View;)V", "GetOnClick_Landroid_view_View_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="v">The view that was clicked.
</param>
        <summary>Called when a view has been clicked.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when a view has been clicked.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/QuickContactBadge.html#onClick(android.view.View)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="SetExcludeMimes">
      <MemberSignature Language="C#" Value="public virtual void SetExcludeMimes (string[] excludeMimes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetExcludeMimes(string[] excludeMimes) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setExcludeMimes", "([Ljava/lang/String;)V", "GetSetExcludeMimes_arrayLjava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="excludeMimes" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="excludeMimes">To be added.</param>
        <summary>Set a list of specific MIME-types to exclude and not display.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set a list of specific MIME-types to exclude and not display. For
 example, this can be used to hide the <c><see cref="!:NoType:android/provider/ContactsContract$Contacts;Href=../../../reference/android/provider/ContactsContract.Contacts.html#CONTENT_ITEM_TYPE" /></c>
 profile icon.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/QuickContactBadge.html#setExcludeMimes(java.lang.String[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="SetImageToDefault">
      <MemberSignature Language="C#" Value="public virtual void SetImageToDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetImageToDefault() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setImageToDefault", "()V", "GetSetImageToDefaultHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resets the contact photo to the default state.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Resets the contact photo to the default state.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/QuickContactBadge.html#setImageToDefault()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetMode">
      <MemberSignature Language="C#" Value="public virtual void SetMode (int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMode(int32 size) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setMode", "(I)V", "GetSetMode_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="size">To be added.</param>
        <summary>This call has no effect anymore, as there is only one QuickContact mode </summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This call has no effect anymore, as there is only one QuickContact mode </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/QuickContactBadge.html#setMode(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="SetOverlay">
      <MemberSignature Language="C#" Value="public virtual void SetOverlay (Android.Graphics.Drawables.Drawable overlay);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOverlay(class Android.Graphics.Drawables.Drawable overlay) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOverlay", "(Landroid/graphics/drawable/Drawable;)V", "GetSetOverlay_Landroid_graphics_drawable_Drawable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="overlay" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="overlay">Drawable to be drawn over the assigned contact photo. Must have a non-zero
         instrinsic width and height.
</param>
        <summary>Assigns the drawable that is to be drawn on top of the assigned contact photo.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Assigns the drawable that is to be drawn on top of the assigned contact photo.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/QuickContactBadge.html#setOverlay(android.graphics.drawable.Drawable)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>