<Type Name="EdgeEffect" FullName="Android.Widget.EdgeEffect">
  <TypeSignature Language="C#" Value="public class EdgeEffect : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EdgeEffect extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Widget.EdgeEffect" />
  <TypeSignature Language="F#" Value="type EdgeEffect = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/widget/EdgeEffect", ApiSince=14, DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="14">
    <summary>This class performs the graphical effect used at the edges of scrollable widgets
 when the user scrolls beyond the content bounds in 2D space.</summary>
    <remarks />
    <since version="Added in API level 14" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EdgeEffect (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.EdgeEffect.#ctor(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="new Android.Widget.EdgeEffect : Android.Content.Context -&gt; Android.Widget.EdgeEffect" Usage="new Android.Widget.EdgeEffect context" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>Construct a new EdgeEffect with a theme appropriate for the provided context.</summary>
        <remarks />
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EdgeEffect (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.EdgeEffect.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Widget.EdgeEffect : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Widget.EdgeEffect" Usage="new Android.Widget.EdgeEffect (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Color">
      <MemberSignature Language="C#" Value="public virtual int Color { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Color" />
      <MemberSignature Language="DocId" Value="P:Android.Widget.EdgeEffect.Color" />
      <MemberSignature Language="F#" Value="member this.Color : int" Usage="Android.Widget.EdgeEffect.Color" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getColor", "()I", "GetGetColorHandler", ApiSince=21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the color of this edge effect in argb.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public virtual bool Draw (Android.Graphics.Canvas canvas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Draw(class Android.Graphics.Canvas canvas) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.EdgeEffect.Draw(Android.Graphics.Canvas)" />
      <MemberSignature Language="F#" Value="abstract member Draw : Android.Graphics.Canvas -&gt; bool&#xA;override this.Draw : Android.Graphics.Canvas -&gt; bool" Usage="edgeEffect.Draw canvas" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("draw", "(Landroid/graphics/Canvas;)Z", "GetDraw_Landroid_graphics_Canvas_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
      </Parameters>
      <Docs>
        <param name="canvas">Canvas to draw into</param>
        <summary>Draw into the provided canvas.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="Finish">
      <MemberSignature Language="C#" Value="public virtual void Finish ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Finish() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.EdgeEffect.Finish" />
      <MemberSignature Language="F#" Value="abstract member Finish : unit -&gt; unit&#xA;override this.Finish : unit -&gt; unit" Usage="edgeEffect.Finish " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("finish", "()V", "GetFinishHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Immediately finish the current animation.</summary>
        <remarks />
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="IsFinished">
      <MemberSignature Language="C#" Value="public virtual bool IsFinished { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFinished" />
      <MemberSignature Language="DocId" Value="P:Android.Widget.EdgeEffect.IsFinished" />
      <MemberSignature Language="F#" Value="member this.IsFinished : bool" Usage="Android.Widget.EdgeEffect.IsFinished" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isFinished", "()Z", "GetIsFinishedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reports if this EdgeEffect's animation is finished.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Widget.EdgeEffect.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Widget.EdgeEffect.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks/>
      </Docs>
    </Member>
    <Member MemberName="MaxHeight">
      <MemberSignature Language="C#" Value="public virtual int MaxHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxHeight" />
      <MemberSignature Language="DocId" Value="P:Android.Widget.EdgeEffect.MaxHeight" />
      <MemberSignature Language="F#" Value="member this.MaxHeight : int" Usage="Android.Widget.EdgeEffect.MaxHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMaxHeight", "()I", "GetGetMaxHeightHandler", ApiSince=21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the maximum height that the edge effect will be drawn at given the original
 <c><see cref="M:Android.Widget.EdgeEffect.SetSize(System.Int32, System.Int32)" /></c>.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="OnAbsorb">
      <MemberSignature Language="C#" Value="public virtual void OnAbsorb (int velocity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnAbsorb(int32 velocity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.EdgeEffect.OnAbsorb(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnAbsorb : int -&gt; unit&#xA;override this.OnAbsorb : int -&gt; unit" Usage="edgeEffect.OnAbsorb velocity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onAbsorb", "(I)V", "GetOnAbsorb_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="velocity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="velocity">Velocity at impact in pixels per second.
</param>
        <summary>Call when the effect absorbs an impact at the given velocity.</summary>
        <remarks />
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="OnPull">
      <MemberSignature Language="C#" Value="public virtual void OnPull (float deltaDistance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPull(float32 deltaDistance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.EdgeEffect.OnPull(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member OnPull : single -&gt; unit&#xA;override this.OnPull : single -&gt; unit" Usage="edgeEffect.OnPull deltaDistance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onPull", "(F)V", "GetOnPull_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deltaDistance" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="deltaDistance">Change in distance since the last call. Values may be 0 (no change) to
                      1.f (full length of the view) or negative values to express change
                      back toward the edge reached to initiate the effect.
</param>
        <summary>A view should call this when content is pulled away from an edge by the user.</summary>
        <remarks />
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="OnPull">
      <MemberSignature Language="C#" Value="public virtual void OnPull (float deltaDistance, float displacement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPull(float32 deltaDistance, float32 displacement) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.EdgeEffect.OnPull(System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member OnPull : single * single -&gt; unit&#xA;override this.OnPull : single * single -&gt; unit" Usage="edgeEffect.OnPull (deltaDistance, displacement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onPull", "(FF)V", "GetOnPull_FFHandler", ApiSince=21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deltaDistance" Type="System.Single" />
        <Parameter Name="displacement" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="deltaDistance">Change in distance since the last call. Values may be 0 (no change) to
                      1.f (full length of the view) or negative values to express change
                      back toward the edge reached to initiate the effect.</param>
        <param name="displacement">The displacement from the starting side of the effect of the point
                     initiating the pull. In the case of touch this is the finger position.
                     Values may be from 0-1.
</param>
        <summary>A view should call this when content is pulled away from an edge by the user.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="OnRelease">
      <MemberSignature Language="C#" Value="public virtual void OnRelease ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnRelease() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.EdgeEffect.OnRelease" />
      <MemberSignature Language="F#" Value="abstract member OnRelease : unit -&gt; unit&#xA;override this.OnRelease : unit -&gt; unit" Usage="edgeEffect.OnRelease " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onRelease", "()V", "GetOnReleaseHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Call when the object is released after being pulled.</summary>
        <remarks />
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetColor">
      <MemberSignature Language="C#" Value="public virtual void SetColor (Android.Graphics.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetColor(valuetype Android.Graphics.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.EdgeEffect.SetColor(Android.Graphics.Color)" />
      <MemberSignature Language="F#" Value="abstract member SetColor : Android.Graphics.Color -&gt; unit&#xA;override this.SetColor : Android.Graphics.Color -&gt; unit" Usage="edgeEffect.SetColor color" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setColor", "(I)V", "GetSetColor_IHandler", ApiSince=21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="Android.Graphics.Color" />
      </Parameters>
      <Docs>
        <param name="color">To be added.</param>
        <summary>To be added.</summary>
        <remarks/>
      </Docs>
    </Member>
    <Member MemberName="SetSize">
      <MemberSignature Language="C#" Value="public virtual void SetSize (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSize(int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Widget.EdgeEffect.SetSize(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetSize : int * int -&gt; unit&#xA;override this.SetSize : int * int -&gt; unit" Usage="edgeEffect.SetSize (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSize", "(II)V", "GetSetSize_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">Effect width in pixels</param>
        <param name="height">Effect height in pixels
</param>
        <summary>Set the size of this edge effect in pixels.</summary>
        <remarks />
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Widget.EdgeEffect.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Widget.EdgeEffect.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Widget.EdgeEffect.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Widget.EdgeEffect.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
