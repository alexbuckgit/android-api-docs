<Type Name="TabWidget" FullName="Android.Widget.TabWidget">
  <TypeSignature Language="C#" Value="public class TabWidget : Android.Widget.LinearLayout, Android.Views.View.IOnFocusChangeListener, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TabWidget extends Android.Widget.LinearLayout implements class Android.Runtime.IJavaObject, class Android.Views.View/IOnFocusChangeListener, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Widget.LinearLayout</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Views.View+IOnFocusChangeListener</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/widget/TabWidget", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Displays a list of tab labels representing each page in the parent's tab
 collection.</summary>
    <remarks><para tool="javadoc-to-mdoc">Displays a list of tab labels representing each page in the parent's tab
 collection. The container object for this widget is
 <c><see cref="T:Android.Widget.TabHost" /></c>. When the user selects a tab, this
 object sends a message to the parent container, TabHost, to tell it to switch
 the displayed page. You typically won't use many methods directly on this
 object. The container TabHost is used to add labels, add the callback
 handler, and manage callbacks. You might call this object to iterate the list
 of tabs, or to tweak the layout of the tab list, but most methods should be
 called on the containing TabHost object.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/widget/TabWidget.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TabWidget (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary></summary>
        <remarks><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/widget/TabWidget.html#TabWidget(android.content.Context)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TabWidget (Android.Content.Context context, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary></summary>
        <remarks><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/widget/TabWidget.html#TabWidget(android.content.Context, android.util.AttributeSet)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TabWidget (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TabWidget (Android.Content.Context context, Android.Util.IAttributeSet attrs, int defStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs, int32 defStyle) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="defStyle" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <param name="defStyle">To be added.</param>
        <summary></summary>
        <remarks><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/widget/TabWidget.html#TabWidget(android.content.Context, android.util.AttributeSet, int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DispatchDraw">
      <MemberSignature Language="C#" Value="public virtual void DispatchDraw (Android.Graphics.Canvas canvas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DispatchDraw(class Android.Graphics.Canvas canvas) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchDraw", "(Landroid/graphics/Canvas;)V", "GetDispatchDraw_Landroid_graphics_Canvas_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
      </Parameters>
      <Docs>
        <param name="canvas">the canvas on which to draw the view
</param>
        <summary>Called by draw to draw the child views.</summary>
        <remarks><para tool="javadoc-to-mdoc">Called by draw to draw the child views. This may be overridden
 by derived classes to gain control just before its children are drawn
 (but after its own view has been drawn).
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/widget/TabWidget.html#dispatchDraw(android.graphics.Canvas)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FocusCurrentTab">
      <MemberSignature Language="C#" Value="public virtual void FocusCurrentTab (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FocusCurrentTab(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("focusCurrentTab", "(I)V", "GetFocusCurrentTab_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The tab that you want focused (highlighted in orange)
  and selected (tab brought to the front of the widget)</param>
        <summary>Sets the current tab and focuses the UI on it.</summary>
        <remarks><para tool="javadoc-to-mdoc">Sets the current tab and focuses the UI on it.
 This method makes sure that the focused tab matches the selected
 tab, normally at <c><see cref="M:Android.Widget.TabWidget.SetCurrentTab(System.Int32)" /></c>.  Normally this would not
 be an issue if we go through the UI, since the UI is responsible
 for calling TabWidget.onFocusChanged(), but in the case where we
 are selecting the tab programmatically, we'll need to make sure
 focus keeps up.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/widget/TabWidget.html#focusCurrentTab(int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Widget.TabWidget.SetCurrentTab(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChildTabViewAt">
      <MemberSignature Language="C#" Value="public virtual Android.Views.View GetChildTabViewAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.View GetChildTabViewAt(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getChildTabViewAt", "(I)Landroid/view/View;", "GetGetChildTabViewAt_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">the zero-based index of the tab indicator view to return</param>
        <summary>Returns the tab indicator view at the given index.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns the tab indicator view at the given index.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/widget/TabWidget.html#getChildTabViewAt(int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="OnFocusChange">
      <MemberSignature Language="C#" Value="public virtual void OnFocusChange (Android.Views.View v, bool hasFocus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnFocusChange(class Android.Views.View v, bool hasFocus) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onFocusChange", "(Landroid/view/View;Z)V", "GetOnFocusChange_Landroid_view_View_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="Android.Views.View" />
        <Parameter Name="hasFocus" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="v">The view whose state has changed.</param>
        <param name="hasFocus">The new focus state of v.
</param>
        <summary>Called when the focus state of a view has changed.</summary>
        <remarks><para tool="javadoc-to-mdoc">Called when the focus state of a view has changed. </para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/widget/TabWidget.html#onFocusChange(android.view.View, boolean)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetCurrentTab">
      <MemberSignature Language="C#" Value="public virtual void SetCurrentTab (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCurrentTab(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setCurrentTab", "(I)V", "GetSetCurrentTab_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The tab that you want to indicate as the selected
  tab (tab brought to the front of the widget)</param>
        <summary>Sets the current tab.</summary>
        <remarks><para tool="javadoc-to-mdoc">Sets the current tab.
 This method is used to bring a tab to the front of the Widget,
 and is used to post to the rest of the UI that a different tab
 has been brought to the foreground.

 Note, this is separate from the traditional "focus" that is
 employed from the view logic.

 For instance, if we have a list in a tabbed view, a user may be
 navigating up and down the list, moving the UI focus (orange
 highlighting) through the list items.  The cursor movement does
 not effect the "selected" tab though, because what is being
 scrolled through is all on the same tab.  The selected tab only
 changes when we navigate between tabs (moving from the list view
 to the next tabbed view, in this example).

 To move both the focus AND the selected tab at once, please use
 <c><see cref="M:Android.Widget.TabWidget.SetCurrentTab(System.Int32)" /></c>. Normally, the view logic takes care of
 adjusting the focus, so unless you're circumventing the UI,
 you'll probably just focus your interest here.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/widget/TabWidget.html#setCurrentTab(int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Widget.TabWidget.FocusCurrentTab(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SetDividerDrawable">
      <MemberSignature Language="C#" Value="public override void SetDividerDrawable (Android.Graphics.Drawables.Drawable drawable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetDividerDrawable(class Android.Graphics.Drawables.Drawable drawable) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDividerDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetDividerDrawable_Landroid_graphics_drawable_Drawable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drawable" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="drawable">the divider drawable
</param>
        <summary>Sets the drawable to use as a divider between the tab indicators.</summary>
        <remarks><para tool="javadoc-to-mdoc">Sets the drawable to use as a divider between the tab indicators.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/widget/TabWidget.html#setDividerDrawable(android.graphics.drawable.Drawable)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="SetDividerDrawable">
      <MemberSignature Language="C#" Value="public virtual void SetDividerDrawable (int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDividerDrawable(int32 resId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDividerDrawable", "(I)V", "GetSetDividerDrawable_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resId">the resource identifier of the drawable to use as a
 divider.
</param>
        <summary>Sets the drawable to use as a divider between the tab indicators.</summary>
        <remarks><para tool="javadoc-to-mdoc">Sets the drawable to use as a divider between the tab indicators.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/widget/TabWidget.html#setDividerDrawable(int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="SetLeftStripDrawable">
      <MemberSignature Language="C#" Value="public virtual void SetLeftStripDrawable (Android.Graphics.Drawables.Drawable drawable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLeftStripDrawable(class Android.Graphics.Drawables.Drawable drawable) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLeftStripDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetLeftStripDrawable_Landroid_graphics_drawable_Drawable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drawable" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="drawable">the left strip drawable
</param>
        <summary>Sets the drawable to use as the left part of the strip below the
 tab indicators.</summary>
        <remarks><para tool="javadoc-to-mdoc">Sets the drawable to use as the left part of the strip below the
 tab indicators.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/widget/TabWidget.html#setLeftStripDrawable(android.graphics.drawable.Drawable)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetLeftStripDrawable">
      <MemberSignature Language="C#" Value="public virtual void SetLeftStripDrawable (int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLeftStripDrawable(int32 resId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLeftStripDrawable", "(I)V", "GetSetLeftStripDrawable_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resId">the resource identifier of the drawable to use as the
 left strip drawable
</param>
        <summary>Sets the drawable to use as the left part of the strip below the
 tab indicators.</summary>
        <remarks><para tool="javadoc-to-mdoc">Sets the drawable to use as the left part of the strip below the
 tab indicators.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/widget/TabWidget.html#setLeftStripDrawable(int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetRightStripDrawable">
      <MemberSignature Language="C#" Value="public virtual void SetRightStripDrawable (Android.Graphics.Drawables.Drawable drawable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRightStripDrawable(class Android.Graphics.Drawables.Drawable drawable) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setRightStripDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetRightStripDrawable_Landroid_graphics_drawable_Drawable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drawable" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="drawable">the right strip drawable
</param>
        <summary>Sets the drawable to use as the right part of the strip below the
 tab indicators.</summary>
        <remarks><para tool="javadoc-to-mdoc">Sets the drawable to use as the right part of the strip below the
 tab indicators.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/widget/TabWidget.html#setRightStripDrawable(android.graphics.drawable.Drawable)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetRightStripDrawable">
      <MemberSignature Language="C#" Value="public virtual void SetRightStripDrawable (int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRightStripDrawable(int32 resId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setRightStripDrawable", "(I)V", "GetSetRightStripDrawable_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resId">the resource identifier of the drawable to use as the
 right strip drawable
</param>
        <summary>Sets the drawable to use as the right part of the strip below the
 tab indicators.</summary>
        <remarks><para tool="javadoc-to-mdoc">Sets the drawable to use as the right part of the strip below the
 tab indicators.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/widget/TabWidget.html#setRightStripDrawable(int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="StripEnabled">
      <MemberSignature Language="C#" Value="public virtual bool StripEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StripEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isStripEnabled", "()Z", "GetIsStripEnabledHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setStripEnabled", "(Z)V", "GetSetStripEnabled_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether the bottom strips on the tab indicators are drawn
 or not.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/android/widget/TabWidget.html#isStripEnabled()" target="_blank">[Android Documentation]</a><br /></format>Indicates whether the bottom strips on the tab indicators are drawn
 or not.
</para><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/android/widget/TabWidget.html#setStripEnabled(boolean)" target="_blank">[Android Documentation]</a><br /></format>Controls whether the bottom strips on the tab indicators are drawn or
 not.  The default is to draw them.  If the user specifies a custom
 view for the tab indicators, then the TabHost class calls this method
 to disable drawing of the bottom strips.</para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="TabCount">
      <MemberSignature Language="C#" Value="public virtual int TabCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TabCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTabCount", "()I", "GetGetTabCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the number of tab indicator views.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns the number of tab indicator views.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/widget/TabWidget.html#getTabCount()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
