<Type Name="GridLayout" FullName="Android.Widget.GridLayout">
  <TypeSignature Language="C#" Value="public class GridLayout : Android.Views.ViewGroup" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GridLayout extends Android.Views.ViewGroup" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Views.ViewGroup</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/widget/GridLayout", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="14">
    <summary>A layout that places its children in a rectangular <i>grid</i>.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">A layout that places its children in a rectangular <i>grid</i>.
 </para>
      <para tool="javadoc-to-mdoc">
 The grid is composed of a set of infinitely thin lines that separate the
 viewing area into <i>cells</i>. Throughout the API, grid lines are referenced
 by grid <i>indices</i>. A grid with <c>N</c> columns
 has <c>N + 1</c> grid indices that run from <c>0</c>
 through <c>N</c> inclusive. Regardless of how GridLayout is
 configured, grid index <c>0</c> is fixed to the leading edge of the
 container and grid index <c>N</c> is fixed to its trailing edge
 (after padding is taken into account).

 <format type="text/html"><h4>Row and Column Specs</h4></format>

 Children occupy one or more contiguous cells, as defined
 by their <c><see cref="!:NoType:android/widget/GridLayout$LayoutParams;Href=../../../reference/android/widget/GridLayout.LayoutParams.html#rowSpec" /></c> and
 <c><see cref="!:NoType:android/widget/GridLayout$LayoutParams;Href=../../../reference/android/widget/GridLayout.LayoutParams.html#columnSpec" /></c> layout parameters.
 Each spec defines the set of rows or columns that are to be
 occupied; and how children should be aligned within the resulting group of cells.
 Although cells do not normally overlap in a GridLayout, GridLayout does
 not prevent children being defined to occupy the same cell or group of cells.
 In this case however, there is no guarantee that children will not themselves
 overlap after the layout operation completes.

 <format type="text/html"><h4>Default Cell Assignment</h4></format>

 If a child does not specify the row and column indices of the cell it
 wishes to occupy, GridLayout assigns cell locations automatically using its:
 <c><see cref="P:Android.Widget.GridLayout.Orientation" /></c>,
 <c><see cref="P:Android.Widget.GridLayout.RowCount" /></c> and
 <c><see cref="P:Android.Widget.GridLayout.ColumnCount" /></c> properties.

 <format type="text/html"><h4>Space</h4></format>

 Space between children may be specified either by using instances of the
 dedicated <c><see cref="T:Android.Widget.Space" /></c> view or by setting the

 <c><see cref="!:NoType:android/view/ViewGroup$MarginLayoutParams;Href=../../../reference/android/view/ViewGroup.MarginLayoutParams.html#leftMargin" /></c>,
 <c><see cref="!:NoType:android/view/ViewGroup$MarginLayoutParams;Href=../../../reference/android/view/ViewGroup.MarginLayoutParams.html#topMargin" /></c>,
 <c><see cref="!:NoType:android/view/ViewGroup$MarginLayoutParams;Href=../../../reference/android/view/ViewGroup.MarginLayoutParams.html#rightMargin" /></c> and
 <c><see cref="!:NoType:android/view/ViewGroup$MarginLayoutParams;Href=../../../reference/android/view/ViewGroup.MarginLayoutParams.html#bottomMargin" /></c>

 layout parameters. When the
 <c><see cref="P:Android.Widget.GridLayout.UseDefaultMargins" /></c>
 property is set, default margins around children are automatically
 allocated based on the prevailing UI style guide for the platform.
 Each of the margins so defined may be independently overridden by an assignment
 to the appropriate layout parameter.
 Default values will generally produce a reasonable spacing between components
 but values may change between different releases of the platform.

 <format type="text/html"><h4>Excess Space Distribution</h4></format>

 As of API 21, GridLayout's distribution of excess space accomodates the principle of weight.
 In the event that no weights are specified, the previous conventions are respected and
 columns and rows are taken as flexible if their views specify some form of alignment
 within their groups.
 </para>
      <para tool="javadoc-to-mdoc">
 The flexibility of a view is therefore influenced by its alignment which is,
 in turn, typically defined by setting the
 <c><see cref="!:NoType:android/widget/GridLayout$LayoutParams;Href=../../../reference/android/widget/GridLayout.LayoutParams.html#setGravity(int)" /></c> property of the child's layout parameters.
 If either a weight or alignment were defined along a given axis then the component
 is taken as <i>flexible</i> in that direction. If no weight or alignment was set,
 the component is instead assumed to be <i>inflexible</i>.
 </para>
      <para tool="javadoc-to-mdoc">
 Multiple components in the same row or column group are
 considered to act in <i>parallel</i>. Such a
 group is flexible only if <i>all</i> of the components
 within it are flexible. Row and column groups that sit either side of a common boundary
 are instead considered to act in <i>series</i>. The composite group made of these two
 elements is flexible if <i>one</i> of its elements is flexible.
 </para>
      <para tool="javadoc-to-mdoc">
 To make a column stretch, make sure all of the components inside it define a
 weight or a gravity. To prevent a column from stretching, ensure that one of the components
 in the column does not define a weight or a gravity.
 </para>
      <para tool="javadoc-to-mdoc">
 When the principle of flexibility does not provide complete disambiguation,
 GridLayout's algorithms favour rows and columns that are closer to its <i>right</i>
 and <i>bottom</i> edges. To be more precise, GridLayout treats each of its layout
 parameters as a constraint in the a set of variables that define the grid-lines along a
 given axis. During layout, GridLayout solves the constraints so as to return the unique
 solution to those constraints for which all variables are less-than-or-equal-to
 the corresponding value in any other valid solution.

 <format type="text/html"><h4>Interpretation of GONE</h4></format>

 For layout purposes, GridLayout treats views whose visibility status is
 <c><see cref="!:Android.Views.View.GONE" /></c>, as having zero width and height. This is subtly different from
 the policy of ignoring views that are marked as GONE outright. If, for example, a gone-marked
 view was alone in a column, that column would itself collapse to zero width if and only if
 no gravity was defined on the view. If gravity was defined, then the gone-marked
 view has no effect on the layout and the container should be laid out as if the view
 had never been added to it.
 These statements apply equally to rows as well as columns, and to groups of rows or columns.

 </para>
      <para tool="javadoc-to-mdoc">
 See <c><see cref="!:NoType:android/widget/GridLayout$LayoutParams;Href=../../../reference/android/widget/GridLayout.LayoutParams.html" /></c> for a full description of the
 layout parameters used by GridLayout.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/widget/GridLayout.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 14" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GridLayout (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#GridLayout(android.content.Context)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GridLayout (Android.Content.Context context, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#GridLayout(android.content.Context, android.util.AttributeSet)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected GridLayout (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T}(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GridLayout (Android.Content.Context context, Android.Util.IAttributeSet attrs, int defStyleAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs, int32 defStyleAttr) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="defStyle" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <param name="defStyleAttr">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#GridLayout(android.content.Context, android.util.AttributeSet, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GridLayout (Android.Content.Context context, Android.Util.IAttributeSet attrs, int defStyleAttr, int defStyleRes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs, int32 defStyleAttr, int32 defStyleRes) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;II)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="defStyleAttr" Type="System.Int32" />
        <Parameter Name="defStyleRes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <param name="defStyleAttr">To be added.</param>
        <param name="defStyleRes">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#GridLayout(android.content.Context, android.util.AttributeSet, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignBounds">
      <MemberSignature Language="C#" Value="public const Android.Widget.GridAlign AlignBounds = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Widget.GridAlign AlignBounds = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ALIGN_BOUNDS")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Widget.GridAlign enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Widget.GridAlign</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>This constant is an <c><see cref="P:Android.Widget.GridLayout.AlignmentMode" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constant is an <c><see cref="P:Android.Widget.GridLayout.AlignmentMode" /></c>.
 When the <c>alignmentMode</c> is set to <c><see cref="F:Android.Widget.GridLayout.AlignBounds" /></c>, alignment
 is made between the edges of each component's raw
 view boundary: i.e. the area delimited by the component's:
 <c><see cref="P:Android.Views.View.Top" /></c>,
 <c><see cref="P:Android.Views.View.Left" /></c>,
 <c><see cref="P:Android.Views.View.Bottom" /></c> and
 <c><see cref="P:Android.Views.View.Right" /></c> properties.
 </para>
          <para tool="javadoc-to-mdoc">
 For example, when <c>GridLayout</c> is in <c><see cref="F:Android.Widget.GridLayout.AlignBounds" /></c> mode,
 children that belong to a row group that uses <c><see cref="P:Android.Widget.GridLayout.TopAlighment" /></c> alignment will
 all return the same value when their <c><see cref="P:Android.Views.View.Top" /></c>
 method is called.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#ALIGN_BOUNDS" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="P:Android.Widget.GridLayout.AlignmentMode" />
      </Docs>
    </Member>
    <Member MemberName="AlignMargins">
      <MemberSignature Language="C#" Value="public const Android.Widget.GridAlign AlignMargins = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Widget.GridAlign AlignMargins = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ALIGN_MARGINS")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Widget.GridAlign enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Widget.GridAlign</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>This constant is an <c><see cref="P:Android.Widget.GridLayout.AlignmentMode" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constant is an <c><see cref="P:Android.Widget.GridLayout.AlignmentMode" /></c>.
 When the <c>alignmentMode</c> is set to <c><see cref="F:Android.Widget.GridLayout.AlignMargins" /></c>,
 the bounds of each view are extended outwards, according
 to their margins, before the edges of the resulting rectangle are aligned.
 </para>
          <para tool="javadoc-to-mdoc">
 For example, when <c>GridLayout</c> is in <c><see cref="F:Android.Widget.GridLayout.AlignMargins" /></c> mode,
 the quantity <c>top - layoutParams.topMargin</c> is the same for all children that
 belong to a row group that uses <c><see cref="P:Android.Widget.GridLayout.TopAlighment" /></c> alignment.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#ALIGN_MARGINS" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="P:Android.Widget.GridLayout.AlignmentMode" />
      </Docs>
    </Member>
    <Member MemberName="AlignmentMode">
      <MemberSignature Language="C#" Value="public virtual Android.Widget.GridAlign AlignmentMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Widget.GridAlign AlignmentMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAlignmentMode", "()I", "GetGetAlignmentModeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setAlignmentMode", "(I)V", "GetSetAlignmentMode_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Widget.GridAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the alignment mode.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#getAlignmentMode()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the alignment mode.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#setAlignmentMode(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the alignment mode to be used for all of the alignments between the
 children of this container.
 
 The default value of this property is <c><see cref="F:Android.Widget.GridLayout.AlignMargins" /></c>.</para>
          <para tool="javadoc-to-mdoc" />
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="F:Android.Widget.GridLayout.AlignBounds" />
        <altmember cref="F:Android.Widget.GridLayout.AlignMargins" />
        <altmember cref="P:Android.Widget.GridLayout.AlignmentMode" />
        <altmember cref="F:Android.Widget.GridLayout.AlignBounds" />
        <altmember cref="F:Android.Widget.GridLayout.AlignMargins" />
        <altmember cref="P:Android.Widget.GridLayout.AlignmentMode" />
      </Docs>
    </Member>
    <Member MemberName="BaselineAlighment">
      <MemberSignature Language="C#" Value="public static Android.Widget.GridLayout.Alignment BaselineAlighment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Widget.GridLayout/Alignment BaselineAlighment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("BASELINE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Widget.GridLayout+Alignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates that a view should be aligned with the <i>baselines</i>
 of the other views in its cell group.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates that a view should be aligned with the <i>baselines</i>
 of the other views in its cell group.
 This constant may only be used as an alignment in <c><see cref="!:NoType:android/widget/GridLayout$LayoutParams;Href=../../../reference/android/widget/GridLayout.LayoutParams.html#rowSpec" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#BASELINE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Views.View.Baseline" />
      </Docs>
    </Member>
    <Member MemberName="BottomAlighment">
      <MemberSignature Language="C#" Value="public static Android.Widget.GridLayout.Alignment BottomAlighment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Widget.GridLayout/Alignment BottomAlighment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("BOTTOM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Widget.GridLayout+Alignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates that a view should be aligned with the <i>bottom</i>
 edges of the other views in its cell group.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates that a view should be aligned with the <i>bottom</i>
 edges of the other views in its cell group.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#BOTTOM" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Center">
      <MemberSignature Language="C#" Value="public static Android.Widget.GridLayout.Alignment Center { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Widget.GridLayout/Alignment Center" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CENTER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Widget.GridLayout+Alignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates that a view should be <i>centered</i> with the other views in its cell group.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates that a view should be <i>centered</i> with the other views in its cell group.
 This constant may be used in both <c><see cref="!:NoType:android/widget/GridLayout$LayoutParams;Href=../../../reference/android/widget/GridLayout.LayoutParams.html#rowSpec" /></c> and <c><see cref="!:NoType:android/widget/GridLayout$LayoutParams;Href=../../../reference/android/widget/GridLayout.LayoutParams.html#columnSpec" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#CENTER" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="ColumnCount">
      <MemberSignature Language="C#" Value="public virtual int ColumnCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getColumnCount", "()I", "GetGetColumnCountHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setColumnCount", "(I)V", "GetSetColumnCount_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current number of columns.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#getColumnCount()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the current number of columns. This is either the last value that was set
 with <c><see cref="P:Android.Widget.GridLayout.ColumnCount" /></c> or, if no such value was set, the maximum
 value of each the upper bounds defined in <c><see cref="!:NoType:android/widget/GridLayout$LayoutParams;Href=../../../reference/android/widget/GridLayout.LayoutParams.html#columnSpec" /></c>.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#setColumnCount(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>ColumnCount is used only to generate default column/column indices when
 they are not specified by a component's layout parameters.</para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="P:Android.Widget.GridLayout.ColumnCount" />
        <altmember cref="P:Android.Widget.GridLayout.ColumnCount" />
      </Docs>
    </Member>
    <Member MemberName="ColumnOrderPreserved">
      <MemberSignature Language="C#" Value="public virtual bool ColumnOrderPreserved { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ColumnOrderPreserved" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isColumnOrderPreserved", "()Z", "GetIsColumnOrderPreservedHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setColumnOrderPreserved", "(Z)V", "GetSetColumnOrderPreserved_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether or not column boundaries are ordered by their grid indices.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#isColumnOrderPreserved()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns whether or not column boundaries are ordered by their grid indices.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#setColumnOrderPreserved(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>When this property is <c>true</c>, GridLayout is forced to place the column boundaries
 so that their associated grid indices are in ascending order in the view.
 
 When this property is <c>false</c> GridLayout is at liberty to place the horizontal column
 boundaries in whatever order best fits the given constraints.
 
 The default value of this property is <c>true</c>.</para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="P:Android.Widget.GridLayout.ColumnOrderPreserved" />
        <altmember cref="P:Android.Widget.GridLayout.ColumnOrderPreserved" />
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public static Android.Widget.GridLayout.Alignment End { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Widget.GridLayout/Alignment End" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("END")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Widget.GridLayout+Alignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates that a view should be aligned with the <i>end</i>
 edges of the other views in its cell group.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates that a view should be aligned with the <i>end</i>
 edges of the other views in its cell group.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#END" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public static Android.Widget.GridLayout.Alignment Fill { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Widget.GridLayout/Alignment Fill" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FILL")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Widget.GridLayout+Alignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates that a view should expanded to fit the boundaries of its cell group.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates that a view should expanded to fit the boundaries of its cell group.
 This constant may be used in both <c><see cref="!:NoType:android/widget/GridLayout$LayoutParams;Href=../../../reference/android/widget/GridLayout.LayoutParams.html#rowSpec" /></c> and
 <c><see cref="!:NoType:android/widget/GridLayout$LayoutParams;Href=../../../reference/android/widget/GridLayout.LayoutParams.html#columnSpec" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#FILL" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="Horizontal">
      <MemberSignature Language="C#" Value="public const Android.Widget.GridOrientation Horizontal = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Widget.GridOrientation Horizontal = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("HORIZONTAL")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Widget.GridOrientation enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Widget.GridOrientation</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>The horizontal orientation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The horizontal orientation.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#HORIZONTAL" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="InvokeSpec">
      <MemberSignature Language="C#" Value="public static Android.Widget.GridLayout.Spec InvokeSpec (int start);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Widget.GridLayout/Spec InvokeSpec(int32 start) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("spec", "(I)Landroid/widget/GridLayout$Spec;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Widget.GridLayout+Spec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">the start index</param>
        <summary tool="true">Equivalent to: <c>spec(start, 1, default_alignment, weight)</c> -
 where <c>default_alignment</c> is specified in
 <see cref="BAD(../../../reference/android/widget/GridLayout.LayoutParams.html)" />.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return a Spec, <c>spec</c>, where:
 <list type="bullet"><item><term><c>spec.span = [start, start + 1]</c></term></item></list></para>
          <para tool="javadoc-to-mdoc">
 To leave the start index undefined, use the value <c><see cref="F:Android.Widget.GridLayout.Undefined" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#spec(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 21" />
        <altmember cref="M:Android.Widget.GridLayout.InvokeSpec(System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="InvokeSpec">
      <MemberSignature Language="C#" Value="public static Android.Widget.GridLayout.Spec InvokeSpec (int start, Android.Widget.GridLayout.Alignment alignment);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Widget.GridLayout/Spec InvokeSpec(int32 start, class Android.Widget.GridLayout/Alignment alignment) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("spec", "(ILandroid/widget/GridLayout$Alignment;)Landroid/widget/GridLayout$Spec;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Widget.GridLayout+Spec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="alignment" Type="Android.Widget.GridLayout+Alignment" />
      </Parameters>
      <Docs>
        <param name="start">the start index</param>
        <param name="alignment">the alignment</param>
        <summary>Return a Spec, <c>spec</c>, where:
 <list type="bullet"><item><term><c>spec.span = [start, start + 1]</c></term></item><item><term><c>spec.alignment = alignment</c></term></item></list></summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return a Spec, <c>spec</c>, where:
 <list type="bullet"><item><term><c>spec.span = [start, start + 1]</c></term></item><item><term><c>spec.alignment = alignment</c></term></item></list></para>
          <para tool="javadoc-to-mdoc">
 To leave the start index undefined, use the value <c><see cref="F:Android.Widget.GridLayout.Undefined" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#spec(int, android.widget.GridLayout.Alignment)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Widget.GridLayout.InvokeSpec(System.Int32, System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="InvokeSpec">
      <MemberSignature Language="C#" Value="public static Android.Widget.GridLayout.Spec InvokeSpec (int start, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Widget.GridLayout/Spec InvokeSpec(int32 start, int32 size) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("spec", "(II)Landroid/widget/GridLayout$Spec;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Widget.GridLayout+Spec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">the start</param>
        <param name="size">the size</param>
        <summary>Return a Spec, <c>spec</c>, where:
 <list type="bullet"><item><term><c>spec.span = [start, start + size]</c></term></item></list></summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return a Spec, <c>spec</c>, where:
 <list type="bullet"><item><term><c>spec.span = [start, start + size]</c></term></item></list></para>
          <para tool="javadoc-to-mdoc">
 To leave the start index undefined, use the value <c><see cref="F:Android.Widget.GridLayout.Undefined" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#spec(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Widget.GridLayout.InvokeSpec(System.Int32, .Alignment)" />
      </Docs>
    </Member>
    <Member MemberName="InvokeSpec">
      <MemberSignature Language="C#" Value="public static Android.Widget.GridLayout.Spec InvokeSpec (int start, float weight);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Widget.GridLayout/Spec InvokeSpec(int32 start, float32 weight) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("spec", "(IF)Landroid/widget/GridLayout$Spec;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Widget.GridLayout+Spec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="weight" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="start">the start</param>
        <param name="weight">the weight
</param>
        <summary>Equivalent to: <c>spec(start, 1, weight)</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Equivalent to: <c>spec(start, 1, weight)</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#spec(int, float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeSpec">
      <MemberSignature Language="C#" Value="public static Android.Widget.GridLayout.Spec InvokeSpec (int start, Android.Widget.GridLayout.Alignment alignment, float weight);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Widget.GridLayout/Spec InvokeSpec(int32 start, class Android.Widget.GridLayout/Alignment alignment, float32 weight) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("spec", "(ILandroid/widget/GridLayout$Alignment;F)Landroid/widget/GridLayout$Spec;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Widget.GridLayout+Spec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="alignment" Type="Android.Widget.GridLayout+Alignment" />
        <Parameter Name="weight" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="start">the start</param>
        <param name="alignment">the alignment</param>
        <param name="weight">the weight
</param>
        <summary>Equivalent to: <c>spec(start, 1, alignment, weight)</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Equivalent to: <c>spec(start, 1, alignment, weight)</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#spec(int, android.widget.GridLayout.Alignment, float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeSpec">
      <MemberSignature Language="C#" Value="public static Android.Widget.GridLayout.Spec InvokeSpec (int start, int size, Android.Widget.GridLayout.Alignment alignment);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Widget.GridLayout/Spec InvokeSpec(int32 start, int32 size, class Android.Widget.GridLayout/Alignment alignment) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("spec", "(IILandroid/widget/GridLayout$Alignment;)Landroid/widget/GridLayout$Spec;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Widget.GridLayout+Spec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="alignment" Type="Android.Widget.GridLayout+Alignment" />
      </Parameters>
      <Docs>
        <param name="start">the start</param>
        <param name="size">the size</param>
        <param name="alignment">the alignment
</param>
        <summary>Equivalent to: <c>spec(start, size, alignment, 0f)</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Equivalent to: <c>spec(start, size, alignment, 0f)</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#spec(int, int, android.widget.GridLayout.Alignment)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="InvokeSpec">
      <MemberSignature Language="C#" Value="public static Android.Widget.GridLayout.Spec InvokeSpec (int start, int size, float weight);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Widget.GridLayout/Spec InvokeSpec(int32 start, int32 size, float32 weight) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("spec", "(IIF)Landroid/widget/GridLayout$Spec;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Widget.GridLayout+Spec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="weight" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="start">the start</param>
        <param name="size">the size</param>
        <param name="weight">the weight
</param>
        <summary>Equivalent to: <c>spec(start, 1, default_alignment, weight)</c> -
 where <c>default_alignment</c> is specified in
 <c><see cref="!:NoType:android/widget/GridLayout$LayoutParams;Href=../../../reference/android/widget/GridLayout.LayoutParams.html" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Equivalent to: <c>spec(start, 1, default_alignment, weight)</c> -
 where <c>default_alignment</c> is specified in
 <c><see cref="!:NoType:android/widget/GridLayout$LayoutParams;Href=../../../reference/android/widget/GridLayout.LayoutParams.html" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#spec(int, int, float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeSpec">
      <MemberSignature Language="C#" Value="public static Android.Widget.GridLayout.Spec InvokeSpec (int start, int size, Android.Widget.GridLayout.Alignment alignment, float weight);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Widget.GridLayout/Spec InvokeSpec(int32 start, int32 size, class Android.Widget.GridLayout/Alignment alignment, float32 weight) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("spec", "(IILandroid/widget/GridLayout$Alignment;F)Landroid/widget/GridLayout$Spec;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Widget.GridLayout+Spec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="alignment" Type="Android.Widget.GridLayout+Alignment" />
        <Parameter Name="weight" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="start">the start</param>
        <param name="size">the size</param>
        <param name="alignment">the alignment</param>
        <param name="weight">the weight
</param>
        <summary>Return a Spec, <c>spec</c>, where:
 <list type="bullet"><item><term><c>spec.span = [start, start + size]</c></term></item><item><term><c>spec.alignment = alignment</c></term></item><item><term><c>spec.weight = weight</c></term></item></list></summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return a Spec, <c>spec</c>, where:
 <list type="bullet"><item><term><c>spec.span = [start, start + size]</c></term></item><item><term><c>spec.alignment = alignment</c></term></item><item><term><c>spec.weight = weight</c></term></item></list></para>
          <para tool="javadoc-to-mdoc">
 To leave the start index undefined, use the value <c><see cref="F:Android.Widget.GridLayout.Undefined" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#spec(int, int, android.widget.GridLayout.Alignment, float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LeftAlighment">
      <MemberSignature Language="C#" Value="public static Android.Widget.GridLayout.Alignment LeftAlighment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Widget.GridLayout/Alignment LeftAlighment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LEFT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Widget.GridLayout+Alignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates that a view should be aligned with the <i>left</i>
 edges of the other views in its cell group.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates that a view should be aligned with the <i>left</i>
 edges of the other views in its cell group.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#LEFT" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLayout">
      <MemberSignature Language="C#" Value="protected override void OnLayout (bool changed, int left, int top, int right, int bottom);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLayout(bool changed, int32 left, int32 top, int32 right, int32 bottom) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onLayout", "(ZIIII)V", "GetOnLayout_ZIIIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changed" Type="System.Boolean" />
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="changed">This is a new size or position for this view</param>
        <param name="left">Left position, relative to parent</param>
        <param name="top">Top position, relative to parent</param>
        <param name="right">Right position, relative to parent</param>
        <param name="bottom">Bottom position, relative to parent
</param>
        <summary>Called from layout when this view should
 assign a size and position to each of its children.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called from layout when this view should
 assign a size and position to each of its children.

 Derived classes with children should override
 this method and call layout on each of
 their children.

</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#onLayout(boolean, int, int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public virtual Android.Widget.GridOrientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Widget.GridOrientation Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getOrientation", "()I", "GetGetOrientationHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setOrientation", "(I)V", "GetSetOrientation_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Widget.GridOrientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current orientation.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#getOrientation()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the current orientation.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#setOrientation(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>GridLayout uses the orientation property for two purposes:
 <list type="bullet"><item><term>
      To control the 'direction' in which default row/column indices are generated
      when they are not specified in a component's layout parameters.
  </term></item><item><term>
      To control which axis should be processed first during the layout operation:
      when orientation is <c><see cref="F:Android.Widget.GridLayout.Horizontal" /></c> the horizontal axis is laid out first.
  </term></item></list>

 The order in which axes are laid out is important if, for example, the height of
 one of GridLayout's children is dependent on its width - and its width is, in turn,
 dependent on the widths of other components.
 
 If your layout contains a <c><see cref="T:Android.Widget.TextView" /></c> (or derivative:
 <c>Button</c>, <c>EditText</c>, <c>CheckBox</c>, etc.) which is
 in multi-line mode (the default) it is normally best to leave GridLayout's
 orientation as <c>HORIZONTAL</c> - because <c>TextView</c> is capable of
 deriving its height for a given width, but not the other way around.
 
 Other than the effects above, orientation does not affect the actual layout operation of
 GridLayout, so it's fine to leave GridLayout in <c>HORIZONTAL</c> mode even if
 the height of the intended layout greatly exceeds its width.
 
 The default value of this property is <c><see cref="F:Android.Widget.GridLayout.Horizontal" /></c>.</para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="P:Android.Widget.GridLayout.Orientation" />
        <altmember cref="P:Android.Widget.GridLayout.Orientation" />
      </Docs>
    </Member>
    <Member MemberName="RightAlighment">
      <MemberSignature Language="C#" Value="public static Android.Widget.GridLayout.Alignment RightAlighment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Widget.GridLayout/Alignment RightAlighment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("RIGHT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Widget.GridLayout+Alignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates that a view should be aligned with the <i>right</i>
 edges of the other views in its cell group.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates that a view should be aligned with the <i>right</i>
 edges of the other views in its cell group.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#RIGHT" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowCount">
      <MemberSignature Language="C#" Value="public virtual int RowCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getRowCount", "()I", "GetGetRowCountHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setRowCount", "(I)V", "GetSetRowCount_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current number of rows.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#getRowCount()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the current number of rows. This is either the last value that was set
 with <c><see cref="P:Android.Widget.GridLayout.RowCount" /></c> or, if no such value was set, the maximum
 value of each the upper bounds defined in <c><see cref="!:NoType:android/widget/GridLayout$LayoutParams;Href=../../../reference/android/widget/GridLayout.LayoutParams.html#rowSpec" /></c>.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#setRowCount(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>RowCount is used only to generate default row/column indices when
 they are not specified by a component's layout parameters.</para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="P:Android.Widget.GridLayout.RowCount" />
        <altmember cref="P:Android.Widget.GridLayout.RowCount" />
      </Docs>
    </Member>
    <Member MemberName="RowOrderPreserved">
      <MemberSignature Language="C#" Value="public virtual bool RowOrderPreserved { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RowOrderPreserved" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isRowOrderPreserved", "()Z", "GetIsRowOrderPreservedHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setRowOrderPreserved", "(Z)V", "GetSetRowOrderPreserved_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether or not row boundaries are ordered by their grid indices.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#isRowOrderPreserved()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns whether or not row boundaries are ordered by their grid indices.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#setRowOrderPreserved(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>When this property is <c>true</c>, GridLayout is forced to place the row boundaries
 so that their associated grid indices are in ascending order in the view.
 
 When this property is <c>false</c> GridLayout is at liberty to place the vertical row
 boundaries in whatever order best fits the given constraints.
 
 The default value of this property is <c>true</c>.</para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="P:Android.Widget.GridLayout.RowOrderPreserved" />
        <altmember cref="P:Android.Widget.GridLayout.RowOrderPreserved" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public static Android.Widget.GridLayout.Alignment Start { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Widget.GridLayout/Alignment Start" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("START")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Widget.GridLayout+Alignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates that a view should be aligned with the <i>start</i>
 edges of the other views in its cell group.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates that a view should be aligned with the <i>start</i>
 edges of the other views in its cell group.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#START" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TopAlighment">
      <MemberSignature Language="C#" Value="public static Android.Widget.GridLayout.Alignment TopAlighment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Widget.GridLayout/Alignment TopAlighment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TOP")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Widget.GridLayout+Alignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates that a view should be aligned with the <i>top</i>
 edges of the other views in its cell group.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates that a view should be aligned with the <i>top</i>
 edges of the other views in its cell group.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#TOP" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Undefined">
      <MemberSignature Language="C#" Value="public const int Undefined = -2147483648;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 Undefined = (-2147483648)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("UNDEFINED")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-2147483648</MemberValue>
      <Docs>
        <summary>The constant used to indicate that a value is undefined.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The constant used to indicate that a value is undefined.
 Fields can use this value to indicate that their values
 have not yet been set. Similarly, methods can return this value
 to indicate that there is no suitable value that the implementation
 can return.
 The value used for the constant (currently <c><see cref="F:Java.Lang.Integer.MinValue" /></c>) is
 intended to avoid confusion between valid values whose sign may not be known.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#UNDEFINED" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="UseDefaultMargins">
      <MemberSignature Language="C#" Value="public virtual bool UseDefaultMargins { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultMargins" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getUseDefaultMargins", "()Z", "GetGetUseDefaultMarginsHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setUseDefaultMargins", "(Z)V", "GetSetUseDefaultMargins_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether or not this GridLayout will allocate default margins when no
 corresponding layout parameters are defined.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#getUseDefaultMargins()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns whether or not this GridLayout will allocate default margins when no
 corresponding layout parameters are defined.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#setUseDefaultMargins(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>When <c>true</c>, GridLayout allocates default margins around children
 based on the child's visual characteristics. Each of the
 margins so defined may be independently overridden by an assignment
 to the appropriate layout parameter.
 
 When <c>false</c>, the default value of all margins is zero.
 
 When setting to <c>true</c>, consider setting the value of the
 <c><see cref="P:Android.Widget.GridLayout.AlignmentMode" /></c>
 property to <c><see cref="F:Android.Widget.GridLayout.AlignBounds" /></c>.
 
 The default value of this property is <c>false</c>.</para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="P:Android.Widget.GridLayout.UseDefaultMargins" />
        <altmember cref="P:Android.Widget.GridLayout.UseDefaultMargins" />
        <altmember cref="P:Android.Widget.GridLayout.AlignmentMode" />
      </Docs>
    </Member>
    <Member MemberName="Vertical">
      <MemberSignature Language="C#" Value="public const Android.Widget.GridOrientation Vertical = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Widget.GridOrientation Vertical = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("VERTICAL")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Widget.GridOrientation enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Widget.GridOrientation</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>The vertical orientation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The vertical orientation.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/GridLayout.html#VERTICAL" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
  </Members>
</Type>
