<Type Name="Toolbar" FullName="Android.Widget.Toolbar">
  <TypeSignature Language="C#" Value="public class Toolbar : Android.Views.ViewGroup" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Toolbar extends Android.Views.ViewGroup" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Views.ViewGroup</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/widget/Toolbar", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="21">
    <summary>A standard toolbar for use within application content.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">A standard toolbar for use within application content.

 </para>
      <para tool="javadoc-to-mdoc">A Toolbar is a generalization of <c><see cref="T:Android.App.ActionBar" /></c> for use
 within application layouts. While an action bar is traditionally part of an
 <c><see cref="T:Android.App.Activity" /></c> opaque window decor controlled by the framework,
 a Toolbar may be placed at any arbitrary level of nesting within a view hierarchy.
 An application may choose to designate a Toolbar as the action bar for an Activity
 using the <c><see cref="M:Android.App.Activity.SetActionBar(Android.Widget.Toolbar)" /></c> method.</para>
      <para tool="javadoc-to-mdoc">Toolbar supports a more focused feature set than ActionBar. From start to end, a toolbar
 may contain a combination of the following optional elements:

 <list type="bullet"><item><term><i>A navigation button.</i> This may be an Up arrow, navigation menu toggle, close,
     collapse, done or another glyph of the app's choosing. This button should always be used
     to access other navigational destinations within the container of the Toolbar and
     its signified content or otherwise leave the current context signified by the Toolbar.
     The navigation button is vertically aligned within the Toolbar's
     <c><see cref="!:NoType:android/R$styleable;Href=../../../reference/android/R.styleable.html#View_minHeight" /></c>, if set.</term></item><item><term><i>A branded logo image.</i> This may extend to the height of the bar and can be
     arbitrarily wide.</term></item><item><term><i>A title and subtitle.</i> The title should be a signpost for the Toolbar's current
     position in the navigation hierarchy and the content contained there. The subtitle,
     if present should indicate any extended information about the current content.
     If an app uses a logo image it should strongly consider omitting a title and subtitle.</term></item><item><term><i>One or more custom views.</i> The application may add arbitrary child views
     to the Toolbar. They will appear at this position within the layout. If a child view's
     <c><see cref="!:NoType:android/widget/Toolbar$LayoutParams;Href=../../../reference/android/widget/Toolbar.LayoutParams.html" /></c> indicates a <c><see cref="T:Android.Views.Gravity" /></c> value of
     <c><see cref="!:Android.Views.Gravity.CENTER_HORIZONTAL" /></c> the view will attempt to center
     within the available space remaining in the Toolbar after all other elements have been
     measured.</term></item><item><term><i>An <c><see cref="T:Android.Widget.ActionMenuView" /></c>.</i> The menu of actions will pin to the
     end of the Toolbar offering a few
      actions along with an optional overflow menu for
     additional actions. Action buttons are vertically aligned within the Toolbar's
     <c><see cref="!:NoType:android/R$styleable;Href=../../../reference/android/R.styleable.html#View_minHeight" /></c>, if set.</term></item></list></para>
      <para tool="javadoc-to-mdoc">In modern Android UIs developers should lean more on a visually distinct color scheme for
 toolbars than on their application icon. The use of application icon plus title as a standard
 layout is discouraged on API 21 devices and newer.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/widget/Toolbar.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Toolbar (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary></summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/Toolbar.html#Toolbar(android.content.Context)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Toolbar (Android.Content.Context context, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary></summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/Toolbar.html#Toolbar(android.content.Context, android.util.AttributeSet)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Toolbar (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Toolbar (Android.Content.Context context, Android.Util.IAttributeSet attrs, int defStyleAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs, int32 defStyleAttr) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="defStyleAttr" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <param name="defStyleAttr">To be added.</param>
        <summary></summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/Toolbar.html#Toolbar(android.content.Context, android.util.AttributeSet, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Toolbar (Android.Content.Context context, Android.Util.IAttributeSet attrs, int defStyleAttr, int defStyleRes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs, int32 defStyleAttr, int32 defStyleRes) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;II)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="defStyleAttr" Type="System.Int32" />
        <Parameter Name="defStyleRes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <param name="defStyleAttr">To be added.</param>
        <param name="defStyleRes">To be added.</param>
        <summary></summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/Toolbar.html#Toolbar(android.content.Context, android.util.AttributeSet, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CollapseActionView">
      <MemberSignature Language="C#" Value="public virtual void CollapseActionView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CollapseActionView() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("collapseActionView", "()V", "GetCollapseActionViewHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Collapse a currently expanded action view.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Collapse a currently expanded action view. If this Toolbar does not have an
 expanded action view this method has no effect.

 </para>
          <para tool="javadoc-to-mdoc">An action view may be expanded either directly from the
 <c><see cref="T:Android.Views.IMenuItem" /></c> it belongs to or by user action.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/Toolbar.html#collapseActionView()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Widget.Toolbar.HasExpandedActionView" />
      </Docs>
    </Member>
    <Member MemberName="ContentInsetEnd">
      <MemberSignature Language="C#" Value="public virtual int ContentInsetEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ContentInsetEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getContentInsetEnd", "()I", "GetGetContentInsetEndHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the ending content inset for this toolbar.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the ending content inset for this toolbar.

 </para>
          <para tool="javadoc-to-mdoc">The content inset affects the valid area for Toolbar content other than
 the navigation button and menu. Insets define the minimum margin for these components
 and can be used to effectively align Toolbar content along well-known gridlines.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/Toolbar.html#getContentInsetEnd()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.Widget.Toolbar.SetContentInsetsRelative(System.Int32, System.Int32)" />
        <altmember cref="M:Android.Widget.Toolbar.SetContentInsetsAbsolute(System.Int32, System.Int32)" />
        <altmember cref="P:Android.Widget.Toolbar.ContentInsetStart" />
        <altmember cref="P:Android.Widget.Toolbar.ContentInsetLeft" />
        <altmember cref="P:Android.Widget.Toolbar.ContentInsetRight" />
      </Docs>
      <since version="Added in API level 21" />
    </Member>
    <Member MemberName="ContentInsetLeft">
      <MemberSignature Language="C#" Value="public virtual int ContentInsetLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ContentInsetLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getContentInsetLeft", "()I", "GetGetContentInsetLeftHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the left content inset for this toolbar.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the left content inset for this toolbar.

 </para>
          <para tool="javadoc-to-mdoc">The content inset affects the valid area for Toolbar content other than
 the navigation button and menu. Insets define the minimum margin for these components
 and can be used to effectively align Toolbar content along well-known gridlines.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/Toolbar.html#getContentInsetLeft()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.Widget.Toolbar.SetContentInsetsRelative(System.Int32, System.Int32)" />
        <altmember cref="M:Android.Widget.Toolbar.SetContentInsetsAbsolute(System.Int32, System.Int32)" />
        <altmember cref="P:Android.Widget.Toolbar.ContentInsetStart" />
        <altmember cref="P:Android.Widget.Toolbar.ContentInsetEnd" />
        <altmember cref="P:Android.Widget.Toolbar.ContentInsetRight" />
      </Docs>
    </Member>
    <Member MemberName="ContentInsetRight">
      <MemberSignature Language="C#" Value="public virtual int ContentInsetRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ContentInsetRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getContentInsetRight", "()I", "GetGetContentInsetRightHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the right content inset for this toolbar.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the right content inset for this toolbar.

 </para>
          <para tool="javadoc-to-mdoc">The content inset affects the valid area for Toolbar content other than
 the navigation button and menu. Insets define the minimum margin for these components
 and can be used to effectively align Toolbar content along well-known gridlines.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/Toolbar.html#getContentInsetRight()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.Widget.Toolbar.SetContentInsetsRelative(System.Int32, System.Int32)" />
        <altmember cref="M:Android.Widget.Toolbar.SetContentInsetsAbsolute(System.Int32, System.Int32)" />
        <altmember cref="P:Android.Widget.Toolbar.ContentInsetStart" />
        <altmember cref="P:Android.Widget.Toolbar.ContentInsetEnd" />
        <altmember cref="P:Android.Widget.Toolbar.ContentInsetLeft" />
      </Docs>
    </Member>
    <Member MemberName="ContentInsetStart">
      <MemberSignature Language="C#" Value="public virtual int ContentInsetStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ContentInsetStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getContentInsetStart", "()I", "GetGetContentInsetStartHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the starting content inset for this toolbar.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the starting content inset for this toolbar.

 </para>
          <para tool="javadoc-to-mdoc">The content inset affects the valid area for Toolbar content other than
 the navigation button and menu. Insets define the minimum margin for these components
 and can be used to effectively align Toolbar content along well-known gridlines.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/Toolbar.html#getContentInsetStart()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.Widget.Toolbar.SetContentInsetsRelative(System.Int32, System.Int32)" />
        <altmember cref="M:Android.Widget.Toolbar.SetContentInsetsAbsolute(System.Int32, System.Int32)" />
        <altmember cref="P:Android.Widget.Toolbar.ContentInsetEnd" />
        <altmember cref="P:Android.Widget.Toolbar.ContentInsetLeft" />
        <altmember cref="P:Android.Widget.Toolbar.ContentInsetRight" />
      </Docs>
    </Member>
    <Member MemberName="DismissPopupMenus">
      <MemberSignature Language="C#" Value="public virtual void DismissPopupMenus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DismissPopupMenus() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dismissPopupMenus", "()V", "GetDismissPopupMenusHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Dismiss all currently showing popup menus, including overflow or submenus.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Dismiss all currently showing popup menus, including overflow or submenus.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/Toolbar.html#dismissPopupMenus()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasExpandedActionView">
      <MemberSignature Language="C#" Value="public virtual bool HasExpandedActionView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasExpandedActionView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("hasExpandedActionView", "()Z", "GetHasExpandedActionViewHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Check whether this Toolbar is currently hosting an expanded action view.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Check whether this Toolbar is currently hosting an expanded action view.

 </para>
          <para tool="javadoc-to-mdoc">An action view may be expanded either directly from the
 <c><see cref="T:Android.Views.IMenuItem" /></c> it belongs to or by user action. If the Toolbar
 has an expanded action view it can be collapsed using the <c><see cref="M:Android.Widget.Toolbar.CollapseActionView" /></c>
 method.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/Toolbar.html#hasExpandedActionView()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HideOverflowMenu">
      <MemberSignature Language="C#" Value="public virtual bool HideOverflowMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HideOverflowMenu() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("hideOverflowMenu", "()Z", "GetHideOverflowMenuHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Hide the overflow items from the associated menu.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Hide the overflow items from the associated menu.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/Toolbar.html#hideOverflowMenu()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InflateMenu">
      <MemberSignature Language="C#" Value="public virtual void InflateMenu (int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InflateMenu(int32 resId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("inflateMenu", "(I)V", "GetInflateMenu_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resId">ID of a menu resource to inflate
</param>
        <summary>Inflate a menu resource into this toolbar.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Inflate a menu resource into this toolbar.

 </para>
          <para tool="javadoc-to-mdoc">Inflate an XML menu resource into this toolbar. Existing items in the menu will not
 be modified or removed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/Toolbar.html#inflateMenu(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOverflowMenuShowing">
      <MemberSignature Language="C#" Value="public virtual bool IsOverflowMenuShowing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOverflowMenuShowing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isOverflowMenuShowing", "()Z", "GetIsOverflowMenuShowingHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Check whether the overflow menu is currently showing.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Check whether the overflow menu is currently showing. This may not reflect
 a pending show operation in progress.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/Toolbar.html#isOverflowMenuShowing()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Logo">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable Logo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Drawables.Drawable Logo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLogo", "()Landroid/graphics/drawable/Drawable;", "GetGetLogoHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setLogo", "(Landroid/graphics/drawable/Drawable;)V", "GetSetLogo_Landroid_graphics_drawable_Drawable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the current logo drawable.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b> <a href="http://developer.android.com/reference/android/widget/Toolbar.html#getLogo()" target="_blank">[Android Documentation]</a><br /></format>Return the current logo drawable.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b> <a href="http://developer.android.com/reference/android/widget/Toolbar.html#setLogo(android.graphics.drawable.Drawable)" target="_blank">[Android Documentation]</a><br /></format>Set a logo drawable.

 </para>
          <para tool="javadoc-to-mdoc">This drawable should generally take the place of title text. The logo cannot be
 clicked. Apps using a logo should also supply a description using
 <c><see cref="M:Android.Widget.Toolbar.SetLogoDescription(System.Int32)" /></c>.</para>
        </remarks>
        <altmember cref="M:Android.Widget.Toolbar.SetLogo(System.Int32)" />
        <altmember cref="P:Android.Widget.Toolbar.Logo" />
      </Docs>
    </Member>
    <Member MemberName="LogoDescription">
      <MemberSignature Language="C#" Value="public string LogoDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LogoDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogoDescriptionFormatted">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence LogoDescriptionFormatted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ICharSequence LogoDescriptionFormatted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLogoDescription", "()Ljava/lang/CharSequence;", "GetGetLogoDescriptionHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setLogoDescription", "(Ljava/lang/CharSequence;)V", "GetSetLogoDescription_Ljava_lang_CharSequence_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the description of the toolbar's logo.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b> <a href="http://developer.android.com/reference/android/widget/Toolbar.html#getLogoDescription()" target="_blank">[Android Documentation]</a><br /></format>Return the description of the toolbar's logo.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b> <a href="http://developer.android.com/reference/android/widget/Toolbar.html#setLogoDescription(java.lang.CharSequence)" target="_blank">[Android Documentation]</a><br /></format>Set a description of the toolbar's logo.

 </para>
          <para tool="javadoc-to-mdoc">This description will be used for accessibility or other similar descriptions
 of the UI.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Menu">
      <MemberSignature Language="C#" Value="public virtual Android.Views.IMenu Menu { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.IMenu Menu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMenu", "()Landroid/view/Menu;", "GetGetMenuHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.IMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the Menu shown in the toolbar.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the Menu shown in the toolbar.

 </para>
          <para tool="javadoc-to-mdoc">Applications that wish to populate the toolbar's menu can do so from here. To use
 an XML menu resource, use <c><see cref="M:Android.Widget.Toolbar.InflateMenu(System.Int32)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/Toolbar.html#getMenu()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuItemClick">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Widget.Toolbar.MenuItemClickEventArgs&gt; MenuItemClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Widget.Toolbar/MenuItemClickEventArgs&gt; MenuItemClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Widget.Toolbar+MenuItemClickEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationContentDescription">
      <MemberSignature Language="C#" Value="public string NavigationContentDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NavigationContentDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationContentDescriptionFormatted">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence NavigationContentDescriptionFormatted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ICharSequence NavigationContentDescriptionFormatted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getNavigationContentDescription", "()Ljava/lang/CharSequence;", "GetGetNavigationContentDescriptionHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setNavigationContentDescription", "(Ljava/lang/CharSequence;)V", "GetSetNavigationContentDescription_Ljava_lang_CharSequence_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the currently configured content description for the navigation button view.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b> <a href="http://developer.android.com/reference/android/widget/Toolbar.html#getNavigationContentDescription()" target="_blank">[Android Documentation]</a><br /></format>Retrieve the currently configured content description for the navigation button view.
 This will be used to describe the navigation action to users through mechanisms such
 as screen readers or tooltips.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b> <a href="http://developer.android.com/reference/android/widget/Toolbar.html#setNavigationContentDescription(java.lang.CharSequence)" target="_blank">[Android Documentation]</a><br /></format>Set a content description for the navigation button if one is present. The content
 description will be read via screen readers or other accessibility systems to explain
 the action of the navigation button.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationIcon">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable NavigationIcon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Drawables.Drawable NavigationIcon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getNavigationIcon", "()Landroid/graphics/drawable/Drawable;", "GetGetNavigationIconHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setNavigationIcon", "(Landroid/graphics/drawable/Drawable;)V", "GetSetNavigationIcon_Landroid_graphics_drawable_Drawable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the current drawable used as the navigation icon.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b> <a href="http://developer.android.com/reference/android/widget/Toolbar.html#getNavigationIcon()" target="_blank">[Android Documentation]</a><br /></format>Return the current drawable used as the navigation icon.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b> <a href="http://developer.android.com/reference/android/widget/Toolbar.html#setNavigationIcon(android.graphics.drawable.Drawable)" target="_blank">[Android Documentation]</a><br /></format>Set the icon to use for the toolbar's navigation button.

 </para>
          <para tool="javadoc-to-mdoc">The navigation button appears at the start of the toolbar if present. Setting an icon
 will make the navigation button visible.</para>
          <para tool="javadoc-to-mdoc">If you use a navigation icon you should also set a description for its action using
 <c><see cref="M:Android.Widget.Toolbar.SetNavigationContentDescription(System.Int32)" /></c>. This is used for accessibility and
 tooltips.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationOnClick">
      <MemberSignature Language="C#" Value="public event EventHandler NavigationOnClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler NavigationOnClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLayout">
      <MemberSignature Language="C#" Value="protected override void OnLayout (bool changed, int l, int t, int r, int b);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLayout(bool changed, int32 l, int32 t, int32 r, int32 b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onLayout", "(ZIIII)V", "GetOnLayout_ZIIIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changed" Type="System.Boolean" />
        <Parameter Name="l" Type="System.Int32" />
        <Parameter Name="t" Type="System.Int32" />
        <Parameter Name="r" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="changed">This is a new size or position for this view</param>
        <param name="l">Left position, relative to parent</param>
        <param name="t">Top position, relative to parent</param>
        <param name="r">Right position, relative to parent</param>
        <param name="b">Bottom position, relative to parent
</param>
        <summary>Called from layout when this view should
 assign a size and position to each of its children.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called from layout when this view should
 assign a size and position to each of its children.

 Derived classes with children should override
 this method and call layout on each of
 their children.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/Toolbar.html#onLayout(boolean, int, int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PopupTheme">
      <MemberSignature Language="C#" Value="public virtual int PopupTheme { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PopupTheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPopupTheme", "()I", "GetGetPopupThemeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setPopupTheme", "(I)V", "GetSetPopupTheme_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary></summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b> <a href="http://developer.android.com/reference/android/widget/Toolbar.html#getPopupTheme()" target="_blank">[Android Documentation]</a><br /></format>
          </para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b> <a href="http://developer.android.com/reference/android/widget/Toolbar.html#setPopupTheme(int)" target="_blank">[Android Documentation]</a><br /></format>Specifies the theme to use when inflating popup menus. By default, uses
 the same theme as the toolbar itself.</para>
        </remarks>
        <altmember cref="P:Android.Widget.Toolbar.PopupTheme" />
        <altmember cref="P:Android.Widget.Toolbar.PopupTheme" />
      </Docs>
    </Member>
    <Member MemberName="SetContentInsetsAbsolute">
      <MemberSignature Language="C#" Value="public virtual void SetContentInsetsAbsolute (int contentInsetLeft, int contentInsetRight);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetContentInsetsAbsolute(int32 contentInsetLeft, int32 contentInsetRight) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setContentInsetsAbsolute", "(II)V", "GetSetContentInsetsAbsolute_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentInsetLeft" Type="System.Int32" />
        <Parameter Name="contentInsetRight" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="contentInsetLeft">Content inset for the toolbar's left edge</param>
        <param name="contentInsetRight">Content inset for the toolbar's right edge</param>
        <summary>Set the content insets for this toolbar.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the content insets for this toolbar.

 </para>
          <para tool="javadoc-to-mdoc">The content inset affects the valid area for Toolbar content other than
 the navigation button and menu. Insets define the minimum margin for these components
 and can be used to effectively align Toolbar content along well-known gridlines.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/Toolbar.html#setContentInsetsAbsolute(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.Widget.Toolbar.SetContentInsetsAbsolute(System.Int32, System.Int32)" />
        <altmember cref="P:Android.Widget.Toolbar.ContentInsetStart" />
        <altmember cref="P:Android.Widget.Toolbar.ContentInsetEnd" />
        <altmember cref="P:Android.Widget.Toolbar.ContentInsetLeft" />
        <altmember cref="P:Android.Widget.Toolbar.ContentInsetRight" />
      </Docs>
    </Member>
    <Member MemberName="SetContentInsetsRelative">
      <MemberSignature Language="C#" Value="public virtual void SetContentInsetsRelative (int contentInsetStart, int contentInsetEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetContentInsetsRelative(int32 contentInsetStart, int32 contentInsetEnd) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setContentInsetsRelative", "(II)V", "GetSetContentInsetsRelative_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentInsetStart" Type="System.Int32" />
        <Parameter Name="contentInsetEnd" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="contentInsetStart">Content inset for the toolbar starting edge</param>
        <param name="contentInsetEnd">Content inset for the toolbar ending edge</param>
        <summary>Set the content insets for this toolbar relative to layout direction.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the content insets for this toolbar relative to layout direction.

 </para>
          <para tool="javadoc-to-mdoc">The content inset affects the valid area for Toolbar content other than
 the navigation button and menu. Insets define the minimum margin for these components
 and can be used to effectively align Toolbar content along well-known gridlines.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/Toolbar.html#setContentInsetsRelative(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.Widget.Toolbar.SetContentInsetsAbsolute(System.Int32, System.Int32)" />
        <altmember cref="P:Android.Widget.Toolbar.ContentInsetStart" />
        <altmember cref="P:Android.Widget.Toolbar.ContentInsetEnd" />
        <altmember cref="P:Android.Widget.Toolbar.ContentInsetLeft" />
        <altmember cref="P:Android.Widget.Toolbar.ContentInsetRight" />
      </Docs>
    </Member>
    <Member MemberName="SetLogo">
      <MemberSignature Language="C#" Value="public virtual void SetLogo (int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLogo(int32 resId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLogo", "(I)V", "GetSetLogo_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resId">ID of a drawable resource
</param>
        <summary>Set a logo drawable from a resource id.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set a logo drawable from a resource id.

 </para>
          <para tool="javadoc-to-mdoc">This drawable should generally take the place of title text. The logo cannot be
 clicked. Apps using a logo should also supply a description using
 <c><see cref="M:Android.Widget.Toolbar.SetLogoDescription(System.Int32)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/Toolbar.html#setLogo(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLogoDescription">
      <MemberSignature Language="C#" Value="public virtual void SetLogoDescription (int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLogoDescription(int32 resId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLogoDescription", "(I)V", "GetSetLogoDescription_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resId">String resource id
</param>
        <summary>Set a description of the toolbar's logo.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set a description of the toolbar's logo.

 </para>
          <para tool="javadoc-to-mdoc">This description will be used for accessibility or other similar descriptions
 of the UI.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/Toolbar.html#setLogoDescription(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNavigationContentDescription">
      <MemberSignature Language="C#" Value="public virtual void SetNavigationContentDescription (int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetNavigationContentDescription(int32 resId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setNavigationContentDescription", "(I)V", "GetSetNavigationContentDescription_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resId">Resource ID of a content description string to set, or 0 to
              clear the description</param>
        <summary>Set a content description for the navigation button if one is present.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set a content description for the navigation button if one is present. The content
 description will be read via screen readers or other accessibility systems to explain
 the action of the navigation button.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/Toolbar.html#setNavigationContentDescription(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNavigationIcon">
      <MemberSignature Language="C#" Value="public virtual void SetNavigationIcon (int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetNavigationIcon(int32 resId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setNavigationIcon", "(I)V", "GetSetNavigationIcon_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resId">Resource ID of a drawable to set</param>
        <summary>Set the icon to use for the toolbar's navigation button.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the icon to use for the toolbar's navigation button.

 </para>
          <para tool="javadoc-to-mdoc">The navigation button appears at the start of the toolbar if present. Setting an icon
 will make the navigation button visible.</para>
          <para tool="javadoc-to-mdoc">If you use a navigation icon you should also set a description for its action using
 <c><see cref="M:Android.Widget.Toolbar.SetNavigationContentDescription(System.Int32)" /></c>. This is used for accessibility and
 tooltips.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/Toolbar.html#setNavigationIcon(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNavigationOnClickListener">
      <MemberSignature Language="C#" Value="public virtual void SetNavigationOnClickListener (Android.Views.View.IOnClickListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetNavigationOnClickListener(class Android.Views.View/IOnClickListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setNavigationOnClickListener", "(Landroid/view/View$OnClickListener;)V", "GetSetNavigationOnClickListener_Landroid_view_View_OnClickListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Views.View+IOnClickListener" />
      </Parameters>
      <Docs>
        <param name="listener">Listener to set</param>
        <summary>Set a listener to respond to navigation events.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set a listener to respond to navigation events.

 </para>
          <para tool="javadoc-to-mdoc">This listener will be called whenever the user clicks the navigation button
 at the start of the toolbar. An icon must be set for the navigation button to appear.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/Toolbar.html#setNavigationOnClickListener(android.view.View.OnClickListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Widget.Toolbar.NavigationIcon" />
      </Docs>
    </Member>
    <Member MemberName="SetOnMenuItemClickListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnMenuItemClickListener (Android.Widget.Toolbar.IOnMenuItemClickListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnMenuItemClickListener(class Android.Widget.Toolbar/IOnMenuItemClickListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnMenuItemClickListener", "(Landroid/widget/Toolbar$OnMenuItemClickListener;)V", "GetSetOnMenuItemClickListener_Landroid_widget_Toolbar_OnMenuItemClickListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Widget.Toolbar+IOnMenuItemClickListener" />
      </Parameters>
      <Docs>
        <param name="listener">Listener to set
</param>
        <summary>Set a listener to respond to menu item click events.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set a listener to respond to menu item click events.

 </para>
          <para tool="javadoc-to-mdoc">This listener will be invoked whenever a user selects a menu item from
 the action buttons presented at the end of the toolbar or the associated overflow.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/Toolbar.html#setOnMenuItemClickListener(android.widget.Toolbar.OnMenuItemClickListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSubtitle">
      <MemberSignature Language="C#" Value="public virtual void SetSubtitle (int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSubtitle(int32 resId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSubtitle", "(I)V", "GetSetSubtitle_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resId">String resource ID
</param>
        <summary>Set the subtitle of this toolbar.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the subtitle of this toolbar.

 </para>
          <para tool="javadoc-to-mdoc">Subtitles should express extended information about the current content.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/Toolbar.html#setSubtitle(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSubtitleTextAppearance">
      <MemberSignature Language="C#" Value="public virtual void SetSubtitleTextAppearance (Android.Content.Context context, int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSubtitleTextAppearance(class Android.Content.Context context, int32 resId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSubtitleTextAppearance", "(Landroid/content/Context;I)V", "GetSetSubtitleTextAppearance_Landroid_content_Context_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="resId">To be added.</param>
        <summary>Sets the text color, size, style, hint color, and highlight color
 from the specified TextAppearance resource.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the text color, size, style, hint color, and highlight color
 from the specified TextAppearance resource.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/Toolbar.html#setSubtitleTextAppearance(android.content.Context, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSubtitleTextColor">
      <MemberSignature Language="C#" Value="public virtual void SetSubtitleTextColor (Android.Graphics.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSubtitleTextColor(valuetype Android.Graphics.Color color) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSubtitleTextColor", "(I)V", "GetSetSubtitleTextColor_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="Android.Graphics.Color" />
      </Parameters>
      <Docs>
        <param name="color">The new text color in 0xAARRGGBB format
</param>
        <summary>Sets the text color of the subtitle, if present.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the text color of the subtitle, if present.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/Toolbar.html#setSubtitleTextColor(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTitle">
      <MemberSignature Language="C#" Value="public virtual void SetTitle (int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTitle(int32 resId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTitle", "(I)V", "GetSetTitle_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resId">Resource ID of a string to set as the title
</param>
        <summary>Set the title of this toolbar.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the title of this toolbar.

 </para>
          <para tool="javadoc-to-mdoc">A title should be used as the anchor for a section of content. It should
 describe or name the content being viewed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/Toolbar.html#setTitle(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTitleTextAppearance">
      <MemberSignature Language="C#" Value="public virtual void SetTitleTextAppearance (Android.Content.Context context, int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTitleTextAppearance(class Android.Content.Context context, int32 resId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTitleTextAppearance", "(Landroid/content/Context;I)V", "GetSetTitleTextAppearance_Landroid_content_Context_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="resId">To be added.</param>
        <summary>Sets the text color, size, style, hint color, and highlight color
 from the specified TextAppearance resource.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the text color, size, style, hint color, and highlight color
 from the specified TextAppearance resource.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/Toolbar.html#setTitleTextAppearance(android.content.Context, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTitleTextColor">
      <MemberSignature Language="C#" Value="public virtual void SetTitleTextColor (Android.Graphics.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTitleTextColor(valuetype Android.Graphics.Color color) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTitleTextColor", "(I)V", "GetSetTitleTextColor_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="Android.Graphics.Color" />
      </Parameters>
      <Docs>
        <param name="color">The new text color in 0xAARRGGBB format
</param>
        <summary>Sets the text color of the title, if present.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the text color of the title, if present.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/Toolbar.html#setTitleTextColor(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowOverflowMenu">
      <MemberSignature Language="C#" Value="public virtual bool ShowOverflowMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShowOverflowMenu() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("showOverflowMenu", "()Z", "GetShowOverflowMenuHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Show the overflow items from the associated menu.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Show the overflow items from the associated menu.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/widget/Toolbar.html#showOverflowMenu()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtitle">
      <MemberSignature Language="C#" Value="public string Subtitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subtitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubtitleFormatted">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence SubtitleFormatted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ICharSequence SubtitleFormatted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSubtitle", "()Ljava/lang/CharSequence;", "GetGetSubtitleHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSubtitle", "(Ljava/lang/CharSequence;)V", "GetSetSubtitle_Ljava_lang_CharSequence_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the subtitle of this toolbar.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b> <a href="http://developer.android.com/reference/android/widget/Toolbar.html#getSubtitle()" target="_blank">[Android Documentation]</a><br /></format>Return the subtitle of this toolbar.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b> <a href="http://developer.android.com/reference/android/widget/Toolbar.html#setSubtitle(java.lang.CharSequence)" target="_blank">[Android Documentation]</a><br /></format>Set the subtitle of this toolbar.

 </para>
          <para tool="javadoc-to-mdoc">Subtitles should express extended information about the current content.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleFormatted">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence TitleFormatted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ICharSequence TitleFormatted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTitle", "()Ljava/lang/CharSequence;", "GetGetTitleHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTitle", "(Ljava/lang/CharSequence;)V", "GetSetTitle_Ljava_lang_CharSequence_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the title of this toolbar.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b> <a href="http://developer.android.com/reference/android/widget/Toolbar.html#getTitle()" target="_blank">[Android Documentation]</a><br /></format>Returns the title of this toolbar.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b> <a href="http://developer.android.com/reference/android/widget/Toolbar.html#setTitle(java.lang.CharSequence)" target="_blank">[Android Documentation]</a><br /></format>Set the title of this toolbar.

 </para>
          <para tool="javadoc-to-mdoc">A title should be used as the anchor for a section of content. It should
 describe or name the content being viewed.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
