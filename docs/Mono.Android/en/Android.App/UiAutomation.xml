<Type Name="UiAutomation" FullName="Android.App.UiAutomation">
  <TypeSignature Language="C#" Value="public sealed class UiAutomation : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit UiAutomation extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/app/UiAutomation", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Class for interacting with the device's UI by simulation user actions and
 introspection of the screen content.</summary>
    <remarks><para tool="javadoc-to-mdoc">Class for interacting with the device's UI by simulation user actions and
 introspection of the screen content. It relies on the platform accessibility
 APIs to introspect the screen and to perform some actions on the remote view
 tree. It also allows injecting of arbitrary raw input events simulating user
 interaction with keyboards and touch devices. One can think of a UiAutomation
 as a special type of <c><see cref="T:Android.AccessibilityServices.AccessibilityService" /></c>
 which does not provide hooks for the service life cycle and exposes other
 APIs that are useful for UI test automation.
 </para><para tool="javadoc-to-mdoc">
 The APIs exposed by this class are low-level to maximize flexibility when
 developing UI test automation tools and libraries. Generally, a UiAutomation
 client should be using a higher-level library or implement high-level functions.
 For example, performing a tap on the screen requires construction and injecting
 of a touch down and up events which have to be delivered to the system by a
 call to <c><see cref="M:Android.App.UiAutomation.InjectInputEvent(Android.Views.InputEvent, System.Boolean)" /></c>.
 </para><para tool="javadoc-to-mdoc">
 The APIs exposed by this class operate across applications enabling a client
 to write tests that cover use cases spanning over multiple applications. For
 example, going to the settings application to change a setting and then
 interacting with another application whose behavior depends on that setting.
 </para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/app/UiAutomation.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 18" />
  </Docs>
  <Members>
    <Member MemberName="AccessibilityEvent">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.App.UiAutomation.AccessibilityEventEventArgs&gt; AccessibilityEvent;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.App.UiAutomation/AccessibilityEventEventArgs&gt; AccessibilityEvent" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.App.UiAutomation+AccessibilityEventEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteAndWaitForEvent">
      <MemberSignature Language="C#" Value="public Android.Views.Accessibility.AccessibilityEvent ExecuteAndWaitForEvent (Java.Lang.IRunnable command, Android.App.UiAutomation.IAccessibilityEventFilter filter, long timeoutMillis);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Views.Accessibility.AccessibilityEvent ExecuteAndWaitForEvent(class Java.Lang.IRunnable command, class Android.App.UiAutomation/IAccessibilityEventFilter filter, int64 timeoutMillis) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("executeAndWaitForEvent", "(Ljava/lang/Runnable;Landroid/app/UiAutomation$AccessibilityEventFilter;J)Landroid/view/accessibility/AccessibilityEvent;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Accessibility.AccessibilityEvent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="Java.Lang.IRunnable" />
        <Parameter Name="filter" Type="Android.App.UiAutomation+IAccessibilityEventFilter" />
        <Parameter Name="timeoutMillis" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="command">The command to execute.</param>
        <param name="filter">Filter that recognizes the expected event.</param>
        <param name="timeoutMillis">The wait timeout in milliseconds.</param>
        <summary>Executes a command and waits for a specific accessibility event up to a
 given wait timeout.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Executes a command and waits for a specific accessibility event up to a
 given wait timeout. To detect a sequence of events one can implement a
 filter that keeps track of seen events of the expected sequence and
 returns true after the last event of that sequence is received.
 </para><para tool="javadoc-to-mdoc"><i>Note:</i> It is caller's responsibility to recycle the returned event.
 </para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/app/UiAutomation.html#executeAndWaitForEvent(java.lang.Runnable, android.app.UiAutomation.AccessibilityEventFilter, long)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 18" />
        <exception cref="T:Java.Util.Concurrent.TimeoutException">If the expected event is not received within the timeout.
</exception>
      </Docs>
    </Member>
    <Member MemberName="InjectInputEvent">
      <MemberSignature Language="C#" Value="public bool InjectInputEvent (Android.Views.InputEvent e, bool sync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InjectInputEvent(class Android.Views.InputEvent e, bool sync) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("injectInputEvent", "(Landroid/view/InputEvent;Z)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.InputEvent" />
        <Parameter Name="sync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="e">The event to inject.</param>
        <param name="sync">Whether to inject the event synchronously.</param>
        <summary>A method for injecting an arbitrary input event.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">A method for injecting an arbitrary input event.
 </para><para tool="javadoc-to-mdoc"><i>Note:</i> It is caller's responsibility to recycle the event.
 </para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/app/UiAutomation.html#injectInputEvent(android.view.InputEvent, boolean)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="PerformGlobalAction">
      <MemberSignature Language="C#" Value="public bool PerformGlobalAction (Android.AccessibilityServices.GlobalAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool PerformGlobalAction(valuetype Android.AccessibilityServices.GlobalAction action) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("performGlobalAction", "(I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Android.AccessibilityServices.GlobalAction">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="action">The action to perform.</param>
        <summary>Performs a global action.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Performs a global action. Such an action can be performed at any moment
 regardless of the current application or user location in that application.
 For example going back, going home, opening recents, etc.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/app/UiAutomation.html#performGlobalAction(int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 18" />
        <altmember cref="F:Android.AccessibilityServices.AccessibilityService.GlobalActionBack" />
        <altmember cref="F:Android.AccessibilityServices.AccessibilityService.GlobalActionHome" />
        <altmember cref="F:Android.AccessibilityServices.AccessibilityService.GlobalActionNotifications" />
        <altmember cref="F:Android.AccessibilityServices.AccessibilityService.GlobalActionRecents" />
      </Docs>
    </Member>
    <Member MemberName="RootInActiveWindow">
      <MemberSignature Language="C#" Value="public Android.Views.Accessibility.AccessibilityNodeInfo RootInActiveWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.Accessibility.AccessibilityNodeInfo RootInActiveWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getRootInActiveWindow", "()Landroid/view/accessibility/AccessibilityNodeInfo;", "GetGetRootInActiveWindowHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Accessibility.AccessibilityNodeInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the root <c><see cref="T:Android.Views.Accessibility.AccessibilityNodeInfo" /></c> in the active window.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Gets the root <c><see cref="T:Android.Views.Accessibility.AccessibilityNodeInfo" /></c> in the active window.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/app/UiAutomation.html#getRootInActiveWindow()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="RotationFreeze0">
      <MemberSignature Language="C#" Value="public const Android.App.UiAutomationRotation RotationFreeze0 = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.UiAutomationRotation RotationFreeze0 = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ROTATION_FREEZE_0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.App.UiAutomationRotation enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.UiAutomationRotation</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Rotation constant: Freeze rotation to 0 degrees (natural orientation) </summary>
        <remarks><para tool="javadoc-to-mdoc">Rotation constant: Freeze rotation to 0 degrees (natural orientation) </para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/app/UiAutomation.html#ROTATION_FREEZE_0" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="RotationFreeze180">
      <MemberSignature Language="C#" Value="public const Android.App.UiAutomationRotation RotationFreeze180 = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.UiAutomationRotation RotationFreeze180 = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ROTATION_FREEZE_180")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.App.UiAutomationRotation enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.UiAutomationRotation</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Rotation constant: Freeze rotation to 180 degrees .</summary>
        <remarks><para tool="javadoc-to-mdoc">Rotation constant: Freeze rotation to 180 degrees . </para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/app/UiAutomation.html#ROTATION_FREEZE_180" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="RotationFreeze270">
      <MemberSignature Language="C#" Value="public const Android.App.UiAutomationRotation RotationFreeze270 = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.UiAutomationRotation RotationFreeze270 = (3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ROTATION_FREEZE_270")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.App.UiAutomationRotation enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.UiAutomationRotation</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Rotation constant: Freeze rotation to 270 degrees .</summary>
        <remarks><para tool="javadoc-to-mdoc">Rotation constant: Freeze rotation to 270 degrees . </para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/app/UiAutomation.html#ROTATION_FREEZE_270" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="RotationFreeze90">
      <MemberSignature Language="C#" Value="public const Android.App.UiAutomationRotation RotationFreeze90 = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.UiAutomationRotation RotationFreeze90 = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ROTATION_FREEZE_90")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.App.UiAutomationRotation enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.UiAutomationRotation</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Rotation constant: Freeze rotation to 90 degrees .</summary>
        <remarks><para tool="javadoc-to-mdoc">Rotation constant: Freeze rotation to 90 degrees . </para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/app/UiAutomation.html#ROTATION_FREEZE_90" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="RotationFreezeCurrent">
      <MemberSignature Language="C#" Value="public const Android.App.UiAutomationRotation RotationFreezeCurrent = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.UiAutomationRotation RotationFreezeCurrent = (-1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ROTATION_FREEZE_CURRENT")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.App.UiAutomationRotation enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.UiAutomationRotation</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>Rotation constant: Freeze rotation to its current state.</summary>
        <remarks><para tool="javadoc-to-mdoc">Rotation constant: Freeze rotation to its current state. </para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/app/UiAutomation.html#ROTATION_FREEZE_CURRENT" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="RotationUnfreeze">
      <MemberSignature Language="C#" Value="public const Android.App.UiAutomationRotation RotationUnfreeze = -2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.UiAutomationRotation RotationUnfreeze = (-2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ROTATION_UNFREEZE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.App.UiAutomationRotation enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.UiAutomationRotation</ReturnType>
      </ReturnValue>
      <MemberValue>-2</MemberValue>
      <Docs>
        <summary>Rotation constant: Unfreeze rotation (rotating the device changes its rotation state).</summary>
        <remarks><para tool="javadoc-to-mdoc">Rotation constant: Unfreeze rotation (rotating the device changes its rotation state). </para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/app/UiAutomation.html#ROTATION_UNFREEZE" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="ServiceInfo">
      <MemberSignature Language="C#" Value="public Android.AccessibilityServices.AccessibilityServiceInfo ServiceInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.AccessibilityServices.AccessibilityServiceInfo ServiceInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getServiceInfo", "()Landroid/accessibilityservice/AccessibilityServiceInfo;", "GetGetServiceInfoHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setServiceInfo", "(Landroid/accessibilityservice/AccessibilityServiceInfo;)V", "GetSetServiceInfo_Landroid_accessibilityservice_AccessibilityServiceInfo_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.AccessibilityServices.AccessibilityServiceInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the an <c><see cref="T:Android.AccessibilityServices.AccessibilityServiceInfo" /></c> describing this UiAutomation.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/android/app/UiAutomation.html#getServiceInfo()" target="_blank">[Android Documentation]</a><br /></format>Gets the an <c><see cref="T:Android.AccessibilityServices.AccessibilityServiceInfo" /></c> describing this UiAutomation.
 This method is useful if one wants to change some of the dynamically
 configurable properties at runtime.</para><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/android/app/UiAutomation.html#setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)" target="_blank">[Android Documentation]</a><br /></format>Sets the <c><see cref="T:Android.AccessibilityServices.AccessibilityServiceInfo" /></c> that describes how this
 UiAutomation will be handled by the platform accessibility layer.</para></remarks>
        <since version="Added in API level 18" />
        <altmember cref="T:Android.AccessibilityServices.AccessibilityServiceInfo" />
        <altmember cref="T:Android.AccessibilityServices.AccessibilityServiceInfo" />
      </Docs>
    </Member>
    <Member MemberName="SetOnAccessibilityEventListener">
      <MemberSignature Language="C#" Value="public void SetOnAccessibilityEventListener (Android.App.UiAutomation.IOnAccessibilityEventListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOnAccessibilityEventListener(class Android.App.UiAutomation/IOnAccessibilityEventListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnAccessibilityEventListener", "(Landroid/app/UiAutomation$OnAccessibilityEventListener;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.App.UiAutomation+IOnAccessibilityEventListener" />
      </Parameters>
      <Docs>
        <param name="listener">The callback.
</param>
        <summary>Sets a callback for observing the stream of <c><see cref="T:Android.Views.Accessibility.AccessibilityEvent" /></c>s.</summary>
        <remarks><para tool="javadoc-to-mdoc">Sets a callback for observing the stream of <c><see cref="T:Android.Views.Accessibility.AccessibilityEvent" /></c>s.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/app/UiAutomation.html#setOnAccessibilityEventListener(android.app.UiAutomation.OnAccessibilityEventListener)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="SetRotation">
      <MemberSignature Language="C#" Value="public bool SetRotation (Android.App.UiAutomationRotation rotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SetRotation(valuetype Android.App.UiAutomationRotation rotation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setRotation", "(I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rotation" Type="Android.App.UiAutomationRotation">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="rotation">The desired rotation.</param>
        <summary>Sets the device rotation.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Sets the device rotation. A client can freeze the rotation in
 desired state or freeze the rotation to its current state or
 unfreeze the rotation (rotating the device changes its rotation
 state).</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/app/UiAutomation.html#setRotation(int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 18" />
        <altmember cref="F:Android.App.UiAutomation.RotationFreeze0" />
        <altmember cref="F:Android.App.UiAutomation.RotationFreeze90" />
        <altmember cref="F:Android.App.UiAutomation.RotationFreeze180" />
        <altmember cref="F:Android.App.UiAutomation.RotationFreeze270" />
        <altmember cref="F:Android.App.UiAutomation.RotationFreezeCurrent" />
        <altmember cref="F:Android.App.UiAutomation.RotationUnfreeze" />
      </Docs>
    </Member>
    <Member MemberName="SetRunAsMonkey">
      <MemberSignature Language="C#" Value="public void SetRunAsMonkey (bool enable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRunAsMonkey(bool enable) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setRunAsMonkey", "(Z)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enable">whether to run in a "monkey" mode or not. Default is not.</param>
        <summary>Sets whether this UiAutomation to run in a "monkey" mode.</summary>
        <remarks><para tool="javadoc-to-mdoc">Sets whether this UiAutomation to run in a "monkey" mode. Applications can query whether
 they are executed in a "monkey" mode, i.e. run by a test framework, and avoid doing
 potentially undesirable actions such as calling 911 or posting on public forums etc.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/app/UiAutomation.html#setRunAsMonkey(boolean)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="TakeScreenshot">
      <MemberSignature Language="C#" Value="public Android.Graphics.Bitmap TakeScreenshot ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Graphics.Bitmap TakeScreenshot() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("takeScreenshot", "()Landroid/graphics/Bitmap;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Takes a screenshot.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Takes a screenshot.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/app/UiAutomation.html#takeScreenshot()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForIdle">
      <MemberSignature Language="C#" Value="public void WaitForIdle (long idleTimeoutMillis, long globalTimeoutMillis);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WaitForIdle(int64 idleTimeoutMillis, int64 globalTimeoutMillis) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("waitForIdle", "(JJ)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="idleTimeoutMillis" Type="System.Int64" />
        <Parameter Name="globalTimeoutMillis" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="idleTimeoutMillis">The timeout in milliseconds between two events
            to consider the device idle.</param>
        <param name="globalTimeoutMillis">The maximal global timeout in milliseconds in
            which to wait for an idle state.</param>
        <summary>Waits for the accessibility event stream to become idle, which is not to
 have received an accessibility event within <c>idleTimeoutMillis</c>.</summary>
        <remarks><para tool="javadoc-to-mdoc">Waits for the accessibility event stream to become idle, which is not to
 have received an accessibility event within <c>idleTimeoutMillis</c>.
 The total time spent to wait for an idle accessibility event stream is bounded
 by the <c>globalTimeoutMillis</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/app/UiAutomation.html#waitForIdle(long, long)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 18" />
        <exception cref="T:Java.Util.Concurrent.TimeoutException">If no idle state was detected within
            <c>globalTimeoutMillis.</c></exception>
      </Docs>
    </Member>
  </Members>
</Type>
