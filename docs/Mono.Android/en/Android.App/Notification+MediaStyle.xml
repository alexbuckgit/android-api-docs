<Type Name="Notification+MediaStyle" FullName="Android.App.Notification+MediaStyle">
  <TypeSignature Language="C#" Value="public class Notification.MediaStyle : Android.App.Notification.Style"/>
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit Notification/MediaStyle extends Android.App.Notification/Style"/>
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.App.Notification+Style</BaseTypeName>
  </Base>
  <Interfaces/>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/app/Notification$MediaStyle", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Notification style for media playback notifications.</summary> 
    <remarks>In the expanded form, <see cref="P:Android.App.Notification.BigContentView"/>, up to 
five <see cref="T:Android.App.Notification.Action"/> structures specified 
with <see cref="M:Android.App.Notification.Builder.AddAction(System.Int32,Java.Lang.ICharSequence,Android.App.PendingIntent)" /> 
will be shown as icon-only pushbuttons, suitable for transport controls. The bitmap given to 
<see cref="M:Android.App.Notification.Builder.SetLargeIcon(Android.Graphics.Bitmap)"/> 
will be treated as album artwork. Unlike the other styles provided here, <c>MediaStyle</c> can also 
modify the standard-size <see cref="P:Android.App.Notification.ContentView"/>; 
by providing action indices to <see cref="M:Android.App.Notification.MediaStyle.SetShowActionsInCompactView(System.Int32[])"/> 
you can promote up to 3 actions to be displayed in the standard view alongside the usual content. Notifications created with 
<c>MediaStyle</c> will have their category set to <see cref="F:Android.App.Notification.CategoryTransport"/> unless you 
set a different category using <see cref="M:Android.App.Notification.Builder.SetCategory(System.String)"/>. 
Finally, if you attach a <see cref="T:Android.Media.Session.MediaSession.Token" /> using 
<see cref="M:Android.App.Notification.MediaStyle.SetMediaSession(Android.Media.Session.MediaSession.Token)"/>, 
the System UI can identify this as a notification representing an active media session and respond 
accordingly (by showing album artwork in the lockscreen, for 
example).</remarks> 
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaStyle ();"/>
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed"/>
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters/>
      <Docs>
        <summary>Construct a <c>MediaStyle</c> object.</summary>
        <remarks>Constructs a <c>MediaStyle</c> object with default values.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaStyle (Android.App.Notification.Builder builder);"/>
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.App.Notification/Builder builder) cil managed"/>
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/app/Notification$Builder;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="builder" Type="Android.App.Notification+Builder"/>
      </Parameters>
      <Docs>
        <param name="builder"><c>Notification.Builder</c> object that is modified by this <c>MediaStyle</c>.</param>
        <summary>Construct a <c>MediaStyle</c> object.</summary>
        <remarks>Constructs a <c>MediaStyle</c> object that modifies the specified <c>Notification.Builder</c> object.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MediaStyle (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);"/>
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed"/>
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr"/>
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership"/>
      </Parameters>
      <Docs>
        <param name="javaReference">To be added.</param>
        <param name="transfer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMediaSession">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.MediaStyle SetMediaSession (Android.Media.Session.MediaSession.Token token);"/>
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/MediaStyle SetMediaSession(class Android.Media.Session.MediaSession/Token token) cil managed"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setMediaSession", "(Landroid/media/session/MediaSession$Token;)Landroid/app/Notification$MediaStyle;", "GetSetMediaSession_Landroid_media_session_MediaSession_Token_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+MediaStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Android.Media.Session.MediaSession+Token"/>
      </Parameters>
      <Docs>
        <param name="token">The <see cref="T:Android.Media.Session.MediaSession.Token"/> to attach.</param>
        <summary>Attach a <see cref="T:Android.Media.Session.MediaSession.Token"/> to this Notification.</summary>
        <returns>To be added.</returns>
        <remarks>Provides additional playback information and control to the System UI.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShowActionsInCompactView">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.MediaStyle SetShowActionsInCompactView (int[] actions);"/>
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/MediaStyle SetShowActionsInCompactView(int32[] actions) cil managed"/>
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setShowActionsInCompactView", "([I)Landroid/app/Notification$MediaStyle;", "GetSetShowActionsInCompactView_arrayIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+MediaStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actions" Type="System.Int32[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="actions">The indices of the actions to show in the compact notification view.</param>
        <summary>Request actions to be shown in the compact notification view.</summary>
        <returns>To be added.</returns>
        <remarks>Requests up to three actions (by index in the order of addition) to be shown in the compact notification view.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }"/>
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }"/>
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType"/>
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
