<Type Name="TaskStackBuilder" FullName="Android.App.TaskStackBuilder">
  <TypeSignature Language="C#" Value="public class TaskStackBuilder : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TaskStackBuilder extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/app/TaskStackBuilder", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="16">
    <summary>Utility class for constructing synthetic back stacks for cross-task navigation
 on Android 3.0 and newer.</summary>
    <remarks />
    <since version="Added in API level 16" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TaskStackBuilder (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AddNextIntent">
      <MemberSignature Language="C#" Value="public virtual Android.App.TaskStackBuilder AddNextIntent (Android.Content.Intent nextIntent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.TaskStackBuilder AddNextIntent(class Android.Content.Intent nextIntent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addNextIntent", "(Landroid/content/Intent;)Landroid/app/TaskStackBuilder;", "GetAddNextIntent_Landroid_content_Intent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.TaskStackBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nextIntent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="nextIntent">Intent for the next Activity in the synthesized task stack</param>
        <summary>Add a new Intent to the task stack.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="AddNextIntentWithParentStack">
      <MemberSignature Language="C#" Value="public virtual Android.App.TaskStackBuilder AddNextIntentWithParentStack (Android.Content.Intent nextIntent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.TaskStackBuilder AddNextIntentWithParentStack(class Android.Content.Intent nextIntent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addNextIntentWithParentStack", "(Landroid/content/Intent;)Landroid/app/TaskStackBuilder;", "GetAddNextIntentWithParentStack_Landroid_content_Intent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.TaskStackBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nextIntent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="nextIntent">Intent for the topmost Activity in the synthesized task stack.
                   Its chain of parents as specified in the manifest will be added.</param>
        <summary>Add a new Intent with the resolved chain of parents for the target activity to
 the task stack.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="AddParentStack">
      <MemberSignature Language="C#" Value="public virtual Android.App.TaskStackBuilder AddParentStack (Android.App.Activity sourceActivity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.TaskStackBuilder AddParentStack(class Android.App.Activity sourceActivity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addParentStack", "(Landroid/app/Activity;)Landroid/app/TaskStackBuilder;", "GetAddParentStack_Landroid_app_Activity_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.TaskStackBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceActivity" Type="Android.App.Activity" />
      </Parameters>
      <Docs>
        <param name="sourceActivity">All parents of this activity will be added</param>
        <summary tool="true">Add the activity parent chain as specified by the
 <c><see cref="P:Android.App.Activity.ParentActivityIntent" /></c> method of the activity
 specified and the <c><see cref="!:NoType:android/R$attr;Href=../../../reference/android/R.attr.html#parentActivityName" /></c> attributes
 of each successive activity (or activity-alias) element in the application's manifest
 to the task stack builder.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="AddParentStack">
      <MemberSignature Language="C#" Value="public virtual Android.App.TaskStackBuilder AddParentStack (Android.Content.ComponentName sourceActivityName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.TaskStackBuilder AddParentStack(class Android.Content.ComponentName sourceActivityName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addParentStack", "(Landroid/content/ComponentName;)Landroid/app/TaskStackBuilder;", "GetAddParentStack_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.TaskStackBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceActivityName" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="sourceActivityName">Must specify an Activity component. All parents of
                           this activity will be added</param>
        <summary>Add the activity parent chain as specified by the
 <c><see cref="!:NoType:android/R$attr;Href=../../../reference/android/R.attr.html#parentActivityName" /></c> attribute of the activity
 (or activity-alias) element in the application's manifest to the task stack builder.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="AddParentStack">
      <MemberSignature Language="C#" Value="public virtual Android.App.TaskStackBuilder AddParentStack (Java.Lang.Class sourceActivityClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.TaskStackBuilder AddParentStack(class Java.Lang.Class sourceActivityClass) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addParentStack", "(Ljava/lang/Class;)Landroid/app/TaskStackBuilder;", "GetAddParentStack_Ljava_lang_Class_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.TaskStackBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceActivityClass" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="sourceActivityClass">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Android.App.TaskStackBuilder Create (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.TaskStackBuilder Create(class Android.Content.Context context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("create", "(Landroid/content/Context;)Landroid/app/TaskStackBuilder;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.TaskStackBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">The context that will launch the new task stack or generate a PendingIntent</param>
        <summary>Return a new TaskStackBuilder for launching a fresh task stack consisting
 of a series of activities.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="EditIntentAt">
      <MemberSignature Language="C#" Value="public virtual Android.Content.Intent EditIntentAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.Intent EditIntentAt(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("editIntentAt", "(I)Landroid/content/Intent;", "GetEditIntentAt_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Intent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Index from 0-getIntentCount()</param>
        <summary>Return the intent at the specified index for modification.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="GetIntents">
      <MemberSignature Language="C#" Value="public virtual Android.Content.Intent[] GetIntents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.Intent[] GetIntents() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getIntents", "()[Landroid/content/Intent;", "GetGetIntentsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Intent[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return an array containing the intents added to this builder.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="GetPendingIntent">
      <MemberSignature Language="C#" Value="public virtual Android.App.PendingIntent GetPendingIntent (int requestCode, Android.App.PendingIntentFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.PendingIntent GetPendingIntent(int32 requestCode, valuetype Android.App.PendingIntentFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPendingIntent", "(II)Landroid/app/PendingIntent;", "GetGetPendingIntent_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.PendingIntent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestCode" Type="System.Int32" />
        <Parameter Name="flags" Type="Android.App.PendingIntentFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="requestCode">Private request code for the sender</param>
        <param name="flags">May be <c><see cref="!:Android.App.PendingIntent.FLAG_ONE_SHOT" /></c>,
              <c><see cref="!:Android.App.PendingIntent.FLAG_NO_CREATE" /></c>, <c><see cref="F:Android.App.PendingIntentFlags.CancelCurrent" tool="ReplaceLinkValue" /></c>,
              <c><see cref="F:Android.App.PendingIntentFlags.UpdateCurrent" tool="ReplaceLinkValue" /></c>, or any of the flags supported by
              <c><see cref="M:Android.Content.Intent.FillIn(Android.Content.Intent, Android.Content.FillInFlags)" /></c> to control which unspecified parts of the
              intent that can be supplied when the actual send happens.</param>
        <summary>Obtain a <c><see cref="T:Android.App.PendingIntent" /></c> for launching the task constructed by this builder so far.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="GetPendingIntent">
      <MemberSignature Language="C#" Value="public virtual Android.App.PendingIntent GetPendingIntent (int requestCode, Android.App.PendingIntentFlags flags, Android.OS.Bundle options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.PendingIntent GetPendingIntent(int32 requestCode, valuetype Android.App.PendingIntentFlags flags, class Android.OS.Bundle options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPendingIntent", "(IILandroid/os/Bundle;)Landroid/app/PendingIntent;", "GetGetPendingIntent_IILandroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.PendingIntent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestCode" Type="System.Int32" />
        <Parameter Name="flags" Type="Android.App.PendingIntentFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="options" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="requestCode">Private request code for the sender</param>
        <param name="flags">May be <c><see cref="!:Android.App.PendingIntent.FLAG_ONE_SHOT" /></c>,
              <c><see cref="!:Android.App.PendingIntent.FLAG_NO_CREATE" /></c>, <c><see cref="F:Android.App.PendingIntentFlags.CancelCurrent" tool="ReplaceLinkValue" /></c>,
              <c><see cref="F:Android.App.PendingIntentFlags.UpdateCurrent" tool="ReplaceLinkValue" /></c>, or any of the flags supported by
              <c><see cref="M:Android.Content.Intent.FillIn(Android.Content.Intent, Android.Content.FillInFlags)" /></c> to control which unspecified parts of the
              intent that can be supplied when the actual send happens.</param>
        <param name="options">Additional options for how the Activity should be started.
 See <c><see cref="M:Android.Content.Context.StartActivity(Android.Content.Intent, Android.OS.Bundle)" /></c> for more details.</param>
        <summary>Obtain a <c><see cref="T:Android.App.PendingIntent" /></c> for launching the task constructed by this builder so far.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="IntentCount">
      <MemberSignature Language="C#" Value="public virtual int IntentCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IntentCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getIntentCount", "()I", "GetGetIntentCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="StartActivities">
      <MemberSignature Language="C#" Value="public virtual void StartActivities ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartActivities() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startActivities", "()V", "GetStartActivitiesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Start the task stack constructed by this builder.</summary>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="StartActivities">
      <MemberSignature Language="C#" Value="public virtual void StartActivities (Android.OS.Bundle options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartActivities(class Android.OS.Bundle options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startActivities", "(Landroid/os/Bundle;)V", "GetStartActivities_Landroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="options">Additional options for how the Activity should be started.
 See <c><see cref="M:Android.Content.Context.StartActivity(Android.Content.Intent, Android.OS.Bundle)" /></c> for more details.
</param>
        <summary>Start the task stack constructed by this builder.</summary>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
