<Type Name="Notification+Builder" FullName="Android.App.Notification+Builder">
  <TypeSignature Language="C#" Value="public class Notification.Builder : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit Notification/Builder extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/app/Notification$Builder", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Builder class for <c><see cref="T:Android.App.Notification" /></c> objects.</summary>
    <remarks />
    <since version="Added in API level 11" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Builder (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">An <c><see cref="T:Android.Content.Context" /></c> that will be used by the Builder to construct the <see cref="T:Android.Widget.RemoteViews" />. The Context will not be held past the lifetime of this Builder object.</param>
        <summary>Constructs a new <c>Builder</c>.</summary>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Builder (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AddAction">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder AddAction (Android.App.Notification.Action action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder AddAction(class Android.App.Notification/Action action) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addAction", "(Landroid/app/Notification$Action;)Landroid/app/Notification$Builder;", "GetAddAction_Landroid_app_Notification_Action_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Android.App.Notification+Action" />
      </Parameters>
      <Docs>
        <param name="action">The action to add.</param>
        <summary>Add an action to this notification. </summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AddAction">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder AddAction (int icon, Java.Lang.ICharSequence title, Android.App.PendingIntent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder AddAction(int32 icon, class Java.Lang.ICharSequence title, class Android.App.PendingIntent intent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addAction", "(ILjava/lang/CharSequence;Landroid/app/PendingIntent;)Landroid/app/Notification$Builder;", "GetAddAction_ILjava_lang_CharSequence_Landroid_app_PendingIntent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="icon" Type="System.Int32" />
        <Parameter Name="title" Type="Java.Lang.ICharSequence" />
        <Parameter Name="intent" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="icon">Resource ID of a drawable that represents the action.</param>
        <param name="title">Text describing the action.</param>
        <param name="intent">
          <see cref="T:Android.App.PendingIntent" /> to be fired when the action is invoked.
</param>
        <summary>Add an action (with a corresponding title and intent) to this notification.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="AddAction">
      <MemberSignature Language="C#" Value="public Android.App.Notification.Builder AddAction (int icon, string title, Android.App.PendingIntent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.App.Notification/Builder AddAction(int32 icon, string title, class Android.App.PendingIntent intent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="icon" Type="System.Int32" />
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="intent" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="icon">Resource ID of a drawable that represents the action.</param>
        <param name="title">Text describing the action.</param>
        <param name="intent">
          <see cref="T:Android.App.PendingIntent" /> to be fired when the action is invoked.</param>
        <summary>Add an action (with a corresponding title and intent) to this notification.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AddExtras">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder AddExtras (Android.OS.Bundle extras);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder AddExtras(class Android.OS.Bundle extras) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addExtras", "(Landroid/os/Bundle;)Landroid/app/Notification$Builder;", "GetAddExtras_Landroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extras" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="extras">A <see cref="T:Android.OS.Bundle" /> of additional information for the notification.</param>
        <summary>Merge additional metadata into this notification.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AddPerson">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder AddPerson (string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder AddPerson(string uri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addPerson", "(Ljava/lang/String;)Landroid/app/Notification$Builder;", "GetAddPerson_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">A URI for the person.</param>
        <summary>Add a person that is relevant to this notification.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification Build ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification Build() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("build", "()Landroid/app/Notification;", "GetBuildHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Build a new <c><see cref="T:Android.App.Notification" /></c> object.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="Extend">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder Extend (Android.App.Notification.IExtender extender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder Extend(class Android.App.Notification/IExtender extender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("extend", "(Landroid/app/Notification$Extender;)Landroid/app/Notification$Builder;", "GetExtend_Landroid_app_Notification_Extender_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extender" Type="Android.App.Notification+IExtender" />
      </Parameters>
      <Docs>
        <param name="extender">The <see cref="T:Android.App.Notification.IExtender" /> to apply.</param>
        <summary>Apply an extender to this notification builder.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Extras">
      <MemberSignature Language="C#" Value="public virtual Android.OS.Bundle Extras { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.OS.Bundle Extras" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getExtras", "()Landroid/os/Bundle;", "GetGetExtrasHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Bundle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Metadata for the notification.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Notification">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification Notification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.App.Notification Notification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getNotification", "()Landroid/app/Notification;", "GetGetNotificationHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The notification object being built by this builder.</summary>
        <value>
          <see cref="T:Android.App.Notification" />
        </value>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetAutoCancel">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetAutoCancel (bool autoCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetAutoCancel(bool autoCancel) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAutoCancel", "(Z)Landroid/app/Notification$Builder;", "GetSetAutoCancel_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoCancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoCancel">If set to <c>true</c>, automatically dismisses the notification when touched.</param>
        <summary>Make this notification automatically dismissed when the user touches it.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="F:Android.App.NotificationFlags.AutoCancel" />
      </Docs>
    </Member>
    <Member MemberName="SetCategory">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetCategory (string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetCategory(string category) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setCategory", "(Ljava/lang/String;)Landroid/app/Notification$Builder;", "GetSetCategory_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="category">The <c><see cref="P:Android.App.Notification.Category" /></c> that best 
describes the notification.</param>
        <summary>Set the notification category.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetColor">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetColor (int argb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetColor(int32 argb) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setColor", "(I)Landroid/app/Notification$Builder;", "GetSetColor_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="argb">The accent color to use.</param>
        <summary>Set the accent color of the notification.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetContent">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetContent (Android.Widget.RemoteViews views);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetContent(class Android.Widget.RemoteViews views) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setContent", "(Landroid/widget/RemoteViews;)Landroid/app/Notification$Builder;", "GetSetContent_Landroid_widget_RemoteViews_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="views" Type="Android.Widget.RemoteViews" />
      </Parameters>
      <Docs>
        <param name="views">The <see cref="T:Android.Widget.RemoteViews" /> to use.</param>
        <summary>Supply a custom <see cref="T:Android.Widget.RemoteViews" /> object to use instead of the platform template.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="P:Android.App.Notification.ContentView" />
      </Docs>
    </Member>
    <Member MemberName="SetContentInfo">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetContentInfo (Java.Lang.ICharSequence info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetContentInfo(class Java.Lang.ICharSequence info) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setContentInfo", "(Ljava/lang/CharSequence;)Landroid/app/Notification$Builder;", "GetSetContentInfo_Ljava_lang_CharSequence_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="info">The info text to use.</param>
        <summary>Add a small piece of additional information pertaining to this notification.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetContentInfo">
      <MemberSignature Language="C#" Value="public Android.App.Notification.Builder SetContentInfo (string info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.App.Notification/Builder SetContentInfo(string info) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="info">The info text to use.</param>
        <summary>Add a small piece of additional information pertaining to this notification.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetContentIntent">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetContentIntent (Android.App.PendingIntent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetContentIntent(class Android.App.PendingIntent intent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setContentIntent", "(Landroid/app/PendingIntent;)Landroid/app/Notification$Builder;", "GetSetContentIntent_Landroid_app_PendingIntent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="intent">The <see cref="T:Android.App.PendingIntent" /> to send.</param>
        <summary>Supply a <c><see cref="T:Android.App.PendingIntent" /></c> to be sent when the notification is clicked.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="P:Android.App.Notification.ContentIntent" />
      </Docs>
    </Member>
    <Member MemberName="SetContentText">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetContentText (Java.Lang.ICharSequence text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetContentText(class Java.Lang.ICharSequence text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setContentText", "(Ljava/lang/CharSequence;)Landroid/app/Notification$Builder;", "GetSetContentText_Ljava_lang_CharSequence_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="text">The line of text to use.</param>
        <summary>Set the second line of text in the platform notification template.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetContentText">
      <MemberSignature Language="C#" Value="public Android.App.Notification.Builder SetContentText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.App.Notification/Builder SetContentText(string text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">The line of text to use.</param>
        <summary>Set the second line of text in the platform notification template.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetContentTitle">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetContentTitle (Java.Lang.ICharSequence title);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetContentTitle(class Java.Lang.ICharSequence title) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setContentTitle", "(Ljava/lang/CharSequence;)Landroid/app/Notification$Builder;", "GetSetContentTitle_Ljava_lang_CharSequence_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="title">The line of text to use.</param>
        <summary>Set the first line of text in the platform notification template.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetContentTitle">
      <MemberSignature Language="C#" Value="public Android.App.Notification.Builder SetContentTitle (string title);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.App.Notification/Builder SetContentTitle(string title) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="title">The line of text to use.</param>
        <summary>Set the first line of text in the platform notification template.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetDefaults">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetDefaults (Android.App.NotificationDefaults defaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetDefaults(valuetype Android.App.NotificationDefaults defaults) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDefaults", "(I)Landroid/app/Notification$Builder;", "GetSetDefaults_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaults" Type="Android.App.NotificationDefaults">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="defaults">The <c><see cref="T:Android.App.NotificationDefaults" /></c> properties to use.</param>
        <summary>Set which notification properties will be inherited from system defaults.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetDeleteIntent">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetDeleteIntent (Android.App.PendingIntent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetDeleteIntent(class Android.App.PendingIntent intent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDeleteIntent", "(Landroid/app/PendingIntent;)Landroid/app/Notification$Builder;", "GetSetDeleteIntent_Landroid_app_PendingIntent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="intent">The <see cref="T:Android.App.PendingIntent" /> to send.</param>
        <summary>Supply a <c><see cref="T:Android.App.PendingIntent" /></c> to send when the notification is cleared explicitly by the user.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="P:Android.App.Notification.DeleteIntent" />
      </Docs>
    </Member>
    <Member MemberName="SetExtras">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetExtras (Android.OS.Bundle extras);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetExtras(class Android.OS.Bundle extras) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setExtras", "(Landroid/os/Bundle;)Landroid/app/Notification$Builder;", "GetSetExtras_Landroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bag" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="extras">A <see cref="T:Android.OS.Bundle" /> of additional information for the notification.</param>
        <summary>Set metadata for this notification.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetFullScreenIntent">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetFullScreenIntent (Android.App.PendingIntent intent, bool highPriority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetFullScreenIntent(class Android.App.PendingIntent intent, bool highPriority) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setFullScreenIntent", "(Landroid/app/PendingIntent;Z)Landroid/app/Notification$Builder;", "GetSetFullScreenIntent_Landroid_app_PendingIntent_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.App.PendingIntent" />
        <Parameter Name="highPriority" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="intent">The pending intent to launch.</param>
        <param name="highPriority">Passing true will cause this notification to be sent
          even if other notifications are suppressed.</param>
        <summary>Specifies an intent to launch instead of posting the notification to the status bar.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="P:Android.App.Notification.FullScreenIntent" />
      </Docs>
    </Member>
    <Member MemberName="SetGroup">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetGroup (string groupKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetGroup(string groupKey) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setGroup", "(Ljava/lang/String;)Landroid/app/Notification$Builder;", "GetSetGroup_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupKey">The group key of the group.</param>
        <summary>Set this notification to be part of a group of notifications sharing the same key.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetGroupSummary">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetGroupSummary (bool isGroupSummary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetGroupSummary(bool isGroupSummary) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setGroupSummary", "(Z)Landroid/app/Notification$Builder;", "GetSetGroupSummary_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isGroupSummary" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isGroupSummary">Whether this notification should be a group summary.</param>
        <summary>Set this notification to be the group summary for a group of notifications.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetLargeIcon">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetLargeIcon (Android.Graphics.Bitmap icon);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetLargeIcon(class Android.Graphics.Bitmap icon) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLargeIcon", "(Landroid/graphics/Bitmap;)Landroid/app/Notification$Builder;", "GetSetLargeIcon_Landroid_graphics_Bitmap_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="icon" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="icon">A resource ID in the application's package of the drawable to use.</param>
        <summary>Add a large icon to the notification (and the ticker on some devices).</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="P:Android.App.Notification.LargeIcon" />
      </Docs>
    </Member>
    <Member MemberName="SetLights">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetLights (int argb, int onMs, int offMs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetLights(int32 argb, int32 onMs, int32 offMs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLights", "(III)Landroid/app/Notification$Builder;", "GetSetLights_IIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argb" Type="System.Int32" />
        <Parameter Name="onMs" Type="System.Int32" />
        <Parameter Name="offMs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="argb">The LED color to use.</param>
        <param name="onMs">The number of milliseconds for the LED to remain on per blink cycle.</param>
        <param name="offMs">The number of milliseconds for the LED to remain off per blink cycle.</param>
        <summary>Set the desired color for the indicator LED on the device, as well as the
 blink duty cycle (specified in milliseconds).</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="P:Android.App.Notification.LedARGB" />
        <altmember cref="P:Android.App.Notification.LedOnMS" />
        <altmember cref="P:Android.App.Notification.LedOffMS" />
      </Docs>
    </Member>
    <Member MemberName="SetLocalOnly">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetLocalOnly (bool localOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetLocalOnly(bool localOnly) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLocalOnly", "(Z)Landroid/app/Notification$Builder;", "GetSetLocalOnly_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="localOnly">If set to <c>true</c>, the notification is shown only locally (not on other devices).</param>
        <summary>Set whether or not this notification should not bridge to other devices.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetNumber">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetNumber (int number);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetNumber(int32 number) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setNumber", "(I)Landroid/app/Notification$Builder;", "GetSetNumber_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="number" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="number">The integer value to display.</param>
        <summary>Set the large number at the right-hand side of the notification.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetOngoing">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetOngoing (bool ongoing);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetOngoing(bool ongoing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOngoing", "(Z)Landroid/app/Notification$Builder;", "GetSetOngoing_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ongoing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ongoing">If set to <c>true</c>, the notification will be an ongoing notification.</param>
        <summary>Set whether this is an "ongoing" notification.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="F:Android.App.NotificationFlags.OngoingEvent" />
      </Docs>
    </Member>
    <Member MemberName="SetOnlyAlertOnce">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetOnlyAlertOnce (bool onlyAlertOnce);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetOnlyAlertOnce(bool onlyAlertOnce) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnlyAlertOnce", "(Z)Landroid/app/Notification$Builder;", "GetSetOnlyAlertOnce_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="onlyAlertOnce" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="onlyAlertOnce">If set to <c>true</c>, raises the alert only once.</param>
        <summary>Play sound, vibrate and ticker only if the notification is not already showing.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="F:Android.App.NotificationFlags.OnlyAlertOnce" />
      </Docs>
    </Member>
    <Member MemberName="SetPriority">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetPriority (int pri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetPriority(int32 pri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPriority", "(I)Landroid/app/Notification$Builder;", "GetSetPriority_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pri" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pri">The priority value to use for this notification.</param>
        <summary>Set the priority of this notification.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 16" />
        <altmember cref="P:Android.App.Notification.Priority" />
      </Docs>
    </Member>
    <Member MemberName="SetProgress">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetProgress (int max, int progress, bool indeterminate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetProgress(int32 max, int32 progress, bool indeterminate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setProgress", "(IIZ)Landroid/app/Notification$Builder;", "GetSetProgress_IIZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="max" Type="System.Int32" />
        <Parameter Name="progress" Type="System.Int32" />
        <Parameter Name="indeterminate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="max">Defines the maximum value the progress can take.</param>
        <param name="progress">Defines the default progress value, between 0 and max.</param>
        <param name="indeterminate">If set to <c>true</c>, shows acyclic animation without an indication of progress.</param>
        <summary>Set the progress that this notification represents.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetPublicVersion">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetPublicVersion (Android.App.Notification n);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetPublicVersion(class Android.App.Notification n) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPublicVersion", "(Landroid/app/Notification;)Landroid/app/Notification$Builder;", "GetSetPublicVersion_Landroid_app_Notification_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="Android.App.Notification" />
      </Parameters>
      <Docs>
        <param name="n">A replacement notification, presumably with some or all info redacted.</param>
        <summary>Supply a public version of the notification.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetShowWhen">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetShowWhen (bool show);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetShowWhen(bool show) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setShowWhen", "(Z)Landroid/app/Notification$Builder;", "GetSetShowWhen_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="show" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="show">If set to <c>true</c>, the timestamp is shown in the content view.</param>
        <summary>Control whether the timestamp is shown in the content view.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="SetSmallIcon">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetSmallIcon (int icon);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetSmallIcon(int32 icon) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSmallIcon", "(I)Landroid/app/Notification$Builder;", "GetSetSmallIcon_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="icon" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="icon">A resource ID in the application's package of the drawable to use.</param>
        <summary>Set the small icon resource, which will be used to represent the notification in the
 status bar.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="P:Android.App.Notification.Icon" />
      </Docs>
    </Member>
    <Member MemberName="SetSmallIcon">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetSmallIcon (int icon, int level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetSmallIcon(int32 icon, int32 level) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSmallIcon", "(II)Landroid/app/Notification$Builder;", "GetSetSmallIcon_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="icon" Type="System.Int32" />
        <Parameter Name="level" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="icon">A resource ID in the application's package of the drawable to use.</param>
        <param name="level">The image level to use for the icon.</param>
        <summary>Set the small icon resource for the specified level.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="P:Android.App.Notification.Icon" />
        <altmember cref="P:Android.App.Notification.IconLevel" />
      </Docs>
    </Member>
    <Member MemberName="SetSortKey">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetSortKey (string sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetSortKey(string sortKey) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSortKey", "(Ljava/lang/String;)Landroid/app/Notification$Builder;", "GetSetSortKey_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sortKey">The sort key for the notification.</param>
        <summary>Set a sort key that orders this notification among other notifications from the same package.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetSound">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetSound (Android.Net.Uri sound);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetSound(class Android.Net.Uri sound) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSound", "(Landroid/net/Uri;)Landroid/app/Notification$Builder;", "GetSetSound_Landroid_net_Uri_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sound" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="sound">The URI for the sound to be played when the notification is posted.</param>
        <summary>Set the alert sound to play.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="P:Android.App.Notification.Sound" />
      </Docs>
    </Member>
    <Member MemberName="SetSound">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetSound (Android.Net.Uri sound, Android.Media.AudioAttributes audioAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetSound(class Android.Net.Uri sound, class Android.Media.AudioAttributes audioAttributes) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSound", "(Landroid/net/Uri;Landroid/media/AudioAttributes;)Landroid/app/Notification$Builder;", "GetSetSound_Landroid_net_Uri_Landroid_media_AudioAttributes_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sound" Type="Android.Net.Uri" />
        <Parameter Name="audioAttributes" Type="Android.Media.AudioAttributes" />
      </Parameters>
      <Docs>
        <param name="sound">The URI for the sound to be played when the notification is posted.</param>
        <param name="audioAttributes">A collection of <c><see cref="T:Android.Media.AudioAttributes" /></c> that specifies the characteristics of the audio stream during playback.</param>
        <summary>Set the alert sound to play, along with sound attributes to use during playback.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetSound">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetSound (Android.Net.Uri sound, Android.Media.Stream streamType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetSound(class Android.Net.Uri sound, valuetype Android.Media.Stream streamType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSound", "(Landroid/net/Uri;I)Landroid/app/Notification$Builder;", "GetSetSound_Landroid_net_Uri_IHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sound" Type="Android.Net.Uri" />
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="sound">The URI for the sound to be played when the notification is posted.</param>
        <param name="streamType">The stream on which to play the sound.</param>
        <summary>Set the sound to play, along with a specific stream on which to play it.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="P:Android.App.Notification.Sound" />
      </Docs>
    </Member>
    <Member MemberName="SetStyle">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetStyle (Android.App.Notification.Style style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetStyle(class Android.App.Notification/Style style) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setStyle", "(Landroid/app/Notification$Style;)Landroid/app/Notification$Builder;", "GetSetStyle_Landroid_app_Notification_Style_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="Android.App.Notification+Style" />
      </Parameters>
      <Docs>
        <param name="style">Object responsible for modifying the notification style.
</param>
        <summary>Add a rich notification style to be applied at build time.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SetSubText">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetSubText (Java.Lang.ICharSequence text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetSubText(class Java.Lang.ICharSequence text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSubText", "(Ljava/lang/CharSequence;)Landroid/app/Notification$Builder;", "GetSetSubText_Ljava_lang_CharSequence_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="text">The line of text to use.</param>
        <summary>Set the third line of text in the platform notification template.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SetSubText">
      <MemberSignature Language="C#" Value="public Android.App.Notification.Builder SetSubText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.App.Notification/Builder SetSubText(string text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">The line of text to use.</param>
        <summary>Set the third line of text in the platform notification template.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetTicker">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetTicker (Java.Lang.ICharSequence tickerText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetTicker(class Java.Lang.ICharSequence tickerText) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTicker", "(Ljava/lang/CharSequence;)Landroid/app/Notification$Builder;", "GetSetTicker_Ljava_lang_CharSequence_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tickerText" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="tickerText">The ticker text to display.</param>
        <summary>Set the "ticker" text which is displayed in the status bar when the notification first
 arrives.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="P:Android.App.Notification.TickerText" />
      </Docs>
    </Member>
    <Member MemberName="SetTicker">
      <MemberSignature Language="C#" Value="public Android.App.Notification.Builder SetTicker (string tickerText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.App.Notification/Builder SetTicker(string tickerText) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tickerText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tickerText">The ticker text to display.</param>
        <summary>Set the "ticker" text which is displayed in the status bar when the notification first arrives.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetTicker">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetTicker (Java.Lang.ICharSequence tickerText, Android.Widget.RemoteViews views);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetTicker(class Java.Lang.ICharSequence tickerText, class Android.Widget.RemoteViews views) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTicker", "(Ljava/lang/CharSequence;Landroid/widget/RemoteViews;)Landroid/app/Notification$Builder;", "GetSetTicker_Ljava_lang_CharSequence_Landroid_widget_RemoteViews_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tickerText" Type="Java.Lang.ICharSequence" />
        <Parameter Name="views" Type="Android.Widget.RemoteViews" />
      </Parameters>
      <Docs>
        <param name="tickerText">The ticker text to display.</param>
        <param name="views">The <c><see cref="T:Android.Widget.RemoteViews" /></c> object to display.</param>
        <summary>Set the ticker text and associated <see cref="T:Android.Widget.RemoteViews" />.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="P:Android.App.Notification.TickerText" />
        <altmember cref="P:Android.App.Notification.TickerView" />
      </Docs>
    </Member>
    <Member MemberName="SetTicker">
      <MemberSignature Language="C#" Value="public Android.App.Notification.Builder SetTicker (string tickerText, Android.Widget.RemoteViews views);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.App.Notification/Builder SetTicker(string tickerText, class Android.Widget.RemoteViews views) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tickerText" Type="System.String" />
        <Parameter Name="views" Type="Android.Widget.RemoteViews" />
      </Parameters>
      <Docs>
        <param name="tickerText">The ticker text to display.</param>
        <param name="views">The <c><see cref="T:Android.Widget.RemoteViews" /></c> object to display.</param>
        <summary>Set the ticker text.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetUsesChronometer">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetUsesChronometer (bool b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetUsesChronometer(bool b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setUsesChronometer", "(Z)Landroid/app/Notification$Builder;", "GetSetUsesChronometer_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="b" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="b">If set to <c>true</c>, uses the chronometer; else, shows a timestamp.</param>
        <summary>Show the <c><see cref="P:Android.App.Notification.When" /></c> field as a stopwatch.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 16" />
        <altmember cref="T:Android.Widget.Chronometer" />
        <altmember cref="P:Android.App.Notification.When" />
      </Docs>
    </Member>
    <Member MemberName="SetVibrate">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetVibrate (long[] pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetVibrate(int64[] pattern) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setVibrate", "([J)Landroid/app/Notification$Builder;", "GetSetVibrate_arrayJHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Int64[]" />
      </Parameters>
      <Docs>
        <param name="pattern">An array of <c>long</c>s of times for which to turn the vibrator on or off.</param>
        <summary>Set the alert vibration pattern to use.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="P:Android.App.Notification.Vibrate" />
      </Docs>
    </Member>
    <Member MemberName="SetVisibility">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetVisibility (Android.App.NotificationVisibility visibility);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetVisibility(valuetype Android.App.NotificationVisibility visibility) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setVisibility", "(I)Landroid/app/Notification$Builder;", "GetSetVisibility_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visibility" Type="Android.App.NotificationVisibility">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="visibility">One of 
<c><see cref="F:Android.App.NotificationVisibility.Private" /></c>,
<c><see cref="F:Android.App.NotificationVisibility.Secret" /></c>, or
<c><see cref="F:Android.App.NotificationVisibility.Public" /></c>.</param>
        <summary>Specify the visibility of the notification contents.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetWhen">
      <MemberSignature Language="C#" Value="public virtual Android.App.Notification.Builder SetWhen (long when);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Notification/Builder SetWhen(int64 when) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setWhen", "(J)Landroid/app/Notification$Builder;", "GetSetWhen_JHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Notification+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="when" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="when">The timestamp to display.</param>
        <summary>Add a timestamp pertaining to the notification (usually the time the event occurred).</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="P:Android.App.Notification.When" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
