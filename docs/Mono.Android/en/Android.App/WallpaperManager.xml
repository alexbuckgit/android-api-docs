<Type Name="WallpaperManager" FullName="Android.App.WallpaperManager">
  <TypeSignature Language="C#" Value="public class WallpaperManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WallpaperManager extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/app/WallpaperManager", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="5">
    <summary>Provides access to the system wallpaper.</summary>
    <remarks />
    <since version="Added in API level 5" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WallpaperManager (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ActionChangeLiveWallpaper">
      <MemberSignature Language="C#" Value="public const string ActionChangeLiveWallpaper;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionChangeLiveWallpaper" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACTION_CHANGE_LIVE_WALLPAPER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Directly launch live wallpaper preview, allowing the user to immediately
 confirm to switch to a specific live wallpaper.</summary>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="ActionCropAndSetWallpaper">
      <MemberSignature Language="C#" Value="public const string ActionCropAndSetWallpaper;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionCropAndSetWallpaper" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACTION_CROP_AND_SET_WALLPAPER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Activity Action: Show settings for choosing wallpaper.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ActionLiveWallpaperChooser">
      <MemberSignature Language="C#" Value="public const string ActionLiveWallpaperChooser;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionLiveWallpaperChooser" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACTION_LIVE_WALLPAPER_CHOOSER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Launch an activity for the user to pick the current global live
 wallpaper.</summary>
        <remarks />
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="BuiltInDrawable">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable BuiltInDrawable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Drawables.Drawable BuiltInDrawable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getBuiltInDrawable", "()Landroid/graphics/drawable/Drawable;", "GetGetBuiltInDrawableHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a drawable for the system built-in static wallpaper .</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clear", "()V", "GetClearHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Remove any currently set wallpaper, reverting to the system's built-in
 wallpaper.</summary>
        <remarks />
        <since version="Added in API level 5" />
        <exception cref="T:Java.IO.IOException">If an error occurs reverting to the built-in
 wallpaper.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ClearWallpaperOffsets">
      <MemberSignature Language="C#" Value="public virtual void ClearWallpaperOffsets (Android.OS.IBinder windowToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearWallpaperOffsets(class Android.OS.IBinder windowToken) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearWallpaperOffsets", "(Landroid/os/IBinder;)V", "GetClearWallpaperOffsets_Landroid_os_IBinder_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowToken" Type="Android.OS.IBinder" />
      </Parameters>
      <Docs>
        <param name="windowToken">The window who these offsets should be associated
 with, as returned by <c><see cref="P:Android.Views.View.WindowToken" /></c>.
</param>
        <summary>Clear the offsets previously associated with this window through
 <c><see cref="M:Android.App.WallpaperManager.SetWallpaperOffsets(Android.OS.IBinder, System.Single, System.Single)" /></c>.</summary>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="CommandDrop">
      <MemberSignature Language="C#" Value="public const string CommandDrop;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string CommandDrop" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("COMMAND_DROP")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Command for <c><see cref="M:Android.App.WallpaperManager.SendWallpaperCommand(Android.OS.IBinder, System.String, System.String, System.String, System.String, System.String)" /></c>: reported by the wallpaper
 host when the user drops an object into an area of the host.</summary>
        <remarks />
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="CommandSecondaryTap">
      <MemberSignature Language="C#" Value="public const string CommandSecondaryTap;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string CommandSecondaryTap" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("COMMAND_SECONDARY_TAP")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Command for <c><see cref="M:Android.App.WallpaperManager.SendWallpaperCommand(Android.OS.IBinder, System.String, System.String, System.String, System.String, System.String)" /></c>: reported by the wallpaper
 host when the user releases a secondary pointer on an empty area
 (not performing an action in the host).</summary>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CommandTap">
      <MemberSignature Language="C#" Value="public const string CommandTap;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string CommandTap" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("COMMAND_TAP")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Command for <c><see cref="M:Android.App.WallpaperManager.SendWallpaperCommand(Android.OS.IBinder, System.String, System.String, System.String, System.String, System.String)" /></c>: reported by the wallpaper
 host when the user taps on an empty area (not performing an action
 in the host).</summary>
        <remarks />
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="DesiredMinimumHeight">
      <MemberSignature Language="C#" Value="public virtual int DesiredMinimumHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DesiredMinimumHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDesiredMinimumHeight", "()I", "GetGetDesiredMinimumHeightHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the desired minimum height for the wallpaper.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="DesiredMinimumWidth">
      <MemberSignature Language="C#" Value="public virtual int DesiredMinimumWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DesiredMinimumWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDesiredMinimumWidth", "()I", "GetGetDesiredMinimumWidthHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the desired minimum width for the wallpaper.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="Drawable">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable Drawable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Drawables.Drawable Drawable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDrawable", "()Landroid/graphics/drawable/Drawable;", "GetGetDrawableHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the current system wallpaper; if
 no wallpaper is set, the system built-in static wallpaper is returned.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="ExtraLiveWallpaperComponent">
      <MemberSignature Language="C#" Value="public const string ExtraLiveWallpaperComponent;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraLiveWallpaperComponent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_LIVE_WALLPAPER_COMPONENT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Extra in <c><see cref="F:Android.App.WallpaperManager.ActionChangeLiveWallpaper" /></c> that specifies the
 ComponentName of a live wallpaper that should be shown as a preview,
 for the user to confirm.</summary>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="FastDrawable">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable FastDrawable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Drawables.Drawable FastDrawable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFastDrawable", "()Landroid/graphics/drawable/Drawable;", "GetGetFastDrawableHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Like <c><see cref="P:Android.App.WallpaperManager.Drawable" /></c>, but the returned Drawable has a number
 of limitations to reduce its overhead as much as possible.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="ForgetLoadedWallpaper">
      <MemberSignature Language="C#" Value="public virtual void ForgetLoadedWallpaper ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForgetLoadedWallpaper() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("forgetLoadedWallpaper", "()V", "GetForgetLoadedWallpaperHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Remove all internal references to the last loaded wallpaper.</summary>
        <remarks />
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="GetBuiltInDrawable">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable GetBuiltInDrawable (int outWidth, int outHeight, bool scaleToFit, float horizontalAlignment, float verticalAlignment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable GetBuiltInDrawable(int32 outWidth, int32 outHeight, bool scaleToFit, float32 horizontalAlignment, float32 verticalAlignment) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getBuiltInDrawable", "(IIZFF)Landroid/graphics/drawable/Drawable;", "GetGetBuiltInDrawable_IIZFFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outWidth" Type="System.Int32" />
        <Parameter Name="outHeight" Type="System.Int32" />
        <Parameter Name="scaleToFit" Type="System.Boolean" />
        <Parameter Name="horizontalAlignment" Type="System.Single" />
        <Parameter Name="verticalAlignment" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="outWidth">The height of the returned drawable</param>
        <param name="outHeight">To be added.</param>
        <param name="scaleToFit">If true, scale the wallpaper down rather than just cropping it</param>
        <param name="horizontalAlignment">A float value between 0 and 1 specifying where to crop the image;
        0 for left-aligned, 0.5 for horizontal center-aligned, and 1 for right-aligned</param>
        <param name="verticalAlignment">A float value between 0 and 1 specifying where to crop the image;
        0 for top-aligned, 0.5 for vertical center-aligned, and 1 for bottom-aligned

</param>
        <summary>Returns a drawable for the system built-in static wallpaper.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetCropAndSetWallpaperIntent">
      <MemberSignature Language="C#" Value="public virtual Android.Content.Intent GetCropAndSetWallpaperIntent (Android.Net.Uri imageUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.Intent GetCropAndSetWallpaperIntent(class Android.Net.Uri imageUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getCropAndSetWallpaperIntent", "(Landroid/net/Uri;)Landroid/content/Intent;", "GetGetCropAndSetWallpaperIntent_Landroid_net_Uri_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Intent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageUri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="imageUri">The image URI that will be set in the intent. The must be a content
                 URI and its provider must resolve its type to "image/*"</param>
        <summary>Gets an Intent that will launch an activity that crops the given
 image and sets the device's wallpaper.</summary>
        <returns>To be added.</returns>
        <remarks />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the URI is not a content URI or its MIME type is
         not "image/*"
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Android.App.WallpaperManager GetInstance (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.WallpaperManager GetInstance(class Android.Content.Context context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInstance", "(Landroid/content/Context;)Landroid/app/WallpaperManager;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.WallpaperManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>Retrieve a WallpaperManager associated with the given Context.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="HasResourceWallpaper">
      <MemberSignature Language="C#" Value="public virtual bool HasResourceWallpaper (int resid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasResourceWallpaper(int32 resid) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("hasResourceWallpaper", "(I)Z", "GetHasResourceWallpaper_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resid">To be added.</param>
        <summary>Return whether any users are currently set to use the wallpaper
 with the given resource ID.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="PeekDrawable">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable PeekDrawable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable PeekDrawable() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("peekDrawable", "()Landroid/graphics/drawable/Drawable;", "GetPeekDrawableHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieve the current system wallpaper; if there is no wallpaper set,
 a null pointer is returned.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="PeekFastDrawable">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable PeekFastDrawable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable PeekFastDrawable() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("peekFastDrawable", "()Landroid/graphics/drawable/Drawable;", "GetPeekFastDrawableHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Like <c><see cref="P:Android.App.WallpaperManager.FastDrawable" /></c>, but if there is no wallpaper set,
 a null pointer is returned.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="SendWallpaperCommand">
      <MemberSignature Language="C#" Value="public virtual void SendWallpaperCommand (Android.OS.IBinder windowToken, string action, int x, int y, int z, Android.OS.Bundle extras);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendWallpaperCommand(class Android.OS.IBinder windowToken, string action, int32 x, int32 y, int32 z, class Android.OS.Bundle extras) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sendWallpaperCommand", "(Landroid/os/IBinder;Ljava/lang/String;IIILandroid/os/Bundle;)V", "GetSendWallpaperCommand_Landroid_os_IBinder_Ljava_lang_String_IIILandroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowToken" Type="Android.OS.IBinder" />
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="z" Type="System.Int32" />
        <Parameter Name="extras" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="windowToken">The window who these offsets should be associated
 with, as returned by <c><see cref="P:Android.Views.View.WindowToken" /></c>.</param>
        <param name="action">Name of the command to perform.  This must be a scoped
 name to avoid collisions, such as "com.mycompany.wallpaper.DOIT".</param>
        <param name="x">Arbitrary integer argument based on command.</param>
        <param name="y">Arbitrary integer argument based on command.</param>
        <param name="z">Arbitrary integer argument based on command.</param>
        <param name="extras">Optional additional information for the command, or null.
</param>
        <summary>Send an arbitrary command to the current active wallpaper.</summary>
        <remarks />
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="SetBitmap">
      <MemberSignature Language="C#" Value="public virtual void SetBitmap (Android.Graphics.Bitmap bitmap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBitmap(class Android.Graphics.Bitmap bitmap) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setBitmap", "(Landroid/graphics/Bitmap;)V", "GetSetBitmap_Landroid_graphics_Bitmap_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmap" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="bitmap">The bitmap to save.</param>
        <summary>Change the current system wallpaper to a bitmap.</summary>
        <remarks />
        <since version="Added in API level 5" />
        <exception cref="T:Java.IO.IOException">If an error occurs reverting to the built-in
 wallpaper.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetResource">
      <MemberSignature Language="C#" Value="public virtual void SetResource (int resid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetResource(int32 resid) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setResource", "(I)V", "GetSetResource_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resid">The bitmap to save.</param>
        <summary>Change the current system wallpaper to the bitmap in the given resource.</summary>
        <remarks />
        <since version="Added in API level 5" />
        <exception cref="T:Java.IO.IOException">If an error occurs reverting to the built-in
 wallpaper.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetStream">
      <MemberSignature Language="C#" Value="public virtual void SetStream (System.IO.Stream data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetStream(class System.IO.Stream data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setStream", "(Ljava/io/InputStream;)V", "GetSetStream_Ljava_io_InputStream_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="data">A stream containing the raw data to install as a wallpaper.</param>
        <summary>Change the current system wallpaper to a specific byte stream.</summary>
        <remarks />
        <since version="Added in API level 5" />
        <exception cref="T:Java.IO.IOException">If an error occurs reverting to the built-in
 wallpaper.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetWallpaperOffsets">
      <MemberSignature Language="C#" Value="public virtual void SetWallpaperOffsets (Android.OS.IBinder windowToken, float xOffset, float yOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetWallpaperOffsets(class Android.OS.IBinder windowToken, float32 xOffset, float32 yOffset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setWallpaperOffsets", "(Landroid/os/IBinder;FF)V", "GetSetWallpaperOffsets_Landroid_os_IBinder_FFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowToken" Type="Android.OS.IBinder" />
        <Parameter Name="xOffset" Type="System.Single" />
        <Parameter Name="yOffset" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="windowToken">The window who these offsets should be associated
 with, as returned by <c><see cref="P:Android.Views.View.WindowToken" /></c>.</param>
        <param name="xOffset">The offset along the X dimension, from 0 to 1.</param>
        <param name="yOffset">The offset along the Y dimension, from 0 to 1.
</param>
        <summary>Set the position of the current wallpaper within any larger space, when
 that wallpaper is visible behind the given window.</summary>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="SetWallpaperOffsetSteps">
      <MemberSignature Language="C#" Value="public virtual void SetWallpaperOffsetSteps (float xStep, float yStep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetWallpaperOffsetSteps(float32 xStep, float32 yStep) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setWallpaperOffsetSteps", "(FF)V", "GetSetWallpaperOffsetSteps_FFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xStep" Type="System.Single" />
        <Parameter Name="yStep" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="xStep">The X offset delta from one screen to the next one</param>
        <param name="yStep">The Y offset delta from one screen to the next one
</param>
        <summary>For applications that use multiple virtual screens showing a wallpaper,
 specify the step size between virtual screens.</summary>
        <remarks />
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="SuggestDesiredDimensions">
      <MemberSignature Language="C#" Value="public virtual void SuggestDesiredDimensions (int minimumWidth, int minimumHeight);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SuggestDesiredDimensions(int32 minimumWidth, int32 minimumHeight) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("suggestDesiredDimensions", "(II)V", "GetSuggestDesiredDimensions_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minimumWidth" Type="System.Int32" />
        <Parameter Name="minimumHeight" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minimumWidth">Desired minimum width</param>
        <param name="minimumHeight">Desired minimum height
</param>
        <summary>For use only by the current home application, to specify the size of
 wallpaper it would like to use.</summary>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="WallpaperInfo">
      <MemberSignature Language="C#" Value="public virtual Android.App.WallpaperInfo WallpaperInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.App.WallpaperInfo WallpaperInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getWallpaperInfo", "()Landroid/app/WallpaperInfo;", "GetGetWallpaperInfoHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.WallpaperInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If the current wallpaper is a live wallpaper component, return the
 information about that wallpaper.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="WallpaperPreviewMetaData">
      <MemberSignature Language="C#" Value="public const string WallpaperPreviewMetaData;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string WallpaperPreviewMetaData" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("WALLPAPER_PREVIEW_META_DATA")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Manifest entry for activities that respond to <c><see cref="F:Android.Content.Intent.ActionSetWallpaper" /></c>
 which allows them to provide a custom large icon associated with this action.</summary>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
  </Members>
</Type>
