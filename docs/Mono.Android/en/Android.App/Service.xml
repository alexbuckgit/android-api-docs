<Type Name="Service" FullName="Android.App.Service">
  <TypeSignature Language="C#" Value="public abstract class Service : Android.Content.ContextWrapper, Android.Content.IComponentCallbacks2, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Service extends Android.Content.ContextWrapper implements class Android.Content.IComponentCallbacks, class Android.Content.IComponentCallbacks2, class Android.Runtime.IJavaObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Content.ContextWrapper</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Content.IComponentCallbacks2</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/app/Service", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A Service is an application component representing either an application's desire
 to perform a longer-running operation while not interacting with the user
 or to supply functionality for other applications to use.</summary>
    <remarks />
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Service ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Service (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Android.App.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.App.Application Application" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getApplication", "()Landroid/app/Application;", "GetGetApplicationHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the application that owns this service.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Dump">
      <MemberSignature Language="C#" Value="protected virtual void Dump (Java.IO.FileDescriptor fd, Java.IO.PrintWriter writer, string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dump(class Java.IO.FileDescriptor fd, class Java.IO.PrintWriter writer, string[] args) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dump", "(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V", "GetDump_Ljava_io_FileDescriptor_Ljava_io_PrintWriter_arrayLjava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
        <Parameter Name="writer" Type="Java.IO.PrintWriter" />
        <Parameter Name="args" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="fd">The raw file descriptor that the dump is being sent to.</param>
        <param name="writer">The PrintWriter to which you should dump your state.  This will be
 closed for you after you return.</param>
        <param name="args">additional arguments to the dump request.
</param>
        <summary>Print the Service's state into the given stream.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnBind">
      <MemberSignature Language="C#" Value="public abstract Android.OS.IBinder OnBind (Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.IBinder OnBind(class Android.Content.Intent intent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onBind", "(Landroid/content/Intent;)Landroid/os/IBinder;", "GetOnBind_Landroid_content_Intent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IBinder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="intent">The Intent that was used to bind to this service,
 as given to <c><see cref="M:Android.Content.Context.BindService(Android.Content.Intent, Android.Content.IServiceConnection, Android.Content.IServiceConnection)" /></c>.  Note that any extras that were included with
 the Intent at that point will <i>not</i> be seen here.</param>
        <summary>Return the communication channel to the service.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnConfigurationChanged">
      <MemberSignature Language="C#" Value="public virtual void OnConfigurationChanged (Android.Content.Res.Configuration newConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnConfigurationChanged(class Android.Content.Res.Configuration newConfig) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onConfigurationChanged", "(Landroid/content/res/Configuration;)V", "GetOnConfigurationChanged_Landroid_content_res_Configuration_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newConfig" Type="Android.Content.Res.Configuration" />
      </Parameters>
      <Docs>
        <param name="newConfig">The new device configuration.
</param>
        <summary>Called by the system when the device configuration changes while your
 component is running.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnCreate">
      <MemberSignature Language="C#" Value="public virtual void OnCreate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCreate() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onCreate", "()V", "GetOnCreateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called by the system when the service is first created.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnDestroy">
      <MemberSignature Language="C#" Value="public virtual void OnDestroy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDestroy() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onDestroy", "()V", "GetOnDestroyHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called by the system to notify a Service that it is no longer used and is being removed.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnLowMemory">
      <MemberSignature Language="C#" Value="public virtual void OnLowMemory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnLowMemory() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onLowMemory", "()V", "GetOnLowMemoryHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This is called when the overall system is running low on memory, and
 actively running processes should trim their memory usage.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnRebind">
      <MemberSignature Language="C#" Value="public virtual void OnRebind (Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnRebind(class Android.Content.Intent intent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onRebind", "(Landroid/content/Intent;)V", "GetOnRebind_Landroid_content_Intent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="intent">The Intent that was used to bind to this service,
 as given to <c><see cref="M:Android.Content.Context.BindService(Android.Content.Intent, Android.Content.IServiceConnection, Android.Content.IServiceConnection)" /></c>.  Note that any extras that were included with
 the Intent at that point will <i>not</i> be seen here.
</param>
        <summary>Called when new clients have connected to the service, after it had
 previously been notified that all had disconnected in its
 <c><see cref="M:Android.App.Service.OnUnbind(Android.Content.Intent)" /></c>.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnStart">
      <MemberSignature Language="C#" Value="public virtual void OnStart (Android.Content.Intent intent, int startId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnStart(class Android.Content.Intent intent, int32 startId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onStart", "(Landroid/content/Intent;I)V", "GetOnStart_Landroid_content_Intent_IHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="startId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="intent">To be added.</param>
        <param name="startId">To be added.</param>
        <summary>
        </summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnStartCommand">
      <MemberSignature Language="C#" Value="public virtual Android.App.StartCommandResult OnStartCommand (Android.Content.Intent intent, Android.App.StartCommandFlags flags, int startId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.App.StartCommandResult OnStartCommand(class Android.Content.Intent intent, valuetype Android.App.StartCommandFlags flags, int32 startId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onStartCommand", "(Landroid/content/Intent;II)I", "GetOnStartCommand_Landroid_content_Intent_IIHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.StartCommandResult</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="flags" Type="Android.App.StartCommandFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="startId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="intent">The Intent supplied to <c><see cref="M:Android.Content.Context.StartService(Android.Content.Intent)" /></c>, 
 as given.  This may be null if the service is being restarted after
 its process has gone away, and it had previously returned anything
 except <c><see cref="!:Android.App.Service.START_STICKY_COMPATIBILITY" /></c>.</param>
        <param name="flags">Additional data about this start request.  Currently either
 0, <c><see cref="!:Android.App.Service.START_FLAG_REDELIVERY" /></c>, or <c><see cref="!:Android.App.Service.START_FLAG_RETRY" /></c>.</param>
        <param name="startId">A unique integer representing this specific request to 
 start.  Use with <c><see cref="M:Android.App.Service.StopSelfResult(System.Int32)" /></c>.</param>
        <summary>Called by the system every time a client explicitly starts the service by calling 
 <c><see cref="M:Android.Content.Context.StartService(Android.Content.Intent)" /></c>, providing the arguments it supplied and a 
 unique integer token representing the start request.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 5" />
        <altmember cref="M:Android.App.Service.StopSelfResult(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnTaskRemoved">
      <MemberSignature Language="C#" Value="public virtual void OnTaskRemoved (Android.Content.Intent rootIntent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnTaskRemoved(class Android.Content.Intent rootIntent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onTaskRemoved", "(Landroid/content/Intent;)V", "GetOnTaskRemoved_Landroid_content_Intent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootIntent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="rootIntent">The original root Intent that was used to launch
 the task that is being removed.
</param>
        <summary>This is called if the service is currently running and the user has
 removed a task that comes from the service's application.</summary>
        <remarks />
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="OnTrimMemory">
      <MemberSignature Language="C#" Value="public virtual void OnTrimMemory (Android.Content.TrimMemory level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnTrimMemory(valuetype Android.Content.TrimMemory level) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onTrimMemory", "(I)V", "GetOnTrimMemory_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="Android.Content.TrimMemory" />
      </Parameters>
      <Docs>
        <param name="level">The context of the trim, giving a hint of the amount of
 trimming the application may like to perform.  May be
 <c><see cref="F:Android.Content.ComponentCallbacks2.TrimMemoryComplete" /></c>, <c><see cref="F:Android.Content.ComponentCallbacks2.TrimMemoryModerate" /></c>,
 <c><see cref="F:Android.Content.ComponentCallbacks2.TrimMemoryBackground" /></c>, <c><see cref="F:Android.Content.ComponentCallbacks2.TrimMemoryUiHidden" /></c>,
 <c><see cref="F:Android.Content.ComponentCallbacks2.TrimMemoryRunningCritical" /></c>, <c><see cref="F:Android.Content.ComponentCallbacks2.TrimMemoryRunningLow" /></c>,
 or <c><see cref="F:Android.Content.ComponentCallbacks2.TrimMemoryRunningModerate" /></c>.
</param>
        <summary>Called when the operating system has determined that it is a good
 time for a process to trim unneeded memory from its process.</summary>
        <remarks />
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="OnUnbind">
      <MemberSignature Language="C#" Value="public virtual bool OnUnbind (Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnUnbind(class Android.Content.Intent intent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onUnbind", "(Landroid/content/Intent;)Z", "GetOnUnbind_Landroid_content_Intent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="intent">The Intent that was used to bind to this service,
 as given to <c><see cref="M:Android.Content.Context.BindService(Android.Content.Intent, Android.Content.IServiceConnection, Android.Content.IServiceConnection)" /></c>.  Note that any extras that were included with
 the Intent at that point will <i>not</i> be seen here.</param>
        <summary>Called when all clients have disconnected from a particular interface
 published by the service.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetForeground">
      <MemberSignature Language="C#" Value="public void SetForeground (bool isForeground);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetForeground(bool isForeground) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setForeground", "(Z)V", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isForeground" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isForeground">To be added.</param>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="StartForeground">
      <MemberSignature Language="C#" Value="public void StartForeground (int id, Android.App.Notification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartForeground(int32 id, class Android.App.Notification notification) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startForeground", "(ILandroid/app/Notification;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="notification" Type="Android.App.Notification" />
      </Parameters>
      <Docs>
        <param name="id">The identifier for this notification as per
 <c><see cref="M:Android.App.NotificationManager.Notify(System.Int32, Android.App.Notification)" /></c>; must not be 0.</param>
        <param name="notification">The Notification to be displayed.</param>
        <summary>Make this service run in the foreground, supplying the ongoing
 notification to be shown to the user while in this state.</summary>
        <remarks />
        <since version="Added in API level 5" />
        <altmember cref="M:Android.App.Service.StopForeground(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="StopForeground">
      <MemberSignature Language="C#" Value="public void StopForeground (bool removeNotification);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopForeground(bool removeNotification) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("stopForeground", "(Z)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="removeNotification" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="removeNotification">If true, the notification previously provided
 to <c><see cref="M:Android.App.Service.StartForeground(System.Int32, Android.App.Notification)" /></c> will be removed.  Otherwise it will remain
 until a later call removes it (or the service is destroyed).</param>
        <summary>Remove this service from foreground state, allowing it to be killed if
 more memory is needed.</summary>
        <remarks />
        <since version="Added in API level 5" />
        <altmember cref="M:Android.App.Service.StartForeground(System.Int32, Android.App.Notification)" />
      </Docs>
    </Member>
    <Member MemberName="StopSelf">
      <MemberSignature Language="C#" Value="public void StopSelf ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopSelf() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("stopSelf", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">Stop the service, if it was previously started.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Service.StopSelfResult(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StopSelf">
      <MemberSignature Language="C#" Value="public void StopSelf (int startId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopSelf(int32 startId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("stopSelf", "(I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startId">To be added.</param>
        <summary>Old version of <c><see cref="M:Android.App.Service.StopSelfResult(System.Int32)" /></c> that doesn't return a result.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Service.StopSelfResult(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StopSelfResult">
      <MemberSignature Language="C#" Value="public bool StopSelfResult (int startId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool StopSelfResult(int32 startId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("stopSelfResult", "(I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startId">The most recent start identifier received in <c><see cref="M:Android.App.Service.OnStart(Android.Content.Intent, System.Int32)" /></c>.</param>
        <summary>Stop the service if the most recent time it was started was 
 <format type="text/html"><var>startId</var></format>.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.App.Service.StopSelf" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
