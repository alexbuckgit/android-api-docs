<Type Name="ListActivity" FullName="Android.App.ListActivity">
  <TypeSignature Language="C#" Value="public class ListActivity : Android.App.Activity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListActivity extends Android.App.Activity" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.App.Activity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/app/ListActivity", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>An activity that displays a list of items by binding to a data source such as
 an array or Cursor, and exposes event handlers when the user selects an item.</summary>
    <remarks><para tool="javadoc-to-mdoc">An activity that displays a list of items by binding to a data source such as
 an array or Cursor, and exposes event handlers when the user selects an item.
 </para><para tool="javadoc-to-mdoc">
 ListActivity hosts a <c><see cref="T:Android.Widget.ListView" /></c> object that can
 be bound to different data sources, typically either an array or a Cursor
 holding query results. Binding, screen layout, and row layout are discussed
 in the following sections.
 </para><para tool="javadoc-to-mdoc"><i>Screen Layout</i></para><para tool="javadoc-to-mdoc">
 ListActivity has a default layout that consists of a single, full-screen list
 in the center of the screen. However, if you desire, you can customize the
 screen layout by setting your own view layout with setContentView() in
 onCreate(). To do this, your own view MUST contain a ListView object with the
 id "@android:id/list" (or <c><see cref="!:NoType:android/R$id;Href=../../../reference/android/R.id.html#list" /></c> if it's in code)
 </para><para tool="javadoc-to-mdoc">
 Optionally, your custom view can contain another view object of any type to
 display when the list view is empty. This "empty list" notifier must have an
 id "android:id/empty". Note that when an empty view is present, the list view
 will be hidden when there is no data to display.
 </para><para tool="javadoc-to-mdoc">
 The following code demonstrates an (ugly) custom screen layout. It has a list
 with a green background, and an alternate red "no data" message.
 <example><code lang="XML">
 &lt;?xml version="1.0" encoding="utf-8"?&gt;
 &lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
         android:orientation="vertical"
         android:layout_width="match_parent"
         android:layout_height="match_parent"
         android:paddingLeft="8dp"
         android:paddingRight="8dp"&gt;

     &lt;ListView android:id="@android:id/list"
               android:layout_width="match_parent"
               android:layout_height="match_parent"
               android:background="#00FF00"
               android:layout_weight="1"
               android:drawSelectorOnTop="false"/&gt;

     &lt;TextView android:id="@android:id/empty"
               android:layout_width="match_parent"
               android:layout_height="match_parent"
               android:background="#FF0000"
               android:text="No data"/&gt;
 &lt;/LinearLayout&gt;
 </code></example></para><para tool="javadoc-to-mdoc"><i>Row Layout</i></para><para tool="javadoc-to-mdoc">
 You can specify the layout of individual rows in the list. You do this by
 specifying a layout resource in the ListAdapter object hosted by the activity
 (the ListAdapter binds the ListView to the data; more on this later).
 <example><code lang="XML">
 &lt;?xml version="1.0" encoding="utf-8"?&gt;
 &lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
     android:layout_width="match_parent"
     android:layout_height="wrap_content"
     android:orientation="vertical"&gt;

     &lt;TextView android:id="@+id/text1"
         android:textSize="16sp"
         android:textStyle="bold"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"/&gt;

     &lt;TextView android:id="@+id/text2"
         android:textSize="16sp"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"/&gt;
 &lt;/LinearLayout&gt;
 </code></example><example><code lang="java">
 public class MyListAdapter extends ListActivity {

     &amp;#064;Override
     protected void onCreate(Bundle savedInstanceState){
         super.onCreate(savedInstanceState);

         // We'll define a custom screen layout here (the one shown above), but
         // typically, you could just use the standard ListActivity layout.
         setContentView(R.layout.custom_list_activity_view);

         // Query for all people contacts using the Contacts.People convenience class.
         // Put a managed wrapper around the retrieved cursor so we don't have to worry about
         // requerying or closing it as the activity changes state.
         mCursor = this.getContentResolver().query(People.CONTENT_URI, null, null, null, null);
         startManagingCursor(mCursor);

         // Now create a new list adapter bound to the cursor.
         // SimpleListAdapter is designed for binding to a Cursor.
         ListAdapter adapter = new SimpleCursorAdapter(
                 this, // Context.
                 android.R.layout.two_line_list_item,  // Specify the row template to use (here, two columns bound to the two retrieved cursor
 rows).
                 mCursor,                                              // Pass in the cursor to bind to.
                 new String[] {People.NAME, People.COMPANY},           // Array of cursor columns to bind to.
                 new int[] {android.R.id.text1, android.R.id.text2});  // Parallel array of which template objects to bind to those columns.

         // Bind to our new adapter.
         setListAdapter(adapter);
     }
 }
 </code></example></para><para tool="javadoc-to-mdoc">
 A ListAdapter constructor takes a parameter that specifies a layout resource
 for each row. It also has two additional parameters that let you specify
 which data field to associate with which object in the row layout resource.
 These two parameters are typically parallel arrays.
 </para><para tool="javadoc-to-mdoc">
 Android provides some standard row layout resources. These are in the
 <c><see cref="!:NoType:android/R$layout;Href=../../../reference/android/R.layout.html" /></c> class, and have names such as simple_list_item_1,
 simple_list_item_2, and two_line_list_item. The following layout XML is the
 source for the resource two_line_list_item, which displays two data
 fields,one above the other, for each list row.
 </para><para tool="javadoc-to-mdoc">
 You must identify the data bound to each TextView object in this layout. The
 syntax for this is discussed in the next section.
 </para><para tool="javadoc-to-mdoc"><i>Binding to Data</i></para><para tool="javadoc-to-mdoc">
 You bind the ListActivity's ListView object to data using a class that
 implements the <c><see cref="T:Android.Widget.IListAdapter" /></c> interface.
 Android provides two standard list adapters:
 <c><see cref="T:Android.Widget.SimpleAdapter" /></c> for static data (Maps),
 and <c><see cref="T:Android.Widget.SimpleCursorAdapter" /></c> for Cursor
 query results.
 </para><para tool="javadoc-to-mdoc">
 The following code from a custom ListActivity demonstrates querying the
 Contacts provider for all contacts, then binding the Name and Company fields
 to a two line row layout in the activity's ListView.
 <format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="P:Android.App.ListActivity.ListAdapter" /></c></term></item><item><term><c><see cref="T:Android.Widget.ListView" /></c></term></item></list></para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/app/ListActivity.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary></summary>
        <remarks><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/app/ListActivity.html#ListActivity()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ListActivity (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListAdapter">
      <MemberSignature Language="C#" Value="public virtual Android.Widget.IListAdapter ListAdapter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Widget.IListAdapter ListAdapter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getListAdapter", "()Landroid/widget/ListAdapter;", "GetGetListAdapterHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setListAdapter", "(Landroid/widget/ListAdapter;)V", "GetSetListAdapter_Landroid_widget_ListAdapter_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Widget.IListAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the ListAdapter associated with this activity's ListView.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/android/app/ListActivity.html#getListAdapter()" target="_blank">[Android Documentation]</a><br /></format>Get the ListAdapter associated with this activity's ListView.
</para><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/android/app/ListActivity.html#setListAdapter(android.widget.ListAdapter)" target="_blank">[Android Documentation]</a><br /></format>Provide the cursor for the list view.
</para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ListView">
      <MemberSignature Language="C#" Value="public virtual Android.Widget.ListView ListView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Widget.ListView ListView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getListView", "()Landroid/widget/ListView;", "GetGetListViewHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Widget.ListView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the activity's list view widget.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Get the activity's list view widget.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/app/ListActivity.html#getListView()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnListItemClick">
      <MemberSignature Language="C#" Value="protected virtual void OnListItemClick (Android.Widget.ListView l, Android.Views.View v, int position, long id);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnListItemClick(class Android.Widget.ListView l, class Android.Views.View v, int32 position, int64 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onListItemClick", "(Landroid/widget/ListView;Landroid/view/View;IJ)V", "GetOnListItemClick_Landroid_widget_ListView_Landroid_view_View_IJHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Android.Widget.ListView" />
        <Parameter Name="v" Type="Android.Views.View" />
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="id" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="l">The ListView where the click happened</param>
        <param name="v">The view that was clicked within the ListView</param>
        <param name="position">The position of the view in the list</param>
        <param name="id">The row id of the item that was clicked
</param>
        <summary>This method will be called when an item in the list is selected.</summary>
        <remarks><para tool="javadoc-to-mdoc">This method will be called when an item in the list is selected.
 Subclasses should override. Subclasses can call
 getListView().getItemAtPosition(position) if they need to access the
 data associated with the selected item.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/app/ListActivity.html#onListItemClick(android.widget.ListView, android.view.View, int, long)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItemId">
      <MemberSignature Language="C#" Value="public virtual long SelectedItemId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 SelectedItemId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSelectedItemId", "()J", "GetGetSelectedItemIdHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the cursor row ID of the currently selected list item.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Get the cursor row ID of the currently selected list item.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/app/ListActivity.html#getSelectedItemId()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItemPosition">
      <MemberSignature Language="C#" Value="public virtual int SelectedItemPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedItemPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSelectedItemPosition", "()I", "GetGetSelectedItemPositionHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the position of the currently selected list item.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Get the position of the currently selected list item.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/app/ListActivity.html#getSelectedItemPosition()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetSelection">
      <MemberSignature Language="C#" Value="public virtual void SetSelection (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSelection(int32 position) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSelection", "(I)V", "GetSetSelection_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">To be added.</param>
        <summary>Set the currently selected list item to the specified
 position with the adapter's data</summary>
        <remarks><para tool="javadoc-to-mdoc">Set the currently selected list item to the specified
 position with the adapter's data</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/app/ListActivity.html#setSelection(int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
