<Type Name="Drawable" FullName="Android.Graphics.Drawables.Drawable">
  <TypeSignature Language="C#" Value="public abstract class Drawable : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Drawable extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/graphics/drawable/Drawable", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A Drawable is a general abstraction for "something that can be drawn.</summary>
    <remarks />
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Drawable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Drawable (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Alpha">
      <MemberSignature Language="C#" Value="public virtual int Alpha { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Alpha" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAlpha", "()I", "GetGetAlphaHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">Gets the current alpha value for the drawable. 0 means fully transparent,
 255 means fully opaque.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ApplyTheme">
      <MemberSignature Language="C#" Value="public virtual void ApplyTheme (Android.Content.Res.Resources.Theme t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyTheme(class Android.Content.Res.Resources/Theme t) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("applyTheme", "(Landroid/content/res/Resources$Theme;)V", "GetApplyTheme_Landroid_content_res_Resources_Theme_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="Android.Content.Res.Resources+Theme" />
      </Parameters>
      <Docs>
        <param name="t">To be added.</param>
        <summary>Applies the specified theme to this Drawable and its children.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AutoMirrored">
      <MemberSignature Language="C#" Value="public virtual bool AutoMirrored { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoMirrored" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isAutoMirrored", "()Z", "GetIsAutoMirroredHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setAutoMirrored", "(Z)V", "GetSetAutoMirrored_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tells if this Drawable will be automatically mirrored  when its layout direction is RTL
 right-to-left.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public Android.Graphics.Rect Bounds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Rect Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getBounds", "()Landroid/graphics/Rect;", "GetGetBoundsHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setBounds", "(Landroid/graphics/Rect;)V", "GetSetBounds_Landroid_graphics_Rect_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the drawable's bounds Rect.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.CopyBounds" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.CopyBounds(Android.Graphics.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Callback">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable.ICallback Callback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Drawables.Drawable/ICallback Callback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCallback", "()Landroid/graphics/drawable/Drawable$Callback;", "GetGetCallbackHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable+ICallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the current <c><see cref="T:Android.Graphics.Drawables.Drawable.ICallback" tool="ReplaceLinkValue" /></c> implementation attached to this
 Drawable.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetCallback(.ICallback)" />
      </Docs>
    </Member>
    <Member MemberName="CanApplyTheme">
      <MemberSignature Language="C#" Value="public virtual bool CanApplyTheme ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanApplyTheme() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("canApplyTheme", "()Z", "GetCanApplyThemeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ChangingConfigurations">
      <MemberSignature Language="C#" Value="public virtual Android.Content.PM.ConfigChanges ChangingConfigurations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Content.PM.ConfigChanges ChangingConfigurations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getChangingConfigurations", "()I", "GetGetChangingConfigurationsHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setChangingConfigurations", "(I)V", "GetSetChangingConfigurations_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ConfigChanges</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return a mask of the configuration parameters for which this drawable
 may change, requiring that it be re-created.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Content.PM.ActivityInfo" />
        <altmember cref="T:Android.Content.PM.ActivityInfo" />
      </Docs>
    </Member>
    <Member MemberName="ClearColorFilter">
      <MemberSignature Language="C#" Value="public virtual void ClearColorFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearColorFilter() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearColorFilter", "()V", "GetClearColorFilterHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes the color filter for this drawable.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ColorFilter">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.ColorFilter ColorFilter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.ColorFilter ColorFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getColorFilter", "()Landroid/graphics/ColorFilter;", "GetGetColorFilterHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ColorFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current color filter, or <c>null</c> if none set.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CopyBounds">
      <MemberSignature Language="C#" Value="public Android.Graphics.Rect CopyBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Graphics.Rect CopyBounds() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyBounds", "()Landroid/graphics/Rect;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Rect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">Return a copy of the drawable's bounds in a new Rect.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CopyBounds">
      <MemberSignature Language="C#" Value="public void CopyBounds (Android.Graphics.Rect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyBounds(class Android.Graphics.Rect bounds) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyBounds", "(Landroid/graphics/Rect;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="bounds">Rect to receive the drawable's bounds (allocated by the
               caller).
</param>
        <summary>Return a copy of the drawable's bounds in the specified Rect (allocated
 by the caller).</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromPath">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Drawables.Drawable CreateFromPath (string pathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Drawables.Drawable CreateFromPath(string pathName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createFromPath", "(Ljava/lang/String;)Landroid/graphics/drawable/Drawable;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pathName">To be added.</param>
        <summary>Create a drawable from file path name.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromPathAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt; CreateFromPathAsync (string pathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Android.Graphics.Drawables.Drawable&gt; CreateFromPathAsync(string pathName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pathName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CreateFromResourceStream">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Drawables.Drawable CreateFromResourceStream (Android.Content.Res.Resources res, Android.Util.TypedValue value, System.IO.Stream is, string srcName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Drawables.Drawable CreateFromResourceStream(class Android.Content.Res.Resources res, class Android.Util.TypedValue value, class System.IO.Stream is, string srcName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createFromResourceStream", "(Landroid/content/res/Resources;Landroid/util/TypedValue;Ljava/io/InputStream;Ljava/lang/String;)Landroid/graphics/drawable/Drawable;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="res" Type="Android.Content.Res.Resources" />
        <Parameter Name="value" Type="Android.Util.TypedValue" />
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="srcName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="res">To be added.</param>
        <param name="value">To be added.</param>
        <param name="is">To be added.</param>
        <param name="srcName">To be added.</param>
        <summary>Create a drawable from an inputstream, using the given resources and
 value to determine density information.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromResourceStream">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Drawables.Drawable CreateFromResourceStream (Android.Content.Res.Resources res, Android.Util.TypedValue value, System.IO.Stream is, string srcName, Android.Graphics.BitmapFactory.Options opts);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Drawables.Drawable CreateFromResourceStream(class Android.Content.Res.Resources res, class Android.Util.TypedValue value, class System.IO.Stream is, string srcName, class Android.Graphics.BitmapFactory/Options opts) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createFromResourceStream", "(Landroid/content/res/Resources;Landroid/util/TypedValue;Ljava/io/InputStream;Ljava/lang/String;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/drawable/Drawable;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="res" Type="Android.Content.Res.Resources" />
        <Parameter Name="value" Type="Android.Util.TypedValue" />
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="srcName" Type="System.String" />
        <Parameter Name="opts" Type="Android.Graphics.BitmapFactory+Options" />
      </Parameters>
      <Docs>
        <param name="res">To be added.</param>
        <param name="value">To be added.</param>
        <param name="is">To be added.</param>
        <param name="srcName">To be added.</param>
        <param name="opts">To be added.</param>
        <summary>Create a drawable from an inputstream, using the given resources and
 value to determine density information.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromResourceStreamAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt; CreateFromResourceStreamAsync (Android.Content.Res.Resources res, Android.Util.TypedValue value, System.IO.Stream is, string srcName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Android.Graphics.Drawables.Drawable&gt; CreateFromResourceStreamAsync(class Android.Content.Res.Resources res, class Android.Util.TypedValue value, class System.IO.Stream is, string srcName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="res" Type="Android.Content.Res.Resources" />
        <Parameter Name="value" Type="Android.Util.TypedValue" />
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="srcName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="res">To be added.</param>
        <param name="value">To be added.</param>
        <param name="is">To be added.</param>
        <param name="srcName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CreateFromResourceStreamAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt; CreateFromResourceStreamAsync (Android.Content.Res.Resources res, Android.Util.TypedValue value, System.IO.Stream is, string srcName, Android.Graphics.BitmapFactory.Options opts);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Android.Graphics.Drawables.Drawable&gt; CreateFromResourceStreamAsync(class Android.Content.Res.Resources res, class Android.Util.TypedValue value, class System.IO.Stream is, string srcName, class Android.Graphics.BitmapFactory/Options opts) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="res" Type="Android.Content.Res.Resources" />
        <Parameter Name="value" Type="Android.Util.TypedValue" />
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="srcName" Type="System.String" />
        <Parameter Name="opts" Type="Android.Graphics.BitmapFactory+Options" />
      </Parameters>
      <Docs>
        <param name="res">To be added.</param>
        <param name="value">To be added.</param>
        <param name="is">To be added.</param>
        <param name="srcName">To be added.</param>
        <param name="opts">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CreateFromStream">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Drawables.Drawable CreateFromStream (System.IO.Stream is, string srcName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Drawables.Drawable CreateFromStream(class System.IO.Stream is, string srcName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createFromStream", "(Ljava/io/InputStream;Ljava/lang/String;)Landroid/graphics/drawable/Drawable;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="srcName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="is">To be added.</param>
        <param name="srcName">To be added.</param>
        <summary>Create a drawable from an inputstream
</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromStreamAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt; CreateFromStreamAsync (System.IO.Stream is, string srcName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Android.Graphics.Drawables.Drawable&gt; CreateFromStreamAsync(class System.IO.Stream is, string srcName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="srcName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="is">To be added.</param>
        <param name="srcName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CreateFromXml">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Drawables.Drawable CreateFromXml (Android.Content.Res.Resources r, System.Xml.XmlReader parser);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Drawables.Drawable CreateFromXml(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createFromXml", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;)Landroid/graphics/drawable/Drawable;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="parser">To be added.</param>
        <summary>Create a drawable from an XML document.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromXml">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Drawables.Drawable CreateFromXml (Android.Content.Res.Resources r, System.Xml.XmlReader parser, Android.Content.Res.Resources.Theme theme);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Drawables.Drawable CreateFromXml(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser, class Android.Content.Res.Resources/Theme theme) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createFromXml", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/content/res/Resources$Theme;)Landroid/graphics/drawable/Drawable;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="theme" Type="Android.Content.Res.Resources+Theme" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="parser">To be added.</param>
        <param name="theme">To be added.</param>
        <summary>Create a drawable from an XML document using an optional <c><see cref="!:NoType:android/content/res/Resources$Theme;Href=../../../../reference/android/content/res/Resources.Theme.html" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromXmlAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt; CreateFromXmlAsync (Android.Content.Res.Resources r, System.Xml.XmlReader parser);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Android.Graphics.Drawables.Drawable&gt; CreateFromXmlAsync(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="parser">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CreateFromXmlAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt; CreateFromXmlAsync (Android.Content.Res.Resources r, System.Xml.XmlReader parser, Android.Content.Res.Resources.Theme theme);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Android.Graphics.Drawables.Drawable&gt; CreateFromXmlAsync(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser, class Android.Content.Res.Resources/Theme theme) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Android.Graphics.Drawables.Drawable&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="theme" Type="Android.Content.Res.Resources+Theme" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="parser">To be added.</param>
        <param name="theme">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CreateFromXmlInner">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Drawables.Drawable CreateFromXmlInner (Android.Content.Res.Resources r, System.Xml.XmlReader parser, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Drawables.Drawable CreateFromXmlInner(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createFromXmlInner", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)Landroid/graphics/drawable/Drawable;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="parser">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>Create from inside an XML document.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromXmlInner">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Drawables.Drawable CreateFromXmlInner (Android.Content.Res.Resources r, System.Xml.XmlReader parser, Android.Util.IAttributeSet attrs, Android.Content.Res.Resources.Theme theme);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Drawables.Drawable CreateFromXmlInner(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser, class Android.Util.IAttributeSet attrs, class Android.Content.Res.Resources/Theme theme) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createFromXmlInner", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;)Landroid/graphics/drawable/Drawable;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="theme" Type="Android.Content.Res.Resources+Theme" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="parser">To be added.</param>
        <param name="attrs">To be added.</param>
        <param name="theme">To be added.</param>
        <summary>Create a drawable from inside an XML document using an optional
 <c><see cref="!:NoType:android/content/res/Resources$Theme;Href=../../../../reference/android/content/res/Resources.Theme.html" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Drawables.Drawable Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCurrent", "()Landroid/graphics/drawable/Drawable;", "GetGetCurrentHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirtyBounds">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Rect DirtyBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Rect DirtyBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDirtyBounds", "()Landroid/graphics/Rect;", "GetGetDirtyBoundsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the drawable's dirty bounds Rect.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public abstract void Draw (Android.Graphics.Canvas canvas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Draw(class Android.Graphics.Canvas canvas) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("draw", "(Landroid/graphics/Canvas;)V", "GetDraw_Landroid_graphics_Canvas_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
      </Parameters>
      <Docs>
        <param name="canvas">The canvas to draw into
</param>
        <summary>Draw in its bounds (set via setBounds) respecting optional effects such
 as alpha (set via setAlpha) and color filter (set via setColorFilter).</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetConstantState">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable.ConstantState GetConstantState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable/ConstantState GetConstantState() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getConstantState", "()Landroid/graphics/drawable/Drawable$ConstantState;", "GetGetConstantStateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable+ConstantState</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return a <c><see cref="!:NoType:android/graphics/drawable/Drawable$ConstantState;Href=../../../../reference/android/graphics/drawable/Drawable.ConstantState.html" /></c> instance that holds the shared state of this Drawable.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.Mutate" />
      </Docs>
    </Member>
    <Member MemberName="GetOutline">
      <MemberSignature Language="C#" Value="public virtual void GetOutline (Android.Graphics.Outline outline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetOutline(class Android.Graphics.Outline outline) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getOutline", "(Landroid/graphics/Outline;)V", "GetGetOutline_Landroid_graphics_Outline_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outline" Type="Android.Graphics.Outline" />
      </Parameters>
      <Docs>
        <param name="outline">To be added.</param>
        <summary>Called to get the drawable to populate the Outline that defines its drawing area.</summary>
        <remarks />
        <altmember cref="P:Android.Views.View.OutlineProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetPadding">
      <MemberSignature Language="C#" Value="public virtual bool GetPadding (Android.Graphics.Rect padding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetPadding(class Android.Graphics.Rect padding) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPadding", "(Landroid/graphics/Rect;)Z", "GetGetPadding_Landroid_graphics_Rect_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="padding" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="padding">To be added.</param>
        <summary>Return in padding the insets suggested by this Drawable for placing
 content inside the drawable's bounds.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetState">
      <MemberSignature Language="C#" Value="public virtual int[] GetState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32[] GetState() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getState", "()[I", "GetGetStateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Describes the current state, as a union of primitve states, such as
 <c><see cref="!:NoType:android/R$attr;Href=../../../../reference/android/R.attr.html#state_focused" /></c>,
 <c><see cref="!:NoType:android/R$attr;Href=../../../../reference/android/R.attr.html#state_selected" /></c>, etc.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public virtual void Inflate (Android.Content.Res.Resources r, System.Xml.XmlReader parser, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Inflate(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("inflate", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)V", "GetInflate_Landroid_content_res_Resources_Lorg_xmlpull_v1_XmlPullParser_Landroid_util_AttributeSet_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="parser">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>Inflate this Drawable from an XML resource.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
        <exception cref="T:Java.IO.IOException" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.Inflate(Android.Content.Res.Resources, System.Xml.XmlReader, System.Xml.XmlReader, System.Xml.XmlReader)" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public virtual void Inflate (Android.Content.Res.Resources r, System.Xml.XmlReader parser, Android.Util.IAttributeSet attrs, Android.Content.Res.Resources.Theme theme);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Inflate(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser, class Android.Util.IAttributeSet attrs, class Android.Content.Res.Resources/Theme theme) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("inflate", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;)V", "GetInflate_Landroid_content_res_Resources_Lorg_xmlpull_v1_XmlPullParser_Landroid_util_AttributeSet_Landroid_content_res_Resources_Theme_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="theme" Type="Android.Content.Res.Resources+Theme" />
      </Parameters>
      <Docs>
        <param name="r">Resources used to resolve attribute values</param>
        <param name="parser">XML parser from which to inflate this Drawable</param>
        <param name="attrs">Base set of attribute values</param>
        <param name="theme">Theme to apply, may be null</param>
        <summary>Inflate this Drawable from an XML resource optionally styled by a theme.</summary>
        <remarks />
        <exception cref="!:NoType:XmlPullParserException" />
        <exception cref="T:Java.IO.IOException" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
      </Docs>
    </Member>
    <Member MemberName="InflateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task InflateAsync (Android.Content.Res.Resources r, System.Xml.XmlReader parser, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task InflateAsync(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="parser">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="InflateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task InflateAsync (Android.Content.Res.Resources r, System.Xml.XmlReader parser, Android.Util.IAttributeSet attrs, Android.Content.Res.Resources.Theme theme);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task InflateAsync(class Android.Content.Res.Resources r, class System.Xml.XmlReader parser, class Android.Util.IAttributeSet attrs, class Android.Content.Res.Resources/Theme theme) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Content.Res.Resources" />
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="theme" Type="Android.Content.Res.Resources+Theme" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="parser">To be added.</param>
        <param name="attrs">To be added.</param>
        <param name="theme">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="IntrinsicHeight">
      <MemberSignature Language="C#" Value="public virtual int IntrinsicHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IntrinsicHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getIntrinsicHeight", "()I", "GetGetIntrinsicHeightHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the intrinsic height of the underlying drawable object.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IntrinsicWidth">
      <MemberSignature Language="C#" Value="public virtual int IntrinsicWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IntrinsicWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getIntrinsicWidth", "()I", "GetGetIntrinsicWidthHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the intrinsic width of the underlying drawable object.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InvalidateSelf">
      <MemberSignature Language="C#" Value="public virtual void InvalidateSelf ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InvalidateSelf() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("invalidateSelf", "()V", "GetInvalidateSelfHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Use the current <c><see cref="T:Android.Graphics.Drawables.Drawable.ICallback" tool="ReplaceLinkValue" /></c> implementation to have this Drawable
 redrawn.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Graphics.Drawables.Drawable.Callback" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetCallback(.ICallback)" />
      </Docs>
    </Member>
    <Member MemberName="IsStateful">
      <MemberSignature Language="C#" Value="public virtual bool IsStateful { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStateful" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isStateful", "()Z", "GetIsStatefulHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this drawable will change its appearance based on
 state.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetState(System.Int32[])" />
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isVisible", "()Z", "GetIsVisibleHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JumpToCurrentState">
      <MemberSignature Language="C#" Value="public virtual void JumpToCurrentState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void JumpToCurrentState() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("jumpToCurrentState", "()V", "GetJumpToCurrentStateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>If this Drawable does transition animations between states, ask that
 it immediately jump to the current state and skip any active animations.</summary>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public int Level { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Level" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLevel", "()I", "GetGetLevelHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the current level.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MinimumHeight">
      <MemberSignature Language="C#" Value="public virtual int MinimumHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMinimumHeight", "()I", "GetGetMinimumHeightHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the minimum height suggested by this Drawable.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MinimumWidth">
      <MemberSignature Language="C#" Value="public virtual int MinimumWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMinimumWidth", "()I", "GetGetMinimumWidthHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the minimum width suggested by this Drawable.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Mutate">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable Mutate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable Mutate() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("mutate", "()Landroid/graphics/drawable/Drawable;", "GetMutateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Make this drawable mutable.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 3" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.GetConstantState" />
      </Docs>
    </Member>
    <Member MemberName="OnBoundsChange">
      <MemberSignature Language="C#" Value="protected virtual void OnBoundsChange (Android.Graphics.Rect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBoundsChange(class Android.Graphics.Rect bounds) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onBoundsChange", "(Landroid/graphics/Rect;)V", "GetOnBoundsChange_Landroid_graphics_Rect_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="bounds">To be added.</param>
        <summary>Override this in your subclass to change appearance if you vary based on
 the bounds.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnLevelChange">
      <MemberSignature Language="C#" Value="protected virtual bool OnLevelChange (int level);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnLevelChange(int32 level) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onLevelChange", "(I)Z", "GetOnLevelChange_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="level">To be added.</param>
        <summary>Override this in your subclass to change appearance if you vary based
  on level.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnStateChange">
      <MemberSignature Language="C#" Value="protected virtual bool OnStateChange (int[] state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnStateChange(int32[] state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onStateChange", "([I)Z", "GetOnStateChange_arrayIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="state">To be added.</param>
        <summary>Override this in your subclass to change appearance if you recognize the
 specified state.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Opacity">
      <MemberSignature Language="C#" Value="public abstract int Opacity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Opacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getOpacity", "()I", "GetGetOpacityHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the opacity/transparency of this Drawable.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Graphics.PixelFormat" />
      </Docs>
    </Member>
    <Member MemberName="ResolveOpacity">
      <MemberSignature Language="C#" Value="public static int ResolveOpacity (int op1, int op2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ResolveOpacity(int32 op1, int32 op2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resolveOpacity", "(II)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="op1" Type="System.Int32" />
        <Parameter Name="op2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="op1">One opacity value.</param>
        <param name="op2">Another opacity value.</param>
        <summary>Return the appropriate opacity value for two source opacities.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Graphics.Drawables.Drawable.Opacity" />
      </Docs>
    </Member>
    <Member MemberName="ScheduleSelf">
      <MemberSignature Language="C#" Value="public virtual void ScheduleSelf (Java.Lang.IRunnable what, long when);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScheduleSelf(class Java.Lang.IRunnable what, int64 when) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("scheduleSelf", "(Ljava/lang/Runnable;J)V", "GetScheduleSelf_Ljava_lang_Runnable_JHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="what" Type="Java.Lang.IRunnable" />
        <Parameter Name="when" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="what">The action being scheduled.</param>
        <param name="when">The time (in milliseconds) to run.</param>
        <summary>Use the current <c><see cref="T:Android.Graphics.Drawables.Drawable.ICallback" tool="ReplaceLinkValue" /></c> implementation to have this Drawable
 scheduled.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ScheduleSelf">
      <MemberSignature Language="C#" Value="public void ScheduleSelf (Action what, long when);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleSelf(class System.Action what, int64 when) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="what" Type="System.Action" />
        <Parameter Name="when" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="what">To be added.</param>
        <param name="when">To be added.</param>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetAlpha">
      <MemberSignature Language="C#" Value="public abstract void SetAlpha (int alpha);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAlpha(int32 alpha) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAlpha", "(I)V", "GetSetAlpha_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alpha" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="alpha">To be added.</param>
        <summary tool="true">Specify an alpha value for the drawable. 0 means fully transparent, and
 255 means fully opaque.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetBounds">
      <MemberSignature Language="C#" Value="public virtual void SetBounds (int left, int top, int right, int bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBounds(int32 left, int32 top, int32 right, int32 bottom) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setBounds", "(IIII)V", "GetSetBounds_IIIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="top">To be added.</param>
        <param name="right">To be added.</param>
        <param name="bottom">To be added.</param>
        <summary>Specify a bounding rectangle for the Drawable.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetCallback">
      <MemberSignature Language="C#" Value="public void SetCallback (Android.Graphics.Drawables.Drawable.ICallback cb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCallback(class Android.Graphics.Drawables.Drawable/ICallback cb) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setCallback", "(Landroid/graphics/drawable/Drawable$Callback;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="Android.Graphics.Drawables.Drawable+ICallback" />
      </Parameters>
      <Docs>
        <param name="cb">The client's Callback implementation.</param>
        <summary>Bind a <c><see cref="T:Android.Graphics.Drawables.Drawable.ICallback" tool="ReplaceLinkValue" /></c> object to this Drawable.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Graphics.Drawables.Drawable.Callback" />
      </Docs>
    </Member>
    <Member MemberName="SetColorFilter">
      <MemberSignature Language="C#" Value="public abstract void SetColorFilter (Android.Graphics.ColorFilter cf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetColorFilter(class Android.Graphics.ColorFilter cf) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setColorFilter", "(Landroid/graphics/ColorFilter;)V", "GetSetColorFilter_Landroid_graphics_ColorFilter_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cf" Type="Android.Graphics.ColorFilter" />
      </Parameters>
      <Docs>
        <param name="cf">the color filter to apply, or <c>null</c> to remove the
            existing color filter
</param>
        <summary>Specify an optional color filter for the drawable.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetColorFilter">
      <MemberSignature Language="C#" Value="public virtual void SetColorFilter (Android.Graphics.Color color, Android.Graphics.PorterDuff.Mode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetColorFilter(valuetype Android.Graphics.Color color, class Android.Graphics.PorterDuff/Mode mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setColorFilter", "(ILandroid/graphics/PorterDuff$Mode;)V", "GetSetColorFilter_ILandroid_graphics_PorterDuff_Mode_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="Android.Graphics.Color" />
        <Parameter Name="mode" Type="Android.Graphics.PorterDuff+Mode" />
      </Parameters>
      <Docs>
        <param name="color">To be added.</param>
        <param name="mode">To be added.</param>
        <summary>Specify a color and Porter-Duff mode to be the color filter for this
 drawable.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetDither">
      <MemberSignature Language="C#" Value="public virtual void SetDither (bool dither);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDither(bool dither) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDither", "(Z)V", "GetSetDither_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dither" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dither">To be added.</param>
        <summary>Set to true to have the drawable dither its colors when drawn to a
 device with fewer than 8-bits per color component.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Graphics.Paint.Dither" />
      </Docs>
    </Member>
    <Member MemberName="SetFilterBitmap">
      <MemberSignature Language="C#" Value="public virtual void SetFilterBitmap (bool filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFilterBitmap(bool filter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setFilterBitmap", "(Z)V", "GetSetFilterBitmap_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filter">To be added.</param>
        <summary>Set to true to have the drawable filter its bitmaps with bilinear
 sampling when they are scaled or rotated.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Graphics.Drawables.Drawable.IsFilterBitmap" />
        <altmember cref="P:Android.Graphics.Paint.FilterBitmap" />
      </Docs>
    </Member>
    <Member MemberName="SetHotspot">
      <MemberSignature Language="C#" Value="public virtual void SetHotspot (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetHotspot(float32 x, float32 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setHotspot", "(FF)V", "GetSetHotspot_FFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">The X coordinate of the center of the hotspot</param>
        <param name="y">The Y coordinate of the center of the hotspot
</param>
        <summary>Specifies the hotspot's location within the drawable.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetHotspotBounds">
      <MemberSignature Language="C#" Value="public virtual void SetHotspotBounds (int left, int top, int right, int bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetHotspotBounds(int32 left, int32 top, int32 right, int32 bottom) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setHotspotBounds", "(IIII)V", "GetSetHotspotBounds_IIIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left">position in pixels of the left bound</param>
        <param name="top">position in pixels of the top bound</param>
        <param name="right">position in pixels of the right bound</param>
        <param name="bottom">position in pixels of the bottom bound</param>
        <summary>Sets the bounds to which the hotspot is constrained, if they should be
 different from the drawable bounds.</summary>
        <remarks />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.GetHotspotBounds(Android.Graphics.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="SetLevel">
      <MemberSignature Language="C#" Value="public bool SetLevel (int level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SetLevel(int32 level) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLevel", "(I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="level">The new level, from 0 (minimum) to 10000 (maximum).</param>
        <summary>Specify the level for the drawable.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetState">
      <MemberSignature Language="C#" Value="public virtual bool SetState (int[] stateSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetState(int32[] stateSet) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setState", "([I)Z", "GetSetState_arrayIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSet" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="stateSet">The new set of states to be displayed.</param>
        <summary>Specify a set of states for the drawable.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetTint">
      <MemberSignature Language="C#" Value="public virtual void SetTint (int tint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTint(int32 tint) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTint", "(I)V", "GetSetTint_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="tint">Color to use for tinting this drawable</param>
        <summary>Specifies tint color for this drawable.</summary>
        <remarks />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetTintList(Android.Content.Res.ColorStateList)" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetTintMode(.Mode)" />
      </Docs>
    </Member>
    <Member MemberName="SetTintList">
      <MemberSignature Language="C#" Value="public virtual void SetTintList (Android.Content.Res.ColorStateList tint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTintList(class Android.Content.Res.ColorStateList tint) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTintList", "(Landroid/content/res/ColorStateList;)V", "GetSetTintList_Landroid_content_res_ColorStateList_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tint" Type="Android.Content.Res.ColorStateList" />
      </Parameters>
      <Docs>
        <param name="tint">Color state list to use for tinting this drawable, or
            <c>null</c> to clear the tint</param>
        <summary>Specifies tint color for this drawable as a color state list.</summary>
        <remarks />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetTint(System.Int32)" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetTintMode(.Mode)" />
      </Docs>
    </Member>
    <Member MemberName="SetTintMode">
      <MemberSignature Language="C#" Value="public virtual void SetTintMode (Android.Graphics.PorterDuff.Mode tintMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTintMode(class Android.Graphics.PorterDuff/Mode tintMode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTintMode", "(Landroid/graphics/PorterDuff$Mode;)V", "GetSetTintMode_Landroid_graphics_PorterDuff_Mode_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tintMode" Type="Android.Graphics.PorterDuff+Mode" />
      </Parameters>
      <Docs>
        <param name="tintMode">A Porter-Duff blending mode</param>
        <summary>Specifies a tint blending mode for this drawable.</summary>
        <remarks />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetTint(System.Int32)" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetTintList(Android.Content.Res.ColorStateList)" />
      </Docs>
    </Member>
    <Member MemberName="SetVisible">
      <MemberSignature Language="C#" Value="public virtual bool SetVisible (bool visible, bool restart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetVisible(bool visible, bool restart) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setVisible", "(ZZ)Z", "GetSetVisible_ZZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visible" Type="System.Boolean" />
        <Parameter Name="restart" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="visible">Set to true if visible, false if not.</param>
        <param name="restart">You can supply true here to force the drawable to behave
                as if it has just become visible, even if it had last
                been set visible.  Used for example to force animations
                to restart.</param>
        <summary>Set whether this Drawable is visible.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="TransparentRegion">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Region TransparentRegion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Region TransparentRegion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTransparentRegion", "()Landroid/graphics/Region;", "GetGetTransparentRegionHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Region</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a Region representing the part of the Drawable that is completely
 transparent.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="UnscheduleSelf">
      <MemberSignature Language="C#" Value="public virtual void UnscheduleSelf (Java.Lang.IRunnable what);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnscheduleSelf(class Java.Lang.IRunnable what) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unscheduleSelf", "(Ljava/lang/Runnable;)V", "GetUnscheduleSelf_Ljava_lang_Runnable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="what" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="what">The runnable that you no longer want called.</param>
        <summary>Use the current <c><see cref="T:Android.Graphics.Drawables.Drawable.ICallback" tool="ReplaceLinkValue" /></c> implementation to have this Drawable
 unscheduled.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="UnscheduleSelf">
      <MemberSignature Language="C#" Value="public void UnscheduleSelf (Action what);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnscheduleSelf(class System.Action what) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="what" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="what">To be added.</param>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
