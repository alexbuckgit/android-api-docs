<Type Name="Channels" FullName="Java.Nio.Channels.Channels">
  <TypeSignature Language="C#" Value="public sealed class Channels : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Channels extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/nio/channels/Channels", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This class provides several utilities to get I/O streams from channels.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">This class provides several utilities to get I/O streams from channels.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/java/nio/channels/Channels.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="NewInputStream">
      <MemberSignature Language="C#" Value="public static System.IO.Stream NewInputStream (Java.Nio.Channels.IReadableByteChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream NewInputStream(class Java.Nio.Channels.IReadableByteChannel channel) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newInputStream", "(Ljava/nio/channels/ReadableByteChannel;)Ljava/io/InputStream;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channel" Type="Java.Nio.Channels.IReadableByteChannel" />
      </Parameters>
      <Docs>
        <param name="channel">the channel to be wrapped by an InputStream.</param>
        <summary>Returns an input stream on the given channel.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns an input stream on the given channel. The resulting stream has
 the following properties:
 <list type="bullet"><item><term>If the stream is closed, then the underlying channel is closed as
 well.</term></item><item><term>It is thread safe.</term></item><item><term>It throws an <c><see cref="T:Java.Nio.Channels.IllegalBlockingModeException" /></c> if the channel is
 in non-blocking mode and <c>read</c> is called.</term></item><item><term>Neither <c>mark</c> nor <c>reset</c> is supported.</term></item><item><term>It is not buffered.</term></item></list></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/channels/Channels.html#newInputStream(java.nio.channels.ReadableByteChannel)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NewOutputStream">
      <MemberSignature Language="C#" Value="public static System.IO.Stream NewOutputStream (Java.Nio.Channels.IWritableByteChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream NewOutputStream(class Java.Nio.Channels.IWritableByteChannel channel) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newOutputStream", "(Ljava/nio/channels/WritableByteChannel;)Ljava/io/OutputStream;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channel" Type="Java.Nio.Channels.IWritableByteChannel" />
      </Parameters>
      <Docs>
        <param name="channel">the channel to be wrapped by an OutputStream.</param>
        <summary>Returns an output stream on the given channel.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns an output stream on the given channel. The resulting stream has
 the following properties:
 <list type="bullet"><item><term>If the stream is closed, then the underlying channel is closed as
 well.</term></item><item><term>It is thread safe.</term></item><item><term>It throws an <c><see cref="T:Java.Nio.Channels.IllegalBlockingModeException" /></c> if the channel is
 in non-blocking mode and <c>write</c> is called.</term></item><item><term>It is not buffered.</term></item></list></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/channels/Channels.html#newOutputStream(java.nio.channels.WritableByteChannel)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NewReadableChannel">
      <MemberSignature Language="C#" Value="public static Java.Nio.Channels.IReadableByteChannel NewReadableChannel (System.IO.Stream inputStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Nio.Channels.IReadableByteChannel NewReadableChannel(class System.IO.Stream inputStream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newChannel", "(Ljava/io/InputStream;)Ljava/nio/channels/ReadableByteChannel;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.IReadableByteChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inputStream">the stream to be wrapped by a byte channel.</param>
        <summary>Returns a readable channel on the given input stream.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a readable channel on the given input stream. The resulting
 channel has the following properties:
 <list type="bullet"><item><term>If the channel is closed, then the underlying stream is closed as
 well.</term></item><item><term>It is not buffered.</term></item></list></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/channels/Channels.html#newChannel(java.io.InputStream)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NewReader">
      <MemberSignature Language="C#" Value="public static Java.IO.Reader NewReader (Java.Nio.Channels.IReadableByteChannel channel, string charsetName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.IO.Reader NewReader(class Java.Nio.Channels.IReadableByteChannel channel, string charsetName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newReader", "(Ljava/nio/channels/ReadableByteChannel;Ljava/lang/String;)Ljava/io/Reader;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.Reader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channel" Type="Java.Nio.Channels.IReadableByteChannel" />
        <Parameter Name="charsetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="channel">the Channel to be read.</param>
        <param name="charsetName">the name of the charset.</param>
        <summary>Returns a reader that decodes bytes from a channel.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a reader that decodes bytes from a channel. This method creates a
 reader with a buffer of default size.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/channels/Channels.html#newReader(java.nio.channels.ReadableByteChannel, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.Charset.UnsupportedCharsetException">if the given charset name is not supported.
</exception>
      </Docs>
    </Member>
    <Member MemberName="NewReader">
      <MemberSignature Language="C#" Value="public static Java.IO.Reader NewReader (Java.Nio.Channels.IReadableByteChannel channel, Java.Nio.Charset.CharsetDecoder decoder, int minBufferCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.IO.Reader NewReader(class Java.Nio.Channels.IReadableByteChannel channel, class Java.Nio.Charset.CharsetDecoder decoder, int32 minBufferCapacity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newReader", "(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/charset/CharsetDecoder;I)Ljava/io/Reader;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.Reader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channel" Type="Java.Nio.Channels.IReadableByteChannel" />
        <Parameter Name="decoder" Type="Java.Nio.Charset.CharsetDecoder" />
        <Parameter Name="minBufferCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="channel">the Channel to be read.</param>
        <param name="decoder">the Charset decoder to be used.</param>
        <param name="minBufferCapacity">The minimum size of the byte buffer, -1 means to use the
            default size.</param>
        <summary>Returns a reader that decodes bytes from a channel.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a reader that decodes bytes from a channel.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/channels/Channels.html#newReader(java.nio.channels.ReadableByteChannel, java.nio.charset.CharsetDecoder, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NewWritableChannel">
      <MemberSignature Language="C#" Value="public static Java.Nio.Channels.IWritableByteChannel NewWritableChannel (System.IO.Stream outputStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Nio.Channels.IWritableByteChannel NewWritableChannel(class System.IO.Stream outputStream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newChannel", "(Ljava/io/OutputStream;)Ljava/nio/channels/WritableByteChannel;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.IWritableByteChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="outputStream">the stream to be wrapped by a byte channel.</param>
        <summary>Returns a writable channel on the given output stream.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a writable channel on the given output stream.

 The resulting channel has following properties:
 <list type="bullet"><item><term>If the channel is closed, then the underlying stream is closed as
 well.</term></item><item><term>It is not buffered.</term></item></list></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/channels/Channels.html#newChannel(java.io.OutputStream)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NewWriter">
      <MemberSignature Language="C#" Value="public static Java.IO.Writer NewWriter (Java.Nio.Channels.IWritableByteChannel channel, string charsetName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.IO.Writer NewWriter(class Java.Nio.Channels.IWritableByteChannel channel, string charsetName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newWriter", "(Ljava/nio/channels/WritableByteChannel;Ljava/lang/String;)Ljava/io/Writer;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.Writer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channel" Type="Java.Nio.Channels.IWritableByteChannel" />
        <Parameter Name="charsetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="channel">the Channel to be written to.</param>
        <param name="charsetName">the name of the charset.</param>
        <summary>Returns a writer that encodes characters with the specified
 <c>encoder</c> and sends the bytes to the specified channel.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a writer that encodes characters with the specified
 <c>encoder</c> and sends the bytes to the specified channel. This method
 creates a writer with a buffer of default size.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/channels/Channels.html#newWriter(java.nio.channels.WritableByteChannel, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.Charset.UnsupportedCharsetException">if the given charset name is not supported.
</exception>
      </Docs>
    </Member>
    <Member MemberName="NewWriter">
      <MemberSignature Language="C#" Value="public static Java.IO.Writer NewWriter (Java.Nio.Channels.IWritableByteChannel channel, Java.Nio.Charset.CharsetEncoder encoder, int minBufferCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.IO.Writer NewWriter(class Java.Nio.Channels.IWritableByteChannel channel, class Java.Nio.Charset.CharsetEncoder encoder, int32 minBufferCapacity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newWriter", "(Ljava/nio/channels/WritableByteChannel;Ljava/nio/charset/CharsetEncoder;I)Ljava/io/Writer;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.Writer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channel" Type="Java.Nio.Channels.IWritableByteChannel" />
        <Parameter Name="encoder" Type="Java.Nio.Charset.CharsetEncoder" />
        <Parameter Name="minBufferCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="channel">the Channel to write to.</param>
        <param name="encoder">the CharsetEncoder to be used.</param>
        <param name="minBufferCapacity">the minimum size of the byte buffer, -1 means to use the
            default size.</param>
        <summary>Returns a writer that encodes characters with the specified
 <c>encoder</c> and sends the bytes to the specified channel.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a writer that encodes characters with the specified
 <c>encoder</c> and sends the bytes to the specified channel.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/channels/Channels.html#newWriter(java.nio.channels.WritableByteChannel, java.nio.charset.CharsetEncoder, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
