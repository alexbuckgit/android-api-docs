<Type Name="SelectableChannel" FullName="Java.Nio.Channels.SelectableChannel">
  <TypeSignature Language="C#" Value="public abstract class SelectableChannel : Java.Nio.Channels.Spi.AbstractInterruptibleChannel, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SelectableChannel extends Java.Nio.Channels.Spi.AbstractInterruptibleChannel implements class Android.Runtime.IJavaObject, class Java.IO.ICloseable, class Java.Nio.Channels.IChannel, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Nio.Channels.Spi.AbstractInterruptibleChannel</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/nio/channels/SelectableChannel", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A channel that can be used with a <c><see cref="T:Java.Nio.Channels.Selector" /></c>.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">A channel that can be used with a <c><see cref="T:Java.Nio.Channels.Selector" /></c>. The channel must be
 registered with a selector by calling one of the <c>register</c> methods,
 which return a <c><see cref="T:Java.Nio.Channels.SelectionKey" /></c> object. In order to deregister a channel
 from a selector, its selection key must be canceled. This can be done
 explicitly by calling the <c><see cref="M:Java.Nio.Channels.SelectionKey.Cancel" /></c> method but it is also
 done implicitly when the channel or the selector is closed.
 </para>
      <para tool="javadoc-to-mdoc">
 A channel may be registered with several selectors at the same time but only
 once for any given selector.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/java/nio/channels/SelectableChannel.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SelectableChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Constructs a new <c>SelectableChannel</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>SelectableChannel</c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/channels/SelectableChannel.html#SelectableChannel()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SelectableChannel (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T}(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BlockingLock">
      <MemberSignature Language="C#" Value="public abstract Java.Lang.Object BlockingLock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object BlockingLock() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("blockingLock", "()Ljava/lang/Object;", "GetBlockingLockHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the blocking lock which synchronizes the <c>configureBlocking</c>
 and <c>register</c> methods.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the blocking lock which synchronizes the <c>configureBlocking</c>
 and <c>register</c> methods.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/channels/SelectableChannel.html#blockingLock()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ConfigureBlocking">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.Channels.SelectableChannel ConfigureBlocking (bool block);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Channels.SelectableChannel ConfigureBlocking(bool block) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("configureBlocking", "(Z)Ljava/nio/channels/SelectableChannel;", "GetConfigureBlocking_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.SelectableChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="block" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="block">
          <c>true</c> for setting this channel's mode to blocking,
            <c>false</c> to set it to non-blocking.</param>
        <summary>Sets the blocking mode of this channel.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the blocking mode of this channel. A call to this method blocks if
 other calls to this method or to a <c>register</c> method are executing.
 The new blocking mode is valid for calls to other methods that are
 invoked after the call to this method. If other methods are already
 executing when this method is called, they still have the old mode and
 the call to this method might block depending on the implementation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/channels/SelectableChannel.html#configureBlocking(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.Channels.ClosedChannelException">if this channel is closed.</exception>
        <exception cref="T:Java.Nio.Channels.IllegalBlockingModeException">if <c>block</c> is <c>true</c> and this channel has been
             registered with at least one selector.</exception>
        <exception cref="T:Java.IO.IOException">if an I/O error occurs.
</exception>
      </Docs>
    </Member>
    <Member MemberName="IsBlocking">
      <MemberSignature Language="C#" Value="public abstract bool IsBlocking { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBlocking" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isBlocking", "()Z", "GetIsBlockingHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this channel is in blocking mode.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates whether this channel is in blocking mode.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/channels/SelectableChannel.html#isBlocking()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsRegistered">
      <MemberSignature Language="C#" Value="public abstract bool IsRegistered { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRegistered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isRegistered", "()Z", "GetIsRegisteredHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this channel is registered with at least one selector.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates whether this channel is registered with at least one selector.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/channels/SelectableChannel.html#isRegistered()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="KeyFor">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.Channels.SelectionKey KeyFor (Java.Nio.Channels.Selector sel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Channels.SelectionKey KeyFor(class Java.Nio.Channels.Selector sel) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("keyFor", "(Ljava/nio/channels/Selector;)Ljava/nio/channels/SelectionKey;", "GetKeyFor_Ljava_nio_channels_Selector_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.SelectionKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sel" Type="Java.Nio.Channels.Selector" />
      </Parameters>
      <Docs>
        <param name="sel">the selector with which this channel has been registered.</param>
        <summary>Gets this channel's selection key for the specified selector.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets this channel's selection key for the specified selector.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/channels/SelectableChannel.html#keyFor(java.nio.channels.Selector)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.Channels.Spi.SelectorProvider Provider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Channels.Spi.SelectorProvider Provider() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("provider", "()Ljava/nio/channels/spi/SelectorProvider;", "GetProviderHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.Spi.SelectorProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the provider of this channel.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the provider of this channel.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/channels/SelectableChannel.html#provider()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public Java.Nio.Channels.SelectionKey Register (Java.Nio.Channels.Selector selector, Java.Nio.Channels.Operations operations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.Channels.SelectionKey Register(class Java.Nio.Channels.Selector selector, valuetype Java.Nio.Channels.Operations operations) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("register", "(Ljava/nio/channels/Selector;I)Ljava/nio/channels/SelectionKey;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.SelectionKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selector" Type="Java.Nio.Channels.Selector" />
        <Parameter Name="operations" Type="Java.Nio.Channels.Operations">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="selector">the selector with which to register this channel.</param>
        <param name="operations">this channel's <c><see cref="T:Java.Nio.Channels.SelectionKey" /></c>.</param>
        <summary>Registers this channel with the specified selector for the specified
 interest set.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Registers this channel with the specified selector for the specified
 interest set. If the channel is already registered with the selector, the
 corresponding selection key is returned but the
 <c><see cref="T:Java.Nio.Channels.SelectionKey" /></c> is updated to <c>operations</c>. The
 returned key is canceled if the channel is closed while registering is in
 progress.
 </para>
          <para tool="javadoc-to-mdoc">
 Calling this method is valid at any time. If another thread executes this
 method or the <c>configureBlocking(boolean</c> method then this call is
 blocked until the other call finishes. After that, it will synchronize on
 the key set of the selector and thus may again block if other threads
 also hold locks on the key set of the same selector.
 </para>
          <para tool="javadoc-to-mdoc">
 Calling this method is equivalent to calling
 <c>register(selector, operations, null)</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/channels/SelectableChannel.html#register(java.nio.channels.Selector, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.Channels.ClosedChannelException">if the channel is closed.</exception>
        <exception cref="T:Java.Nio.Channels.IllegalBlockingModeException">if the channel is in blocking mode.</exception>
        <exception cref="T:Java.Nio.Channels.IllegalSelectorException">if this channel does not have the same provider as the given
             selector.</exception>
        <exception cref="T:Java.Nio.Channels.CancelledKeyException">if this channel is registered but its key has been canceled.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the operation given is not supported by this channel.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.Channels.SelectionKey Register (Java.Nio.Channels.Selector sel, Java.Nio.Channels.Operations ops, Java.Lang.Object att);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Channels.SelectionKey Register(class Java.Nio.Channels.Selector sel, valuetype Java.Nio.Channels.Operations ops, class Java.Lang.Object att) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("register", "(Ljava/nio/channels/Selector;ILjava/lang/Object;)Ljava/nio/channels/SelectionKey;", "GetRegister_Ljava_nio_channels_Selector_ILjava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.SelectionKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sel" Type="Java.Nio.Channels.Selector" />
        <Parameter Name="ops" Type="Java.Nio.Channels.Operations">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="att" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="sel">the selector with which to register this channel.</param>
        <param name="ops">this channel's <c><see cref="T:Java.Nio.Channels.SelectionKey" /></c>.</param>
        <param name="att">the object to attach, can be <c>null</c>.</param>
        <summary>Registers this channel with the specified selector for the specified
 interest set and an object to attach.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Registers this channel with the specified selector for the specified
 interest set and an object to attach. If the channel is already
 registered with the selector, the corresponding selection key is returned
 but its <c><see cref="T:Java.Nio.Channels.SelectionKey" /></c> is updated to <c>ops</c> and
 the attached object is updated to <c>att</c>. The returned key is
 canceled if the channel is closed while registering is in progress.
 </para>
          <para tool="javadoc-to-mdoc">
 Calling this method is valid at any time. If another thread executes this
 method or the <c>configureBlocking(boolean)</c> method then this call is
 blocked until the other call finishes. After that, it will synchronize on
 the key set of the selector and thus may again block if other threads
 also hold locks on the key set of the same selector.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/channels/SelectableChannel.html#register(java.nio.channels.Selector, int, java.lang.Object)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.Channels.ClosedChannelException">if this channel is closed.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>ops</c> is not supported by this channel.</exception>
        <exception cref="T:Java.Nio.Channels.IllegalBlockingModeException">if this channel is in blocking mode.</exception>
        <exception cref="T:Java.Nio.Channels.IllegalSelectorException">if this channel does not have the same provider as the given
             selector.</exception>
        <exception cref="T:Java.Nio.Channels.CancelledKeyException">if this channel is registered but its key has been canceled.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidOps">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.Channels.Operations ValidOps ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Java.Nio.Channels.Operations ValidOps() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("validOps", "()I", "GetValidOpsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.Operations</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the set of valid <c><see cref="T:Java.Nio.Channels.SelectionKey" /></c> of this channel.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the set of valid <c><see cref="T:Java.Nio.Channels.SelectionKey" /></c> of this channel.
 Instances of a concrete channel class always return the same value.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/channels/SelectableChannel.html#validOps()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
