<Type Name="ThreadGroup" FullName="Java.Lang.ThreadGroup">
  <TypeSignature Language="C#" Value="public class ThreadGroup : Java.Lang.Object, IDisposable, Java.Lang.Thread.IUncaughtExceptionHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ThreadGroup extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Lang.Thread/IUncaughtExceptionHandler, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Java.Lang.Thread+IUncaughtExceptionHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/lang/ThreadGroup", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>
      <c>ThreadGroup</c> is a means of organizing threads into a hierarchical structure.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">
        <c>ThreadGroup</c> is a means of organizing threads into a hierarchical structure.
 This class is obsolete. See <format type="text/html"><i>Effective Java</i></format> Item 73, "Avoid thread groups" for details.</para>
      <format type="text/html">
        <h5 class="jd-tagtitle">See Also</h5>
      </format>
      <list type="bullet">
        <item>
          <term>
            <c>
              <see cref="T:Java.Lang.Thread" />
            </c>
          </term>
        </item>
      </list>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/java/lang/ThreadGroup.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadGroup (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>Constructs a new <c>ThreadGroup</c> with the given name.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>ThreadGroup</c> with the given name. The new <c>ThreadGroup</c>
 will be child of the <c>ThreadGroup</c> to which the calling thread belongs.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/ThreadGroup.html#ThreadGroup(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Thread.CurrentThread" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadGroup (Java.Lang.ThreadGroup parent, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Lang.ThreadGroup parent, string name) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/ThreadGroup;Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parent" Type="Java.Lang.ThreadGroup" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parent">To be added.</param>
        <param name="name">To be added.</param>
        <summary>Constructs a new <c>ThreadGroup</c> with the given name, as a child of the
 given <c>ThreadGroup</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>ThreadGroup</c> with the given name, as a child of the
 given <c>ThreadGroup</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/ThreadGroup.html#ThreadGroup(java.lang.ThreadGroup, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>parent == null</c></exception>
        <exception cref="T:Java.Lang.IllegalThreadStateException">if <c>parent</c> has been
         destroyed already
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ThreadGroup (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveCount">
      <MemberSignature Language="C#" Value="public virtual int ActiveCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ActiveCount() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("activeCount", "()I", "GetActiveCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the number of running <c>Thread</c>s which are children of this thread group,
 directly or indirectly.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the number of running <c>Thread</c>s which are children of this thread group,
 directly or indirectly.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/ThreadGroup.html#activeCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ActiveGroupCount">
      <MemberSignature Language="C#" Value="public virtual int ActiveGroupCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ActiveGroupCount() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("activeGroupCount", "()I", "GetActiveGroupCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the number of <c>ThreadGroup</c>s which are children of this group,
 directly or indirectly.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the number of <c>ThreadGroup</c>s which are children of this group,
 directly or indirectly.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/ThreadGroup.html#activeGroupCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AllowThreadSuspension">
      <MemberSignature Language="C#" Value="public virtual bool AllowThreadSuspension (bool b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AllowThreadSuspension(bool b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("allowThreadSuspension", "(Z)Z", "GetAllowThreadSuspension_ZHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="b" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="b">Used to control low memory implicit suspension</param>
        <summary>Does nothing.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Does nothing. The definition of this method depends on the deprecated
 method <c><see cref="M:Java.Lang.ThreadGroup.Suspend" /></c>. The exact behavior of this call was never
 specified.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/ThreadGroup.html#allowThreadSuspension(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public void CheckAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckAccess() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("checkAccess", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Does nothing.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Does nothing.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/ThreadGroup.html#checkAccess()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Daemon">
      <MemberSignature Language="C#" Value="public bool Daemon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Daemon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isDaemon", "()Z", "GetIsDaemonHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setDaemon", "(Z)V", "GetSetDaemon_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Checks whether this thread group is a daemon <c>ThreadGroup</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/java/lang/ThreadGroup.html#isDaemon()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Checks whether this thread group is a daemon <c>ThreadGroup</c>.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/java/lang/ThreadGroup.html#setDaemon(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets whether this is a daemon <c>ThreadGroup</c> or not. Daemon
 thread groups are automatically destroyed when they become empty.</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Java.Lang.ThreadGroup.Daemon" />
        <altmember cref="M:Java.Lang.ThreadGroup.Destroy" />
        <altmember cref="P:Java.Lang.ThreadGroup.Daemon" />
        <altmember cref="M:Java.Lang.ThreadGroup.Destroy" />
      </Docs>
    </Member>
    <Member MemberName="Destroy">
      <MemberSignature Language="C#" Value="public void Destroy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Destroy() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("destroy", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Destroys this thread group and recursively all its subgroups.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Destroys this thread group and recursively all its subgroups. It is only legal
 to destroy a <c>ThreadGroup</c> that has no threads in it. Any daemon
 <c>ThreadGroup</c> is destroyed automatically when it becomes empty (no threads
 or thread groups in it).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/ThreadGroup.html#destroy()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalThreadStateException">if this thread group or any of its
         subgroups has been destroyed already or if it still contains
         threads.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Enumerate">
      <MemberSignature Language="C#" Value="public virtual int Enumerate (Java.Lang.Thread[] threads);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Enumerate(class Java.Lang.Thread[] threads) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("enumerate", "([Ljava/lang/Thread;)I", "GetEnumerate_arrayLjava_lang_Thread_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threads" Type="Java.Lang.Thread[]" />
      </Parameters>
      <Docs>
        <param name="threads">the array into which the <c>Thread</c>s will be copied</param>
        <summary>Iterates over all active threads in this group (and its sub-groups) and
 stores the threads in the given array.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Iterates over all active threads in this group (and its sub-groups) and
 stores the threads in the given array. Returns when the array is full or
 no more threads remain, whichever happens first.

 </para>
          <para tool="javadoc-to-mdoc">Note that this method will silently ignore any threads that don't fit in the
 supplied array.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/ThreadGroup.html#enumerate(java.lang.Thread[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Enumerate">
      <MemberSignature Language="C#" Value="public virtual int Enumerate (Java.Lang.ThreadGroup[] groups);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Enumerate(class Java.Lang.ThreadGroup[] groups) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("enumerate", "([Ljava/lang/ThreadGroup;)I", "GetEnumerate_arrayLjava_lang_ThreadGroup_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groups" Type="Java.Lang.ThreadGroup[]" />
      </Parameters>
      <Docs>
        <param name="groups">the array into which the <c>ThreadGroup</c>s will be copied</param>
        <summary>Iterates over all thread groups in this group (and its sub-groups) and
 and stores the groups in the given array.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Iterates over all thread groups in this group (and its sub-groups) and
 and stores the groups in the given array. Returns when the array is full
 or no more groups remain, whichever happens first.

 </para>
          <para tool="javadoc-to-mdoc">Note that this method will silently ignore any thread groups that don't fit in the
 supplied array.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/ThreadGroup.html#enumerate(java.lang.ThreadGroup[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Enumerate">
      <MemberSignature Language="C#" Value="public virtual int Enumerate (Java.Lang.Thread[] threads, bool recurse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Enumerate(class Java.Lang.Thread[] threads, bool recurse) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("enumerate", "([Ljava/lang/Thread;Z)I", "GetEnumerate_arrayLjava_lang_Thread_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threads" Type="Java.Lang.Thread[]" />
        <Parameter Name="recurse" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="threads">the array into which the <c>Thread</c>s will be copied</param>
        <param name="recurse">indicates whether <c>Thread</c>s in subgroups should be
        recursively copied as well</param>
        <summary>Iterates over all active threads in this group (and, optionally, its
 sub-groups) and stores the threads in the given array.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Iterates over all active threads in this group (and, optionally, its
 sub-groups) and stores the threads in the given array. Returns when the
 array is full or no more threads remain, whichever happens first.

 </para>
          <para tool="javadoc-to-mdoc">Note that this method will silently ignore any threads that don't fit in the
 supplied array.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/ThreadGroup.html#enumerate(java.lang.Thread[], boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Enumerate">
      <MemberSignature Language="C#" Value="public virtual int Enumerate (Java.Lang.ThreadGroup[] groups, bool recurse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Enumerate(class Java.Lang.ThreadGroup[] groups, bool recurse) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("enumerate", "([Ljava/lang/ThreadGroup;Z)I", "GetEnumerate_arrayLjava_lang_ThreadGroup_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groups" Type="Java.Lang.ThreadGroup[]" />
        <Parameter Name="recurse" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="groups">the array into which the <c>ThreadGroup</c>s will be copied</param>
        <param name="recurse">indicates whether <c>ThreadGroup</c>s in subgroups should be
        recursively copied as well or not</param>
        <summary>Iterates over all thread groups in this group (and, optionally, its
 sub-groups) and stores the groups in the given array.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Iterates over all thread groups in this group (and, optionally, its
 sub-groups) and stores the groups in the given array. Returns when
 the array is full or no more groups remain, whichever happens first.

 </para>
          <para tool="javadoc-to-mdoc">Note that this method will silently ignore any thread groups that don't fit in the
 supplied array.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/ThreadGroup.html#enumerate(java.lang.ThreadGroup[], boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Interrupt">
      <MemberSignature Language="C#" Value="public void Interrupt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Interrupt() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("interrupt", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Interrupts every <c>Thread</c> in this group and recursively in all its
 subgroups.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Interrupts every <c>Thread</c> in this group and recursively in all its
 subgroups.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/ThreadGroup.html#interrupt()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Thread.Interrupt" />
      </Docs>
    </Member>
    <Member MemberName="IsDestroyed">
      <MemberSignature Language="C#" Value="public virtual bool IsDestroyed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDestroyed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isDestroyed", "()Z", "GetIsDestroyedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Checks whether this thread group has already been destroyed.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Checks whether this thread group has already been destroyed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/ThreadGroup.html#isDestroyed()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.ThreadGroup.Destroy" />
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public virtual void List ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void List() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("list", "()V", "GetListHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Outputs to <c>System.out</c> a text representation of the
 hierarchy of <c>Thread</c>s and <c>ThreadGroup</c>s in this thread group (and recursively).</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Outputs to <c>System.out</c> a text representation of the
 hierarchy of <c>Thread</c>s and <c>ThreadGroup</c>s in this thread group (and recursively).
 Proper indentation is used to show the nesting of groups inside groups
 and threads inside groups.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/ThreadGroup.html#list()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MaxPriority">
      <MemberSignature Language="C#" Value="public int MaxPriority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxPriority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMaxPriority", "()I", "GetGetMaxPriorityHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setMaxPriority", "(I)V", "GetSetMaxPriority_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the maximum allowed priority for a <c>Thread</c> in this thread group.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/java/lang/ThreadGroup.html#getMaxPriority()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the maximum allowed priority for a <c>Thread</c> in this thread group.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/java/lang/ThreadGroup.html#setMaxPriority(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Configures the maximum allowed priority for a <c>Thread</c> in this group and
 recursively in all its subgroups.

 A caller can never increase the maximum priority of a thread group.
 Such an attempt will not result in an exception, it will
 simply leave the thread group with its current maximum priority.</para>
          <para tool="javadoc-to-mdoc" />
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the new priority is greater than
         Thread.MAX_PRIORITY or less than Thread.MIN_PRIORITY</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the new priority is greater than
         Thread.MAX_PRIORITY or less than Thread.MIN_PRIORITY</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the new priority is greater than
         Thread.MAX_PRIORITY or less than Thread.MIN_PRIORITY</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the new priority is greater than
         Thread.MAX_PRIORITY or less than Thread.MIN_PRIORITY</exception>
        <altmember cref="P:Java.Lang.ThreadGroup.MaxPriority" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the new priority is greater than
         Thread.MAX_PRIORITY or less than Thread.MIN_PRIORITY</exception>
        <altmember cref="P:Java.Lang.ThreadGroup.MaxPriority" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getName", "()Ljava/lang/String;", "GetGetNameHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the name of this thread group.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the name of this thread group.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/ThreadGroup.html#getName()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public Java.Lang.ThreadGroup Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ThreadGroup Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getParent", "()Ljava/lang/ThreadGroup;", "GetGetParentHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ThreadGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns this thread group's parent <c>ThreadGroup</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns this thread group's parent <c>ThreadGroup</c>. It can be null if this
 is the the root ThreadGroup.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/ThreadGroup.html#getParent()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ParentOf">
      <MemberSignature Language="C#" Value="public bool ParentOf (Java.Lang.ThreadGroup g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ParentOf(class Java.Lang.ThreadGroup g) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parentOf", "(Ljava/lang/ThreadGroup;)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="Java.Lang.ThreadGroup" />
      </Parameters>
      <Docs>
        <param name="g">the potential child <c>ThreadGroup</c></param>
        <summary>Checks whether this thread group is a direct or indirect parent group of a
 given <c>ThreadGroup</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Checks whether this thread group is a direct or indirect parent group of a
 given <c>ThreadGroup</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/ThreadGroup.html#parentOf(java.lang.ThreadGroup)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resume", "()V", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resumes every thread in this group and recursively in all its
 subgroups.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Resumes every thread in this group and recursively in all its
 subgroups.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/ThreadGroup.html#resume()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Thread.Resume" />
        <altmember cref="M:Java.Lang.ThreadGroup.Suspend" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("stop", "()V", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stops every thread in this group and recursively in all its subgroups.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Stops every thread in this group and recursively in all its subgroups.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/ThreadGroup.html#stop()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Thread.Stop" />
        <altmember cref="M:Java.Lang.Thread.Stop(Java.Lang.Throwable)" />
        <altmember cref="T:Java.Lang.ThreadDeath" />
      </Docs>
    </Member>
    <Member MemberName="Suspend">
      <MemberSignature Language="C#" Value="public void Suspend ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Suspend() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("suspend", "()V", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Suspends every thread in this group and recursively in all its
 subgroups.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Suspends every thread in this group and recursively in all its
 subgroups.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/ThreadGroup.html#suspend()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Thread.Suspend" />
        <altmember cref="M:Java.Lang.ThreadGroup.Resume" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UncaughtException">
      <MemberSignature Language="C#" Value="public virtual void UncaughtException (Java.Lang.Thread t, Java.Lang.Throwable e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UncaughtException(class Java.Lang.Thread t, class Java.Lang.Throwable e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("uncaughtException", "(Ljava/lang/Thread;Ljava/lang/Throwable;)V", "GetUncaughtException_Ljava_lang_Thread_Ljava_lang_Throwable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="Java.Lang.Thread" />
        <Parameter Name="e" Type="Java.Lang.Throwable" />
      </Parameters>
      <Docs>
        <param name="t">the Thread that terminated with an uncaught exception</param>
        <param name="e">the uncaught exception itself
</param>
        <summary>Handles uncaught exceptions.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Handles uncaught exceptions. Any uncaught exception in any <c>Thread</c>
 is forwarded to the thread's <c>ThreadGroup</c> by invoking this
 method.

 </para>
          <para tool="javadoc-to-mdoc">New code should use <c><see cref="P:Java.Lang.Thread.UncaughtExceptionHandler" /></c> instead of thread groups.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/ThreadGroup.html#uncaughtException(java.lang.Thread, java.lang.Throwable)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>