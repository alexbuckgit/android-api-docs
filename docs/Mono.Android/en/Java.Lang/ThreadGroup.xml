<Type Name="ThreadGroup" FullName="Java.Lang.ThreadGroup">
  <TypeSignature Language="C#" Value="public class ThreadGroup : Java.Lang.Object, IDisposable, Java.Lang.Thread.IUncaughtExceptionHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ThreadGroup extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Lang.Thread/IUncaughtExceptionHandler, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Lang.ThreadGroup" />
  <TypeSignature Language="F#" Value="type ThreadGroup = class&#xA;    inherit Object&#xA;    interface Thread.IUncaughtExceptionHandler&#xA;    interface IJavaObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.Thread+IUncaughtExceptionHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/lang/ThreadGroup", ApiSince=1, DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>
      <c>ThreadGroup</c> is a means of organizing threads into a hierarchical structure.</summary>
    <remarks />
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadGroup (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.#ctor(System.String)" />
      <MemberSignature Language="F#" Value="new Java.Lang.ThreadGroup : string -&gt; Java.Lang.ThreadGroup" Usage="new Java.Lang.ThreadGroup name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>Constructs a new <c>ThreadGroup</c> with the given name.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Thread.CurrentThread" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThreadGroup (Java.Lang.ThreadGroup parent, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Lang.ThreadGroup parent, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.#ctor(Java.Lang.ThreadGroup,System.String)" />
      <MemberSignature Language="F#" Value="new Java.Lang.ThreadGroup : Java.Lang.ThreadGroup * string -&gt; Java.Lang.ThreadGroup" Usage="new Java.Lang.ThreadGroup (parent, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/ThreadGroup;Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parent" Type="Java.Lang.ThreadGroup" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parent">To be added.</param>
        <param name="name">To be added.</param>
        <summary>Constructs a new <c>ThreadGroup</c> with the given name, as a child of the
 given <c>ThreadGroup</c>.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>parent == null</c></exception>
        <exception cref="T:Java.Lang.IllegalThreadStateException">if <c>parent</c> has been
         destroyed already
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ThreadGroup (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Lang.ThreadGroup : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Lang.ThreadGroup" Usage="new Java.Lang.ThreadGroup (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ActiveCount">
      <MemberSignature Language="C#" Value="public virtual int ActiveCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ActiveCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.ActiveCount" />
      <MemberSignature Language="F#" Value="abstract member ActiveCount : unit -&gt; int&#xA;override this.ActiveCount : unit -&gt; int" Usage="threadGroup.ActiveCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("activeCount", "()I", "GetActiveCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the number of running <c>Thread</c>s which are children of this thread group,
 directly or indirectly.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ActiveGroupCount">
      <MemberSignature Language="C#" Value="public virtual int ActiveGroupCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ActiveGroupCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.ActiveGroupCount" />
      <MemberSignature Language="F#" Value="abstract member ActiveGroupCount : unit -&gt; int&#xA;override this.ActiveGroupCount : unit -&gt; int" Usage="threadGroup.ActiveGroupCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("activeGroupCount", "()I", "GetActiveGroupCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the number of <c>ThreadGroup</c>s which are children of this group,
 directly or indirectly.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AllowThreadSuspension">
      <MemberSignature Language="C#" Value="public virtual bool AllowThreadSuspension (bool b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AllowThreadSuspension(bool b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.AllowThreadSuspension(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member AllowThreadSuspension : bool -&gt; bool&#xA;override this.AllowThreadSuspension : bool -&gt; bool" Usage="threadGroup.AllowThreadSuspension b" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("allowThreadSuspension", "(Z)Z", "GetAllowThreadSuspension_ZHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="b" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="b">Used to control low memory implicit suspension</param>
        <summary>Does nothing.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public void CheckAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.CheckAccess" />
      <MemberSignature Language="F#" Value="member this.CheckAccess : unit -&gt; unit" Usage="threadGroup.CheckAccess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("checkAccess", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Does nothing.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Daemon">
      <MemberSignature Language="C#" Value="public bool Daemon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Daemon" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.ThreadGroup.Daemon" />
      <MemberSignature Language="F#" Value="member this.Daemon : bool with get, set" Usage="Java.Lang.ThreadGroup.Daemon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isDaemon", "()Z", "GetIsDaemonHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setDaemon", "(Z)V", "GetSetDaemon_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Checks whether this thread group is a daemon <c>ThreadGroup</c>.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Java.Lang.ThreadGroup.Daemon" />
        <altmember cref="M:Java.Lang.ThreadGroup.Destroy" />
        <altmember cref="P:Java.Lang.ThreadGroup.Daemon" />
        <altmember cref="M:Java.Lang.ThreadGroup.Destroy" />
      </Docs>
    </Member>
    <Member MemberName="Destroy">
      <MemberSignature Language="C#" Value="public void Destroy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Destroy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.Destroy" />
      <MemberSignature Language="F#" Value="member this.Destroy : unit -&gt; unit" Usage="threadGroup.Destroy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("destroy", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Destroys this thread group and recursively all its subgroups.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalThreadStateException">if this thread group or any of its
         subgroups has been destroyed already or if it still contains
         threads.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Enumerate">
      <MemberSignature Language="C#" Value="public virtual int Enumerate (Java.Lang.Thread[] list);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Enumerate(class Java.Lang.Thread[] list) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.Enumerate(Java.Lang.Thread[])" />
      <MemberSignature Language="F#" Value="abstract member Enumerate : Java.Lang.Thread[] -&gt; int&#xA;override this.Enumerate : Java.Lang.Thread[] -&gt; int" Usage="threadGroup.Enumerate list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("enumerate", "([Ljava/lang/Thread;)I", "GetEnumerate_arrayLjava_lang_Thread_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="Java.Lang.Thread[]" />
      </Parameters>
      <Docs>
        <param name="list">To be added.</param>
        <summary>Iterates over all active threads in this group (and its sub-groups) and
 stores the threads in the given array.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Enumerate">
      <MemberSignature Language="C#" Value="public virtual int Enumerate (Java.Lang.ThreadGroup[] list);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Enumerate(class Java.Lang.ThreadGroup[] list) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.Enumerate(Java.Lang.ThreadGroup[])" />
      <MemberSignature Language="F#" Value="abstract member Enumerate : Java.Lang.ThreadGroup[] -&gt; int&#xA;override this.Enumerate : Java.Lang.ThreadGroup[] -&gt; int" Usage="threadGroup.Enumerate list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("enumerate", "([Ljava/lang/ThreadGroup;)I", "GetEnumerate_arrayLjava_lang_ThreadGroup_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="Java.Lang.ThreadGroup[]" />
      </Parameters>
      <Docs>
        <param name="list">To be added.</param>
        <summary>Iterates over all thread groups in this group (and its sub-groups) and
 and stores the groups in the given array.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Enumerate">
      <MemberSignature Language="C#" Value="public virtual int Enumerate (Java.Lang.Thread[] list, bool recurse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Enumerate(class Java.Lang.Thread[] list, bool recurse) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.Enumerate(Java.Lang.Thread[],System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Enumerate : Java.Lang.Thread[] * bool -&gt; int&#xA;override this.Enumerate : Java.Lang.Thread[] * bool -&gt; int" Usage="threadGroup.Enumerate (list, recurse)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("enumerate", "([Ljava/lang/Thread;Z)I", "GetEnumerate_arrayLjava_lang_Thread_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="Java.Lang.Thread[]" />
        <Parameter Name="recurse" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="list">To be added.</param>
        <param name="recurse">indicates whether <c>Thread</c>s in subgroups should be
        recursively copied as well</param>
        <summary>Iterates over all active threads in this group (and, optionally, its
 sub-groups) and stores the threads in the given array.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Enumerate">
      <MemberSignature Language="C#" Value="public virtual int Enumerate (Java.Lang.ThreadGroup[] list, bool recurse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Enumerate(class Java.Lang.ThreadGroup[] list, bool recurse) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.Enumerate(Java.Lang.ThreadGroup[],System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Enumerate : Java.Lang.ThreadGroup[] * bool -&gt; int&#xA;override this.Enumerate : Java.Lang.ThreadGroup[] * bool -&gt; int" Usage="threadGroup.Enumerate (list, recurse)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("enumerate", "([Ljava/lang/ThreadGroup;Z)I", "GetEnumerate_arrayLjava_lang_ThreadGroup_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="Java.Lang.ThreadGroup[]" />
        <Parameter Name="recurse" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="list">To be added.</param>
        <param name="recurse">indicates whether <c>ThreadGroup</c>s in subgroups should be
        recursively copied as well or not</param>
        <summary>Iterates over all thread groups in this group (and, optionally, its
 sub-groups) and stores the groups in the given array.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Interrupt">
      <MemberSignature Language="C#" Value="public void Interrupt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Interrupt() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.Interrupt" />
      <MemberSignature Language="F#" Value="member this.Interrupt : unit -&gt; unit" Usage="threadGroup.Interrupt " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("interrupt", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Interrupts every <c>Thread</c> in this group and recursively in all its
 subgroups.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Thread.Interrupt" />
      </Docs>
    </Member>
    <Member MemberName="IsDestroyed">
      <MemberSignature Language="C#" Value="public virtual bool IsDestroyed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDestroyed" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.ThreadGroup.IsDestroyed" />
      <MemberSignature Language="F#" Value="member this.IsDestroyed : bool" Usage="Java.Lang.ThreadGroup.IsDestroyed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isDestroyed", "()Z", "GetIsDestroyedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Checks whether this thread group has already been destroyed.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.ThreadGroup.Destroy" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.ThreadGroup.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Lang.ThreadGroup.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public virtual void List ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void List() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.List" />
      <MemberSignature Language="F#" Value="abstract member List : unit -&gt; unit&#xA;override this.List : unit -&gt; unit" Usage="threadGroup.List " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("list", "()V", "GetListHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Outputs to <c>System.out</c> a text representation of the
 hierarchy of <c>Thread</c>s and <c>ThreadGroup</c>s in this thread group (and recursively).</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MaxPriority">
      <MemberSignature Language="C#" Value="public int MaxPriority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxPriority" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.ThreadGroup.MaxPriority" />
      <MemberSignature Language="F#" Value="member this.MaxPriority : int with get, set" Usage="Java.Lang.ThreadGroup.MaxPriority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMaxPriority", "()I", "GetGetMaxPriorityHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setMaxPriority", "(I)V", "GetSetMaxPriority_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the maximum allowed priority for a <c>Thread</c> in this thread group.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the new priority is greater than
         Thread.MAX_PRIORITY or less than Thread.MIN_PRIORITY</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the new priority is greater than
         Thread.MAX_PRIORITY or less than Thread.MIN_PRIORITY</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the new priority is greater than
         Thread.MAX_PRIORITY or less than Thread.MIN_PRIORITY</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the new priority is greater than
         Thread.MAX_PRIORITY or less than Thread.MIN_PRIORITY</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the new priority is greater than
         Thread.MAX_PRIORITY or less than Thread.MIN_PRIORITY</exception>
        <altmember cref="P:Java.Lang.ThreadGroup.MaxPriority" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the new priority is greater than
         Thread.MAX_PRIORITY or less than Thread.MIN_PRIORITY</exception>
        <altmember cref="P:Java.Lang.ThreadGroup.MaxPriority" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.ThreadGroup.Name" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Java.Lang.ThreadGroup.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getName", "()Ljava/lang/String;", "GetGetNameHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the name of this thread group.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public Java.Lang.ThreadGroup Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ThreadGroup Parent" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.ThreadGroup.Parent" />
      <MemberSignature Language="F#" Value="member this.Parent : Java.Lang.ThreadGroup" Usage="Java.Lang.ThreadGroup.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getParent", "()Ljava/lang/ThreadGroup;", "GetGetParentHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ThreadGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns this thread group's parent <c>ThreadGroup</c>.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ParentOf">
      <MemberSignature Language="C#" Value="public bool ParentOf (Java.Lang.ThreadGroup g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ParentOf(class Java.Lang.ThreadGroup g) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.ParentOf(Java.Lang.ThreadGroup)" />
      <MemberSignature Language="F#" Value="member this.ParentOf : Java.Lang.ThreadGroup -&gt; bool" Usage="threadGroup.ParentOf g" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parentOf", "(Ljava/lang/ThreadGroup;)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="Java.Lang.ThreadGroup" />
      </Parameters>
      <Docs>
        <param name="g">the potential child <c>ThreadGroup</c></param>
        <summary>Checks whether this thread group is a direct or indirect parent group of a
 given <c>ThreadGroup</c>.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.Resume" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="threadGroup.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resume", "()V", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resumes every thread in this group and recursively in all its
 subgroups.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Thread.Resume" />
        <altmember cref="M:Java.Lang.ThreadGroup.Suspend" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.Stop" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="threadGroup.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("stop", "()V", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stops every thread in this group and recursively in all its subgroups.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Thread.Stop" />
        <altmember cref="M:Java.Lang.Thread.Stop(Java.Lang.Throwable)" />
        <altmember cref="T:Java.Lang.ThreadDeath" />
      </Docs>
    </Member>
    <Member MemberName="Suspend">
      <MemberSignature Language="C#" Value="public void Suspend ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Suspend() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.Suspend" />
      <MemberSignature Language="F#" Value="member this.Suspend : unit -&gt; unit" Usage="threadGroup.Suspend " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("suspend", "()V", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Suspends every thread in this group and recursively in all its
 subgroups.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Thread.Suspend" />
        <altmember cref="M:Java.Lang.ThreadGroup.Resume" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.ThreadGroup.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Lang.ThreadGroup.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.ThreadGroup.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Lang.ThreadGroup.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="UncaughtException">
      <MemberSignature Language="C#" Value="public virtual void UncaughtException (Java.Lang.Thread t, Java.Lang.Throwable e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UncaughtException(class Java.Lang.Thread t, class Java.Lang.Throwable e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.ThreadGroup.UncaughtException(Java.Lang.Thread,Java.Lang.Throwable)" />
      <MemberSignature Language="F#" Value="abstract member UncaughtException : Java.Lang.Thread * Java.Lang.Throwable -&gt; unit&#xA;override this.UncaughtException : Java.Lang.Thread * Java.Lang.Throwable -&gt; unit" Usage="threadGroup.UncaughtException (t, e)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.Thread.IUncaughtExceptionHandler.UncaughtException(Java.Lang.Thread,Java.Lang.Throwable)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("uncaughtException", "(Ljava/lang/Thread;Ljava/lang/Throwable;)V", "GetUncaughtException_Ljava_lang_Thread_Ljava_lang_Throwable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="Java.Lang.Thread" />
        <Parameter Name="e" Type="Java.Lang.Throwable" />
      </Parameters>
      <Docs>
        <param name="t">the Thread that terminated with an uncaught exception</param>
        <param name="e">the uncaught exception itself
</param>
        <summary>Handles uncaught exceptions.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
