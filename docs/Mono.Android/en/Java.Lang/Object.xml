<Type Name="Object" FullName="Java.Lang.Object">
  <TypeSignature Language="C#" Value="public class Object : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaObjectEx" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Object extends System.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaObjectEx, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaObjectEx</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/lang/Object", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>The root class of the Java class hierarchy.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">The root class of the Java class hierarchy. All non-primitive types
 (including arrays) inherit either directly or indirectly from this class.

 </para>
      <para tool="javadoc-to-mdoc">Follow this style to write a canonical <c>equals</c> method:
 <example><code lang="java">
   // Use @Override to avoid accidental overloading.
   &amp;#x0040;Override public boolean equals(Object o) {
     // Return true if the objects are identical.
     // (This is just an optimization, not required for correctness.)
     if (this == o) {
       return true;
     }

     // Return false if the other object has the wrong type.
     // This type may be an interface depending on the interface's specification.
     if (!(o instanceof MyType)) {
       return false;
     }

     // Cast to the appropriate type.
     // This will succeed because of the instanceof, and lets us access private fields.
     MyType lhs = (MyType) o;

     // Check each field. Primitive fields, reference fields, and nullable reference
     // fields are all treated differently.
     return primitiveField == lhs.primitiveField &amp;&amp;
             referenceField.equals(lhs.referenceField) &amp;&amp;
             (nullableField == null ? lhs.nullableField == null
                                    : nullableField.equals(lhs.nullableField));
   }
 </code></example></para>
      <para tool="javadoc-to-mdoc">If you override <c>equals</c>, you should also override <c>hashCode</c>: equal
 instances must have equal hash codes.

 </para>
      <para tool="javadoc-to-mdoc">See <format type="text/html"><i>Effective Java</i></format> item 8 for much more detail and clarification.

 </para>
      <para tool="javadoc-to-mdoc">Follow this style to write a canonical <c>hashCode</c> method:
 <example><code lang="java">
   &amp;#x0040;Override public int hashCode() {
     // Start with a non-zero constant.
     int result = 17;

     // Include a hash for each field.
     result = 31 * result + (booleanField ? 1 : 0);

     result = 31 * result + byteField;
     result = 31 * result + charField;
     result = 31 * result + shortField;
     result = 31 * result + intField;

     result = 31 * result + (int) (longField ^ (longField &gt;&gt;&gt; 32));

     result = 31 * result + Float.floatToIntBits(floatField);

     long doubleFieldBits = Double.doubleToLongBits(doubleField);
     result = 31 * result + (int) (doubleFieldBits ^ (doubleFieldBits &gt;&gt;&gt; 32));

     result = 31 * result + Arrays.hashCode(arrayField);

     result = 31 * result + referenceField.hashCode();
     result = 31 * result +
         (nullableReferenceField == null ? 0
                                         : nullableReferenceField.hashCode());

     return result;
   }
 </code></example></para>
      <para tool="javadoc-to-mdoc">If you don't intend your type to be used as a hash key, don't simply rely on the default
 <c>hashCode</c> implementation, because that silently and non-obviously breaks any future
 code that does use your type as a hash key. You should throw instead:
 <example><code lang="java">
   &amp;#x0040;Override public int hashCode() {
     throw new UnsupportedOperationException();
   }
 </code></example></para>
      <para tool="javadoc-to-mdoc">See <format type="text/html"><i>Effective Java</i></format> item 9 for much more detail and clarification.

 </para>
      <para tool="javadoc-to-mdoc">For debugging convenience, it's common to override <c>toString</c> in this style:
 <example><code lang="java">
   &amp;#x0040;Override public String toString() {
     return getClass().getName() + "[" +
         "primitiveField=" + primitiveField + ", " +
         "referenceField=" + referenceField + ", " +
         "arrayField=" + Arrays.toString(arrayField) + "]";
   }
 </code></example></para>
      <para tool="javadoc-to-mdoc">The set of fields to include is generally the same as those that would be tested
 in your <c>equals</c> implementation.
 </para>
      <para tool="javadoc-to-mdoc">See <format type="text/html"><i>Effective Java</i></format> item 10 for much more detail and clarification.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/java/lang/Object.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Object ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Constructs a new instance of <c>Object</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new instance of <c>Object</c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/Object.html#Object()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Object (IntPtr handle, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="handle">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="handle" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="handle" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public Java.Lang.Class Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.Class Class" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getClass", "()Ljava/lang/Class;", "GetGetClassHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the unique instance of <c><see cref="T:Java.Lang.Class" /></c> that represents this
 object's class.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the unique instance of <c><see cref="T:Java.Lang.Class" /></c> that represents this
 object's class. Note that <c>getClass()</c> is a special case in that it
 actually returns <c>Class&lt;? extends Foo&gt;</c> where <c>Foo</c> is the
 erasure of the type of the expression <c>getClass()</c> was called upon.
 </para>
          <para tool="javadoc-to-mdoc">
 As an example, the following code actually compiles, although one might
 think it shouldn't:
 </para>
          <para tool="javadoc-to-mdoc">
            <example>
              <code lang="java">List l = new ArrayList();
   Class&lt;? extends List&gt; c = l.getClass();</code>
            </example>
          </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/Object.html#getClass()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected virtual Java.Lang.Object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Lang.Object Clone() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clone", "()Ljava/lang/Object;", "GetCloneHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates and returns a copy of this <c>Object</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates and returns a copy of this <c>Object</c>. The default
 implementation returns a so-called "shallow" copy: It creates a new
 instance of the same class and then copies the field values (including
 object references) from this instance to the new instance. A "deep" copy,
 in contrast, would also recursively clone nested objects. A subclass that
 needs to implement this kind of cloning should call <c>super.clone()</c>
 to create the new instance and then create deep copies of the nested,
 mutable objects.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/Object.html#clone()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.CloneNotSupportedException">if this object's class does not implement the <c>Cloneable</c> interface.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public virtual bool Equals (Java.Lang.Object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class Java.Lang.Object o) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("equals", "(Ljava/lang/Object;)Z", "GetEquals_Ljava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="o">the object to compare this instance with.</param>
        <summary>Compares this instance with the specified object and indicates if they
 are equal.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Compares this instance with the specified object and indicates if they
 are equal. In order to be equal, <c>o</c> must represent the same object
 as this instance using a class-specific comparison. The general contract
 is that this comparison should be reflexive, symmetric, and transitive.
 Also, no object reference other than null is equal to null.

 </para>
          <para tool="javadoc-to-mdoc">The default implementation returns <c>true</c> only if <c>this ==
 o</c>. See <see cref="!:Java.Lang.Object.writing_equals" />
 if you intend implementing your own <c>equals</c> method.

 </para>
          <para tool="javadoc-to-mdoc">The general contract for the <c>equals</c> and <c><see cref="M:Java.Lang.Object.GetHashCode" /></c> methods is that if <c>equals</c> returns <c>true</c> for
 any two objects, then <c>hashCode()</c> must return the same value for
 these objects. This means that subclasses of <c>Object</c> usually
 override either both methods or neither of them.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Object ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromArray&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Java.Lang.Object FromArray&lt;T&gt; (T[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Object FromArray&lt;T&gt;(!!T[] value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="T[]" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("hashCode", "()I", "GetGetHashCodeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an integer hash code for this object.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns an integer hash code for this object. By contract, any two
 objects for which <c><see cref="M:Java.Lang.Object.Equals(Java.Lang.Object)" /></c> returns <c>true</c> must return
 the same hash code value. This means that subclasses of <c>Object</c>
 usually override both methods or neither method.

 </para>
          <para tool="javadoc-to-mdoc">Note that hash values must not change over time unless information used in equals
 comparisons also changes.

 </para>
          <para tool="javadoc-to-mdoc">See <see cref="!:Java.Lang.Object.writing_hashCode" />
 if you intend implementing your own <c>hashCode</c> method.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/Object.html#hashCode()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Object.Equals(Java.Lang.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetObject&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetObject&lt;T&gt; (IntPtr handle, Android.Runtime.JniHandleOwnership transfer) where T : class, Android.Runtime.IJavaObject;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetObject&lt;class (class Android.Runtime.IJavaObject) T&gt;(native int handle, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          The type of the object to return. This type must be a reference type
          and implement the <see cref="T:Android.Runtime.IJavaObject" />
          interface.
        </typeparam>
        <param name="handle">
          A <see cref="T:System.IntPtr" /> containing a Java Native Interface 
          (JNI) object reference.
        </param>
        <param name="transfer">To be added.</param>
        <summary>
          Wraps a JNI object reference into a fully typed 
          <see cref="T:Android.Runtime.IJavaObject" /> implementation.
        </summary>
        <returns>
          A <typeparamref name="T" /> instance which references that Android
          object instance <paramref name="handle" />.
        </returns>
        <remarks>
          <para>
            Use this method to easily obtain a reference around a pre-existing
            Java Native Interface object reference.
          </para>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <para>
            <paramref name="handle" /> is not of the appropriate type,
            as determied by <see cref="M:Android.Runtime.JNIEnv.IsInstanceOf" />.
          </para>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetObject&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetObject&lt;T&gt; (IntPtr jnienv, IntPtr handle, Android.Runtime.JniHandleOwnership transfer) where T : class, Android.Runtime.IJavaObject;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetObject&lt;class (class Android.Runtime.IJavaObject) T&gt;(native int jnienv, native int handle, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="jnienv" Type="System.IntPtr" />
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="jnienv">To be added.</param>
        <param name="handle">To be added.</param>
        <param name="transfer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          The handle to the underlying Android instance.
        </summary>
        <value>
          A <see cref="T:System.IntPtr" /> containing the value of the handle
          of the underlying Android instance.
        </value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Java.Interop.IJavaObjectEx.IsProxy">
      <MemberSignature Language="C#" Value="bool Java.Interop.IJavaObjectEx.IsProxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Java.Interop.IJavaObjectEx.IsProxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Java.Interop.IJavaObjectEx.KeyHandle">
      <MemberSignature Language="C#" Value="IntPtr Java.Interop.IJavaObjectEx.KeyHandle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Java.Interop.IJavaObjectEx.KeyHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Java.Interop.IJavaObjectEx.NeedsActivation">
      <MemberSignature Language="C#" Value="bool Java.Interop.IJavaObjectEx.NeedsActivation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Java.Interop.IJavaObjectEx.NeedsActivation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Java.Interop.IJavaObjectEx.ToLocalJniHandle">
      <MemberSignature Language="C#" Value="IntPtr IJavaObjectEx.ToLocalJniHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance native int Java.Interop.IJavaObjectEx.ToLocalJniHandle() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JavaFinalize">
      <MemberSignature Language="C#" Value="protected virtual void JavaFinalize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void JavaFinalize() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("finalize", "()V", "GetJavaFinalizeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Invoked when the garbage collector has detected that this instance is no longer reachable.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Invoked when the garbage collector has detected that this instance is no longer reachable.
 The default implementation does nothing, but this method can be overridden to free resources.

 </para>
          <para tool="javadoc-to-mdoc">Note that objects that override <c>finalize</c> are significantly more expensive than
 objects that don't. Finalizers may be run a long time after the object is no longer
 reachable, depending on memory pressure, so it's a bad idea to rely on them for cleanup.
 Note also that finalizers are run on a single VM-wide finalizer thread,
 so doing blocking work in a finalizer is a bad idea. A finalizer is usually only necessary
 for a class that has a native peer and needs to call a native method to destroy that peer.
 Even then, it's better to provide an explicit <c>close</c> method (and implement
 <c><see cref="T:Java.IO.ICloseable" /></c>), and insist that callers manually dispose of instances. This
 works well for something like files, but less well for something like a <c>BigInteger</c>
 where typical calling code would have to deal with lots of temporaries. Unfortunately,
 code that creates lots of temporaries is the worst kind of code from the point of view of
 the single finalizer thread.

 </para>
          <para tool="javadoc-to-mdoc">If you <format type="text/html"><i>must</i></format> use finalizers, consider at least providing your own
 <c><see cref="T:Java.Lang.Ref.ReferenceQueue" /></c> and having your own thread process that queue.

 </para>
          <para tool="javadoc-to-mdoc">Unlike constructors, finalizers are not automatically chained. You are responsible for
 calling <c>super.finalize()</c> yourself.

 </para>
          <para tool="javadoc-to-mdoc">Uncaught exceptions thrown by finalizers are ignored and do not terminate the finalizer
 thread.

 See <format type="text/html"><i>Effective Java</i></format> Item 7, "Avoid finalizers" for more.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/Object.html#finalize()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.Throwable" />
      </Docs>
    </Member>
    <Member MemberName="Notify">
      <MemberSignature Language="C#" Value="public void Notify ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Notify() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("notify", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Causes a thread which is waiting on this object's monitor (by means of
 calling one of the <c>wait()</c> methods) to be woken up.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Causes a thread which is waiting on this object's monitor (by means of
 calling one of the <c>wait()</c> methods) to be woken up. If more than
 one thread is waiting, one of them is chosen at the discretion of the
 VM. The chosen thread will not run immediately. The thread
 that called <c>notify()</c> has to release the object's monitor first.
 Also, the chosen thread still has to compete against other threads that
 try to synchronize on the same object.

 </para>
          <para tool="javadoc-to-mdoc">This method can only be invoked by a thread which owns this object's
 monitor. A thread becomes owner of an object's monitor
 <list type="bullet"><item><term>by executing a synchronized method of that object;</term></item><item><term>by executing the body of a <c>synchronized</c> statement that
 synchronizes on the object;</term></item><item><term>by executing a synchronized static method if the object is of type
 <c>Class</c>.</term></item></list></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/Object.html#notify()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Object.NotifyAll" />
        <altmember cref="M:Java.Lang.Object.Wait" />
        <altmember cref="M:Java.Lang.Object.Wait(System.Int64)" />
        <altmember cref="M:Java.Lang.Object.Wait(System.Int64, System.Int32)" />
        <altmember cref="T:Java.Lang.Thread" />
      </Docs>
    </Member>
    <Member MemberName="NotifyAll">
      <MemberSignature Language="C#" Value="public void NotifyAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void NotifyAll() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("notifyAll", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Causes all threads which are waiting on this object's monitor (by means
 of calling one of the <c>wait()</c> methods) to be woken up.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Causes all threads which are waiting on this object's monitor (by means
 of calling one of the <c>wait()</c> methods) to be woken up. The threads
 will not run immediately. The thread that called <c>notify()</c> has to
 release the object's monitor first. Also, the threads still have to
 compete against other threads that try to synchronize on the same object.

 </para>
          <para tool="javadoc-to-mdoc">This method can only be invoked by a thread which owns this object's
 monitor. A thread becomes owner of an object's monitor
 <list type="bullet"><item><term>by executing a synchronized method of that object;</term></item><item><term>by executing the body of a <c>synchronized</c> statement that
 synchronizes on the object;</term></item><item><term>by executing a synchronized static method if the object is of type
 <c>Class</c>.</term></item></list></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/Object.html#notifyAll()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalMonitorStateException">if the thread calling this method is not the owner of this
             object's monitor.</exception>
        <altmember cref="M:Java.Lang.Object.Notify" />
        <altmember cref="M:Java.Lang.Object.Wait" />
        <altmember cref="M:Java.Lang.Object.Wait(System.Int64)" />
        <altmember cref="M:Java.Lang.Object.Wait(System.Int64, System.Int32)" />
        <altmember cref="T:Java.Lang.Thread" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static Java.Lang.Object[] op_Explicit (Java.Lang.Object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Java.Lang.Object[] op_Explicit(class Java.Lang.Object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Lang.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static bool op_Explicit (Java.Lang.Object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Explicit(class Java.Lang.Object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static bool[] op_Explicit (Java.Lang.Object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool[] op_Explicit(class Java.Lang.Object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static byte[] op_Explicit (Java.Lang.Object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int8[] op_Explicit(class Java.Lang.Object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static char op_Explicit (Java.Lang.Object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname char op_Explicit(class Java.Lang.Object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static char[] op_Explicit (Java.Lang.Object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname char[] op_Explicit(class Java.Lang.Object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static double op_Explicit (Java.Lang.Object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float64 op_Explicit(class Java.Lang.Object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static double[] op_Explicit (Java.Lang.Object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float64[] op_Explicit(class Java.Lang.Object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static int op_Explicit (Java.Lang.Object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int32 op_Explicit(class Java.Lang.Object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static int[] op_Explicit (Java.Lang.Object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int32[] op_Explicit(class Java.Lang.Object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static long op_Explicit (Java.Lang.Object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int64 op_Explicit(class Java.Lang.Object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static long[] op_Explicit (Java.Lang.Object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int64[] op_Explicit(class Java.Lang.Object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static sbyte op_Explicit (Java.Lang.Object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int8 op_Explicit(class Java.Lang.Object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static float op_Explicit (Java.Lang.Object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float32 op_Explicit(class Java.Lang.Object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static float[] op_Explicit (Java.Lang.Object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float32[] op_Explicit(class Java.Lang.Object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static string op_Explicit (Java.Lang.Object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname string op_Explicit(class Java.Lang.Object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static string[] op_Explicit (Java.Lang.Object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname string[] op_Explicit(class Java.Lang.Object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static Java.Lang.Object op_Implicit (Java.Lang.Object[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Java.Lang.Object op_Implicit(class Java.Lang.Object[] value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Java.Lang.Object[]" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static Java.Lang.Object op_Implicit (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Java.Lang.Object op_Implicit(bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static Java.Lang.Object op_Implicit (bool[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Java.Lang.Object op_Implicit(bool[] value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean[]" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static Java.Lang.Object op_Implicit (byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Java.Lang.Object op_Implicit(unsigned int8[] value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static Java.Lang.Object op_Implicit (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Java.Lang.Object op_Implicit(char value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static Java.Lang.Object op_Implicit (char[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Java.Lang.Object op_Implicit(char[] value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static Java.Lang.Object op_Implicit (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Java.Lang.Object op_Implicit(float64 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static Java.Lang.Object op_Implicit (double[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Java.Lang.Object op_Implicit(float64[] value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static Java.Lang.Object op_Implicit (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Java.Lang.Object op_Implicit(int32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static Java.Lang.Object op_Implicit (int[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Java.Lang.Object op_Implicit(int32[] value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static Java.Lang.Object op_Implicit (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Java.Lang.Object op_Implicit(int64 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static Java.Lang.Object op_Implicit (long[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Java.Lang.Object op_Implicit(int64[] value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64[]" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static Java.Lang.Object op_Implicit (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Java.Lang.Object op_Implicit(int8 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static Java.Lang.Object op_Implicit (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Java.Lang.Object op_Implicit(float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static Java.Lang.Object op_Implicit (float[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Java.Lang.Object op_Implicit(float32[] value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static Java.Lang.Object op_Implicit (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Java.Lang.Object op_Implicit(string value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static Java.Lang.Object op_Implicit (string[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class Java.Lang.Object op_Implicit(string[] value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHandle">
      <MemberSignature Language="C#" Value="protected void SetHandle (IntPtr value, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetHandle(native int value, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="value">
          An <see cref="T:System.IntPtr" /> containing the new value to return
          from <see cref="P:Java.Lang.Object.Handle" />.
        </param>
        <param name="transfer">To be added.</param>
        <summary>
          Sets the <see cref="P:Java.Lang.Object.Handle" /> property.
        </summary>
        <remarks>
          <para>
            Use the <c>SetHandle</c> method from default constructors to
            set the underlying Android object returned by the
            <see cref="P:Java.Lang.Object.Handle" /> property.
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected virtual IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected virtual Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToArray&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T[] ToArray&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T[] ToArray&lt;T&gt;() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("toString", "()Ljava/lang/String;", "GetToStringHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a string containing a concise, human-readable description of this
 object.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a string containing a concise, human-readable description of this
 object. Subclasses are encouraged to override this method and provide an
 implementation that takes into account the object's type and data. The
 default implementation is equivalent to the following expression:
 <example><code lang="java">
   getClass().getName() + '@' + Integer.toHexString(hashCode())</code></example></para>
          <para tool="javadoc-to-mdoc">See <see cref="!:Java.Lang.Object.writing_toString" />
 if you intend implementing your own <c>toString</c> method.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/Object.html#toString()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public void Wait ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Wait() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("wait", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Causes the calling thread to wait until another thread calls the <c>notify()</c> or <c>notifyAll()</c> method of this object.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Causes the calling thread to wait until another thread calls the <c>notify()</c> or <c>notifyAll()</c> method of this object. This method can
 only be invoked by a thread which owns this object's monitor; see
 <c><see cref="M:Java.Lang.Object.Notify" /></c> on how a thread can become the owner of a monitor.

 </para>
          <para tool="javadoc-to-mdoc">A waiting thread can be sent <c>interrupt()</c> to cause it to
 prematurely stop waiting, so <c>wait</c> should be called in a loop to
 check that the condition that has been waited for has been met before
 continuing.

 </para>
          <para tool="javadoc-to-mdoc">While the thread waits, it gives up ownership of this object's
 monitor. When it is notified (or interrupted), it re-acquires the monitor
 before it starts running.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/Object.html#wait()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalMonitorStateException">if the thread calling this method is not the owner of this
             object's monitor.</exception>
        <exception cref="T:Java.Lang.InterruptedException">if the current thread has been interrupted.
             The interrupted status of the current thread will be cleared before the exception
             is thrown.</exception>
        <altmember cref="M:Java.Lang.Object.Notify" />
        <altmember cref="M:Java.Lang.Object.NotifyAll" />
        <altmember cref="M:Java.Lang.Object.Wait(System.Int64)" />
        <altmember cref="M:Java.Lang.Object.Wait(System.Int64, System.Int32)" />
        <altmember cref="T:Java.Lang.Thread" />
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public void Wait (long millis);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Wait(int64 millis) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("wait", "(J)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millis" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="millis">the maximum time to wait in milliseconds.</param>
        <summary>Causes the calling thread to wait until another thread calls the <c>notify()</c> or <c>notifyAll()</c> method of this object or until the
 specified timeout expires.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Causes the calling thread to wait until another thread calls the <c>notify()</c> or <c>notifyAll()</c> method of this object or until the
 specified timeout expires. This method can only be invoked by a thread
 which owns this object's monitor; see <c><see cref="M:Java.Lang.Object.Notify" /></c> on how a thread
 can become the owner of a monitor.

 </para>
          <para tool="javadoc-to-mdoc">A waiting thread can be sent <c>interrupt()</c> to cause it to
 prematurely stop waiting, so <c>wait</c> should be called in a loop to
 check that the condition that has been waited for has been met before
 continuing.

 </para>
          <para tool="javadoc-to-mdoc">While the thread waits, it gives up ownership of this object's
 monitor. When it is notified (or interrupted), it re-acquires the monitor
 before it starts running.

 </para>
          <para tool="javadoc-to-mdoc">A timeout of zero means the calling thread should wait forever unless interrupted or
 notified.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/Object.html#wait(long)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>millis </c>.</exception>
        <exception cref="T:Java.Lang.IllegalMonitorStateException">if the thread calling this method is not the owner of this
             object's monitor.</exception>
        <exception cref="T:Java.Lang.InterruptedException">if the current thread has been interrupted.
             The interrupted status of the current thread will be cleared before the exception
             is thrown.</exception>
        <altmember cref="M:Java.Lang.Object.Notify" />
        <altmember cref="M:Java.Lang.Object.NotifyAll" />
        <altmember cref="M:Java.Lang.Object.Wait" />
        <altmember cref="M:Java.Lang.Object.Wait(System.Int64, System.Int32)" />
        <altmember cref="T:Java.Lang.Thread" />
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public void Wait (long millis, int nanos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Wait(int64 millis, int32 nanos) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("wait", "(JI)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millis" Type="System.Int64" />
        <Parameter Name="nanos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="millis">the maximum time to wait in milliseconds.</param>
        <param name="nanos">the fraction of a millisecond to wait, specified in
            nanoseconds.</param>
        <summary>Causes the calling thread to wait until another thread calls the <c>notify()</c> or <c>notifyAll()</c> method of this object or until the
 specified timeout expires.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Causes the calling thread to wait until another thread calls the <c>notify()</c> or <c>notifyAll()</c> method of this object or until the
 specified timeout expires. This method can only be invoked by a thread
 that owns this object's monitor; see <c><see cref="M:Java.Lang.Object.Notify" /></c> on how a thread
 can become the owner of a monitor.

 </para>
          <para tool="javadoc-to-mdoc">A waiting thread can be sent <c>interrupt()</c> to cause it to
 prematurely stop waiting, so <c>wait</c> should be called in a loop to
 check that the condition that has been waited for has been met before
 continuing.

 </para>
          <para tool="javadoc-to-mdoc">While the thread waits, it gives up ownership of this object's
 monitor. When it is notified (or interrupted), it re-acquires the monitor
 before it starts running.

 </para>
          <para tool="javadoc-to-mdoc">A timeout of zero means the calling thread should wait forever unless interrupted or
 notified.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/Object.html#wait(long, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>millis </c>, <c>nanos </c> or <c>nanos &gt;
             999999</c>.</exception>
        <exception cref="T:Java.Lang.IllegalMonitorStateException">if the thread calling this method is not the owner of this
             object's monitor.</exception>
        <exception cref="T:Java.Lang.InterruptedException">if the current thread has been interrupted.
             The interrupted status of the current thread will be cleared before the exception
             is thrown.</exception>
        <altmember cref="M:Java.Lang.Object.Notify" />
        <altmember cref="M:Java.Lang.Object.NotifyAll" />
        <altmember cref="M:Java.Lang.Object.Wait" />
        <altmember cref="M:Java.Lang.Object.Wait(System.Int64, System.Int32)" />
        <altmember cref="T:Java.Lang.Thread" />
      </Docs>
    </Member>
  </Members>
</Type>