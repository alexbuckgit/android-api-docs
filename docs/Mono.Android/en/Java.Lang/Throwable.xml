<Type Name="Throwable" FullName="Java.Lang.Throwable">
  <TypeSignature Language="C#" Value="public class Throwable : Exception, IDisposable, Java.Interop.IJavaObjectEx, Java.IO.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Throwable extends System.Exception implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaObjectEx, class Java.IO.ISerializable, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Java.Interop.IJavaObjectEx</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.IO.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/lang/Throwable", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>The superclass of all classes which can be thrown by the VM.</summary>
    <remarks><para tool="javadoc-to-mdoc">The superclass of all classes which can be thrown by the VM. The
 two direct subclasses are recoverable exceptions (<c>Exception</c>) and
 unrecoverable errors (<c>Error</c>). This class provides common methods for
 accessing a string message which provides extra information about the
 circumstances in which the <c>Throwable</c> was created (basically an error
 message in most cases), and for saving a stack trace (that is, a record of
 the call stack at a particular point in time) which can be printed later.

 </para><para tool="javadoc-to-mdoc">A <c>Throwable</c> can also include a cause, which is a nested <c>Throwable</c> that represents the original problem that led to this <c>Throwable</c>. It is often used for wrapping various types of errors into a
 common <c>Throwable</c> without losing the detailed original error
 information. When printing the stack trace, the trace of the cause is
 included.</para><format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="T:Java.Lang.Error" /></c></term></item><item><term><c><see cref="T:Java.Lang.Exception" /></c></term></item><item><term><c><see cref="T:Java.Lang.RuntimeException" /></c></term></item></list><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/lang/Throwable.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Throwable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Constructs a new <c>Throwable</c> that includes the current stack trace.</summary>
        <remarks><para tool="javadoc-to-mdoc">Constructs a new <c>Throwable</c> that includes the current stack trace.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/lang/Throwable.html#Throwable()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Throwable (Java.Lang.Throwable throwable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Lang.Throwable throwable) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/Throwable;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="throwable" Type="Java.Lang.Throwable" />
      </Parameters>
      <Docs>
        <param name="throwable">To be added.</param>
        <summary>Constructs a new <c>Throwable</c> with the current stack trace and the
 given cause.</summary>
        <remarks><para tool="javadoc-to-mdoc">Constructs a new <c>Throwable</c> with the current stack trace and the
 given cause.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/lang/Throwable.html#Throwable(java.lang.Throwable)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Throwable (string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string detailMessage) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="detailMessage">To be added.</param>
        <summary>Constructs a new <c>Throwable</c> with the current stack trace and the
 given detail message.</summary>
        <remarks><para tool="javadoc-to-mdoc">Constructs a new <c>Throwable</c> with the current stack trace and the
 given detail message.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/lang/Throwable.html#Throwable(java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Throwable (IntPtr handle, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="handle">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="handle" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="handle" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Throwable (string detailMessage, Java.Lang.Throwable throwable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string detailMessage, class Java.Lang.Throwable throwable) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;Ljava/lang/Throwable;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="detailMessage" Type="System.String" />
        <Parameter Name="throwable" Type="Java.Lang.Throwable" />
      </Parameters>
      <Docs>
        <param name="detailMessage">To be added.</param>
        <param name="throwable">To be added.</param>
        <summary>Constructs a new <c>Throwable</c> with the current stack trace, the
 given detail message and cause.</summary>
        <remarks><para tool="javadoc-to-mdoc">Constructs a new <c>Throwable</c> with the current stack trace, the
 given detail message and cause.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/lang/Throwable.html#Throwable(java.lang.String, java.lang.Throwable)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Throwable (string p0, Java.Lang.Throwable p1, bool p2, bool p3);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string p0, class Java.Lang.Throwable p1, bool p2, bool p3) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;Ljava/lang/Throwable;ZZ)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="p0" Type="System.String" />
        <Parameter Name="p1" Type="Java.Lang.Throwable" />
        <Parameter Name="p2" Type="System.Boolean" />
        <Parameter Name="p3" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="p0">To be added.</param>
        <param name="p1">To be added.</param>
        <param name="p2">To be added.</param>
        <param name="p3">To be added.</param>
        <summary>Constructs a new <c>Throwable</c> with the current stack trace, the
 specified detail message and the specified cause.</summary>
        <remarks><para tool="javadoc-to-mdoc">Constructs a new <c>Throwable</c> with the current stack trace, the
 specified detail message and the specified cause.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/lang/Throwable.html#Throwable(java.lang.String, java.lang.Throwable, boolean, boolean)" target="_blank">[Android Documentation]</a></format></para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSuppressed">
      <MemberSignature Language="C#" Value="public void AddSuppressed (Java.Lang.Throwable p0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddSuppressed(class Java.Lang.Throwable p0) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addSuppressed", "(Ljava/lang/Throwable;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="Java.Lang.Throwable" />
      </Parameters>
      <Docs>
        <param name="p0">To be added.</param>
        <summary>Adds <c>throwable</c> to the list of throwables suppressed by this.</summary>
        <remarks><para tool="javadoc-to-mdoc">Adds <c>throwable</c> to the list of throwables suppressed by this. The
 throwable will included when this exception's stack trace is printed.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>throwable == this</c>.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>throwable == null</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="Cause">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Throwable Cause { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.Throwable Cause" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCause", "()Ljava/lang/Throwable;", "GetGetCauseHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Throwable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the cause of this <c>Throwable</c>, or <c>null</c> if there is
 no cause.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns the cause of this <c>Throwable</c>, or <c>null</c> if there is
 no cause.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/lang/Throwable.html#getCause()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Class">
      <MemberSignature Language="C#" Value="public Java.Lang.Class Class { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.Class Class" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getClass", "()Ljava/lang/Class;", "GetGetClassHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillInStackTrace">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Throwable FillInStackTrace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Throwable FillInStackTrace() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("fillInStackTrace", "()Ljava/lang/Throwable;", "GetFillInStackTraceHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Throwable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Records the stack trace from the point where this method has been called
 to this <c>Throwable</c>.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Records the stack trace from the point where this method has been called
 to this <c>Throwable</c>. This method is invoked by the <c>Throwable</c> constructors.

 </para><para tool="javadoc-to-mdoc">This method is public so that code (such as an RPC system) which catches
 a <c>Throwable</c> and then re-throws it can replace the construction-time stack trace
 with a stack trace from the location where the exception was re-thrown, by <format type="text/html"><i>calling</i></format><c>fillInStackTrace</c>.

 </para><para tool="javadoc-to-mdoc">This method is non-final so that non-Java language implementations can disable VM stack
 traces for their language. Filling in the stack trace is relatively expensive.
 <format type="text/html"><i>Overriding</i></format> this method in the root of a language's exception hierarchy allows the
 language to avoid paying for something it doesn't need.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Throwable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromException">
      <MemberSignature Language="C#" Value="public static Java.Lang.Throwable FromException (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Throwable FromException(class System.Exception e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Lang.Throwable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">
          A <see cref="T:System.Exception" /> to convert to the closest
          matching <see cref="T:Java.Lang.Throwable" /> type.
        </param>
        <summary>
          Converts a <see cref="T:System.Exception" /> into a
          <see cref="T:Java.Lang.Throwable" />.
        </summary>
        <returns>
          A <see cref="T:Java.Lang.Throwable" />.
        </returns>
        <remarks>
          <para>
            When <paramref name="e" /> is a 
            <see cref="T:Java.Lang.Throwable" />, then it is returned
            unchanged.
          </para>
          <para>
            Otherwise, the class hierachy for <paramref name="e" /> is
            traversed, looking for the semantically closest matching
            <see cref="T:Java.Lang.Throwable" /> type.  For example,
            <see cref="T:System.ArgumentNullException" /> is mapped to
            a <see cref="T:Java.Lang.IllegalArgumentException" />.  Once a
            matching type has been found, a new 
            <see cref="T:Java.Lang.Throwable" /> instance is created,
            passing
            <c><paramref name="e" />.<see cref="M:System.Exception.ToString" /></c>
            as the constructor argument (which thus requires that the
            <see cref="T:Java.Lang.Throwable" /> type provide a public
            constructor which accepts a single <see cref="T:System.String" />
            argument).
          </para>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="e" /> is <see langword="null" />.
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetStackTrace">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.StackTraceElement[] GetStackTrace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.StackTraceElement[] GetStackTrace() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getStackTrace", "()[Ljava/lang/StackTraceElement;", "GetGetStackTraceHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.StackTraceElement[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a clone of the array of stack trace elements of this <c>Throwable</c>.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns a clone of the array of stack trace elements of this <c>Throwable</c>. Each
 <c>StackTraceElement</c> represents an entry in the call stack. The
 element at position 0 is the top of the stack, that is, the stack frame
 where this <c>Throwable</c> is thrown.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Lang.Throwable.PrintStackTrace" />
      </Docs>
    </Member>
    <Member MemberName="GetSuppressed">
      <MemberSignature Language="C#" Value="public Java.Lang.Throwable[] GetSuppressed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Throwable[] GetSuppressed() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getSuppressed", "()[Ljava/lang/Throwable;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Throwable[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the throwables suppressed by this.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns the throwables suppressed by this.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()" target="_blank">[Android Documentation]</a></format></para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          The handle to the underlying Android instance.
        </summary>
        <value>
          A <see cref="T:System.IntPtr" /> containing the value of the handle
          of the underlying Android instance.
        </value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="InitCause">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Throwable InitCause (Java.Lang.Throwable throwable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Throwable InitCause(class Java.Lang.Throwable throwable) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("initCause", "(Ljava/lang/Throwable;)Ljava/lang/Throwable;", "GetInitCause_Ljava_lang_Throwable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Throwable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="throwable" Type="Java.Lang.Throwable" />
      </Parameters>
      <Docs>
        <param name="throwable">the cause of this <c>Throwable</c>.</param>
        <summary>Initializes the cause of this <c>Throwable</c>.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Initializes the cause of this <c>Throwable</c>. The cause can only be
 initialized once.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>Throwable</c> is this object.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if the cause has already been initialized.
</exception>
      </Docs>
    </Member>
    <Member MemberName="is_generated">
      <MemberSignature Language="C#" Value="protected bool is_generated;" />
      <MemberSignature Language="ILAsm" Value=".field family bool is_generated" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Java.Interop.IJavaObjectEx.IsProxy">
      <MemberSignature Language="C#" Value="bool Java.Interop.IJavaObjectEx.IsProxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Java.Interop.IJavaObjectEx.IsProxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Java.Interop.IJavaObjectEx.KeyHandle">
      <MemberSignature Language="C#" Value="IntPtr Java.Interop.IJavaObjectEx.KeyHandle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Java.Interop.IJavaObjectEx.KeyHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Java.Interop.IJavaObjectEx.NeedsActivation">
      <MemberSignature Language="C#" Value="bool Java.Interop.IJavaObjectEx.NeedsActivation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Java.Interop.IJavaObjectEx.NeedsActivation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Java.Interop.IJavaObjectEx.ToLocalJniHandle">
      <MemberSignature Language="C#" Value="IntPtr IJavaObjectEx.ToLocalJniHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance native int Java.Interop.IJavaObjectEx.ToLocalJniHandle() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalizedMessage">
      <MemberSignature Language="C#" Value="public virtual string LocalizedMessage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalizedMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLocalizedMessage", "()Ljava/lang/String;", "GetGetLocalizedMessageHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the detail message which was provided when this
 <c>Throwable</c> was created.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns the detail message which was provided when this
 <c>Throwable</c> was created. Returns <c>null</c> if no message was
 provided at creation time. Subclasses may override this method to return
 localized text for the message. Android returns the regular detail message.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public virtual string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMessage", "()Ljava/lang/String;", "GetGetMessageHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the detail message which was provided when this
 <c>Throwable</c> was created.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns the detail message which was provided when this
 <c>Throwable</c> was created. Returns <c>null</c> if no message was
 provided at creation time.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/lang/Throwable.html#getMessage()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PrintStackTrace">
      <MemberSignature Language="C#" Value="public virtual void PrintStackTrace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintStackTrace() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("printStackTrace", "()V", "GetPrintStackTraceHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Writes a printable representation of this <c>Throwable</c>'s stack trace
 to the <c>System.err</c> stream.</summary>
        <remarks><para tool="javadoc-to-mdoc">Writes a printable representation of this <c>Throwable</c>'s stack trace
 to the <c>System.err</c> stream.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PrintStackTrace">
      <MemberSignature Language="C#" Value="public virtual void PrintStackTrace (Java.IO.PrintStream err);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintStackTrace(class Java.IO.PrintStream err) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("printStackTrace", "(Ljava/io/PrintStream;)V", "GetPrintStackTrace_Ljava_io_PrintStream_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="err" Type="Java.IO.PrintStream" />
      </Parameters>
      <Docs>
        <param name="err">the stream to write the stack trace on.
</param>
        <summary>Writes a printable representation of this <c>Throwable</c>'s stack trace
 to the given print stream.</summary>
        <remarks><para tool="javadoc-to-mdoc">Writes a printable representation of this <c>Throwable</c>'s stack trace
 to the given print stream. If the <c>Throwable</c> contains a
 <c><see cref="P:Java.Lang.Throwable.Cause" /></c>, the method will be invoked recursively for
 the nested <c>Throwable</c>.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace(java.io.PrintStream)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PrintStackTrace">
      <MemberSignature Language="C#" Value="public virtual void PrintStackTrace (Java.IO.PrintWriter err);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrintStackTrace(class Java.IO.PrintWriter err) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("printStackTrace", "(Ljava/io/PrintWriter;)V", "GetPrintStackTrace_Ljava_io_PrintWriter_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="err" Type="Java.IO.PrintWriter" />
      </Parameters>
      <Docs>
        <param name="err">the writer to write the stack trace on.
</param>
        <summary>Writes a printable representation of this <c>Throwable</c>'s stack trace
 to the specified print writer.</summary>
        <remarks><para tool="javadoc-to-mdoc">Writes a printable representation of this <c>Throwable</c>'s stack trace
 to the specified print writer. If the <c>Throwable</c> contains a
 <c><see cref="P:Java.Lang.Throwable.Cause" /></c>, the method will be invoked recursively for the
 nested <c>Throwable</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace(java.io.PrintWriter)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetHandle">
      <MemberSignature Language="C#" Value="protected void SetHandle (IntPtr value, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetHandle(native int value, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="value">
          An <see cref="T:System.IntPtr" /> containing the new value to return
          from <see cref="P:Java.Lang.Object.Handle" />.
        </param>
        <param name="transfer">To be added.</param>
        <summary>
          Sets the <see cref="P:Java.Lang.Object.Handle" /> property.
        </summary>
        <remarks>
          <para>
            Use the <c>SetHandle</c> method from default constructors to
            set the underlying Android object returned by the
            <see cref="P:Java.Lang.Object.Handle" /> property.
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStackTrace">
      <MemberSignature Language="C#" Value="public virtual void SetStackTrace (Java.Lang.StackTraceElement[] trace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetStackTrace(class Java.Lang.StackTraceElement[] trace) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setStackTrace", "([Ljava/lang/StackTraceElement;)V", "GetSetStackTrace_arrayLjava_lang_StackTraceElement_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trace" Type="Java.Lang.StackTraceElement[]" />
      </Parameters>
      <Docs>
        <param name="trace">the new array of <c>StackTraceElement</c>s. A copy of the
            array is stored in this <c>Throwable</c>, so subsequent
            changes to <c>trace</c> will not change the call stack stored
            in this <c>Throwable</c>.</param>
        <summary>Sets the array of stack trace elements.</summary>
        <remarks><para tool="javadoc-to-mdoc">Sets the array of stack trace elements. Each <c>StackTraceElement</c>
 represents an entry in the call stack. A copy of the specified array is
 stored in this <c>Throwable</c>. will be returned by <c>getStackTrace()</c> and printed by <c>printStackTrace()</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if any element in <c>trace</c> is <c>null</c>.</exception>
        <altmember cref="M:Java.Lang.Throwable.PrintStackTrace" />
      </Docs>
    </Member>
    <Member MemberName="StackTrace">
      <MemberSignature Language="C#" Value="public override string StackTrace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StackTrace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected virtual IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected virtual Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToException">
      <MemberSignature Language="C#" Value="public static Exception ToException (Java.Lang.Throwable e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception ToException(class Java.Lang.Throwable e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Java.Lang.Throwable" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
