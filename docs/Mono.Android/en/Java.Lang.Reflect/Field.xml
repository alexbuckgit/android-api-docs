<Type Name="Field" FullName="Java.Lang.Reflect.Field">
  <TypeSignature Language="C#" Value="public sealed class Field : Java.Lang.Reflect.AccessibleObject, IDisposable, Java.Lang.Reflect.IMember" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Field extends Java.Lang.Reflect.AccessibleObject implements class Android.Runtime.IJavaObject, class Java.Lang.Reflect.IMember, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Reflect.AccessibleObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Java.Lang.Reflect.IMember</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/lang/reflect/Field", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This class represents a field.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">This class represents a field. Information about the field can be accessed,
 and the field's value can be accessed dynamically.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/java/lang/reflect/Field.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="DeclaringClass">
      <MemberSignature Language="C#" Value="public Java.Lang.Class DeclaringClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.Class DeclaringClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDeclaringClass", "()Ljava/lang/Class;", "GetGetDeclaringClassHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the class that declares this field.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the class that declares this field.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/reflect/Field.html#getDeclaringClass()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GenericType">
      <MemberSignature Language="C#" Value="public Java.Lang.Reflect.IType GenericType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.Reflect.IType GenericType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getGenericType", "()Ljava/lang/reflect/Type;", "GetGetGenericTypeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Reflect.IType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the generic type of this field.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the generic type of this field.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/reflect/Field.html#getGenericType()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.Reflect.GenericSignatureFormatError">if the generic field signature is invalid</exception>
        <exception cref="T:Java.Lang.TypeNotPresentException">if the generic type points to a missing type</exception>
        <exception cref="T:Java.Lang.Reflect.MalformedParameterizedTypeException">if the generic type points to a type that cannot be
             instantiated for some reason
</exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public Java.Lang.Object Get (Java.Lang.Object object);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Object Get(class Java.Lang.Object object) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("get", "(Ljava/lang/Object;)Ljava/lang/Object;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="object" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="object">the object to access</param>
        <summary>Returns the value of the field in the specified object.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the value of the field in the specified object. This reproduces
 the effect of <c>object.fieldName</c></para>
          <para tool="javadoc-to-mdoc">If the type of this field is a primitive type, the field value is
 automatically boxed.

 </para>
          <para tool="javadoc-to-mdoc">If this field is static, the object argument is ignored.
 Otherwise, if the object is null, a NullPointerException is thrown. If
 the object is not an instance of the declaring class of the method, an
 IllegalArgumentException is thrown.

 </para>
          <para tool="javadoc-to-mdoc">If this Field object is enforcing access control (see AccessibleObject)
 and this field is not accessible from the current context, an
 IllegalAccessException is thrown.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/reflect/Field.html#get(java.lang.Object)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the object is <c>null</c> and the field is non-static</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the object is not compatible with the declaring class</exception>
        <exception cref="T:Java.Lang.IllegalAccessException">if this field is not accessible
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public bool GetBoolean (Java.Lang.Object object);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetBoolean(class Java.Lang.Object object) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getBoolean", "(Ljava/lang/Object;)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="object" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="object">the object to access</param>
        <summary>Returns the value of the field in the specified object as a <c>boolean</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the value of the field in the specified object as a <c>boolean</c>. This reproduces the effect of <c>object.fieldName</c></para>
          <para tool="javadoc-to-mdoc">
 If this field is static, the object argument is ignored.
 Otherwise, if the object is <c>null</c>, a NullPointerException is
 thrown. If the object is not an instance of the declaring class of the
 method, an IllegalArgumentException is thrown.
 </para>
          <para tool="javadoc-to-mdoc">
 If this Field object is enforcing access control (see AccessibleObject)
 and this field is not accessible from the current context, an
 IllegalAccessException is thrown.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/reflect/Field.html#getBoolean(java.lang.Object)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the object is <c>null</c> and the field is non-static</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the object is not compatible with the declaring class</exception>
        <exception cref="T:Java.Lang.IllegalAccessException">if this field is not accessible
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public sbyte GetByte (Java.Lang.Object object);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int8 GetByte(class Java.Lang.Object object) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getByte", "(Ljava/lang/Object;)B", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="object" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="object">the object to access</param>
        <summary>Returns the value of the field in the specified object as a <c>byte</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the value of the field in the specified object as a <c>byte</c>.
 This reproduces the effect of <c>object.fieldName</c></para>
          <para tool="javadoc-to-mdoc">
 If this field is static, the object argument is ignored.
 Otherwise, if the object is <c>null</c>, a NullPointerException is
 thrown. If the object is not an instance of the declaring class of the
 method, an IllegalArgumentException is thrown.
 </para>
          <para tool="javadoc-to-mdoc">
 If this Field object is enforcing access control (see AccessibleObject)
 and this field is not accessible from the current context, an
 IllegalAccessException is thrown.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/reflect/Field.html#getByte(java.lang.Object)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the object is <c>null</c> and the field is non-static</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the object is not compatible with the declaring class</exception>
        <exception cref="T:Java.Lang.IllegalAccessException">if this field is not accessible
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public char GetChar (Java.Lang.Object object);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance char GetChar(class Java.Lang.Object object) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getChar", "(Ljava/lang/Object;)C", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="object" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="object">the object to access</param>
        <summary>Returns the value of the field in the specified object as a <c>char</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the value of the field in the specified object as a <c>char</c>.
 This reproduces the effect of <c>object.fieldName</c></para>
          <para tool="javadoc-to-mdoc">
 If this field is static, the object argument is ignored.
 Otherwise, if the object is <c>null</c>, a NullPointerException is
 thrown. If the object is not an instance of the declaring class of the
 method, an IllegalArgumentException is thrown.
 </para>
          <para tool="javadoc-to-mdoc">
 If this Field object is enforcing access control (see AccessibleObject)
 and this field is not accessible from the current context, an
 IllegalAccessException is thrown.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/reflect/Field.html#getChar(java.lang.Object)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the object is <c>null</c> and the field is non-static</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the object is not compatible with the declaring class</exception>
        <exception cref="T:Java.Lang.IllegalAccessException">if this field is not accessible
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public double GetDouble (Java.Lang.Object object);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetDouble(class Java.Lang.Object object) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDouble", "(Ljava/lang/Object;)D", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="object" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="object">the object to access</param>
        <summary>Returns the value of the field in the specified object as a <c>double</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the value of the field in the specified object as a <c>double</c>. This reproduces the effect of <c>object.fieldName</c></para>
          <para tool="javadoc-to-mdoc">
 If this field is static, the object argument is ignored.
 Otherwise, if the object is <c>null</c>, a NullPointerException is
 thrown. If the object is not an instance of the declaring class of the
 method, an IllegalArgumentException is thrown.
 </para>
          <para tool="javadoc-to-mdoc">
 If this Field object is enforcing access control (see AccessibleObject)
 and this field is not accessible from the current context, an
 IllegalAccessException is thrown.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/reflect/Field.html#getDouble(java.lang.Object)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the object is <c>null</c> and the field is non-static</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the object is not compatible with the declaring class</exception>
        <exception cref="T:Java.Lang.IllegalAccessException">if this field is not accessible
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public float GetFloat (Java.Lang.Object object);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 GetFloat(class Java.Lang.Object object) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getFloat", "(Ljava/lang/Object;)F", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="object" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="object">the object to access</param>
        <summary>Returns the value of the field in the specified object as a <c>float</c>
 .</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the value of the field in the specified object as a <c>float</c>
 . This reproduces the effect of <c>object.fieldName</c></para>
          <para tool="javadoc-to-mdoc">
 If this field is static, the object argument is ignored.
 Otherwise, if the object is <c>null</c>, a NullPointerException is
 thrown. If the object is not an instance of the declaring class of the
 method, an IllegalArgumentException is thrown.
 </para>
          <para tool="javadoc-to-mdoc">
 If this Field object is enforcing access control (see AccessibleObject)
 and this field is not accessible from the current context, an
 IllegalAccessException is thrown.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/reflect/Field.html#getFloat(java.lang.Object)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the object is <c>null</c> and the field is non-static</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the object is not compatible with the declaring class</exception>
        <exception cref="T:Java.Lang.IllegalAccessException">if this field is not accessible
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt">
      <MemberSignature Language="C#" Value="public int GetInt (Java.Lang.Object object);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetInt(class Java.Lang.Object object) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInt", "(Ljava/lang/Object;)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="object" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="object">the object to access</param>
        <summary>Returns the value of the field in the specified object as an <c>int</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the value of the field in the specified object as an <c>int</c>.
 This reproduces the effect of <c>object.fieldName</c></para>
          <para tool="javadoc-to-mdoc">
 If this field is static, the object argument is ignored.
 Otherwise, if the object is <c>null</c>, a NullPointerException is
 thrown. If the object is not an instance of the declaring class of the
 method, an IllegalArgumentException is thrown.
 </para>
          <para tool="javadoc-to-mdoc">
 If this Field object is enforcing access control (see AccessibleObject)
 and this field is not accessible from the current context, an
 IllegalAccessException is thrown.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/reflect/Field.html#getInt(java.lang.Object)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the object is <c>null</c> and the field is non-static</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the object is not compatible with the declaring class</exception>
        <exception cref="T:Java.Lang.IllegalAccessException">if this field is not accessible
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetLong">
      <MemberSignature Language="C#" Value="public long GetLong (Java.Lang.Object object);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 GetLong(class Java.Lang.Object object) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getLong", "(Ljava/lang/Object;)J", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="object" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="object">the object to access</param>
        <summary>Returns the value of the field in the specified object as a <c>long</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the value of the field in the specified object as a <c>long</c>.
 This reproduces the effect of <c>object.fieldName</c></para>
          <para tool="javadoc-to-mdoc">
 If this field is static, the object argument is ignored.
 Otherwise, if the object is <c>null</c>, a NullPointerException is
 thrown. If the object is not an instance of the declaring class of the
 method, an IllegalArgumentException is thrown.
 </para>
          <para tool="javadoc-to-mdoc">
 If this Field object is enforcing access control (see AccessibleObject)
 and this field is not accessible from the current context, an
 IllegalAccessException is thrown.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/reflect/Field.html#getLong(java.lang.Object)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the object is <c>null</c> and the field is non-static</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the object is not compatible with the declaring class</exception>
        <exception cref="T:Java.Lang.IllegalAccessException">if this field is not accessible
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetShort">
      <MemberSignature Language="C#" Value="public short GetShort (Java.Lang.Object object);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int16 GetShort(class Java.Lang.Object object) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getShort", "(Ljava/lang/Object;)S", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="object" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="object">the object to access</param>
        <summary>Returns the value of the field in the specified object as a <c>short</c>
 .</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the value of the field in the specified object as a <c>short</c>
 . This reproduces the effect of <c>object.fieldName</c></para>
          <para tool="javadoc-to-mdoc">
 If this field is static, the object argument is ignored.
 Otherwise, if the object is <c>null</c>, a NullPointerException is
 thrown. If the object is not an instance of the declaring class of the
 method, an IllegalArgumentException is thrown.
 </para>
          <para tool="javadoc-to-mdoc">
 If this Field object is enforcing access control (see AccessibleObject)
 and this field is not accessible from the current context, an
 IllegalAccessException is thrown.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/reflect/Field.html#getShort(java.lang.Object)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the object is <c>null</c> and the field is non-static</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the object is not compatible with the declaring class</exception>
        <exception cref="T:Java.Lang.IllegalAccessException">if this field is not accessible
</exception>
      </Docs>
    </Member>
    <Member MemberName="IsEnumConstant">
      <MemberSignature Language="C#" Value="public bool IsEnumConstant { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnumConstant" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isEnumConstant", "()Z", "GetIsEnumConstantHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether or not this field is an enumeration constant.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates whether or not this field is an enumeration constant.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/reflect/Field.html#isEnumConstant()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsSynthetic">
      <MemberSignature Language="C#" Value="public bool IsSynthetic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynthetic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isSynthetic", "()Z", "GetIsSyntheticHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether or not this field is synthetic.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates whether or not this field is synthetic.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/reflect/Field.html#isSynthetic()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public int Modifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Modifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getModifiers", "()I", "GetGetModifiersHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the modifiers for this field.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the modifiers for this field. The <c><see cref="T:Java.Lang.Reflect.Modifier" /></c> class should
 be used to decode the result.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/reflect/Field.html#getModifiers()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Java.Lang.Reflect.Modifier" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getName", "()Ljava/lang/String;", "GetGetNameHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the name of this field.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the name of this field.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/reflect/Field.html#getName()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public void Set (Java.Lang.Object object, Java.Lang.Object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Set(class Java.Lang.Object object, class Java.Lang.Object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("set", "(Ljava/lang/Object;Ljava/lang/Object;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="object" Type="Java.Lang.Object" />
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="object">the object to access</param>
        <param name="value">the new value</param>
        <summary>Sets the value of the field in the specified object to the value.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the value of the field in the specified object to the value. This
 reproduces the effect of <c>object.fieldName = value</c></para>
          <para tool="javadoc-to-mdoc">If this field is static, the object argument is ignored.
 Otherwise, if the object is <c>null</c>, a NullPointerException is
 thrown. If the object is not an instance of the declaring class of the
 method, an IllegalArgumentException is thrown.

 </para>
          <para tool="javadoc-to-mdoc">If this Field object is enforcing access control (see AccessibleObject)
 and this field is not accessible from the current context, an
 IllegalAccessException is thrown.

 </para>
          <para tool="javadoc-to-mdoc">If the field type is a primitive type, the value is automatically
 unboxed. If the unboxing fails, an IllegalArgumentException is thrown. If
 the value cannot be converted to the field type via a widening
 conversion, an IllegalArgumentException is thrown.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/reflect/Field.html#set(java.lang.Object, java.lang.Object)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the object is <c>null</c> and the field is non-static</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the object is not compatible with the declaring class</exception>
        <exception cref="T:Java.Lang.IllegalAccessException">if this field is not accessible
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetBoolean">
      <MemberSignature Language="C#" Value="public void SetBoolean (Java.Lang.Object object, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBoolean(class Java.Lang.Object object, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setBoolean", "(Ljava/lang/Object;Z)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="object" Type="Java.Lang.Object" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="object">the object to access</param>
        <param name="value">the new value</param>
        <summary>Sets the value of the field in the specified object to the <c>boolean</c> value.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the value of the field in the specified object to the <c>boolean</c> value. This reproduces the effect of <c>object.fieldName =
 value</c></para>
          <para tool="javadoc-to-mdoc">
 If this field is static, the object argument is ignored.
 Otherwise, if the object is <c>null</c>, a NullPointerException is
 thrown. If the object is not an instance of the declaring class of the
 method, an IllegalArgumentException is thrown.
 </para>
          <para tool="javadoc-to-mdoc">
 If this Field object is enforcing access control (see AccessibleObject)
 and this field is not accessible from the current context, an
 IllegalAccessException is thrown.
 </para>
          <para tool="javadoc-to-mdoc">
 If the value cannot be converted to the field type via a widening
 conversion, an IllegalArgumentException is thrown.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/reflect/Field.html#setBoolean(java.lang.Object, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the object is <c>null</c> and the field is non-static</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the object is not compatible with the declaring class</exception>
        <exception cref="T:Java.Lang.IllegalAccessException">if this field is not accessible
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetByte">
      <MemberSignature Language="C#" Value="public void SetByte (Java.Lang.Object object, sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetByte(class Java.Lang.Object object, int8 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setByte", "(Ljava/lang/Object;B)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="object" Type="Java.Lang.Object" />
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="object">the object to access</param>
        <param name="value">the new value</param>
        <summary>Sets the value of the field in the specified object to the <c>byte</c>
 value.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the value of the field in the specified object to the <c>byte</c>
 value. This reproduces the effect of <c>object.fieldName = value</c></para>
          <para tool="javadoc-to-mdoc">
 If this field is static, the object argument is ignored.
 Otherwise, if the object is <c>null</c>, a NullPointerException is
 thrown. If the object is not an instance of the declaring class of the
 method, an IllegalArgumentException is thrown.
 </para>
          <para tool="javadoc-to-mdoc">
 If this Field object is enforcing access control (see AccessibleObject)
 and this field is not accessible from the current context, an
 IllegalAccessException is thrown.
 </para>
          <para tool="javadoc-to-mdoc">
 If the value cannot be converted to the field type via a widening
 conversion, an IllegalArgumentException is thrown.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/reflect/Field.html#setByte(java.lang.Object, byte)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the object is <c>null</c> and the field is non-static</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the object is not compatible with the declaring class</exception>
        <exception cref="T:Java.Lang.IllegalAccessException">if this field is not accessible
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetChar">
      <MemberSignature Language="C#" Value="public void SetChar (Java.Lang.Object object, char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetChar(class Java.Lang.Object object, char value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setChar", "(Ljava/lang/Object;C)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="object" Type="Java.Lang.Object" />
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="object">the object to access</param>
        <param name="value">the new value</param>
        <summary>Sets the value of the field in the specified object to the <c>char</c>
 value.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the value of the field in the specified object to the <c>char</c>
 value. This reproduces the effect of <c>object.fieldName = value</c></para>
          <para tool="javadoc-to-mdoc">
 If this field is static, the object argument is ignored.
 Otherwise, if the object is <c>null</c>, a NullPointerException is
 thrown. If the object is not an instance of the declaring class of the
 method, an IllegalArgumentException is thrown.
 </para>
          <para tool="javadoc-to-mdoc">
 If this Field object is enforcing access control (see AccessibleObject)
 and this field is not accessible from the current context, an
 IllegalAccessException is thrown.
 </para>
          <para tool="javadoc-to-mdoc">
 If the value cannot be converted to the field type via a widening
 conversion, an IllegalArgumentException is thrown.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/reflect/Field.html#setChar(java.lang.Object, char)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the object is <c>null</c> and the field is non-static</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the object is not compatible with the declaring class</exception>
        <exception cref="T:Java.Lang.IllegalAccessException">if this field is not accessible
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetDouble">
      <MemberSignature Language="C#" Value="public void SetDouble (Java.Lang.Object object, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDouble(class Java.Lang.Object object, float64 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDouble", "(Ljava/lang/Object;D)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="object" Type="Java.Lang.Object" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="object">the object to access</param>
        <param name="value">the new value</param>
        <summary>Sets the value of the field in the specified object to the <c>double</c>
 value.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the value of the field in the specified object to the <c>double</c>
 value. This reproduces the effect of <c>object.fieldName = value</c></para>
          <para tool="javadoc-to-mdoc">
 If this field is static, the object argument is ignored.
 Otherwise, if the object is <c>null</c>, a NullPointerException is
 thrown. If the object is not an instance of the declaring class of the
 method, an IllegalArgumentException is thrown.
 </para>
          <para tool="javadoc-to-mdoc">
 If this Field object is enforcing access control (see AccessibleObject)
 and this field is not accessible from the current context, an
 IllegalAccessException is thrown.
 </para>
          <para tool="javadoc-to-mdoc">
 If the value cannot be converted to the field type via a widening
 conversion, an IllegalArgumentException is thrown.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/reflect/Field.html#setDouble(java.lang.Object, double)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the object is <c>null</c> and the field is non-static</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the object is not compatible with the declaring class</exception>
        <exception cref="T:Java.Lang.IllegalAccessException">if this field is not accessible
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetFloat">
      <MemberSignature Language="C#" Value="public void SetFloat (Java.Lang.Object object, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFloat(class Java.Lang.Object object, float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setFloat", "(Ljava/lang/Object;F)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="object" Type="Java.Lang.Object" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="object">the object to access</param>
        <param name="value">the new value</param>
        <summary>Sets the value of the field in the specified object to the <c>float</c>
 value.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the value of the field in the specified object to the <c>float</c>
 value. This reproduces the effect of <c>object.fieldName = value</c></para>
          <para tool="javadoc-to-mdoc">
 If this field is static, the object argument is ignored.
 Otherwise, if the object is <c>null</c>, a NullPointerException is
 thrown. If the object is not an instance of the declaring class of the
 method, an IllegalArgumentException is thrown.
 </para>
          <para tool="javadoc-to-mdoc">
 If this Field object is enforcing access control (see AccessibleObject)
 and this field is not accessible from the current context, an
 IllegalAccessException is thrown.
 </para>
          <para tool="javadoc-to-mdoc">
 If the value cannot be converted to the field type via a widening
 conversion, an IllegalArgumentException is thrown.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/reflect/Field.html#setFloat(java.lang.Object, float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the object is <c>null</c> and the field is non-static</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the object is not compatible with the declaring class</exception>
        <exception cref="T:Java.Lang.IllegalAccessException">if this field is not accessible
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetInt">
      <MemberSignature Language="C#" Value="public void SetInt (Java.Lang.Object object, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetInt(class Java.Lang.Object object, int32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setInt", "(Ljava/lang/Object;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="object" Type="Java.Lang.Object" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="object">the object to access</param>
        <param name="value">the new value</param>
        <summary>Set the value of the field in the specified object to the <c>int</c>
 value.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the value of the field in the specified object to the <c>int</c>
 value. This reproduces the effect of <c>object.fieldName = value</c></para>
          <para tool="javadoc-to-mdoc">
 If this field is static, the object argument is ignored.
 Otherwise, if the object is <c>null</c>, a NullPointerException is
 thrown. If the object is not an instance of the declaring class of the
 method, an IllegalArgumentException is thrown.
 </para>
          <para tool="javadoc-to-mdoc">
 If this Field object is enforcing access control (see AccessibleObject)
 and this field is not accessible from the current context, an
 IllegalAccessException is thrown.
 </para>
          <para tool="javadoc-to-mdoc">
 If the value cannot be converted to the field type via a widening
 conversion, an IllegalArgumentException is thrown.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/reflect/Field.html#setInt(java.lang.Object, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the object is <c>null</c> and the field is non-static</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the object is not compatible with the declaring class</exception>
        <exception cref="T:Java.Lang.IllegalAccessException">if this field is not accessible
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetLong">
      <MemberSignature Language="C#" Value="public void SetLong (Java.Lang.Object object, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLong(class Java.Lang.Object object, int64 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLong", "(Ljava/lang/Object;J)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="object" Type="Java.Lang.Object" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="object">the object to access</param>
        <param name="value">the new value</param>
        <summary>Sets the value of the field in the specified object to the <c>long</c>
 value.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the value of the field in the specified object to the <c>long</c>
 value. This reproduces the effect of <c>object.fieldName = value</c></para>
          <para tool="javadoc-to-mdoc">
 If this field is static, the object argument is ignored.
 Otherwise, if the object is <c>null</c>, a NullPointerException is
 thrown. If the object is not an instance of the declaring class of the
 method, an IllegalArgumentException is thrown.
 </para>
          <para tool="javadoc-to-mdoc">
 If this Field object is enforcing access control (see AccessibleObject)
 and this field is not accessible from the current context, an
 IllegalAccessException is thrown.
 </para>
          <para tool="javadoc-to-mdoc">
 If the value cannot be converted to the field type via a widening
 conversion, an IllegalArgumentException is thrown.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/reflect/Field.html#setLong(java.lang.Object, long)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the object is <c>null</c> and the field is non-static</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the object is not compatible with the declaring class</exception>
        <exception cref="T:Java.Lang.IllegalAccessException">if this field is not accessible
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetShort">
      <MemberSignature Language="C#" Value="public void SetShort (Java.Lang.Object object, short value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetShort(class Java.Lang.Object object, int16 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setShort", "(Ljava/lang/Object;S)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="object" Type="Java.Lang.Object" />
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="object">the object to access</param>
        <param name="value">the new value</param>
        <summary>Sets the value of the field in the specified object to the <c>short</c>
 value.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the value of the field in the specified object to the <c>short</c>
 value. This reproduces the effect of <c>object.fieldName = value</c></para>
          <para tool="javadoc-to-mdoc">
 If this field is static, the object argument is ignored.
 Otherwise, if the object is <c>null</c>, a NullPointerException is
 thrown. If the object is not an instance of the declaring class of the
 method, an IllegalArgumentException is thrown.
 </para>
          <para tool="javadoc-to-mdoc">
 If this Field object is enforcing access control (see AccessibleObject)
 and this field is not accessible from the current context, an
 IllegalAccessException is thrown.
 </para>
          <para tool="javadoc-to-mdoc">
 If the value cannot be converted to the field type via a widening
 conversion, an IllegalArgumentException is thrown.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/reflect/Field.html#setShort(java.lang.Object, short)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the object is <c>null</c> and the field is non-static</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the object is not compatible with the declaring class</exception>
        <exception cref="T:Java.Lang.IllegalAccessException">if this field is not accessible
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToGenericString">
      <MemberSignature Language="C#" Value="public string ToGenericString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToGenericString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("toGenericString", "()Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the string representation of this field, including the field's
 generic type.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the string representation of this field, including the field's
 generic type.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/reflect/Field.html#toGenericString()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Java.Lang.Class Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.Class Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getType", "()Ljava/lang/Class;", "GetGetTypeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the <c><see cref="T:Java.Lang.Class" /></c> associated with the type of this field.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the <c><see cref="T:Java.Lang.Class" /></c> associated with the type of this field.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/lang/reflect/Field.html#getType()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
