<Type Name="IInvocationHandler" FullName="Java.Lang.Reflect.IInvocationHandler">
  <TypeSignature Language="C#" Value="public interface IInvocationHandler : Android.Runtime.IJavaObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInvocationHandler implements class Android.Runtime.IJavaObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Lang.Reflect.IInvocationHandler" />
  <TypeSignature Language="F#" Value="type IInvocationHandler = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/lang/reflect/InvocationHandler", "", "Java.Lang.Reflect.IInvocationHandlerInvoker", ApiSince=1)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Implementors of this interface dispatch methods invoked on proxy instances.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/lang/reflect/InvocationHandler" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public Java.Lang.Object Invoke (Java.Lang.Object proxy, Java.Lang.Reflect.Method method, Java.Lang.Object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object Invoke(class Java.Lang.Object proxy, class Java.Lang.Reflect.Method method, class Java.Lang.Object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Reflect.IInvocationHandler.Invoke(Java.Lang.Object,Java.Lang.Reflect.Method,Java.Lang.Object[])" />
      <MemberSignature Language="F#" Value="abstract member Invoke : Java.Lang.Object * Java.Lang.Reflect.Method * Java.Lang.Object[] -&gt; Java.Lang.Object" Usage="iInvocationHandler.Invoke (proxy, method, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("invoke", "(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;", "GetInvoke_Ljava_lang_Object_Ljava_lang_reflect_Method_arrayLjava_lang_Object_Handler:Java.Lang.Reflect.IInvocationHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="proxy" Type="Java.Lang.Object" />
        <Parameter Name="method" Type="Java.Lang.Reflect.Method" />
        <Parameter Name="args" Type="Java.Lang.Object[]" />
      </Parameters>
      <Docs>
        <param name="proxy">the proxy instance on which the method was invoked</param>
        <param name="method">the method invoked on the proxy instance</param>
        <param name="args">an array of objects containing the parameters passed to the
            method, or <c>null</c> if no arguments are expected.
            Primitive types are boxed.</param>
        <summary>Handles the method which was originally invoked on the proxy instance.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.Throwable">the exception to throw from the invoked method on the proxy.
             The exception must match one of the declared exception types
             of the invoked method or any unchecked exception type. If not
             then an <c>UndeclaredThrowableException</c> is thrown
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
