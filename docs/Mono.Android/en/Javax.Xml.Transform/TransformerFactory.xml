<Type Name="TransformerFactory" FullName="Javax.Xml.Transform.TransformerFactory">
  <TypeSignature Language="C#" Value="public abstract class TransformerFactory : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TransformerFactory extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("javax/xml/transform/TransformerFactory", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
    </summary>
    <remarks>
      <para tool="javadoc-to-mdoc" />
      <para tool="javadoc-to-mdoc">A TransformerFactory instance can be used to create
 <c><see cref="T:Javax.Xml.Transform.Transformer" /></c> and
 <c><see cref="T:Javax.Xml.Transform.ITemplates" /></c> objects.</para>
      <para tool="javadoc-to-mdoc">The system property that determines which Factory implementation
 to create is named <c>"javax.xml.transform.TransformerFactory"</c>.
 This property names a concrete subclass of the
 <c>TransformerFactory</c> abstract class. If the property is not
 defined, a platform default is be used.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/javax/xml/transform/TransformerFactory.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TransformerFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor is protected on purpose.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Default constructor is protected on purpose.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/TransformerFactory.html#TransformerFactory()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TransformerFactory (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Javax.Xml.Transform.ErrorEventArgs&gt; Error;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Javax.Xml.Transform.ErrorEventArgs&gt; Error" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Javax.Xml.Transform.ErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorListener">
      <MemberSignature Language="C#" Value="public abstract Javax.Xml.Transform.IErrorListener ErrorListener { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Javax.Xml.Transform.IErrorListener ErrorListener" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getErrorListener", "()Ljavax/xml/transform/ErrorListener;", "GetGetErrorListenerHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setErrorListener", "(Ljavax/xml/transform/ErrorListener;)V", "GetSetErrorListener_Ljavax_xml_transform_ErrorListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Transform.IErrorListener</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the error event handler for the TransformerFactory.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/javax/xml/transform/TransformerFactory.html#getErrorListener()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Get the error event handler for the TransformerFactory.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/javax/xml/transform/TransformerFactory.html#setErrorListener(javax.xml.transform.ErrorListener)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the error event listener for the TransformerFactory, which
 is used for the processing of transformation instructions,
 and not for the transformation itself.
 An <c>IllegalArgumentException</c> is thrown if the
 <c>ErrorListener</c> listener is <c>null</c>.</para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="FatalError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Javax.Xml.Transform.FatalErrorEventArgs&gt; FatalError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Javax.Xml.Transform.FatalErrorEventArgs&gt; FatalError" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Javax.Xml.Transform.FatalErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssociatedStylesheet">
      <MemberSignature Language="C#" Value="public abstract Javax.Xml.Transform.ISource GetAssociatedStylesheet (Javax.Xml.Transform.ISource source, string media, string title, string charset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Javax.Xml.Transform.ISource GetAssociatedStylesheet(class Javax.Xml.Transform.ISource source, string media, string title, string charset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getAssociatedStylesheet", "(Ljavax/xml/transform/Source;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljavax/xml/transform/Source;", "GetGetAssociatedStylesheet_Ljavax_xml_transform_Source_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Transform.ISource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Javax.Xml.Transform.ISource" />
        <Parameter Name="media" Type="System.String" />
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="charset" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">The XML source document.</param>
        <param name="media">The media attribute to be matched.  May be null, in which
      case the preferred templates will be used (i.e. alternate = no).</param>
        <param name="title">The value of the title attribute to match.  May be null.</param>
        <param name="charset">The value of the charset attribute to match.  May be null.</param>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Get the stylesheet specification(s) associated with the
 XML <c>Source</c> document via the
  that match the given criteria.
 Note that it is possible to return several stylesheets, in which case
 they are applied as if they were a list of imports or cascades in a
 single stylesheet.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/TransformerFactory.html#getAssociatedStylesheet(javax.xml.transform.Source, java.lang.String, java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Javax.Xml.Transform.TransformerConfigurationException">An <c>Exception</c>
   is thrown if an error occurs during parsing of the
   <c>source</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public abstract Java.Lang.Object GetAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object GetAttribute(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getAttribute", "(Ljava/lang/String;)Ljava/lang/Object;", "GetGetAttribute_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the attribute.</param>
        <summary>Allows the user to retrieve specific attributes on the underlying
 implementation.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Allows the user to retrieve specific attributes on the underlying
 implementation.
 An <c>IllegalArgumentException</c> is thrown if the underlying
 implementation doesn't recognize the attribute.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/TransformerFactory.html#getAttribute(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetFeature">
      <MemberSignature Language="C#" Value="public abstract bool GetFeature (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetFeature(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getFeature", "(Ljava/lang/String;)Z", "GetGetFeature_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Feature name.</param>
        <summary>Look up the value of a feature.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Look up the value of a feature.

 </para>
          <para tool="javadoc-to-mdoc">
 Feature names are fully qualified <c><see cref="T:Java.Net.URI" /></c>s.
 Implementations may define their own features.
 <c>false</c> is returned if this <c>TransformerFactory</c> or the
 <c>Transformer</c>s or <c>Template</c>s it creates cannot support the feature.
 It is possible for an <c>TransformerFactory</c> to expose a feature value but be unable to change its state.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/TransformerFactory.html#getFeature(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.NullPointerException">If the <c>name</c> parameter is null.
</exception>
      </Docs>
    </Member>
    <Member MemberName="NewInstance">
      <MemberSignature Language="C#" Value="public static Javax.Xml.Transform.TransformerFactory NewInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Xml.Transform.TransformerFactory NewInstance() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newInstance", "()Ljavax/xml/transform/TransformerFactory;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Transform.TransformerFactory</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">Returns an instance of the named implementation of <c>TransformerFactory</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns Android's implementation of <c>TransformerFactory</c>. Unlike
 other Java implementations, this method does not consult system
 properties, properties files, or the services API.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/TransformerFactory.html#newInstance()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Javax.Xml.Transform.TransformerFactoryConfigurationError">never. Included for API
     compatibility with other Java implementations.
</exception>
      </Docs>
    </Member>
    <Member MemberName="NewInstance">
      <MemberSignature Language="C#" Value="public static Javax.Xml.Transform.TransformerFactory NewInstance (string factoryClassName, Java.Lang.ClassLoader classLoader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Xml.Transform.TransformerFactory NewInstance(string factoryClassName, class Java.Lang.ClassLoader classLoader) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newInstance", "(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljavax/xml/transform/TransformerFactory;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Transform.TransformerFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.String" />
        <Parameter Name="p1" Type="Java.Lang.ClassLoader" />
      </Parameters>
      <Docs>
        <param name="factoryClassName">To be added.</param>
        <param name="classLoader">To be added.</param>
        <summary>Returns an instance of the named implementation of <c>TransformerFactory</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns an instance of the named implementation of <c>TransformerFactory</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/TransformerFactory.html#newInstance(java.lang.String, java.lang.ClassLoader)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Javax.Xml.Transform.TransformerFactoryConfigurationError">if <c>factoryClassName</c> is not available or
     cannot be instantiated.</exception>
      </Docs>
    </Member>
    <Member MemberName="NewTemplates">
      <MemberSignature Language="C#" Value="public abstract Javax.Xml.Transform.ITemplates NewTemplates (Javax.Xml.Transform.ISource source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Javax.Xml.Transform.ITemplates NewTemplates(class Javax.Xml.Transform.ISource source) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newTemplates", "(Ljavax/xml/transform/Source;)Ljavax/xml/transform/Templates;", "GetNewTemplates_Ljavax_xml_transform_Source_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Transform.ITemplates</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Javax.Xml.Transform.ISource" />
      </Parameters>
      <Docs>
        <param name="source">An object that holds a URL, input stream, etc.</param>
        <summary>Process the Source into a Templates object, which is a
 a compiled representation of the source.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Process the Source into a Templates object, which is a
 a compiled representation of the source. This Templates object
 may then be used concurrently across multiple threads.  Creating
 a Templates object allows the TransformerFactory to do detailed
 performance optimization of transformation instructions, without
 penalizing runtime transformation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/TransformerFactory.html#newTemplates(javax.xml.transform.Source)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Javax.Xml.Transform.TransformerConfigurationException">May throw this during the
 parse when it is constructing the Templates object and fails.
</exception>
      </Docs>
    </Member>
    <Member MemberName="NewTransformer">
      <MemberSignature Language="C#" Value="public abstract Javax.Xml.Transform.Transformer NewTransformer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Javax.Xml.Transform.Transformer NewTransformer() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newTransformer", "()Ljavax/xml/transform/Transformer;", "GetNewTransformerHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Transform.Transformer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">Process the <c>Source</c> into a <c>Transformer</c><c>Object</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Create a new <c>Transformer</c> that performs a copy
 of the <c>Source</c> to the <c>Result</c>.
 i.e. the "<i>identity transform</i>".</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/TransformerFactory.html#newTransformer()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Javax.Xml.Transform.TransformerConfigurationException">Thrown if it is not
   possible to create a <c>Transformer</c> instance.
</exception>
      </Docs>
    </Member>
    <Member MemberName="NewTransformer">
      <MemberSignature Language="C#" Value="public abstract Javax.Xml.Transform.Transformer NewTransformer (Javax.Xml.Transform.ISource source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Javax.Xml.Transform.Transformer NewTransformer(class Javax.Xml.Transform.ISource source) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newTransformer", "(Ljavax/xml/transform/Source;)Ljavax/xml/transform/Transformer;", "GetNewTransformer_Ljavax_xml_transform_Source_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Transform.Transformer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Javax.Xml.Transform.ISource" />
      </Parameters>
      <Docs>
        <param name="source">
          <c>Source </c> of XSLT document used to create
   <c>Transformer</c>.
   Examples of XML <c>Source</c>s include
   <c><see cref="T:Javax.Xml.Transform.Stream.StreamSource" /></c>,
   <c><see cref="T:Javax.Xml.Transform.Sax.SAXSource" /></c> and
   <c><see cref="T:Javax.Xml.Transform.Dom.DOMSource" /></c>.</param>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Process the <c>Source</c> into a <c>Transformer</c><c>Object</c>.  The <c>Source</c> is an XSLT document that
 conforms to .  Care must
 be taken not to use this <c>Transformer</c> in multiple
 <c>Thread</c>s running concurrently.
 Different <c>TransformerFactories</c> can be used concurrently by
 different <c>Thread</c>s.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/TransformerFactory.html#newTransformer(javax.xml.transform.Source)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Javax.Xml.Transform.TransformerConfigurationException">Thrown if there are errors when
    parsing the <c>Source</c> or it is not possible to create a
   <c>Transformer</c> instance.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAttribute">
      <MemberSignature Language="C#" Value="public abstract void SetAttribute (string name, Java.Lang.Object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAttribute(string name, class Java.Lang.Object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAttribute", "(Ljava/lang/String;Ljava/lang/Object;)V", "GetSetAttribute_Ljava_lang_String_Ljava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="name">The name of the attribute.</param>
        <param name="value">The value of the attribute.
</param>
        <summary>Allows the user to set specific attributes on the underlying
 implementation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Allows the user to set specific attributes on the underlying
 implementation.  An attribute in this context is defined to
 be an option that the implementation provides.
 An <c>IllegalArgumentException</c> is thrown if the underlying
 implementation doesn't recognize the attribute.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/TransformerFactory.html#setAttribute(java.lang.String, java.lang.Object)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetFeature">
      <MemberSignature Language="C#" Value="public abstract void SetFeature (string name, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFeature(string name, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setFeature", "(Ljava/lang/String;Z)V", "GetSetFeature_Ljava_lang_String_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">Feature name.</param>
        <param name="value">Is feature state <c>true</c> or <c>false</c>.</param>
        <summary tool="true">

 
 Feature names are fully qualified <see cref="T:Java.Net.URI" />s.Set a feature for this <c>TransformerFactory</c> and <c>Transformer</c>s
 or <c>Template</c>s created by this factory.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">
            <list type="bullet">
              <item>
                <term>
                  <c>true</c>: the implementation will limit XML processing to conform to implementation limits
     and behave in a secure fashion as defined by the implementation.
     Examples include resolving user defined style sheets and functions.
     If XML processing is limited for security reasons, it will be reported via a call to the registered
     <c><see cref="M:Javax.Xml.Transform.IErrorListener.FatalError(Javax.Xml.Transform.TransformerException)" /></c>.
     See <c><see cref="P:Javax.Xml.Transform.TransformerFactory.ErrorListener" /></c>.
   </term>
              </item>
              <item>
                <term>
                  <c>false</c>: the implementation will processing XML according to the XML specifications without
     regard to possible implementation limits.
   </term>
              </item>
            </list>
          </para>
          <para tool="javadoc-to-mdoc">Set a feature for this <c>TransformerFactory</c> and <c>Transformer</c>s
 or <c>Template</c>s created by this factory.</para>
          <para tool="javadoc-to-mdoc">
 Feature names are fully qualified <c><see cref="T:Java.Net.URI" /></c>s.
 Implementations may define their own features.
 An <c><see cref="T:Javax.Xml.Transform.TransformerConfigurationException" /></c> is thrown if this <c>TransformerFactory</c> or the
 <c>Transformer</c>s or <c>Template</c>s it creates cannot support the feature.
 It is possible for an <c>TransformerFactory</c> to expose a feature value but be unable to change its state.
 </para>
          <para tool="javadoc-to-mdoc">All implementations are required to support the <c><see cref="F:Javax.Xml.XMLConstants.FeatureSecureProcessing" /></c> feature.
 When the feature is:</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/TransformerFactory.html#setFeature(java.lang.String, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Javax.Xml.Transform.TransformerConfigurationException">if this <c>TransformerFactory</c>
   or the <c>Transformer</c>s or <c>Template</c>s it creates cannot support this feature.</exception>
        <exception cref="T:Java.Lang.NullPointerException">If the <c>name</c> parameter is null.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="URIResolver">
      <MemberSignature Language="C#" Value="public abstract Javax.Xml.Transform.IURIResolver URIResolver { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Javax.Xml.Transform.IURIResolver URIResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getURIResolver", "()Ljavax/xml/transform/URIResolver;", "GetGetURIResolverHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setURIResolver", "(Ljavax/xml/transform/URIResolver;)V", "GetSetURIResolver_Ljavax_xml_transform_URIResolver_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Transform.IURIResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the object that is used by default during the transformation
 to resolve URIs used in document(), xsl:import, or xsl:include.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/javax/xml/transform/TransformerFactory.html#getURIResolver()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Get the object that is used by default during the transformation
 to resolve URIs used in document(), xsl:import, or xsl:include.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/javax/xml/transform/TransformerFactory.html#setURIResolver(javax.xml.transform.URIResolver)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set an object that is used by default during the transformation
 to resolve URIs used in document(), xsl:import, or xsl:include.</para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="Warning">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Javax.Xml.Transform.WarningEventArgs&gt; Warning;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Javax.Xml.Transform.WarningEventArgs&gt; Warning" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Javax.Xml.Transform.WarningEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>