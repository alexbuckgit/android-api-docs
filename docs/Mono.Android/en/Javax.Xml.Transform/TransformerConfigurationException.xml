<Type Name="TransformerConfigurationException" FullName="Javax.Xml.Transform.TransformerConfigurationException">
  <TypeSignature Language="C#" Value="public class TransformerConfigurationException : Javax.Xml.Transform.TransformerException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TransformerConfigurationException extends Javax.Xml.Transform.TransformerException" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Javax.Xml.Transform.TransformerException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("javax/xml/transform/TransformerConfigurationException", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Indicates a serious configuration error.</summary>
    <remarks><para tool="javadoc-to-mdoc">Indicates a serious configuration error.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/javax/xml/transform/TransformerConfigurationException.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransformerConfigurationException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Create a new <c>TransformerConfigurationException</c> with no
 detail message.</summary>
        <remarks><para tool="javadoc-to-mdoc">Create a new <c>TransformerConfigurationException</c> with no
 detail message.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/javax/xml/transform/TransformerConfigurationException.html#TransformerConfigurationException()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransformerConfigurationException (Java.Lang.Throwable e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Lang.Throwable e) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/Throwable;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="e" Type="Java.Lang.Throwable" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>Create a new <c>TransformerConfigurationException</c> with a
 given <c>Exception</c> base cause of the error.</summary>
        <remarks><para tool="javadoc-to-mdoc">Create a new <c>TransformerConfigurationException</c> with a
 given <c>Exception</c> base cause of the error.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/javax/xml/transform/TransformerConfigurationException.html#TransformerConfigurationException(java.lang.Throwable)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransformerConfigurationException (string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string msg) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="msg">To be added.</param>
        <summary>Create a new <c>TransformerConfigurationException</c> with
 the <c>String </c> specified as an error message.</summary>
        <remarks><para tool="javadoc-to-mdoc">Create a new <c>TransformerConfigurationException</c> with
 the <c>String </c> specified as an error message.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/javax/xml/transform/TransformerConfigurationException.html#TransformerConfigurationException(java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TransformerConfigurationException (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransformerConfigurationException (string msg, Java.Lang.Throwable e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string msg, class Java.Lang.Throwable e) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;Ljava/lang/Throwable;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="e" Type="Java.Lang.Throwable" />
      </Parameters>
      <Docs>
        <param name="msg">To be added.</param>
        <param name="e">To be added.</param>
        <summary>Create a new <c>TransformerConfigurationException</c> with the
 given <c>Exception</c> base cause and detail message.</summary>
        <remarks><para tool="javadoc-to-mdoc">Create a new <c>TransformerConfigurationException</c> with the
 given <c>Exception</c> base cause and detail message.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/javax/xml/transform/TransformerConfigurationException.html#TransformerConfigurationException(java.lang.String, java.lang.Throwable)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransformerConfigurationException (string message, Javax.Xml.Transform.ISourceLocator locator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class Javax.Xml.Transform.ISourceLocator locator) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;Ljavax/xml/transform/SourceLocator;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="locator" Type="Javax.Xml.Transform.ISourceLocator" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <param name="locator">To be added.</param>
        <summary>Create a new TransformerConfigurationException from a message and a Locator.</summary>
        <remarks><para tool="javadoc-to-mdoc">Create a new TransformerConfigurationException from a message and a Locator.

 </para><para tool="javadoc-to-mdoc">This constructor is especially useful when an application is
 creating its own exception from within a DocumentHandler
 callback.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/javax/xml/transform/TransformerConfigurationException.html#TransformerConfigurationException(java.lang.String, javax.xml.transform.SourceLocator)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransformerConfigurationException (string message, Javax.Xml.Transform.ISourceLocator locator, Java.Lang.Throwable e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class Javax.Xml.Transform.ISourceLocator locator, class Java.Lang.Throwable e) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;Ljavax/xml/transform/SourceLocator;Ljava/lang/Throwable;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="locator" Type="Javax.Xml.Transform.ISourceLocator" />
        <Parameter Name="e" Type="Java.Lang.Throwable" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <param name="locator">To be added.</param>
        <param name="e">To be added.</param>
        <summary>Wrap an existing exception in a TransformerConfigurationException.</summary>
        <remarks><para tool="javadoc-to-mdoc">Wrap an existing exception in a TransformerConfigurationException.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/javax/xml/transform/TransformerConfigurationException.html#TransformerConfigurationException(java.lang.String, javax.xml.transform.SourceLocator, java.lang.Throwable)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
