<Type Name="IErrorListener" FullName="Javax.Xml.Transform.IErrorListener">
  <TypeSignature Language="C#" Value="public interface IErrorListener : Android.Runtime.IJavaObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IErrorListener implements class Android.Runtime.IJavaObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("javax/xml/transform/ErrorListener", "", "Javax.Xml.Transform.IErrorListenerInvoker")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
    </summary>
    <remarks>
      <para tool="javadoc-to-mdoc" />
      <para tool="javadoc-to-mdoc">To provide customized error handling, implement this interface and
 use the <c>setErrorListener</c> method to register an instance of the
 implementation with the <c><see cref="T:Javax.Xml.Transform.Transformer" /></c>.  The
 <c>Transformer</c> then reports all errors and warnings through this
 interface.</para>
      <para tool="javadoc-to-mdoc">If an application does <i>not</i> register its own custom
 <c>ErrorListener</c>, the default <c>ErrorListener</c>
 is used which reports all warnings and errors to <c>System.err</c>
 and does not throw any <c>Exception</c>s.
 Applications are <i>strongly</i> encouraged to register and use
 <c>ErrorListener</c>s that insure proper behavior for warnings and
 errors.</para>
      <para tool="javadoc-to-mdoc">For transformation errors, a <c>Transformer</c> must use this
 interface instead of throwing an <c>Exception</c>: it is up to the
 application to decide whether to throw an <c>Exception</c> for
 different types of errors and warnings.  Note however that the
 <c>Transformer</c> is not required to continue with the transformation
 after a call to <c><see cref="M:Javax.Xml.Transform.IErrorListener.FatalError(Javax.Xml.Transform.TransformerException)" /></c>.</para>
      <para tool="javadoc-to-mdoc">
        <c>Transformer</c>s may use this mechanism to report XML parsing
 errors as well as transformation errors.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/javax/xml/transform/ErrorListener.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 8" />
  </Docs>
  <Members>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public void Error (Javax.Xml.Transform.TransformerException exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Error(class Javax.Xml.Transform.TransformerException exception) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("error", "(Ljavax/xml/transform/TransformerException;)V", "GetError_Ljavax_xml_transform_TransformerException_Handler:Javax.Xml.Transform.IErrorListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="Javax.Xml.Transform.TransformerException" />
      </Parameters>
      <Docs>
        <param name="exception">The error information encapsulated in a
                  transformer exception.</param>
        <summary>Receive notification of a recoverable error.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Receive notification of a recoverable error.

 </para>
          <para tool="javadoc-to-mdoc">The transformer must continue to try and provide normal transformation
 after invoking this method.  It should still be possible for the
 application to process the document through to the end if no other errors
 are encountered.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/ErrorListener.html#error(javax.xml.transform.TransformerException)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Javax.Xml.Transform.TransformerException">if the application
 chooses to discontinue the transformation.</exception>
        <altmember cref="T:Javax.Xml.Transform.TransformerException" />
      </Docs>
    </Member>
    <Member MemberName="FatalError">
      <MemberSignature Language="C#" Value="public void FatalError (Javax.Xml.Transform.TransformerException exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FatalError(class Javax.Xml.Transform.TransformerException exception) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("fatalError", "(Ljavax/xml/transform/TransformerException;)V", "GetFatalError_Ljavax_xml_transform_TransformerException_Handler:Javax.Xml.Transform.IErrorListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="Javax.Xml.Transform.TransformerException" />
      </Parameters>
      <Docs>
        <param name="exception">The error information encapsulated in a
    <c>TransformerException</c>.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Receive notification of a non-recoverable error.</para>
          <para tool="javadoc-to-mdoc">The <c>Transformer</c> must continue to try and provide normal
 transformation after invoking this method.  It should still be possible for the
 application to process the document through to the end if no other errors
 are encountered, but there is no guarantee that the output will be
 useable.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/ErrorListener.html#fatalError(javax.xml.transform.TransformerException)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Javax.Xml.Transform.TransformerException">if the application
 chooses to discontinue the transformation.</exception>
        <altmember cref="T:Javax.Xml.Transform.TransformerException" />
      </Docs>
    </Member>
    <Member MemberName="Warning">
      <MemberSignature Language="C#" Value="public void Warning (Javax.Xml.Transform.TransformerException exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Warning(class Javax.Xml.Transform.TransformerException exception) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("warning", "(Ljavax/xml/transform/TransformerException;)V", "GetWarning_Ljavax_xml_transform_TransformerException_Handler:Javax.Xml.Transform.IErrorListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="Javax.Xml.Transform.TransformerException" />
      </Parameters>
      <Docs>
        <param name="exception">The warning information encapsulated in a
                  transformer exception.</param>
        <summary>Receive notification of a warning.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Receive notification of a warning.

 </para>
          <para tool="javadoc-to-mdoc">
            <c>
              <see cref="T:Javax.Xml.Transform.Transformer" />
            </c> can use this method to report
 conditions that are not errors or fatal errors.  The default behavior
 is to take no action.</para>
          <para tool="javadoc-to-mdoc">After invoking this method, the Transformer must continue with
 the transformation. It should still be possible for the
 application to process the document through to the end.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/ErrorListener.html#warning(javax.xml.transform.TransformerException)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Javax.Xml.Transform.TransformerException">if the application
 chooses to discontinue the transformation.</exception>
        <altmember cref="T:Javax.Xml.Transform.TransformerException" />
      </Docs>
    </Member>
  </Members>
</Type>
