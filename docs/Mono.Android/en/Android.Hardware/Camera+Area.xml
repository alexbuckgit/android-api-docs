<Type Name="Camera+Area" FullName="Android.Hardware.Camera+Area">
  <TypeSignature Language="C#" Value="public class Camera.Area : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit Camera/Area extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/hardware/Camera$Area", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("This class is obsoleted in this android platform")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
    </summary>
    <remarks>
      <para tool="javadoc-to-mdoc" />
      <para tool="javadoc-to-mdoc">The Area class is used for choosing specific metering and focus areas for
 the camera to use when calculating auto-exposure, auto-white balance, and
 auto-focus.</para>
      <para tool="javadoc-to-mdoc">To find out how many simultaneous areas a given camera supports, use
 <c><see cref="P:Android.Hardware.Camera.Parameters.MaxNumMeteringAreas" /></c> and
 <c><see cref="P:Android.Hardware.Camera.Parameters.MaxNumFocusAreas" /></c>. If metering or focusing area
 selection is unsupported, these methods will return 0.</para>
      <para tool="javadoc-to-mdoc">Each Area consists of a rectangle specifying its bounds, and a weight
 that determines its importance. The bounds are relative to the camera's
 current field of view. The coordinates are mapped so that (-1000, -1000)
 is always the top-left corner of the current field of view, and (1000,
 1000) is always the bottom-right corner of the current field of
 view. Setting Areas with bounds outside that range is not allowed. Areas
 with zero or negative width or height are not allowed.</para>
      <para tool="javadoc-to-mdoc">The weight must range from 1 to 1000, and represents a weight for
 every pixel in the area. This means that a large metering area with
 the same weight as a smaller area will have more effect in the
 metering result.  Metering areas can overlap and the driver
 will add the weights in the overlap region.<format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="!:Android.Hardware.Camera+Parameters.setFocusAreas(java.util.List&lt;android.hardware.Camera.Area&gt;)" /></c></term></item><item><term><c><see cref="P:Android.Hardware.Camera.Parameters.FocusAreas" /></c></term></item><item><term><c><see cref="P:Android.Hardware.Camera.Parameters.MaxNumFocusAreas" /></c></term></item><item><term><c><see cref="!:Android.Hardware.Camera+Parameters.setMeteringAreas(java.util.List&lt;android.hardware.Camera.Area&gt;)" /></c></term></item><item><term><c><see cref="P:Android.Hardware.Camera.Parameters.MeteringAreas" /></c></term></item><item><term><c><see cref="P:Android.Hardware.Camera.Parameters.MaxNumMeteringAreas" /></c></term></item></list></para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/hardware/Camera.Area.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 14" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Area (Android.Graphics.Rect rect, int weight);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Graphics.Rect rect, int32 weight) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/graphics/Rect;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="rect" Type="Android.Graphics.Rect" />
        <Parameter Name="weight" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <param name="weight">To be added.</param>
        <summary>Create an area with specified rectangle and weight.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Create an area with specified rectangle and weight.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/Camera.Area.html#Camera.Area(android.graphics.Rect, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Area (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T}(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rect">
      <MemberSignature Language="C#" Value="public Android.Graphics.Rect Rect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Rect Rect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("rect")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bounds of the area. (-1000, -1000) represents the top-left of the
 camera field of view, and (1000, 1000) represents the bottom-right of
 the field of view.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Bounds of the area. (-1000, -1000) represents the top-left of the
 camera field of view, and (1000, 1000) represents the bottom-right of
 the field of view. Setting bounds outside that range is not
 allowed. Bounds with zero or negative width or height are not
 allowed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/Camera.Area.html#rect" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="P:Android.Hardware.Camera.Parameters.FocusAreas" />
        <altmember cref="P:Android.Hardware.Camera.Parameters.MeteringAreas" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Weight">
      <MemberSignature Language="C#" Value="public int Weight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Weight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("weight")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Weight of the area.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Weight of the area. The weight must range from 1 to 1000, and
 represents a weight for every pixel in the area. This means that a
 large metering area with the same weight as a smaller area will have
 more effect in the metering result.  Metering areas can overlap and
 the driver will add the weights in the overlap region.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/Camera.Area.html#weight" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="P:Android.Hardware.Camera.Parameters.FocusAreas" />
        <altmember cref="P:Android.Hardware.Camera.Parameters.MeteringAreas" />
      </Docs>
    </Member>
  </Members>
</Type>
