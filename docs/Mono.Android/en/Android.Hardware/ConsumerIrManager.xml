<Type Name="ConsumerIrManager" FullName="Android.Hardware.ConsumerIrManager">
  <TypeSignature Language="C#" Value="public sealed class ConsumerIrManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ConsumerIrManager extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/hardware/ConsumerIrManager", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="19">
    <summary>Class that operates consumer infrared on the device.</summary>
    <remarks />
  </Docs>
  <Members>
    <Member MemberName="GetCarrierFrequencies">
      <MemberSignature Language="C#" Value="public Android.Hardware.ConsumerIrManager.CarrierFrequencyRange[] GetCarrierFrequencies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Hardware.ConsumerIrManager/CarrierFrequencyRange[] GetCarrierFrequencies() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getCarrierFrequencies", "()[Landroid/hardware/ConsumerIrManager$CarrierFrequencyRange;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.ConsumerIrManager+CarrierFrequencyRange[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Query the infrared transmitter's supported carrier frequencies</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="HasIrEmitter">
      <MemberSignature Language="C#" Value="public bool HasIrEmitter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasIrEmitter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("hasIrEmitter", "()Z", "GetHasIrEmitterHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Check whether the device has an infrared emitter.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Transmit">
      <MemberSignature Language="C#" Value="public void Transmit (int carrierFrequency, int[] pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transmit(int32 carrierFrequency, int32[] pattern) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("transmit", "(I[I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="carrierFrequency" Type="System.Int32" />
        <Parameter Name="pattern" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="carrierFrequency">The IR carrier frequency in Hertz.</param>
        <param name="pattern">The alternating on/off pattern in microseconds to transmit.
</param>
        <summary>Transmit an infrared pattern
 </summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="TransmitAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task TransmitAsync (int carrierFrequency, int[] pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task TransmitAsync(int32 carrierFrequency, int32[] pattern) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="carrierFrequency" Type="System.Int32" />
        <Parameter Name="pattern" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="carrierFrequency">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
