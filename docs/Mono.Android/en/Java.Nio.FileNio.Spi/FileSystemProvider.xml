<Type Name="FileSystemProvider" FullName="Java.Nio.FileNio.Spi.FileSystemProvider">
  <TypeSignature Language="C#" Value="public abstract class FileSystemProvider : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FileSystemProvider extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Java.Nio.FileNio.Spi.FileSystemProvider" />
  <TypeSignature Language="F#" Value="type FileSystemProvider = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/nio/file/spi/FileSystemProvider", ApiSince=26, DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/nio/file/spi/FileSystemProvider" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FileSystemProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.Spi.FileSystemProvider.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FileSystemProvider (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.Spi.FileSystemProvider.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Nio.FileNio.Spi.FileSystemProvider : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Nio.FileNio.Spi.FileSystemProvider" Usage="new Java.Nio.FileNio.Spi.FileSystemProvider (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">To be added.</param>
        <param name="transfer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public abstract void CheckAccess (Java.Nio.FileNio.IPath path, params Java.Nio.FileNio.AccessMode[] modes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckAccess(class Java.Nio.FileNio.IPath path, class Java.Nio.FileNio.AccessMode[] modes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.Spi.FileSystemProvider.CheckAccess(Java.Nio.FileNio.IPath,Java.Nio.FileNio.AccessMode[])" />
      <MemberSignature Language="F#" Value="abstract member CheckAccess : Java.Nio.FileNio.IPath * Java.Nio.FileNio.AccessMode[] -&gt; unit" Usage="fileSystemProvider.CheckAccess (path, modes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("checkAccess", "(Ljava/nio/file/Path;[Ljava/nio/file/AccessMode;)V", "GetCheckAccess_Ljava_nio_file_Path_arrayLjava_nio_file_AccessMode_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="Java.Nio.FileNio.IPath" />
        <Parameter Name="modes" Type="Java.Nio.FileNio.AccessMode[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="modes">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public abstract void Copy (Java.Nio.FileNio.IPath source, Java.Nio.FileNio.IPath target, params Java.Nio.FileNio.ICopyOption[] options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy(class Java.Nio.FileNio.IPath source, class Java.Nio.FileNio.IPath target, class Java.Nio.FileNio.ICopyOption[] options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.Spi.FileSystemProvider.Copy(Java.Nio.FileNio.IPath,Java.Nio.FileNio.IPath,Java.Nio.FileNio.ICopyOption[])" />
      <MemberSignature Language="F#" Value="abstract member Copy : Java.Nio.FileNio.IPath * Java.Nio.FileNio.IPath * Java.Nio.FileNio.ICopyOption[] -&gt; unit" Usage="fileSystemProvider.Copy (source, target, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copy", "(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)V", "GetCopy_Ljava_nio_file_Path_Ljava_nio_file_Path_arrayLjava_nio_file_CopyOption_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Java.Nio.FileNio.IPath" />
        <Parameter Name="target" Type="Java.Nio.FileNio.IPath" />
        <Parameter Name="options" Type="Java.Nio.FileNio.ICopyOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="target">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDirectory">
      <MemberSignature Language="C#" Value="public abstract void CreateDirectory (Java.Nio.FileNio.IPath dir, params Java.Nio.FileNio.Attributes.IFileAttribute[] attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateDirectory(class Java.Nio.FileNio.IPath dir, class Java.Nio.FileNio.Attributes.IFileAttribute[] attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.Spi.FileSystemProvider.CreateDirectory(Java.Nio.FileNio.IPath,Java.Nio.FileNio.Attributes.IFileAttribute[])" />
      <MemberSignature Language="F#" Value="abstract member CreateDirectory : Java.Nio.FileNio.IPath * Java.Nio.FileNio.Attributes.IFileAttribute[] -&gt; unit" Usage="fileSystemProvider.CreateDirectory (dir, attrs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createDirectory", "(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)V", "GetCreateDirectory_Ljava_nio_file_Path_arrayLjava_nio_file_attribute_FileAttribute_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dir" Type="Java.Nio.FileNio.IPath" />
        <Parameter Name="attrs" Type="Java.Nio.FileNio.Attributes.IFileAttribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="dir">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateLink">
      <MemberSignature Language="C#" Value="public virtual void CreateLink (Java.Nio.FileNio.IPath link, Java.Nio.FileNio.IPath existing);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateLink(class Java.Nio.FileNio.IPath link, class Java.Nio.FileNio.IPath existing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.Spi.FileSystemProvider.CreateLink(Java.Nio.FileNio.IPath,Java.Nio.FileNio.IPath)" />
      <MemberSignature Language="F#" Value="abstract member CreateLink : Java.Nio.FileNio.IPath * Java.Nio.FileNio.IPath -&gt; unit&#xA;override this.CreateLink : Java.Nio.FileNio.IPath * Java.Nio.FileNio.IPath -&gt; unit" Usage="fileSystemProvider.CreateLink (link, existing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createLink", "(Ljava/nio/file/Path;Ljava/nio/file/Path;)V", "GetCreateLink_Ljava_nio_file_Path_Ljava_nio_file_Path_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="link" Type="Java.Nio.FileNio.IPath" />
        <Parameter Name="existing" Type="Java.Nio.FileNio.IPath" />
      </Parameters>
      <Docs>
        <param name="link">To be added.</param>
        <param name="existing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSymbolicLink">
      <MemberSignature Language="C#" Value="public virtual void CreateSymbolicLink (Java.Nio.FileNio.IPath link, Java.Nio.FileNio.IPath target, params Java.Nio.FileNio.Attributes.IFileAttribute[] attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateSymbolicLink(class Java.Nio.FileNio.IPath link, class Java.Nio.FileNio.IPath target, class Java.Nio.FileNio.Attributes.IFileAttribute[] attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.Spi.FileSystemProvider.CreateSymbolicLink(Java.Nio.FileNio.IPath,Java.Nio.FileNio.IPath,Java.Nio.FileNio.Attributes.IFileAttribute[])" />
      <MemberSignature Language="F#" Value="abstract member CreateSymbolicLink : Java.Nio.FileNio.IPath * Java.Nio.FileNio.IPath * Java.Nio.FileNio.Attributes.IFileAttribute[] -&gt; unit&#xA;override this.CreateSymbolicLink : Java.Nio.FileNio.IPath * Java.Nio.FileNio.IPath * Java.Nio.FileNio.Attributes.IFileAttribute[] -&gt; unit" Usage="fileSystemProvider.CreateSymbolicLink (link, target, attrs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createSymbolicLink", "(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)V", "GetCreateSymbolicLink_Ljava_nio_file_Path_Ljava_nio_file_Path_arrayLjava_nio_file_attribute_FileAttribute_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="link" Type="Java.Nio.FileNio.IPath" />
        <Parameter Name="target" Type="Java.Nio.FileNio.IPath" />
        <Parameter Name="attrs" Type="Java.Nio.FileNio.Attributes.IFileAttribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="link">To be added.</param>
        <param name="target">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public abstract void Delete (Java.Nio.FileNio.IPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete(class Java.Nio.FileNio.IPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.Spi.FileSystemProvider.Delete(Java.Nio.FileNio.IPath)" />
      <MemberSignature Language="F#" Value="abstract member Delete : Java.Nio.FileNio.IPath -&gt; unit" Usage="fileSystemProvider.Delete path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("delete", "(Ljava/nio/file/Path;)V", "GetDelete_Ljava_nio_file_Path_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="Java.Nio.FileNio.IPath" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteIfExists">
      <MemberSignature Language="C#" Value="public virtual bool DeleteIfExists (Java.Nio.FileNio.IPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DeleteIfExists(class Java.Nio.FileNio.IPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.Spi.FileSystemProvider.DeleteIfExists(Java.Nio.FileNio.IPath)" />
      <MemberSignature Language="F#" Value="abstract member DeleteIfExists : Java.Nio.FileNio.IPath -&gt; bool&#xA;override this.DeleteIfExists : Java.Nio.FileNio.IPath -&gt; bool" Usage="fileSystemProvider.DeleteIfExists path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("deleteIfExists", "(Ljava/nio/file/Path;)Z", "GetDeleteIfExists_Ljava_nio_file_Path_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="Java.Nio.FileNio.IPath" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileAttributeView">
      <MemberSignature Language="C#" Value="public abstract Java.Lang.Object GetFileAttributeView (Java.Nio.FileNio.IPath path, Java.Lang.Class type, params Java.Nio.FileNio.LinkOption[] options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object GetFileAttributeView(class Java.Nio.FileNio.IPath path, class Java.Lang.Class type, class Java.Nio.FileNio.LinkOption[] options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.Spi.FileSystemProvider.GetFileAttributeView(Java.Nio.FileNio.IPath,Java.Lang.Class,Java.Nio.FileNio.LinkOption[])" />
      <MemberSignature Language="F#" Value="abstract member GetFileAttributeView : Java.Nio.FileNio.IPath * Java.Lang.Class * Java.Nio.FileNio.LinkOption[] -&gt; Java.Lang.Object" Usage="fileSystemProvider.GetFileAttributeView (path, type, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getFileAttributeView", "(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;", "GetGetFileAttributeView_Ljava_nio_file_Path_Ljava_lang_Class_arrayLjava_nio_file_LinkOption_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Java.Interop.JavaTypeParameters(new System.String[] { "V extends java.nio.file.attribute.FileAttributeView" })</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="Java.Nio.FileNio.IPath" />
        <Parameter Name="type" Type="Java.Lang.Class" />
        <Parameter Name="options" Type="Java.Nio.FileNio.LinkOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="type">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileStore">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.FileNio.FileStore GetFileStore (Java.Nio.FileNio.IPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.FileNio.FileStore GetFileStore(class Java.Nio.FileNio.IPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.Spi.FileSystemProvider.GetFileStore(Java.Nio.FileNio.IPath)" />
      <MemberSignature Language="F#" Value="abstract member GetFileStore : Java.Nio.FileNio.IPath -&gt; Java.Nio.FileNio.FileStore" Usage="fileSystemProvider.GetFileStore path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getFileStore", "(Ljava/nio/file/Path;)Ljava/nio/file/FileStore;", "GetGetFileStore_Ljava_nio_file_Path_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.FileNio.FileStore</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="Java.Nio.FileNio.IPath" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileSystem">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.FileNio.FileSystem GetFileSystem (Java.Net.URI uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.FileNio.FileSystem GetFileSystem(class Java.Net.URI uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.Spi.FileSystemProvider.GetFileSystem(Java.Net.URI)" />
      <MemberSignature Language="F#" Value="abstract member GetFileSystem : Java.Net.URI -&gt; Java.Nio.FileNio.FileSystem" Usage="fileSystemProvider.GetFileSystem uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getFileSystem", "(Ljava/net/URI;)Ljava/nio/file/FileSystem;", "GetGetFileSystem_Ljava_net_URI_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.FileNio.FileSystem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Java.Net.URI" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPath">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.FileNio.IPath GetPath (Java.Net.URI uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.FileNio.IPath GetPath(class Java.Net.URI uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.Spi.FileSystemProvider.GetPath(Java.Net.URI)" />
      <MemberSignature Language="F#" Value="abstract member GetPath : Java.Net.URI -&gt; Java.Nio.FileNio.IPath" Usage="fileSystemProvider.GetPath uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPath", "(Ljava/net/URI;)Ljava/nio/file/Path;", "GetGetPath_Ljava_net_URI_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.FileNio.IPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Java.Net.URI" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstalledProviders">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;Java.Nio.FileNio.Spi.FileSystemProvider&gt; InstalledProviders ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class Java.Nio.FileNio.Spi.FileSystemProvider&gt; InstalledProviders() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.Spi.FileSystemProvider.InstalledProviders" />
      <MemberSignature Language="F#" Value="static member InstalledProviders : unit -&gt; System.Collections.Generic.IList&lt;Java.Nio.FileNio.Spi.FileSystemProvider&gt;" Usage="Java.Nio.FileNio.Spi.FileSystemProvider.InstalledProviders " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("installedProviders", "()Ljava/util/List;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Java.Nio.FileNio.Spi.FileSystemProvider&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHidden">
      <MemberSignature Language="C#" Value="public abstract bool IsHidden (Java.Nio.FileNio.IPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsHidden(class Java.Nio.FileNio.IPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.Spi.FileSystemProvider.IsHidden(Java.Nio.FileNio.IPath)" />
      <MemberSignature Language="F#" Value="abstract member IsHidden : Java.Nio.FileNio.IPath -&gt; bool" Usage="fileSystemProvider.IsHidden path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isHidden", "(Ljava/nio/file/Path;)Z", "GetIsHidden_Ljava_nio_file_Path_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="Java.Nio.FileNio.IPath" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSameFile">
      <MemberSignature Language="C#" Value="public abstract bool IsSameFile (Java.Nio.FileNio.IPath path, Java.Nio.FileNio.IPath path2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSameFile(class Java.Nio.FileNio.IPath path, class Java.Nio.FileNio.IPath path2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.Spi.FileSystemProvider.IsSameFile(Java.Nio.FileNio.IPath,Java.Nio.FileNio.IPath)" />
      <MemberSignature Language="F#" Value="abstract member IsSameFile : Java.Nio.FileNio.IPath * Java.Nio.FileNio.IPath -&gt; bool" Usage="fileSystemProvider.IsSameFile (path, path2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isSameFile", "(Ljava/nio/file/Path;Ljava/nio/file/Path;)Z", "GetIsSameFile_Ljava_nio_file_Path_Ljava_nio_file_Path_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="Java.Nio.FileNio.IPath" />
        <Parameter Name="path2" Type="Java.Nio.FileNio.IPath" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="path2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.FileNio.Spi.FileSystemProvider.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Nio.FileNio.Spi.FileSystemProvider.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public abstract void Move (Java.Nio.FileNio.IPath source, Java.Nio.FileNio.IPath target, params Java.Nio.FileNio.ICopyOption[] options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Move(class Java.Nio.FileNio.IPath source, class Java.Nio.FileNio.IPath target, class Java.Nio.FileNio.ICopyOption[] options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.Spi.FileSystemProvider.Move(Java.Nio.FileNio.IPath,Java.Nio.FileNio.IPath,Java.Nio.FileNio.ICopyOption[])" />
      <MemberSignature Language="F#" Value="abstract member Move : Java.Nio.FileNio.IPath * Java.Nio.FileNio.IPath * Java.Nio.FileNio.ICopyOption[] -&gt; unit" Usage="fileSystemProvider.Move (source, target, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("move", "(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)V", "GetMove_Ljava_nio_file_Path_Ljava_nio_file_Path_arrayLjava_nio_file_CopyOption_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Java.Nio.FileNio.IPath" />
        <Parameter Name="target" Type="Java.Nio.FileNio.IPath" />
        <Parameter Name="options" Type="Java.Nio.FileNio.ICopyOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="target">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewAsynchronousFileChannel">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.Channels.AsynchronousFileChannel NewAsynchronousFileChannel (Java.Nio.FileNio.IPath path, System.Collections.Generic.ICollection&lt;Java.Nio.FileNio.IOpenOption&gt; options, Java.Util.Concurrent.IExecutorService executor, params Java.Nio.FileNio.Attributes.IFileAttribute[] attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Channels.AsynchronousFileChannel NewAsynchronousFileChannel(class Java.Nio.FileNio.IPath path, class System.Collections.Generic.ICollection`1&lt;class Java.Nio.FileNio.IOpenOption&gt; options, class Java.Util.Concurrent.IExecutorService executor, class Java.Nio.FileNio.Attributes.IFileAttribute[] attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.Spi.FileSystemProvider.NewAsynchronousFileChannel(Java.Nio.FileNio.IPath,System.Collections.Generic.ICollection{Java.Nio.FileNio.IOpenOption},Java.Util.Concurrent.IExecutorService,Java.Nio.FileNio.Attributes.IFileAttribute[])" />
      <MemberSignature Language="F#" Value="abstract member NewAsynchronousFileChannel : Java.Nio.FileNio.IPath * System.Collections.Generic.ICollection&lt;Java.Nio.FileNio.IOpenOption&gt; * Java.Util.Concurrent.IExecutorService * Java.Nio.FileNio.Attributes.IFileAttribute[] -&gt; Java.Nio.Channels.AsynchronousFileChannel&#xA;override this.NewAsynchronousFileChannel : Java.Nio.FileNio.IPath * System.Collections.Generic.ICollection&lt;Java.Nio.FileNio.IOpenOption&gt; * Java.Util.Concurrent.IExecutorService * Java.Nio.FileNio.Attributes.IFileAttribute[] -&gt; Java.Nio.Channels.AsynchronousFileChannel" Usage="fileSystemProvider.NewAsynchronousFileChannel (path, options, executor, attrs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newAsynchronousFileChannel", "(Ljava/nio/file/Path;Ljava/util/Set;Ljava/util/concurrent/ExecutorService;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/channels/AsynchronousFileChannel;", "GetNewAsynchronousFileChannel_Ljava_nio_file_Path_Ljava_util_Set_Ljava_util_concurrent_ExecutorService_arrayLjava_nio_file_attribute_FileAttribute_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.AsynchronousFileChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="Java.Nio.FileNio.IPath" />
        <Parameter Name="options" Type="System.Collections.Generic.ICollection&lt;Java.Nio.FileNio.IOpenOption&gt;" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutorService" />
        <Parameter Name="attrs" Type="Java.Nio.FileNio.Attributes.IFileAttribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="options">To be added.</param>
        <param name="executor">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewByteChannel">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.Channels.ISeekableByteChannel NewByteChannel (Java.Nio.FileNio.IPath path, System.Collections.Generic.ICollection&lt;Java.Nio.FileNio.IOpenOption&gt; options, params Java.Nio.FileNio.Attributes.IFileAttribute[] attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Channels.ISeekableByteChannel NewByteChannel(class Java.Nio.FileNio.IPath path, class System.Collections.Generic.ICollection`1&lt;class Java.Nio.FileNio.IOpenOption&gt; options, class Java.Nio.FileNio.Attributes.IFileAttribute[] attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.Spi.FileSystemProvider.NewByteChannel(Java.Nio.FileNio.IPath,System.Collections.Generic.ICollection{Java.Nio.FileNio.IOpenOption},Java.Nio.FileNio.Attributes.IFileAttribute[])" />
      <MemberSignature Language="F#" Value="abstract member NewByteChannel : Java.Nio.FileNio.IPath * System.Collections.Generic.ICollection&lt;Java.Nio.FileNio.IOpenOption&gt; * Java.Nio.FileNio.Attributes.IFileAttribute[] -&gt; Java.Nio.Channels.ISeekableByteChannel" Usage="fileSystemProvider.NewByteChannel (path, options, attrs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newByteChannel", "(Ljava/nio/file/Path;Ljava/util/Set;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/channels/SeekableByteChannel;", "GetNewByteChannel_Ljava_nio_file_Path_Ljava_util_Set_arrayLjava_nio_file_attribute_FileAttribute_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.ISeekableByteChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="Java.Nio.FileNio.IPath" />
        <Parameter Name="options" Type="System.Collections.Generic.ICollection&lt;Java.Nio.FileNio.IOpenOption&gt;" />
        <Parameter Name="attrs" Type="Java.Nio.FileNio.Attributes.IFileAttribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="options">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewDirectoryStream">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.FileNio.IDirectoryStream NewDirectoryStream (Java.Nio.FileNio.IPath dir, Java.Nio.FileNio.IDirectoryStreamFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.FileNio.IDirectoryStream NewDirectoryStream(class Java.Nio.FileNio.IPath dir, class Java.Nio.FileNio.IDirectoryStreamFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.Spi.FileSystemProvider.NewDirectoryStream(Java.Nio.FileNio.IPath,Java.Nio.FileNio.IDirectoryStreamFilter)" />
      <MemberSignature Language="F#" Value="abstract member NewDirectoryStream : Java.Nio.FileNio.IPath * Java.Nio.FileNio.IDirectoryStreamFilter -&gt; Java.Nio.FileNio.IDirectoryStream" Usage="fileSystemProvider.NewDirectoryStream (dir, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newDirectoryStream", "(Ljava/nio/file/Path;Ljava/nio/file/DirectoryStream$Filter;)Ljava/nio/file/DirectoryStream;", "GetNewDirectoryStream_Ljava_nio_file_Path_Ljava_nio_file_DirectoryStream_Filter_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.FileNio.IDirectoryStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dir" Type="Java.Nio.FileNio.IPath" />
        <Parameter Name="filter" Type="Java.Nio.FileNio.IDirectoryStreamFilter" />
      </Parameters>
      <Docs>
        <param name="dir">To be added.</param>
        <param name="filter">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewFileChannel">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.Channels.FileChannel NewFileChannel (Java.Nio.FileNio.IPath path, System.Collections.Generic.ICollection&lt;Java.Nio.FileNio.IOpenOption&gt; options, params Java.Nio.FileNio.Attributes.IFileAttribute[] attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Channels.FileChannel NewFileChannel(class Java.Nio.FileNio.IPath path, class System.Collections.Generic.ICollection`1&lt;class Java.Nio.FileNio.IOpenOption&gt; options, class Java.Nio.FileNio.Attributes.IFileAttribute[] attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.Spi.FileSystemProvider.NewFileChannel(Java.Nio.FileNio.IPath,System.Collections.Generic.ICollection{Java.Nio.FileNio.IOpenOption},Java.Nio.FileNio.Attributes.IFileAttribute[])" />
      <MemberSignature Language="F#" Value="abstract member NewFileChannel : Java.Nio.FileNio.IPath * System.Collections.Generic.ICollection&lt;Java.Nio.FileNio.IOpenOption&gt; * Java.Nio.FileNio.Attributes.IFileAttribute[] -&gt; Java.Nio.Channels.FileChannel&#xA;override this.NewFileChannel : Java.Nio.FileNio.IPath * System.Collections.Generic.ICollection&lt;Java.Nio.FileNio.IOpenOption&gt; * Java.Nio.FileNio.Attributes.IFileAttribute[] -&gt; Java.Nio.Channels.FileChannel" Usage="fileSystemProvider.NewFileChannel (path, options, attrs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newFileChannel", "(Ljava/nio/file/Path;Ljava/util/Set;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/channels/FileChannel;", "GetNewFileChannel_Ljava_nio_file_Path_Ljava_util_Set_arrayLjava_nio_file_attribute_FileAttribute_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.FileChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="Java.Nio.FileNio.IPath" />
        <Parameter Name="options" Type="System.Collections.Generic.ICollection&lt;Java.Nio.FileNio.IOpenOption&gt;" />
        <Parameter Name="attrs" Type="Java.Nio.FileNio.Attributes.IFileAttribute[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="options">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewFileSystem">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.FileNio.FileSystem NewFileSystem (Java.Net.URI uri, System.Collections.Generic.IDictionary&lt;string,object&gt; env);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.FileNio.FileSystem NewFileSystem(class Java.Net.URI uri, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; env) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.Spi.FileSystemProvider.NewFileSystem(Java.Net.URI,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="F#" Value="abstract member NewFileSystem : Java.Net.URI * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; Java.Nio.FileNio.FileSystem" Usage="fileSystemProvider.NewFileSystem (uri, env)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newFileSystem", "(Ljava/net/URI;Ljava/util/Map;)Ljava/nio/file/FileSystem;", "GetNewFileSystem_Ljava_net_URI_Ljava_util_Map_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.FileNio.FileSystem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Java.Net.URI" />
        <Parameter Name="env" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <param name="env">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewFileSystem">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.FileNio.FileSystem NewFileSystem (Java.Nio.FileNio.IPath path, System.Collections.Generic.IDictionary&lt;string,object&gt; env);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.FileNio.FileSystem NewFileSystem(class Java.Nio.FileNio.IPath path, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; env) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.Spi.FileSystemProvider.NewFileSystem(Java.Nio.FileNio.IPath,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="F#" Value="abstract member NewFileSystem : Java.Nio.FileNio.IPath * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; Java.Nio.FileNio.FileSystem&#xA;override this.NewFileSystem : Java.Nio.FileNio.IPath * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; Java.Nio.FileNio.FileSystem" Usage="fileSystemProvider.NewFileSystem (path, env)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newFileSystem", "(Ljava/nio/file/Path;Ljava/util/Map;)Ljava/nio/file/FileSystem;", "GetNewFileSystem_Ljava_nio_file_Path_Ljava_util_Map_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.FileNio.FileSystem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="Java.Nio.FileNio.IPath" />
        <Parameter Name="env" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="env">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewInputStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream NewInputStream (Java.Nio.FileNio.IPath path, params Java.Nio.FileNio.IOpenOption[] options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream NewInputStream(class Java.Nio.FileNio.IPath path, class Java.Nio.FileNio.IOpenOption[] options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.Spi.FileSystemProvider.NewInputStream(Java.Nio.FileNio.IPath,Java.Nio.FileNio.IOpenOption[])" />
      <MemberSignature Language="F#" Value="abstract member NewInputStream : Java.Nio.FileNio.IPath * Java.Nio.FileNio.IOpenOption[] -&gt; System.IO.Stream&#xA;override this.NewInputStream : Java.Nio.FileNio.IPath * Java.Nio.FileNio.IOpenOption[] -&gt; System.IO.Stream" Usage="fileSystemProvider.NewInputStream (path, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newInputStream", "(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;", "GetNewInputStream_Ljava_nio_file_Path_arrayLjava_nio_file_OpenOption_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="Java.Nio.FileNio.IPath" />
        <Parameter Name="options" Type="Java.Nio.FileNio.IOpenOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewOutputStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream NewOutputStream (Java.Nio.FileNio.IPath path, params Java.Nio.FileNio.IOpenOption[] options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream NewOutputStream(class Java.Nio.FileNio.IPath path, class Java.Nio.FileNio.IOpenOption[] options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.Spi.FileSystemProvider.NewOutputStream(Java.Nio.FileNio.IPath,Java.Nio.FileNio.IOpenOption[])" />
      <MemberSignature Language="F#" Value="abstract member NewOutputStream : Java.Nio.FileNio.IPath * Java.Nio.FileNio.IOpenOption[] -&gt; System.IO.Stream&#xA;override this.NewOutputStream : Java.Nio.FileNio.IPath * Java.Nio.FileNio.IOpenOption[] -&gt; System.IO.Stream" Usage="fileSystemProvider.NewOutputStream (path, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newOutputStream", "(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;", "GetNewOutputStream_Ljava_nio_file_Path_arrayLjava_nio_file_OpenOption_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="Java.Nio.FileNio.IPath" />
        <Parameter Name="options" Type="Java.Nio.FileNio.IOpenOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAttributes">
      <MemberSignature Language="C#" Value="public abstract Java.Lang.Object ReadAttributes (Java.Nio.FileNio.IPath path, Java.Lang.Class type, params Java.Nio.FileNio.LinkOption[] options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object ReadAttributes(class Java.Nio.FileNio.IPath path, class Java.Lang.Class type, class Java.Nio.FileNio.LinkOption[] options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.Spi.FileSystemProvider.ReadAttributes(Java.Nio.FileNio.IPath,Java.Lang.Class,Java.Nio.FileNio.LinkOption[])" />
      <MemberSignature Language="F#" Value="abstract member ReadAttributes : Java.Nio.FileNio.IPath * Java.Lang.Class * Java.Nio.FileNio.LinkOption[] -&gt; Java.Lang.Object" Usage="fileSystemProvider.ReadAttributes (path, type, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readAttributes", "(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;", "GetReadAttributes_Ljava_nio_file_Path_Ljava_lang_Class_arrayLjava_nio_file_LinkOption_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Java.Interop.JavaTypeParameters(new System.String[] { "A extends java.nio.file.attribute.BasicFileAttributes" })</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="Java.Nio.FileNio.IPath" />
        <Parameter Name="type" Type="Java.Lang.Class" />
        <Parameter Name="options" Type="Java.Nio.FileNio.LinkOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="type">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAttributes">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IDictionary&lt;string,Java.Lang.Object&gt; ReadAttributes (Java.Nio.FileNio.IPath path, string attributes, params Java.Nio.FileNio.LinkOption[] options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, class Java.Lang.Object&gt; ReadAttributes(class Java.Nio.FileNio.IPath path, string attributes, class Java.Nio.FileNio.LinkOption[] options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.Spi.FileSystemProvider.ReadAttributes(Java.Nio.FileNio.IPath,System.String,Java.Nio.FileNio.LinkOption[])" />
      <MemberSignature Language="F#" Value="abstract member ReadAttributes : Java.Nio.FileNio.IPath * string * Java.Nio.FileNio.LinkOption[] -&gt; System.Collections.Generic.IDictionary&lt;string, Java.Lang.Object&gt;" Usage="fileSystemProvider.ReadAttributes (path, attributes, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readAttributes", "(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Ljava/util/Map;", "GetReadAttributes_Ljava_nio_file_Path_Ljava_lang_String_arrayLjava_nio_file_LinkOption_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Java.Lang.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="Java.Nio.FileNio.IPath" />
        <Parameter Name="attributes" Type="System.String" />
        <Parameter Name="options" Type="Java.Nio.FileNio.LinkOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="attributes">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadSymbolicLink">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.FileNio.IPath ReadSymbolicLink (Java.Nio.FileNio.IPath link);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.FileNio.IPath ReadSymbolicLink(class Java.Nio.FileNio.IPath link) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.Spi.FileSystemProvider.ReadSymbolicLink(Java.Nio.FileNio.IPath)" />
      <MemberSignature Language="F#" Value="abstract member ReadSymbolicLink : Java.Nio.FileNio.IPath -&gt; Java.Nio.FileNio.IPath&#xA;override this.ReadSymbolicLink : Java.Nio.FileNio.IPath -&gt; Java.Nio.FileNio.IPath" Usage="fileSystemProvider.ReadSymbolicLink link" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readSymbolicLink", "(Ljava/nio/file/Path;)Ljava/nio/file/Path;", "GetReadSymbolicLink_Ljava_nio_file_Path_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.FileNio.IPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="link" Type="Java.Nio.FileNio.IPath" />
      </Parameters>
      <Docs>
        <param name="link">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public abstract string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.FileNio.Spi.FileSystemProvider.Scheme" />
      <MemberSignature Language="F#" Value="member this.Scheme : string" Usage="Java.Nio.FileNio.Spi.FileSystemProvider.Scheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getScheme", "()Ljava/lang/String;", "GetGetSchemeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAttribute">
      <MemberSignature Language="C#" Value="public abstract void SetAttribute (Java.Nio.FileNio.IPath path, string attribute, Java.Lang.Object value, params Java.Nio.FileNio.LinkOption[] options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAttribute(class Java.Nio.FileNio.IPath path, string attribute, class Java.Lang.Object value, class Java.Nio.FileNio.LinkOption[] options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.Spi.FileSystemProvider.SetAttribute(Java.Nio.FileNio.IPath,System.String,Java.Lang.Object,Java.Nio.FileNio.LinkOption[])" />
      <MemberSignature Language="F#" Value="abstract member SetAttribute : Java.Nio.FileNio.IPath * string * Java.Lang.Object * Java.Nio.FileNio.LinkOption[] -&gt; unit" Usage="fileSystemProvider.SetAttribute (path, attribute, value, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAttribute", "(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/Object;[Ljava/nio/file/LinkOption;)V", "GetSetAttribute_Ljava_nio_file_Path_Ljava_lang_String_Ljava_lang_Object_arrayLjava_nio_file_LinkOption_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="Java.Nio.FileNio.IPath" />
        <Parameter Name="attribute" Type="System.String" />
        <Parameter Name="value" Type="Java.Lang.Object" />
        <Parameter Name="options" Type="Java.Nio.FileNio.LinkOption[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="attribute">To be added.</param>
        <param name="value">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.FileNio.Spi.FileSystemProvider.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Nio.FileNio.Spi.FileSystemProvider.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.FileNio.Spi.FileSystemProvider.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Nio.FileNio.Spi.FileSystemProvider.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
