<Type Name="AbstractInputMethodService+AbstractInputMethodSessionImpl" FullName="Android.InputMethodServices.AbstractInputMethodService+AbstractInputMethodSessionImpl">
  <TypeSignature Language="C#" Value="public abstract class AbstractInputMethodService.AbstractInputMethodSessionImpl : Java.Lang.Object, Android.Views.InputMethods.IInputMethodSession, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi abstract beforefieldinit AbstractInputMethodService/AbstractInputMethodSessionImpl extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Android.Views.InputMethods.IInputMethodSession, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Views.InputMethods.IInputMethodSession</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/inputmethodservice/AbstractInputMethodService$AbstractInputMethodSessionImpl", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Base class for derived classes to implement their <c><see cref="T:Android.Views.InputMethods.IInputMethodSession" /></c>
 interface.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Base class for derived classes to implement their <c><see cref="T:Android.Views.InputMethods.IInputMethodSession" /></c>
 interface.  This takes care of basic maintenance of the session,
 but most behavior must be implemented in a derived class.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/inputmethodservice/AbstractInputMethodService.AbstractInputMethodSessionImpl.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 3" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AbstractInputMethodSessionImpl (Android.InputMethodServices.AbstractInputMethodService __self);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.InputMethodServices.AbstractInputMethodService __self) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/inputmethodservice/AbstractInputMethodService;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="__self" Type="Android.InputMethodServices.AbstractInputMethodService" />
      </Parameters>
      <Docs>
        <param name="__self">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AbstractInputMethodSessionImpl (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppPrivateCommand">
      <MemberSignature Language="C#" Value="public abstract void AppPrivateCommand (string action, Android.OS.Bundle data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppPrivateCommand(string action, class Android.OS.Bundle data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("appPrivateCommand", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetAppPrivateCommand_Ljava_lang_String_Landroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="data" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchGenericMotionEvent">
      <MemberSignature Language="C#" Value="public virtual void DispatchGenericMotionEvent (int seq, Android.Views.MotionEvent e, Android.Views.InputMethods.IInputMethodSessionEventCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DispatchGenericMotionEvent(int32 seq, class Android.Views.MotionEvent e, class Android.Views.InputMethods.IInputMethodSessionEventCallback callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchGenericMotionEvent", "(ILandroid/view/MotionEvent;Landroid/view/inputmethod/InputMethodSession$EventCallback;)V", "GetDispatchGenericMotionEvent_ILandroid_view_MotionEvent_Landroid_view_inputmethod_InputMethodSession_EventCallback_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seq" Type="System.Int32" />
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
        <Parameter Name="callback" Type="Android.Views.InputMethods.IInputMethodSessionEventCallback" />
      </Parameters>
      <Docs>
        <param name="seq">To be added.</param>
        <param name="e">The motion event.</param>
        <param name="callback">To be added.</param>
        <summary>Take care of dispatching incoming generic motion events to the appropriate
 callbacks on the service, and tell the client when this is done.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Take care of dispatching incoming generic motion events to the appropriate
 callbacks on the service, and tell the client when this is done.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/inputmethodservice/AbstractInputMethodService.AbstractInputMethodSessionImpl.html#dispatchGenericMotionEvent(int, android.view.MotionEvent, android.view.inputmethod.InputMethodSession.EventCallback)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="DispatchKeyEvent">
      <MemberSignature Language="C#" Value="public virtual void DispatchKeyEvent (int seq, Android.Views.KeyEvent e, Android.Views.InputMethods.IInputMethodSessionEventCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DispatchKeyEvent(int32 seq, class Android.Views.KeyEvent e, class Android.Views.InputMethods.IInputMethodSessionEventCallback callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchKeyEvent", "(ILandroid/view/KeyEvent;Landroid/view/inputmethod/InputMethodSession$EventCallback;)V", "GetDispatchKeyEvent_ILandroid_view_KeyEvent_Landroid_view_inputmethod_InputMethodSession_EventCallback_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seq" Type="System.Int32" />
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
        <Parameter Name="callback" Type="Android.Views.InputMethods.IInputMethodSessionEventCallback" />
      </Parameters>
      <Docs>
        <param name="seq">To be added.</param>
        <param name="e">The key event.</param>
        <param name="callback">To be added.</param>
        <summary>Take care of dispatching incoming key events to the appropriate
 callbacks on the service, and tell the client when this is done.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Take care of dispatching incoming key events to the appropriate
 callbacks on the service, and tell the client when this is done.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/inputmethodservice/AbstractInputMethodService.AbstractInputMethodSessionImpl.html#dispatchKeyEvent(int, android.view.KeyEvent, android.view.inputmethod.InputMethodSession.EventCallback)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="DispatchTrackballEvent">
      <MemberSignature Language="C#" Value="public virtual void DispatchTrackballEvent (int seq, Android.Views.MotionEvent e, Android.Views.InputMethods.IInputMethodSessionEventCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DispatchTrackballEvent(int32 seq, class Android.Views.MotionEvent e, class Android.Views.InputMethods.IInputMethodSessionEventCallback callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchTrackballEvent", "(ILandroid/view/MotionEvent;Landroid/view/inputmethod/InputMethodSession$EventCallback;)V", "GetDispatchTrackballEvent_ILandroid_view_MotionEvent_Landroid_view_inputmethod_InputMethodSession_EventCallback_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seq" Type="System.Int32" />
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
        <Parameter Name="callback" Type="Android.Views.InputMethods.IInputMethodSessionEventCallback" />
      </Parameters>
      <Docs>
        <param name="seq">To be added.</param>
        <param name="e">The motion event.</param>
        <param name="callback">To be added.</param>
        <summary>Take care of dispatching incoming trackball events to the appropriate
 callbacks on the service, and tell the client when this is done.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Take care of dispatching incoming trackball events to the appropriate
 callbacks on the service, and tell the client when this is done.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/inputmethodservice/AbstractInputMethodService.AbstractInputMethodSessionImpl.html#dispatchTrackballEvent(int, android.view.MotionEvent, android.view.inputmethod.InputMethodSession.EventCallback)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="DisplayCompletions">
      <MemberSignature Language="C#" Value="public abstract void DisplayCompletions (Android.Views.InputMethods.CompletionInfo[] completions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisplayCompletions(class Android.Views.InputMethods.CompletionInfo[] completions) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("displayCompletions", "([Landroid/view/inputmethod/CompletionInfo;)V", "GetDisplayCompletions_arrayLandroid_view_inputmethod_CompletionInfo_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completions" Type="Android.Views.InputMethods.CompletionInfo[]" />
      </Parameters>
      <Docs>
        <param name="completions">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public virtual bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isEnabled", "()Z", "GetIsEnabledHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setEnabled", "(Z)V", "GetSetEnabled_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Check whether this session has been enabled by the system.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/inputmethodservice/AbstractInputMethodService.AbstractInputMethodSessionImpl.html#isEnabled()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Check whether this session has been enabled by the system.  If not
 enabled, you should not execute any calls on to it.
</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/inputmethodservice/AbstractInputMethodService.AbstractInputMethodSessionImpl.html#setEnabled(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Change the enabled state of the session.  This only works if the
 session has not been revoked.
</para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="FinishInput">
      <MemberSignature Language="C#" Value="public abstract void FinishInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinishInput() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("finishInput", "()V", "GetFinishInputHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRevoked">
      <MemberSignature Language="C#" Value="public virtual bool IsRevoked { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRevoked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isRevoked", "()Z", "GetIsRevokedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Check whether this session has been revoked by the system.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Check whether this session has been revoked by the system.  Revoked
 session is also always disabled, so there is generally no need to
 explicitly check for this.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/inputmethodservice/AbstractInputMethodService.AbstractInputMethodSessionImpl.html#isRevoked()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="RevokeSelf">
      <MemberSignature Language="C#" Value="public virtual void RevokeSelf ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RevokeSelf() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("revokeSelf", "()V", "GetRevokeSelfHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Revoke the session from the client.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Revoke the session from the client.  This disabled the session, and
 prevents it from ever being enabled again.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/inputmethodservice/AbstractInputMethodService.AbstractInputMethodSessionImpl.html#revokeSelf()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleSoftInput">
      <MemberSignature Language="C#" Value="public abstract void ToggleSoftInput (Android.Views.InputMethods.ShowFlags showFlags, Android.Views.InputMethods.HideSoftInputFlags hideFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToggleSoftInput(valuetype Android.Views.InputMethods.ShowFlags showFlags, valuetype Android.Views.InputMethods.HideSoftInputFlags hideFlags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("toggleSoftInput", "(II)V", "GetToggleSoftInput_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="showFlags" Type="Android.Views.InputMethods.ShowFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="hideFlags" Type="Android.Views.InputMethods.HideSoftInputFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="showFlags">To be added.</param>
        <param name="hideFlags">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCursor">
      <MemberSignature Language="C#" Value="public abstract void UpdateCursor (Android.Graphics.Rect newCursor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateCursor(class Android.Graphics.Rect newCursor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("updateCursor", "(Landroid/graphics/Rect;)V", "GetUpdateCursor_Landroid_graphics_Rect_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newCursor" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="newCursor">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCursorAnchorInfo">
      <MemberSignature Language="C#" Value="public abstract void UpdateCursorAnchorInfo (Android.Views.InputMethods.CursorAnchorInfo cursorAnchorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateCursorAnchorInfo(class Android.Views.InputMethods.CursorAnchorInfo cursorAnchorInfo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("updateCursorAnchorInfo", "(Landroid/view/inputmethod/CursorAnchorInfo;)V", "GetUpdateCursorAnchorInfo_Landroid_view_inputmethod_CursorAnchorInfo_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cursorAnchorInfo" Type="Android.Views.InputMethods.CursorAnchorInfo" />
      </Parameters>
      <Docs>
        <param name="cursorAnchorInfo">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateExtractedText">
      <MemberSignature Language="C#" Value="public abstract void UpdateExtractedText (int token, Android.Views.InputMethods.ExtractedText text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateExtractedText(int32 token, class Android.Views.InputMethods.ExtractedText text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("updateExtractedText", "(ILandroid/view/inputmethod/ExtractedText;)V", "GetUpdateExtractedText_ILandroid_view_inputmethod_ExtractedText_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.Int32" />
        <Parameter Name="text" Type="Android.Views.InputMethods.ExtractedText" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <param name="text">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSelection">
      <MemberSignature Language="C#" Value="public abstract void UpdateSelection (int oldSelStart, int oldSelEnd, int newSelStart, int newSelEnd, int candidatesStart, int candidatesEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateSelection(int32 oldSelStart, int32 oldSelEnd, int32 newSelStart, int32 newSelEnd, int32 candidatesStart, int32 candidatesEnd) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("updateSelection", "(IIIIII)V", "GetUpdateSelection_IIIIIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldSelStart" Type="System.Int32" />
        <Parameter Name="oldSelEnd" Type="System.Int32" />
        <Parameter Name="newSelStart" Type="System.Int32" />
        <Parameter Name="newSelEnd" Type="System.Int32" />
        <Parameter Name="candidatesStart" Type="System.Int32" />
        <Parameter Name="candidatesEnd" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="oldSelStart">To be added.</param>
        <param name="oldSelEnd">To be added.</param>
        <param name="newSelStart">To be added.</param>
        <param name="newSelEnd">To be added.</param>
        <param name="candidatesStart">To be added.</param>
        <param name="candidatesEnd">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewClicked">
      <MemberSignature Language="C#" Value="public abstract void ViewClicked (bool focusChanged);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ViewClicked(bool focusChanged) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("viewClicked", "(Z)V", "GetViewClicked_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focusChanged" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="focusChanged">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
