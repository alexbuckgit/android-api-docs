<Type Name="AbstractInputMethodService+AbstractInputMethodImpl" FullName="Android.InputMethodServices.AbstractInputMethodService+AbstractInputMethodImpl">
  <TypeSignature Language="C#" Value="public abstract class AbstractInputMethodService.AbstractInputMethodImpl : Java.Lang.Object, Android.Views.InputMethods.IInputMethod, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi abstract beforefieldinit AbstractInputMethodService/AbstractInputMethodImpl extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Android.Views.InputMethods.IInputMethod, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Views.InputMethods.IInputMethod</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/inputmethodservice/AbstractInputMethodService$AbstractInputMethodImpl", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Base class for derived classes to implement their <c><see cref="T:Android.Views.InputMethods.InputMethod" /></c>
 interface.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Base class for derived classes to implement their <c><see cref="T:Android.Views.InputMethods.InputMethod" /></c>
 interface.  This takes care of basic maintenance of the input method,
 but most behavior must be implemented in a derived class.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/inputmethodservice/AbstractInputMethodService.AbstractInputMethodImpl.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 3" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AbstractInputMethodImpl (Android.InputMethodServices.AbstractInputMethodService __self);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.InputMethodServices.AbstractInputMethodService __self) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/inputmethodservice/AbstractInputMethodService;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="__self" Type="Android.InputMethodServices.AbstractInputMethodService" />
      </Parameters>
      <Docs>
        <param name="__self">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AbstractInputMethodImpl (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T}(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttachToken">
      <MemberSignature Language="C#" Value="public abstract void AttachToken (Android.OS.IBinder token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AttachToken(class Android.OS.IBinder token) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("attachToken", "(Landroid/os/IBinder;)V", "GetAttachToken_Landroid_os_IBinder_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Android.OS.IBinder" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindInput">
      <MemberSignature Language="C#" Value="public abstract void BindInput (Android.Views.InputMethods.InputBinding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BindInput(class Android.Views.InputMethods.InputBinding binding) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("bindInput", "(Landroid/view/inputmethod/InputBinding;)V", "GetBindInput_Landroid_view_inputmethod_InputBinding_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="Android.Views.InputMethods.InputBinding" />
      </Parameters>
      <Docs>
        <param name="binding">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeInputMethodSubtype">
      <MemberSignature Language="C#" Value="public abstract void ChangeInputMethodSubtype (Android.Views.InputMethods.InputMethodSubtype subtype);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChangeInputMethodSubtype(class Android.Views.InputMethods.InputMethodSubtype subtype) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("changeInputMethodSubtype", "(Landroid/view/inputmethod/InputMethodSubtype;)V", "GetChangeInputMethodSubtype_Landroid_view_inputmethod_InputMethodSubtype_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subtype" Type="Android.Views.InputMethods.InputMethodSubtype" />
      </Parameters>
      <Docs>
        <param name="subtype">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSession">
      <MemberSignature Language="C#" Value="public virtual void CreateSession (Android.Views.InputMethods.IInputMethodSessionCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateSession(class Android.Views.InputMethods.IInputMethodSessionCallback callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createSession", "(Landroid/view/inputmethod/InputMethod$SessionCallback;)V", "GetCreateSession_Landroid_view_inputmethod_InputMethod_SessionCallback_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Views.InputMethods.IInputMethodSessionCallback" />
      </Parameters>
      <Docs>
        <param name="callback">Interface that is called with the newly created session.
</param>
        <summary>Instantiate a new client session for the input method, by calling
 back to <c><see cref="M:Android.InputMethodServices.AbstractInputMethodService.OnCreateInputMethodSessionInterface" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Instantiate a new client session for the input method, by calling
 back to <c><see cref="M:Android.InputMethodServices.AbstractInputMethodService.OnCreateInputMethodSessionInterface" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/inputmethodservice/AbstractInputMethodService.AbstractInputMethodImpl.html#createSession(android.view.inputmethod.InputMethod.SessionCallback)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="HideSoftInput">
      <MemberSignature Language="C#" Value="public abstract void HideSoftInput (int flags, Android.OS.ResultReceiver resultReceiver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HideSoftInput(int32 flags, class Android.OS.ResultReceiver resultReceiver) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("hideSoftInput", "(ILandroid/os/ResultReceiver;)V", "GetHideSoftInput_ILandroid_os_ResultReceiver_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Int32" />
        <Parameter Name="resultReceiver" Type="Android.OS.ResultReceiver" />
      </Parameters>
      <Docs>
        <param name="flags">To be added.</param>
        <param name="resultReceiver">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RestartInput">
      <MemberSignature Language="C#" Value="public abstract void RestartInput (Android.Views.InputMethods.IInputConnection inputConnection, Android.Views.InputMethods.EditorInfo attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RestartInput(class Android.Views.InputMethods.IInputConnection inputConnection, class Android.Views.InputMethods.EditorInfo attribute) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("restartInput", "(Landroid/view/inputmethod/InputConnection;Landroid/view/inputmethod/EditorInfo;)V", "GetRestartInput_Landroid_view_inputmethod_InputConnection_Landroid_view_inputmethod_EditorInfo_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputConnection" Type="Android.Views.InputMethods.IInputConnection" />
        <Parameter Name="attribute" Type="Android.Views.InputMethods.EditorInfo" />
      </Parameters>
      <Docs>
        <param name="inputConnection">To be added.</param>
        <param name="attribute">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RevokeSession">
      <MemberSignature Language="C#" Value="public virtual void RevokeSession (Android.Views.InputMethods.IInputMethodSession session);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RevokeSession(class Android.Views.InputMethods.IInputMethodSession session) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("revokeSession", "(Landroid/view/inputmethod/InputMethodSession;)V", "GetRevokeSession_Landroid_view_inputmethod_InputMethodSession_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="Android.Views.InputMethods.IInputMethodSession" />
      </Parameters>
      <Docs>
        <param name="session">The <c><see cref="T:Android.Views.InputMethods.IInputMethodSession" /></c> previously provided through
 SessionCallback.sessionCreated() that is to be revoked.
</param>
        <summary>Take care of killing an existing session by calling its
 <c><see cref="M:Android.InputMethodServices.AbstractInputMethodService.AbstractInputMethodSessionImpl.RevokeSelf" /></c> method.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Take care of killing an existing session by calling its
 <c><see cref="M:Android.InputMethodServices.AbstractInputMethodService.AbstractInputMethodSessionImpl.RevokeSelf" /></c> method.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/inputmethodservice/AbstractInputMethodService.AbstractInputMethodImpl.html#revokeSession(android.view.inputmethod.InputMethodSession)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetSessionEnabled">
      <MemberSignature Language="C#" Value="public virtual void SetSessionEnabled (Android.Views.InputMethods.IInputMethodSession session, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSessionEnabled(class Android.Views.InputMethods.IInputMethodSession session, bool enabled) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSessionEnabled", "(Landroid/view/inputmethod/InputMethodSession;Z)V", "GetSetSessionEnabled_Landroid_view_inputmethod_InputMethodSession_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="Android.Views.InputMethods.IInputMethodSession" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="session">The <c><see cref="T:Android.Views.InputMethods.IInputMethodSession" /></c> previously provided through
 SessionCallback.sessionCreated() that is to be changed.
</param>
        <param name="enabled">To be added.</param>
        <summary>Take care of enabling or disabling an existing session by calling its
 <c><see cref="M:Android.InputMethodServices.AbstractInputMethodService.AbstractInputMethodSessionImpl.RevokeSelf" /></c> method.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Take care of enabling or disabling an existing session by calling its
 <c><see cref="M:Android.InputMethodServices.AbstractInputMethodService.AbstractInputMethodSessionImpl.RevokeSelf" /></c> method.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/inputmethodservice/AbstractInputMethodService.AbstractInputMethodImpl.html#setSessionEnabled(android.view.inputmethod.InputMethodSession, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ShowSoftInput">
      <MemberSignature Language="C#" Value="public abstract void ShowSoftInput (Android.Views.InputMethods.ShowSoftInputFlags flags, Android.OS.ResultReceiver resultReceiver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowSoftInput(valuetype Android.Views.InputMethods.ShowSoftInputFlags flags, class Android.OS.ResultReceiver resultReceiver) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("showSoftInput", "(ILandroid/os/ResultReceiver;)V", "GetShowSoftInput_ILandroid_os_ResultReceiver_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="Android.Views.InputMethods.ShowSoftInputFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="resultReceiver" Type="Android.OS.ResultReceiver" />
      </Parameters>
      <Docs>
        <param name="flags">To be added.</param>
        <param name="resultReceiver">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartInput">
      <MemberSignature Language="C#" Value="public abstract void StartInput (Android.Views.InputMethods.IInputConnection inputConnection, Android.Views.InputMethods.EditorInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartInput(class Android.Views.InputMethods.IInputConnection inputConnection, class Android.Views.InputMethods.EditorInfo info) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startInput", "(Landroid/view/inputmethod/InputConnection;Landroid/view/inputmethod/EditorInfo;)V", "GetStartInput_Landroid_view_inputmethod_InputConnection_Landroid_view_inputmethod_EditorInfo_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputConnection" Type="Android.Views.InputMethods.IInputConnection" />
        <Parameter Name="info" Type="Android.Views.InputMethods.EditorInfo" />
      </Parameters>
      <Docs>
        <param name="inputConnection">To be added.</param>
        <param name="info">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnbindInput">
      <MemberSignature Language="C#" Value="public abstract void UnbindInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnbindInput() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unbindInput", "()V", "GetUnbindInputHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
