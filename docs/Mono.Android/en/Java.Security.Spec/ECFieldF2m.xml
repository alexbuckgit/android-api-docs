<Type Name="ECFieldF2m" FullName="Java.Security.Spec.ECFieldF2m">
  <TypeSignature Language="C#" Value="public class ECFieldF2m : Java.Lang.Object, IDisposable, Java.Security.Spec.IECField" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ECFieldF2m extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Security.Spec.IECField, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Java.Security.Spec.IECField</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/security/spec/ECFieldF2m", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>The parameters specifying a <format type="text/html"><i>characteristic 2 finite field</i></format> of an
 elliptic curve.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">The parameters specifying a <format type="text/html"><i>characteristic 2 finite field</i></format> of an
 elliptic curve.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/java/security/spec/ECFieldF2m.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECFieldF2m (int m);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 m) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="m" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="m">To be added.</param>
        <summary>Creates a new <c>ECFieldF2m</c> with <c>2^m</c> elements with a normal
 basis.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new <c>ECFieldF2m</c> with <c>2^m</c> elements with a normal
 basis.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/security/spec/ECFieldF2m.html#ECFieldF2m(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>m &lt;= zero</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECFieldF2m (int m, Java.Math.BigInteger rp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 m, class Java.Math.BigInteger rp) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(ILjava/math/BigInteger;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="m" Type="System.Int32" />
        <Parameter Name="rp" Type="Java.Math.BigInteger" />
      </Parameters>
      <Docs>
        <param name="m">To be added.</param>
        <param name="rp">To be added.</param>
        <summary>Creates a new <c>ECFieldF2m</c> with <c>2^m</c> elements with a polynomial
 basis and the reduction polynomial based on <c>rp</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new <c>ECFieldF2m</c> with <c>2^m</c> elements with a polynomial
 basis and the reduction polynomial based on <c>rp</c>.
 </para>
          <para tool="javadoc-to-mdoc">
 The reduction polynomial must be either <format type="text/html"><i>trinomial</i></format> or
 <format type="text/html"><i>pentanomial</i></format>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/security/spec/ECFieldF2m.html#ECFieldF2m(int, java.math.BigInteger)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>m &lt;= zero</c> or the <c>rp</c> is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ECFieldF2m (int m, int[] ks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 m, int32[] ks) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(I[I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="m" Type="System.Int32" />
        <Parameter Name="ks" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="m">To be added.</param>
        <param name="ks">To be added.</param>
        <summary>Creates a new <c>ECFieldF2m</c> with <c>2^m</c> elements with
 a polynomial basis and the reduction polynomial based on <c>ks</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new <c>ECFieldF2m</c> with <c>2^m</c> elements with
 a polynomial basis and the reduction polynomial based on <c>ks</c>.
 </para>
          <para tool="javadoc-to-mdoc">
 The reduction polynomial must be either <format type="text/html"><i>trinomial</i></format> or
 <format type="text/html"><i>pentanomial</i></format>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/security/spec/ECFieldF2m.html#ECFieldF2m(int, int[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>m &lt;= zero</c> or the reduction polynomial is not
             valid.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ECFieldF2m (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldSize">
      <MemberSignature Language="C#" Value="public virtual int FieldSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFieldSize", "()I", "GetGetFieldSizeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the size of this finite field (in bits).</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the size of this finite field (in bits).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/security/spec/ECFieldF2m.html#getFieldSize()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetM">
      <MemberSignature Language="C#" Value="public virtual int GetM ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetM() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getM", "()I", "GetGetMHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the exponent <c>m</c> for this finite field, with <c>2^m</c> as
 the number of elements.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the exponent <c>m</c> for this finite field, with <c>2^m</c> as
 the number of elements.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/security/spec/ECFieldF2m.html#getM()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetMidTermsOfReductionPolynomial">
      <MemberSignature Language="C#" Value="public virtual int[] GetMidTermsOfReductionPolynomial ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32[] GetMidTermsOfReductionPolynomial() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getMidTermsOfReductionPolynomial", "()[I", "GetGetMidTermsOfReductionPolynomialHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a copy of the integer array containing the order of the middle
 term(s) of the reduction polynomial for a polynomial basis.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a copy of the integer array containing the order of the middle
 term(s) of the reduction polynomial for a polynomial basis.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/security/spec/ECFieldF2m.html#getMidTermsOfReductionPolynomial()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ReductionPolynomial">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigInteger ReductionPolynomial { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Math.BigInteger ReductionPolynomial" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getReductionPolynomial", "()Ljava/math/BigInteger;", "GetGetReductionPolynomialHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the base of the reduction polynomial with the n-th bit
 corresponding to the n-th coefficient of the reduction polynomial for a
 polynomial basis.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the base of the reduction polynomial with the n-th bit
 corresponding to the n-th coefficient of the reduction polynomial for a
 polynomial basis.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/security/spec/ECFieldF2m.html#getReductionPolynomial()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>