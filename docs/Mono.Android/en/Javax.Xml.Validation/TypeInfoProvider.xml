<Type Name="TypeInfoProvider" FullName="Javax.Xml.Validation.TypeInfoProvider">
  <TypeSignature Language="C#" Value="public abstract class TypeInfoProvider : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TypeInfoProvider extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("javax/xml/validation/TypeInfoProvider", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="8">
    <summary>This class provides access to the type information determined
 by <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c>.</summary>
    <remarks />
    <since version="Added in API level 8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeInfoProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Constructor for the derived class.</summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeInfoProvider (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ElementTypeInfo">
      <MemberSignature Language="C#" Value="public abstract Org.W3c.Dom.ITypeInfo ElementTypeInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.W3c.Dom.ITypeInfo ElementTypeInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getElementTypeInfo", "()Lorg/w3c/dom/TypeInfo;", "GetGetElementTypeInfoHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.ITypeInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.IllegalStateException">If this method is called from other <c><see cref="T:Org.Xml.Sax.IContentHandler" /></c>
      methods.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAttributeTypeInfo">
      <MemberSignature Language="C#" Value="public abstract Org.W3c.Dom.ITypeInfo GetAttributeTypeInfo (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.W3c.Dom.ITypeInfo GetAttributeTypeInfo(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getAttributeTypeInfo", "(I)Lorg/w3c/dom/TypeInfo;", "GetGetAttributeTypeInfo_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.ITypeInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index of the attribute. The same index for
      the <c><see cref="T:Org.Xml.Sax.IAttributes" /></c> object passed to the
      <c>startElement</c> callback.</param>
        <summary>Returns the immutable <c><see cref="T:Org.W3c.Dom.TypeInfo" /></c> object for the specified
 attribute of the current element.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">If the index is invalid.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">If this method is called from other <c><see cref="T:Org.Xml.Sax.IContentHandler" /></c>
      methods.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsIdAttribute">
      <MemberSignature Language="C#" Value="public abstract bool IsIdAttribute (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsIdAttribute(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isIdAttribute", "(I)Z", "GetIsIdAttribute_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index of the attribute. The same index for
      the <c><see cref="T:Org.Xml.Sax.IAttributes" /></c> object passed to the
      <c>startElement</c> callback.</param>
        <summary>Returns <c>true</c> if the specified attribute is determined
 to be ID.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">If the index is invalid.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">If this method is called from other <c><see cref="T:Org.Xml.Sax.IContentHandler" /></c>
      methods.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSpecified">
      <MemberSignature Language="C#" Value="public abstract bool IsSpecified (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSpecified(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isSpecified", "(I)Z", "GetIsSpecified_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index of the attribute. The same index for
      the <c><see cref="T:Org.Xml.Sax.IAttributes" /></c> object passed to the
      <c>startElement</c> callback.</param>
        <summary>Returns <c>false</c> if the attribute was added by the validator.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">If the index is invalid.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">If this method is called from other <c><see cref="T:Org.Xml.Sax.IContentHandler" /></c>
      methods.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
