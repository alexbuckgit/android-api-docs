<Type Name="SchemaFactory" FullName="Javax.Xml.Validation.SchemaFactory">
  <TypeSignature Language="C#" Value="public abstract class SchemaFactory : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SchemaFactory extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("javax/xml/validation/SchemaFactory", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Factory that creates <c><see cref="T:Javax.Xml.Validation.Schema" /></c> objects&amp;#x2E; Entry-point to
 the validation API.</summary>
    <remarks><para tool="javadoc-to-mdoc">Factory that creates <c><see cref="T:Javax.Xml.Validation.Schema" /></c> objects&amp;#x2E; Entry-point to
 the validation API.

 </para><para tool="javadoc-to-mdoc"><c><see cref="T:Javax.Xml.Validation.SchemaFactory" /></c> is a schema compiler. It reads external
 representations of schemas and prepares them for validation.

 </para><para tool="javadoc-to-mdoc">
 The <c><see cref="T:Javax.Xml.Validation.SchemaFactory" /></c> class is not thread-safe. In other words,
 it is the application's responsibility to ensure that at most
 one thread is using a <c><see cref="T:Javax.Xml.Validation.SchemaFactory" /></c> object at any
 given moment. Implementations are encouraged to mark methods
 as <c>synchronized</c> to protect themselves from broken clients.

 </para><para tool="javadoc-to-mdoc"><c><see cref="T:Javax.Xml.Validation.SchemaFactory" /></c> is not re-entrant. While one of the
 <c>newSchema</c> methods is being invoked, applications
 may not attempt to recursively invoke the <c>newSchema</c> method,
 even from the same thread.

 <format type="text/html"><h2>Schema Language</h2></format></para><para tool="javadoc-to-mdoc">
 This spec uses a namespace URI to designate a schema language.
 The following table shows the values defined by this specification.
 </para><para tool="javadoc-to-mdoc">
 To be compliant with the spec, the implementation
 is only required to support W3C XML Schema 1.0. However,
 if it chooses to support other schema languages listed here,
 it must conform to the relevant behaviors described in this spec.

 </para><para tool="javadoc-to-mdoc">
 Schema languages not listed here are expected to
 introduce their own URIs to represent themselves.
 The <c><see cref="T:Javax.Xml.Validation.SchemaFactory" /></c> class is capable of locating other
 implementations for other schema languages at run-time.

 </para><para tool="javadoc-to-mdoc">
 Note that because the XML DTD is strongly tied to the parsing process
 and has a significant effect on the parsing process, it is impossible
 to define the DTD validation as a process independent from parsing.
 For this reason, this specification does not define the semantics for
 the XML DTD. This doesn't prohibit implementers from implementing it
 in a way they see fit, but <i>users are warned that any DTD
 validation implemented on this interface necessarily deviate from
 the XML DTD semantics as defined in the XML 1.0</i>.

 <format type="text/html"><table border="1" cellpadding="2"><thead><tr><th>value</th><th>language</th></tr></thead><tbody><tr><td><c><see cref="F:Javax.Xml.XMLConstants.W3cXmlSchemaNsUri" /></c> ("<c>http://www.w3.org/2001/XMLSchema</c>")</td><td></td></tr><tr><td><c><see cref="F:Javax.Xml.XMLConstants.RelaxngNsUri" /></c> ("<c>http://relaxng.org/ns/structure/1.0</c>")</td><td></td></tr></tbody></table></format></para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/javax/xml/validation/SchemaFactory.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SchemaFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary></summary>
        <remarks><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc">Constructor for derived classes.</para><para tool="javadoc-to-mdoc">The constructor does nothing.</para><para tool="javadoc-to-mdoc">Derived classes must create <c><see cref="T:Javax.Xml.Validation.SchemaFactory" /></c> objects that have
 <c>null</c><c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c> and
 <c>null</c><c><see cref="T:Org.W3c.Dom.LS.ILSResourceResolver" /></c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/javax/xml/validation/SchemaFactory.html#SchemaFactory()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SchemaFactory (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorHandler">
      <MemberSignature Language="C#" Value="public abstract Org.Xml.Sax.IErrorHandler ErrorHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.Xml.Sax.IErrorHandler ErrorHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getErrorHandler", "()Lorg/xml/sax/ErrorHandler;", "GetGetErrorHandlerHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setErrorHandler", "(Lorg/xml/sax/ErrorHandler;)V", "GetSetErrorHandler_Lorg_xml_sax_ErrorHandler_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Xml.Sax.IErrorHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c> set to this <c><see cref="T:Javax.Xml.Validation.SchemaFactory" /></c>.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/javax/xml/validation/SchemaFactory.html#getErrorHandler()" target="_blank">[Android Documentation]</a><br /></format>Gets the current <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c> set to this <c><see cref="T:Javax.Xml.Validation.SchemaFactory" /></c>.</para><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/javax/xml/validation/SchemaFactory.html#setErrorHandler(org.xml.sax.ErrorHandler)" target="_blank">[Android Documentation]</a><br /></format>Sets the <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c> to receive errors encountered
 during the <c>newSchema</c> method invocation.

 
 Error handler can be used to customize the error handling process
 during schema parsing. When an <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c> is set,
 errors found during the parsing of schemas will be first sent
 to the <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c>.

 
 The error handler can abort the parsing of a schema immediately
 by throwing <c><see cref="T:Org.Xml.Sax.SAXException" /></c> from the handler. Or for example
 it can print an error to the screen and try to continue the
 processing by returning normally from the <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c>
 If any <c><see cref="T:Java.Lang.Throwable" /></c> (or instances of its derived classes)
 is thrown from an <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c>,
 the caller of the <c>newSchema</c> method will be thrown
 the same <c><see cref="T:Java.Lang.Throwable" /></c> object.

 <c><see cref="T:Javax.Xml.Validation.SchemaFactory" /></c> is not allowed to
 throw <c><see cref="T:Org.Xml.Sax.SAXException" /></c> without first reporting it to
 <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c>.

 
 Applications can call this method even during a <c><see cref="T:Javax.Xml.Validation.Schema" /></c>
 is being parsed.

 
 When the <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c> is null, the implementation will
 behave as if the following <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c> is set:
 <example><code lang="java">
 class DraconianErrorHandler implements ErrorHandler {
     public void fatalError( SAXParseException e ) throws SAXException {
         throw e;
     }
     public void error( SAXParseException e ) throws SAXException {
         throw e;
     }
     public void warning( SAXParseException e ) throws SAXException {
         // noop
     }
 }
 </code></example>
 When a new <c><see cref="T:Javax.Xml.Validation.SchemaFactory" /></c> object is created, initially
 this field is set to null. This field will <i>NOT</i> be
 inherited to <c><see cref="T:Javax.Xml.Validation.Schema" /></c>s, <c><see cref="T:Javax.Xml.Validation.Validator" /></c>s, or
 <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c>s that are created from this <c><see cref="T:Javax.Xml.Validation.SchemaFactory" /></c>.</para><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc" /></remarks>
        <since version="Added in API level 8" />
        <altmember cref="P:Javax.Xml.Validation.SchemaFactory.ErrorHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetFeature">
      <MemberSignature Language="C#" Value="public virtual bool GetFeature (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetFeature(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getFeature", "(Ljava/lang/String;)Z", "GetGetFeature_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The feature name, which is a non-null fully-qualified URI.</param>
        <summary>Look up the value of a feature flag.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Look up the value of a feature flag.

 </para><para tool="javadoc-to-mdoc">The feature name is any fully-qualified URI.  It is
 possible for a <c><see cref="T:Javax.Xml.Validation.SchemaFactory" /></c> to recognize a feature name but
 temporarily be unable to return its value.

 </para><para tool="javadoc-to-mdoc">Implementers are free (and encouraged) to invent their own features,
 using names built on their own URIs.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/javax/xml/validation/SchemaFactory.html#getFeature(java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Org.Xml.Sax.SAXNotRecognizedException">If the feature
            value can't be assigned or retrieved.</exception>
        <exception cref="T:Org.Xml.Sax.SAXNotSupportedException">When the
            <c><see cref="T:Javax.Xml.Validation.SchemaFactory" /></c> recognizes the feature name but
            cannot determine its value at this time.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the name parameter is null.</exception>
        <altmember cref="M:Javax.Xml.Validation.SchemaFactory.SetFeature(System.String, System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object GetProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object GetProperty(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getProperty", "(Ljava/lang/String;)Ljava/lang/Object;", "GetGetProperty_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The property name, which is a non-null fully-qualified URI.</param>
        <summary>Look up the value of a property.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Look up the value of a property.

 </para><para tool="javadoc-to-mdoc">The property name is any fully-qualified URI.  It is
 possible for a <c><see cref="T:Javax.Xml.Validation.SchemaFactory" /></c> to recognize a property name but
 temporarily be unable to return its value.</para><para tool="javadoc-to-mdoc"><c><see cref="T:Javax.Xml.Validation.SchemaFactory" /></c>s are not required to recognize any specific
 property names.</para><para tool="javadoc-to-mdoc">Implementers are free (and encouraged) to invent their own properties,
 using names built on their own URIs.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/javax/xml/validation/SchemaFactory.html#getProperty(java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Org.Xml.Sax.SAXNotRecognizedException">If the property
            value can't be assigned or retrieved.</exception>
        <exception cref="T:Org.Xml.Sax.SAXNotSupportedException">When the
            XMLReader recognizes the property name but
            cannot determine its value at this time.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the name parameter is null.</exception>
        <altmember cref="M:Javax.Xml.Validation.SchemaFactory.SetProperty(System.String, Java.Lang.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsSchemaLanguageSupported">
      <MemberSignature Language="C#" Value="public abstract bool IsSchemaLanguageSupported (string schemaLanguage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSchemaLanguageSupported(string schemaLanguage) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isSchemaLanguageSupported", "(Ljava/lang/String;)Z", "GetIsSchemaLanguageSupported_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaLanguage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="schemaLanguage">Specifies the schema language which the returned <c>SchemaFactory</c> will understand.
    <c>schemaLanguage</c> must specify a  schema language.</param>
        <summary></summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc">Is specified schema supported by this <c>SchemaFactory</c>?</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/javax/xml/validation/SchemaFactory.html#isSchemaLanguageSupported(java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.NullPointerException">If <c>schemaLanguage</c> is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">If <c>schemaLanguage.length() == 0</c>
   or <c>schemaLanguage</c> does not specify a  schema language.
</exception>
      </Docs>
    </Member>
    <Member MemberName="NewInstance">
      <MemberSignature Language="C#" Value="public static Javax.Xml.Validation.SchemaFactory NewInstance (string schemaLanguage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Xml.Validation.SchemaFactory NewInstance(string schemaLanguage) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newInstance", "(Ljava/lang/String;)Ljavax/xml/validation/SchemaFactory;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Validation.SchemaFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaLanguage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="schemaLanguage">Specifies the schema language which the returned
      SchemaFactory will understand. See
       for the possible values.</param>
        <summary><list type="number"><item><term>
     If the system property
     <c>"javax.xml.validation.SchemaFactory:<format type="text/html"><i>schemaLanguage</i></format>"</c>
     is present (where <format type="text/html"><i>schemaLanguage</i></format> is the parameter
     to this method), then its value is read
     as a class name. The method will try to
     create a new instance of this class by using the class loader,
     and returns it if it is successfully created.
   </term></item><item><term><c>$java.home/lib/jaxp.properties</c> is read and
     the value associated with the key being the system property above
     is looked for. If present, the value is processed just like above.
   </term></item><item><term><example><code lang="java">isSchemaLanguageSupported(String)</code></example>
     The first service provider found in class loader order that supports the specified schema language is returned.
   </term></item><item><term>
     Platform default <c>SchemaFactory</c> is located
     in a implementation specific way. There must be a platform default
     <c>SchemaFactory</c> for W3C XML Schema.
   </term></item></list><example><code lang="java">
 http\://www.w3.org/2001/XMLSchema=org.acme.foo.XSSchemaFactory
 </code></example></summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc"><list type="number"><item><term>
     If the system property
     <c>"javax.xml.validation.SchemaFactory:<format type="text/html"><i>schemaLanguage</i></format>"</c>
     is present (where <format type="text/html"><i>schemaLanguage</i></format> is the parameter
     to this method), then its value is read
     as a class name. The method will try to
     create a new instance of this class by using the class loader,
     and returns it if it is successfully created.
   </term></item><item><term><c>$java.home/lib/jaxp.properties</c> is read and
     the value associated with the key being the system property above
     is looked for. If present, the value is processed just like above.
   </term></item><item><term><example><code lang="java">isSchemaLanguageSupported(String)</code></example>
     The first service provider found in class loader order that supports the specified schema language is returned.
   </term></item><item><term>
     Platform default <c>SchemaFactory</c> is located
     in a implementation specific way. There must be a platform default
     <c>SchemaFactory</c> for W3C XML Schema.
   </term></item></list><example><code lang="java">
 http\://www.w3.org/2001/XMLSchema=org.acme.foo.XSSchemaFactory
 </code></example></para><para tool="javadoc-to-mdoc">Lookup an implementation of the <c>SchemaFactory</c> that supports the specified
 schema language and return it.</para><para tool="javadoc-to-mdoc">To find a <c>SchemaFactory</c> object for a given schema language,
 this method looks the following places in the following order
 where "the class loader" refers to the context class loader:</para><para tool="javadoc-to-mdoc">The class loader is asked for service provider provider-configuration files matching
     <c>javax.xml.validation.SchemaFactory</c> in the resource directory META-INF/services.
     See the JAR File Specification for file format and parsing rules.
     Each potential service provider is required to implement the method:</para><para tool="javadoc-to-mdoc">If everything fails, <c><see cref="T:Java.Lang.IllegalArgumentException" /></c> will be thrown.</para><para tool="javadoc-to-mdoc"><i>Tip for Trouble-shooting:</i></para><para tool="javadoc-to-mdoc">See <c><see cref="M:Java.Util.Properties.Load(System.IO.Stream)" /></c> for
 exactly how a property file is parsed. In particular, colons ':'
 need to be escaped in a property file, so make sure schema language
 URIs are properly escaped in it. For example:</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/javax/xml/validation/SchemaFactory.html#newInstance(java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.IllegalArgumentException">If no implementation of the schema language is available.</exception>
        <exception cref="T:Java.Lang.NullPointerException">If the <c>schemaLanguage</c> parameter is null.
</exception>
      </Docs>
    </Member>
    <Member MemberName="NewInstance">
      <MemberSignature Language="C#" Value="public static Javax.Xml.Validation.SchemaFactory NewInstance (string schemaLanguage, string factoryClassName, Java.Lang.ClassLoader classLoader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Xml.Validation.SchemaFactory NewInstance(string schemaLanguage, string factoryClassName, class Java.Lang.ClassLoader classLoader) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newInstance", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/ClassLoader;)Ljavax/xml/validation/SchemaFactory;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Validation.SchemaFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.String" />
        <Parameter Name="p1" Type="System.String" />
        <Parameter Name="p2" Type="Java.Lang.ClassLoader" />
      </Parameters>
      <Docs>
        <param name="schemaLanguage">To be added.</param>
        <param name="factoryClassName">To be added.</param>
        <param name="classLoader">To be added.</param>
        <summary>Returns an instance of the named implementation of <c>SchemaFactory</c>.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns an instance of the named implementation of <c>SchemaFactory</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/javax/xml/validation/SchemaFactory.html#newInstance(java.lang.String, java.lang.String, java.lang.ClassLoader)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>factoryClassName</c> is not available, cannot be
     instantiated, or doesn't support <c>schemaLanguage</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="NewSchema">
      <MemberSignature Language="C#" Value="public abstract Javax.Xml.Validation.Schema NewSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Javax.Xml.Validation.Schema NewSchema() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newSchema", "()Ljavax/xml/validation/Schema;", "GetNewSchemaHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Validation.Schema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a special <c><see cref="T:Javax.Xml.Validation.Schema" /></c> object.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Creates a special <c><see cref="T:Javax.Xml.Validation.Schema" /></c> object.

 </para><para tool="javadoc-to-mdoc">
 The exact semantics of the returned <c><see cref="T:Javax.Xml.Validation.Schema" /></c> object depends
 on the schema language that this <c><see cref="T:Javax.Xml.Validation.SchemaFactory" /></c> is created
 for.

 </para><para tool="javadoc-to-mdoc">
 Also, implementations are allowed to use implementation-specific
 property/feature to alter the semantics of this method.


 <format type="text/html"><h2>W3C XML Schema 1.0</h2></format></para><para tool="javadoc-to-mdoc">
 For XML Schema, this method creates a <c><see cref="T:Javax.Xml.Validation.Schema" /></c> object that
 performs validation by using location hints specified in documents.

 </para><para tool="javadoc-to-mdoc">
 The returned <c><see cref="T:Javax.Xml.Validation.Schema" /></c> object assumes that if documents
 refer to the same URL in the schema location hints,
 they will always resolve to the same schema document. This
 assumption allows implementations to reuse parsed results of
 schema documents so that multiple validations against the same
 schema will run faster.

 </para><para tool="javadoc-to-mdoc">
 Note that the use of schema location hints introduces a
 vulnerability to denial-of-service attacks.


 <format type="text/html"><h2>RELAX NG</h2></format></para><para tool="javadoc-to-mdoc">
 RELAX NG does not support this operation.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/javax/xml/validation/SchemaFactory.html#newSchema()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.UnsupportedOperationException">If this operation is not supported by the callee.</exception>
        <exception cref="T:Org.Xml.Sax.SAXException">If this operation is supported but failed for some reason.
</exception>
      </Docs>
    </Member>
    <Member MemberName="NewSchema">
      <MemberSignature Language="C#" Value="public virtual Javax.Xml.Validation.Schema NewSchema (Java.IO.File schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Javax.Xml.Validation.Schema NewSchema(class Java.IO.File schema) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newSchema", "(Ljava/io/File;)Ljavax/xml/validation/Schema;", "GetNewSchema_Ljava_io_File_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Validation.Schema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="schema">File that represents a schema.</param>
        <summary></summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc">Parses the specified <c>File</c> as a schema and returns it as a <c>Schema</c>.</para><para tool="javadoc-to-mdoc">This is a convenience method for <c><see cref="M:Javax.Xml.Validation.SchemaFactory.NewSchema(Javax.Xml.Transform.ISource)" /></c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/javax/xml/validation/SchemaFactory.html#newSchema(java.io.File)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Org.Xml.Sax.SAXException">If a SAX error occurs during parsing.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>schema</c> is null.
</exception>
      </Docs>
    </Member>
    <Member MemberName="NewSchema">
      <MemberSignature Language="C#" Value="public virtual Javax.Xml.Validation.Schema NewSchema (Java.Net.URL schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Javax.Xml.Validation.Schema NewSchema(class Java.Net.URL schema) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newSchema", "(Ljava/net/URL;)Ljavax/xml/validation/Schema;", "GetNewSchema_Ljava_net_URL_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Validation.Schema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="Java.Net.URL" />
      </Parameters>
      <Docs>
        <param name="schema"><c>URL</c> that represents a schema.</param>
        <summary></summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc">Parses the specified <c>URL</c> as a schema and returns it as a <c>Schema</c>.</para><para tool="javadoc-to-mdoc">This is a convenience method for <c><see cref="M:Javax.Xml.Validation.SchemaFactory.NewSchema(Javax.Xml.Transform.ISource)" /></c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/javax/xml/validation/SchemaFactory.html#newSchema(java.net.URL)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Org.Xml.Sax.SAXException">If a SAX error occurs during parsing.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>schema</c> is null.
</exception>
      </Docs>
    </Member>
    <Member MemberName="NewSchema">
      <MemberSignature Language="C#" Value="public virtual Javax.Xml.Validation.Schema NewSchema (Javax.Xml.Transform.ISource schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Javax.Xml.Validation.Schema NewSchema(class Javax.Xml.Transform.ISource schema) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newSchema", "(Ljavax/xml/transform/Source;)Ljavax/xml/validation/Schema;", "GetNewSchema_Ljavax_xml_transform_Source_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Validation.Schema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="Javax.Xml.Transform.ISource" />
      </Parameters>
      <Docs>
        <param name="schema">Source that represents a schema.</param>
        <summary></summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc">Parses the specified source as a schema and returns it as a schema.</para><para tool="javadoc-to-mdoc">This is a convenience method for <c><see cref="M:Javax.Xml.Validation.SchemaFactory.NewSchema(Javax.Xml.Transform.ISource[])" /></c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/javax/xml/validation/SchemaFactory.html#newSchema(javax.xml.transform.Source)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Org.Xml.Sax.SAXException">If a SAX error occurs during parsing.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>schema</c> is null.
</exception>
      </Docs>
    </Member>
    <Member MemberName="NewSchema">
      <MemberSignature Language="C#" Value="public abstract Javax.Xml.Validation.Schema NewSchema (Javax.Xml.Transform.ISource[] schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Javax.Xml.Validation.Schema NewSchema(class Javax.Xml.Transform.ISource[] schemas) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newSchema", "([Ljavax/xml/transform/Source;)Ljavax/xml/validation/Schema;", "GetNewSchema_arrayLjavax_xml_transform_Source_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Validation.Schema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="Javax.Xml.Transform.ISource[]" />
      </Parameters>
      <Docs>
        <param name="schemas">inputs to be parsed. <c><see cref="T:Javax.Xml.Validation.SchemaFactory" /></c> is required
      to recognize <c><see cref="T:Javax.Xml.Transform.Stream.StreamSource" /></c>,
      <c><see cref="T:Javax.Xml.Transform.Sax.SAXSource" /></c>,
      and <c><see cref="T:Javax.Xml.Transform.Dom.DOMSource" /></c>.</param>
        <summary>Parses the specified source(s) as a schema and returns it as a schema.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Parses the specified source(s) as a schema and returns it as a schema.

 </para><para tool="javadoc-to-mdoc">
 The callee will read all the <c><see cref="T:Javax.Xml.Transform.ISource" /></c>s and combine them into a
 single schema. The exact semantics of the combination depends on the schema
 language that this <c><see cref="T:Javax.Xml.Validation.SchemaFactory" /></c> object is created for.

 </para><para tool="javadoc-to-mdoc">
 When an <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c> is set, the callee will report all the errors
 found in sources to the handler. If the handler throws an exception, it will
 abort the schema compilation and the same exception will be thrown from
 this method. Also, after an error is reported to a handler, the callee is allowed
 to abort the further processing by throwing it. If an error handler is not set,
 the callee will throw the first error it finds in the sources.

 <format type="text/html"><h2>W3C XML Schema 1.0</h2></format></para><para tool="javadoc-to-mdoc">
 The resulting schema contains components from the specified sources.
 The same result would be achieved if all these sources were
 imported, using appropriate values for schemaLocation and namespace,
 into a single schema document with a different targetNamespace
 and no components of its own, if the import elements were given
 in the same order as the sources.  Section 4.2.3 of the XML Schema
 recommendation describes the options processors have in this
 regard.  While a processor should be consistent in its treatment of
 JAXP schema sources and XML Schema imports, the behavior between
 JAXP-compliant parsers may vary; in particular, parsers may choose
 to ignore all but the first &lt;import&gt; for a given namespace,
 regardless of information provided in schemaLocation.

 </para><para tool="javadoc-to-mdoc">
 If the parsed set of schemas includes error(s) as
 specified in the section 5.1 of the XML Schema spec, then
 the error must be reported to the <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c>.

 <format type="text/html"><h2>RELAX NG</h2></format></para><para tool="javadoc-to-mdoc">For RELAX NG, this method must throw <c><see cref="T:Java.Lang.UnsupportedOperationException" /></c>
 if <c>schemas.length!=1</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/javax/xml/validation/SchemaFactory.html#newSchema(javax.xml.transform.Source[])" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Org.Xml.Sax.SAXException">If an error is found during processing the specified inputs.
      When an <c><see cref="T:Org.Xml.Sax.IErrorHandler" /></c> is set, errors are reported to
      there first. See <c><see cref="P:Javax.Xml.Validation.SchemaFactory.ErrorHandler" /></c>.</exception>
        <exception cref="T:Java.Lang.NullPointerException">If the <c>schemas</c> parameter itself is null or
      any item in the array is null.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">If any item in the array is not recognized by this method.</exception>
        <exception cref="T:Java.Lang.UnsupportedOperationException">If the schema language doesn't support this operation.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ResourceResolver">
      <MemberSignature Language="C#" Value="public abstract Org.W3c.Dom.LS.ILSResourceResolver ResourceResolver { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.W3c.Dom.LS.ILSResourceResolver ResourceResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getResourceResolver", "()Lorg/w3c/dom/ls/LSResourceResolver;", "GetGetResourceResolverHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setResourceResolver", "(Lorg/w3c/dom/ls/LSResourceResolver;)V", "GetSetResourceResolver_Lorg_w3c_dom_ls_LSResourceResolver_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.LS.ILSResourceResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current <c><see cref="T:Org.W3c.Dom.LS.ILSResourceResolver" /></c> set to this <c><see cref="T:Javax.Xml.Validation.SchemaFactory" /></c>.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/javax/xml/validation/SchemaFactory.html#getResourceResolver()" target="_blank">[Android Documentation]</a><br /></format>Gets the current <c><see cref="T:Org.W3c.Dom.LS.ILSResourceResolver" /></c> set to this <c><see cref="T:Javax.Xml.Validation.SchemaFactory" /></c>.</para><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/javax/xml/validation/SchemaFactory.html#setResourceResolver(org.w3c.dom.ls.LSResourceResolver)" target="_blank">[Android Documentation]</a><br /></format>Sets the <c><see cref="T:Org.W3c.Dom.LS.ILSResourceResolver" /></c> to customize
 resource resolution when parsing schemas.

 <c><see cref="T:Javax.Xml.Validation.SchemaFactory" /></c> uses a <c><see cref="T:Org.W3c.Dom.LS.ILSResourceResolver" /></c>
 when it needs to locate external resources while parsing schemas,
 although exactly what constitutes "locating external resources" is
 up to each schema language. For example, for W3C XML Schema,
 this includes files <c>&lt;include&gt;</c>d or <c>&lt;import&gt;</c>ed,
 and DTD referenced from schema files, etc.

 
 Applications can call this method even during a <c><see cref="T:Javax.Xml.Validation.Schema" /></c>
 is being parsed.

 
 When the <c><see cref="T:Org.W3c.Dom.LS.ILSResourceResolver" /></c> is null, the implementation will
 behave as if the following <c><see cref="T:Org.W3c.Dom.LS.ILSResourceResolver" /></c> is set:
 <example><code lang="java">
 class DumbDOMResourceResolver implements LSResourceResolver {
     public LSInput resolveResource(
         String publicId, String systemId, String baseURI) {

         return null; // always return null
     }
 }
 </code></example>
 If a <c><see cref="T:Org.W3c.Dom.LS.ILSResourceResolver" /></c> throws a <c><see cref="T:Java.Lang.RuntimeException" /></c>
  (or instances of its derived classes),
 then the <c><see cref="T:Javax.Xml.Validation.SchemaFactory" /></c> will abort the parsing and
 the caller of the <c>newSchema</c> method will receive
 the same <c><see cref="T:Java.Lang.RuntimeException" /></c>.

 
 When a new <c><see cref="T:Javax.Xml.Validation.SchemaFactory" /></c> object is created, initially
 this field is set to null.  This field will <i>NOT</i> be
 inherited to <c><see cref="T:Javax.Xml.Validation.Schema" /></c>s, <c><see cref="T:Javax.Xml.Validation.Validator" /></c>s, or
 <c><see cref="T:Javax.Xml.Validation.ValidatorHandler" /></c>s that are created from this <c><see cref="T:Javax.Xml.Validation.SchemaFactory" /></c>.</para><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc" /></remarks>
        <since version="Added in API level 8" />
        <altmember cref="P:Javax.Xml.Validation.SchemaFactory.ErrorHandler" />
      </Docs>
    </Member>
    <Member MemberName="SetFeature">
      <MemberSignature Language="C#" Value="public virtual void SetFeature (string name, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFeature(string name, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setFeature", "(Ljava/lang/String;Z)V", "GetSetFeature_Ljava_lang_String_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">The feature name, which is a non-null fully-qualified URI.</param>
        <param name="value">The requested value of the feature (true or false).</param>
        <summary>Set the value of a feature flag.</summary>
        <remarks><para tool="javadoc-to-mdoc">Set the value of a feature flag.

 <list type="bullet"><item><term><c>true</c>: the implementation will limit XML processing to conform to implementation limits.
     Examples include entity expansion limits and XML Schema constructs that would consume large amounts of resources.
     If XML processing is limited for security reasons, it will be reported via a call to the registered
     <c><see cref="M:Org.Xml.Sax.IErrorHandler.FatalError(Org.Xml.Sax.SAXParseException)" /></c>.
     See <c><see cref="P:Javax.Xml.Validation.SchemaFactory.ErrorHandler" /></c>.
   </term></item><item><term><c>false</c>: the implementation will processing XML according to the XML specifications without
     regard to possible implementation limits.
   </term></item></list></para><para tool="javadoc-to-mdoc">
 Feature can be used to control the way a <c><see cref="T:Javax.Xml.Validation.SchemaFactory" /></c>
 parses schemas, although <c><see cref="T:Javax.Xml.Validation.SchemaFactory" /></c>s are not required
 to recognize any specific feature names.</para><para tool="javadoc-to-mdoc">The feature name is any fully-qualified URI.  It is
 possible for a <c><see cref="T:Javax.Xml.Validation.SchemaFactory" /></c> to expose a feature value but
 to be unable to change the current value.</para><para tool="javadoc-to-mdoc">All implementations are required to support the <c><see cref="F:Javax.Xml.XMLConstants.FeatureSecureProcessing" /></c> feature.
 When the feature is:</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/javax/xml/validation/SchemaFactory.html#setFeature(java.lang.String, boolean)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Org.Xml.Sax.SAXNotRecognizedException">If the feature
            value can't be assigned or retrieved.</exception>
        <exception cref="T:Org.Xml.Sax.SAXNotSupportedException">When the
            <c><see cref="T:Javax.Xml.Validation.SchemaFactory" /></c> recognizes the feature name but
            cannot set the requested value.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the name parameter is null.</exception>
        <altmember cref="M:Javax.Xml.Validation.SchemaFactory.GetFeature(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public virtual void SetProperty (string name, Java.Lang.Object object);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetProperty(string name, class Java.Lang.Object object) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setProperty", "(Ljava/lang/String;Ljava/lang/Object;)V", "GetSetProperty_Ljava_lang_String_Ljava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="object" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="name">The property name, which is a non-null fully-qualified URI.</param>
        <param name="object">The requested value for the property.</param>
        <summary>Set the value of a property.</summary>
        <remarks><para tool="javadoc-to-mdoc">Set the value of a property.

 </para><para tool="javadoc-to-mdoc">The property name is any fully-qualified URI.  It is
 possible for a <c><see cref="T:Javax.Xml.Validation.SchemaFactory" /></c> to recognize a property name but
 to be unable to change the current value.</para><para tool="javadoc-to-mdoc"><c><see cref="T:Javax.Xml.Validation.SchemaFactory" /></c>s are not required to recognize setting
 any specific property names.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/javax/xml/validation/SchemaFactory.html#setProperty(java.lang.String, java.lang.Object)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Org.Xml.Sax.SAXNotRecognizedException">If the property
            value can't be assigned or retrieved.</exception>
        <exception cref="T:Org.Xml.Sax.SAXNotSupportedException">When the
            <c><see cref="T:Javax.Xml.Validation.SchemaFactory" /></c> recognizes the property name but
            cannot set the requested value.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the name parameter is null.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
