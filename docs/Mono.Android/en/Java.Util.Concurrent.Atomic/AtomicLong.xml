<Type Name="AtomicLong" FullName="Java.Util.Concurrent.Atomic.AtomicLong">
  <TypeSignature Language="C#" Value="public class AtomicLong : Java.Lang.Number, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AtomicLong extends Java.Lang.Number implements class Android.Runtime.IJavaObject, class Java.IO.ISerializable, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Number</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/util/concurrent/atomic/AtomicLong", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A <c>long</c> value that may be updated atomically.</summary>
    <remarks><para tool="javadoc-to-mdoc">A <c>long</c> value that may be updated atomically.  See the
 <c><see cref="N:Java.Util.Concurrent.Atomic" /></c> package specification for
 description of the properties of atomic variables. An
 <c>AtomicLong</c> is used in applications such as atomically
 incremented sequence numbers, and cannot be used as a replacement
 for a <c><see cref="T:Java.Lang.Long" /></c>. However, this class does extend
 <c>Number</c> to allow uniform access by tools and utilities that
 deal with numerically-based classes.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/concurrent/atomic/AtomicLong.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AtomicLong ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Creates a new AtomicLong with initial value <c>0</c>.</summary>
        <remarks><para tool="javadoc-to-mdoc">Creates a new AtomicLong with initial value <c>0</c>.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/concurrent/atomic/AtomicLong.html#AtomicLong()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AtomicLong (long initialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 initialValue) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(J)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="initialValue" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="initialValue">To be added.</param>
        <summary>Creates a new AtomicLong with the given initial value.</summary>
        <remarks><para tool="javadoc-to-mdoc">Creates a new AtomicLong with the given initial value.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/concurrent/atomic/AtomicLong.html#AtomicLong(long)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AtomicLong (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAndGet">
      <MemberSignature Language="C#" Value="public long AddAndGet (long delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 AddAndGet(int64 delta) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addAndGet", "(J)J", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delta" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="delta">the value to add</param>
        <summary>Atomically adds the given value to the current value.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Atomically adds the given value to the current value.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/concurrent/atomic/AtomicLong.html#addAndGet(long)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AndDecrement">
      <MemberSignature Language="C#" Value="public long AndDecrement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 AndDecrement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAndDecrement", "()J", "GetGetAndDecrementHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Atomically decrements by one the current value.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Atomically decrements by one the current value.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/concurrent/atomic/AtomicLong.html#getAndDecrement()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AndIncrement">
      <MemberSignature Language="C#" Value="public long AndIncrement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 AndIncrement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAndIncrement", "()J", "GetGetAndIncrementHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Atomically increments by one the current value.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Atomically increments by one the current value.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/concurrent/atomic/AtomicLong.html#getAndIncrement()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CompareAndSet">
      <MemberSignature Language="C#" Value="public bool CompareAndSet (long expect, long update);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CompareAndSet(int64 expect, int64 update) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("compareAndSet", "(JJ)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expect" Type="System.Int64" />
        <Parameter Name="update" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="expect">the expected value</param>
        <param name="update">the new value</param>
        <summary>Atomically sets the value to the given updated value
 if the current value <c>==</c> the expected value.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Atomically sets the value to the given updated value
 if the current value <c>==</c> the expected value.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/concurrent/atomic/AtomicLong.html#compareAndSet(long, long)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DecrementAndGet">
      <MemberSignature Language="C#" Value="public long DecrementAndGet ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 DecrementAndGet() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("decrementAndGet", "()J", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Atomically decrements by one the current value.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Atomically decrements by one the current value.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/concurrent/atomic/AtomicLong.html#decrementAndGet()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DoubleValue">
      <MemberSignature Language="C#" Value="public override double DoubleValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 DoubleValue() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("doubleValue", "()D", "GetDoubleValueHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the value of this <c>AtomicLong</c> as a <c>double</c>
 after a widening primitive conversion.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns the value of this <c>AtomicLong</c> as a <c>double</c>
 after a widening primitive conversion.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/concurrent/atomic/AtomicLong.html#doubleValue()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FloatValue">
      <MemberSignature Language="C#" Value="public override float FloatValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 FloatValue() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("floatValue", "()F", "GetFloatValueHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the value of this <c>AtomicLong</c> as a <c>float</c>
 after a widening primitive conversion.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns the value of this <c>AtomicLong</c> as a <c>float</c>
 after a widening primitive conversion.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/concurrent/atomic/AtomicLong.html#floatValue()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public long Get ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 Get() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("get", "()J", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the current value.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Gets the current value.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/concurrent/atomic/AtomicLong.html#get()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetAndAdd">
      <MemberSignature Language="C#" Value="public long GetAndAdd (long delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 GetAndAdd(int64 delta) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getAndAdd", "(J)J", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delta" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="delta">the value to add</param>
        <summary>Atomically adds the given value to the current value.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Atomically adds the given value to the current value.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/concurrent/atomic/AtomicLong.html#getAndAdd(long)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetAndSet">
      <MemberSignature Language="C#" Value="public long GetAndSet (long newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 GetAndSet(int64 newValue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getAndSet", "(J)J", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newValue" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="newValue">the new value</param>
        <summary>Atomically sets to the given value and returns the old value.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Atomically sets to the given value and returns the old value.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/concurrent/atomic/AtomicLong.html#getAndSet(long)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IncrementAndGet">
      <MemberSignature Language="C#" Value="public long IncrementAndGet ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 IncrementAndGet() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("incrementAndGet", "()J", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Atomically increments by one the current value.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Atomically increments by one the current value.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/concurrent/atomic/AtomicLong.html#incrementAndGet()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IntValue">
      <MemberSignature Language="C#" Value="public override int IntValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 IntValue() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("intValue", "()I", "GetIntValueHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the value of this <c>AtomicLong</c> as an <c>int</c>
 after a narrowing primitive conversion.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns the value of this <c>AtomicLong</c> as an <c>int</c>
 after a narrowing primitive conversion.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/concurrent/atomic/AtomicLong.html#intValue()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LazySet">
      <MemberSignature Language="C#" Value="public void LazySet (long newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LazySet(int64 newValue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("lazySet", "(J)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="newValue">the new value</param>
        <summary>Eventually sets to the given value.</summary>
        <remarks><para tool="javadoc-to-mdoc">Eventually sets to the given value.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/concurrent/atomic/AtomicLong.html#lazySet(long)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="LongValue">
      <MemberSignature Language="C#" Value="public override long LongValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 LongValue() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("longValue", "()J", "GetLongValueHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the value of this <c>AtomicLong</c> as a <c>long</c>.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns the value of this <c>AtomicLong</c> as a <c>long</c>.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/concurrent/atomic/AtomicLong.html#longValue()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public void Set (long newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Set(int64 newValue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("set", "(J)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newValue" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="newValue">the new value
</param>
        <summary>Sets to the given value.</summary>
        <remarks><para tool="javadoc-to-mdoc">Sets to the given value.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/concurrent/atomic/AtomicLong.html#set(long)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakCompareAndSet">
      <MemberSignature Language="C#" Value="public bool WeakCompareAndSet (long expect, long update);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool WeakCompareAndSet(int64 expect, int64 update) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("weakCompareAndSet", "(JJ)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expect" Type="System.Int64" />
        <Parameter Name="update" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="expect">the expected value</param>
        <param name="update">the new value</param>
        <summary>Atomically sets the value to the given updated value
 if the current value <c>==</c> the expected value.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Atomically sets the value to the given updated value
 if the current value <c>==</c> the expected value.

 </para><para tool="javadoc-to-mdoc">, so is
 only rarely an appropriate alternative to <c>compareAndSet</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/concurrent/atomic/AtomicLong.html#weakCompareAndSet(long, long)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
