<Type Name="AnimatorListenerAdapter" FullName="Android.Animation.AnimatorListenerAdapter">
  <TypeSignature Language="C#" Value="public abstract class AnimatorListenerAdapter : Java.Lang.Object, Android.Animation.Animator.IAnimatorListener, Android.Animation.Animator.IAnimatorPauseListener, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AnimatorListenerAdapter extends Java.Lang.Object implements class Android.Animation.Animator/IAnimatorListener, class Android.Animation.Animator/IAnimatorPauseListener, class Android.Runtime.IJavaObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Animation.Animator+IAnimatorListener</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Animation.Animator+IAnimatorPauseListener</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/animation/AnimatorListenerAdapter", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This adapter class provides empty implementations of the methods from <c><see cref="!:NoType:android/animation/Animator$AnimatorListener;Href=../../../reference/android/animation/Animator.AnimatorListener.html" /></c>.</summary>
    <remarks><para tool="javadoc-to-mdoc">This adapter class provides empty implementations of the methods from <c><see cref="!:NoType:android/animation/Animator$AnimatorListener;Href=../../../reference/android/animation/Animator.AnimatorListener.html" /></c>.
 Any custom listener that cares only about a subset of the methods of this listener can
 simply subclass this adapter class instead of implementing the interface directly.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/animation/AnimatorListenerAdapter.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 11" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnimatorListenerAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary></summary>
        <remarks><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/animation/AnimatorListenerAdapter.html#AnimatorListenerAdapter()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AnimatorListenerAdapter (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAnimationCancel">
      <MemberSignature Language="C#" Value="public virtual void OnAnimationCancel (Android.Animation.Animator animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnAnimationCancel(class Android.Animation.Animator animation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onAnimationCancel", "(Landroid/animation/Animator;)V", "GetOnAnimationCancel_Landroid_animation_Animator_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="animation" Type="Android.Animation.Animator" />
      </Parameters>
      <Docs>
        <param name="animation">The animation which was canceled.
</param>
        <summary></summary>
        <remarks><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc">Notifies the cancellation of the animation. This callback is not invoked
 for animations with repeat count set to INFINITE.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/animation/AnimatorListenerAdapter.html#onAnimationCancel(android.animation.Animator)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="OnAnimationEnd">
      <MemberSignature Language="C#" Value="public virtual void OnAnimationEnd (Android.Animation.Animator animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnAnimationEnd(class Android.Animation.Animator animation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onAnimationEnd", "(Landroid/animation/Animator;)V", "GetOnAnimationEnd_Landroid_animation_Animator_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="animation" Type="Android.Animation.Animator" />
      </Parameters>
      <Docs>
        <param name="animation">The animation which reached its end.
</param>
        <summary></summary>
        <remarks><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc">Notifies the end of the animation. This callback is not invoked
 for animations with repeat count set to INFINITE.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/animation/AnimatorListenerAdapter.html#onAnimationEnd(android.animation.Animator)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="OnAnimationPause">
      <MemberSignature Language="C#" Value="public virtual void OnAnimationPause (Android.Animation.Animator animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnAnimationPause(class Android.Animation.Animator animation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onAnimationPause", "(Landroid/animation/Animator;)V", "GetOnAnimationPause_Landroid_animation_Animator_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="animation" Type="Android.Animation.Animator" />
      </Parameters>
      <Docs>
        <param name="animation">The animaton being paused.</param>
        <summary></summary>
        <remarks><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc">Notifies that the animation was paused.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/animation/AnimatorListenerAdapter.html#onAnimationPause(android.animation.Animator)" target="_blank">[Android Documentation]</a></format></para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAnimationRepeat">
      <MemberSignature Language="C#" Value="public virtual void OnAnimationRepeat (Android.Animation.Animator animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnAnimationRepeat(class Android.Animation.Animator animation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onAnimationRepeat", "(Landroid/animation/Animator;)V", "GetOnAnimationRepeat_Landroid_animation_Animator_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="animation" Type="Android.Animation.Animator" />
      </Parameters>
      <Docs>
        <param name="animation">The animation which was repeated.
</param>
        <summary></summary>
        <remarks><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc">Notifies the repetition of the animation.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/animation/AnimatorListenerAdapter.html#onAnimationRepeat(android.animation.Animator)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="OnAnimationResume">
      <MemberSignature Language="C#" Value="public virtual void OnAnimationResume (Android.Animation.Animator animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnAnimationResume(class Android.Animation.Animator animation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onAnimationResume", "(Landroid/animation/Animator;)V", "GetOnAnimationResume_Landroid_animation_Animator_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="animation" Type="Android.Animation.Animator" />
      </Parameters>
      <Docs>
        <param name="animation">The animation being resumed.</param>
        <summary></summary>
        <remarks><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc">Notifies that the animation was resumed, after being
 previously paused.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/animation/AnimatorListenerAdapter.html#onAnimationResume(android.animation.Animator)" target="_blank">[Android Documentation]</a></format></para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAnimationStart">
      <MemberSignature Language="C#" Value="public virtual void OnAnimationStart (Android.Animation.Animator animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnAnimationStart(class Android.Animation.Animator animation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onAnimationStart", "(Landroid/animation/Animator;)V", "GetOnAnimationStart_Landroid_animation_Animator_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="animation" Type="Android.Animation.Animator" />
      </Parameters>
      <Docs>
        <param name="animation">The started animation.
</param>
        <summary></summary>
        <remarks><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc">Notifies the start of the animation.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/animation/AnimatorListenerAdapter.html#onAnimationStart(android.animation.Animator)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
