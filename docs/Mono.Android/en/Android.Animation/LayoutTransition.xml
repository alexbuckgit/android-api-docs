<Type Name="LayoutTransition" FullName="Android.Animation.LayoutTransition">
  <TypeSignature Language="C#" Value="public class LayoutTransition : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LayoutTransition extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/animation/LayoutTransition", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="11">
    <summary>This class enables automatic animations on layout changes in ViewGroup objects.</summary>
    <remarks />
    <since version="Added in API level 11" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LayoutTransition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Constructs a LayoutTransition object.</summary>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LayoutTransition (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="public virtual void AddChild (Android.Views.ViewGroup parent, Android.Views.View child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddChild(class Android.Views.ViewGroup parent, class Android.Views.View child) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addChild", "(Landroid/view/ViewGroup;Landroid/view/View;)V", "GetAddChild_Landroid_view_ViewGroup_Landroid_view_View_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="Android.Views.ViewGroup" />
        <Parameter Name="child" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="parent">The ViewGroup to which the View is being added.</param>
        <param name="child">The View being added to the ViewGroup.
</param>
        <summary>This method is called by ViewGroup when a child view is about to be added to the
 container.</summary>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="AddTransitionListener">
      <MemberSignature Language="C#" Value="public virtual void AddTransitionListener (Android.Animation.LayoutTransition.ITransitionListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddTransitionListener(class Android.Animation.LayoutTransition/ITransitionListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addTransitionListener", "(Landroid/animation/LayoutTransition$TransitionListener;)V", "GetAddTransitionListener_Landroid_animation_LayoutTransition_TransitionListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Animation.LayoutTransition+ITransitionListener" />
      </Parameters>
      <Docs>
        <param name="listener">The listener that will be called when layout bounds change.
</param>
        <summary>Add a listener that will be called when the bounds of the view change due to
 layout processing.</summary>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Appearing">
      <MemberSignature Language="C#" Value="public const Android.Animation.LayoutTransitionType Appearing = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Animation.LayoutTransitionType Appearing = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("APPEARING")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Animation.LayoutTransitionType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.LayoutTransitionType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>A flag indicating the animation that runs on those items that are appearing
 in the container.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ChangeAppearing">
      <MemberSignature Language="C#" Value="public const Android.Animation.LayoutTransitionType ChangeAppearing = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Animation.LayoutTransitionType ChangeAppearing = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CHANGE_APPEARING")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Animation.LayoutTransitionType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.LayoutTransitionType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>A flag indicating the animation that runs on those items that are changing
 due to a new item appearing in the container.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ChangeDisappearing">
      <MemberSignature Language="C#" Value="public const Android.Animation.LayoutTransitionType ChangeDisappearing = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Animation.LayoutTransitionType ChangeDisappearing = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CHANGE_DISAPPEARING")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Animation.LayoutTransitionType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.LayoutTransitionType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>A flag indicating the animation that runs on those items that are changing
 due to an item disappearing from the container.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Changing">
      <MemberSignature Language="C#" Value="public const Android.Animation.LayoutTransitionType Changing = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Animation.LayoutTransitionType Changing = (4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CHANGING")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Animation.LayoutTransitionType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.LayoutTransitionType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>A flag indicating the animation that runs on those items that are changing
 due to a layout change not caused by items being added to or removed
 from the container.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="DisableTransitionType">
      <MemberSignature Language="C#" Value="public virtual void DisableTransitionType (Android.Animation.LayoutTransitionType transitionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisableTransitionType(valuetype Android.Animation.LayoutTransitionType transitionType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("disableTransitionType", "(I)V", "GetDisableTransitionType_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transitionType" Type="Android.Animation.LayoutTransitionType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="transitionType">One of <c><see cref="F:Android.Animation.LayoutTransition.ChangeAppearing" /></c>, <c><see cref="F:Android.Animation.LayoutTransition.ChangeDisappearing" /></c>,
 <c><see cref="F:Android.Animation.LayoutTransition.Changing" /></c>, <c><see cref="F:Android.Animation.LayoutTransition.Appearing" /></c>, or <c><see cref="F:Android.Animation.LayoutTransition.Disappearing" /></c>.
</param>
        <summary>Disables the specified transitionType for this LayoutTransition object.</summary>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="Disappearing">
      <MemberSignature Language="C#" Value="public const Android.Animation.LayoutTransitionType Disappearing = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Animation.LayoutTransitionType Disappearing = (3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DISAPPEARING")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Animation.LayoutTransitionType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.LayoutTransitionType</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>A flag indicating the animation that runs on those items that are disappearing
 from the container.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="EnableTransitionType">
      <MemberSignature Language="C#" Value="public virtual void EnableTransitionType (Android.Animation.LayoutTransitionType transitionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnableTransitionType(valuetype Android.Animation.LayoutTransitionType transitionType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("enableTransitionType", "(I)V", "GetEnableTransitionType_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transitionType" Type="Android.Animation.LayoutTransitionType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="transitionType">One of <c><see cref="F:Android.Animation.LayoutTransition.ChangeAppearing" /></c>, <c><see cref="F:Android.Animation.LayoutTransition.ChangeDisappearing" /></c>,
 <c><see cref="F:Android.Animation.LayoutTransition.Changing" /></c>, <c><see cref="F:Android.Animation.LayoutTransition.Appearing" /></c>, or <c><see cref="F:Android.Animation.LayoutTransition.Disappearing" /></c>.
</param>
        <summary>Enables the specified transitionType for this LayoutTransition object.</summary>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="EndTransition">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Animation.LayoutTransition.EndTransitionEventArgs&gt; EndTransition;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Animation.LayoutTransition/EndTransitionEventArgs&gt; EndTransition" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Animation.LayoutTransition+EndTransitionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetAnimator">
      <MemberSignature Language="C#" Value="public virtual Android.Animation.Animator GetAnimator (Android.Animation.LayoutTransitionType transitionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Animation.Animator GetAnimator(valuetype Android.Animation.LayoutTransitionType transitionType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getAnimator", "(I)Landroid/animation/Animator;", "GetGetAnimator_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.Animator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transitionType" Type="Android.Animation.LayoutTransitionType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="transitionType">One of <c><see cref="F:Android.Animation.LayoutTransition.ChangeAppearing" /></c>, <c><see cref="F:Android.Animation.LayoutTransition.ChangeDisappearing" /></c>,
 <c><see cref="F:Android.Animation.LayoutTransition.Changing" /></c>, <c><see cref="F:Android.Animation.LayoutTransition.Appearing" /></c>, or <c><see cref="F:Android.Animation.LayoutTransition.Disappearing" /></c>, which determines
 the animation whose animator is being returned.</param>
        <summary>Gets the animation used during one of the transition types that may run.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="M:Android.Animation.LayoutTransition.SetAnimator(Android.Animation.LayoutTransitionType, Android.Animation.Animator)" />
      </Docs>
    </Member>
    <Member MemberName="GetDuration">
      <MemberSignature Language="C#" Value="public virtual long GetDuration (Android.Animation.LayoutTransitionType transitionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetDuration(valuetype Android.Animation.LayoutTransitionType transitionType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDuration", "(I)J", "GetGetDuration_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transitionType" Type="Android.Animation.LayoutTransitionType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="transitionType">One of <c><see cref="F:Android.Animation.LayoutTransition.ChangeAppearing" /></c>, <c><see cref="F:Android.Animation.LayoutTransition.ChangeDisappearing" /></c>,
 <c><see cref="F:Android.Animation.LayoutTransition.Changing" /></c>, <c><see cref="F:Android.Animation.LayoutTransition.Appearing" /></c>, or <c><see cref="F:Android.Animation.LayoutTransition.Disappearing" /></c>, which determines
 the animation whose duration is returned.</param>
        <summary>Gets the duration on one of the animation objects used by this transition.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="P:Android.Animation.Animator.Duration" />
      </Docs>
    </Member>
    <Member MemberName="GetInterpolator">
      <MemberSignature Language="C#" Value="public virtual Android.Animation.ITimeInterpolator GetInterpolator (Android.Animation.LayoutTransitionType transitionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Animation.ITimeInterpolator GetInterpolator(valuetype Android.Animation.LayoutTransitionType transitionType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInterpolator", "(I)Landroid/animation/TimeInterpolator;", "GetGetInterpolator_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.ITimeInterpolator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transitionType" Type="Android.Animation.LayoutTransitionType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="transitionType">One of <c><see cref="F:Android.Animation.LayoutTransition.ChangeAppearing" /></c>, <c><see cref="F:Android.Animation.LayoutTransition.ChangeDisappearing" /></c>,
 <c><see cref="F:Android.Animation.LayoutTransition.Changing" /></c>, <c><see cref="F:Android.Animation.LayoutTransition.Appearing" /></c>, or <c><see cref="F:Android.Animation.LayoutTransition.Disappearing" /></c>, which determines
 the animation whose interpolator is being returned.</param>
        <summary>Gets the interpolator on one of the animation objects used by this transition.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="M:Android.Animation.Animator.SetInterpolator(Android.Animation.ITimeInterpolator)" />
      </Docs>
    </Member>
    <Member MemberName="GetStagger">
      <MemberSignature Language="C#" Value="public virtual long GetStagger (Android.Animation.LayoutTransitionType transitionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetStagger(valuetype Android.Animation.LayoutTransitionType transitionType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getStagger", "(I)J", "GetGetStagger_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transitionType" Type="Android.Animation.LayoutTransitionType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="transitionType">A value of <c><see cref="F:Android.Animation.LayoutTransition.ChangeAppearing" /></c>, <c><see cref="F:Android.Animation.LayoutTransition.ChangeDisappearing" /></c>, or
 <c><see cref="F:Android.Animation.LayoutTransition.Changing" /></c>.</param>
        <summary>Gets the length of time to delay between starting each animation during one of the
 change animations.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetStartDelay">
      <MemberSignature Language="C#" Value="public virtual long GetStartDelay (Android.Animation.LayoutTransitionType transitionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetStartDelay(valuetype Android.Animation.LayoutTransitionType transitionType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getStartDelay", "(I)J", "GetGetStartDelay_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transitionType" Type="Android.Animation.LayoutTransitionType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="transitionType">One of <c><see cref="F:Android.Animation.LayoutTransition.ChangeAppearing" /></c>, <c><see cref="F:Android.Animation.LayoutTransition.ChangeDisappearing" /></c>,
 <c><see cref="F:Android.Animation.LayoutTransition.Changing" /></c>, <c><see cref="F:Android.Animation.LayoutTransition.Appearing" /></c>, or <c><see cref="F:Android.Animation.LayoutTransition.Disappearing" /></c>, which determines
 the animation whose start delay is returned.</param>
        <summary>Gets the start delay on one of the animation objects used by this transition.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="P:Android.Animation.Animator.StartDelay" />
      </Docs>
    </Member>
    <Member MemberName="HideChild">
      <MemberSignature Language="C#" Value="public virtual void HideChild (Android.Views.ViewGroup parent, Android.Views.View child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HideChild(class Android.Views.ViewGroup parent, class Android.Views.View child) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("hideChild", "(Landroid/view/ViewGroup;Landroid/view/View;)V", "GetHideChild_Landroid_view_ViewGroup_Landroid_view_View_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="Android.Views.ViewGroup" />
        <Parameter Name="child" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="parent">To be added.</param>
        <param name="child">To be added.</param>
        <summary tool="true">
        </summary>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="HideChild">
      <MemberSignature Language="C#" Value="public virtual void HideChild (Android.Views.ViewGroup parent, Android.Views.View child, Android.Views.ViewStates newVisibility);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HideChild(class Android.Views.ViewGroup parent, class Android.Views.View child, valuetype Android.Views.ViewStates newVisibility) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("hideChild", "(Landroid/view/ViewGroup;Landroid/view/View;I)V", "GetHideChild_Landroid_view_ViewGroup_Landroid_view_View_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="Android.Views.ViewGroup" />
        <Parameter Name="child" Type="Android.Views.View" />
        <Parameter Name="newVisibility" Type="Android.Views.ViewStates">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="parent">The parent ViewGroup of the View being hidden.</param>
        <param name="child">The View being hidden.</param>
        <param name="newVisibility">The new visibility value of the child View, either
 <c><see cref="F:Android.Views.ViewStates.Gone" tool="ReplaceLinkValue" /></c> or <c><see cref="F:Android.Views.ViewStates.Invisible" tool="ReplaceLinkValue" /></c>.
</param>
        <summary>This method is called by ViewGroup when a child view is about to be hidden in
 container.</summary>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="IsChangingLayout">
      <MemberSignature Language="C#" Value="public virtual bool IsChangingLayout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsChangingLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isChangingLayout", "()Z", "GetIsChangingLayoutHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if animations are running which animate layout-related properties.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="IsRunning">
      <MemberSignature Language="C#" Value="public virtual bool IsRunning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRunning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isRunning", "()Z", "GetIsRunningHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if any of the animations in this transition are currently running.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="IsTransitionTypeEnabled">
      <MemberSignature Language="C#" Value="public virtual bool IsTransitionTypeEnabled (Android.Animation.LayoutTransitionType transitionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsTransitionTypeEnabled(valuetype Android.Animation.LayoutTransitionType transitionType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isTransitionTypeEnabled", "(I)Z", "GetIsTransitionTypeEnabled_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transitionType" Type="Android.Animation.LayoutTransitionType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="transitionType">One of <c><see cref="F:Android.Animation.LayoutTransition.ChangeAppearing" /></c>, <c><see cref="F:Android.Animation.LayoutTransition.ChangeDisappearing" /></c>,
 <c><see cref="F:Android.Animation.LayoutTransition.Changing" /></c>, <c><see cref="F:Android.Animation.LayoutTransition.Appearing" /></c>, or <c><see cref="F:Android.Animation.LayoutTransition.Disappearing" /></c>.</param>
        <summary>Returns whether the specified transitionType is enabled for this LayoutTransition object.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="RemoveChild">
      <MemberSignature Language="C#" Value="public virtual void RemoveChild (Android.Views.ViewGroup parent, Android.Views.View child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveChild(class Android.Views.ViewGroup parent, class Android.Views.View child) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeChild", "(Landroid/view/ViewGroup;Landroid/view/View;)V", "GetRemoveChild_Landroid_view_ViewGroup_Landroid_view_View_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="Android.Views.ViewGroup" />
        <Parameter Name="child" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="parent">The ViewGroup from which the View is being removed.</param>
        <param name="child">The View being removed from the ViewGroup.
</param>
        <summary>This method is called by ViewGroup when a child view is about to be removed from the
 container.</summary>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="RemoveTransitionListener">
      <MemberSignature Language="C#" Value="public virtual void RemoveTransitionListener (Android.Animation.LayoutTransition.ITransitionListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveTransitionListener(class Android.Animation.LayoutTransition/ITransitionListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeTransitionListener", "(Landroid/animation/LayoutTransition$TransitionListener;)V", "GetRemoveTransitionListener_Landroid_animation_LayoutTransition_TransitionListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Animation.LayoutTransition+ITransitionListener" />
      </Parameters>
      <Docs>
        <param name="listener">The listener for layout bounds change.
</param>
        <summary>Remove a listener for layout changes.</summary>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetAnimateParentHierarchy">
      <MemberSignature Language="C#" Value="public virtual void SetAnimateParentHierarchy (bool animateParentHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAnimateParentHierarchy(bool animateParentHierarchy) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAnimateParentHierarchy", "(Z)V", "GetSetAnimateParentHierarchy_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="animateParentHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="animateParentHierarchy">A boolean value indicating whether the parents of
 transitioning views should also be animated during the transition. Default value is true.
</param>
        <summary>This flag controls whether CHANGE_APPEARING or CHANGE_DISAPPEARING animations will
 cause the default changing animation to be run on the parent hierarchy as well.</summary>
        <remarks />
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetAnimator">
      <MemberSignature Language="C#" Value="public virtual void SetAnimator (Android.Animation.LayoutTransitionType transitionType, Android.Animation.Animator animator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAnimator(valuetype Android.Animation.LayoutTransitionType transitionType, class Android.Animation.Animator animator) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAnimator", "(ILandroid/animation/Animator;)V", "GetSetAnimator_ILandroid_animation_Animator_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transitionType" Type="Android.Animation.LayoutTransitionType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="animator" Type="Android.Animation.Animator" />
      </Parameters>
      <Docs>
        <param name="transitionType">One of <c><see cref="F:Android.Animation.LayoutTransition.ChangeAppearing" /></c>, <c><see cref="F:Android.Animation.LayoutTransition.ChangeDisappearing" /></c>,
 <c><see cref="F:Android.Animation.LayoutTransition.Changing" /></c>, <c><see cref="F:Android.Animation.LayoutTransition.Appearing" /></c>, or <c><see cref="F:Android.Animation.LayoutTransition.Disappearing" /></c>, which determines the
 animation whose animator is being set.</param>
        <param name="animator">The animation being assigned. A value of <c>null</c> means that no
 animation will be run for the specified transitionType.
</param>
        <summary>Sets the animation used during one of the transition types that may run.</summary>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetDuration">
      <MemberSignature Language="C#" Value="public virtual void SetDuration (long duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDuration(int64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDuration", "(J)V", "GetSetDuration_JHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="duration" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="duration">The length of time, in milliseconds, that the transition animations
 should last.
</param>
        <summary tool="true">Sets the duration to be used by all animations of this transition object.</summary>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetDuration">
      <MemberSignature Language="C#" Value="public virtual void SetDuration (Android.Animation.LayoutTransitionType transitionType, long duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDuration(valuetype Android.Animation.LayoutTransitionType transitionType, int64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDuration", "(IJ)V", "GetSetDuration_IJHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transitionType" Type="Android.Animation.LayoutTransitionType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="duration" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="transitionType">One of <c><see cref="F:Android.Animation.LayoutTransition.ChangeAppearing" /></c>, <c><see cref="F:Android.Animation.LayoutTransition.ChangeDisappearing" /></c>,
 <c><see cref="F:Android.Animation.LayoutTransition.Changing" /></c>, <c><see cref="F:Android.Animation.LayoutTransition.Appearing" /></c>, or <c><see cref="F:Android.Animation.LayoutTransition.Disappearing" /></c>, which determines
 the animation whose duration is being set.</param>
        <param name="duration">The length of time, in milliseconds, that the specified animation should run.</param>
        <summary>Sets the duration on one of the animation objects used by this transition.</summary>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="M:Android.Animation.Animator.SetDuration(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="SetInterpolator">
      <MemberSignature Language="C#" Value="public virtual void SetInterpolator (Android.Animation.LayoutTransitionType transitionType, Android.Animation.ITimeInterpolator interpolator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInterpolator(valuetype Android.Animation.LayoutTransitionType transitionType, class Android.Animation.ITimeInterpolator interpolator) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setInterpolator", "(ILandroid/animation/TimeInterpolator;)V", "GetSetInterpolator_ILandroid_animation_TimeInterpolator_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transitionType" Type="Android.Animation.LayoutTransitionType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="interpolator" Type="Android.Animation.ITimeInterpolator" />
      </Parameters>
      <Docs>
        <param name="transitionType">One of <c><see cref="F:Android.Animation.LayoutTransition.ChangeAppearing" /></c>, <c><see cref="F:Android.Animation.LayoutTransition.ChangeDisappearing" /></c>,
 <c><see cref="F:Android.Animation.LayoutTransition.Changing" /></c>, <c><see cref="F:Android.Animation.LayoutTransition.Appearing" /></c>, or <c><see cref="F:Android.Animation.LayoutTransition.Disappearing" /></c>, which determines
 the animation whose interpolator is being set.</param>
        <param name="interpolator">The interpolator that the specified animation should use.</param>
        <summary>Sets the interpolator on one of the animation objects used by this transition.</summary>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="M:Android.Animation.Animator.SetInterpolator(Android.Animation.ITimeInterpolator)" />
      </Docs>
    </Member>
    <Member MemberName="SetStagger">
      <MemberSignature Language="C#" Value="public virtual void SetStagger (Android.Animation.LayoutTransitionType transitionType, long duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetStagger(valuetype Android.Animation.LayoutTransitionType transitionType, int64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setStagger", "(IJ)V", "GetSetStagger_IJHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transitionType" Type="Android.Animation.LayoutTransitionType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="duration" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="transitionType">A value of <c><see cref="F:Android.Animation.LayoutTransition.ChangeAppearing" /></c>, <c><see cref="F:Android.Animation.LayoutTransition.ChangeDisappearing" /></c>, or
 <c><see cref="F:Android.Animation.LayoutTransition.Changing" /></c>.</param>
        <param name="duration">The length of time, in milliseconds, to delay before launching the next
 animation in the sequence.
</param>
        <summary>Sets the length of time to delay between starting each animation during one of the
 change animations.</summary>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetStartDelay">
      <MemberSignature Language="C#" Value="public virtual void SetStartDelay (Android.Animation.LayoutTransitionType transitionType, long delay);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetStartDelay(valuetype Android.Animation.LayoutTransitionType transitionType, int64 delay) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setStartDelay", "(IJ)V", "GetSetStartDelay_IJHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transitionType" Type="Android.Animation.LayoutTransitionType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="delay" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="transitionType">One of <c><see cref="F:Android.Animation.LayoutTransition.ChangeAppearing" /></c>, <c><see cref="F:Android.Animation.LayoutTransition.ChangeDisappearing" /></c>,
 <c><see cref="F:Android.Animation.LayoutTransition.Changing" /></c>, <c><see cref="F:Android.Animation.LayoutTransition.Appearing" /></c>, or <c><see cref="F:Android.Animation.LayoutTransition.Disappearing" /></c>, which determines
 the animation whose start delay is being set.</param>
        <param name="delay">The length of time, in milliseconds, to delay before starting the animation.</param>
        <summary>Sets the start delay on one of the animation objects used by this transition.</summary>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="P:Android.Animation.Animator.StartDelay" />
      </Docs>
    </Member>
    <Member MemberName="ShowChild">
      <MemberSignature Language="C#" Value="public virtual void ShowChild (Android.Views.ViewGroup parent, Android.Views.View child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowChild(class Android.Views.ViewGroup parent, class Android.Views.View child) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("showChild", "(Landroid/view/ViewGroup;Landroid/view/View;)V", "GetShowChild_Landroid_view_ViewGroup_Landroid_view_View_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="Android.Views.ViewGroup" />
        <Parameter Name="child" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="parent">To be added.</param>
        <param name="child">To be added.</param>
        <summary tool="true">
        </summary>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="ShowChild">
      <MemberSignature Language="C#" Value="public virtual void ShowChild (Android.Views.ViewGroup parent, Android.Views.View child, Android.Views.ViewStates oldVisibility);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowChild(class Android.Views.ViewGroup parent, class Android.Views.View child, valuetype Android.Views.ViewStates oldVisibility) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("showChild", "(Landroid/view/ViewGroup;Landroid/view/View;I)V", "GetShowChild_Landroid_view_ViewGroup_Landroid_view_View_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="Android.Views.ViewGroup" />
        <Parameter Name="child" Type="Android.Views.View" />
        <Parameter Name="oldVisibility" Type="Android.Views.ViewStates">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="parent">The ViewGroup in which the View is being made visible.</param>
        <param name="child">The View being made visible.</param>
        <param name="oldVisibility">The previous visibility value of the child View, either
 <c><see cref="F:Android.Views.ViewStates.Gone" tool="ReplaceLinkValue" /></c> or <c><see cref="F:Android.Views.ViewStates.Invisible" tool="ReplaceLinkValue" /></c>.
</param>
        <summary>This method is called by ViewGroup when a child view is about to be made visible in the
 container.</summary>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="StartTransition">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Animation.LayoutTransition.StartTransitionEventArgs&gt; StartTransition;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Animation.LayoutTransition/StartTransitionEventArgs&gt; StartTransition" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Animation.LayoutTransition+StartTransitionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="TransitionListeners">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Animation.LayoutTransition.ITransitionListener&gt; TransitionListeners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Animation.LayoutTransition/ITransitionListener&gt; TransitionListeners" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTransitionListeners", "()Ljava/util/List;", "GetGetTransitionListenersHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Animation.LayoutTransition+ITransitionListener&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current list of listeners for layout changes.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
  </Members>
</Type>
