<Type Name="AnimatorSet+Builder" FullName="Android.Animation.AnimatorSet+Builder">
  <TypeSignature Language="C#" Value="public class AnimatorSet.Builder : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit AnimatorSet/Builder extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/animation/AnimatorSet$Builder", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>The <c>Builder</c> object is a utility class to facilitate adding animations to a
 <c>AnimatorSet</c> along with the relationships between the various animations.</summary>
    <remarks />
    <since version="Added in API level 11" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Builder (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="After">
      <MemberSignature Language="C#" Value="public virtual Android.Animation.AnimatorSet.Builder After (Android.Animation.Animator anim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Animation.AnimatorSet/Builder After(class Android.Animation.Animator anim) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("after", "(Landroid/animation/Animator;)Landroid/animation/AnimatorSet$Builder;", "GetAfter_Landroid_animation_Animator_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.AnimatorSet+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anim" Type="Android.Animation.Animator" />
      </Parameters>
      <Docs>
        <param name="anim">The animation whose end will cause the animation supplied to the
 <c><see cref="M:Android.Animation.AnimatorSet.Play(Android.Animation.Animator)" /></c> method to play.
</param>
        <summary>Sets up the given animation to play when the animation supplied in the
 <c><see cref="M:Android.Animation.AnimatorSet.Play(Android.Animation.Animator)" /></c> call that created this <c>Builder</c> object
 to start when the animation supplied in this method call ends.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="After">
      <MemberSignature Language="C#" Value="public virtual Android.Animation.AnimatorSet.Builder After (long delay);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Animation.AnimatorSet/Builder After(int64 delay) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("after", "(J)Landroid/animation/AnimatorSet$Builder;", "GetAfter_JHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.AnimatorSet+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delay" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="delay">The number of milliseconds that should elapse before the
 animation starts.
</param>
        <summary>Sets up the animation supplied in the
 <c><see cref="M:Android.Animation.AnimatorSet.Play(Android.Animation.Animator)" /></c> call that created this <c>Builder</c> object
 to play when the given amount of time elapses.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Before">
      <MemberSignature Language="C#" Value="public virtual Android.Animation.AnimatorSet.Builder Before (Android.Animation.Animator anim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Animation.AnimatorSet/Builder Before(class Android.Animation.Animator anim) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("before", "(Landroid/animation/Animator;)Landroid/animation/AnimatorSet$Builder;", "GetBefore_Landroid_animation_Animator_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.AnimatorSet+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anim" Type="Android.Animation.Animator" />
      </Parameters>
      <Docs>
        <param name="anim">The animation that will play when the animation supplied to the
 <c><see cref="M:Android.Animation.AnimatorSet.Play(Android.Animation.Animator)" /></c> method ends.
</param>
        <summary>Sets up the given animation to play when the animation supplied in the
 <c><see cref="M:Android.Animation.AnimatorSet.Play(Android.Animation.Animator)" /></c> call that created this <c>Builder</c> object
 ends.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public virtual Android.Animation.AnimatorSet.Builder With (Android.Animation.Animator anim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Animation.AnimatorSet/Builder With(class Android.Animation.Animator anim) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("with", "(Landroid/animation/Animator;)Landroid/animation/AnimatorSet$Builder;", "GetWith_Landroid_animation_Animator_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.AnimatorSet+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anim" Type="Android.Animation.Animator" />
      </Parameters>
      <Docs>
        <param name="anim">The animation that will play when the animation supplied to the
 <c><see cref="M:Android.Animation.AnimatorSet.Play(Android.Animation.Animator)" /></c> method starts.
</param>
        <summary>Sets up the given animation to play at the same time as the animation supplied in the
 <c><see cref="M:Android.Animation.AnimatorSet.Play(Android.Animation.Animator)" /></c> call that created this <c>Builder</c> object.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
  </Members>
</Type>
