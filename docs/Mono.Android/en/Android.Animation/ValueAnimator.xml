<Type Name="ValueAnimator" FullName="Android.Animation.ValueAnimator">
  <TypeSignature Language="C#" Value="public class ValueAnimator : Android.Animation.Animator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ValueAnimator extends Android.Animation.Animator" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Animation.Animator</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/animation/ValueAnimator", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This class provides a simple timing engine for running animations
 which calculate animated values and set them on target objects.</summary>
    <remarks><para tool="javadoc-to-mdoc">This class provides a simple timing engine for running animations
 which calculate animated values and set them on target objects.

 <format type="text/html"><h3>Developer Guides</h3></format></para><para tool="javadoc-to-mdoc">There is a single timing pulse that all animations use. It runs in a
 custom handler to ensure that property changes happen on the UI thread.</para><para tool="javadoc-to-mdoc">By default, ValueAnimator uses non-linear time interpolation, via the
 <c><see cref="T:Android.Views.Animations.AccelerateDecelerateInterpolator" /></c> class, which accelerates into and decelerates
 out of an animation. This behavior can be changed by calling
 <c><see cref="M:Android.Animation.ValueAnimator.SetInterpolator(Android.Animation.ITimeInterpolator)" /></c>.</para><para tool="javadoc-to-mdoc">For more information about animating with <c>ValueAnimator</c>, read the
 <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/graphics/prop-animation.html#value-animator">Property
 Animation</a></format> developer guide.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/animation/ValueAnimator.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 11" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValueAnimator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Creates a new ValueAnimator object.</summary>
        <remarks><para tool="javadoc-to-mdoc">Creates a new ValueAnimator object. This default constructor is primarily for
 use internally; the factory methods which take parameters are more generally
 useful.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/animation/ValueAnimator.html#ValueAnimator()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValueAnimator (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUpdateListener">
      <MemberSignature Language="C#" Value="public virtual void AddUpdateListener (Android.Animation.ValueAnimator.IAnimatorUpdateListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddUpdateListener(class Android.Animation.ValueAnimator/IAnimatorUpdateListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addUpdateListener", "(Landroid/animation/ValueAnimator$AnimatorUpdateListener;)V", "GetAddUpdateListener_Landroid_animation_ValueAnimator_AnimatorUpdateListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Animation.ValueAnimator+IAnimatorUpdateListener" />
      </Parameters>
      <Docs>
        <param name="listener">the listener to be added to the current set of listeners for this animation.
</param>
        <summary>Adds a listener to the set of listeners that are sent update events through the life of
 an animation.</summary>
        <remarks><para tool="javadoc-to-mdoc">Adds a listener to the set of listeners that are sent update events through the life of
 an animation. This method is called on all listeners for every frame of the animation,
 after the values for the animation have been calculated.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/animation/ValueAnimator.html#addUpdateListener(android.animation.ValueAnimator.AnimatorUpdateListener)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="AnimatedFraction">
      <MemberSignature Language="C#" Value="public virtual float AnimatedFraction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 AnimatedFraction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAnimatedFraction", "()F", "GetGetAnimatedFractionHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current animation fraction, which is the elapsed/interpolated fraction used in
 the most recent frame update on the animation.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns the current animation fraction, which is the elapsed/interpolated fraction used in
 the most recent frame update on the animation.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/animation/ValueAnimator.html#getAnimatedFraction()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="AnimatedValue">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object AnimatedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.Object AnimatedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAnimatedValue", "()Ljava/lang/Object;", "GetGetAnimatedValueHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The most recent value calculated by this <c>ValueAnimator</c> when there is just one
 property being animated.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">The most recent value calculated by this <c>ValueAnimator</c> when there is just one
 property being animated. This value is only sensible while the animation is running. The main
 purpose for this read-only property is to retrieve the value from the <c>ValueAnimator</c>
 during a call to <c><see cref="!:NoType:android/animation/ValueAnimator$AnimatorUpdateListener;Href=../../../reference/android/animation/ValueAnimator.AnimatorUpdateListener.html#onAnimationUpdate(android.animation.ValueAnimator)" /></c>, which
 is called during each animation frame, immediately after the value is calculated.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/animation/ValueAnimator.html#getAnimatedValue()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CurrentPlayTime">
      <MemberSignature Language="C#" Value="public virtual long CurrentPlayTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 CurrentPlayTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCurrentPlayTime", "()J", "GetGetCurrentPlayTimeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setCurrentPlayTime", "(J)V", "GetSetCurrentPlayTime_JHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current position of the animation in time, which is equal to the current
 time minus the time that the animation started.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/android/animation/ValueAnimator.html#getCurrentPlayTime()" target="_blank">[Android Documentation]</a><br /></format>Gets the current position of the animation in time, which is equal to the current
 time minus the time that the animation started. An animation that is not yet started will
 return a value of zero.</para><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/android/animation/ValueAnimator.html#setCurrentPlayTime(long)" target="_blank">[Android Documentation]</a><br /></format>Sets the position of the animation to the specified point in time. This time should
 be between 0 and the total duration of the animation, including any repetition. If
 the animation has not yet been started, then it will not advance forward after it is
 set to this time; it will simply set the time to this value and perform any appropriate
 actions based on that time. If the animation is already running, then setCurrentPlayTime()
 will set the current playing time to this value and continue playing from that point.</para></remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public override long Duration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDuration", "()J", "GetGetDurationHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the length of the animation.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Gets the length of the animation. The default duration is 300 milliseconds.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/animation/ValueAnimator.html#getDuration()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="FrameDelay">
      <MemberSignature Language="C#" Value="public static long FrameDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int64 FrameDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFrameDelay", "()J", "GetGetFrameDelayHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setFrameDelay", "(J)V", "GetSetFrameDelay_JHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The amount of time, in milliseconds, between each frame of the animation.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/android/animation/ValueAnimator.html#getFrameDelay()" target="_blank">[Android Documentation]</a><br /></format>The amount of time, in milliseconds, between each frame of the animation. This is a
 requested time that the animation will attempt to honor, but the actual delay between
 frames may be different, depending on system load and capabilities. This is a static
 function because the same delay will be applied to all animations, since they are all
 run off of a single timing loop.

 The frame delay may be ignored when the animation system uses an external timing
 source, such as the display refresh rate (vsync), to govern animations.</para><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/android/animation/ValueAnimator.html#setFrameDelay(long)" target="_blank">[Android Documentation]</a><br /></format>The amount of time, in milliseconds, between each frame of the animation. This is a
 requested time that the animation will attempt to honor, but the actual delay between
 frames may be different, depending on system load and capabilities. This is a static
 function because the same delay will be applied to all animations, since they are all
 run off of a single timing loop.

 The frame delay may be ignored when the animation system uses an external timing
 source, such as the display refresh rate (vsync), to govern animations.</para></remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetAnimatedValue">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object GetAnimatedValue (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object GetAnimatedValue(string propertyName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getAnimatedValue", "(Ljava/lang/String;)Ljava/lang/Object;", "GetGetAnimatedValue_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>The most recent value calculated by this <c>ValueAnimator</c> for <c>propertyName</c>.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">The most recent value calculated by this <c>ValueAnimator</c> for <c>propertyName</c>.
 The main purpose for this read-only property is to retrieve the value from the
 <c>ValueAnimator</c> during a call to
 <c><see cref="!:NoType:android/animation/ValueAnimator$AnimatorUpdateListener;Href=../../../reference/android/animation/ValueAnimator.AnimatorUpdateListener.html#onAnimationUpdate(android.animation.ValueAnimator)" /></c>, which
 is called during each animation frame, immediately after the value is calculated.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/animation/ValueAnimator.html#getAnimatedValue(java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public virtual Android.Animation.PropertyValuesHolder[] GetValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Animation.PropertyValuesHolder[] GetValues() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getValues", "()[Landroid/animation/PropertyValuesHolder;", "GetGetValuesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.PropertyValuesHolder[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the values that this ValueAnimator animates between.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns the values that this ValueAnimator animates between. These values are stored in
 PropertyValuesHolder objects, even if the ValueAnimator was created with a simple list
 of value objects instead.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/animation/ValueAnimator.html#getValues()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Infinite">
      <MemberSignature Language="C#" Value="public const int Infinite = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 Infinite = (-1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("INFINITE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>This value used used with the <c><see cref="P:Android.Animation.ValueAnimator.RepeatCount" /></c> property to repeat
 the animation indefinitely.</summary>
        <remarks><para tool="javadoc-to-mdoc">This value used used with the <c><see cref="P:Android.Animation.ValueAnimator.RepeatCount" /></c> property to repeat
 the animation indefinitely.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/animation/ValueAnimator.html#INFINITE" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="IsRunning">
      <MemberSignature Language="C#" Value="public override bool IsRunning { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRunning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isRunning", "()Z", "GetIsRunningHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether this Animator is currently running (having been started and gone past any
 initial startDelay period and not yet ended).</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns whether this Animator is currently running (having been started and gone past any
 initial startDelay period and not yet ended).</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/animation/ValueAnimator.html#isRunning()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="OfFloat">
      <MemberSignature Language="C#" Value="public static Android.Animation.ValueAnimator OfFloat (float[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Animation.ValueAnimator OfFloat(float32[] values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ofFloat", "([F)Landroid/animation/ValueAnimator;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.ValueAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Single[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="values">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OfInt">
      <MemberSignature Language="C#" Value="public static Android.Animation.ValueAnimator OfInt (int[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Animation.ValueAnimator OfInt(int32[] values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ofInt", "([I)Landroid/animation/ValueAnimator;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.ValueAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Int32[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="values">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OfObject">
      <MemberSignature Language="C#" Value="public static Android.Animation.ValueAnimator OfObject (Android.Animation.ITypeEvaluator evaluator, Java.Lang.Object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Animation.ValueAnimator OfObject(class Android.Animation.ITypeEvaluator evaluator, class Java.Lang.Object[] values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ofObject", "(Landroid/animation/TypeEvaluator;[Ljava/lang/Object;)Landroid/animation/ValueAnimator;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.ValueAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evaluator" Type="Android.Animation.ITypeEvaluator" />
        <Parameter Name="values" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="evaluator">To be added.</param>
        <param name="values">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OfPropertyValuesHolder">
      <MemberSignature Language="C#" Value="public static Android.Animation.ValueAnimator OfPropertyValuesHolder (Android.Animation.PropertyValuesHolder[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Animation.ValueAnimator OfPropertyValuesHolder(class Android.Animation.PropertyValuesHolder[] values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ofPropertyValuesHolder", "([Landroid/animation/PropertyValuesHolder;)Landroid/animation/ValueAnimator;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.ValueAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="Android.Animation.PropertyValuesHolder[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="values">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllUpdateListeners">
      <MemberSignature Language="C#" Value="public virtual void RemoveAllUpdateListeners ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAllUpdateListeners() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeAllUpdateListeners", "()V", "GetRemoveAllUpdateListenersHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all listeners from the set listening to frame updates for this animation.</summary>
        <remarks><para tool="javadoc-to-mdoc">Removes all listeners from the set listening to frame updates for this animation.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/animation/ValueAnimator.html#removeAllUpdateListeners()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="RemoveUpdateListener">
      <MemberSignature Language="C#" Value="public virtual void RemoveUpdateListener (Android.Animation.ValueAnimator.IAnimatorUpdateListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveUpdateListener(class Android.Animation.ValueAnimator/IAnimatorUpdateListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeUpdateListener", "(Landroid/animation/ValueAnimator$AnimatorUpdateListener;)V", "GetRemoveUpdateListener_Landroid_animation_ValueAnimator_AnimatorUpdateListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Animation.ValueAnimator+IAnimatorUpdateListener" />
      </Parameters>
      <Docs>
        <param name="listener">the listener to be removed from the current set of update listeners
 for this animation.
</param>
        <summary>Removes a listener from the set listening to frame updates for this animation.</summary>
        <remarks><para tool="javadoc-to-mdoc">Removes a listener from the set listening to frame updates for this animation.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/animation/ValueAnimator.html#removeUpdateListener(android.animation.ValueAnimator.AnimatorUpdateListener)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="RepeatCount">
      <MemberSignature Language="C#" Value="public virtual int RepeatCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RepeatCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getRepeatCount", "()I", "GetGetRepeatCountHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setRepeatCount", "(I)V", "GetSetRepeatCount_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Defines how many times the animation should repeat.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/android/animation/ValueAnimator.html#getRepeatCount()" target="_blank">[Android Documentation]</a><br /></format>Defines how many times the animation should repeat. The default value
 is 0.</para><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/android/animation/ValueAnimator.html#setRepeatCount(int)" target="_blank">[Android Documentation]</a><br /></format>Sets how many times the animation should be repeated. If the repeat
 count is 0, the animation is never repeated. If the repeat count is
 greater than 0 or <c><see cref="F:Android.Animation.ValueAnimator.Infinite" /></c>, the repeat mode will be taken
 into account. The repeat count is 0 by default.</para></remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="RepeatMode">
      <MemberSignature Language="C#" Value="public virtual Android.Animation.ValueAnimatorRepeatMode RepeatMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Animation.ValueAnimatorRepeatMode RepeatMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getRepeatMode", "()I", "GetGetRepeatModeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setRepeatMode", "(I)V", "GetSetRepeatMode_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.ValueAnimatorRepeatMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Defines what this animation should do when it reaches the end.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/android/animation/ValueAnimator.html#getRepeatMode()" target="_blank">[Android Documentation]</a><br /></format>Defines what this animation should do when it reaches the end.</para><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/android/animation/ValueAnimator.html#setRepeatMode(int)" target="_blank">[Android Documentation]</a><br /></format>Defines what this animation should do when it reaches the end. This
 setting is applied only when the repeat count is either greater than
 0 or <c><see cref="F:Android.Animation.ValueAnimator.Infinite" /></c>. Defaults to <c><see cref="F:Android.Animation.ValueAnimator.Restart" /></c>.</para></remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Restart">
      <MemberSignature Language="C#" Value="public const Android.Animation.ValueAnimatorRepeatMode Restart = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Animation.ValueAnimatorRepeatMode Restart = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("RESTART")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Animation.ValueAnimatorRepeatMode enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.ValueAnimatorRepeatMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>When the animation reaches the end and <c>repeatCount</c> is INFINITE
 or a positive value, the animation restarts from the beginning.</summary>
        <remarks><para tool="javadoc-to-mdoc">When the animation reaches the end and <c>repeatCount</c> is INFINITE
 or a positive value, the animation restarts from the beginning.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/animation/ValueAnimator.html#RESTART" target="_blank">[Android Documentation]</a></format></para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public virtual void Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reverse() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("reverse", "()V", "GetReverseHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Plays the ValueAnimator in reverse.</summary>
        <remarks><para tool="javadoc-to-mdoc">Plays the ValueAnimator in reverse. If the animation is already running,
 it will stop itself and play backwards from the point reached when reverse was called.
 If the animation is not currently running, then it will start from the end and
 play backwards. This behavior is only set for the current animation; future playing
 of the animation will use the default behavior of playing forward.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/animation/ValueAnimator.html#reverse()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetDuration">
      <MemberSignature Language="C#" Value="public override Android.Animation.Animator SetDuration (long duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Animation.Animator SetDuration(int64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDuration", "(J)Landroid/animation/Animator;", "GetSetDuration_JHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.Animator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="duration" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="duration">The length of the animation, in milliseconds. This value cannot
 be negative.</param>
        <summary>Sets the length of the animation.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Sets the length of the animation. The default duration is 300 milliseconds.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/animation/ValueAnimator.html#setDuration(long)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetEvaluator">
      <MemberSignature Language="C#" Value="public virtual void SetEvaluator (Android.Animation.ITypeEvaluator value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEvaluator(class Android.Animation.ITypeEvaluator value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setEvaluator", "(Landroid/animation/TypeEvaluator;)V", "GetSetEvaluator_Landroid_animation_TypeEvaluator_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Android.Animation.ITypeEvaluator" />
      </Parameters>
      <Docs>
        <param name="value">the evaluator to be used this animation
</param>
        <summary>The type evaluator to be used when calculating the animated values of this animation.</summary>
        <remarks><para tool="javadoc-to-mdoc">The type evaluator to be used when calculating the animated values of this animation.
 The system will automatically assign a float or int evaluator based on the type
 of <c>startValue</c> and <c>endValue</c> in the constructor. But if these values
 are not one of these primitive types, or if different evaluation is desired (such as is
 necessary with int values that represent colors), a custom evaluator needs to be assigned.
 For example, when running an animation on color values, the <c><see cref="T:Android.Animation.ArgbEvaluator" /></c>
 should be used to get correct RGB color interpolation.

 </para><para tool="javadoc-to-mdoc">If this ValueAnimator has only one set of values being animated between, this evaluator
 will be used for that set. If there are several sets of values being animated, which is
 the case if PropertyValuesHolder objects were set on the ValueAnimator, then the evaluator
 is assigned just to the first PropertyValuesHolder object.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/animation/ValueAnimator.html#setEvaluator(android.animation.TypeEvaluator)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetFloatValues">
      <MemberSignature Language="C#" Value="public virtual void SetFloatValues (float[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFloatValues(float32[] values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setFloatValues", "([F)V", "GetSetFloatValues_arrayFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Single[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="values">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInterpolator">
      <MemberSignature Language="C#" Value="public override void SetInterpolator (Android.Animation.ITimeInterpolator value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetInterpolator(class Android.Animation.ITimeInterpolator value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setInterpolator", "(Landroid/animation/TimeInterpolator;)V", "GetSetInterpolator_Landroid_animation_TimeInterpolator_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Android.Animation.ITimeInterpolator" />
      </Parameters>
      <Docs>
        <param name="value">the interpolator to be used by this animation. A value of <c>null</c>
 will result in linear interpolation.
</param>
        <summary>The time interpolator used in calculating the elapsed fraction of this animation.</summary>
        <remarks><para tool="javadoc-to-mdoc">The time interpolator used in calculating the elapsed fraction of this animation. The
 interpolator determines whether the animation runs with linear or non-linear motion,
 such as acceleration and deceleration. The default value is
 <c><see cref="T:Android.Views.Animations.AccelerateDecelerateInterpolator" /></c></para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/animation/ValueAnimator.html#setInterpolator(android.animation.TimeInterpolator)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetIntValues">
      <MemberSignature Language="C#" Value="public virtual void SetIntValues (int[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetIntValues(int32[] values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setIntValues", "([I)V", "GetSetIntValues_arrayIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Int32[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="values">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetObjectValues">
      <MemberSignature Language="C#" Value="public virtual void SetObjectValues (Java.Lang.Object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetObjectValues(class Java.Lang.Object[] values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setObjectValues", "([Ljava/lang/Object;)V", "GetSetObjectValues_arrayLjava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="values">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValues">
      <MemberSignature Language="C#" Value="public virtual void SetValues (Android.Animation.PropertyValuesHolder[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValues(class Android.Animation.PropertyValuesHolder[] values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setValues", "([Landroid/animation/PropertyValuesHolder;)V", "GetSetValues_arrayLandroid_animation_PropertyValuesHolder_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="Android.Animation.PropertyValuesHolder[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="values">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartDelay">
      <MemberSignature Language="C#" Value="public override long StartDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 StartDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getStartDelay", "()J", "GetGetStartDelayHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setStartDelay", "(J)V", "GetSetStartDelay_JHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The amount of time, in milliseconds, to delay starting the animation after
 <c><see cref="!:Android.Animation.ValueAnimator.start()" /></c> is called.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/android/animation/ValueAnimator.html#getStartDelay()" target="_blank">[Android Documentation]</a><br /></format>The amount of time, in milliseconds, to delay starting the animation after
 <c><see cref="!:Android.Animation.ValueAnimator.start()" /></c> is called.</para><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/android/animation/ValueAnimator.html#setStartDelay(long)" target="_blank">[Android Documentation]</a><br /></format>The amount of time, in milliseconds, to delay starting the animation after
 <c><see cref="!:Android.Animation.ValueAnimator.start()" /></c> is called.</para></remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Animation.ValueAnimator.AnimatorUpdateEventArgs&gt; Update;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Animation.ValueAnimator/AnimatorUpdateEventArgs&gt; Update" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Animation.ValueAnimator+AnimatorUpdateEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
