<Type Name="MediaSessionManager" FullName="Android.Media.Session.MediaSessionManager">
  <TypeSignature Language="C#" Value="public sealed class MediaSessionManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MediaSessionManager extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Media.Session.MediaSessionManager" />
  <TypeSignature Language="F#" Value="type MediaSessionManager = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/media/session/MediaSessionManager", ApiSince=21, DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="21">
    <summary>Provides support for interacting with <c><see cref="T:Android.Media.Session.MediaSession" /></c>
 that applications have published to express their ongoing media playback
 state.</summary>
    <remarks />
  </Docs>
  <Members>
    <Member MemberName="AddOnActiveSessionsChangedListener">
      <MemberSignature Language="C#" Value="public void AddOnActiveSessionsChangedListener (Android.Media.Session.MediaSessionManager.IOnActiveSessionsChangedListener sessionListener, Android.Content.ComponentName notificationListener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnActiveSessionsChangedListener(class Android.Media.Session.MediaSessionManager/IOnActiveSessionsChangedListener sessionListener, class Android.Content.ComponentName notificationListener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.Session.MediaSessionManager.AddOnActiveSessionsChangedListener(Android.Media.Session.MediaSessionManager.IOnActiveSessionsChangedListener,Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="member this.AddOnActiveSessionsChangedListener : Android.Media.Session.MediaSessionManager.IOnActiveSessionsChangedListener * Android.Content.ComponentName -&gt; unit" Usage="mediaSessionManager.AddOnActiveSessionsChangedListener (sessionListener, notificationListener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addOnActiveSessionsChangedListener", "(Landroid/media/session/MediaSessionManager$OnActiveSessionsChangedListener;Landroid/content/ComponentName;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionListener" Type="Android.Media.Session.MediaSessionManager+IOnActiveSessionsChangedListener" />
        <Parameter Name="notificationListener" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="sessionListener">The listener to add.</param>
        <param name="notificationListener">The enabled notification listener component.
            May be null.
</param>
        <summary>Add a listener to be notified when the list of active sessions
 changes.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AddOnActiveSessionsChangedListener">
      <MemberSignature Language="C#" Value="public void AddOnActiveSessionsChangedListener (Android.Media.Session.MediaSessionManager.IOnActiveSessionsChangedListener sessionListener, Android.Content.ComponentName notificationListener, Android.OS.Handler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnActiveSessionsChangedListener(class Android.Media.Session.MediaSessionManager/IOnActiveSessionsChangedListener sessionListener, class Android.Content.ComponentName notificationListener, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.Session.MediaSessionManager.AddOnActiveSessionsChangedListener(Android.Media.Session.MediaSessionManager.IOnActiveSessionsChangedListener,Android.Content.ComponentName,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="member this.AddOnActiveSessionsChangedListener : Android.Media.Session.MediaSessionManager.IOnActiveSessionsChangedListener * Android.Content.ComponentName * Android.OS.Handler -&gt; unit" Usage="mediaSessionManager.AddOnActiveSessionsChangedListener (sessionListener, notificationListener, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addOnActiveSessionsChangedListener", "(Landroid/media/session/MediaSessionManager$OnActiveSessionsChangedListener;Landroid/content/ComponentName;Landroid/os/Handler;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionListener" Type="Android.Media.Session.MediaSessionManager+IOnActiveSessionsChangedListener" />
        <Parameter Name="notificationListener" Type="Android.Content.ComponentName" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="sessionListener">The listener to add.</param>
        <param name="notificationListener">The enabled notification listener component.
            May be null.</param>
        <param name="handler">The handler to post events to.
</param>
        <summary>Add a listener to be notified when the list of active sessions
 changes.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetActiveSessions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Android.Media.Session.MediaController&gt; GetActiveSessions (Android.Content.ComponentName notificationListener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Android.Media.Session.MediaController&gt; GetActiveSessions(class Android.Content.ComponentName notificationListener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.Session.MediaSessionManager.GetActiveSessions(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="member this.GetActiveSessions : Android.Content.ComponentName -&gt; System.Collections.Generic.IList&lt;Android.Media.Session.MediaController&gt;" Usage="mediaSessionManager.GetActiveSessions notificationListener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getActiveSessions", "(Landroid/content/ComponentName;)Ljava/util/List;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Media.Session.MediaController&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notificationListener" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="notificationListener">The enabled notification listener component.
            May be null.</param>
        <summary>Get a list of controllers for all ongoing sessions.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Media.Session.MediaSessionManager.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Media.Session.MediaSessionManager.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveOnActiveSessionsChangedListener">
      <MemberSignature Language="C#" Value="public void RemoveOnActiveSessionsChangedListener (Android.Media.Session.MediaSessionManager.IOnActiveSessionsChangedListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveOnActiveSessionsChangedListener(class Android.Media.Session.MediaSessionManager/IOnActiveSessionsChangedListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.Session.MediaSessionManager.RemoveOnActiveSessionsChangedListener(Android.Media.Session.MediaSessionManager.IOnActiveSessionsChangedListener)" />
      <MemberSignature Language="F#" Value="member this.RemoveOnActiveSessionsChangedListener : Android.Media.Session.MediaSessionManager.IOnActiveSessionsChangedListener -&gt; unit" Usage="mediaSessionManager.RemoveOnActiveSessionsChangedListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeOnActiveSessionsChangedListener", "(Landroid/media/session/MediaSessionManager$OnActiveSessionsChangedListener;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.Session.MediaSessionManager+IOnActiveSessionsChangedListener" />
      </Parameters>
      <Docs>
        <param name="listener">The listener to remove.
</param>
        <summary>Stop receiving active sessions updates on the specified listener.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Media.Session.MediaSessionManager.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Media.Session.MediaSessionManager.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Media.Session.MediaSessionManager.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Media.Session.MediaSessionManager.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
