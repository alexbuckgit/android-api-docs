<Type Name="MediaController" FullName="Android.Media.Session.MediaController">
  <TypeSignature Language="C#" Value="public sealed class MediaController : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MediaController extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/media/session/MediaController", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="21">
    <summary>Allows an app to interact with an ongoing media session.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Allows an app to interact with an ongoing media session. Media buttons and
 other commands can be sent to the session. A callback may be registered to
 receive updates from the session, such as metadata and play state changes.
 </para>
      <para tool="javadoc-to-mdoc">
 A MediaController can be created through <c><see cref="T:Android.Media.Session.MediaSessionManager" /></c> if you
 hold the "android.permission.MEDIA_CONTENT_CONTROL" permission or are an
 enabled notification listener or by getting a <c><see cref="!:NoType:android/media/session/MediaSession$Token;Href=../../../../reference/android/media/session/MediaSession.Token.html" /></c>
 directly from the session owner.
 </para>
      <para tool="javadoc-to-mdoc">
 MediaController objects are thread-safe.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/media/session/MediaController.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaController (Android.Content.Context context, Android.Media.Session.MediaSession.Token token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Media.Session.MediaSession/Token token) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/media/session/MediaSession$Token;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="token" Type="Android.Media.Session.MediaSession+Token" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="token">To be added.</param>
        <summary>Create a new MediaController from a session's token.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new MediaController from a session's token.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/session/MediaController.html#MediaController(android.content.Context, android.media.session.MediaSession.Token)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AdjustVolume">
      <MemberSignature Language="C#" Value="public void AdjustVolume (Android.Media.Adjust direction, Android.Media.AudioFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AdjustVolume(valuetype Android.Media.Adjust direction, valuetype Android.Media.AudioFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("adjustVolume", "(II)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="Android.Media.Adjust">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="flags" Type="Android.Media.AudioFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="direction">The direction to adjust the volume in.</param>
        <param name="flags">Any flags to pass with the command.
</param>
        <summary>Adjust the volume of the output this session is playing on.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Adjust the volume of the output this session is playing on. The direction
 must be one of <c><see cref="!:Android.Media.AudioManager.ADJUST_LOWER" /></c>,
 <c><see cref="!:Android.Media.AudioManager.ADJUST_RAISE" /></c>, or <c><see cref="!:Android.Media.AudioManager.ADJUST_SAME" /></c>.
 The command will be ignored if the session does not support
 <c><see cref="!:Android.Media.VolumeProvider.VOLUME_CONTROL_RELATIVE" /></c> or
 <c><see cref="!:Android.Media.VolumeProvider.VOLUME_CONTROL_ABSOLUTE" /></c>. The flags in
 <c><see cref="T:Android.Media.AudioManager" /></c> may be used to affect the handling.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/session/MediaController.html#adjustVolume(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.Media.Session.MediaController.GetPlaybackInfo" />
      </Docs>
    </Member>
    <Member MemberName="DispatchMediaButtonEvent">
      <MemberSignature Language="C#" Value="public bool DispatchMediaButtonEvent (Android.Views.KeyEvent keyEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool DispatchMediaButtonEvent(class Android.Views.KeyEvent keyEvent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchMediaButtonEvent", "(Landroid/view/KeyEvent;)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyEvent" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="keyEvent">The media button event to dispatch.</param>
        <summary>Send the specified media button event to the session.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Send the specified media button event to the session. Only media keys can
 be sent by this method, other keys will be ignored.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/session/MediaController.html#dispatchMediaButtonEvent(android.view.KeyEvent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Extras">
      <MemberSignature Language="C#" Value="public Android.OS.Bundle Extras { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.OS.Bundle Extras" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getExtras", "()Landroid/os/Bundle;", "GetGetExtrasHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Bundle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the extras for this session.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the extras for this session.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/session/MediaController.html#getExtras()" target="_blank">[Android Documentation]</a>
              <since version="Added in API level 21" />
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public long Flags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFlags", "()J", "GetGetFlagsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the flags for this session.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the flags for this session. Flags are defined in <c><see cref="T:Android.Media.Session.MediaSession" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/session/MediaController.html#getFlags()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPlaybackInfo">
      <MemberSignature Language="C#" Value="public Android.Media.Session.MediaController.PlaybackInfo GetPlaybackInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Media.Session.MediaController/PlaybackInfo GetPlaybackInfo() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPlaybackInfo", "()Landroid/media/session/MediaController$PlaybackInfo;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Session.MediaController+PlaybackInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Get the current playback info for this session.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the current playback info for this session.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/session/MediaController.html#getPlaybackInfo()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTransportControls">
      <MemberSignature Language="C#" Value="public Android.Media.Session.MediaController.TransportControls GetTransportControls ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Media.Session.MediaController/TransportControls GetTransportControls() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getTransportControls", "()Landroid/media/session/MediaController$TransportControls;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Session.MediaController+TransportControls</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Get a <c><see cref="!:NoType:android/media/session/MediaController$TransportControls;Href=../../../../reference/android/media/session/MediaController.TransportControls.html" /></c> instance to send transport actions to
 the associated session.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Get a <c><see cref="!:NoType:android/media/session/MediaController$TransportControls;Href=../../../../reference/android/media/session/MediaController.TransportControls.html" /></c> instance to send transport actions to
 the associated session.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/session/MediaController.html#getTransportControls()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public Android.Media.MediaMetadata Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.MediaMetadata Metadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMetadata", "()Landroid/media/MediaMetadata;", "GetGetMetadataHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaMetadata</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the current metadata for this session.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the current metadata for this session.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/session/MediaController.html#getMetadata()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PackageName">
      <MemberSignature Language="C#" Value="public string PackageName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PackageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPackageName", "()Ljava/lang/String;", "GetGetPackageNameHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the session owner's package name.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the session owner's package name.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/session/MediaController.html#getPackageName()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlaybackState">
      <MemberSignature Language="C#" Value="public Android.Media.Session.PlaybackState PlaybackState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.Session.PlaybackState PlaybackState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPlaybackState", "()Landroid/media/session/PlaybackState;", "GetGetPlaybackStateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Session.PlaybackState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the current playback state for this session.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the current playback state for this session.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/session/MediaController.html#getPlaybackState()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Queue">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Android.Media.Session.MediaSession.QueueItem&gt; Queue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Media.Session.MediaSession/QueueItem&gt; Queue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getQueue", "()Ljava/util/List;", "GetGetQueueHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Media.Session.MediaSession+QueueItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the current play queue for this session if one is set.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the current play queue for this session if one is set. If you only
 care about the current item <c><see cref="P:Android.Media.Session.MediaController.Metadata" /></c> should be used.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/session/MediaController.html#getQueue()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueTitle">
      <MemberSignature Language="C#" Value="public string QueueTitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QueueTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueTitleFormatted">
      <MemberSignature Language="C#" Value="public Java.Lang.ICharSequence QueueTitleFormatted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ICharSequence QueueTitleFormatted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getQueueTitle", "()Ljava/lang/CharSequence;", "GetGetQueueTitleHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the queue title for this session.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the queue title for this session.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/session/MediaController.html#getQueueTitle()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RatingType">
      <MemberSignature Language="C#" Value="public Android.Media.RatingStyle RatingType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.RatingStyle RatingType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getRatingType", "()I", "GetGetRatingTypeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.RatingStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the rating type supported by the session.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the rating type supported by the session. One of:
 <list type="bullet"><item><term><c><see cref="F:Android.Media.Rating.RatingNone" /></c></term></item><item><term><c><see cref="F:Android.Media.Rating.RatingHeart" /></c></term></item><item><term><c><see cref="F:Android.Media.Rating.RatingThumbUpDown" /></c></term></item><item><term><c><see cref="F:Android.Media.Rating.Rating3Stars" /></c></term></item><item><term><c><see cref="F:Android.Media.Rating.Rating4Stars" /></c></term></item><item><term><c><see cref="F:Android.Media.Rating.Rating5Stars" /></c></term></item><item><term><c><see cref="F:Android.Media.Rating.RatingPercentage" /></c></term></item></list></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/session/MediaController.html#getRatingType()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterCallback">
      <MemberSignature Language="C#" Value="public void RegisterCallback (Android.Media.Session.MediaController.Callback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterCallback(class Android.Media.Session.MediaController/Callback callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerCallback", "(Landroid/media/session/MediaController$Callback;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Media.Session.MediaController+Callback" />
      </Parameters>
      <Docs>
        <param name="callback">The callback object, must not be null.
</param>
        <summary>Registers a callback to receive updates from the Session.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Registers a callback to receive updates from the Session. Updates will be
 posted on the caller's thread.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/session/MediaController.html#registerCallback(android.media.session.MediaController.Callback)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterCallback">
      <MemberSignature Language="C#" Value="public void RegisterCallback (Android.Media.Session.MediaController.Callback callback, Android.OS.Handler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterCallback(class Android.Media.Session.MediaController/Callback callback, class Android.OS.Handler handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerCallback", "(Landroid/media/session/MediaController$Callback;Landroid/os/Handler;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Media.Session.MediaController+Callback" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="callback">The callback object, must not be null.</param>
        <param name="handler">The handler to post updates on. If null the callers thread
            will be used.
</param>
        <summary>Registers a callback to receive updates from the session.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Registers a callback to receive updates from the session. Updates will be
 posted on the specified handler's thread.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/session/MediaController.html#registerCallback(android.media.session.MediaController.Callback, android.os.Handler)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendCommand">
      <MemberSignature Language="C#" Value="public void SendCommand (string command, Android.OS.Bundle args, Android.OS.ResultReceiver cb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendCommand(string command, class Android.OS.Bundle args, class Android.OS.ResultReceiver cb) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sendCommand", "(Ljava/lang/String;Landroid/os/Bundle;Landroid/os/ResultReceiver;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.String" />
        <Parameter Name="args" Type="Android.OS.Bundle" />
        <Parameter Name="cb" Type="Android.OS.ResultReceiver" />
      </Parameters>
      <Docs>
        <param name="command">The command to send</param>
        <param name="args">Any parameters to include with the command</param>
        <param name="cb">The callback to receive the result on
</param>
        <summary>Sends a generic command to the session.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sends a generic command to the session. It is up to the session creator
 to decide what commands and parameters they will support. As such,
 commands should only be sent to sessions that the controller owns.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/session/MediaController.html#sendCommand(java.lang.String, android.os.Bundle, android.os.ResultReceiver)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionActivity">
      <MemberSignature Language="C#" Value="public Android.App.PendingIntent SessionActivity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.App.PendingIntent SessionActivity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSessionActivity", "()Landroid/app/PendingIntent;", "GetGetSessionActivityHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.PendingIntent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get an intent for launching UI associated with this session if one
 exists.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get an intent for launching UI associated with this session if one
 exists.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/session/MediaController.html#getSessionActivity()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionToken">
      <MemberSignature Language="C#" Value="public Android.Media.Session.MediaSession.Token SessionToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.Session.MediaSession/Token SessionToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSessionToken", "()Landroid/media/session/MediaSession$Token;", "GetGetSessionTokenHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Session.MediaSession+Token</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the token for the session this is connected to.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the token for the session this is connected to.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/session/MediaController.html#getSessionToken()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVolumeTo">
      <MemberSignature Language="C#" Value="public void SetVolumeTo (int value, Android.Media.AudioFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVolumeTo(int32 value, valuetype Android.Media.AudioFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setVolumeTo", "(II)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="flags" Type="Android.Media.AudioFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">The value to set it to, between 0 and the reported max.</param>
        <param name="flags">Flags from <c><see cref="T:Android.Media.AudioManager" /></c> to include with the volume
            request.
</param>
        <summary>Set the volume of the output this session is playing on.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the volume of the output this session is playing on. The command will
 be ignored if it does not support
 <c><see cref="!:Android.Media.VolumeProvider.VOLUME_CONTROL_ABSOLUTE" /></c>. The flags in
 <c><see cref="T:Android.Media.AudioManager" /></c> may be used to affect the handling.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/session/MediaController.html#setVolumeTo(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.Media.Session.MediaController.GetPlaybackInfo" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterCallback">
      <MemberSignature Language="C#" Value="public void UnregisterCallback (Android.Media.Session.MediaController.Callback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterCallback(class Android.Media.Session.MediaController/Callback callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unregisterCallback", "(Landroid/media/session/MediaController$Callback;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Media.Session.MediaController+Callback" />
      </Parameters>
      <Docs>
        <param name="callback">The callback to remove.
</param>
        <summary>Unregisters the specified callback.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Unregisters the specified callback. If an update has already been posted
 you may still receive it after calling this method.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/session/MediaController.html#unregisterCallback(android.media.session.MediaController.Callback)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>