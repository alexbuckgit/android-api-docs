<Type Name="PrinterDiscoverySession" FullName="Android.PrintServices.PrinterDiscoverySession">
  <TypeSignature Language="C#" Value="public abstract class PrinterDiscoverySession : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PrinterDiscoverySession extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/printservice/PrinterDiscoverySession", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="19">
    <summary>This class encapsulates the interaction between a print service and the
 system during printer discovery.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">This class encapsulates the interaction between a print service and the
 system during printer discovery. During printer discovery you are responsible
 for adding discovered printers, removing previously added printers that
 disappeared, and updating already added printers.
 </para>
      <para tool="javadoc-to-mdoc">
 During the lifetime of this session you may be asked to start and stop
 performing printer discovery multiple times. You will receive a call to <c><see cref="!:Android.PrintServices.PrinterDiscoverySession.onStartPrinterDiscovery(java.util.List&lt;android.print.PrinterId&gt;)" /></c> to start printer
 discovery and a call to <c><see cref="M:Android.PrintServices.PrinterDiscoverySession.OnStopPrinterDiscovery" /></c>
 to stop printer discovery. When the system is no longer interested in printers
 discovered by this session you will receive a call to <c><see cref="M:Android.PrintServices.PrinterDiscoverySession.OnDestroy" /></c> at
 which point the system will no longer call into the session and all the session
 methods will do nothing.
 </para>
      <para tool="javadoc-to-mdoc">
 Discovered printers are added by invoking <c><see cref="!:Android.PrintServices.PrinterDiscoverySession.addPrinters(java.util.List&lt;android.print.PrinterInfo&gt;)" /></c>. Added printers that disappeared are
 removed by invoking <c><see cref="!:Android.PrintServices.PrinterDiscoverySession.removePrinters(java.util.List&lt;android.print.PrinterId&gt;)" /></c>. Added
 printers whose properties or capabilities changed are updated through a call to
 <c><see cref="!:Android.PrintServices.PrinterDiscoverySession.addPrinters(java.util.List&lt;android.print.PrinterInfo&gt;)" /></c>. The printers added in this
 session can be acquired via <c><see cref="P:Android.PrintServices.PrinterDiscoverySession.Printers" /></c> where the returned printers
 will be an up-to-date snapshot of the printers that you reported during the
 session. Printers are <i>not</i> persisted across sessions.
 </para>
      <para tool="javadoc-to-mdoc">
 The system will make a call to <c><see cref="!:Android.PrintServices.PrinterDiscoverySession.onValidatePrinters(java.util.List&lt;android.print.PrinterId&gt;)" /></c> if you
 need to update some printers. It is possible that you add a printer without
 specifying its capabilities. This enables you to avoid querying all discovered
 printers for their capabilities, rather querying the capabilities of a printer
 only if necessary. For example, the system will request that you update a printer
 if it gets selected by the user. When validating printers you do not need to
 provide the printers' capabilities but may do so.
 </para>
      <para tool="javadoc-to-mdoc">
 If the system is interested in being constantly updated for the state of a
 printer you will receive a call to <c><see cref="M:Android.PrintServices.PrinterDiscoverySession.OnStartPrinterStateTracking(Android.Print.PrinterId)" /></c>
 after which you will have to do a best effort to keep the system updated for
 changes in the printer state and capabilities. You also <i>must</i>
 update the printer capabilities if you did not provide them when adding it, or
 the printer will be ignored. When the system is no longer interested in getting
 updates for a printer you will receive a call to <c><see cref="M:Android.PrintServices.PrinterDiscoverySession.OnStopPrinterStateTracking(Android.Print.PrinterId)" /></c>.
 </para>
      <para tool="javadoc-to-mdoc">
        <i>Note: </i> All callbacks in this class are executed on the main
 application thread. You also have to invoke any method of this class on the main
 application thread.
 </para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/printservice/PrinterDiscoverySession.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrinterDiscoverySession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Constructor.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructor.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/printservice/PrinterDiscoverySession.html#PrinterDiscoverySession()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PrinterDiscoverySession (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPrinters">
      <MemberSignature Language="C#" Value="public void AddPrinters (System.Collections.Generic.IList&lt;Android.Print.PrinterInfo&gt; printers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPrinters(class System.Collections.Generic.IList`1&lt;class Android.Print.PrinterInfo&gt; printers) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addPrinters", "(Ljava/util/List;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printers" Type="System.Collections.Generic.IList&lt;Android.Print.PrinterInfo&gt;" />
      </Parameters>
      <Docs>
        <param name="printers">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDestroyed">
      <MemberSignature Language="C#" Value="public bool IsDestroyed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDestroyed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isDestroyed", "()Z", "GetIsDestroyedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether the session is destroyed.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets whether the session is destroyed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/printservice/PrinterDiscoverySession.html#isDestroyed()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.PrintServices.PrinterDiscoverySession.OnDestroy" />
      </Docs>
      <since version="Added in API level 19" />
    </Member>
    <Member MemberName="IsPrinterDiscoveryStarted">
      <MemberSignature Language="C#" Value="public bool IsPrinterDiscoveryStarted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrinterDiscoveryStarted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isPrinterDiscoveryStarted", "()Z", "GetIsPrinterDiscoveryStartedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether printer discovery is started.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets whether printer discovery is started.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/printservice/PrinterDiscoverySession.html#isPrinterDiscoveryStarted()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.PrintServices.PrinterDiscoverySession.OnStopPrinterDiscovery" />
      </Docs>
    </Member>
    <Member MemberName="OnDestroy">
      <MemberSignature Language="C#" Value="public abstract void OnDestroy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDestroy() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onDestroy", "()V", "GetOnDestroyHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Notifies you that the session is destroyed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Notifies you that the session is destroyed. After this callback is invoked
 any calls to the methods of this class will be ignored, <c><see cref="P:Android.PrintServices.PrinterDiscoverySession.IsDestroyed" /></c>
 will return true and you will also no longer receive callbacks.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/printservice/PrinterDiscoverySession.html#onDestroy()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.PrintServices.PrinterDiscoverySession.IsDestroyed" />
      </Docs>
    </Member>
    <Member MemberName="OnStartPrinterDiscovery">
      <MemberSignature Language="C#" Value="public abstract void OnStartPrinterDiscovery (System.Collections.Generic.IList&lt;Android.Print.PrinterId&gt; priorityList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnStartPrinterDiscovery(class System.Collections.Generic.IList`1&lt;class Android.Print.PrinterId&gt; priorityList) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onStartPrinterDiscovery", "(Ljava/util/List;)V", "GetOnStartPrinterDiscovery_Ljava_util_List_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priorityList" Type="System.Collections.Generic.IList&lt;Android.Print.PrinterId&gt;" />
      </Parameters>
      <Docs>
        <param name="priorityList">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStartPrinterStateTracking">
      <MemberSignature Language="C#" Value="public abstract void OnStartPrinterStateTracking (Android.Print.PrinterId printerId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnStartPrinterStateTracking(class Android.Print.PrinterId printerId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onStartPrinterStateTracking", "(Landroid/print/PrinterId;)V", "GetOnStartPrinterStateTracking_Landroid_print_PrinterId_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printerId" Type="Android.Print.PrinterId" />
      </Parameters>
      <Docs>
        <param name="printerId">The printer to start tracking.</param>
        <summary>Callback asking you to start tracking the state of a printer.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Callback asking you to start tracking the state of a printer. Tracking
 the state means that you should do a best effort to observe the state
 of this printer and notify the system if that state changes via calling
 <c><see cref="!:Android.PrintServices.PrinterDiscoverySession.addPrinters(java.util.List&lt;android.print.PrinterInfo&gt;)" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
            <i>Note: </i> A printer can be initially added without its
 capabilities to avoid polling printers that the user will not select.
 However, after this method is called you are expected to update the
 printer <i>including</i> its capabilities. Otherwise, the
 printer will be ignored.
 </para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
 A scenario when you may be requested to track a printer's state is if
 the user selects that printer and the system has to present print
 options UI based on the printer's capabilities. In this case the user
 should be promptly informed if, for example, the printer becomes
 unavailable.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/printservice/PrinterDiscoverySession.html#onStartPrinterStateTracking(android.print.PrinterId)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.PrintServices.PrinterDiscoverySession.OnStopPrinterStateTracking(Android.Print.PrinterId)" />
      </Docs>
    </Member>
    <Member MemberName="OnStopPrinterDiscovery">
      <MemberSignature Language="C#" Value="public abstract void OnStopPrinterDiscovery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnStopPrinterDiscovery() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onStopPrinterDiscovery", "()V", "GetOnStopPrinterDiscoveryHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Callback notifying you that you should stop printer discovery.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Callback notifying you that you should stop printer discovery.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/printservice/PrinterDiscoverySession.html#onStopPrinterDiscovery()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.PrintServices.PrinterDiscoverySession.IsPrinterDiscoveryStarted" />
      </Docs>
    </Member>
    <Member MemberName="OnStopPrinterStateTracking">
      <MemberSignature Language="C#" Value="public abstract void OnStopPrinterStateTracking (Android.Print.PrinterId printerId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnStopPrinterStateTracking(class Android.Print.PrinterId printerId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onStopPrinterStateTracking", "(Landroid/print/PrinterId;)V", "GetOnStopPrinterStateTracking_Landroid_print_PrinterId_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printerId" Type="Android.Print.PrinterId" />
      </Parameters>
      <Docs>
        <param name="printerId">The printer to stop tracking.</param>
        <summary>Callback asking you to stop tracking the state of a printer.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Callback asking you to stop tracking the state of a printer. The passed
 in printer id is the one for which you received a call to <c><see cref="M:Android.PrintServices.PrinterDiscoverySession.OnStartPrinterStateTracking(Android.Print.PrinterId)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/printservice/PrinterDiscoverySession.html#onStopPrinterStateTracking(android.print.PrinterId)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.PrintServices.PrinterDiscoverySession.OnStartPrinterStateTracking(Android.Print.PrinterId)" />
      </Docs>
    </Member>
    <Member MemberName="OnValidatePrinters">
      <MemberSignature Language="C#" Value="public abstract void OnValidatePrinters (System.Collections.Generic.IList&lt;Android.Print.PrinterId&gt; printerIds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnValidatePrinters(class System.Collections.Generic.IList`1&lt;class Android.Print.PrinterId&gt; printerIds) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onValidatePrinters", "(Ljava/util/List;)V", "GetOnValidatePrinters_Ljava_util_List_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printerIds" Type="System.Collections.Generic.IList&lt;Android.Print.PrinterId&gt;" />
      </Parameters>
      <Docs>
        <param name="printerIds">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Printers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Android.Print.PrinterInfo&gt; Printers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Print.PrinterInfo&gt; Printers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPrinters", "()Ljava/util/List;", "GetGetPrintersHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Print.PrinterInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the printers reported in this session.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the printers reported in this session. For example, if you add two
 printers and remove one of them, the returned list will contain only
 the printer that was added but not removed.
 </para>
          <para tool="javadoc-to-mdoc">
            <i>Note: </i> Calls to this method after the session is
 destroyed, that is after the <c><see cref="M:Android.PrintServices.PrinterDiscoverySession.OnDestroy" /></c> callback, will be ignored.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/printservice/PrinterDiscoverySession.html#getPrinters()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.PrintServices.PrinterDiscoverySession.IsDestroyed" />
      </Docs>
    </Member>
    <Member MemberName="RemovePrinters">
      <MemberSignature Language="C#" Value="public void RemovePrinters (System.Collections.Generic.IList&lt;Android.Print.PrinterId&gt; printerIds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemovePrinters(class System.Collections.Generic.IList`1&lt;class Android.Print.PrinterId&gt; printerIds) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removePrinters", "(Ljava/util/List;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="printerIds" Type="System.Collections.Generic.IList&lt;Android.Print.PrinterId&gt;" />
      </Parameters>
      <Docs>
        <param name="printerIds">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackedPrinters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Android.Print.PrinterId&gt; TrackedPrinters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Print.PrinterId&gt; TrackedPrinters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTrackedPrinters", "()Ljava/util/List;", "GetGetTrackedPrintersHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Print.PrinterId&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the printers that should be tracked.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the printers that should be tracked. These are printers that are
 important to the user and for which you received a call to <c><see cref="M:Android.PrintServices.PrinterDiscoverySession.OnStartPrinterStateTracking(Android.Print.PrinterId)" /></c> asking you to observer their
 state and reporting it to the system via <c><see cref="!:Android.PrintServices.PrinterDiscoverySession.addPrinters(java.util.List&lt;android.print.PrinterInfo&gt;)" /></c>.
 You will receive a call to <c><see cref="M:Android.PrintServices.PrinterDiscoverySession.OnStopPrinterStateTracking(Android.Print.PrinterId)" /></c>
 if you should stop tracking a printer.
 </para>
          <para tool="javadoc-to-mdoc">
            <i>Note: </i> Calls to this method after the session is
 destroyed, that is after the <c><see cref="M:Android.PrintServices.PrinterDiscoverySession.OnDestroy" /></c> callback, will be ignored.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/printservice/PrinterDiscoverySession.html#getTrackedPrinters()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.PrintServices.PrinterDiscoverySession.OnStartPrinterStateTracking(Android.Print.PrinterId)" />
        <altmember cref="M:Android.PrintServices.PrinterDiscoverySession.OnStopPrinterStateTracking(Android.Print.PrinterId)" />
        <altmember cref="P:Android.PrintServices.PrinterDiscoverySession.IsDestroyed" />
      </Docs>
    </Member>
  </Members>
</Type>