<Type Name="AbstractInterruptibleChannel" FullName="Java.Nio.Channels.Spi.AbstractInterruptibleChannel">
  <TypeSignature Language="C#" Value="public abstract class AbstractInterruptibleChannel : Java.Lang.Object, IDisposable, Java.Nio.Channels.IInterruptibleChannel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AbstractInterruptibleChannel extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.IO.ICloseable, class Java.Nio.Channels.IChannel, class Java.Nio.Channels.IInterruptibleChannel, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Nio.Channels.Spi.AbstractInterruptibleChannel" />
  <TypeSignature Language="F#" Value="type AbstractInterruptibleChannel = class&#xA;    inherit Object&#xA;    interface IChannel&#xA;    interface ICloseable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IInterruptibleChannel" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.IO.ICloseable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Nio.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Nio.Channels.IInterruptibleChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/nio/channels/spi/AbstractInterruptibleChannel", ApiSince=1, DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>
      <c>AbstractInterruptibleChannel</c> is the root class for interruptible
 channels.</summary>
    <remarks />
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AbstractInterruptibleChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Spi.AbstractInterruptibleChannel.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AbstractInterruptibleChannel (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Spi.AbstractInterruptibleChannel.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Nio.Channels.Spi.AbstractInterruptibleChannel : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Nio.Channels.Spi.AbstractInterruptibleChannel" Usage="new Java.Nio.Channels.Spi.AbstractInterruptibleChannel (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="protected void Begin ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Begin() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Spi.AbstractInterruptibleChannel.Begin" />
      <MemberSignature Language="F#" Value="member this.Begin : unit -&gt; unit" Usage="abstractInterruptibleChannel.Begin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("begin", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indicates the beginning of a code section that includes an I/O operation
 that is potentially blocking.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Spi.AbstractInterruptibleChannel.Close" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="abstractInterruptibleChannel.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Nio.Channels.IChannel.Close</InterfaceMember>
        <InterfaceMember>M:Java.Nio.Channels.IInterruptibleChannel.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("close", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes an open channel.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if a problem occurs while closing this channel.</exception>
        <altmember cref="M:Java.Nio.Channels.IChannel.Close" />
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="protected void End (bool completed);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void End(bool completed) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Spi.AbstractInterruptibleChannel.End(System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.End : bool -&gt; unit" Usage="abstractInterruptibleChannel.End completed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("end", "(Z)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="completed">To be added.</param>
        <summary>Indicates the end of a code section that has been started with
 <c>begin()</c> and that includes a potentially blocking I/O operation.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.Channels.AsynchronousCloseException">if this channel is closed by another thread while this method
             is executing.</exception>
        <exception cref="T:Java.Nio.Channels.ClosedByInterruptException">if another thread interrupts the calling thread while this
             method is executing.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ImplCloseChannel">
      <MemberSignature Language="C#" Value="protected abstract void ImplCloseChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ImplCloseChannel() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Channels.Spi.AbstractInterruptibleChannel.ImplCloseChannel" />
      <MemberSignature Language="F#" Value="abstract member ImplCloseChannel : unit -&gt; unit" Usage="abstractInterruptibleChannel.ImplCloseChannel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("implCloseChannel", "()V", "GetImplCloseChannelHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Implements the channel closing behavior.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if a problem occurs while closing the channel.
</exception>
      </Docs>
    </Member>
    <Member MemberName="IsOpen">
      <MemberSignature Language="C#" Value="public bool IsOpen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOpen" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Channels.Spi.AbstractInterruptibleChannel.IsOpen" />
      <MemberSignature Language="F#" Value="member this.IsOpen : bool" Usage="Java.Nio.Channels.Spi.AbstractInterruptibleChannel.IsOpen" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Nio.Channels.IChannel.IsOpen</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isOpen", "()Z", "GetIsOpenHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this channel is open.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Channels.Spi.AbstractInterruptibleChannel.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Nio.Channels.Spi.AbstractInterruptibleChannel.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Channels.Spi.AbstractInterruptibleChannel.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Nio.Channels.Spi.AbstractInterruptibleChannel.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Channels.Spi.AbstractInterruptibleChannel.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Nio.Channels.Spi.AbstractInterruptibleChannel.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
