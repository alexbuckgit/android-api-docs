<Type Name="AbstractSelectableChannel" FullName="Java.Nio.Channels.Spi.AbstractSelectableChannel">
  <TypeSignature Language="C#" Value="public abstract class AbstractSelectableChannel : Java.Nio.Channels.SelectableChannel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AbstractSelectableChannel extends Java.Nio.Channels.SelectableChannel" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Nio.Channels.SelectableChannel</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/nio/channels/spi/AbstractSelectableChannel", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>
      <c>AbstractSelectableChannel</c> is the base implementation class for
 selectable channels.</summary>
    <remarks />
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AbstractSelectableChannel (Java.Nio.Channels.Spi.SelectorProvider selectorProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Java.Nio.Channels.Spi.SelectorProvider selectorProvider) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/nio/channels/spi/SelectorProvider;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="selectorProvider" Type="Java.Nio.Channels.Spi.SelectorProvider" />
      </Parameters>
      <Docs>
        <param name="selectorProvider">To be added.</param>
        <summary>Constructs a new <c>AbstractSelectableChannel</c>.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AbstractSelectableChannel (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="BlockingLock">
      <MemberSignature Language="C#" Value="public override sealed Java.Lang.Object BlockingLock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Lang.Object BlockingLock() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("blockingLock", "()Ljava/lang/Object;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the object used for the synchronization of <c>register</c> and
 <c>configureBlocking</c>.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ConfigureBlocking">
      <MemberSignature Language="C#" Value="public override sealed Java.Nio.Channels.SelectableChannel ConfigureBlocking (bool blockingMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Nio.Channels.SelectableChannel ConfigureBlocking(bool blockingMode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("configureBlocking", "(Z)Ljava/nio/channels/SelectableChannel;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.SelectableChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockingMode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="blockingMode">
          <c>true</c> for setting this channel's mode to blocking,
            <c>false</c> to set it to non-blocking.</param>
        <summary>Sets the blocking mode of this channel.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.Channels.ClosedChannelException">if this channel is closed.</exception>
        <exception cref="T:Java.Nio.Channels.IllegalBlockingModeException">if <c>block</c> is <c>true</c> and this channel has been
             registered with at least one selector.</exception>
        <exception cref="T:Java.IO.IOException">if an I/O error occurs.
</exception>
        <altmember cref="M:Java.Nio.Channels.SelectableChannel.ConfigureBlocking(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="ImplCloseChannel">
      <MemberSignature Language="C#" Value="protected override sealed void ImplCloseChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ImplCloseChannel() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("implCloseChannel", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Implements the channel closing behavior.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if a problem occurs while closing the channel.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ImplCloseSelectableChannel">
      <MemberSignature Language="C#" Value="protected abstract void ImplCloseSelectableChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ImplCloseSelectableChannel() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("implCloseSelectableChannel", "()V", "GetImplCloseSelectableChannelHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Implements the closing function of the SelectableChannel.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O exception occurs.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ImplConfigureBlocking">
      <MemberSignature Language="C#" Value="protected abstract void ImplConfigureBlocking (bool blocking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ImplConfigureBlocking(bool blocking) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("implConfigureBlocking", "(Z)V", "GetImplConfigureBlocking_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockingMode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="blocking">true for blocking, false for non-blocking.</param>
        <summary>Implements the configuration of blocking/non-blocking mode.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs.
</exception>
      </Docs>
    </Member>
    <Member MemberName="IsBlocking">
      <MemberSignature Language="C#" Value="public override bool IsBlocking { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBlocking" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isBlocking", "()Z", "GetIsBlockingHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this channel is in blocking mode.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsRegistered">
      <MemberSignature Language="C#" Value="public override bool IsRegistered { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRegistered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isRegistered", "()Z", "GetIsRegisteredHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this channel is registered with one or more selectors.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="KeyFor">
      <MemberSignature Language="C#" Value="public override sealed Java.Nio.Channels.SelectionKey KeyFor (Java.Nio.Channels.Selector selector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Nio.Channels.SelectionKey KeyFor(class Java.Nio.Channels.Selector selector) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("keyFor", "(Ljava/nio/channels/Selector;)Ljava/nio/channels/SelectionKey;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.SelectionKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selector" Type="Java.Nio.Channels.Selector" />
      </Parameters>
      <Docs>
        <param name="selector">the selector with which this channel has been registered.</param>
        <summary>Gets this channel's selection key for the specified selector.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public override sealed Java.Nio.Channels.Spi.SelectorProvider Provider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Nio.Channels.Spi.SelectorProvider Provider() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("provider", "()Ljava/nio/channels/spi/SelectorProvider;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.Spi.SelectorProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the selector provider that has created this channel.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Nio.Channels.SelectableChannel.Provider" />
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public override sealed Java.Nio.Channels.SelectionKey Register (Java.Nio.Channels.Selector selector, Java.Nio.Channels.Operations interestSet, Java.Lang.Object attachment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Nio.Channels.SelectionKey Register(class Java.Nio.Channels.Selector selector, valuetype Java.Nio.Channels.Operations interestSet, class Java.Lang.Object attachment) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("register", "(Ljava/nio/channels/Selector;ILjava/lang/Object;)Ljava/nio/channels/SelectionKey;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.SelectionKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selector" Type="Java.Nio.Channels.Selector" />
        <Parameter Name="interestSet" Type="Java.Nio.Channels.Operations">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="attachment" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="selector">the selector with which to register this channel.</param>
        <param name="interestSet">this channel's <c><see cref="T:Java.Nio.Channels.SelectionKey" /></c>.</param>
        <param name="attachment">the object to attach, can be <c>null</c>.</param>
        <summary>Registers this channel with the specified selector for the specified
 interest set.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.Channels.CancelledKeyException">if this channel is registered but its key has been canceled.</exception>
        <exception cref="T:Java.Nio.Channels.ClosedChannelException">if this channel is closed.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>interestSet</c> is not supported by this channel.</exception>
        <exception cref="T:Java.Nio.Channels.IllegalBlockingModeException">if this channel is in blocking mode.</exception>
        <exception cref="T:Java.Nio.Channels.IllegalSelectorException">if this channel does not have the same provider as the given
             selector.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
