<Type Name="AbstractSelectableChannel" FullName="Java.Nio.Channels.Spi.AbstractSelectableChannel">
  <TypeSignature Language="C#" Value="public abstract class AbstractSelectableChannel : Java.Nio.Channels.SelectableChannel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AbstractSelectableChannel extends Java.Nio.Channels.SelectableChannel" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Nio.Channels.SelectableChannel</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/nio/channels/spi/AbstractSelectableChannel", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><c>AbstractSelectableChannel</c> is the base implementation class for
 selectable channels.</summary>
    <remarks><para tool="javadoc-to-mdoc"><c>AbstractSelectableChannel</c> is the base implementation class for
 selectable channels. It declares methods for registering, unregistering and
 closing selectable channels. It is thread-safe.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/nio/channels/spi/AbstractSelectableChannel.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AbstractSelectableChannel (Java.Nio.Channels.Spi.SelectorProvider selectorProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Java.Nio.Channels.Spi.SelectorProvider selectorProvider) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/nio/channels/spi/SelectorProvider;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="selectorProvider" Type="Java.Nio.Channels.Spi.SelectorProvider" />
      </Parameters>
      <Docs>
        <param name="selectorProvider">To be added.</param>
        <summary>Constructs a new <c>AbstractSelectableChannel</c>.</summary>
        <remarks><para tool="javadoc-to-mdoc">Constructs a new <c>AbstractSelectableChannel</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/nio/channels/spi/AbstractSelectableChannel.html#AbstractSelectableChannel(java.nio.channels.spi.SelectorProvider)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AbstractSelectableChannel (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BlockingLock">
      <MemberSignature Language="C#" Value="public override sealed Java.Lang.Object BlockingLock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Lang.Object BlockingLock() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("blockingLock", "()Ljava/lang/Object;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the object used for the synchronization of <c>register</c> and
 <c>configureBlocking</c>.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Gets the object used for the synchronization of <c>register</c> and
 <c>configureBlocking</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/nio/channels/spi/AbstractSelectableChannel.html#blockingLock()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ConfigureBlocking">
      <MemberSignature Language="C#" Value="public override sealed Java.Nio.Channels.SelectableChannel ConfigureBlocking (bool blockingMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Nio.Channels.SelectableChannel ConfigureBlocking(bool blockingMode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("configureBlocking", "(Z)Ljava/nio/channels/SelectableChannel;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.SelectableChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockingMode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="blockingMode"><c>true</c> for setting this channel's mode to blocking,
            <c>false</c> to set it to non-blocking.</param>
        <summary>Sets the blocking mode of this channel.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Sets the blocking mode of this channel. A call to this method blocks if
 other calls to this method or to <c>register</c> are executing. The
 actual setting of the mode is done by calling
 <c>implConfigureBlocking(boolean)</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/nio/channels/spi/AbstractSelectableChannel.html#configureBlocking(boolean)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.Channels.ClosedChannelException">if this channel is closed.</exception>
        <exception cref="T:Java.Nio.Channels.IllegalBlockingModeException">if <c>block</c> is <c>true</c> and this channel has been
             registered with at least one selector.</exception>
        <exception cref="T:Java.IO.IOException">if an I/O error occurs.
</exception>
        <altmember cref="M:Java.Nio.Channels.SelectableChannel.ConfigureBlocking(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="ImplCloseChannel">
      <MemberSignature Language="C#" Value="protected override sealed void ImplCloseChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ImplCloseChannel() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("implCloseChannel", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Implements the channel closing behavior.</summary>
        <remarks><para tool="javadoc-to-mdoc">Implements the channel closing behavior. Calls
 <c>implCloseSelectableChannel()</c> first, then loops through the list
 of selection keys and cancels them, which unregisters this channel from
 all selectors it is registered with.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/nio/channels/spi/AbstractSelectableChannel.html#implCloseChannel()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if a problem occurs while closing the channel.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ImplCloseSelectableChannel">
      <MemberSignature Language="C#" Value="protected abstract void ImplCloseSelectableChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ImplCloseSelectableChannel() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("implCloseSelectableChannel", "()V", "GetImplCloseSelectableChannelHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Implements the closing function of the SelectableChannel.</summary>
        <remarks><para tool="javadoc-to-mdoc">Implements the closing function of the SelectableChannel. This method is
 called from <c>implCloseChannel()</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/nio/channels/spi/AbstractSelectableChannel.html#implCloseSelectableChannel()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O exception occurs.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ImplConfigureBlocking">
      <MemberSignature Language="C#" Value="protected abstract void ImplConfigureBlocking (bool blockingMode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ImplConfigureBlocking(bool blockingMode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("implConfigureBlocking", "(Z)V", "GetImplConfigureBlocking_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockingMode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="blockingMode">To be added.</param>
        <summary>Implements the configuration of blocking/non-blocking mode.</summary>
        <remarks><para tool="javadoc-to-mdoc">Implements the configuration of blocking/non-blocking mode.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/nio/channels/spi/AbstractSelectableChannel.html#implConfigureBlocking(boolean)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs.
</exception>
      </Docs>
    </Member>
    <Member MemberName="IsBlocking">
      <MemberSignature Language="C#" Value="public override bool IsBlocking { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBlocking" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isBlocking", "()Z", "GetIsBlockingHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this channel is in blocking mode.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Indicates whether this channel is in blocking mode.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/nio/channels/spi/AbstractSelectableChannel.html#isBlocking()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsRegistered">
      <MemberSignature Language="C#" Value="public override bool IsRegistered { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRegistered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isRegistered", "()Z", "GetIsRegisteredHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this channel is registered with one or more selectors.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Indicates whether this channel is registered with one or more selectors.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/nio/channels/spi/AbstractSelectableChannel.html#isRegistered()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="KeyFor">
      <MemberSignature Language="C#" Value="public override sealed Java.Nio.Channels.SelectionKey KeyFor (Java.Nio.Channels.Selector selector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Nio.Channels.SelectionKey KeyFor(class Java.Nio.Channels.Selector selector) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("keyFor", "(Ljava/nio/channels/Selector;)Ljava/nio/channels/SelectionKey;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.SelectionKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selector" Type="Java.Nio.Channels.Selector" />
      </Parameters>
      <Docs>
        <param name="selector">the selector with which this channel has been registered.</param>
        <summary>Gets this channel's selection key for the specified selector.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Gets this channel's selection key for the specified selector.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/nio/channels/spi/AbstractSelectableChannel.html#keyFor(java.nio.channels.Selector)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public override sealed Java.Nio.Channels.Spi.SelectorProvider Provider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Nio.Channels.Spi.SelectorProvider Provider() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("provider", "()Ljava/nio/channels/spi/SelectorProvider;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.Spi.SelectorProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the selector provider that has created this channel.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns the selector provider that has created this channel.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/nio/channels/spi/AbstractSelectableChannel.html#provider()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Nio.Channels.SelectableChannel.Provider" />
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public override sealed Java.Nio.Channels.SelectionKey Register (Java.Nio.Channels.Selector selector, Java.Nio.Channels.Operations interestSet, Java.Lang.Object attachment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Nio.Channels.SelectionKey Register(class Java.Nio.Channels.Selector selector, valuetype Java.Nio.Channels.Operations interestSet, class Java.Lang.Object attachment) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("register", "(Ljava/nio/channels/Selector;ILjava/lang/Object;)Ljava/nio/channels/SelectionKey;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.SelectionKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selector" Type="Java.Nio.Channels.Selector" />
        <Parameter Name="interestSet" Type="Java.Nio.Channels.Operations">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="attachment" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="selector">the selector with which to register this channel.</param>
        <param name="interestSet">this channel's <c><see cref="T:Java.Nio.Channels.SelectionKey" /></c>.</param>
        <param name="attachment">the object to attach, can be <c>null</c>.</param>
        <summary>Registers this channel with the specified selector for the specified
 interest set.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Registers this channel with the specified selector for the specified
 interest set. If the channel is already registered with the selector, the
 <c><see cref="T:Java.Nio.Channels.SelectionKey" /></c> is updated to <c>interestSet</c> and
 the corresponding selection key is returned. If the channel is not yet
 registered, this method calls the <c>register</c> method of
 <c>selector</c> and adds the selection key to this channel's key set.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/nio/channels/spi/AbstractSelectableChannel.html#register(java.nio.channels.Selector, int, java.lang.Object)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.Channels.CancelledKeyException">if this channel is registered but its key has been canceled.</exception>
        <exception cref="T:Java.Nio.Channels.ClosedChannelException">if this channel is closed.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>interestSet</c> is not supported by this channel.</exception>
        <exception cref="T:Java.Nio.Channels.IllegalBlockingModeException">if this channel is in blocking mode.</exception>
        <exception cref="T:Java.Nio.Channels.IllegalSelectorException">if this channel does not have the same provider as the given
             selector.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
