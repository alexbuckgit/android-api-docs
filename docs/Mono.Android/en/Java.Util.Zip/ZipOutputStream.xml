<Type Name="ZipOutputStream" FullName="Java.Util.Zip.ZipOutputStream">
  <TypeSignature Language="C#" Value="public class ZipOutputStream : Java.Util.Zip.DeflaterOutputStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ZipOutputStream extends Java.Util.Zip.DeflaterOutputStream" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Util.Zip.DeflaterOutputStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/util/zip/ZipOutputStream", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Used to write (compress) data into zip files.</summary>
    <remarks><para tool="javadoc-to-mdoc">Used to write (compress) data into zip files.

 </para><para tool="javadoc-to-mdoc"><c>ZipOutputStream</c> is used to write <c><see cref="T:Java.Util.Zip.ZipEntry" /></c>s to the underlying
 stream. Output from <c>ZipOutputStream</c> can be read using <c><see cref="T:Java.Util.Zip.ZipFile" /></c>
 or <c><see cref="T:Java.Util.Zip.ZipInputStream" /></c>.

 </para><para tool="javadoc-to-mdoc">While <c>DeflaterOutputStream</c> can write compressed zip file
 entries, this extension can write uncompressed entries as well.
 Use <c><see cref="P:Java.Util.Zip.ZipEntry.Method" /></c> or <c><see cref="M:Java.Util.Zip.ZipOutputStream.SetMethod(System.Int32)" /></c> with the <c><see cref="F:Java.Util.Zip.ZipEntry.Stored" /></c> flag.

 <format type="text/html"><h3>Example</h3></format></para><para tool="javadoc-to-mdoc">Using <c>ZipOutputStream</c> is a little more complicated than <c><see cref="T:Java.Util.Zip.GZIPOutputStream" /></c>
 because zip files are containers that can contain multiple files. This code creates a zip
 file containing several files, similar to the <c>zip(1)</c> utility.
 <example><code lang="java">
 OutputStream os = ...
 ZipOutputStream zos = new ZipOutputStream(new BufferedOutputStream(os));
 try {
     for (int i = 0; i </code></example></para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/zip/ZipOutputStream.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZipOutputStream (System.IO.Stream os);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream os) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/OutputStream;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="p1" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="os">To be added.</param>
        <summary>Constructs a new <c>ZipOutputStream</c> that writes a zip file to the given
 <c>OutputStream</c>.</summary>
        <remarks><para tool="javadoc-to-mdoc">Constructs a new <c>ZipOutputStream</c> that writes a zip file to the given
 <c>OutputStream</c>.

 </para><para tool="javadoc-to-mdoc">UTF-8 will be used to encode the file comment, entry names and comments.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/zip/ZipOutputStream.html#ZipOutputStream(java.io.OutputStream)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ZipOutputStream (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZipOutputStream (System.IO.Stream p0, Java.Nio.Charset.Charset p1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream p0, class Java.Nio.Charset.Charset p1) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="p0" Type="System.IO.Stream" />
        <Parameter Name="p1" Type="Java.Nio.Charset.Charset" />
      </Parameters>
      <Docs>
        <param name="p0">To be added.</param>
        <param name="p1">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseEntry">
      <MemberSignature Language="C#" Value="public virtual void CloseEntry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseEntry() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("closeEntry", "()V", "GetCloseEntryHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes the current <c>ZipEntry</c>.</summary>
        <remarks><para tool="javadoc-to-mdoc">Closes the current <c>ZipEntry</c>. Any entry terminal data is written
 to the underlying stream.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/zip/ZipOutputStream.html#closeEntry()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">If an error occurs closing the entry.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Deflated">
      <MemberSignature Language="C#" Value="public const int Deflated = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 Deflated = (8)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DEFLATED")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>Indicates deflated entries.</summary>
        <remarks><para tool="javadoc-to-mdoc">Indicates deflated entries.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/zip/ZipOutputStream.html#DEFLATED" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PutNextEntry">
      <MemberSignature Language="C#" Value="public virtual void PutNextEntry (Java.Util.Zip.ZipEntry ze);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PutNextEntry(class Java.Util.Zip.ZipEntry ze) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("putNextEntry", "(Ljava/util/zip/ZipEntry;)V", "GetPutNextEntry_Ljava_util_zip_ZipEntry_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ze" Type="Java.Util.Zip.ZipEntry" />
      </Parameters>
      <Docs>
        <param name="ze">the <c>ZipEntry</c> to store.</param>
        <summary>Writes entry information to the underlying stream.</summary>
        <remarks><para tool="javadoc-to-mdoc">Writes entry information to the underlying stream. Data associated with
 the entry can then be written using <c>write()</c>. After data is
 written <c>closeEntry()</c> must be called to complete the writing of
 the entry to the underlying stream.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/zip/ZipOutputStream.html#putNextEntry(java.util.zip.ZipEntry)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">If an error occurs storing the entry.</exception>
        <altmember cref="M:Java.IO.OutputStream.Write(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="PutNextEntryAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task PutNextEntryAsync (Java.Util.Zip.ZipEntry ze);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task PutNextEntryAsync(class Java.Util.Zip.ZipEntry ze) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ze" Type="Java.Util.Zip.ZipEntry" />
      </Parameters>
      <Docs>
        <param name="ze">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetComment">
      <MemberSignature Language="C#" Value="public virtual void SetComment (string comment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetComment(string comment) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setComment", "(Ljava/lang/String;)V", "GetSetComment_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comment" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="comment">To be added.</param>
        <summary>Sets the comment associated with the file being written.</summary>
        <remarks><para tool="javadoc-to-mdoc">Sets the comment associated with the file being written. See <c><see cref="P:Java.Util.Zip.ZipFile.Comment" /></c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/zip/ZipOutputStream.html#setComment(java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the comment is &gt;= 64 Ki encoded bytes.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetLevel">
      <MemberSignature Language="C#" Value="public virtual void SetLevel (int level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLevel(int32 level) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLevel", "(I)V", "GetSetLevel_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="level">To be added.</param>
        <summary>Sets the  to be used
 for writing entry data.</summary>
        <remarks><para tool="javadoc-to-mdoc">Sets the  to be used
 for writing entry data.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/zip/ZipOutputStream.html#setLevel(int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetMethod">
      <MemberSignature Language="C#" Value="public virtual void SetMethod (int method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMethod(int32 method) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setMethod", "(I)V", "GetSetMethod_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="method">To be added.</param>
        <summary>Sets the default compression method to be used when a <c>ZipEntry</c> doesn't
 explicitly specify a method.</summary>
        <remarks><para tool="javadoc-to-mdoc">Sets the default compression method to be used when a <c>ZipEntry</c> doesn't
 explicitly specify a method. See <c><see cref="P:Java.Util.Zip.ZipEntry.Method" /></c> for more details.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/zip/ZipOutputStream.html#setMethod(int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Stored">
      <MemberSignature Language="C#" Value="public const int Stored = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 Stored = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("STORED")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Indicates uncompressed entries.</summary>
        <remarks><para tool="javadoc-to-mdoc">Indicates uncompressed entries.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/zip/ZipOutputStream.html#STORED" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
