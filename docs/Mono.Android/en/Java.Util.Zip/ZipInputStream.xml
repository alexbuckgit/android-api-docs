<Type Name="ZipInputStream" FullName="Java.Util.Zip.ZipInputStream">
  <TypeSignature Language="C#" Value="public class ZipInputStream : Java.Util.Zip.InflaterInputStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ZipInputStream extends Java.Util.Zip.InflaterInputStream" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Util.Zip.InflaterInputStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/util/zip/ZipInputStream", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Used to read (decompress) the data from zip files.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Used to read (decompress) the data from zip files.

 </para>
      <para tool="javadoc-to-mdoc">A zip file (or "archive") is a collection of (possibly) compressed files.
 When reading from a <c>ZipInputStream</c>, you call <c><see cref="P:Java.Util.Zip.ZipInputStream.NextEntry" /></c>
 which returns a <c><see cref="T:Java.Util.Zip.ZipEntry" /></c> of metadata corresponding to the userdata that follows.
 When you appear to have hit the end of this stream (which is really just the end of the current
 entry's userdata), call <c>getNextEntry</c> again. When it returns null,
 there are no more entries in the input file.

 </para>
      <para tool="javadoc-to-mdoc">Although <c>InflaterInputStream</c> can only read compressed zip
 entries, this class can read non-compressed entries as well.

 </para>
      <para tool="javadoc-to-mdoc">Use <c><see cref="T:Java.Util.Zip.ZipFile" /></c> if you need random access to entries by name, but use this class
 if you just want to iterate over all entries.

 <format type="text/html"><h3>Example</h3></format></para>
      <para tool="javadoc-to-mdoc">Using <c>ZipInputStream</c> is a little more complicated than <c><see cref="T:Java.Util.Zip.GZIPInputStream" /></c>
 because zip files are containers that can contain multiple files. This code pulls all the
 files out of a zip file, similar to the <c>unzip(1)</c> utility.
 <example><code lang="java">
 InputStream is = ...
 ZipInputStream zis = new ZipInputStream(new BufferedInputStream(is));
 try {
     ZipEntry ze;
     while ((ze = zis.getNextEntry()) != null) {
         ByteArrayOutputStream baos = new ByteArrayOutputStream();
         byte[] buffer = new byte[1024];
         int count;
         while ((count = zis.read(buffer)) != -1) {
             baos.write(buffer, 0, count);
         }
         String filename = ze.getName();
         byte[] bytes = baos.toByteArray();
         // do something with 'filename' and 'bytes'...
     }
 } finally {
     zis.close();
 }
 </code></example></para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/java/util/zip/ZipInputStream.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZipInputStream (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/InputStream;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">To be added.</param>
        <summary>Constructs a new <c>ZipInputStream</c> to read zip entries from the given input stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>ZipInputStream</c> to read zip entries from the given input stream.

 </para>
          <para tool="javadoc-to-mdoc">UTF-8 is used to decode all strings in the file.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/zip/ZipInputStream.html#ZipInputStream(java.io.InputStream)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ZipInputStream (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZipInputStream (System.IO.Stream p0, Java.Nio.Charset.Charset p1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream p0, class Java.Nio.Charset.Charset p1) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="p0" Type="System.IO.Stream" />
        <Parameter Name="p1" Type="Java.Nio.Charset.Charset" />
      </Parameters>
      <Docs>
        <param name="p0">To be added.</param>
        <param name="p1">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseEntry">
      <MemberSignature Language="C#" Value="public virtual void CloseEntry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseEntry() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("closeEntry", "()V", "GetCloseEntryHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes the current zip entry and prepares to read the next entry.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Closes the current zip entry and prepares to read the next entry.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/zip/ZipInputStream.html#closeEntry()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an <c>IOException</c> occurs.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateZipEntry">
      <MemberSignature Language="C#" Value="protected virtual Java.Util.Zip.ZipEntry CreateZipEntry (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Util.Zip.ZipEntry CreateZipEntry(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createZipEntry", "(Ljava/lang/String;)Ljava/util/zip/ZipEntry;", "GetCreateZipEntry_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Zip.ZipEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">the name of the entry.</param>
        <summary>creates a <c><see cref="T:Java.Util.Zip.ZipEntry" /></c> with the given name.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">creates a <c><see cref="T:Java.Util.Zip.ZipEntry" /></c> with the given name.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/zip/ZipInputStream.html#createZipEntry(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NextEntry">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Zip.ZipEntry NextEntry { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.Zip.ZipEntry NextEntry" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getNextEntry", "()Ljava/util/zip/ZipEntry;", "GetGetNextEntryHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Zip.ZipEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the next entry from this <c>ZipInputStream</c> or <c>null</c> if
 no more entries are present.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the next entry from this <c>ZipInputStream</c> or <c>null</c> if
 no more entries are present.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/zip/ZipInputStream.html#getNextEntry()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an <c>IOException</c> occurs.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>