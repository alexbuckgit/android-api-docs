<Type Name="Inflater" FullName="Java.Util.Zip.Inflater">
  <TypeSignature Language="C#" Value="public class Inflater : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Inflater extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/util/zip/Inflater", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This class decompresses data that was compressed using the <format type="text/html"><i>DEFLATE</i></format>
 algorithm (see ).</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">This class decompresses data that was compressed using the <format type="text/html"><i>DEFLATE</i></format>
 algorithm (see ).

 </para>
      <para tool="javadoc-to-mdoc">It is usually more convenient to use <c><see cref="T:Java.Util.Zip.InflaterInputStream" /></c>.

 </para>
      <para tool="javadoc-to-mdoc">To decompress an in-memory <c>byte[]</c> to another in-memory <c>byte[]</c> manually:
 <example><code lang="java">
     byte[] compressedBytes = ...
     int decompressedByteCount = ... // From your format's metadata.
     Inflater inflater = new Inflater();
     inflater.setInput(compressedBytes, 0, compressedBytes.length);
     byte[] decompressedBytes = new byte[decompressedByteCount];
     if (inflater.inflate(decompressedBytes) != decompressedByteCount) {
         throw new AssertionError();
     }
     inflater.end();
 </code></example></para>
      <para tool="javadoc-to-mdoc">In situations where you don't have all the input in one array (or have so much
 input that you want to feed it to the inflater in chunks), it's possible to call
 <c><see cref="M:Java.Util.Zip.Inflater.SetInput(System.Byte[])" /></c> repeatedly, but you're much better off using <c><see cref="T:Java.Util.Zip.InflaterInputStream" /></c>
 to handle all this for you.

 </para>
      <para tool="javadoc-to-mdoc">If you don't know how big the decompressed data will be, you can call <c><see cref="M:Java.Util.Zip.Inflater.Inflate(System.Byte[])" /></c>
 repeatedly on a temporary buffer, copying the bytes to a <c><see cref="T:Java.IO.ByteArrayOutputStream" /></c>,
 but this is probably another sign you'd be better off using <c><see cref="T:Java.Util.Zip.InflaterInputStream" /></c>.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/java/util/zip/Inflater.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Inflater ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>This constructor creates an inflater that expects a header from the input
 stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor creates an inflater that expects a header from the input
 stream. Use <c><see cref="C:Java.Util.Zip.Inflater(System.Boolean)" /></c> if the input comes without a ZLIB
 header.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/zip/Inflater.html#Inflater()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Inflater (bool noHeader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool noHeader) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Z)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="noHeader" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="noHeader">To be added.</param>
        <summary>This constructor allows to create an inflater that expects no header from
 the input stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor allows to create an inflater that expects no header from
 the input stream.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/zip/Inflater.html#Inflater(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Inflater (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Adler">
      <MemberSignature Language="C#" Value="public virtual int Adler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Adler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAdler", "()I", "GetGetAdlerHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the <c><see cref="T:Java.Util.Zip.Adler32" /></c> checksum of the bytes inflated so far, or the
 checksum of the preset dictionary if <c><see cref="M:Java.Util.Zip.Inflater.NeedsDictionary" /></c> returns true.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the <c><see cref="T:Java.Util.Zip.Adler32" /></c> checksum of the bytes inflated so far, or the
 checksum of the preset dictionary if <c><see cref="M:Java.Util.Zip.Inflater.NeedsDictionary" /></c> returns true.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/zip/Inflater.html#getAdler()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BytesRead">
      <MemberSignature Language="C#" Value="public virtual long BytesRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 BytesRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getBytesRead", "()J", "GetGetBytesReadHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the total number of bytes read by the <c>Inflater</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the total number of bytes read by the <c>Inflater</c>. This
 method is the same as <c><see cref="P:Java.Util.Zip.Inflater.TotalIn" /></c> except that it returns a
 <c>long</c> value instead of an integer.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/zip/Inflater.html#getBytesRead()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BytesWritten">
      <MemberSignature Language="C#" Value="public virtual long BytesWritten { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 BytesWritten" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getBytesWritten", "()J", "GetGetBytesWrittenHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a the total number of bytes written by this <c>Inflater</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a the total number of bytes written by this <c>Inflater</c>. This
 method is the same as <c>getTotalOut</c> except it returns a
 <c>long</c> value instead of an integer.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/zip/Inflater.html#getBytesWritten()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public virtual void End ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void End() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("end", "()V", "GetEndHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases resources associated with this <c>Inflater</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Releases resources associated with this <c>Inflater</c>. Any unused
 input or output is discarded. This method should be called explicitly in
 order to free native resources as soon as possible. After <c>end()</c> is
 called, other methods will typically throw <c>IllegalStateException</c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/zip/Inflater.html#end()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Finished">
      <MemberSignature Language="C#" Value="public virtual bool Finished ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Finished() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("finished", "()Z", "GetFinishedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indicates if the <c>Inflater</c> has inflated the entire deflated
 stream.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates if the <c>Inflater</c> has inflated the entire deflated
 stream. If deflated bytes remain and <c><see cref="M:Java.Util.Zip.Inflater.NeedsInput" /></c> returns <c>true</c> this method will return <c>false</c>. This method should be
 called after all deflated input is supplied to the <c>Inflater</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/zip/Inflater.html#finished()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public virtual int Inflate (byte[] buf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Inflate(unsigned int8[] buf) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("inflate", "([B)I", "GetInflate_arrayBHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buf" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buf">the buffer where decompressed data bytes are written.</param>
        <summary>Inflates bytes from the current input and stores them in <c>buf</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Inflates bytes from the current input and stores them in <c>buf</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/zip/Inflater.html#inflate(byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.Zip.DataFormatException">if the underlying stream is corrupted or was not compressed
             using a <c>Deflater</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public virtual int Inflate (byte[] buf, int offset, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Inflate(unsigned int8[] buf, int32 offset, int32 byteCount) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("inflate", "([BII)I", "GetInflate_arrayBIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buf" Type="System.Byte[]" />
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="nbytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buf">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="byteCount">To be added.</param>
        <summary>Inflates up to <c>byteCount</c> bytes from the current input and stores them in
 <c>buf</c> starting at <c>offset</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Inflates up to <c>byteCount</c> bytes from the current input and stores them in
 <c>buf</c> starting at <c>offset</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/zip/Inflater.html#inflate(byte[], int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.Zip.DataFormatException">if the underlying stream is corrupted or was not compressed
             using a <c>Deflater</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="InflateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; InflateAsync (byte[] buf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; InflateAsync(unsigned int8[] buf) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buf" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buf">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InflateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; InflateAsync (byte[] buf, int offset, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; InflateAsync(unsigned int8[] buf, int32 offset, int32 byteCount) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buf" Type="System.Byte[]" />
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="nbytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buf">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="byteCount">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NeedsDictionary">
      <MemberSignature Language="C#" Value="public virtual bool NeedsDictionary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool NeedsDictionary() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("needsDictionary", "()Z", "GetNeedsDictionaryHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns true if the input bytes were compressed with a preset
 dictionary.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns true if the input bytes were compressed with a preset
 dictionary. This method should be called if the first call to <c><see cref="M:Java.Util.Zip.Inflater.Inflate(System.Byte[])" /></c> returns 0,
 to determine whether a dictionary is required. If so, <c><see cref="M:Java.Util.Zip.Inflater.SetDictionary(System.Byte[])" /></c>
 should be called with the appropriate dictionary before calling <c>inflate</c> again. Use <c><see cref="P:Java.Util.Zip.Inflater.Adler" /></c> to determine which dictionary is required.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/zip/Inflater.html#needsDictionary()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NeedsInput">
      <MemberSignature Language="C#" Value="public virtual bool NeedsInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool NeedsInput() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("needsInput", "()Z", "GetNeedsInputHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns true if <c><see cref="M:Java.Util.Zip.Inflater.SetInput(System.Byte[])" /></c> must be called before inflation can continue.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns true if <c><see cref="M:Java.Util.Zip.Inflater.SetInput(System.Byte[])" /></c> must be called before inflation can continue.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/zip/Inflater.html#needsInput()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Remaining">
      <MemberSignature Language="C#" Value="public virtual int Remaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Remaining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getRemaining", "()I", "GetGetRemainingHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the number of bytes of current input remaining to be read by this
 inflater.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the number of bytes of current input remaining to be read by this
 inflater.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/zip/Inflater.html#getRemaining()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("reset", "()V", "GetResetHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resets this <c>Inflater</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Resets this <c>Inflater</c>. Should be called prior to inflating a new
 set of data.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/zip/Inflater.html#reset()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetDictionary">
      <MemberSignature Language="C#" Value="public virtual void SetDictionary (byte[] dictionary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDictionary(unsigned int8[] dictionary) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDictionary", "([B)V", "GetSetDictionary_arrayBHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buf" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="dictionary">To be added.</param>
        <summary>Sets the preset dictionary to be used for inflation to <c>dictionary</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the preset dictionary to be used for inflation to <c>dictionary</c>.
 See <c><see cref="M:Java.Util.Zip.Inflater.NeedsDictionary" /></c> for details.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/zip/Inflater.html#setDictionary(byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetDictionary">
      <MemberSignature Language="C#" Value="public virtual void SetDictionary (byte[] dictionary, int offset, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDictionary(unsigned int8[] dictionary, int32 offset, int32 byteCount) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDictionary", "([BII)V", "GetSetDictionary_arrayBIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buf" Type="System.Byte[]" />
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="nbytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dictionary">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="byteCount">To be added.</param>
        <summary>Sets the preset dictionary to be used for inflation to a subsequence of <c>dictionary</c>
 starting at <c>offset</c> and continuing for <c>byteCount</c> bytes.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the preset dictionary to be used for inflation to a subsequence of <c>dictionary</c>
 starting at <c>offset</c> and continuing for <c>byteCount</c> bytes. See <c><see cref="M:Java.Util.Zip.Inflater.NeedsDictionary" /></c> for details.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/zip/Inflater.html#setDictionary(byte[], int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetInput">
      <MemberSignature Language="C#" Value="public virtual void SetInput (byte[] buf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInput(unsigned int8[] buf) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setInput", "([B)V", "GetSetInput_arrayBHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buf" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buf">To be added.</param>
        <summary>Sets the current input to to be decompressed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the current input to to be decompressed. This method should only be
 called if <c><see cref="M:Java.Util.Zip.Inflater.NeedsInput" /></c> returns <c>true</c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/zip/Inflater.html#setInput(byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetInput">
      <MemberSignature Language="C#" Value="public virtual void SetInput (byte[] buf, int offset, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInput(unsigned int8[] buf, int32 offset, int32 byteCount) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setInput", "([BII)V", "GetSetInput_arrayBIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buf" Type="System.Byte[]" />
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="nbytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buf">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="byteCount">To be added.</param>
        <summary>Sets the current input to to be decompressed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the current input to to be decompressed. This method should only be
 called if <c><see cref="M:Java.Util.Zip.Inflater.NeedsInput" /></c> returns <c>true</c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/zip/Inflater.html#setInput(byte[], int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalIn">
      <MemberSignature Language="C#" Value="public virtual int TotalIn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalIn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTotalIn", "()I", "GetGetTotalInHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the total number of bytes of input read by this <c>Inflater</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the total number of bytes of input read by this <c>Inflater</c>. This
 method is limited to 32 bits; use <c><see cref="P:Java.Util.Zip.Inflater.BytesRead" /></c> instead.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/zip/Inflater.html#getTotalIn()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TotalOut">
      <MemberSignature Language="C#" Value="public virtual int TotalOut { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalOut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTotalOut", "()I", "GetGetTotalOutHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the total number of bytes written to the output buffer by this <c>Inflater</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the total number of bytes written to the output buffer by this <c>Inflater</c>. The method is limited to 32 bits; use <c><see cref="P:Java.Util.Zip.Inflater.BytesWritten" /></c> instead.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/zip/Inflater.html#getTotalOut()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>