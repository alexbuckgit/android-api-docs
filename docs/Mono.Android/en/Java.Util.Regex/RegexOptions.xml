<Type Name="RegexOptions" FullName="Java.Util.Regex.RegexOptions">
  <TypeSignature Language="C#" Value="public enum RegexOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RegexOptions extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Enumerates values returned by  several types and taken as a parameter of the <see cref="F:Java.Util.Regex.Pattern.Compile" /> member.</summary>
    <remarks />
  </Docs>
  <Members>
    <Member MemberName="CanonEq">
      <MemberSignature Language="C#" Value="CanonEq" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.Util.Regex.RegexOptions CanonEq = int32(128)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Util.Regex.RegexOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">This constant specifies that a character in a <c>Pattern</c> and a
 character in the input string only match if they are canonically
 equivalent. It is (currently) not supported in Android.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="CaseInsensitive">
      <MemberSignature Language="C#" Value="CaseInsensitive" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.Util.Regex.RegexOptions CaseInsensitive = int32(2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Util.Regex.RegexOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">This constant specifies that a <c>Pattern</c> is matched
 case-insensitively. That is, the patterns "a+" and "A+" would both match
 the string "aAaAaA". See <c><see cref="F:Java.Util.Regex.Pattern.UnicodeCase" /></c>. Corresponds to <c>(?i)</c>.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Comments">
      <MemberSignature Language="C#" Value="Comments" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.Util.Regex.RegexOptions Comments = int32(4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Util.Regex.RegexOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">This constant specifies that a <c>Pattern</c> may contain whitespace or
 comments. Otherwise comments and whitespace are taken as literal
 characters. Corresponds to <c>(?x)</c>.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Dotall">
      <MemberSignature Language="C#" Value="Dotall" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.Util.Regex.RegexOptions Dotall = int32(32)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Util.Regex.RegexOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">This constant specifies that the '.' meta character matches arbitrary
 characters, including line endings, which is normally not the case.
 Corresponds to <c>(?s)</c>.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Literal">
      <MemberSignature Language="C#" Value="Literal" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.Util.Regex.RegexOptions Literal = int32(16)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Util.Regex.RegexOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">This constant specifies that the whole <c>Pattern</c> is to be taken
 literally, that is, all meta characters lose their meanings.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Multiline">
      <MemberSignature Language="C#" Value="Multiline" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.Util.Regex.RegexOptions Multiline = int32(8)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Util.Regex.RegexOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">This constant specifies that the meta characters '^' and '$' match only
 the beginning and end of an input line, respectively. Normally, they
 match the beginning and the end of the complete input. Corresponds to <c>(?m)</c>.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="UnicodeCase">
      <MemberSignature Language="C#" Value="UnicodeCase" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.Util.Regex.RegexOptions UnicodeCase = int32(64)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Util.Regex.RegexOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">This constant specifies that a <c>Pattern</c> that uses case-insensitive matching
 will use Unicode case folding. On Android, <c>UNICODE_CASE</c> is always on:
 case-insensitive matching will always be Unicode-aware. If your code is intended to
 be portable and uses case-insensitive matching on non-ASCII characters, you should
 use this flag. Corresponds to <c>(?u)</c>.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="UnixLines">
      <MemberSignature Language="C#" Value="UnixLines" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.Util.Regex.RegexOptions UnixLines = int32(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Util.Regex.RegexOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">This constant specifies that a pattern matches Unix line endings ('\n')
 only against the '.', '^', and '$' meta characters. Corresponds to <c>(?d)</c>.
</para>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>
