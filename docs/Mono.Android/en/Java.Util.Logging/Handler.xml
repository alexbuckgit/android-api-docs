<Type Name="Handler" FullName="Java.Util.Logging.Handler">
  <TypeSignature Language="C#" Value="public abstract class Handler : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Handler extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Java.Util.Logging.Handler" />
  <TypeSignature Language="F#" Value="type Handler = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/util/logging/Handler", ApiSince=1, DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A <c>Handler</c> object accepts a logging request and exports the desired
 messages to a target, for example, a file, the console, etc.</summary>
    <remarks />
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Handler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Handler.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Constructs a <c>Handler</c> object with a default error manager instance
 <c>ErrorManager</c>, the default encoding, and the default logging
 level <c>Level.ALL</c>.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Handler (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Handler.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Util.Logging.Handler : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Util.Logging.Handler" Usage="new Java.Util.Logging.Handler (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public abstract void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Handler.Close" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="handler.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("close", "()V", "GetCloseHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes this handler.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public virtual string Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Encoding" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Logging.Handler.Encoding" />
      <MemberSignature Language="F#" Value="member this.Encoding : string with get, set" Usage="Java.Util.Logging.Handler.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getEncoding", "()Ljava/lang/String;", "GetGetEncodingHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setEncoding", "(Ljava/lang/String;)V", "GetSetEncoding_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the character encoding used by this handler, <c>null</c> for
 default encoding.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.UnsupportedEncodingException">if <c>charsetName</c> is not supported.
</exception>
        <exception cref="T:Java.IO.UnsupportedEncodingException">if <c>charsetName</c> is not supported.
</exception>
        <exception cref="T:Java.IO.UnsupportedEncodingException">if <c>charsetName</c> is not supported.
</exception>
        <exception cref="T:Java.IO.UnsupportedEncodingException">if <c>charsetName</c> is not supported.
</exception>
        <exception cref="T:Java.IO.UnsupportedEncodingException">if <c>charsetName</c> is not supported.
</exception>
        <exception cref="T:Java.IO.UnsupportedEncodingException">if <c>charsetName</c> is not supported.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ErrorManager">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Logging.ErrorManager ErrorManager { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.Logging.ErrorManager ErrorManager" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Logging.Handler.ErrorManager" />
      <MemberSignature Language="F#" Value="member this.ErrorManager : Java.Util.Logging.ErrorManager with get, set" Usage="Java.Util.Logging.Handler.ErrorManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getErrorManager", "()Ljava/util/logging/ErrorManager;", "GetGetErrorManagerHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setErrorManager", "(Ljava/util/logging/ErrorManager;)V", "GetSetErrorManager_Ljava_util_logging_ErrorManager_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Logging.ErrorManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the error manager used by this handler to report errors during
 logging.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>em</c> is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>em</c> is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>em</c> is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>em</c> is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>em</c> is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>em</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Logging.IFilter Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.Logging.IFilter Filter" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Logging.Handler.Filter" />
      <MemberSignature Language="F#" Value="member this.Filter : Java.Util.Logging.IFilter with get, set" Usage="Java.Util.Logging.Handler.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFilter", "()Ljava/util/logging/Filter;", "GetGetFilterHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setFilter", "(Ljava/util/logging/Filter;)V", "GetSetFilter_Ljava_util_logging_Filter_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Logging.IFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the filter used by this handler.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public abstract void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Handler.Flush" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit" Usage="handler.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("flush", "()V", "GetFlushHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Flushes any buffered output.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Formatter">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Logging.Formatter Formatter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.Logging.Formatter Formatter" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Logging.Handler.Formatter" />
      <MemberSignature Language="F#" Value="member this.Formatter : Java.Util.Logging.Formatter with get, set" Usage="Java.Util.Logging.Handler.Formatter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFormatter", "()Ljava/util/logging/Formatter;", "GetGetFormatterHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setFormatter", "(Ljava/util/logging/Formatter;)V", "GetSetFormatter_Ljava_util_logging_Formatter_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Logging.Formatter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the formatter used by this handler to format the logging messages.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>newFormatter</c> is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>newFormatter</c> is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>newFormatter</c> is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>newFormatter</c> is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>newFormatter</c> is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>newFormatter</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="IsLoggable">
      <MemberSignature Language="C#" Value="public virtual bool IsLoggable (Java.Util.Logging.LogRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLoggable(class Java.Util.Logging.LogRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Handler.IsLoggable(Java.Util.Logging.LogRecord)" />
      <MemberSignature Language="F#" Value="abstract member IsLoggable : Java.Util.Logging.LogRecord -&gt; bool&#xA;override this.IsLoggable : Java.Util.Logging.LogRecord -&gt; bool" Usage="handler.IsLoggable record" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isLoggable", "(Ljava/util/logging/LogRecord;)Z", "GetIsLoggable_Ljava_util_logging_LogRecord_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Java.Util.Logging.LogRecord" />
      </Parameters>
      <Docs>
        <param name="record">the log record to be checked.</param>
        <summary>Determines whether the supplied log record needs to be logged.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Logging.Handler.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Util.Logging.Handler.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Logging.Level Level { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.Logging.Level Level" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Logging.Handler.Level" />
      <MemberSignature Language="F#" Value="member this.Level : Java.Util.Logging.Level with get, set" Usage="Java.Util.Logging.Handler.Level" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLevel", "()Ljava/util/logging/Level;", "GetGetLevelHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setLevel", "(Ljava/util/logging/Level;)V", "GetSetLevel_Ljava_util_logging_Level_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Logging.Level</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the logging level of this handler, records with levels lower than
 this value will be dropped.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>newLevel</c> is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>newLevel</c> is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>newLevel</c> is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>newLevel</c> is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>newLevel</c> is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>newLevel</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Publish">
      <MemberSignature Language="C#" Value="public abstract void Publish (Java.Util.Logging.LogRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Publish(class Java.Util.Logging.LogRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Handler.Publish(Java.Util.Logging.LogRecord)" />
      <MemberSignature Language="F#" Value="abstract member Publish : Java.Util.Logging.LogRecord -&gt; unit" Usage="handler.Publish record" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("publish", "(Ljava/util/logging/LogRecord;)V", "GetPublish_Ljava_util_logging_LogRecord_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Java.Util.Logging.LogRecord" />
      </Parameters>
      <Docs>
        <param name="record">the log record to be logged; <c>null</c> records are ignored.
</param>
        <summary>Accepts a logging request and sends it to the the target.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ReportError">
      <MemberSignature Language="C#" Value="protected virtual void ReportError (string msg, Java.Lang.Exception ex, int code);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ReportError(string msg, class Java.Lang.Exception ex, int32 code) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Logging.Handler.ReportError(System.String,Java.Lang.Exception,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member ReportError : string * Java.Lang.Exception * int -&gt; unit&#xA;override this.ReportError : string * Java.Lang.Exception * int -&gt; unit" Usage="handler.ReportError (msg, ex, code)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("reportError", "(Ljava/lang/String;Ljava/lang/Exception;I)V", "GetReportError_Ljava_lang_String_Ljava_lang_Exception_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="ex" Type="Java.Lang.Exception" />
        <Parameter Name="code" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="msg">the error message, may be <c>null</c>.</param>
        <param name="ex">the associated exception, may be <c>null</c>.</param>
        <param name="code">an <c>ErrorManager</c> error code.
</param>
        <summary>Reports an error to the error manager associated with this handler,
 <c>ErrorManager</c> is used for that purpose.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Logging.Handler.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Util.Logging.Handler.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Logging.Handler.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Util.Logging.Handler.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
