<Type Name="Handler" FullName="Java.Util.Logging.Handler">
  <TypeSignature Language="C#" Value="public abstract class Handler : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Handler extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/util/logging/Handler", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A <c>Handler</c> object accepts a logging request and exports the desired
 messages to a target, for example, a file, the console, etc.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">A <c>Handler</c> object accepts a logging request and exports the desired
 messages to a target, for example, a file, the console, etc. It can be
 disabled by setting its logging level to <c>Level.OFF</c>.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/java/util/logging/Handler.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Handler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Constructs a <c>Handler</c> object with a default error manager instance
 <c>ErrorManager</c>, the default encoding, and the default logging
 level <c>Level.ALL</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a <c>Handler</c> object with a default error manager instance
 <c>ErrorManager</c>, the default encoding, and the default logging
 level <c>Level.ALL</c>. It has no filter and no formatter.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/logging/Handler.html#Handler()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Handler (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public abstract void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("close", "()V", "GetCloseHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes this handler.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Closes this handler. A flush operation will be performed and all the
 associated resources will be freed. Client applications should not use
 this handler after closing it.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/logging/Handler.html#close()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public virtual string Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getEncoding", "()Ljava/lang/String;", "GetGetEncodingHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setEncoding", "(Ljava/lang/String;)V", "GetSetEncoding_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the character encoding used by this handler, <c>null</c> for
 default encoding.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/java/util/logging/Handler.html#getEncoding()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the character encoding used by this handler, <c>null</c> for
 default encoding.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/java/util/logging/Handler.html#setEncoding(java.lang.String)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the character encoding used by this handler, <c>null</c> indicates
 a default encoding.</para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.UnsupportedEncodingException">if <c>charsetName</c> is not supported.
</exception>
        <exception cref="T:Java.IO.UnsupportedEncodingException">if <c>charsetName</c> is not supported.
</exception>
        <exception cref="T:Java.IO.UnsupportedEncodingException">if <c>charsetName</c> is not supported.
</exception>
        <exception cref="T:Java.IO.UnsupportedEncodingException">if <c>charsetName</c> is not supported.
</exception>
        <exception cref="T:Java.IO.UnsupportedEncodingException">if <c>charsetName</c> is not supported.
</exception>
        <exception cref="T:Java.IO.UnsupportedEncodingException">if <c>charsetName</c> is not supported.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ErrorManager">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Logging.ErrorManager ErrorManager { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.Logging.ErrorManager ErrorManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getErrorManager", "()Ljava/util/logging/ErrorManager;", "GetGetErrorManagerHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setErrorManager", "(Ljava/util/logging/ErrorManager;)V", "GetSetErrorManager_Ljava_util_logging_ErrorManager_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Logging.ErrorManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the error manager used by this handler to report errors during
 logging.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/java/util/logging/Handler.html#getErrorManager()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the error manager used by this handler to report errors during
 logging.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/java/util/logging/Handler.html#setErrorManager(java.util.logging.ErrorManager)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the error manager for this handler.</para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>em</c> is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>em</c> is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>em</c> is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>em</c> is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>em</c> is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>em</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Logging.IFilter Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.Logging.IFilter Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFilter", "()Ljava/util/logging/Filter;", "GetGetFilterHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setFilter", "(Ljava/util/logging/Filter;)V", "GetSetFilter_Ljava_util_logging_Filter_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Logging.IFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the filter used by this handler.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/java/util/logging/Handler.html#getFilter()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the filter used by this handler.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/java/util/logging/Handler.html#setFilter(java.util.logging.Filter)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the filter to be used by this handler.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public abstract void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("flush", "()V", "GetFlushHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Flushes any buffered output.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Flushes any buffered output.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/logging/Handler.html#flush()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Formatter">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Logging.Formatter Formatter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.Logging.Formatter Formatter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFormatter", "()Ljava/util/logging/Formatter;", "GetGetFormatterHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setFormatter", "(Ljava/util/logging/Formatter;)V", "GetSetFormatter_Ljava_util_logging_Formatter_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Logging.Formatter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the formatter used by this handler to format the logging messages.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/java/util/logging/Handler.html#getFormatter()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the formatter used by this handler to format the logging messages.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/java/util/logging/Handler.html#setFormatter(java.util.logging.Formatter)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the formatter to be used by this handler.</para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>newFormatter</c> is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>newFormatter</c> is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>newFormatter</c> is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>newFormatter</c> is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>newFormatter</c> is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>newFormatter</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="IsLoggable">
      <MemberSignature Language="C#" Value="public virtual bool IsLoggable (Java.Util.Logging.LogRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLoggable(class Java.Util.Logging.LogRecord record) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isLoggable", "(Ljava/util/logging/LogRecord;)Z", "GetIsLoggable_Ljava_util_logging_LogRecord_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Java.Util.Logging.LogRecord" />
      </Parameters>
      <Docs>
        <param name="record">the log record to be checked.</param>
        <summary>Determines whether the supplied log record needs to be logged.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Determines whether the supplied log record needs to be logged. The
 logging levels will be checked as well as the filter.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/logging/Handler.html#isLoggable(java.util.logging.LogRecord)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Logging.Level Level { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.Logging.Level Level" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLevel", "()Ljava/util/logging/Level;", "GetGetLevelHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setLevel", "(Ljava/util/logging/Level;)V", "GetSetLevel_Ljava_util_logging_Level_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Logging.Level</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the logging level of this handler, records with levels lower than
 this value will be dropped.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/java/util/logging/Handler.html#getLevel()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the logging level of this handler, records with levels lower than
 this value will be dropped.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/java/util/logging/Handler.html#setLevel(java.util.logging.Level)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the logging level of the messages logged by this handler, levels
 lower than this value will be dropped.</para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>newLevel</c> is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>newLevel</c> is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>newLevel</c> is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>newLevel</c> is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>newLevel</c> is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>newLevel</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Publish">
      <MemberSignature Language="C#" Value="public abstract void Publish (Java.Util.Logging.LogRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Publish(class Java.Util.Logging.LogRecord record) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("publish", "(Ljava/util/logging/LogRecord;)V", "GetPublish_Ljava_util_logging_LogRecord_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Java.Util.Logging.LogRecord" />
      </Parameters>
      <Docs>
        <param name="record">the log record to be logged; <c>null</c> records are ignored.
</param>
        <summary>Accepts a logging request and sends it to the the target.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Accepts a logging request and sends it to the the target.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/logging/Handler.html#publish(java.util.logging.LogRecord)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ReportError">
      <MemberSignature Language="C#" Value="protected virtual void ReportError (string msg, Java.Lang.Exception ex, int code);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ReportError(string msg, class Java.Lang.Exception ex, int32 code) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("reportError", "(Ljava/lang/String;Ljava/lang/Exception;I)V", "GetReportError_Ljava_lang_String_Ljava_lang_Exception_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.String" />
        <Parameter Name="ex" Type="Java.Lang.Exception" />
        <Parameter Name="code" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="msg">the error message, may be <c>null</c>.</param>
        <param name="ex">the associated exception, may be <c>null</c>.</param>
        <param name="code">an <c>ErrorManager</c> error code.
</param>
        <summary>Reports an error to the error manager associated with this handler,
 <c>ErrorManager</c> is used for that purpose.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Reports an error to the error manager associated with this handler,
 <c>ErrorManager</c> is used for that purpose. No security checks are
 done, therefore this is compatible with environments where the caller
 is non-privileged.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/logging/Handler.html#reportError(java.lang.String, java.lang.Exception, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>