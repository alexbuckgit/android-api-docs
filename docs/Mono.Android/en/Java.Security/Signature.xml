<Type Name="Signature" FullName="Java.Security.Signature">
  <TypeSignature Language="C#" Value="public abstract class Signature : Java.Security.SignatureSpi" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Signature extends Java.Security.SignatureSpi" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Security.SignatureSpi</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/security/Signature", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><c>Signature</c> is an engine class which is capable of creating and
 verifying digital signatures, using different algorithms that have been
 registered with the <c><see cref="T:Java.Security.Security" /></c> class.</summary>
    <remarks><para tool="javadoc-to-mdoc"><c>Signature</c> is an engine class which is capable of creating and
 verifying digital signatures, using different algorithms that have been
 registered with the <c><see cref="T:Java.Security.Security" /></c> class.</para><format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="T:Java.Security.SignatureSpi" /></c></term></item></list><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/security/Signature.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Signature (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string algorithm) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">To be added.</param>
        <summary>Constructs a new instance of <c>Signature</c> with the name of
 the algorithm to use.</summary>
        <remarks><para tool="javadoc-to-mdoc">Constructs a new instance of <c>Signature</c> with the name of
 the algorithm to use.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/security/Signature.html#Signature(java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Signature (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Algorithm">
      <MemberSignature Language="C#" Value="public string Algorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Algorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAlgorithm", "()Ljava/lang/String;", "GetGetAlgorithmHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the name of the algorithm of this <c>Signature</c>.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns the name of the algorithm of this <c>Signature</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/security/Signature.html#getAlgorithm()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Java.Security.Signature GetInstance (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Security.Signature GetInstance(string algorithm) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInstance", "(Ljava/lang/String;)Ljava/security/Signature;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Signature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">the name of the algorithm to use.</param>
        <summary>Returns a new instance of <c>Signature</c> that utilizes the specified
 algorithm.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns a new instance of <c>Signature</c> that utilizes the specified
 algorithm.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/security/Signature.html#getInstance(java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if the specified algorithm is not available.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>algorithm</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Java.Security.Signature GetInstance (string algorithm, Java.Security.Provider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Security.Signature GetInstance(string algorithm, class Java.Security.Provider provider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/security/Provider;)Ljava/security/Signature;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Signature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="provider" Type="Java.Security.Provider" />
      </Parameters>
      <Docs>
        <param name="algorithm">the name of the algorithm to use.</param>
        <param name="provider">the security provider.</param>
        <summary>Returns a new instance of <c>Signature</c> that utilizes the specified
 algorithm from the specified provider.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns a new instance of <c>Signature</c> that utilizes the specified
 algorithm from the specified provider. The <c>provider</c> supplied
 does not have to be registered.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/security/Signature.html#getInstance(java.lang.String, java.security.Provider)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if the specified algorithm is not available.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>algorithm</c> is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>provider == null</c></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Java.Security.Signature GetInstance (string algorithm, string provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Security.Signature GetInstance(string algorithm, string provider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/lang/String;)Ljava/security/Signature;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Signature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="provider" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">the name of the algorithm to use.</param>
        <param name="provider">the name of the provider.</param>
        <summary>Returns a new instance of <c>Signature</c> that utilizes the specified
 algorithm from the specified provider.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns a new instance of <c>Signature</c> that utilizes the specified
 algorithm from the specified provider.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/security/Signature.html#getInstance(java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if the specified algorithm is not available.</exception>
        <exception cref="T:Java.Security.NoSuchProviderException">if the specified provider is not available.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>algorithm</c> is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>provider == null || provider.isEmpty()</c></exception>
      </Docs>
    </Member>
    <Member MemberName="GetParameter">
      <MemberSignature Language="C#" Value="public Java.Lang.Object GetParameter (string param);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Object GetParameter(string param) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getParameter", "(Ljava/lang/String;)Ljava/lang/Object;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="param" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="param">the name of the requested parameter value</param>
        <summary>Returns the value of the parameter with the specified name.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns the value of the parameter with the specified name.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/security/Signature.html#getParameter(java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidParameterException">if <c>param</c> is not a valid parameter for this <c>Signature</c> or an other error occurs.</exception>
      </Docs>
    </Member>
    <Member MemberName="InitSign">
      <MemberSignature Language="C#" Value="public void InitSign (Java.Security.IPrivateKey privateKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InitSign(class Java.Security.IPrivateKey privateKey) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("initSign", "(Ljava/security/PrivateKey;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateKey" Type="Java.Security.IPrivateKey" />
      </Parameters>
      <Docs>
        <param name="privateKey">the private key.</param>
        <summary>Initializes this <c>Signature</c> instance for signing, using the
 private key of the identity whose signature is going to be generated.</summary>
        <remarks><para tool="javadoc-to-mdoc">Initializes this <c>Signature</c> instance for signing, using the
 private key of the identity whose signature is going to be generated.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/security/Signature.html#initSign(java.security.PrivateKey)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if <c>privateKey</c> is not valid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="InitSign">
      <MemberSignature Language="C#" Value="public void InitSign (Java.Security.IPrivateKey privateKey, Java.Security.SecureRandom random);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InitSign(class Java.Security.IPrivateKey privateKey, class Java.Security.SecureRandom random) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("initSign", "(Ljava/security/PrivateKey;Ljava/security/SecureRandom;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateKey" Type="Java.Security.IPrivateKey" />
        <Parameter Name="random" Type="Java.Security.SecureRandom" />
      </Parameters>
      <Docs>
        <param name="privateKey">the private key.</param>
        <param name="random">the <c>SecureRandom</c> to use.</param>
        <summary>Initializes this <c>Signature</c> instance for signing, using the
 private key of the identity whose signature is going to be generated and
 the specified source of randomness.</summary>
        <remarks><para tool="javadoc-to-mdoc">Initializes this <c>Signature</c> instance for signing, using the
 private key of the identity whose signature is going to be generated and
 the specified source of randomness.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/security/Signature.html#initSign(java.security.PrivateKey, java.security.SecureRandom)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if <c>privateKey</c> is not valid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="InitVerify">
      <MemberSignature Language="C#" Value="public void InitVerify (Java.Security.Cert.Certificate certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InitVerify(class Java.Security.Cert.Certificate certificate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("initVerify", "(Ljava/security/cert/Certificate;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="Java.Security.Cert.Certificate" />
      </Parameters>
      <Docs>
        <param name="certificate">the certificate used to verify a signature.</param>
        <summary>Initializes this <c>Signature</c> instance for signature verification,
 using the certificate of the identity whose signature is going to be
 verified.</summary>
        <remarks><para tool="javadoc-to-mdoc">Initializes this <c>Signature</c> instance for signature verification,
 using the certificate of the identity whose signature is going to be
 verified.
 </para><para tool="javadoc-to-mdoc">
 If the given certificate is an instance of <c><see cref="T:Java.Security.Cert.X509Certificate" /></c> and
 has a key usage parameter that indicates, that this certificate is not to
 be used for signing, an <c>InvalidKeyException</c> is thrown.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/security/Signature.html#initVerify(java.security.cert.Certificate)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the publicKey in the certificate is not valid or not to be
             used for signing.
</exception>
      </Docs>
    </Member>
    <Member MemberName="InitVerify">
      <MemberSignature Language="C#" Value="public void InitVerify (Java.Security.IPublicKey publicKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InitVerify(class Java.Security.IPublicKey publicKey) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("initVerify", "(Ljava/security/PublicKey;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publicKey" Type="Java.Security.IPublicKey" />
      </Parameters>
      <Docs>
        <param name="publicKey">the public key.</param>
        <summary>Initializes this <c>Signature</c> instance for signature verification,
 using the public key of the identity whose signature is going to be
 verified.</summary>
        <remarks><para tool="javadoc-to-mdoc">Initializes this <c>Signature</c> instance for signature verification,
 using the public key of the identity whose signature is going to be
 verified.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/security/Signature.html#initVerify(java.security.PublicKey)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if <c>publicKey</c> is not valid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public Java.Security.AlgorithmParameters Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Security.AlgorithmParameters Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getParameters", "()Ljava/security/AlgorithmParameters;", "GetGetParametersHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.AlgorithmParameters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the <c>AlgorithmParameters</c> of this <c><see cref="T:Java.Security.Signature" /></c>
 instance.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns the <c>AlgorithmParameters</c> of this <c><see cref="T:Java.Security.Signature" /></c>
 instance.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/security/Signature.html#getParameters()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public Java.Security.Provider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Security.Provider Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getProvider", "()Ljava/security/Provider;", "GetGetProviderHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Provider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the provider associated with this <c>Signature</c>.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns the provider associated with this <c>Signature</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/security/Signature.html#getProvider()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetParameter">
      <MemberSignature Language="C#" Value="public void SetParameter (Java.Security.Spec.IAlgorithmParameterSpec params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParameter(class Java.Security.Spec.IAlgorithmParameterSpec params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setParameter", "(Ljava/security/spec/AlgorithmParameterSpec;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="params" Type="Java.Security.Spec.IAlgorithmParameterSpec" />
      </Parameters>
      <Docs>
        <param name="params">the parameter to set.</param>
        <summary>Sets the specified <c>AlgorithmParameterSpec</c>.</summary>
        <remarks><para tool="javadoc-to-mdoc">Sets the specified <c>AlgorithmParameterSpec</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/security/Signature.html#setParameter(java.security.spec.AlgorithmParameterSpec)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidAlgorithmParameterException">if the parameter is invalid, already set or is not allowed to
             be changed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetParameter">
      <MemberSignature Language="C#" Value="public void SetParameter (string param, Java.Lang.Object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParameter(string param, class Java.Lang.Object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setParameter", "(Ljava/lang/String;Ljava/lang/Object;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="param" Type="System.String" />
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="param">the name of the parameter.</param>
        <param name="value">the parameter value.</param>
        <summary>Sets the specified parameter to the given value.</summary>
        <remarks><para tool="javadoc-to-mdoc">Sets the specified parameter to the given value.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/security/Signature.html#setParameter(java.lang.String, java.lang.Object)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidParameterException">if the parameter is invalid, already set or is not allowed to
             be changed.</exception>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public byte[] Sign ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Sign() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sign", "()[B", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Generates and returns the signature of all updated data.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Generates and returns the signature of all updated data.
 </para><para tool="javadoc-to-mdoc">
 This <c>Signature</c> instance is reset to the state of its last
 initialization for signing and thus can be used for another signature
 from the same identity.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/security/Signature.html#sign()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.SignatureException">if this <c>Signature</c> instance is not initialized
             properly.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public int Sign (byte[] outbuf, int offset, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Sign(unsigned int8[] outbuf, int32 offset, int32 len) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sign", "([BII)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outbuf" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="outbuf">the buffer to store the signature.</param>
        <param name="offset">the index of the first byte in <c>outbuf</c> to store.</param>
        <param name="len">the number of bytes allocated for the signature.</param>
        <summary>Generates and stores the signature of all updated data in the provided
 <c>byte[]</c> at the specified position with the specified length.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Generates and stores the signature of all updated data in the provided
 <c>byte[]</c> at the specified position with the specified length.
 </para><para tool="javadoc-to-mdoc">
 This <c>Signature</c> instance is reset to the state of its last
 initialization for signing and thus can be used for another signature
 from the same identity.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/security/Signature.html#sign(byte[], int, int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.SignatureException">if this <c>Signature</c> instance is not initialized
             properly.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>offset</c> or <c>len</c> are not valid in respect to
             <c>outbuf</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="protected Java.Security.SignatureState State { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Java.Security.SignatureState State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("state")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.SignatureState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the current state of this <c>Signature</c>.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Represents the current state of this <c>Signature</c>. The three
 possible states are <c><see cref="F:Java.Security.Signature.Uninitialized" /></c>, <c><see cref="!:Java.Security.Signature.SIGN" /></c> or
 <c><see cref="!:Java.Security.Signature.VERIFY" /></c>.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/security/Signature.html#state" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uninitialized">
      <MemberSignature Language="C#" Value="protected const Java.Security.SignatureState Uninitialized = 0;" />
      <MemberSignature Language="ILAsm" Value=".field family static literal valuetype Java.Security.SignatureState Uninitialized = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("UNINITIALIZED")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Java.Security.SignatureState enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.SignatureState</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Constant that indicates that this <c>Signature</c> instance has not yet
 been initialized.</summary>
        <remarks><para tool="javadoc-to-mdoc">Constant that indicates that this <c>Signature</c> instance has not yet
 been initialized.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/security/Signature.html#UNINITIALIZED" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update (Java.Nio.ByteBuffer data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update(class Java.Nio.ByteBuffer data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("update", "(Ljava/nio/ByteBuffer;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="data">the <c>ByteBuffer</c> to update with.</param>
        <summary>Updates the data to be verified or to be signed, using the specified
 <c>ByteBuffer</c>.</summary>
        <remarks><para tool="javadoc-to-mdoc">Updates the data to be verified or to be signed, using the specified
 <c>ByteBuffer</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/security/Signature.html#update(java.nio.ByteBuffer)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.SignatureException">if this <c>Signature</c> instance is not initialized
             properly.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update (byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update(unsigned int8[] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("update", "([B)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data">the byte array to update with.</param>
        <summary>Updates the data to be verified or to be signed, using the specified
 <c>byte[]</c>.</summary>
        <remarks><para tool="javadoc-to-mdoc">Updates the data to be verified or to be signed, using the specified
 <c>byte[]</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/security/Signature.html#update(byte[])" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.SignatureException">if this <c>Signature</c> instance is not initialized
             properly.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update (sbyte b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update(int8 b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("update", "(B)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="b" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="b">the byte to update with.</param>
        <summary>Updates the data to be verified or to be signed, using the specified
 <c>byte</c>.</summary>
        <remarks><para tool="javadoc-to-mdoc">Updates the data to be verified or to be signed, using the specified
 <c>byte</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/security/Signature.html#update(byte)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.SignatureException">if this <c>Signature</c> instance is not initialized
             properly.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update (byte[] data, int off, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update(unsigned int8[] data, int32 off, int32 len) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("update", "([BII)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">the byte array to update with.</param>
        <param name="off">the start index in <c>data</c> of the data.</param>
        <param name="len">the number of bytes to use.</param>
        <summary>Updates the data to be verified or to be signed, using the given <c>byte[]</c>, starting form the specified index for the specified length.</summary>
        <remarks><para tool="javadoc-to-mdoc">Updates the data to be verified or to be signed, using the given <c>byte[]</c>, starting form the specified index for the specified length.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/security/Signature.html#update(byte[], int, int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.SignatureException">if this <c>Signature</c> instance is not initialized
             properly.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Verify">
      <MemberSignature Language="C#" Value="public bool Verify (byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Verify(unsigned int8[] signature) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("verify", "([B)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="signature">the signature to verify.</param>
        <summary>Indicates whether the given <c>signature</c> can be verified using the
 public key or a certificate of the signer.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Indicates whether the given <c>signature</c> can be verified using the
 public key or a certificate of the signer.
 </para><para tool="javadoc-to-mdoc">
 This <c>Signature</c> instance is reset to the state of its last
 initialization for verifying and thus can be used to verify another
 signature of the same signer.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/security/Signature.html#verify(byte[])" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.SignatureException">if this <c>Signature</c> instance is not initialized
             properly.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Verify">
      <MemberSignature Language="C#" Value="public bool Verify (byte[] signature, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Verify(unsigned int8[] signature, int32 offset, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("verify", "([BII)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signature" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="signature">the <c>byte[]</c> containing the signature to verify.</param>
        <param name="offset">the start index in <c>signature</c> of the signature.</param>
        <param name="length">the number of bytes allocated for the signature.</param>
        <summary>Indicates whether the given <c>signature</c> starting at index <c>offset</c> with <c>length</c> bytes can be verified using the public key or
 a certificate of the signer.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Indicates whether the given <c>signature</c> starting at index <c>offset</c> with <c>length</c> bytes can be verified using the public key or
 a certificate of the signer.
 </para><para tool="javadoc-to-mdoc">
 This <c>Signature</c> instance is reset to the state of its last
 initialization for verifying and thus can be used to verify another
 signature of the same signer.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/security/Signature.html#verify(byte[], int, int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.SignatureException">if this <c>Signature</c> instance is not initialized
             properly.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>offset</c> or <c>length</c> are not valid in respect
             to <c>signature</c>.
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
