<Type Name="MessageDigest" FullName="Java.Security.MessageDigest">
  <TypeSignature Language="C#" Value="public abstract class MessageDigest : Java.Security.MessageDigestSpi" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MessageDigest extends Java.Security.MessageDigestSpi" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Security.MessageDigestSpi</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/security/MessageDigest", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Uses a one-way hash function to turn an arbitrary number of bytes into a
 fixed-length byte sequence.</summary>
    <remarks />
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MessageDigest (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string algorithm) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">To be added.</param>
        <summary>Constructs a new instance of <c>MessageDigest</c> with the name of
 the algorithm to use.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MessageDigest (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Algorithm">
      <MemberSignature Language="C#" Value="public string Algorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Algorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAlgorithm", "()Ljava/lang/String;", "GetGetAlgorithmHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the name of the algorithm of this <c>MessageDigest</c>.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Digest">
      <MemberSignature Language="C#" Value="public virtual byte[] Digest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] Digest() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("digest", "()[B", "GetDigestHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Computes and returns the final hash value for this <c><see cref="T:Java.Security.MessageDigest" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Security.MessageDigest.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Digest">
      <MemberSignature Language="C#" Value="public virtual byte[] Digest (byte[] input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] Digest(unsigned int8[] input) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("digest", "([B)[B", "GetDigest_arrayBHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="input">the <c>byte</c> array</param>
        <summary>Performs the final update and then computes and returns the final hash
 value for this <c><see cref="T:Java.Security.MessageDigest" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Security.MessageDigest.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Digest">
      <MemberSignature Language="C#" Value="public virtual int Digest (byte[] buf, int offset, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Digest(unsigned int8[] buf, int32 offset, int32 len) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("digest", "([BII)I", "GetDigest_arrayBIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buf" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buf">the buffer to store the result</param>
        <param name="offset">the index of the first byte in <c>buf</c> to store</param>
        <param name="len">the number of bytes allocated for the digest</param>
        <summary>Computes and stores the final hash value for this <c><see cref="T:Java.Security.MessageDigest" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.DigestException">if an error occurs</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>offset</c> or <c>len</c> are not valid in respect to
             <c>buf</c></exception>
        <altmember cref="M:Java.Security.MessageDigest.Reset" />
      </Docs>
    </Member>
    <Member MemberName="DigestLength">
      <MemberSignature Language="C#" Value="public int DigestLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DigestLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDigestLength", "()I", "GetGetDigestLengthHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the engine digest length in bytes.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Java.Security.MessageDigest GetInstance (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Security.MessageDigest GetInstance(string algorithm) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInstance", "(Ljava/lang/String;)Ljava/security/MessageDigest;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.MessageDigest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">the name of the algorithm to use</param>
        <summary tool="true">Returns a new instance of <c>MessageDigest</c> that utilizes the
 specified algorithm.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if the specified algorithm is not available</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>algorithm</c> is <c>null</c></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Java.Security.MessageDigest GetInstance (string algorithm, Java.Security.Provider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Security.MessageDigest GetInstance(string algorithm, class Java.Security.Provider provider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/security/Provider;)Ljava/security/MessageDigest;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.MessageDigest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="provider" Type="Java.Security.Provider" />
      </Parameters>
      <Docs>
        <param name="algorithm">the name of the algorithm to use</param>
        <param name="provider">the provider</param>
        <summary>Returns a new instance of <c>MessageDigest</c> that utilizes the
 specified algorithm from the specified provider.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if the specified algorithm is not available</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>algorithm</c> is <c>null</c></exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>provider == null</c></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Java.Security.MessageDigest GetInstance (string algorithm, string provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Security.MessageDigest GetInstance(string algorithm, string provider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/lang/String;)Ljava/security/MessageDigest;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.MessageDigest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="provider" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">the name of the algorithm to use</param>
        <param name="provider">the name of the provider</param>
        <summary>Returns a new instance of <c>MessageDigest</c> that utilizes the
 specified algorithm from the specified provider.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if the specified algorithm is not available</exception>
        <exception cref="T:Java.Security.NoSuchProviderException">if the specified provider is not available</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>algorithm</c> is <c>null</c></exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>provider == null || provider.isEmpty()</c></exception>
      </Docs>
    </Member>
    <Member MemberName="IsEqual">
      <MemberSignature Language="C#" Value="public static bool IsEqual (byte[] digesta, byte[] digestb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsEqual(unsigned int8[] digesta, unsigned int8[] digestb) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isEqual", "([B[B)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digesta" Type="System.Byte[]" />
        <Parameter Name="digestb" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="digesta">the first digest to be compared</param>
        <param name="digestb">the second digest to be compared</param>
        <summary>Indicates whether to digest are equal by performing a simply
 byte-per-byte compare of the two digests.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public Java.Security.Provider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Security.Provider Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getProvider", "()Ljava/security/Provider;", "GetGetProviderHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Provider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the provider associated with this <c>MessageDigest</c>.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("reset", "()V", "GetResetHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Puts this <c>MessageDigest</c> back in an initial state, such that it is
 ready to compute a one way hash value.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update (Java.Nio.ByteBuffer input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update(class Java.Nio.ByteBuffer input) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("update", "(Ljava/nio/ByteBuffer;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="input">the <c>ByteBuffer</c></param>
        <summary tool="true">Updates this <c>MessageDigest</c> using the given <c>input</c>.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual void Update (byte[] input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(unsigned int8[] input) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("update", "([B)V", "GetUpdate_arrayBHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="input">the <c>byte</c> array</param>
        <summary>Updates this <c>MessageDigest</c> using the given <c>byte[]</c>.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>input</c> is <c>null</c></exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual void Update (sbyte arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(int8 arg0) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("update", "(B)V", "GetUpdate_BHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg0" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="arg0">the <c>byte</c> to update this <c>MessageDigest</c> with</param>
        <summary>Updates this <c>MessageDigest</c> using the given <c>byte</c>.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Security.MessageDigest.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual void Update (byte[] input, int offset, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(unsigned int8[] input, int32 offset, int32 len) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("update", "([BII)V", "GetUpdate_arrayBIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">the <c>byte</c> array</param>
        <param name="offset">the index of the first byte in <c>input</c> to update from</param>
        <param name="len">the number of bytes in <c>input</c> to update from</param>
        <summary>Updates this <c>MessageDigest</c> using the given <c>byte[]</c>.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>offset</c> or <c>len</c> are not valid in respect to
             <c>input</c></exception>
      </Docs>
    </Member>
  </Members>
</Type>
