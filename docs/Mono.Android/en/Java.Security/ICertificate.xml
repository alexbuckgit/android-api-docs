<Type Name="ICertificate" FullName="Java.Security.ICertificate">
  <TypeSignature Language="C#" Value="public interface ICertificate : Android.Runtime.IJavaObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICertificate implements class Android.Runtime.IJavaObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/security/Certificate", "", "Java.Security.ICertificateInvoker")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("This class is obsoleted in this android platform")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <c>Certificate</c> represents an identity certificate, such as X.509 or PGP.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">
        <c>Certificate</c> represents an identity certificate, such as X.509 or PGP.
 Note: A <c>Certificate</c> instances does not make any statement about the
 validity of itself. It's in the responsibility of the application to verify
 the validity of its certificates.</para>
      <format type="text/html">
        <h5 class="jd-tagtitle">See Also</h5>
      </format>
      <list type="bullet">
        <item>
          <term>
            <c>
              <see cref="T:Java.Security.Cert.Certificate" />
            </c>
          </term>
        </item>
      </list>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/java/security/Certificate.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1Deprecated since API level 1" />
  </Docs>
  <Members>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public void Decode (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Decode(class System.IO.Stream stream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("decode", "(Ljava/io/InputStream;)V", "GetDecode_Ljava_io_InputStream_Handler:Java.Security.ICertificateInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">the <c>InputStream</c> to read from.</param>
        <summary>Decodes a certificate from the given <c>InputStream</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Decodes a certificate from the given <c>InputStream</c>. The format of
 the data to encode must be that identified by <c><see cref="P:Java.Security.ICertificate.Format" /></c> and
 encoded by <c><see cref="M:Java.Security.ICertificate.Encode(System.IO.Stream)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/security/Certificate.html#decode(java.io.InputStream)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.KeyException">if certificate information is incomplete or incorrect.</exception>
        <exception cref="T:Java.IO.IOException">if an exception is thrown by accessing the provided stream.</exception>
        <altmember cref="M:Java.Security.ICertificate.Encode(System.IO.Stream)" />
        <altmember cref="P:Java.Security.ICertificate.Format" />
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public void Encode (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Encode(class System.IO.Stream stream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("encode", "(Ljava/io/OutputStream;)V", "GetEncode_Ljava_io_OutputStream_Handler:Java.Security.ICertificateInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">the <c>OutputStream</c> to encode this certificate to.</param>
        <summary>Encodes this certificate to an output stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Encodes this certificate to an output stream. The
 <c><see cref="M:Java.Security.ICertificate.Decode(System.IO.Stream)" /></c> method must be able to decode the format
 written by this method.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/security/Certificate.html#encode(java.io.OutputStream)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.KeyException">if certificate information is incomplete or incorrect.</exception>
        <exception cref="T:Java.IO.IOException">if an exception is thrown by accessing the provided stream.</exception>
        <altmember cref="M:Java.Security.ICertificate.Decode(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public string Format { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Format" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFormat", "()Ljava/lang/String;", "GetGetFormatHandler:Java.Security.ICertificateInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a string identifying the format of this certificate.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a string identifying the format of this certificate.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/security/Certificate.html#getFormat()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Guarantor">
      <MemberSignature Language="C#" Value="public Java.Security.IPrincipal Guarantor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Security.IPrincipal Guarantor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getGuarantor", "()Ljava/security/Principal;", "GetGetGuarantorHandler:Java.Security.ICertificateInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the guarantor of this certificate.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the guarantor of this certificate. That guarantor guarantees,
 that the public key of this certificate is from the principal returned by
 <c><see cref="P:Java.Security.ICertificate.Principal" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/security/Certificate.html#getGuarantor()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Java.Security.ICertificate.Principal" />
      </Docs>
    </Member>
    <Member MemberName="Principal">
      <MemberSignature Language="C#" Value="public Java.Security.IPrincipal Principal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Security.IPrincipal Principal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPrincipal", "()Ljava/security/Principal;", "GetGetPrincipalHandler:Java.Security.ICertificateInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the principal of this certificate.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the principal of this certificate. The principal is guaranteed by
 the guarantor returned by <c><see cref="P:Java.Security.ICertificate.Guarantor" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/security/Certificate.html#getPrincipal()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Java.Security.ICertificate.Guarantor" />
      </Docs>
    </Member>
    <Member MemberName="PublicKey">
      <MemberSignature Language="C#" Value="public Java.Security.IPublicKey PublicKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Security.IPublicKey PublicKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPublicKey", "()Ljava/security/PublicKey;", "GetGetPublicKeyHandler:Java.Security.ICertificateInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.IPublicKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the public key of this certificate.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the public key of this certificate. The public key is guaranteed
 by the guarantor to belong to the principal.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/security/Certificate.html#getPublicKey()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Java.Security.ICertificate.Guarantor" />
        <altmember cref="P:Java.Security.ICertificate.Principal" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (bool detailed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(bool detailed) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("toString", "(Z)Ljava/lang/String;", "GetToString_ZHandler:Java.Security.ICertificateInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="detailed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="detailed">whether or not this method should return detailed information.</param>
        <summary>Returns a string containing a concise, human-readable description of the
 this <c>Certificate</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a string containing a concise, human-readable description of the
 this <c>Certificate</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/security/Certificate.html#toString(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
