<Type Name="KeyRep" FullName="Java.Security.KeyRep">
  <TypeSignature Language="C#" Value="public class KeyRep : Java.Lang.Object, IDisposable, Java.IO.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyRep extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.IO.ISerializable, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Java.IO.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/security/KeyRep", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <c>KeyRep</c> is a standardized representation for serialized <c><see cref="T:Java.Security.Key" /></c>
 objects.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">
        <c>KeyRep</c> is a standardized representation for serialized <c><see cref="T:Java.Security.Key" /></c>
 objects.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/java/security/KeyRep.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyRep (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyRep (Java.Security.KeyRep.Type type, string algorithm, string format, byte[] encoded);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Security.KeyRep/Type type, string algorithm, string format, unsigned int8[] encoded) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/security/KeyRep$Type;Ljava/lang/String;Ljava/lang/String;[B)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="Java.Security.KeyRep+Type" />
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="encoded" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="algorithm">To be added.</param>
        <param name="format">To be added.</param>
        <param name="encoded">To be added.</param>
        <summary>Constructs a new instance of <c>KeyRep</c> with the specified arguments.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new instance of <c>KeyRep</c> with the specified arguments.
 The arguments should be obtained from the <c>Key</c> object that has to
 be serialized.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/security/KeyRep.html#KeyRep(java.security.KeyRep.Type, java.lang.String, java.lang.String, byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>type, algorithm, format or encoded</c> is <c>null</c>
             .
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadResolve">
      <MemberSignature Language="C#" Value="protected virtual Java.Lang.Object ReadResolve ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Lang.Object ReadResolve() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readResolve", "()Ljava/lang/Object;", "GetReadResolveHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resolves and returns the <c>Key</c> object.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Resolves and returns the <c>Key</c> object. Three <c><see cref="T:Java.Security.KeyRep+Type" /></c>|format
 combinations are supported:
 <list type="bullet"><item><term><c>Type.PRIVATE</c> | "PKCS#8" : returns a <c><see cref="T:Java.Security.PrivateKey" /></c>
 instance, generated from a key factory (suitable for the algorithm) that
 is initialized with a <c><see cref="T:Java.Security.Spec.PKCS8EncodedKeySpec" /></c> using the encoded key
 bytes.
 </term></item><item><term><c>Type.SECRET</c> | "RAW" : returns a <c><see cref="T:Javax.Crypto.Spec.SecretKeySpec" /></c>
 instance, created with the encoded key bytes and the algorithm.
 </term></item><item><term><c>Type.PUBLIC</c> | "X.509": returns a <c><see cref="T:Java.Security.PublicKey" /></c> instance,
 generated from a key factory (suitable for the algorithm) that is
 initialized with a <c><see cref="T:Java.Security.Spec.X509EncodedKeySpec" /></c> using the encoded key
 bytes.
 </term></item></list></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/security/KeyRep.html#readResolve()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.ObjectStreamException">if the <c>Type</c>|format combination is not recognized, or
             the resolution of any key parameter fails.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
