<Type Name="LayoutAnimationController" FullName="Android.Views.Animations.LayoutAnimationController">
  <TypeSignature Language="C#" Value="public class LayoutAnimationController : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LayoutAnimationController extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/view/animation/LayoutAnimationController", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A layout animation controller is used to animated a layout's, or a view
 group's, children.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">A layout animation controller is used to animated a layout's, or a view
 group's, children. Each child uses the same animation but for every one of
 them, the animation starts at a different time. A layout animation controller
 is used by <c><see cref="T:Android.Views.ViewGroup" /></c> to compute the delay by which each
 child's animation start must be offset. The delay is computed by using
 characteristics of each child, like its index in the view group.

 This standard implementation computes the delay by multiplying a fixed
 amount of miliseconds by the index of the child in its parent view group.
 Subclasses are supposed to override
 <c><see cref="M:Android.Views.Animations.LayoutAnimationController.GetDelayForView(Android.Views.View)" /></c> to implement a different way
 of computing the delay. For instance, a
 <c><see cref="T:Android.Views.Animations.GridLayoutAnimationController" /></c> will compute the
 delay based on the column and row indices of the child in its parent view
 group.

 Information used to compute the animation delay of each child are stored
 in an instance of
 <c><see cref="!:NoType:android/view/animation/LayoutAnimationController$AnimationParameters;Href=../../../../reference/android/view/animation/LayoutAnimationController.AnimationParameters.html" /></c>,
 itself stored in the <c><see cref="!:NoType:android/view/ViewGroup$LayoutParams;Href=../../../../reference/android/view/ViewGroup.LayoutParams.html" /></c> of the view.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/view/animation/LayoutAnimationController.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LayoutAnimationController (Android.Views.Animations.Animation animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Views.Animations.Animation animation) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/view/animation/Animation;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="animation" Type="Android.Views.Animations.Animation" />
      </Parameters>
      <Docs>
        <param name="animation">To be added.</param>
        <summary>Creates a new layout animation controller with a delay of 50%
 and the specified animation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new layout animation controller with a delay of 50%
 and the specified animation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/LayoutAnimationController.html#LayoutAnimationController(android.view.animation.Animation)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LayoutAnimationController (Android.Content.Context context, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>Creates a new layout animation controller from external resources.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new layout animation controller from external resources.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/LayoutAnimationController.html#LayoutAnimationController(android.content.Context, android.util.AttributeSet)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LayoutAnimationController (Android.Views.Animations.Animation animation, float delay);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Views.Animations.Animation animation, float32 delay) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/view/animation/Animation;F)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="animation" Type="Android.Views.Animations.Animation" />
        <Parameter Name="delay" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="animation">To be added.</param>
        <param name="delay">To be added.</param>
        <summary>Creates a new layout animation controller with the specified delay
 and the specified animation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new layout animation controller with the specified delay
 and the specified animation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/LayoutAnimationController.html#LayoutAnimationController(android.view.animation.Animation, float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LayoutAnimationController (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Animation">
      <MemberSignature Language="C#" Value="public virtual Android.Views.Animations.Animation Animation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.Animations.Animation Animation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAnimation", "()Landroid/view/animation/Animation;", "GetGetAnimationHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setAnimation", "(Landroid/view/animation/Animation;)V", "GetSetAnimation_Landroid_view_animation_Animation_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Animations.Animation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the animation applied to each child of the view group on which
 this controller is set.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/view/animation/LayoutAnimationController.html#getAnimation()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the animation applied to each child of the view group on which
 this controller is set.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/view/animation/LayoutAnimationController.html#setAnimation(android.view.animation.Animation)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the animation to be run on each child of the view group on which
 this layout animation controller is .</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.Animations.LayoutAnimationController.SetAnimation(Android.Content.Context, System.Int32)" />
        <altmember cref="P:Android.Views.Animations.LayoutAnimationController.Animation" />
        <altmember cref="M:Android.Views.Animations.LayoutAnimationController.SetAnimation(Android.Content.Context, System.Int32)" />
        <altmember cref="P:Android.Views.Animations.LayoutAnimationController.Animation" />
      </Docs>
    </Member>
    <Member MemberName="Delay">
      <MemberSignature Language="C#" Value="public virtual float Delay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Delay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDelay", "()F", "GetGetDelayHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setDelay", "(F)V", "GetSetDelay_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the delay by which the children's animation are offset.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/view/animation/LayoutAnimationController.html#getDelay()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the delay by which the children's animation are offset. The
 delay is expressed as a fraction of the animation duration.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/view/animation/LayoutAnimationController.html#setDelay(float)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the delay, as a fraction of the animation duration, by which the
 children's animations are offset. The general formula is:

 <example><code lang="java">
 child animation delay = child index * delay * animation duration
 </code></example></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.Animations.LayoutAnimationController.Delay" />
        <altmember cref="P:Android.Views.Animations.LayoutAnimationController.Delay" />
      </Docs>
    </Member>
    <Member MemberName="GetAnimationForView">
      <MemberSignature Language="C#" Value="public Android.Views.Animations.Animation GetAnimationForView (Android.Views.View view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Views.Animations.Animation GetAnimationForView(class Android.Views.View view) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getAnimationForView", "(Landroid/view/View;)Landroid/view/animation/Animation;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Animations.Animation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="view">the view to animate</param>
        <summary>Returns the animation to be applied to the specified view.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the animation to be applied to the specified view. The returned
 animation is delayed by an offset computed according to the information
 provided by
 <c><see cref="!:NoType:android/view/animation/LayoutAnimationController$AnimationParameters;Href=../../../../reference/android/view/animation/LayoutAnimationController.AnimationParameters.html" /></c>.
 This method is called by view groups to obtain the animation to set on
 a specific child.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/LayoutAnimationController.html#getAnimationForView(android.view.View)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.Animations.LayoutAnimationController.Delay" />
        <altmember cref="P:Android.Views.Animations.LayoutAnimationController.Delay" />
        <altmember cref="M:Android.Views.Animations.LayoutAnimationController.GetDelayForView(Android.Views.View)" />
      </Docs>
    </Member>
    <Member MemberName="GetDelayForView">
      <MemberSignature Language="C#" Value="protected virtual long GetDelayForView (Android.Views.View view);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int64 GetDelayForView(class Android.Views.View view) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDelayForView", "(Landroid/view/View;)J", "GetGetDelayForView_Landroid_view_View_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="view">the view for which to obtain the animation's delay</param>
        <summary>Returns the amount of milliseconds by which the specified view's
 animation must be delayed or offset.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the amount of milliseconds by which the specified view's
 animation must be delayed or offset. Subclasses should override this
 method to return a suitable value.

 This implementation returns <c>child animation delay</c>
 milliseconds where:

 <example><code lang="java">
 child animation delay = child index * delay
 </code></example>

 The index is retrieved from the
 <c><see cref="!:NoType:android/view/animation/LayoutAnimationController$AnimationParameters;Href=../../../../reference/android/view/animation/LayoutAnimationController.AnimationParameters.html" /></c>
 found in the view's <c><see cref="!:NoType:android/view/ViewGroup$LayoutParams;Href=../../../../reference/android/view/ViewGroup.LayoutParams.html" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/LayoutAnimationController.html#getDelayForView(android.view.View)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.Animations.LayoutAnimationController.GetAnimationForView(Android.Views.View)" />
        <altmember cref="P:Android.Views.Animations.LayoutAnimationController.Delay" />
        <altmember cref="M:Android.Views.Animations.LayoutAnimationController.GetTransformedIndex(.AnimationParameters)" />
      </Docs>
    </Member>
    <Member MemberName="GetTransformedIndex">
      <MemberSignature Language="C#" Value="protected virtual int GetTransformedIndex (Android.Views.Animations.LayoutAnimationController.AnimationParameters params);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 GetTransformedIndex(class Android.Views.Animations.LayoutAnimationController/AnimationParameters params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getTransformedIndex", "(Landroid/view/animation/LayoutAnimationController$AnimationParameters;)I", "GetGetTransformedIndex_Landroid_view_animation_LayoutAnimationController_AnimationParameters_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="params" Type="Android.Views.Animations.LayoutAnimationController+AnimationParameters" />
      </Parameters>
      <Docs>
        <param name="params">the animation parameters containing the index</param>
        <summary>Transforms the index stored in
 <c><see cref="!:NoType:android/view/animation/LayoutAnimationController$AnimationParameters;Href=../../../../reference/android/view/animation/LayoutAnimationController.AnimationParameters.html" /></c>
 by the order returned by <c><see cref="P:Android.Views.Animations.LayoutAnimationController.Order" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Transforms the index stored in
 <c><see cref="!:NoType:android/view/animation/LayoutAnimationController$AnimationParameters;Href=../../../../reference/android/view/animation/LayoutAnimationController.AnimationParameters.html" /></c>
 by the order returned by <c><see cref="P:Android.Views.Animations.LayoutAnimationController.Order" /></c>. Subclasses should override
 this method to provide additional support for other types of ordering.
 This method should be invoked by
 <c><see cref="M:Android.Views.Animations.LayoutAnimationController.GetDelayForView(Android.Views.View)" /></c> prior to any computation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/LayoutAnimationController.html#getTransformedIndex(android.view.animation.LayoutAnimationController.AnimationParameters)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Interpolator">
      <MemberSignature Language="C#" Value="public virtual Android.Views.Animations.IInterpolator Interpolator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.Animations.IInterpolator Interpolator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getInterpolator", "()Landroid/view/animation/Interpolator;", "GetGetInterpolatorHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setInterpolator", "(Landroid/view/animation/Interpolator;)V", "GetSetInterpolator_Landroid_view_animation_Interpolator_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Animations.IInterpolator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the interpolator used to interpolate the delays between the
 children.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/view/animation/LayoutAnimationController.html#getInterpolator()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the interpolator used to interpolate the delays between the
 children.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/view/animation/LayoutAnimationController.html#setInterpolator(android.view.animation.Interpolator)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the interpolator used to interpolate the delays between the
 children.</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.Animations.LayoutAnimationController.Interpolator" />
        <altmember cref="P:Android.Views.Animations.LayoutAnimationController.Interpolator" />
      </Docs>
    </Member>
    <Member MemberName="IsDone">
      <MemberSignature Language="C#" Value="public virtual bool IsDone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isDone", "()Z", "GetIsDoneHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether the layout animation is over or not.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates whether the layout animation is over or not. A layout animation
 is considered done when the animation with the longest delay is done.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/LayoutAnimationController.html#isDone()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MAnimation">
      <MemberSignature Language="C#" Value="protected Android.Views.Animations.Animation MAnimation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.Animations.Animation MAnimation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("mAnimation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Animations.Animation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The animation applied on each child of the view group on which this
 layout animation controller is set.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">The animation applied on each child of the view group on which this
 layout animation controller is set.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/LayoutAnimationController.html#mAnimation" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MInterpolator">
      <MemberSignature Language="C#" Value="protected Android.Views.Animations.IInterpolator MInterpolator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.Animations.IInterpolator MInterpolator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("mInterpolator")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Animations.IInterpolator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The interpolator used to interpolate the delays.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">The interpolator used to interpolate the delays.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/LayoutAnimationController.html#mInterpolator" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MRandomizer">
      <MemberSignature Language="C#" Value="protected Java.Util.Random MRandomizer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.Random MRandomizer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("mRandomizer")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Random</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The randomizer used when the order is set to random.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">The randomizer used when the order is set to random. Subclasses should
 use this object to avoid creating their own.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/LayoutAnimationController.html#mRandomizer" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public virtual Android.Views.Animations.DelayOrder Order { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.Animations.DelayOrder Order" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getOrder", "()I", "GetGetOrderHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setOrder", "(I)V", "GetSetOrder_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Animations.DelayOrder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the order used to compute the delay of each child's animation.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/view/animation/LayoutAnimationController.html#getOrder()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the order used to compute the delay of each child's animation.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/view/animation/LayoutAnimationController.html#setOrder(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the order used to compute the delay of each child's animation.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetAnimation">
      <MemberSignature Language="C#" Value="public virtual void SetAnimation (Android.Content.Context context, int resourceID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAnimation(class Android.Content.Context context, int32 resourceID) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAnimation", "(Landroid/content/Context;I)V", "GetSetAnimation_Landroid_content_Context_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="resourceID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">the context from which the animation must be inflated</param>
        <param name="resourceID">the resource identifier of the animation</param>
        <summary>Sets the animation to be run on each child of the view group on which
 this layout animation controller is .</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the animation to be run on each child of the view group on which
 this layout animation controller is .</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/LayoutAnimationController.html#setAnimation(android.content.Context, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.Animations.LayoutAnimationController.Animation" />
        <altmember cref="P:Android.Views.Animations.LayoutAnimationController.Animation" />
      </Docs>
    </Member>
    <Member MemberName="SetInterpolator">
      <MemberSignature Language="C#" Value="public virtual void SetInterpolator (Android.Content.Context context, int resourceID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInterpolator(class Android.Content.Context context, int32 resourceID) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setInterpolator", "(Landroid/content/Context;I)V", "GetSetInterpolator_Landroid_content_Context_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="resourceID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">the context from which the interpolator must be inflated</param>
        <param name="resourceID">the resource identifier of the interpolator</param>
        <summary>Sets the interpolator used to interpolate the delays between the
 children.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the interpolator used to interpolate the delays between the
 children.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/LayoutAnimationController.html#setInterpolator(android.content.Context, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.Animations.LayoutAnimationController.Interpolator" />
        <altmember cref="P:Android.Views.Animations.LayoutAnimationController.Interpolator" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public virtual void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Start() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("start", "()V", "GetStartHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Starts the animation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Starts the animation.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/LayoutAnimationController.html#start()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WillOverlap">
      <MemberSignature Language="C#" Value="public virtual bool WillOverlap ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WillOverlap() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("willOverlap", "()Z", "GetWillOverlapHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indicates whether two children's animations will overlap.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates whether two children's animations will overlap. Animations
 overlap when the delay is lower than 100% (or 1.0).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/LayoutAnimationController.html#willOverlap()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>