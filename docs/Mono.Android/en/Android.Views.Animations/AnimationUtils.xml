<Type Name="AnimationUtils" FullName="Android.Views.Animations.AnimationUtils">
  <TypeSignature Language="C#" Value="public class AnimationUtils : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AnimationUtils extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/view/animation/AnimationUtils", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Defines common utilities for working with animations.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Defines common utilities for working with animations.

</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/view/animation/AnimationUtils.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnimationUtils ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary></summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/AnimationUtils.html#AnimationUtils()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AnimationUtils (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentAnimationTimeMillis">
      <MemberSignature Language="C#" Value="public static long CurrentAnimationTimeMillis ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 CurrentAnimationTimeMillis() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("currentAnimationTimeMillis", "()J", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the current animation time in milliseconds.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the current animation time in milliseconds. This time should be used when invoking
 <c><see cref="P:Android.Views.Animations.Animation.StartTime" /></c>. Refer to <c><see cref="T:Android.OS.SystemClock" /></c> for more
 information about the different available clocks. The clock used by this method is
 <i>not</i> the "wall" clock (it is not <c><see cref="M:Java.Lang.JavaSystem.CurrentTimeMillis" /></c>).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/AnimationUtils.html#currentAnimationTimeMillis()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.OS.SystemClock" />
      </Docs>
    </Member>
    <Member MemberName="LoadAnimation">
      <MemberSignature Language="C#" Value="public static Android.Views.Animations.Animation LoadAnimation (Android.Content.Context context, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Views.Animations.Animation LoadAnimation(class Android.Content.Context context, int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("loadAnimation", "(Landroid/content/Context;I)Landroid/view/animation/Animation;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Animations.Animation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">Application context used to access resources</param>
        <param name="id">The resource id of the animation to load</param>
        <summary>Loads an <c><see cref="T:Android.Views.Animations.Animation" /></c> object from a resource</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Loads an <c><see cref="T:Android.Views.Animations.Animation" /></c> object from a resource</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/AnimationUtils.html#loadAnimation(android.content.Context, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/res/Resources$NotFoundException;Href=../../../../reference/android/content/res/Resources.NotFoundException.html">when the animation cannot be loaded
</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadInterpolator">
      <MemberSignature Language="C#" Value="public static Android.Views.Animations.IInterpolator LoadInterpolator (Android.Content.Context context, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Views.Animations.IInterpolator LoadInterpolator(class Android.Content.Context context, int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("loadInterpolator", "(Landroid/content/Context;I)Landroid/view/animation/Interpolator;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Animations.IInterpolator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">Application context used to access resources</param>
        <param name="id">The resource id of the animation to load</param>
        <summary>Loads an <c><see cref="T:Android.Views.Animations.IInterpolator" /></c> object from a resource</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Loads an <c><see cref="T:Android.Views.Animations.IInterpolator" /></c> object from a resource</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/AnimationUtils.html#loadInterpolator(android.content.Context, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/res/Resources$NotFoundException;Href=../../../../reference/android/content/res/Resources.NotFoundException.html" />
      </Docs>
    </Member>
    <Member MemberName="LoadLayoutAnimation">
      <MemberSignature Language="C#" Value="public static Android.Views.Animations.LayoutAnimationController LoadLayoutAnimation (Android.Content.Context context, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Views.Animations.LayoutAnimationController LoadLayoutAnimation(class Android.Content.Context context, int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("loadLayoutAnimation", "(Landroid/content/Context;I)Landroid/view/animation/LayoutAnimationController;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Animations.LayoutAnimationController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">Application context used to access resources</param>
        <param name="id">The resource id of the animation to load</param>
        <summary>Loads a <c><see cref="T:Android.Views.Animations.LayoutAnimationController" /></c> object from a resource</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Loads a <c><see cref="T:Android.Views.Animations.LayoutAnimationController" /></c> object from a resource</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/AnimationUtils.html#loadLayoutAnimation(android.content.Context, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/res/Resources$NotFoundException;Href=../../../../reference/android/content/res/Resources.NotFoundException.html">when the layout animation controller cannot be loaded
</exception>
      </Docs>
    </Member>
    <Member MemberName="MakeInAnimation">
      <MemberSignature Language="C#" Value="public static Android.Views.Animations.Animation MakeInAnimation (Android.Content.Context c, bool fromLeft);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Views.Animations.Animation MakeInAnimation(class Android.Content.Context c, bool fromLeft) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("makeInAnimation", "(Landroid/content/Context;Z)Landroid/view/animation/Animation;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Animations.Animation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Android.Content.Context" />
        <Parameter Name="fromLeft" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="c">Context for loading resources</param>
        <param name="fromLeft">is the object to be animated coming from the left</param>
        <summary>Make an animation for objects becoming visible.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Make an animation for objects becoming visible. Uses a slide and fade
 effect.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/AnimationUtils.html#makeInAnimation(android.content.Context, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MakeInChildBottomAnimation">
      <MemberSignature Language="C#" Value="public static Android.Views.Animations.Animation MakeInChildBottomAnimation (Android.Content.Context c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Views.Animations.Animation MakeInChildBottomAnimation(class Android.Content.Context c) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("makeInChildBottomAnimation", "(Landroid/content/Context;)Landroid/view/animation/Animation;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Animations.Animation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="c">Context for loading resources</param>
        <summary>Make an animation for objects becoming visible.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Make an animation for objects becoming visible. Uses a slide up and fade
 effect.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/AnimationUtils.html#makeInChildBottomAnimation(android.content.Context)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MakeOutAnimation">
      <MemberSignature Language="C#" Value="public static Android.Views.Animations.Animation MakeOutAnimation (Android.Content.Context c, bool toRight);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Views.Animations.Animation MakeOutAnimation(class Android.Content.Context c, bool toRight) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("makeOutAnimation", "(Landroid/content/Context;Z)Landroid/view/animation/Animation;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Animations.Animation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Android.Content.Context" />
        <Parameter Name="toRight" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="c">Context for loading resources</param>
        <param name="toRight">is the object to be animated exiting to the right</param>
        <summary>Make an animation for objects becoming invisible.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Make an animation for objects becoming invisible. Uses a slide and fade
 effect.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/animation/AnimationUtils.html#makeOutAnimation(android.content.Context, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>