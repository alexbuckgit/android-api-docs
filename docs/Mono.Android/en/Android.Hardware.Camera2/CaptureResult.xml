<Type Name="CaptureResult" FullName="Android.Hardware.Camera2.CaptureResult">
  <TypeSignature Language="C#" Value="public class CaptureResult : Android.Hardware.Camera2.CameraMetadata" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CaptureResult extends Android.Hardware.Camera2.CameraMetadata" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Hardware.Camera2.CameraMetadata</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/hardware/camera2/CaptureResult", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="21">
    <summary>
    </summary>
    <remarks />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CaptureResult (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="BlackLevelLock">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key BlackLevelLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key BlackLevelLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("BLACK_LEVEL_LOCK")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.BlackLevelLock" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
      </Docs>
    </Member>
    <Member MemberName="ColorCorrectionAberrationMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key ColorCorrectionAberrationMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key ColorCorrectionAberrationMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("COLOR_CORRECTION_ABERRATION_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.ColorCorrectionAvailableAberrationModes" />
      </Docs>
    </Member>
    <Member MemberName="ColorCorrectionGains">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key ColorCorrectionGains { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key ColorCorrectionGains" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("COLOR_CORRECTION_GAINS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ColorCorrectionMode" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
      </Docs>
    </Member>
    <Member MemberName="ColorCorrectionMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key ColorCorrectionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key ColorCorrectionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("COLOR_CORRECTION_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <example>
            <code lang="java">android.colorCorrection.gains = [ R G_even G_odd B ]
 </code>
          </example>
          <example>
            <code lang="java">android.colorCorrection.transform = [ I0 I1 I2 I3 I4 I5 I6 I7 I8 ]
 </code>
          </example>
          <example>
            <code lang="java">r' = I0r + I1g + I2b
 g' = I3r + I4g + I5b
 b' = I6r + I7g + I8b
 </code>
          </example>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ColorCorrectionGains" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ColorCorrectionTransform" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAwbMode" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
      </Docs>
    </Member>
    <Member MemberName="ColorCorrectionTransform">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key ColorCorrectionTransform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key ColorCorrectionTransform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("COLOR_CORRECTION_TRANSFORM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ColorCorrectionMode" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
      </Docs>
    </Member>
    <Member MemberName="ControlAeAntibandingMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key ControlAeAntibandingMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key ControlAeAntibandingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_AE_ANTIBANDING_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlAeAvailableAntibandingModes" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlMode" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureResult.StatisticsSceneFlicker" />
      </Docs>
    </Member>
    <Member MemberName="ControlAeExposureCompensation">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key ControlAeExposureCompensation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key ControlAeExposureCompensation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_AE_EXPOSURE_COMPENSATION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlAeCompensationRange" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlAeCompensationStep" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeLock" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureResult.ControlAeState" />
      </Docs>
    </Member>
    <Member MemberName="ControlAeLock">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key ControlAeLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key ControlAeLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_AE_LOCK")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <list type="number">
            <item>
              <term>Starting in auto-AE mode:</term>
            </item>
            <item>
              <term>Lock AE</term>
            </item>
            <item>
              <term>Wait for the first result to be output that has the AE locked</term>
            </item>
            <item>
              <term>Copy exposure settings from that result into a request, set the request to manual AE</term>
            </item>
            <item>
              <term>Submit the capture request, proceed to run manual AE as desired.</term>
            </item>
          </list>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeExposureCompensation" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAePrecaptureTrigger" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureResult.ControlAeState" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.SensorExposureTime" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.SensorSensitivity" />
      </Docs>
    </Member>
    <Member MemberName="ControlAeMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key ControlAeMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key ControlAeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_AE_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlAeAvailableModes" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlMode" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.FlashInfoAvailable" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.FlashMode" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.SensorExposureTime" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.SensorFrameDuration" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.SensorSensitivity" />
      </Docs>
    </Member>
    <Member MemberName="ControlAePrecaptureTrigger">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key ControlAePrecaptureTrigger { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key ControlAePrecaptureTrigger" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_AE_PRECAPTURE_TRIGGER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeLock" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureResult.ControlAeState" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAfTrigger" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlCaptureIntent" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
      </Docs>
    </Member>
    <Member MemberName="ControlAeRegions">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key ControlAeRegions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key ControlAeRegions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_AE_REGIONS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlMaxRegionsAe" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ScalerCropRegion" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorInfoActiveArraySize" />
      </Docs>
    </Member>
    <Member MemberName="ControlAeState">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key ControlAeState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key ControlAeState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_AE_STATE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <format type="text/html">
            <table>
              <thead>
                <tr>
                  <th align="center">State</th>
                  <th align="center">Transition Cause</th>
                  <th align="center">New State</th>
                  <th align="center">Notes</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td align="center">INACTIVE</td>
                  <td align="center" />
                  <td align="center">INACTIVE</td>
                  <td align="center">Camera device auto exposure algorithm is disabled</td>
                </tr>
              </tbody>
            </table>
          </format>
          <format type="text/html">
            <table>
              <thead>
                <tr>
                  <th align="center">State</th>
                  <th align="center">Transition Cause</th>
                  <th align="center">New State</th>
                  <th align="center">Notes</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td align="center">INACTIVE</td>
                  <td align="center">Camera device initiates AE scan</td>
                  <td align="center">SEARCHING</td>
                  <td align="center">Values changing</td>
                </tr>
                <tr>
                  <td align="center">INACTIVE</td>
                  <td align="center">
                    <c>
                      <see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeLock" />
                    </c> is ON</td>
                  <td align="center">LOCKED</td>
                  <td align="center">Values locked</td>
                </tr>
                <tr>
                  <td align="center">SEARCHING</td>
                  <td align="center">Camera device finishes AE scan</td>
                  <td align="center">CONVERGED</td>
                  <td align="center">Good values, not changing</td>
                </tr>
                <tr>
                  <td align="center">SEARCHING</td>
                  <td align="center">Camera device finishes AE scan</td>
                  <td align="center">FLASH_REQUIRED</td>
                  <td align="center">Converged but too dark w/o flash</td>
                </tr>
                <tr>
                  <td align="center">SEARCHING</td>
                  <td align="center">
                    <c>
                      <see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeLock" />
                    </c> is ON</td>
                  <td align="center">LOCKED</td>
                  <td align="center">Values locked</td>
                </tr>
                <tr>
                  <td align="center">CONVERGED</td>
                  <td align="center">Camera device initiates AE scan</td>
                  <td align="center">SEARCHING</td>
                  <td align="center">Values changing</td>
                </tr>
                <tr>
                  <td align="center">CONVERGED</td>
                  <td align="center">
                    <c>
                      <see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeLock" />
                    </c> is ON</td>
                  <td align="center">LOCKED</td>
                  <td align="center">Values locked</td>
                </tr>
                <tr>
                  <td align="center">FLASH_REQUIRED</td>
                  <td align="center">Camera device initiates AE scan</td>
                  <td align="center">SEARCHING</td>
                  <td align="center">Values changing</td>
                </tr>
                <tr>
                  <td align="center">FLASH_REQUIRED</td>
                  <td align="center">
                    <c>
                      <see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeLock" />
                    </c> is ON</td>
                  <td align="center">LOCKED</td>
                  <td align="center">Values locked</td>
                </tr>
                <tr>
                  <td align="center">LOCKED</td>
                  <td align="center">
                    <c>
                      <see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeLock" />
                    </c> is OFF</td>
                  <td align="center">SEARCHING</td>
                  <td align="center">Values not good after unlock</td>
                </tr>
                <tr>
                  <td align="center">LOCKED</td>
                  <td align="center">
                    <c>
                      <see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeLock" />
                    </c> is OFF</td>
                  <td align="center">CONVERGED</td>
                  <td align="center">Values good after unlock</td>
                </tr>
                <tr>
                  <td align="center">LOCKED</td>
                  <td align="center">
                    <c>
                      <see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeLock" />
                    </c> is OFF</td>
                  <td align="center">FLASH_REQUIRED</td>
                  <td align="center">Exposure good, but too dark</td>
                </tr>
                <tr>
                  <td align="center">PRECAPTURE</td>
                  <td align="center">Sequence done. <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeLock" /></c> is OFF</td>
                  <td align="center">CONVERGED</td>
                  <td align="center">Ready for high-quality capture</td>
                </tr>
                <tr>
                  <td align="center">PRECAPTURE</td>
                  <td align="center">Sequence done. <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeLock" /></c> is ON</td>
                  <td align="center">LOCKED</td>
                  <td align="center">Ready for high-quality capture</td>
                </tr>
                <tr>
                  <td align="center">LOCKED</td>
                  <td align="center">aeLock is ON and aePrecaptureTrigger is START</td>
                  <td align="center">LOCKED</td>
                  <td align="center">Precapture trigger is ignored when AE is already locked</td>
                </tr>
                <tr>
                  <td align="center">LOCKED</td>
                  <td align="center">aeLock is ON and aePrecaptureTrigger is CANCEL</td>
                  <td align="center">LOCKED</td>
                  <td align="center">Precapture trigger is ignored when AE is already locked</td>
                </tr>
                <tr>
                  <td align="center">Any state (excluding LOCKED)</td>
                  <td align="center">
                    <c>
                      <see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAePrecaptureTrigger" />
                    </c> is START</td>
                  <td align="center">PRECAPTURE</td>
                  <td align="center">Start AE precapture metering sequence</td>
                </tr>
                <tr>
                  <td align="center">Any state (excluding LOCKED)</td>
                  <td align="center">
                    <c>
                      <see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAePrecaptureTrigger" />
                    </c> is CANCEL</td>
                  <td align="center">INACTIVE</td>
                  <td align="center">Currently active precapture metering sequence is canceled</td>
                </tr>
              </tbody>
            </table>
          </format>
          <format type="text/html">
            <table>
              <thead>
                <tr>
                  <th align="center">State</th>
                  <th align="center">Transition Cause</th>
                  <th align="center">New State</th>
                  <th align="center">Notes</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td align="center">INACTIVE</td>
                  <td align="center">Camera device finished AE scan</td>
                  <td align="center">CONVERGED</td>
                  <td align="center">Values are already good, transient states are skipped by camera device.</td>
                </tr>
                <tr>
                  <td align="center">Any state (excluding LOCKED)</td>
                  <td align="center">
                    <c>
                      <see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAePrecaptureTrigger" />
                    </c> is START, sequence done</td>
                  <td align="center">FLASH_REQUIRED</td>
                  <td align="center">Converged but too dark w/o flash after a precapture sequence, transient states are skipped by camera device.</td>
                </tr>
                <tr>
                  <td align="center">Any state (excluding LOCKED)</td>
                  <td align="center">
                    <c>
                      <see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAePrecaptureTrigger" />
                    </c> is START, sequence done</td>
                  <td align="center">CONVERGED</td>
                  <td align="center">Converged after a precapture sequence, transient states are skipped by camera device.</td>
                </tr>
                <tr>
                  <td align="center">Any state (excluding LOCKED)</td>
                  <td align="center">
                    <c>
                      <see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAePrecaptureTrigger" />
                    </c> is CANCEL, converged</td>
                  <td align="center">FLASH_REQUIRED</td>
                  <td align="center">Converged but too dark w/o flash after a precapture sequence is canceled, transient states are skipped by camera device.</td>
                </tr>
                <tr>
                  <td align="center">Any state (excluding LOCKED)</td>
                  <td align="center">
                    <c>
                      <see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAePrecaptureTrigger" />
                    </c> is CANCEL, converged</td>
                  <td align="center">CONVERGED</td>
                  <td align="center">Converged after a precapture sequenceis canceled, transient states are skipped by camera device.</td>
                </tr>
                <tr>
                  <td align="center">CONVERGED</td>
                  <td align="center">Camera device finished AE scan</td>
                  <td align="center">FLASH_REQUIRED</td>
                  <td align="center">Converged but too dark w/o flash after a new scan, transient states are skipped by camera device.</td>
                </tr>
                <tr>
                  <td align="center">FLASH_REQUIRED</td>
                  <td align="center">Camera device finished AE scan</td>
                  <td align="center">CONVERGED</td>
                  <td align="center">Converged after a new scan, transient states are skipped by camera device.</td>
                </tr>
              </tbody>
            </table>
          </format>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeLock" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAePrecaptureTrigger" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlMode" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlSceneMode" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
      </Docs>
    </Member>
    <Member MemberName="ControlAeTargetFpsRange">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key ControlAeTargetFpsRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key ControlAeTargetFpsRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_AE_TARGET_FPS_RANGE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlAeAvailableTargetFpsRanges" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.SensorExposureTime" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.SensorFrameDuration" />
      </Docs>
    </Member>
    <Member MemberName="ControlAfMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key ControlAfMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key ControlAfMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_AF_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlAfAvailableModes" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureResult.ControlAfState" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAfTrigger" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlMode" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.LensInfoMinimumFocusDistance" />
      </Docs>
    </Member>
    <Member MemberName="ControlAfRegions">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key ControlAfRegions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key ControlAfRegions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_AF_REGIONS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlMaxRegionsAf" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ScalerCropRegion" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorInfoActiveArraySize" />
      </Docs>
    </Member>
    <Member MemberName="ControlAfState">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key ControlAfState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key ControlAfState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_AF_STATE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <format type="text/html">
            <table>
              <thead>
                <tr>
                  <th align="center">State</th>
                  <th align="center">Transition Cause</th>
                  <th align="center">New State</th>
                  <th align="center">Notes</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td align="center">INACTIVE</td>
                  <td align="center" />
                  <td align="center">INACTIVE</td>
                  <td align="center">Never changes</td>
                </tr>
              </tbody>
            </table>
          </format>
          <format type="text/html">
            <table>
              <thead>
                <tr>
                  <th align="center">State</th>
                  <th align="center">Transition Cause</th>
                  <th align="center">New State</th>
                  <th align="center">Notes</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td align="center">INACTIVE</td>
                  <td align="center">AF_TRIGGER</td>
                  <td align="center">ACTIVE_SCAN</td>
                  <td align="center">Start AF sweep, Lens now moving</td>
                </tr>
                <tr>
                  <td align="center">ACTIVE_SCAN</td>
                  <td align="center">AF sweep done</td>
                  <td align="center">FOCUSED_LOCKED</td>
                  <td align="center">Focused, Lens now locked</td>
                </tr>
                <tr>
                  <td align="center">ACTIVE_SCAN</td>
                  <td align="center">AF sweep done</td>
                  <td align="center">NOT_FOCUSED_LOCKED</td>
                  <td align="center">Not focused, Lens now locked</td>
                </tr>
                <tr>
                  <td align="center">ACTIVE_SCAN</td>
                  <td align="center">AF_CANCEL</td>
                  <td align="center">INACTIVE</td>
                  <td align="center">Cancel/reset AF, Lens now locked</td>
                </tr>
                <tr>
                  <td align="center">FOCUSED_LOCKED</td>
                  <td align="center">AF_CANCEL</td>
                  <td align="center">INACTIVE</td>
                  <td align="center">Cancel/reset AF</td>
                </tr>
                <tr>
                  <td align="center">FOCUSED_LOCKED</td>
                  <td align="center">AF_TRIGGER</td>
                  <td align="center">ACTIVE_SCAN</td>
                  <td align="center">Start new sweep, Lens now moving</td>
                </tr>
                <tr>
                  <td align="center">NOT_FOCUSED_LOCKED</td>
                  <td align="center">AF_CANCEL</td>
                  <td align="center">INACTIVE</td>
                  <td align="center">Cancel/reset AF</td>
                </tr>
                <tr>
                  <td align="center">NOT_FOCUSED_LOCKED</td>
                  <td align="center">AF_TRIGGER</td>
                  <td align="center">ACTIVE_SCAN</td>
                  <td align="center">Start new sweep, Lens now moving</td>
                </tr>
                <tr>
                  <td align="center">Any state</td>
                  <td align="center">Mode change</td>
                  <td align="center">INACTIVE</td>
                  <td align="center" />
                </tr>
              </tbody>
            </table>
          </format>
          <format type="text/html">
            <table>
              <thead>
                <tr>
                  <th align="center">State</th>
                  <th align="center">Transition Cause</th>
                  <th align="center">New State</th>
                  <th align="center">Notes</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td align="center">INACTIVE</td>
                  <td align="center">AF_TRIGGER</td>
                  <td align="center">FOCUSED_LOCKED</td>
                  <td align="center">Focus is already good or good after a scan, lens is now locked.</td>
                </tr>
                <tr>
                  <td align="center">INACTIVE</td>
                  <td align="center">AF_TRIGGER</td>
                  <td align="center">NOT_FOCUSED_LOCKED</td>
                  <td align="center">Focus failed after a scan, lens is now locked.</td>
                </tr>
                <tr>
                  <td align="center">FOCUSED_LOCKED</td>
                  <td align="center">AF_TRIGGER</td>
                  <td align="center">FOCUSED_LOCKED</td>
                  <td align="center">Focus is already good or good after a scan, lens is now locked.</td>
                </tr>
                <tr>
                  <td align="center">NOT_FOCUSED_LOCKED</td>
                  <td align="center">AF_TRIGGER</td>
                  <td align="center">FOCUSED_LOCKED</td>
                  <td align="center">Focus is good after a scan, lens is not locked.</td>
                </tr>
              </tbody>
            </table>
          </format>
          <format type="text/html">
            <table>
              <thead>
                <tr>
                  <th align="center">State</th>
                  <th align="center">Transition Cause</th>
                  <th align="center">New State</th>
                  <th align="center">Notes</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td align="center">INACTIVE</td>
                  <td align="center">Camera device initiates new scan</td>
                  <td align="center">PASSIVE_SCAN</td>
                  <td align="center">Start AF scan, Lens now moving</td>
                </tr>
                <tr>
                  <td align="center">INACTIVE</td>
                  <td align="center">AF_TRIGGER</td>
                  <td align="center">NOT_FOCUSED_LOCKED</td>
                  <td align="center">AF state query, Lens now locked</td>
                </tr>
                <tr>
                  <td align="center">PASSIVE_SCAN</td>
                  <td align="center">Camera device completes current scan</td>
                  <td align="center">PASSIVE_FOCUSED</td>
                  <td align="center">End AF scan, Lens now locked</td>
                </tr>
                <tr>
                  <td align="center">PASSIVE_SCAN</td>
                  <td align="center">Camera device fails current scan</td>
                  <td align="center">PASSIVE_UNFOCUSED</td>
                  <td align="center">End AF scan, Lens now locked</td>
                </tr>
                <tr>
                  <td align="center">PASSIVE_SCAN</td>
                  <td align="center">AF_TRIGGER</td>
                  <td align="center">FOCUSED_LOCKED</td>
                  <td align="center">Immediate transition, if focus is good. Lens now locked</td>
                </tr>
                <tr>
                  <td align="center">PASSIVE_SCAN</td>
                  <td align="center">AF_TRIGGER</td>
                  <td align="center">NOT_FOCUSED_LOCKED</td>
                  <td align="center">Immediate transition, if focus is bad. Lens now locked</td>
                </tr>
                <tr>
                  <td align="center">PASSIVE_SCAN</td>
                  <td align="center">AF_CANCEL</td>
                  <td align="center">INACTIVE</td>
                  <td align="center">Reset lens position, Lens now locked</td>
                </tr>
                <tr>
                  <td align="center">PASSIVE_FOCUSED</td>
                  <td align="center">Camera device initiates new scan</td>
                  <td align="center">PASSIVE_SCAN</td>
                  <td align="center">Start AF scan, Lens now moving</td>
                </tr>
                <tr>
                  <td align="center">PASSIVE_UNFOCUSED</td>
                  <td align="center">Camera device initiates new scan</td>
                  <td align="center">PASSIVE_SCAN</td>
                  <td align="center">Start AF scan, Lens now moving</td>
                </tr>
                <tr>
                  <td align="center">PASSIVE_FOCUSED</td>
                  <td align="center">AF_TRIGGER</td>
                  <td align="center">FOCUSED_LOCKED</td>
                  <td align="center">Immediate transition, lens now locked</td>
                </tr>
                <tr>
                  <td align="center">PASSIVE_UNFOCUSED</td>
                  <td align="center">AF_TRIGGER</td>
                  <td align="center">NOT_FOCUSED_LOCKED</td>
                  <td align="center">Immediate transition, lens now locked</td>
                </tr>
                <tr>
                  <td align="center">FOCUSED_LOCKED</td>
                  <td align="center">AF_TRIGGER</td>
                  <td align="center">FOCUSED_LOCKED</td>
                  <td align="center">No effect</td>
                </tr>
                <tr>
                  <td align="center">FOCUSED_LOCKED</td>
                  <td align="center">AF_CANCEL</td>
                  <td align="center">INACTIVE</td>
                  <td align="center">Restart AF scan</td>
                </tr>
                <tr>
                  <td align="center">NOT_FOCUSED_LOCKED</td>
                  <td align="center">AF_TRIGGER</td>
                  <td align="center">NOT_FOCUSED_LOCKED</td>
                  <td align="center">No effect</td>
                </tr>
                <tr>
                  <td align="center">NOT_FOCUSED_LOCKED</td>
                  <td align="center">AF_CANCEL</td>
                  <td align="center">INACTIVE</td>
                  <td align="center">Restart AF scan</td>
                </tr>
              </tbody>
            </table>
          </format>
          <format type="text/html">
            <table>
              <thead>
                <tr>
                  <th align="center">State</th>
                  <th align="center">Transition Cause</th>
                  <th align="center">New State</th>
                  <th align="center">Notes</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td align="center">INACTIVE</td>
                  <td align="center">Camera device initiates new scan</td>
                  <td align="center">PASSIVE_SCAN</td>
                  <td align="center">Start AF scan, Lens now moving</td>
                </tr>
                <tr>
                  <td align="center">INACTIVE</td>
                  <td align="center">AF_TRIGGER</td>
                  <td align="center">NOT_FOCUSED_LOCKED</td>
                  <td align="center">AF state query, Lens now locked</td>
                </tr>
                <tr>
                  <td align="center">PASSIVE_SCAN</td>
                  <td align="center">Camera device completes current scan</td>
                  <td align="center">PASSIVE_FOCUSED</td>
                  <td align="center">End AF scan, Lens now locked</td>
                </tr>
                <tr>
                  <td align="center">PASSIVE_SCAN</td>
                  <td align="center">Camera device fails current scan</td>
                  <td align="center">PASSIVE_UNFOCUSED</td>
                  <td align="center">End AF scan, Lens now locked</td>
                </tr>
                <tr>
                  <td align="center">PASSIVE_SCAN</td>
                  <td align="center">AF_TRIGGER</td>
                  <td align="center">FOCUSED_LOCKED</td>
                  <td align="center">Eventual transition once the focus is good. Lens now locked</td>
                </tr>
                <tr>
                  <td align="center">PASSIVE_SCAN</td>
                  <td align="center">AF_TRIGGER</td>
                  <td align="center">NOT_FOCUSED_LOCKED</td>
                  <td align="center">Eventual transition if cannot find focus. Lens now locked</td>
                </tr>
                <tr>
                  <td align="center">PASSIVE_SCAN</td>
                  <td align="center">AF_CANCEL</td>
                  <td align="center">INACTIVE</td>
                  <td align="center">Reset lens position, Lens now locked</td>
                </tr>
                <tr>
                  <td align="center">PASSIVE_FOCUSED</td>
                  <td align="center">Camera device initiates new scan</td>
                  <td align="center">PASSIVE_SCAN</td>
                  <td align="center">Start AF scan, Lens now moving</td>
                </tr>
                <tr>
                  <td align="center">PASSIVE_UNFOCUSED</td>
                  <td align="center">Camera device initiates new scan</td>
                  <td align="center">PASSIVE_SCAN</td>
                  <td align="center">Start AF scan, Lens now moving</td>
                </tr>
                <tr>
                  <td align="center">PASSIVE_FOCUSED</td>
                  <td align="center">AF_TRIGGER</td>
                  <td align="center">FOCUSED_LOCKED</td>
                  <td align="center">Immediate trans. Lens now locked</td>
                </tr>
                <tr>
                  <td align="center">PASSIVE_UNFOCUSED</td>
                  <td align="center">AF_TRIGGER</td>
                  <td align="center">NOT_FOCUSED_LOCKED</td>
                  <td align="center">Immediate trans. Lens now locked</td>
                </tr>
                <tr>
                  <td align="center">FOCUSED_LOCKED</td>
                  <td align="center">AF_TRIGGER</td>
                  <td align="center">FOCUSED_LOCKED</td>
                  <td align="center">No effect</td>
                </tr>
                <tr>
                  <td align="center">FOCUSED_LOCKED</td>
                  <td align="center">AF_CANCEL</td>
                  <td align="center">INACTIVE</td>
                  <td align="center">Restart AF scan</td>
                </tr>
                <tr>
                  <td align="center">NOT_FOCUSED_LOCKED</td>
                  <td align="center">AF_TRIGGER</td>
                  <td align="center">NOT_FOCUSED_LOCKED</td>
                  <td align="center">No effect</td>
                </tr>
                <tr>
                  <td align="center">NOT_FOCUSED_LOCKED</td>
                  <td align="center">AF_CANCEL</td>
                  <td align="center">INACTIVE</td>
                  <td align="center">Restart AF scan</td>
                </tr>
              </tbody>
            </table>
          </format>
          <format type="text/html">
            <table>
              <thead>
                <tr>
                  <th align="center">State</th>
                  <th align="center">Transition Cause</th>
                  <th align="center">New State</th>
                  <th align="center">Notes</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td align="center">any state</td>
                  <td align="center">CAF--&gt;AUTO mode switch</td>
                  <td align="center">INACTIVE</td>
                  <td align="center">Mode switch without trigger, initial state must be INACTIVE</td>
                </tr>
                <tr>
                  <td align="center">any state</td>
                  <td align="center">CAF--&gt;AUTO mode switch with AF_TRIGGER</td>
                  <td align="center">trigger-reachable states from INACTIVE</td>
                  <td align="center">Mode switch with trigger, INACTIVE is skipped</td>
                </tr>
                <tr>
                  <td align="center">any state</td>
                  <td align="center">AUTO--&gt;CAF mode switch</td>
                  <td align="center">passively reachable states from INACTIVE</td>
                  <td align="center">Mode switch without trigger, passive transient state is skipped</td>
                </tr>
              </tbody>
            </table>
          </format>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAfMode" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlMode" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlSceneMode" />
      </Docs>
    </Member>
    <Member MemberName="ControlAfTrigger">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key ControlAfTrigger { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key ControlAfTrigger" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_AF_TRIGGER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAePrecaptureTrigger" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureResult.ControlAfState" />
      </Docs>
    </Member>
    <Member MemberName="ControlAwbLock">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key ControlAwbLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key ControlAwbLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_AWB_LOCK")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <list type="number">
            <item>
              <term>Starting in auto-AWB mode:</term>
            </item>
            <item>
              <term>Lock AWB</term>
            </item>
            <item>
              <term>Wait for the first result to be output that has the AWB locked</term>
            </item>
            <item>
              <term>Copy AWB settings from that result into a request, set the request to manual AWB</term>
            </item>
            <item>
              <term>Submit the capture request, proceed to run manual AWB as desired.</term>
            </item>
          </list>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAwbMode" />
      </Docs>
    </Member>
    <Member MemberName="ControlAwbMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key ControlAwbMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key ControlAwbMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_AWB_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ColorCorrectionGains" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ColorCorrectionMode" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ColorCorrectionTransform" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlAwbAvailableModes" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAwbLock" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlMode" />
      </Docs>
    </Member>
    <Member MemberName="ControlAwbRegions">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key ControlAwbRegions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key ControlAwbRegions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_AWB_REGIONS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlMaxRegionsAwb" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ScalerCropRegion" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorInfoActiveArraySize" />
      </Docs>
    </Member>
    <Member MemberName="ControlAwbState">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key ControlAwbState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key ControlAwbState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_AWB_STATE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <format type="text/html">
            <table>
              <thead>
                <tr>
                  <th align="center">State</th>
                  <th align="center">Transition Cause</th>
                  <th align="center">New State</th>
                  <th align="center">Notes</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td align="center">INACTIVE</td>
                  <td align="center" />
                  <td align="center">INACTIVE</td>
                  <td align="center">Camera device auto white balance algorithm is disabled</td>
                </tr>
              </tbody>
            </table>
          </format>
          <format type="text/html">
            <table>
              <thead>
                <tr>
                  <th align="center">State</th>
                  <th align="center">Transition Cause</th>
                  <th align="center">New State</th>
                  <th align="center">Notes</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td align="center">INACTIVE</td>
                  <td align="center">Camera device initiates AWB scan</td>
                  <td align="center">SEARCHING</td>
                  <td align="center">Values changing</td>
                </tr>
                <tr>
                  <td align="center">INACTIVE</td>
                  <td align="center">
                    <c>
                      <see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAwbLock" />
                    </c> is ON</td>
                  <td align="center">LOCKED</td>
                  <td align="center">Values locked</td>
                </tr>
                <tr>
                  <td align="center">SEARCHING</td>
                  <td align="center">Camera device finishes AWB scan</td>
                  <td align="center">CONVERGED</td>
                  <td align="center">Good values, not changing</td>
                </tr>
                <tr>
                  <td align="center">SEARCHING</td>
                  <td align="center">
                    <c>
                      <see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAwbLock" />
                    </c> is ON</td>
                  <td align="center">LOCKED</td>
                  <td align="center">Values locked</td>
                </tr>
                <tr>
                  <td align="center">CONVERGED</td>
                  <td align="center">Camera device initiates AWB scan</td>
                  <td align="center">SEARCHING</td>
                  <td align="center">Values changing</td>
                </tr>
                <tr>
                  <td align="center">CONVERGED</td>
                  <td align="center">
                    <c>
                      <see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAwbLock" />
                    </c> is ON</td>
                  <td align="center">LOCKED</td>
                  <td align="center">Values locked</td>
                </tr>
                <tr>
                  <td align="center">LOCKED</td>
                  <td align="center">
                    <c>
                      <see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAwbLock" />
                    </c> is OFF</td>
                  <td align="center">SEARCHING</td>
                  <td align="center">Values not good after unlock</td>
                </tr>
              </tbody>
            </table>
          </format>
          <format type="text/html">
            <table>
              <thead>
                <tr>
                  <th align="center">State</th>
                  <th align="center">Transition Cause</th>
                  <th align="center">New State</th>
                  <th align="center">Notes</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td align="center">INACTIVE</td>
                  <td align="center">Camera device finished AWB scan</td>
                  <td align="center">CONVERGED</td>
                  <td align="center">Values are already good, transient states are skipped by camera device.</td>
                </tr>
                <tr>
                  <td align="center">LOCKED</td>
                  <td align="center">
                    <c>
                      <see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAwbLock" />
                    </c> is OFF</td>
                  <td align="center">CONVERGED</td>
                  <td align="center">Values good after unlock, transient states are skipped by camera device.</td>
                </tr>
              </tbody>
            </table>
          </format>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAwbLock" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAwbMode" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlMode" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlSceneMode" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
      </Docs>
    </Member>
    <Member MemberName="ControlCaptureIntent">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key ControlCaptureIntent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key ControlCaptureIntent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_CAPTURE_INTENT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlMode" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.RequestAvailableCapabilities" />
      </Docs>
    </Member>
    <Member MemberName="ControlEffectMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key ControlEffectMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key ControlEffectMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_EFFECT_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlAvailableEffects" />
      </Docs>
    </Member>
    <Member MemberName="ControlMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key ControlMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key ControlMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAfMode" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlAvailableModes" />
      </Docs>
    </Member>
    <Member MemberName="ControlSceneMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key ControlSceneMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key ControlSceneMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_SCENE_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAfMode" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.ControlAvailableSceneModes" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAwbMode" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlMode" />
      </Docs>
    </Member>
    <Member MemberName="ControlVideoStabilizationMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key ControlVideoStabilizationMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key ControlVideoStabilizationMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTROL_VIDEO_STABILIZATION_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.LensOpticalStabilizationMode" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ScalerCropRegion" />
      </Docs>
    </Member>
    <Member MemberName="EdgeMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key EdgeMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key EdgeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EDGE_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.EdgeAvailableEdgeModes" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ReprocessEffectiveExposureFactor" />
      </Docs>
    </Member>
    <Member MemberName="FlashMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key FlashMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key FlashMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FLASH_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAePrecaptureTrigger" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.FlashInfoAvailable" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureResult.FlashState" />
      </Docs>
    </Member>
    <Member MemberName="FlashState">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key FlashState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key FlashState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FLASH_STATE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <list type="bullet">
            <item>
              <term>Flash-less cameras always return UNAVAILABLE.</term>
            </item>
            <item>
              <term>Using <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" /></c><c>==</c> ON_ALWAYS_FLASH
    will always return FIRED.</term>
            </item>
            <item>
              <term>Using <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.FlashMode" /></c><c>==</c> TORCH
    will always return FIRED.</term>
            </item>
          </list>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.FlashInfoAvailable" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.FlashMode" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
      </Docs>
    </Member>
    <Member MemberName="FrameNumber">
      <MemberSignature Language="C#" Value="public virtual long FrameNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 FrameNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFrameNumber", "()J", "GetGetFrameNumberHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the frame number associated with this result.</summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="M:Android.Hardware.Camera2.CameraDevice.CreateCaptureRequest(Android.Hardware.Camera2.CameraTemplate)" />
        <altmember cref="M:Android.Hardware.Camera2.CameraDevice.CreateReprocessCaptureRequest(Android.Hardware.Camera2.TotalCaptureResult)" />
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object Get (Android.Hardware.Camera2.CaptureResult.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object Get(class Android.Hardware.Camera2.CaptureResult/Key key) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("get", "(Landroid/hardware/camera2/CaptureResult$Key;)Ljava/lang/Object;", "GetGet_Landroid_hardware_camera2_CaptureResult_Key_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Android.Hardware.Camera2.CaptureResult+Key" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="HotPixelMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key HotPixelMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key HotPixelMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("HOT_PIXEL_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.HotPixelAvailableHotPixelModes" />
      </Docs>
    </Member>
    <Member MemberName="JpegGpsLocation">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key JpegGpsLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key JpegGpsLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("JPEG_GPS_LOCATION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="JpegOrientation">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key JpegOrientation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key JpegOrientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("JPEG_ORIENTATION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <example>
            <code lang="java">private int getJpegOrientation(CameraCharacteristics c, int deviceOrientation) {
     if (deviceOrientation == android.view.OrientationEventListener.ORIENTATION_UNKNOWN) return 0;
     int sensorOrientation = c.get(CameraCharacteristics.SENSOR_ORIENTATION);

     // Round device orientation to a multiple of 90
     deviceOrientation = (deviceOrientation + 45) / 90 * 90;

     // Reverse device orientation for front-facing cameras
     boolean facingFront = c.get(CameraCharacteristics.LENS_FACING) == CameraCharacteristics.LENS_FACING_FRONT;
     if (facingFront) deviceOrientation = -deviceOrientation;

     // Calculate desired JPEG orientation relative to camera orientation to make
     // the image upright relative to the device orientation
     int jpegOrientation = (sensorOrientation + deviceOrientation + 360) % 360;

     return jpegOrientation;
 }
 </code>
          </example>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorOrientation" />
      </Docs>
    </Member>
    <Member MemberName="JpegQuality">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key JpegQuality { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key JpegQuality" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("JPEG_QUALITY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="JpegThumbnailQuality">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key JpegThumbnailQuality { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key JpegThumbnailQuality" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("JPEG_THUMBNAIL_QUALITY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="JpegThumbnailSize">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key JpegThumbnailSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key JpegThumbnailSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("JPEG_THUMBNAIL_SIZE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <list type="bullet">
            <item>
              <term>Set the <c><see cref="F:Android.Media.ExifInterface.TagOrientation" /></c>
   and keep jpeg and thumbnail image data unrotated.</term>
            </item>
            <item>
              <term>Rotate the jpeg and thumbnail image data and not set
   <c><see cref="F:Android.Media.ExifInterface.TagOrientation" /></c>. In this
   case, LIMITED or FULL hardware level devices will report rotated thumnail size in
   capture result, so the width and height will be interchanged if 90 or 270 degree
   orientation is requested. LEGACY device will always report unrotated thumbnail
   size.</term>
            </item>
          </list>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.JpegAvailableThumbnailSizes" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.JpegOrientation" />
      </Docs>
    </Member>
    <Member MemberName="LensAperture">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key LensAperture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key LensAperture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LENS_APERTURE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.LensInfoAvailableApertures" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureResult.LensState" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.SensorExposureTime" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.SensorFrameDuration" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.SensorSensitivity" />
      </Docs>
    </Member>
    <Member MemberName="LensFilterDensity">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key LensFilterDensity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key LensFilterDensity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LENS_FILTER_DENSITY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.LensInfoAvailableFilterDensities" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureResult.LensState" />
      </Docs>
    </Member>
    <Member MemberName="LensFocalLength">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key LensFocalLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key LensFocalLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LENS_FOCAL_LENGTH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.LensAperture" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.LensFocusDistance" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.LensInfoAvailableFocalLengths" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureResult.LensState" />
      </Docs>
    </Member>
    <Member MemberName="LensFocusDistance">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key LensFocusDistance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key LensFocusDistance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LENS_FOCUS_DISTANCE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.LensInfoFocusDistanceCalibration" />
      </Docs>
    </Member>
    <Member MemberName="LensFocusRange">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key LensFocusRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key LensFocusRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LENS_FOCUS_RANGE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.LensInfoFocusDistanceCalibration" />
      </Docs>
    </Member>
    <Member MemberName="LensOpticalStabilizationMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key LensOpticalStabilizationMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key LensOpticalStabilizationMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LENS_OPTICAL_STABILIZATION_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlVideoStabilizationMode" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.LensInfoAvailableOpticalStabilization" />
      </Docs>
    </Member>
    <Member MemberName="LensState">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key LensState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key LensState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LENS_STATE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <list type="bullet">
            <item>
              <term>Fixed focus (<c><c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.LensInfoMinimumFocusDistance" /></c> == 0</c>), which means
 <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.LensFocusDistance" /></c> parameter will always be 0.</term>
            </item>
            <item>
              <term>Fixed focal length (<c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.LensInfoAvailableFocalLengths" /></c> contains single value),
 which means the optical zoom is not supported.</term>
            </item>
            <item>
              <term>No ND filter (<c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.LensInfoAvailableFilterDensities" /></c> contains only 0).</term>
            </item>
            <item>
              <term>Fixed aperture (<c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.LensInfoAvailableApertures" /></c> contains single value).</term>
            </item>
          </list>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.LensAperture" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.LensFilterDensity" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.LensFocalLength" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.LensFocusDistance" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.LensInfoAvailableApertures" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.LensInfoAvailableFilterDensities" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.LensInfoAvailableFocalLengths" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.LensInfoMinimumFocusDistance" />
      </Docs>
    </Member>
    <Member MemberName="NoiseReductionMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key NoiseReductionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key NoiseReductionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("NOISE_REDUCTION_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.NoiseReductionAvailableNoiseReductionModes" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ReprocessEffectiveExposureFactor" />
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public virtual Android.Hardware.Camera2.CaptureRequest Request { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Hardware.Camera2.CaptureRequest Request" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getRequest", "()Landroid/hardware/camera2/CaptureRequest;", "GetGetRequestHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureRequest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the request associated with this result.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="RequestPipelineDepth">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key RequestPipelineDepth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key RequestPipelineDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("REQUEST_PIPELINE_DEPTH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.RequestPipelineMaxDepth" />
      </Docs>
    </Member>
    <Member MemberName="ScalerCropRegion">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key ScalerCropRegion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key ScalerCropRegion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SCALER_CROP_REGION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.ScalerAvailableMaxDigitalZoom" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorInfoActiveArraySize" />
      </Docs>
    </Member>
    <Member MemberName="SensorExposureTime">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key SensorExposureTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key SensorExposureTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SENSOR_EXPOSURE_TIME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlMode" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorInfoExposureTimeRange" />
      </Docs>
    </Member>
    <Member MemberName="SensorFrameDuration">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key SensorFrameDuration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key SensorFrameDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SENSOR_FRAME_DURATION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <list type="bullet">
            <item>
              <term>Requested resolutions of output image streams</term>
            </item>
            <item>
              <term>Availability of binning / skipping modes on the imager</term>
            </item>
            <item>
              <term>The bandwidth of the imager interface</term>
            </item>
            <item>
              <term>The bandwidth of the various ISP processing blocks</term>
            </item>
          </list>
          <list type="bullet">
            <item>
              <term>The image sensor is always configured to output the smallest
 resolution possible given the application's requested output stream
 sizes.  The smallest resolution is defined as being at least as large
 as the largest requested output stream size; the camera pipeline must
 never digitally upsample sensor data when the crop region covers the
 whole sensor. In general, this means that if only small output stream
 resolutions are configured, the sensor can provide a higher frame
 rate.</term>
            </item>
            <item>
              <term>Since any request may use any or all the currently configured
 output streams, the sensor and ISP must be configured to support
 scaling a single capture to all the streams at the same time.  This
 means the camera pipeline must be ready to produce the largest
 requested output size without any delay.  Therefore, the overall
 frame rate of a given configured stream set is governed only by the
 largest requested stream resolution.</term>
            </item>
            <item>
              <term>Using more than one output stream in a request does not affect the
 frame duration.</term>
            </item>
            <item>
              <term>Certain format-streams may need to do additional background processing
 before data is consumed/produced by that stream. These processors
 can run concurrently to the rest of the camera pipeline, but
 cannot process more than 1 capture at a time.</term>
            </item>
          </list>
          <list type="number">
            <item>
              <term>Let the set of currently configured input/output streams
 be called <c>S</c>.</term>
            </item>
            <item>
              <term>Find the minimum frame durations for each stream in <c>S</c>, by looking
 it up in <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.ScalerStreamConfigurationMap" /></c> using <c><see cref="M:Android.Hardware.Camera2.Params.StreamConfigurationMap.GetOutputMinFrameDuration(System.Int32, Android.Util.Size)" /></c>
 (with its respective size/format). Let this set of frame durations be
 called <c>F</c>.</term>
            </item>
            <item>
              <term>For any given request <c>R</c>, the minimum frame duration allowed
 for <c>R</c> is the maximum out of all values in <c>F</c>. Let the streams
 used in <c>R</c> be called <c>S_r</c>.</term>
            </item>
          </list>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlMode" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.ScalerStreamConfigurationMap" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorInfoMaxFrameDuration" />
      </Docs>
    </Member>
    <Member MemberName="SensorGreenSplit">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key SensorGreenSplit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key SensorGreenSplit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SENSOR_GREEN_SPLIT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <list type="number">
            <item>
              <term>A 5x5 pixel (or larger) window W within the active sensor array is
 chosen. The term 'pixel' here is taken to mean a group of 4 Bayer
 mosaic channels (R, Gr, Gb, B).  The location and size of the window
 chosen is implementation defined, and should be chosen to provide a
 green split estimate that is both representative of the entire image
 for this camera sensor, and can be calculated quickly.</term>
            </item>
            <item>
              <term>The arithmetic mean of the green channels from the red
 rows (mean_Gr) within W is computed.</term>
            </item>
            <item>
              <term>The arithmetic mean of the green channels from the blue
 rows (mean_Gb) within W is computed.</term>
            </item>
            <item>
              <term>The maximum ratio R of the two means is computed as follows:
 <c>R = max((mean_Gr + 1)/(mean_Gb + 1), (mean_Gb + 1)/(mean_Gr + 1))</c></term>
            </item>
          </list>
          <list type="bullet">
            <item>
              <term>R &lt; 1.03 is a negligible split (&lt;3% divergence).</term>
            </item>
            <item>
              <term>1.20 &lt;= R &gt;= 1.03 will require some software
 correction to avoid demosaic errors (3-20% divergence).</term>
            </item>
            <item>
              <term>R &gt; 1.20 will require strong software correction to produce
 a usuable image (&gt;20% divergence).</term>
            </item>
          </list>
        </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SensorNeutralColorPoint">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key SensorNeutralColorPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key SensorNeutralColorPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SENSOR_NEUTRAL_COLOR_POINT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SensorNoiseProfile">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key SensorNoiseProfile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key SensorNoiseProfile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SENSOR_NOISE_PROFILE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorInfoColorFilterArrangement" />
      </Docs>
    </Member>
    <Member MemberName="SensorRollingShutterSkew">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key SensorRollingShutterSkew { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key SensorRollingShutterSkew" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SENSOR_ROLLING_SHUTTER_SKEW")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorInfoActiveArraySize" />
      </Docs>
    </Member>
    <Member MemberName="SensorSensitivity">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key SensorSensitivity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key SensorSensitivity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SENSOR_SENSITIVITY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorInfoSensitivityRange" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorMaxAnalogSensitivity" />
      </Docs>
    </Member>
    <Member MemberName="SensorTestPatternData">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key SensorTestPatternData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key SensorTestPatternData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SENSOR_TEST_PATTERN_DATA")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.SensorTestPatternMode" />
      </Docs>
    </Member>
    <Member MemberName="SensorTestPatternMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key SensorTestPatternMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key SensorTestPatternMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SENSOR_TEST_PATTERN_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorAvailableTestPatternModes" />
      </Docs>
    </Member>
    <Member MemberName="SensorTimestamp">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key SensorTimestamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key SensorTimestamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SENSOR_TIMESTAMP")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorInfoTimestampSource" />
      </Docs>
    </Member>
    <Member MemberName="SequenceId">
      <MemberSignature Language="C#" Value="public virtual int SequenceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SequenceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSequenceId", "()I", "GetGetSequenceIdHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The sequence ID for this failure that was returned by the
 <c><see cref="M:Android.Hardware.Camera2.CameraCaptureSession.Capture(Android.Hardware.Camera2.CaptureRequest, .CaptureCallback, .CaptureCallback)" /></c> family of functions.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ShadingMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key ShadingMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key ShadingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SHADING_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <example>
            <code lang="java">[ 1.0, 1.0, 1.0, 1.0,  1.0, 1.0, 1.0, 1.0,
  1.0, 1.0, 1.0, 1.0,  1.0, 1.0, 1.0, 1.0,
  1.0, 1.0, 1.0, 1.0,  1.0, 1.0, 1.0, 1.0,
  1.0, 1.0, 1.0, 1.0,  1.0, 1.0, 1.0, 1.0,
  1.0, 1.0, 1.0, 1.0,  1.0, 1.0, 1.0, 1.0,
  1.0, 1.0, 1.0, 1.0,  1.0, 1.0, 1.0, 1.0 ]
 </code>
          </example>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAwbMode" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.ShadingAvailableModes" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureResult.StatisticsLensShadingCorrectionMap" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.StatisticsLensShadingMapMode" />
      </Docs>
    </Member>
    <Member MemberName="StatisticsFaceDetectMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key StatisticsFaceDetectMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key StatisticsFaceDetectMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("STATISTICS_FACE_DETECT_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.StatisticsInfoAvailableFaceDetectModes" />
      </Docs>
    </Member>
    <Member MemberName="StatisticsFaces">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key StatisticsFaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key StatisticsFaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("STATISTICS_FACES")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.StatisticsFaceDetectMode" />
      </Docs>
    </Member>
    <Member MemberName="StatisticsHotPixelMap">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key StatisticsHotPixelMap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key StatisticsHotPixelMap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("STATISTICS_HOT_PIXEL_MAP")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorInfoActiveArraySize" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.SensorInfoPixelArraySize" />
      </Docs>
    </Member>
    <Member MemberName="StatisticsHotPixelMapMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key StatisticsHotPixelMapMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key StatisticsHotPixelMapMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("STATISTICS_HOT_PIXEL_MAP_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CaptureResult.StatisticsHotPixelMap" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.StatisticsInfoAvailableHotPixelMapModes" />
      </Docs>
    </Member>
    <Member MemberName="StatisticsLensShadingCorrectionMap">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key StatisticsLensShadingCorrectionMap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key StatisticsLensShadingCorrectionMap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("STATISTICS_LENS_SHADING_CORRECTION_MAP")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <sample external-id="F9D31C1CFFFECA15E6C9C5842E89135C" />
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ColorCorrectionMode" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
      </Docs>
    </Member>
    <Member MemberName="StatisticsLensShadingMapMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key StatisticsLensShadingMapMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key StatisticsLensShadingMapMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("STATISTICS_LENS_SHADING_MAP_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.StatisticsInfoAvailableLensShadingMapModes" />
      </Docs>
    </Member>
    <Member MemberName="StatisticsSceneFlicker">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key StatisticsSceneFlicker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key StatisticsSceneFlicker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("STATISTICS_SCENE_FLICKER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeAntibandingMode" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlAeMode" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.ControlMode" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="TonemapCurve">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key TonemapCurve { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key TonemapCurve" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TONEMAP_CURVE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <example>
            <code lang="java">curveRed =
   [ P0(in, out), P1(in, out), P2(in, out), P3(in, out), ..., PN(in, out) ]
 2 &lt;= N &lt;= android.tonemap.maxCurvePoints</code>
          </example>
          <example>
            <code lang="java">curveRed = [ (0, 0), (1.0, 1.0) ]
 </code>
          </example>
          <example>
            <code lang="java">curveRed = [ (0, 1.0), (1.0, 0) ]
 </code>
          </example>
          <example>
            <code lang="java">curveRed = [
   (0.0000, 0.0000), (0.0667, 0.2920), (0.1333, 0.4002), (0.2000, 0.4812),
   (0.2667, 0.5484), (0.3333, 0.6069), (0.4000, 0.6594), (0.4667, 0.7072),
   (0.5333, 0.7515), (0.6000, 0.7928), (0.6667, 0.8317), (0.7333, 0.8685),
   (0.8000, 0.9035), (0.8667, 0.9370), (0.9333, 0.9691), (1.0000, 1.0000) ]
 </code>
          </example>
          <example>
            <code lang="java">curveRed = [
   (0.0000, 0.0000), (0.0667, 0.2864), (0.1333, 0.4007), (0.2000, 0.4845),
   (0.2667, 0.5532), (0.3333, 0.6125), (0.4000, 0.6652), (0.4667, 0.7130),
   (0.5333, 0.7569), (0.6000, 0.7977), (0.6667, 0.8360), (0.7333, 0.8721),
   (0.8000, 0.9063), (0.8667, 0.9389), (0.9333, 0.9701), (1.0000, 1.0000) ]
 </code>
          </example>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.TonemapMaxCurvePoints" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.TonemapMode" />
      </Docs>
    </Member>
    <Member MemberName="TonemapMode">
      <MemberSignature Language="C#" Value="public static Android.Hardware.Camera2.CaptureResult.Key TonemapMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Hardware.Camera2.CaptureResult/Key TonemapMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TONEMAP_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Camera2.CaptureResult+Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" />
        <altmember cref="P:Android.Hardware.Camera2.CameraCharacteristics.TonemapAvailableToneMapModes" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.TonemapCurve" />
        <altmember cref="P:Android.Hardware.Camera2.CaptureRequest.TonemapMode" />
      </Docs>
    </Member>
  </Members>
</Type>
