<Type Name="LauncherApps" FullName="Android.Content.PM.LauncherApps">
  <TypeSignature Language="C#" Value="public class LauncherApps : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LauncherApps extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/content/pm/LauncherApps", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="21">
    <summary>Class for retrieving a list of launchable activities for the current user and any associated
 managed profiles.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Class for retrieving a list of launchable activities for the current user and any associated
 managed profiles. This is mainly for use by launchers. Apps can be queried for each user profile.
 Since the PackageManager will not deliver package broadcasts for other profiles, you can register
 for package changes here.
 </para>
      <para tool="javadoc-to-mdoc">
 To watch for managed profiles being added or removed, register for the following broadcasts:
 <c><see cref="F:Android.Content.Intent.ActionManagedProfileAdded" /></c> and <c><see cref="F:Android.Content.Intent.ActionManagedProfileRemoved" /></c>.
 </para>
      <para tool="javadoc-to-mdoc">
 You can retrieve the list of profiles associated with this user with
 <c><see cref="P:Android.OS.UserManager.UserProfiles" /></c>.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/content/pm/LauncherApps.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LauncherApps (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T}(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActivityList">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Content.PM.LauncherActivityInfo&gt; GetActivityList (string packageName, Android.OS.UserHandle user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.Content.PM.LauncherActivityInfo&gt; GetActivityList(string packageName, class Android.OS.UserHandle user) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getActivityList", "(Ljava/lang/String;Landroid/os/UserHandle;)Ljava/util/List;", "GetGetActivityList_Ljava_lang_String_Landroid_os_UserHandle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PM.LauncherActivityInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="packageName">The specific package to query. If null, it checks all installed packages
            in the profile.</param>
        <param name="user">The UserHandle of the profile.</param>
        <summary>Retrieves a list of launchable activities that match <c><see cref="F:Android.Content.Intent.ActionMain" /></c> and
 <c><see cref="F:Android.Content.Intent.CategoryLauncher" /></c>, for a specified user.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieves a list of launchable activities that match <c><see cref="F:Android.Content.Intent.ActionMain" /></c> and
 <c><see cref="F:Android.Content.Intent.CategoryLauncher" /></c>, for a specified user.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/pm/LauncherApps.html#getActivityList(java.lang.String, android.os.UserHandle)" target="_blank">[Android Documentation]</a>
              <since version="Added in API level 21" />
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsActivityEnabled">
      <MemberSignature Language="C#" Value="public virtual bool IsActivityEnabled (Android.Content.ComponentName component, Android.OS.UserHandle user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsActivityEnabled(class Android.Content.ComponentName component, class Android.OS.UserHandle user) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isActivityEnabled", "(Landroid/content/ComponentName;Landroid/os/UserHandle;)Z", "GetIsActivityEnabled_Landroid_content_ComponentName_Landroid_os_UserHandle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="Android.Content.ComponentName" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="component">The activity to check.</param>
        <param name="user">The UserHandle of the profile.</param>
        <summary>Checks if the activity exists and it enabled for a profile.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Checks if the activity exists and it enabled for a profile.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/pm/LauncherApps.html#isActivityEnabled(android.content.ComponentName, android.os.UserHandle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPackageEnabled">
      <MemberSignature Language="C#" Value="public virtual bool IsPackageEnabled (string packageName, Android.OS.UserHandle user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsPackageEnabled(string packageName, class Android.OS.UserHandle user) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isPackageEnabled", "(Ljava/lang/String;Landroid/os/UserHandle;)Z", "GetIsPackageEnabled_Ljava_lang_String_Landroid_os_UserHandle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="packageName">The package to check.</param>
        <param name="user">The UserHandle of the profile.</param>
        <summary>Checks if the package is installed and enabled for a profile.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Checks if the package is installed and enabled for a profile.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/pm/LauncherApps.html#isPackageEnabled(java.lang.String, android.os.UserHandle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterCallback">
      <MemberSignature Language="C#" Value="public virtual void RegisterCallback (Android.Content.PM.LauncherApps.Callback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterCallback(class Android.Content.PM.LauncherApps/Callback callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerCallback", "(Landroid/content/pm/LauncherApps$Callback;)V", "GetRegisterCallback_Landroid_content_pm_LauncherApps_Callback_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Content.PM.LauncherApps+Callback" />
      </Parameters>
      <Docs>
        <param name="callback">The callback to register.
</param>
        <summary>Registers a callback for changes to packages in current and managed profiles.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Registers a callback for changes to packages in current and managed profiles.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/pm/LauncherApps.html#registerCallback(android.content.pm.LauncherApps.Callback)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterCallback">
      <MemberSignature Language="C#" Value="public virtual void RegisterCallback (Android.Content.PM.LauncherApps.Callback callback, Android.OS.Handler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterCallback(class Android.Content.PM.LauncherApps/Callback callback, class Android.OS.Handler handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerCallback", "(Landroid/content/pm/LauncherApps$Callback;Landroid/os/Handler;)V", "GetRegisterCallback_Landroid_content_pm_LauncherApps_Callback_Landroid_os_Handler_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Content.PM.LauncherApps+Callback" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="callback">The callback to register.</param>
        <param name="handler">that should be used to post callbacks on, may be null.
</param>
        <summary>Registers a callback for changes to packages in current and managed profiles.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Registers a callback for changes to packages in current and managed profiles.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/pm/LauncherApps.html#registerCallback(android.content.pm.LauncherApps.Callback, android.os.Handler)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveActivity">
      <MemberSignature Language="C#" Value="public virtual Android.Content.PM.LauncherActivityInfo ResolveActivity (Android.Content.Intent intent, Android.OS.UserHandle user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.PM.LauncherActivityInfo ResolveActivity(class Android.Content.Intent intent, class Android.OS.UserHandle user) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resolveActivity", "(Landroid/content/Intent;Landroid/os/UserHandle;)Landroid/content/pm/LauncherActivityInfo;", "GetResolveActivity_Landroid_content_Intent_Landroid_os_UserHandle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.LauncherActivityInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="intent">The intent to find a match for.</param>
        <param name="user">The profile to look in for a match.</param>
        <summary>Returns the activity info for a given intent and user handle, if it resolves.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the activity info for a given intent and user handle, if it resolves. Otherwise it
 returns null.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/pm/LauncherApps.html#resolveActivity(android.content.Intent, android.os.UserHandle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartAppDetailsActivity">
      <MemberSignature Language="C#" Value="public virtual void StartAppDetailsActivity (Android.Content.ComponentName component, Android.OS.UserHandle user, Android.Graphics.Rect sourceBounds, Android.OS.Bundle opts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartAppDetailsActivity(class Android.Content.ComponentName component, class Android.OS.UserHandle user, class Android.Graphics.Rect sourceBounds, class Android.OS.Bundle opts) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startAppDetailsActivity", "(Landroid/content/ComponentName;Landroid/os/UserHandle;Landroid/graphics/Rect;Landroid/os/Bundle;)V", "GetStartAppDetailsActivity_Landroid_content_ComponentName_Landroid_os_UserHandle_Landroid_graphics_Rect_Landroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="Android.Content.ComponentName" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
        <Parameter Name="sourceBounds" Type="Android.Graphics.Rect" />
        <Parameter Name="opts" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="component">The ComponentName of the package to launch settings for.</param>
        <param name="user">The UserHandle of the profile</param>
        <param name="sourceBounds">The Rect containing the source bounds of the clicked icon</param>
        <param name="opts">Options to pass to startActivity
</param>
        <summary>Starts the settings activity to show the application details for a
 package in the specified profile.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Starts the settings activity to show the application details for a
 package in the specified profile.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/pm/LauncherApps.html#startAppDetailsActivity(android.content.ComponentName, android.os.UserHandle, android.graphics.Rect, android.os.Bundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartMainActivity">
      <MemberSignature Language="C#" Value="public virtual void StartMainActivity (Android.Content.ComponentName component, Android.OS.UserHandle user, Android.Graphics.Rect sourceBounds, Android.OS.Bundle opts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartMainActivity(class Android.Content.ComponentName component, class Android.OS.UserHandle user, class Android.Graphics.Rect sourceBounds, class Android.OS.Bundle opts) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startMainActivity", "(Landroid/content/ComponentName;Landroid/os/UserHandle;Landroid/graphics/Rect;Landroid/os/Bundle;)V", "GetStartMainActivity_Landroid_content_ComponentName_Landroid_os_UserHandle_Landroid_graphics_Rect_Landroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="Android.Content.ComponentName" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
        <Parameter Name="sourceBounds" Type="Android.Graphics.Rect" />
        <Parameter Name="opts" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="component">The ComponentName of the activity to launch</param>
        <param name="user">The UserHandle of the profile</param>
        <param name="sourceBounds">The Rect containing the source bounds of the clicked icon</param>
        <param name="opts">Options to pass to startActivity
</param>
        <summary>Starts a Main activity in the specified profile.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Starts a Main activity in the specified profile.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/pm/LauncherApps.html#startMainActivity(android.content.ComponentName, android.os.UserHandle, android.graphics.Rect, android.os.Bundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterCallback">
      <MemberSignature Language="C#" Value="public virtual void UnregisterCallback (Android.Content.PM.LauncherApps.Callback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterCallback(class Android.Content.PM.LauncherApps/Callback callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unregisterCallback", "(Landroid/content/pm/LauncherApps$Callback;)V", "GetUnregisterCallback_Landroid_content_pm_LauncherApps_Callback_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Content.PM.LauncherApps+Callback" />
      </Parameters>
      <Docs>
        <param name="callback">The callback to unregister.</param>
        <summary>Unregisters a callback that was previously registered.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Unregisters a callback that was previously registered.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/pm/LauncherApps.html#unregisterCallback(android.content.pm.LauncherApps.Callback)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.Content.PM.LauncherApps.RegisterCallback(.Callback)" />
      </Docs>
    </Member>
  </Members>
</Type>
