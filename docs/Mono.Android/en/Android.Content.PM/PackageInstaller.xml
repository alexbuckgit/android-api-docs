<Type Name="PackageInstaller" FullName="Android.Content.PM.PackageInstaller">
  <TypeSignature Language="C#" Value="public class PackageInstaller : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PackageInstaller extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/content/pm/PackageInstaller", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="21">
    <summary>Offers the ability to install, upgrade, and remove applications on the
 device.</summary>
    <remarks />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PackageInstaller (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AbandonSession">
      <MemberSignature Language="C#" Value="public virtual void AbandonSession (int sessionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AbandonSession(int32 sessionId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("abandonSession", "(I)V", "GetAbandonSession_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sessionId">To be added.</param>
        <summary>Completely abandon the given session, destroying all staged data and
 rendering it invalid.</summary>
        <remarks />
        <exception cref="T:Java.Lang.SecurityException">when the caller does not own the session, or
             the session is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ActionSessionDetails">
      <MemberSignature Language="C#" Value="public const string ActionSessionDetails;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionSessionDetails" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACTION_SESSION_DETAILS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Activity Action: Show details about a particular install session.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AllSessions">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Content.PM.PackageInstaller.SessionInfo&gt; AllSessions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Content.PM.PackageInstaller/SessionInfo&gt; AllSessions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAllSessions", "()Ljava/util/List;", "GetGetAllSessionsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PM.PackageInstaller+SessionInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return list of all known install sessions, regardless of the installer.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CreateSession">
      <MemberSignature Language="C#" Value="public virtual int CreateSession (Android.Content.PM.PackageInstaller.SessionParams params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CreateSession(class Android.Content.PM.PackageInstaller/SessionParams params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createSession", "(Landroid/content/pm/PackageInstaller$SessionParams;)I", "GetCreateSession_Landroid_content_pm_PackageInstaller_SessionParams_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="params" Type="Android.Content.PM.PackageInstaller+SessionParams" />
      </Parameters>
      <Docs>
        <param name="params">To be added.</param>
        <summary>Create a new session using the given parameters, returning a unique ID
 that represents the session.</summary>
        <returns>To be added.</returns>
        <remarks />
        <exception cref="T:Java.IO.IOException">if parameters were unsatisfiable, such as lack of
             disk space or unavailable media.</exception>
        <exception cref="T:Java.Lang.SecurityException">when installation services are unavailable,
             such as when called from a restricted user.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">when <c><see cref="!:NoType:android/content/pm/PackageInstaller$SessionParams;Href=../../../../reference/android/content/pm/PackageInstaller.SessionParams.html" /></c> is invalid.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtraOtherPackageName">
      <MemberSignature Language="C#" Value="public const string ExtraOtherPackageName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraOtherPackageName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_OTHER_PACKAGE_NAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Another package name relevant to a status.</summary>
        <remarks />
        <altmember cref="M:Android.Content.Intent.GetStringExtra(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ExtraPackageName">
      <MemberSignature Language="C#" Value="public const string ExtraPackageName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraPackageName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_PACKAGE_NAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Package name that an operation is working with.</summary>
        <remarks />
        <altmember cref="M:Android.Content.Intent.GetStringExtra(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ExtraSessionId">
      <MemberSignature Language="C#" Value="public const string ExtraSessionId;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraSessionId" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_SESSION_ID")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An integer session ID that an operation is working with.</summary>
        <remarks />
        <altmember cref="M:Android.Content.Intent.GetIntExtra(System.String, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ExtraStatus">
      <MemberSignature Language="C#" Value="public const string ExtraStatus;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraStatus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_STATUS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Current status of an operation.</summary>
        <remarks />
        <altmember cref="M:Android.Content.Intent.GetIntExtra(System.String, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ExtraStatusMessage">
      <MemberSignature Language="C#" Value="public const string ExtraStatusMessage;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraStatusMessage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_STATUS_MESSAGE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Detailed string representation of the status, including raw details that
 are useful for debugging.</summary>
        <remarks />
        <altmember cref="M:Android.Content.Intent.GetStringExtra(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ExtraStoragePath">
      <MemberSignature Language="C#" Value="public const string ExtraStoragePath;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraStoragePath" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_STORAGE_PATH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Storage path relevant to a status.</summary>
        <remarks />
        <altmember cref="M:Android.Content.Intent.GetStringExtra(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetSessionInfo">
      <MemberSignature Language="C#" Value="public virtual Android.Content.PM.PackageInstaller.SessionInfo GetSessionInfo (int sessionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.PM.PackageInstaller/SessionInfo GetSessionInfo(int32 sessionId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getSessionInfo", "(I)Landroid/content/pm/PackageInstaller$SessionInfo;", "GetGetSessionInfo_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.PackageInstaller+SessionInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sessionId">To be added.</param>
        <summary>Return details for a specific session.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="MySessions">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Content.PM.PackageInstaller.SessionInfo&gt; MySessions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Content.PM.PackageInstaller/SessionInfo&gt; MySessions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMySessions", "()Ljava/util/List;", "GetGetMySessionsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PM.PackageInstaller+SessionInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return list of all known install sessions owned by the calling app.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="OpenSession">
      <MemberSignature Language="C#" Value="public virtual Android.Content.PM.PackageInstaller.Session OpenSession (int sessionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.PM.PackageInstaller/Session OpenSession(int32 sessionId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("openSession", "(I)Landroid/content/pm/PackageInstaller$Session;", "GetOpenSession_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.PackageInstaller+Session</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sessionId">To be added.</param>
        <summary>Open an existing session to actively perform work.</summary>
        <returns>To be added.</returns>
        <remarks />
        <exception cref="T:Java.IO.IOException">if parameters were unsatisfiable, such as lack of
             disk space or unavailable media.</exception>
        <exception cref="T:Java.Lang.SecurityException">when the caller does not own the session, or
             the session is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterSessionCallback">
      <MemberSignature Language="C#" Value="public virtual void RegisterSessionCallback (Android.Content.PM.PackageInstaller.SessionCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterSessionCallback(class Android.Content.PM.PackageInstaller/SessionCallback callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerSessionCallback", "(Landroid/content/pm/PackageInstaller$SessionCallback;)V", "GetRegisterSessionCallback_Landroid_content_pm_PackageInstaller_SessionCallback_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Content.PM.PackageInstaller+SessionCallback" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <summary>Register to watch for session lifecycle events.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="RegisterSessionCallback">
      <MemberSignature Language="C#" Value="public virtual void RegisterSessionCallback (Android.Content.PM.PackageInstaller.SessionCallback callback, Android.OS.Handler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterSessionCallback(class Android.Content.PM.PackageInstaller/SessionCallback callback, class Android.OS.Handler handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerSessionCallback", "(Landroid/content/pm/PackageInstaller$SessionCallback;Landroid/os/Handler;)V", "GetRegisterSessionCallback_Landroid_content_pm_PackageInstaller_SessionCallback_Landroid_os_Handler_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Content.PM.PackageInstaller+SessionCallback" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <param name="handler">to dispatch callback events through, otherwise uses
            calling thread.
</param>
        <summary>Register to watch for session lifecycle events.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public virtual void Uninstall (string packageName, Android.Content.IntentSender statusReceiver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Uninstall(string packageName, class Android.Content.IntentSender statusReceiver) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("uninstall", "(Ljava/lang/String;Landroid/content/IntentSender;)V", "GetUninstall_Ljava_lang_String_Landroid_content_IntentSender_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="statusReceiver" Type="Android.Content.IntentSender" />
      </Parameters>
      <Docs>
        <param name="packageName">To be added.</param>
        <param name="statusReceiver">To be added.</param>
        <summary>Uninstall the given package, removing it completely from the device.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="UnregisterSessionCallback">
      <MemberSignature Language="C#" Value="public virtual void UnregisterSessionCallback (Android.Content.PM.PackageInstaller.SessionCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterSessionCallback(class Android.Content.PM.PackageInstaller/SessionCallback callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unregisterSessionCallback", "(Landroid/content/pm/PackageInstaller$SessionCallback;)V", "GetUnregisterSessionCallback_Landroid_content_pm_PackageInstaller_SessionCallback_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Content.PM.PackageInstaller+SessionCallback" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <summary>Unregister a previously registered callback.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="UpdateSessionAppIcon">
      <MemberSignature Language="C#" Value="public virtual void UpdateSessionAppIcon (int sessionId, Android.Graphics.Bitmap appIcon);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateSessionAppIcon(int32 sessionId, class Android.Graphics.Bitmap appIcon) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("updateSessionAppIcon", "(ILandroid/graphics/Bitmap;)V", "GetUpdateSessionAppIcon_ILandroid_graphics_Bitmap_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionId" Type="System.Int32" />
        <Parameter Name="appIcon" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="sessionId">To be added.</param>
        <param name="appIcon">To be added.</param>
        <summary>Update the icon representing the app being installed in a specific
 session.</summary>
        <remarks />
        <exception cref="T:Java.Lang.SecurityException">when the caller does not own the session, or
             the session is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateSessionAppLabel">
      <MemberSignature Language="C#" Value="public virtual void UpdateSessionAppLabel (int sessionId, Java.Lang.ICharSequence appLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateSessionAppLabel(int32 sessionId, class Java.Lang.ICharSequence appLabel) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("updateSessionAppLabel", "(ILjava/lang/CharSequence;)V", "GetUpdateSessionAppLabel_ILjava_lang_CharSequence_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionId" Type="System.Int32" />
        <Parameter Name="appLabel" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="sessionId">To be added.</param>
        <param name="appLabel">To be added.</param>
        <summary>Update the label representing the app being installed in a specific
 session.</summary>
        <remarks />
        <exception cref="T:Java.Lang.SecurityException">when the caller does not own the session, or
             the session is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateSessionAppLabel">
      <MemberSignature Language="C#" Value="public void UpdateSessionAppLabel (int sessionId, string appLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateSessionAppLabel(int32 sessionId, string appLabel) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionId" Type="System.Int32" />
        <Parameter Name="appLabel" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sessionId">To be added.</param>
        <param name="appLabel">To be added.</param>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
