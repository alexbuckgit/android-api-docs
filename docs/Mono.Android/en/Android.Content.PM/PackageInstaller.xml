<Type Name="PackageInstaller" FullName="Android.Content.PM.PackageInstaller">
  <TypeSignature Language="C#" Value="public class PackageInstaller : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PackageInstaller extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/content/pm/PackageInstaller", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="21">
    <summary>Offers the ability to install, upgrade, and remove applications on the
 device.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Offers the ability to install, upgrade, and remove applications on the
 device. This includes support for apps packaged either as a single
 "monolithic" APK, or apps packaged as multiple "split" APKs.
 </para>
      <para tool="javadoc-to-mdoc">
 An app is delivered for installation through a
 <c><see cref="!:NoType:android/content/pm/PackageInstaller$Session;Href=../../../../reference/android/content/pm/PackageInstaller.Session.html" /></c>, which any app can create. Once the session
 is created, the installer can stream one or more APKs into place until it
 decides to either commit or destroy the session. Committing may require user
 intervention to complete the installation.
 </para>
      <para tool="javadoc-to-mdoc">
 Sessions can install brand new apps, upgrade existing apps, or add new splits
 into an existing app.
 </para>
      <para tool="javadoc-to-mdoc">
 Apps packaged as multiple split APKs always consist of a single "base" APK
 (with a <c>null</c> split name) and zero or more "split" APKs (with unique
 split names). Any subset of these APKs can be installed together, as long as
 the following constraints are met:
 <list type="bullet"><item><term>All APKs must have the exact same package name, version code, and signing
 certificates.
 </term></item><item><term>All APKs must have unique split names.
 </term></item><item><term>All installations must contain a single base APK.
 </term></item></list></para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/content/pm/PackageInstaller.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PackageInstaller (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T}(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AbandonSession">
      <MemberSignature Language="C#" Value="public virtual void AbandonSession (int sessionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AbandonSession(int32 sessionId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("abandonSession", "(I)V", "GetAbandonSession_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sessionId">To be added.</param>
        <summary>Completely abandon the given session, destroying all staged data and
 rendering it invalid.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Completely abandon the given session, destroying all staged data and
 rendering it invalid. Abandoned sessions will be reported to
 <c><see cref="!:NoType:android/content/pm/PackageInstaller$SessionCallback;Href=../../../../reference/android/content/pm/PackageInstaller.SessionCallback.html" /></c> listeners as failures. This is equivalent to
 opening the session and calling <c><see cref="!:NoType:android/content/pm/PackageInstaller$Session;Href=../../../../reference/android/content/pm/PackageInstaller.Session.html#abandon()" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/pm/PackageInstaller.html#abandonSession(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="T:Java.Lang.SecurityException">when the caller does not own the session, or
             the session is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ActionSessionDetails">
      <MemberSignature Language="C#" Value="public const string ActionSessionDetails;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionSessionDetails" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACTION_SESSION_DETAILS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Activity Action: Show details about a particular install session.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Activity Action: Show details about a particular install session. This
 may surface actions such as pause, resume, or cancel.
 </para>
          <para tool="javadoc-to-mdoc">
 This should always be scoped to the installer package that owns the
 session. Clients should use <c><see cref="!:NoType:android/content/pm/PackageInstaller$SessionInfo;Href=../../../../reference/android/content/pm/PackageInstaller.SessionInfo.html#createDetailsIntent()" /></c> to
 build this intent correctly.
 </para>
          <para tool="javadoc-to-mdoc">
 In some cases, a matching Activity may not exist, so ensure you safeguard
 against this.
 </para>
          <para tool="javadoc-to-mdoc">
 The session to show details for is defined in <c><see cref="F:Android.Content.PM.PackageInstaller.ExtraSessionId" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/pm/PackageInstaller.html#ACTION_SESSION_DETAILS" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllSessions">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Content.PM.PackageInstaller.SessionInfo&gt; AllSessions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Content.PM.PackageInstaller/SessionInfo&gt; AllSessions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAllSessions", "()Ljava/util/List;", "GetGetAllSessionsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PM.PackageInstaller+SessionInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return list of all known install sessions, regardless of the installer.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return list of all known install sessions, regardless of the installer.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/pm/PackageInstaller.html#getAllSessions()" target="_blank">[Android Documentation]</a>
              <since version="Added in API level 21" />
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSession">
      <MemberSignature Language="C#" Value="public virtual int CreateSession (Android.Content.PM.PackageInstaller.SessionParams params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CreateSession(class Android.Content.PM.PackageInstaller/SessionParams params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createSession", "(Landroid/content/pm/PackageInstaller$SessionParams;)I", "GetCreateSession_Landroid_content_pm_PackageInstaller_SessionParams_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="params" Type="Android.Content.PM.PackageInstaller+SessionParams" />
      </Parameters>
      <Docs>
        <param name="params">To be added.</param>
        <summary>Create a new session using the given parameters, returning a unique ID
 that represents the session.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new session using the given parameters, returning a unique ID
 that represents the session. Once created, the session can be opened
 multiple times across multiple device boots.
 </para>
          <para tool="javadoc-to-mdoc">
 The system may automatically destroy sessions that have not been
 finalized (either committed or abandoned) within a reasonable period of
 time, typically on the order of a day.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/pm/PackageInstaller.html#createSession(android.content.pm.PackageInstaller.SessionParams)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="T:Java.IO.IOException">if parameters were unsatisfiable, such as lack of
             disk space or unavailable media.</exception>
        <exception cref="T:Java.Lang.SecurityException">when installation services are unavailable,
             such as when called from a restricted user.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">when <c><see cref="!:NoType:android/content/pm/PackageInstaller$SessionParams;Href=../../../../reference/android/content/pm/PackageInstaller.SessionParams.html" /></c> is invalid.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtraOtherPackageName">
      <MemberSignature Language="C#" Value="public const string ExtraOtherPackageName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraOtherPackageName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_OTHER_PACKAGE_NAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Another package name relevant to a status.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Another package name relevant to a status. This is typically the package
 responsible for causing an operation failure.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/pm/PackageInstaller.html#EXTRA_OTHER_PACKAGE_NAME" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.Content.Intent.GetStringExtra(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ExtraPackageName">
      <MemberSignature Language="C#" Value="public const string ExtraPackageName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraPackageName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_PACKAGE_NAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Package name that an operation is working with.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Package name that an operation is working with.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/pm/PackageInstaller.html#EXTRA_PACKAGE_NAME" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.Content.Intent.GetStringExtra(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ExtraSessionId">
      <MemberSignature Language="C#" Value="public const string ExtraSessionId;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraSessionId" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_SESSION_ID")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An integer session ID that an operation is working with.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">An integer session ID that an operation is working with.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/pm/PackageInstaller.html#EXTRA_SESSION_ID" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.Content.Intent.GetIntExtra(System.String, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ExtraStatus">
      <MemberSignature Language="C#" Value="public const string ExtraStatus;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraStatus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_STATUS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Current status of an operation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Current status of an operation. Will be one of
 <c><see cref="!:Android.Content.PM.PackageInstaller.STATUS_PENDING_USER_ACTION" /></c>, <c><see cref="!:Android.Content.PM.PackageInstaller.STATUS_SUCCESS" /></c>,
 <c><see cref="!:Android.Content.PM.PackageInstaller.STATUS_FAILURE" /></c>, <c><see cref="!:Android.Content.PM.PackageInstaller.STATUS_FAILURE_ABORTED" /></c>,
 <c><see cref="!:Android.Content.PM.PackageInstaller.STATUS_FAILURE_BLOCKED" /></c>, <c><see cref="!:Android.Content.PM.PackageInstaller.STATUS_FAILURE_CONFLICT" /></c>,
 <c><see cref="!:Android.Content.PM.PackageInstaller.STATUS_FAILURE_INCOMPATIBLE" /></c>, <c><see cref="!:Android.Content.PM.PackageInstaller.STATUS_FAILURE_INVALID" /></c>, or
 <c><see cref="!:Android.Content.PM.PackageInstaller.STATUS_FAILURE_STORAGE" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
 More information about a status may be available through additional
 extras; see the individual status documentation for details.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/pm/PackageInstaller.html#EXTRA_STATUS" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.Content.Intent.GetIntExtra(System.String, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ExtraStatusMessage">
      <MemberSignature Language="C#" Value="public const string ExtraStatusMessage;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraStatusMessage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_STATUS_MESSAGE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Detailed string representation of the status, including raw details that
 are useful for debugging.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Detailed string representation of the status, including raw details that
 are useful for debugging.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/pm/PackageInstaller.html#EXTRA_STATUS_MESSAGE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.Content.Intent.GetStringExtra(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ExtraStoragePath">
      <MemberSignature Language="C#" Value="public const string ExtraStoragePath;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraStoragePath" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_STORAGE_PATH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Storage path relevant to a status.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Storage path relevant to a status.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/pm/PackageInstaller.html#EXTRA_STORAGE_PATH" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.Content.Intent.GetStringExtra(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetSessionInfo">
      <MemberSignature Language="C#" Value="public virtual Android.Content.PM.PackageInstaller.SessionInfo GetSessionInfo (int sessionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.PM.PackageInstaller/SessionInfo GetSessionInfo(int32 sessionId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getSessionInfo", "(I)Landroid/content/pm/PackageInstaller$SessionInfo;", "GetGetSessionInfo_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.PackageInstaller+SessionInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sessionId">To be added.</param>
        <summary>Return details for a specific session.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return details for a specific session. No special permissions are
 required to retrieve these details.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/pm/PackageInstaller.html#getSessionInfo(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MySessions">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Content.PM.PackageInstaller.SessionInfo&gt; MySessions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Content.PM.PackageInstaller/SessionInfo&gt; MySessions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMySessions", "()Ljava/util/List;", "GetGetMySessionsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PM.PackageInstaller+SessionInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return list of all known install sessions owned by the calling app.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return list of all known install sessions owned by the calling app.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/pm/PackageInstaller.html#getMySessions()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenSession">
      <MemberSignature Language="C#" Value="public virtual Android.Content.PM.PackageInstaller.Session OpenSession (int sessionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.PM.PackageInstaller/Session OpenSession(int32 sessionId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("openSession", "(I)Landroid/content/pm/PackageInstaller$Session;", "GetOpenSession_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.PackageInstaller+Session</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sessionId">To be added.</param>
        <summary>Open an existing session to actively perform work.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Open an existing session to actively perform work. To succeed, the caller
 must be the owner of the install session.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/pm/PackageInstaller.html#openSession(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="T:Java.IO.IOException">if parameters were unsatisfiable, such as lack of
             disk space or unavailable media.</exception>
        <exception cref="T:Java.Lang.SecurityException">when the caller does not own the session, or
             the session is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterSessionCallback">
      <MemberSignature Language="C#" Value="public virtual void RegisterSessionCallback (Android.Content.PM.PackageInstaller.SessionCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterSessionCallback(class Android.Content.PM.PackageInstaller/SessionCallback callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerSessionCallback", "(Landroid/content/pm/PackageInstaller$SessionCallback;)V", "GetRegisterSessionCallback_Landroid_content_pm_PackageInstaller_SessionCallback_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Content.PM.PackageInstaller+SessionCallback" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <summary>Register to watch for session lifecycle events.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Register to watch for session lifecycle events. No special permissions
 are required to watch for these events.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/pm/PackageInstaller.html#registerSessionCallback(android.content.pm.PackageInstaller.SessionCallback)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterSessionCallback">
      <MemberSignature Language="C#" Value="public virtual void RegisterSessionCallback (Android.Content.PM.PackageInstaller.SessionCallback callback, Android.OS.Handler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterSessionCallback(class Android.Content.PM.PackageInstaller/SessionCallback callback, class Android.OS.Handler handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerSessionCallback", "(Landroid/content/pm/PackageInstaller$SessionCallback;Landroid/os/Handler;)V", "GetRegisterSessionCallback_Landroid_content_pm_PackageInstaller_SessionCallback_Landroid_os_Handler_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Content.PM.PackageInstaller+SessionCallback" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <param name="handler">to dispatch callback events through, otherwise uses
            calling thread.
</param>
        <summary>Register to watch for session lifecycle events.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Register to watch for session lifecycle events. No special permissions
 are required to watch for these events.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/pm/PackageInstaller.html#registerSessionCallback(android.content.pm.PackageInstaller.SessionCallback, android.os.Handler)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public virtual void Uninstall (string packageName, Android.Content.IntentSender statusReceiver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Uninstall(string packageName, class Android.Content.IntentSender statusReceiver) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("uninstall", "(Ljava/lang/String;Landroid/content/IntentSender;)V", "GetUninstall_Ljava_lang_String_Landroid_content_IntentSender_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="statusReceiver" Type="Android.Content.IntentSender" />
      </Parameters>
      <Docs>
        <param name="packageName">To be added.</param>
        <param name="statusReceiver">To be added.</param>
        <summary>Uninstall the given package, removing it completely from the device.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Uninstall the given package, removing it completely from the device. This
 method is only available to the current "installer of record" for the
 package.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/pm/PackageInstaller.html#uninstall(java.lang.String, android.content.IntentSender)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterSessionCallback">
      <MemberSignature Language="C#" Value="public virtual void UnregisterSessionCallback (Android.Content.PM.PackageInstaller.SessionCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterSessionCallback(class Android.Content.PM.PackageInstaller/SessionCallback callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unregisterSessionCallback", "(Landroid/content/pm/PackageInstaller$SessionCallback;)V", "GetUnregisterSessionCallback_Landroid_content_pm_PackageInstaller_SessionCallback_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Content.PM.PackageInstaller+SessionCallback" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <summary>Unregister a previously registered callback.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Unregister a previously registered callback.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/pm/PackageInstaller.html#unregisterSessionCallback(android.content.pm.PackageInstaller.SessionCallback)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSessionAppIcon">
      <MemberSignature Language="C#" Value="public virtual void UpdateSessionAppIcon (int sessionId, Android.Graphics.Bitmap appIcon);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateSessionAppIcon(int32 sessionId, class Android.Graphics.Bitmap appIcon) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("updateSessionAppIcon", "(ILandroid/graphics/Bitmap;)V", "GetUpdateSessionAppIcon_ILandroid_graphics_Bitmap_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionId" Type="System.Int32" />
        <Parameter Name="appIcon" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="sessionId">To be added.</param>
        <param name="appIcon">To be added.</param>
        <summary>Update the icon representing the app being installed in a specific
 session.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Update the icon representing the app being installed in a specific
 session. This should be roughly
 <c><see cref="P:Android.App.ActivityManager.LauncherLargeIconSize" /></c> in both dimensions.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/pm/PackageInstaller.html#updateSessionAppIcon(int, android.graphics.Bitmap)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="T:Java.Lang.SecurityException">when the caller does not own the session, or
             the session is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateSessionAppLabel">
      <MemberSignature Language="C#" Value="public virtual void UpdateSessionAppLabel (int sessionId, Java.Lang.ICharSequence appLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateSessionAppLabel(int32 sessionId, class Java.Lang.ICharSequence appLabel) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("updateSessionAppLabel", "(ILjava/lang/CharSequence;)V", "GetUpdateSessionAppLabel_ILjava_lang_CharSequence_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionId" Type="System.Int32" />
        <Parameter Name="appLabel" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="sessionId">To be added.</param>
        <param name="appLabel">To be added.</param>
        <summary>Update the label representing the app being installed in a specific
 session.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Update the label representing the app being installed in a specific
 session.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/pm/PackageInstaller.html#updateSessionAppLabel(int, java.lang.CharSequence)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="T:Java.Lang.SecurityException">when the caller does not own the session, or
             the session is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateSessionAppLabel">
      <MemberSignature Language="C#" Value="public void UpdateSessionAppLabel (int sessionId, string appLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateSessionAppLabel(int32 sessionId, string appLabel) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionId" Type="System.Int32" />
        <Parameter Name="appLabel" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sessionId">To be added.</param>
        <param name="appLabel">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
