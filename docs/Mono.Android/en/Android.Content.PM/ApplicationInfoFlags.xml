<Type Name="ApplicationInfoFlags" FullName="Android.Content.PM.ApplicationInfoFlags">
  <TypeSignature Language="C#" Value="public enum ApplicationInfoFlags" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ApplicationInfoFlags extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Enumerates values returned by  several types and taken as a parameter of the <see cref="M:Android.App.ApplicationErrorReport.GetErrorReportReceiver" /> member.</summary>
    <remarks>Enumerates values returned by the following: <list type="bullet"><item><term><see cref="M:Android.Content.PM.ApplicationInfo.Flags" /></term></item><item><term><see cref="M:Android.Content.PM.ApplicationInfoFlags.AllowBackup" /></term></item><item><term><see cref="M:Android.Content.PM.ApplicationInfoFlags.AllowClearUserData" /></term></item><item><term><see cref="M:Android.Content.PM.ApplicationInfoFlags.AllowTaskReparenting" /></term></item><item><term><see cref="M:Android.Content.PM.ApplicationInfoFlags.Debuggable" /></term></item><item><term><see cref="M:Android.Content.PM.ApplicationInfoFlags.ExternalStorage" /></term></item><item><term><see cref="M:Android.Content.PM.ApplicationInfoFlags.FactoryTest" /></term></item><item><term><see cref="M:Android.Content.PM.ApplicationInfoFlags.FullBackupOnly" /></term></item><item><term><see cref="M:Android.Content.PM.ApplicationInfoFlags.HasCode" /></term></item><item><term><see cref="M:Android.Content.PM.ApplicationInfoFlags.Installed" /></term></item><item><term><see cref="M:Android.Content.PM.ApplicationInfoFlags.IsDataOnly" /></term></item><item><term><see cref="M:Android.Content.PM.ApplicationInfoFlags.IsGame" /></term></item><item><term><see cref="M:Android.Content.PM.ApplicationInfoFlags.KillAfterRestore" /></term></item><item><term><see cref="M:Android.Content.PM.ApplicationInfoFlags.LargeHeap" /></term></item><item><term><see cref="M:Android.Content.PM.ApplicationInfoFlags.Multiarch" /></term></item><item><term><see cref="M:Android.Content.PM.ApplicationInfoFlags.None" /></term></item><item><term><see cref="M:Android.Content.PM.ApplicationInfoFlags.Persistent" /></term></item><item><term><see cref="M:Android.Content.PM.ApplicationInfoFlags.ResizeableForScreens" /></term></item><item><term><see cref="M:Android.Content.PM.ApplicationInfoFlags.RestoreAnyVersion" /></term></item><item><term><see cref="M:Android.Content.PM.ApplicationInfoFlags.Stopped" /></term></item><item><term><see cref="M:Android.Content.PM.ApplicationInfoFlags.SupportsLargeScreens" /></term></item><item><term><see cref="M:Android.Content.PM.ApplicationInfoFlags.SupportsNormalScreens" /></term></item><item><term><see cref="M:Android.Content.PM.ApplicationInfoFlags.SupportsRtl" /></term></item><item><term><see cref="M:Android.Content.PM.ApplicationInfoFlags.SupportsScreenDensities" /></term></item><item><term><see cref="M:Android.Content.PM.ApplicationInfoFlags.SupportsSmallScreens" /></term></item><item><term><see cref="M:Android.Content.PM.ApplicationInfoFlags.SupportsXLargeScreens" /></term></item><item><term><see cref="M:Android.Content.PM.ApplicationInfoFlags.System" /></term></item><item><term><see cref="M:Android.Content.PM.ApplicationInfoFlags.TestOnly" /></term></item><item><term><see cref="M:Android.Content.PM.ApplicationInfoFlags.UpdatedSystemApp" /></term></item><item><term><see cref="M:Android.Content.PM.ApplicationInfoFlags.VMSafeMode" /></term></item></list>
 and taken as a parameter of the <see cref="M:Android.App.ApplicationErrorReport.GetErrorReportReceiver" /> member.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AllowBackup">
      <MemberSignature Language="C#" Value="AllowBackup" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.PM.ApplicationInfoFlags AllowBackup = int32(32768)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ApplicationInfoFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">
            <c>
              <see cref="P:Android.Content.PM.ApplicationInfo.Flags" />
            </c>
            <c>false</c>
            <c>true</c>
          </para>
          <para tool="javadoc-to-mdoc">Comes from the
 <c><see cref="!:NoType:android/R$styleable;Href=../../../../reference/android/R.styleable.html#AndroidManifestApplication_allowBackup" /></c>
 attribute of the &lt;application&gt; tag.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="AllowClearUserData">
      <MemberSignature Language="C#" Value="AllowClearUserData" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.PM.ApplicationInfoFlags AllowClearUserData = int32(64)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ApplicationInfoFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Value for <c><see cref="P:Android.Content.PM.ApplicationInfo.Flags" /></c>: default value for the corresponding ActivityInfo flag.
 Comes from <c><see cref="!:NoType:android/R$styleable;Href=../../../../reference/android/R.styleable.html#AndroidManifestApplication_allowClearUserData" /></c> of the &lt;application&gt; tag.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="AllowTaskReparenting">
      <MemberSignature Language="C#" Value="AllowTaskReparenting" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.PM.ApplicationInfoFlags AllowTaskReparenting = int32(32)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ApplicationInfoFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Value for <c><see cref="P:Android.Content.PM.ApplicationInfo.Flags" /></c>: default value for the corresponding ActivityInfo flag.
 Comes from <c><see cref="!:NoType:android/R$styleable;Href=../../../../reference/android/R.styleable.html#AndroidManifestApplication_allowTaskReparenting" /></c> of the &lt;application&gt; tag.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Debuggable">
      <MemberSignature Language="C#" Value="Debuggable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.PM.ApplicationInfoFlags Debuggable = int32(2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ApplicationInfoFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Value for <c><see cref="P:Android.Content.PM.ApplicationInfo.Flags" /></c>: set to true if this application would like to
 allow debugging of its
 code, even when installed on a non-development system.  Comes
 from <c><see cref="!:NoType:android/R$styleable;Href=../../../../reference/android/R.styleable.html#AndroidManifestApplication_debuggable" /></c> of the &lt;application&gt; tag.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ExternalStorage">
      <MemberSignature Language="C#" Value="ExternalStorage" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.PM.ApplicationInfoFlags ExternalStorage = int32(262144)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ApplicationInfoFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Value for <c><see cref="P:Android.Content.PM.ApplicationInfo.Flags" /></c>: Set to true if the application is
 currently installed on external/removable/unprotected storage.  Such
 applications may not be available if their storage is not currently
 mounted.  When the storage it is on is not available, it will look like
 the application has been uninstalled (its .apk is no longer available)
 but its persistent data is not removed.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="FactoryTest">
      <MemberSignature Language="C#" Value="FactoryTest" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.PM.ApplicationInfoFlags FactoryTest = int32(16)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ApplicationInfoFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Value for <c><see cref="P:Android.Content.PM.ApplicationInfo.Flags" /></c>: set to true if this application holds the
 <c><see cref="F:Android.Manifest.Permission.FactoryTest" /></c> permission and the
 device is running in factory test mode.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="FullBackupOnly">
      <MemberSignature Language="C#" Value="FullBackupOnly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.PM.ApplicationInfoFlags FullBackupOnly = int32(67108864)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ApplicationInfoFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
      </Docs>
    </Member>
    <Member MemberName="HasCode">
      <MemberSignature Language="C#" Value="HasCode" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.PM.ApplicationInfoFlags HasCode = int32(4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ApplicationInfoFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Value for <c><see cref="P:Android.Content.PM.ApplicationInfo.Flags" /></c>: set to true if this application has code
 associated with it.  Comes
 from <c><see cref="!:NoType:android/R$styleable;Href=../../../../reference/android/R.styleable.html#AndroidManifestApplication_hasCode" /></c> of the &lt;application&gt; tag.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Installed">
      <MemberSignature Language="C#" Value="Installed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.PM.ApplicationInfoFlags Installed = int32(8388608)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ApplicationInfoFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Value for <c><see cref="P:Android.Content.PM.ApplicationInfo.Flags" /></c>: true if the application is currently
 installed for the calling user.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="IsDataOnly">
      <MemberSignature Language="C#" Value="IsDataOnly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.PM.ApplicationInfoFlags IsDataOnly = int32(16777216)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ApplicationInfoFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Value for <c><see cref="P:Android.Content.PM.ApplicationInfo.Flags" /></c>: true if the application only has its
 data installed; the application package itself does not currently
 exist on the device.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="IsGame">
      <MemberSignature Language="C#" Value="IsGame" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.PM.ApplicationInfoFlags IsGame = int32(33554432)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ApplicationInfoFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
      </Docs>
    </Member>
    <Member MemberName="KillAfterRestore">
      <MemberSignature Language="C#" Value="KillAfterRestore" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.PM.ApplicationInfoFlags KillAfterRestore = int32(65536)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ApplicationInfoFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">
            <c>
              <see cref="P:Android.Content.PM.ApplicationInfo.Flags" />
            </c>
            <c>false</c>
            <c>true</c>
            <c>false</c>
          </para>
          <para tool="javadoc-to-mdoc">
            <c>
              <see cref="!:NoType:android/R$styleable;Href=../../../../reference/android/R.styleable.html#AndroidManifestApplication_allowBackup" />
            </c>
            <c>false</c>
            <c>
              <see cref="!:NoType:android/R$styleable;Href=../../../../reference/android/R.styleable.html#AndroidManifestApplication_backupAgent" />
            </c>
          </para>
          <para tool="javadoc-to-mdoc">Comes from the
 <c><see cref="!:NoType:android/R$styleable;Href=../../../../reference/android/R.styleable.html#AndroidManifestApplication_killAfterRestore" /></c>
 attribute of the &lt;application&gt; tag.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="LargeHeap">
      <MemberSignature Language="C#" Value="LargeHeap" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.PM.ApplicationInfoFlags LargeHeap = int32(1048576)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ApplicationInfoFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Value for <c><see cref="P:Android.Content.PM.ApplicationInfo.Flags" /></c>: true when the application has requested a
 large heap for its processes.  Corresponds to
 <c><see cref="!:NoType:android/R$styleable;Href=../../../../reference/android/R.styleable.html#AndroidManifestApplication_largeHeap" /></c>.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Multiarch">
      <MemberSignature Language="C#" Value="Multiarch" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.PM.ApplicationInfoFlags Multiarch = int32(-2147483648)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ApplicationInfoFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.PM.ApplicationInfoFlags None = int32(0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ApplicationInfoFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
      </Docs>
    </Member>
    <Member MemberName="Persistent">
      <MemberSignature Language="C#" Value="Persistent" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.PM.ApplicationInfoFlags Persistent = int32(8)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ApplicationInfoFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Value for <c><see cref="P:Android.Content.PM.ApplicationInfo.Flags" /></c>: set to true if this application is persistent.
 Comes from <c><see cref="!:NoType:android/R$styleable;Href=../../../../reference/android/R.styleable.html#AndroidManifestApplication_persistent" /></c> of the &lt;application&gt; tag.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ResizeableForScreens">
      <MemberSignature Language="C#" Value="ResizeableForScreens" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.PM.ApplicationInfoFlags ResizeableForScreens = int32(4096)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ApplicationInfoFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Value for <c><see cref="P:Android.Content.PM.ApplicationInfo.Flags" /></c>: true when the application knows how to adjust
 its UI for different screen sizes.  Corresponds to
 <c><see cref="!:NoType:android/R$styleable;Href=../../../../reference/android/R.styleable.html#AndroidManifestSupportsScreens_resizeable" /></c>.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="RestoreAnyVersion">
      <MemberSignature Language="C#" Value="RestoreAnyVersion" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.PM.ApplicationInfoFlags RestoreAnyVersion = int32(131072)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ApplicationInfoFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">
            <c>
              <see cref="P:Android.Content.PM.ApplicationInfo.Flags" />
            </c>
            <c>true</c>
            <format type="text/html">
              <i>Use with caution!</i>
            </format>
            <c>false</c>
          </para>
          <para tool="javadoc-to-mdoc">
            <c>
              <see cref="!:NoType:android/R$styleable;Href=../../../../reference/android/R.styleable.html#AndroidManifestApplication_allowBackup" />
            </c>
            <c>false</c>
            <c>
              <see cref="!:NoType:android/R$styleable;Href=../../../../reference/android/R.styleable.html#AndroidManifestApplication_backupAgent" />
            </c>
          </para>
          <para tool="javadoc-to-mdoc">Comes from the
 <c><see cref="!:NoType:android/R$styleable;Href=../../../../reference/android/R.styleable.html#AndroidManifestApplication_restoreAnyVersion" /></c>
 attribute of the &lt;application&gt; tag.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Stopped">
      <MemberSignature Language="C#" Value="Stopped" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.PM.ApplicationInfoFlags Stopped = int32(2097152)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ApplicationInfoFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Value for <c><see cref="P:Android.Content.PM.ApplicationInfo.Flags" /></c>: true if this application's package is in
 the stopped state.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SupportsLargeScreens">
      <MemberSignature Language="C#" Value="SupportsLargeScreens" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.PM.ApplicationInfoFlags SupportsLargeScreens = int32(2048)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ApplicationInfoFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Value for <c><see cref="P:Android.Content.PM.ApplicationInfo.Flags" /></c>: true when the application's window can be
 increased in size for larger screens.  Corresponds to
 <c><see cref="!:NoType:android/R$styleable;Href=../../../../reference/android/R.styleable.html#AndroidManifestSupportsScreens_largeScreens" /></c>.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SupportsNormalScreens">
      <MemberSignature Language="C#" Value="SupportsNormalScreens" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.PM.ApplicationInfoFlags SupportsNormalScreens = int32(1024)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ApplicationInfoFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Value for <c><see cref="P:Android.Content.PM.ApplicationInfo.Flags" /></c>: true when the application's window can be
 displayed on normal screens.  Corresponds to
 <c><see cref="!:NoType:android/R$styleable;Href=../../../../reference/android/R.styleable.html#AndroidManifestSupportsScreens_normalScreens" /></c>.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SupportsRtl">
      <MemberSignature Language="C#" Value="SupportsRtl" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.PM.ApplicationInfoFlags SupportsRtl = int32(4194304)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ApplicationInfoFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Value for <c><see cref="P:Android.Content.PM.ApplicationInfo.Flags" /></c>: true  when the application is willing to support
 RTL (right to left). All activities will inherit this value.

 Set from the <c><see cref="F:Android.Resource.Attribute.SupportsRtl" /></c> attribute in the
 activity's manifest.

 Default value is false (no support for RTL).
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SupportsScreenDensities">
      <MemberSignature Language="C#" Value="SupportsScreenDensities" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.PM.ApplicationInfoFlags SupportsScreenDensities = int32(8192)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ApplicationInfoFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Value for <c><see cref="P:Android.Content.PM.ApplicationInfo.Flags" /></c>: true when the application knows how to
 accomodate different screen densities.  Corresponds to
 <c><see cref="!:NoType:android/R$styleable;Href=../../../../reference/android/R.styleable.html#AndroidManifestSupportsScreens_anyDensity" /></c>.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SupportsSmallScreens">
      <MemberSignature Language="C#" Value="SupportsSmallScreens" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.PM.ApplicationInfoFlags SupportsSmallScreens = int32(512)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ApplicationInfoFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Value for <c><see cref="P:Android.Content.PM.ApplicationInfo.Flags" /></c>: true when the application's window can be
 reduced in size for smaller screens.  Corresponds to
 <c><see cref="!:NoType:android/R$styleable;Href=../../../../reference/android/R.styleable.html#AndroidManifestSupportsScreens_smallScreens" /></c>.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SupportsXLargeScreens">
      <MemberSignature Language="C#" Value="SupportsXLargeScreens" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.PM.ApplicationInfoFlags SupportsXLargeScreens = int32(524288)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ApplicationInfoFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Value for <c><see cref="P:Android.Content.PM.ApplicationInfo.Flags" /></c>: true when the application's window can be
 increased in size for extra large screens.  Corresponds to
 <c><see cref="!:NoType:android/R$styleable;Href=../../../../reference/android/R.styleable.html#AndroidManifestSupportsScreens_xlargeScreens" /></c>.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="System">
      <MemberSignature Language="C#" Value="System" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.PM.ApplicationInfoFlags System = int32(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ApplicationInfoFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Value for <c><see cref="P:Android.Content.PM.ApplicationInfo.Flags" /></c>: if set, this application is installed in the
 device's system image.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="TestOnly">
      <MemberSignature Language="C#" Value="TestOnly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.PM.ApplicationInfoFlags TestOnly = int32(256)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ApplicationInfoFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Value for <c><see cref="P:Android.Content.PM.ApplicationInfo.Flags" /></c>: this is set of the application has specified
 <c><see cref="!:NoType:android/R$styleable;Href=../../../../reference/android/R.styleable.html#AndroidManifestApplication_testOnly" /></c> to be true.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="UpdatedSystemApp">
      <MemberSignature Language="C#" Value="UpdatedSystemApp" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.PM.ApplicationInfoFlags UpdatedSystemApp = int32(128)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ApplicationInfoFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Value for <c><see cref="P:Android.Content.PM.ApplicationInfo.Flags" /></c>: this is set if this application has been
 install as an update to a built-in system application.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="VMSafeMode">
      <MemberSignature Language="C#" Value="VMSafeMode" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.PM.ApplicationInfoFlags VMSafeMode = int32(16384)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ApplicationInfoFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Value for <c><see cref="P:Android.Content.PM.ApplicationInfo.Flags" /></c>: set to true if this application would like to
 request the VM to operate under the safe mode. Comes from
 <c><see cref="!:NoType:android/R$styleable;Href=../../../../reference/android/R.styleable.html#AndroidManifestApplication_vmSafeMode" /></c> of the &lt;application&gt; tag.
</para>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>