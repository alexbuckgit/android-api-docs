<Type Name="PackageManager" FullName="Android.Content.PM.PackageManager">
  <TypeSignature Language="C#" Value="public abstract class PackageManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PackageManager extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/content/pm/PackageManager", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Class for retrieving various kinds of information related to the application
 packages that are currently installed on the device.</summary>
    <remarks />
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PackageManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PackageManager (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AddPackageToPreferred">
      <MemberSignature Language="C#" Value="public abstract void AddPackageToPreferred (string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddPackageToPreferred(string packageName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addPackageToPreferred", "(Ljava/lang/String;)V", "GetAddPackageToPreferred_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">To be added.</param>
        <summary>
        </summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AddPermission">
      <MemberSignature Language="C#" Value="public abstract bool AddPermission (Android.Content.PM.PermissionInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AddPermission(class Android.Content.PM.PermissionInfo info) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addPermission", "(Landroid/content/pm/PermissionInfo;)Z", "GetAddPermission_Landroid_content_pm_PermissionInfo_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="Android.Content.PM.PermissionInfo" />
      </Parameters>
      <Docs>
        <param name="info">Description of the permission to be added.</param>
        <summary>Add a new dynamic permission to the system.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.SecurityException">if you are not allowed to add the
 given permission name.</exception>
        <altmember cref="M:Android.Content.PM.PackageManager.RemovePermission(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="AddPermissionAsync">
      <MemberSignature Language="C#" Value="public abstract bool AddPermissionAsync (Android.Content.PM.PermissionInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AddPermissionAsync(class Android.Content.PM.PermissionInfo info) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addPermissionAsync", "(Landroid/content/pm/PermissionInfo;)Z", "GetAddPermissionAsync_Landroid_content_pm_PermissionInfo_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="Android.Content.PM.PermissionInfo" />
      </Parameters>
      <Docs>
        <param name="info">To be added.</param>
        <summary>Like <c><see cref="M:Android.Content.PM.PackageManager.AddPermission(Android.Content.PM.PermissionInfo)" /></c> but asynchronously
 persists the package manager state after returning from the call,
 allowing it to return quicker and batch a series of adds at the
 expense of no guarantee the added permission will be retained if
 the device is rebooted before it is written.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="AddPreferredActivity">
      <MemberSignature Language="C#" Value="public abstract void AddPreferredActivity (Android.Content.IntentFilter filter, Android.Content.MatchResults match, Android.Content.ComponentName[] set, Android.Content.ComponentName activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddPreferredActivity(class Android.Content.IntentFilter filter, valuetype Android.Content.MatchResults match, class Android.Content.ComponentName[] set, class Android.Content.ComponentName activity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addPreferredActivity", "(Landroid/content/IntentFilter;I[Landroid/content/ComponentName;Landroid/content/ComponentName;)V", "GetAddPreferredActivity_Landroid_content_IntentFilter_IarrayLandroid_content_ComponentName_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="Android.Content.IntentFilter" />
        <Parameter Name="match" Type="Android.Content.MatchResults">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="set" Type="Android.Content.ComponentName[]" />
        <Parameter Name="activity" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="filter">The set of intents under which this activity will be
 made preferred.</param>
        <param name="match">The IntentFilter match category that this preference
 applies to.</param>
        <param name="set">The set of activities that the user was picking from when
 this preference was made.</param>
        <param name="activity">The component name of the activity that is to be
 preferred.
</param>
        <summary>
        </summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CanonicalToCurrentPackageNames">
      <MemberSignature Language="C#" Value="public abstract string[] CanonicalToCurrentPackageNames (string[] names);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] CanonicalToCurrentPackageNames(string[] names) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("canonicalToCurrentPackageNames", "([Ljava/lang/String;)[Ljava/lang/String;", "GetCanonicalToCurrentPackageNames_arrayLjava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="names" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="names">Array of new names to be mapped.</param>
        <summary>Map from a packages canonical name to the current name in use on the device.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="CheckPermission">
      <MemberSignature Language="C#" Value="public abstract Android.Content.PM.Permission CheckPermission (string permName, string pkgName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Content.PM.Permission CheckPermission(string permName, string pkgName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("checkPermission", "(Ljava/lang/String;Ljava/lang/String;)I", "GetCheckPermission_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.Permission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permName" Type="System.String" />
        <Parameter Name="pkgName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="permName">The name of the permission you are checking for.</param>
        <param name="pkgName">The name of the package you are checking against.</param>
        <summary>Check whether a particular package has been granted a particular
 permission.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CheckSignatures">
      <MemberSignature Language="C#" Value="public abstract Android.Content.PM.SignatureResult CheckSignatures (int uid1, int uid2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Content.PM.SignatureResult CheckSignatures(int32 uid1, int32 uid2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("checkSignatures", "(II)I", "GetCheckSignatures_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.SignatureResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid1" Type="System.Int32" />
        <Parameter Name="uid2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="uid1">First UID whose signature will be compared.</param>
        <param name="uid2">Second UID whose signature will be compared.</param>
        <summary tool="true">Like <c><see cref="M:Android.Content.PM.PackageManager.CheckSignatures(System.String, System.String)" /></c>, but takes UIDs of
 the two packages to be checked.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 5" />
        <altmember cref="M:Android.Content.PM.PackageManager.CheckSignatures(System.String, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CheckSignatures">
      <MemberSignature Language="C#" Value="public abstract Android.Content.PM.SignatureResult CheckSignatures (string pkg1, string pkg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Content.PM.SignatureResult CheckSignatures(string pkg1, string pkg2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("checkSignatures", "(Ljava/lang/String;Ljava/lang/String;)I", "GetCheckSignatures_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.SignatureResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pkg1" Type="System.String" />
        <Parameter Name="pkg2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pkg1">First package name whose signature will be compared.</param>
        <param name="pkg2">Second package name whose signature will be compared.</param>
        <summary>Compare the signatures of two packages to determine if the same
 signature appears in both of them.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.PM.PackageManager.CheckSignatures(System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ClearPackagePreferredActivities">
      <MemberSignature Language="C#" Value="public abstract void ClearPackagePreferredActivities (string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearPackagePreferredActivities(string packageName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearPackagePreferredActivities", "(Ljava/lang/String;)V", "GetClearPackagePreferredActivities_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">The name of the package whose preferred activity
 mappings are to be removed.
</param>
        <summary>Remove all preferred activity mappings, previously added with
 <c><see cref="M:Android.Content.PM.PackageManager.AddPreferredActivity(Android.Content.IntentFilter, Android.Content.MatchResults, Android.Content.MatchResults, Android.Content.MatchResults)" /></c>, from the
 system whose activities are implemented in the given package name.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CurrentToCanonicalPackageNames">
      <MemberSignature Language="C#" Value="public abstract string[] CurrentToCanonicalPackageNames (string[] names);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] CurrentToCanonicalPackageNames(string[] names) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("currentToCanonicalPackageNames", "([Ljava/lang/String;)[Ljava/lang/String;", "GetCurrentToCanonicalPackageNames_arrayLjava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="names" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="names">Array of current names to be mapped.</param>
        <summary>Map from the current package names in use on the device to whatever
 the current canonical name of that package is.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DefaultActivityIcon">
      <MemberSignature Language="C#" Value="public abstract Android.Graphics.Drawables.Drawable DefaultActivityIcon { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Drawables.Drawable DefaultActivityIcon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDefaultActivityIcon", "()Landroid/graphics/drawable/Drawable;", "GetGetDefaultActivityIconHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the generic icon for an activity that is used when no specific
 icon is defined.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DontKillApp">
      <MemberSignature Language="C#" Value="public const Android.Content.PM.ComponentEnableOption DontKillApp = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.PM.ComponentEnableOption DontKillApp = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DONT_KILL_APP")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Content.PM.ComponentEnableOption enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ComponentEnableOption</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Flag parameter for
 <c><see cref="M:Android.Content.PM.PackageManager.SetComponentEnabledSetting(Android.Content.ComponentName, Android.Content.PM.ComponentEnabledState, Android.Content.PM.ComponentEnabledState)" /></c> to indicate
 that you don't want to kill the app containing the component.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ExtendVerificationTimeout">
      <MemberSignature Language="C#" Value="public abstract void ExtendVerificationTimeout (int id, Android.Content.PM.PackageInstallVerification verificationCodeAtTimeout, long millisecondsToDelay);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExtendVerificationTimeout(int32 id, valuetype Android.Content.PM.PackageInstallVerification verificationCodeAtTimeout, int64 millisecondsToDelay) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("extendVerificationTimeout", "(IIJ)V", "GetExtendVerificationTimeout_IIJHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="verificationCodeAtTimeout" Type="Android.Content.PM.PackageInstallVerification">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="millisecondsToDelay" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="id">pending package identifier as passed via the
            <c><see cref="F:Android.Content.PM.PackageManager.ExtraVerificationId" /></c> Intent extra.</param>
        <param name="verificationCodeAtTimeout">either
            <c><see cref="F:Android.Content.PM.PackageManager.VerificationAllow" /></c> or
            <c><see cref="F:Android.Content.PM.PackageManager.VerificationReject" /></c>. If
            <c>verificationCodeAtTimeout</c> is neither
            <c><see cref="F:Android.Content.PM.PackageManager.VerificationAllow" /></c> or
            <c><see cref="F:Android.Content.PM.PackageManager.VerificationReject" /></c>, then
            <c>verificationCodeAtTimeout</c> will default to
            <c><see cref="F:Android.Content.PM.PackageManager.VerificationReject" /></c>.</param>
        <param name="millisecondsToDelay">the amount of time requested for the timeout.
            Must be positive and less than
            <c><see cref="F:Android.Content.PM.PackageManager.MaximumVerificationTimeout" /></c>. If
            <c>millisecondsToDelay</c> is out of bounds,
            <c>millisecondsToDelay</c> will be set to the closest in
            bounds value; namely, 0 or
            <c><see cref="F:Android.Content.PM.PackageManager.MaximumVerificationTimeout" /></c>.</param>
        <summary>Allows a package listening to the
 <c><see cref="F:Android.Content.Intent.ActionPackageNeedsVerification" /></c> to extend the default timeout for a response and declare what
 action to perform after the timeout occurs.</summary>
        <remarks />
        <since version="Added in API level 17" />
        <exception cref="T:Java.Lang.SecurityException">if the caller does not have the
            PACKAGE_VERIFICATION_AGENT permission.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtraVerificationId">
      <MemberSignature Language="C#" Value="public const string ExtraVerificationId;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraVerificationId" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_VERIFICATION_ID")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Extra field name for the ID of a package pending verification.</summary>
        <remarks />
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="ExtraVerificationResult">
      <MemberSignature Language="C#" Value="public const string ExtraVerificationResult;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraVerificationResult" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_VERIFICATION_RESULT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Extra field name for the result of a verification, either
 <c><see cref="F:Android.Content.PM.PackageManager.VerificationAllow" /></c>, or <c><see cref="F:Android.Content.PM.PackageManager.VerificationReject" /></c>.</summary>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="FeatureAppWidgets">
      <MemberSignature Language="C#" Value="public const string FeatureAppWidgets;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureAppWidgets" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_APP_WIDGETS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device supports app widgets.</summary>
        <remarks />
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="FeatureAudioLowLatency">
      <MemberSignature Language="C#" Value="public const string FeatureAudioLowLatency;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureAudioLowLatency" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_AUDIO_LOW_LATENCY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device's
 audio pipeline is low-latency, more suitable for audio applications sensitive to delays or
 lag in sound input or output.</summary>
        <remarks />
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="FeatureAudioOutput">
      <MemberSignature Language="C#" Value="public const string FeatureAudioOutput;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureAudioOutput" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_AUDIO_OUTPUT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device includes at least one form of audio
 output, such as speakers, audio jack or streaming over bluetooth
</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FeatureBackup">
      <MemberSignature Language="C#" Value="public const string FeatureBackup;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureBackup" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_BACKUP")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>:
 The device can perform backup and restore operations on installed applications.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FeatureBluetooth">
      <MemberSignature Language="C#" Value="public const string FeatureBluetooth;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureBluetooth" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_BLUETOOTH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device is capable of communicating with
 other devices via Bluetooth.</summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="FeatureBluetoothLe">
      <MemberSignature Language="C#" Value="public const string FeatureBluetoothLe;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureBluetoothLe" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_BLUETOOTH_LE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device is capable of communicating with
 other devices via Bluetooth Low Energy radio.</summary>
        <remarks />
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="FeatureCamera">
      <MemberSignature Language="C#" Value="public const string FeatureCamera;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureCamera" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_CAMERA")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device has a camera facing away
 from the screen.</summary>
        <remarks />
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="FeatureCameraAny">
      <MemberSignature Language="C#" Value="public const string FeatureCameraAny;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureCameraAny" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_CAMERA_ANY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device has at least one camera pointing in
 some direction, or can support an external camera being connected to it.</summary>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="FeatureCameraAutofocus">
      <MemberSignature Language="C#" Value="public const string FeatureCameraAutofocus;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureCameraAutofocus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_CAMERA_AUTOFOCUS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device's camera supports auto-focus.</summary>
        <remarks />
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="FeatureCameraCapabilityManualPostProcessing">
      <MemberSignature Language="C#" Value="public const string FeatureCameraCapabilityManualPostProcessing;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureCameraCapabilityManualPostProcessing" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_CAMERA_CAPABILITY_MANUAL_POST_PROCESSING")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: At least one
 of the cameras on the device supports the
 <c><see cref="!:Android.Hardware.Camera2.CameraMetadata.REQUEST_AVAILABLE_CAPABILITIES_MANUAL_POST_PROCESSING" /></c>
 capability level.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FeatureCameraCapabilityManualSensor">
      <MemberSignature Language="C#" Value="public const string FeatureCameraCapabilityManualSensor;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureCameraCapabilityManualSensor" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_CAMERA_CAPABILITY_MANUAL_SENSOR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: At least one
 of the cameras on the device supports the
 <c><see cref="!:Android.Hardware.Camera2.CameraMetadata.REQUEST_AVAILABLE_CAPABILITIES_MANUAL_SENSOR" /></c>
 capability level.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FeatureCameraCapabilityRaw">
      <MemberSignature Language="C#" Value="public const string FeatureCameraCapabilityRaw;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureCameraCapabilityRaw" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_CAMERA_CAPABILITY_RAW")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: At least one
 of the cameras on the device supports the
 <c><see cref="!:Android.Hardware.Camera2.CameraMetadata.REQUEST_AVAILABLE_CAPABILITIES_RAW" /></c>
 capability level.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FeatureCameraExternal">
      <MemberSignature Language="C#" Value="public const string FeatureCameraExternal;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureCameraExternal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_CAMERA_EXTERNAL")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device can support having an external camera connected to it.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FeatureCameraFlash">
      <MemberSignature Language="C#" Value="public const string FeatureCameraFlash;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureCameraFlash" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_CAMERA_FLASH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device's camera supports flash.</summary>
        <remarks />
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="FeatureCameraFront">
      <MemberSignature Language="C#" Value="public const string FeatureCameraFront;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureCameraFront" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_CAMERA_FRONT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device has a front facing camera.</summary>
        <remarks />
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="FeatureCameraLevelFull">
      <MemberSignature Language="C#" Value="public const string FeatureCameraLevelFull;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureCameraLevelFull" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_CAMERA_LEVEL_FULL")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: At least one
 of the cameras on the device supports the
 <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.InfoSupportedHardwareLevel" /></c>
 capability level.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FeatureConnectionService">
      <MemberSignature Language="C#" Value="public const string FeatureConnectionService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureConnectionService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_CONNECTION_SERVICE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The Connection Service API is enabled on the device.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FeatureConsumerIr">
      <MemberSignature Language="C#" Value="public const string FeatureConsumerIr;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureConsumerIr" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_CONSUMER_IR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device is capable of communicating with
 consumer IR devices.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FeatureDeviceAdmin">
      <MemberSignature Language="C#" Value="public const string FeatureDeviceAdmin;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureDeviceAdmin" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_DEVICE_ADMIN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device supports device policy enforcement via device admins.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FeatureFaketouch">
      <MemberSignature Language="C#" Value="public const string FeatureFaketouch;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureFaketouch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_FAKETOUCH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device does not have a touch screen, but
 does support touch emulation for basic events.</summary>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="FeatureFaketouchMultitouchDistinct">
      <MemberSignature Language="C#" Value="public const string FeatureFaketouchMultitouchDistinct;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureFaketouchMultitouchDistinct" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_FAKETOUCH_MULTITOUCH_DISTINCT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device does not have a touch screen, but
 does support touch emulation for basic events that supports distinct
 tracking of two or more fingers.</summary>
        <remarks />
        <since version="Added in API level 13" />
      </Docs>
    </Member>
    <Member MemberName="FeatureFaketouchMultitouchJazzhand">
      <MemberSignature Language="C#" Value="public const string FeatureFaketouchMultitouchJazzhand;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureFaketouchMultitouchJazzhand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_FAKETOUCH_MULTITOUCH_JAZZHAND")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device does not have a touch screen, but
 does support touch emulation for basic events that supports tracking
 a hand of fingers (5 or more fingers) fully independently.</summary>
        <remarks />
        <since version="Added in API level 13" />
      </Docs>
    </Member>
    <Member MemberName="FeatureGamepad">
      <MemberSignature Language="C#" Value="public const string FeatureGamepad;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureGamepad" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_GAMEPAD")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>:
 The device has all of the inputs necessary to be considered a compatible game controller, or
 includes a compatible game controller in the box.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FeatureHomeScreen">
      <MemberSignature Language="C#" Value="public const string FeatureHomeScreen;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureHomeScreen" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_HOME_SCREEN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device supports a home screen that is replaceable
 by third party applications.</summary>
        <remarks />
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="FeatureInputMethods">
      <MemberSignature Language="C#" Value="public const string FeatureInputMethods;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureInputMethods" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_INPUT_METHODS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device supports adding new input methods implemented
 with the <c><see cref="T:Android.InputMethodServices.InputMethodService" /></c> API.</summary>
        <remarks />
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="FeatureLeanback">
      <MemberSignature Language="C#" Value="public const string FeatureLeanback;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureLeanback" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_LEANBACK")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device supports leanback UI.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FeatureLiveTv">
      <MemberSignature Language="C#" Value="public const string FeatureLiveTv;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureLiveTv" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_LIVE_TV")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device supports live TV and can display
 contents from TV inputs implemented with the
 <c><see cref="T:Android.Media.TV.TvInputService" /></c> API.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FeatureLiveWallpaper">
      <MemberSignature Language="C#" Value="public const string FeatureLiveWallpaper;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureLiveWallpaper" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_LIVE_WALLPAPER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device supports live wallpapers.</summary>
        <remarks />
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="FeatureLocation">
      <MemberSignature Language="C#" Value="public const string FeatureLocation;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureLocation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_LOCATION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device supports one or more methods of
 reporting current location.</summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="FeatureLocationGps">
      <MemberSignature Language="C#" Value="public const string FeatureLocationGps;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureLocationGps" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_LOCATION_GPS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device has a Global Positioning System
 receiver and can report precise location.</summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="FeatureLocationNetwork">
      <MemberSignature Language="C#" Value="public const string FeatureLocationNetwork;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureLocationNetwork" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_LOCATION_NETWORK")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device can report location with coarse
 accuracy using a network-based geolocation system.</summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="FeatureManagedUsers">
      <MemberSignature Language="C#" Value="public const string FeatureManagedUsers;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureManagedUsers" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_MANAGED_USERS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>:
 The device supports creating secondary users and managed profiles via
 <c><see cref="T:Android.App.Admin.DevicePolicyManager" /></c>.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FeatureMicrophone">
      <MemberSignature Language="C#" Value="public const string FeatureMicrophone;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureMicrophone" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_MICROPHONE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device can record audio via a
 microphone.</summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="FeatureNfc">
      <MemberSignature Language="C#" Value="public const string FeatureNfc;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureNfc" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_NFC")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device can communicate using Near-Field
 Communications (NFC).</summary>
        <remarks />
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="FeatureNfcHostCardEmulation">
      <MemberSignature Language="C#" Value="public const string FeatureNfcHostCardEmulation;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureNfcHostCardEmulation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_NFC_HOST_CARD_EMULATION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device supports host-
 based NFC card emulation.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FeatureOpenglesExtensionPack">
      <MemberSignature Language="C#" Value="public const string FeatureOpenglesExtensionPack;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureOpenglesExtensionPack" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_OPENGLES_EXTENSION_PACK")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device supports the OpenGL ES
 .</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FeaturePrinting">
      <MemberSignature Language="C#" Value="public const string FeaturePrinting;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeaturePrinting" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_PRINTING")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>:
 The device supports printing.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FeatureScreenLandscape">
      <MemberSignature Language="C#" Value="public const string FeatureScreenLandscape;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureScreenLandscape" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_SCREEN_LANDSCAPE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device supports landscape orientation
 screens.</summary>
        <remarks />
        <since version="Added in API level 13" />
      </Docs>
    </Member>
    <Member MemberName="FeatureScreenPortrait">
      <MemberSignature Language="C#" Value="public const string FeatureScreenPortrait;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureScreenPortrait" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_SCREEN_PORTRAIT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device supports portrait orientation
 screens.</summary>
        <remarks />
        <since version="Added in API level 13" />
      </Docs>
    </Member>
    <Member MemberName="FeatureSecurelyRemovesUsers">
      <MemberSignature Language="C#" Value="public const string FeatureSecurelyRemovesUsers;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureSecurelyRemovesUsers" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_SECURELY_REMOVES_USERS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>:
 The device supports secure removal of users.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FeatureSensorAccelerometer">
      <MemberSignature Language="C#" Value="public const string FeatureSensorAccelerometer;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureSensorAccelerometer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_SENSOR_ACCELEROMETER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device includes an accelerometer.</summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="FeatureSensorAmbientTemperature">
      <MemberSignature Language="C#" Value="public const string FeatureSensorAmbientTemperature;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureSensorAmbientTemperature" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_SENSOR_AMBIENT_TEMPERATURE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device includes an ambient temperature sensor.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FeatureSensorBarometer">
      <MemberSignature Language="C#" Value="public const string FeatureSensorBarometer;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureSensorBarometer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_SENSOR_BAROMETER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device includes a barometer (air
 pressure sensor.</summary>
        <remarks />
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="FeatureSensorCompass">
      <MemberSignature Language="C#" Value="public const string FeatureSensorCompass;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureSensorCompass" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_SENSOR_COMPASS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device includes a magnetometer (compass).</summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="FeatureSensorGyroscope">
      <MemberSignature Language="C#" Value="public const string FeatureSensorGyroscope;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureSensorGyroscope" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_SENSOR_GYROSCOPE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device includes a gyroscope.</summary>
        <remarks />
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="FeatureSensorHeartRate">
      <MemberSignature Language="C#" Value="public const string FeatureSensorHeartRate;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureSensorHeartRate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_SENSOR_HEART_RATE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device includes a heart rate monitor.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FeatureSensorHeartRateEcg">
      <MemberSignature Language="C#" Value="public const string FeatureSensorHeartRateEcg;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureSensorHeartRateEcg" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_SENSOR_HEART_RATE_ECG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The heart rate sensor on this device is an Electrocargiogram.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FeatureSensorLight">
      <MemberSignature Language="C#" Value="public const string FeatureSensorLight;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureSensorLight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_SENSOR_LIGHT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device includes a light sensor.</summary>
        <remarks />
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="FeatureSensorProximity">
      <MemberSignature Language="C#" Value="public const string FeatureSensorProximity;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureSensorProximity" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_SENSOR_PROXIMITY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device includes a proximity sensor.</summary>
        <remarks />
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="FeatureSensorRelativeHumidity">
      <MemberSignature Language="C#" Value="public const string FeatureSensorRelativeHumidity;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureSensorRelativeHumidity" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_SENSOR_RELATIVE_HUMIDITY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device includes a relative humidity sensor.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FeatureSensorStepCounter">
      <MemberSignature Language="C#" Value="public const string FeatureSensorStepCounter;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureSensorStepCounter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_SENSOR_STEP_COUNTER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device includes a hardware step counter.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FeatureSensorStepDetector">
      <MemberSignature Language="C#" Value="public const string FeatureSensorStepDetector;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureSensorStepDetector" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_SENSOR_STEP_DETECTOR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device includes a hardware step detector.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FeatureSip">
      <MemberSignature Language="C#" Value="public const string FeatureSip;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureSip" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_SIP")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The SIP API is enabled on the device.</summary>
        <remarks />
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="FeatureSipVoip">
      <MemberSignature Language="C#" Value="public const string FeatureSipVoip;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureSipVoip" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_SIP_VOIP")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device supports SIP-based VOIP.</summary>
        <remarks />
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="FeatureTelephony">
      <MemberSignature Language="C#" Value="public const string FeatureTelephony;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureTelephony" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_TELEPHONY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device has a telephony radio with data
 communication support.</summary>
        <remarks />
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="FeatureTelephonyCdma">
      <MemberSignature Language="C#" Value="public const string FeatureTelephonyCdma;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureTelephonyCdma" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_TELEPHONY_CDMA")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device has a CDMA telephony stack.</summary>
        <remarks />
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="FeatureTelephonyGsm">
      <MemberSignature Language="C#" Value="public const string FeatureTelephonyGsm;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureTelephonyGsm" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_TELEPHONY_GSM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device has a GSM telephony stack.</summary>
        <remarks />
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="FeatureTelevision">
      <MemberSignature Language="C#" Value="public const string FeatureTelevision;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureTelevision" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_TELEVISION")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: This is a device dedicated to showing UI
 on a television.</summary>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="FeatureTouchscreen">
      <MemberSignature Language="C#" Value="public const string FeatureTouchscreen;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureTouchscreen" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_TOUCHSCREEN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device's display has a touch screen.</summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="FeatureTouchscreenMultitouch">
      <MemberSignature Language="C#" Value="public const string FeatureTouchscreenMultitouch;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureTouchscreenMultitouch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_TOUCHSCREEN_MULTITOUCH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device's touch screen supports
 multitouch sufficient for basic two-finger gesture detection.</summary>
        <remarks />
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="FeatureTouchscreenMultitouchDistinct">
      <MemberSignature Language="C#" Value="public const string FeatureTouchscreenMultitouchDistinct;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureTouchscreenMultitouchDistinct" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_TOUCHSCREEN_MULTITOUCH_DISTINCT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device's touch screen is capable of
 tracking two or more fingers fully independently.</summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="FeatureTouchscreenMultitouchJazzhand">
      <MemberSignature Language="C#" Value="public const string FeatureTouchscreenMultitouchJazzhand;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureTouchscreenMultitouchJazzhand" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_TOUCHSCREEN_MULTITOUCH_JAZZHAND")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device's touch screen is capable of
 tracking a full hand of fingers fully independently -- that is, 5 or
 more simultaneous independent pointers.</summary>
        <remarks />
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="FeatureUsbAccessory">
      <MemberSignature Language="C#" Value="public const string FeatureUsbAccessory;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureUsbAccessory" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_USB_ACCESSORY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device supports connecting to USB accessories.</summary>
        <remarks />
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="FeatureUsbHost">
      <MemberSignature Language="C#" Value="public const string FeatureUsbHost;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureUsbHost" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_USB_HOST")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device supports connecting to USB devices
 as the USB host.</summary>
        <remarks />
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="FeatureVerifiedBoot">
      <MemberSignature Language="C#" Value="public const string FeatureVerifiedBoot;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureVerifiedBoot" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_VERIFIED_BOOT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>:
 The device supports verified boot.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FeatureWatch">
      <MemberSignature Language="C#" Value="public const string FeatureWatch;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureWatch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_WATCH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: This is a device dedicated to showing UI
 on a watch.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FeatureWebview">
      <MemberSignature Language="C#" Value="public const string FeatureWebview;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureWebview" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_WEBVIEW")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>:
 The device has a full implementation of the android.webkit.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FeatureWifi">
      <MemberSignature Language="C#" Value="public const string FeatureWifi;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureWifi" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_WIFI")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device supports WiFi (802.11) networking.</summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="FeatureWifiDirect">
      <MemberSignature Language="C#" Value="public const string FeatureWifiDirect;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureWifiDirect" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_WIFI_DIRECT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Feature for <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c> and
 <c><see cref="M:Android.Content.PM.PackageManager.HasSystemFeature(System.String)" /></c>: The device supports Wi-Fi Direct networking.</summary>
        <remarks />
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="GetActivityBanner">
      <MemberSignature Language="C#" Value="public abstract Android.Graphics.Drawables.Drawable GetActivityBanner (Android.Content.ComponentName activityName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable GetActivityBanner(class Android.Content.ComponentName activityName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getActivityBanner", "(Landroid/content/ComponentName;)Landroid/graphics/drawable/Drawable;", "GetGetActivityBanner_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityName" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="activityName">Name of the activity whose banner is to be retrieved.</param>
        <summary tool="true">Retrieve the banner associated with an activity.</summary>
        <returns>To be added.</returns>
        <remarks />
        <exception cref="!:NoType:android/content/pm/PackageManager$NameNotFoundException;Href=../../../../reference/android/content/pm/PackageManager.NameNotFoundException.html">Thrown if the resources for the given
             activity could not be loaded.</exception>
        <altmember cref="M:Android.Content.PM.PackageManager.GetActivityBanner(Android.Content.Intent)" />
      </Docs>
    </Member>
    <Member MemberName="GetActivityBanner">
      <MemberSignature Language="C#" Value="public abstract Android.Graphics.Drawables.Drawable GetActivityBanner (Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable GetActivityBanner(class Android.Content.Intent intent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getActivityBanner", "(Landroid/content/Intent;)Landroid/graphics/drawable/Drawable;", "GetGetActivityBanner_Landroid_content_Intent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="intent">The intent for which you would like to retrieve a banner.</param>
        <summary>Retrieve the banner associated with an Intent.</summary>
        <returns>To be added.</returns>
        <remarks />
        <exception cref="!:NoType:android/content/pm/PackageManager$NameNotFoundException;Href=../../../../reference/android/content/pm/PackageManager.NameNotFoundException.html">Thrown if the resources for application
             matching the given intent could not be loaded.</exception>
        <altmember cref="M:Android.Content.PM.PackageManager.GetActivityBanner(Android.Content.ComponentName)" />
      </Docs>
    </Member>
    <Member MemberName="GetActivityIcon">
      <MemberSignature Language="C#" Value="public abstract Android.Graphics.Drawables.Drawable GetActivityIcon (Android.Content.ComponentName activityName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable GetActivityIcon(class Android.Content.ComponentName activityName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getActivityIcon", "(Landroid/content/ComponentName;)Landroid/graphics/drawable/Drawable;", "GetGetActivityIcon_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityName" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="activityName">Name of the activity whose icon is to be retrieved.</param>
        <summary tool="true">Retrieve the icon associated with an activity.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/pm/PackageManager$NameNotFoundException;Href=../../../../reference/android/content/pm/PackageManager.NameNotFoundException.html">Thrown if the resources for the given
 activity could not be loaded.</exception>
        <altmember cref="M:Android.Content.PM.PackageManager.GetActivityIcon(Android.Content.Intent)" />
      </Docs>
    </Member>
    <Member MemberName="GetActivityIcon">
      <MemberSignature Language="C#" Value="public abstract Android.Graphics.Drawables.Drawable GetActivityIcon (Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable GetActivityIcon(class Android.Content.Intent intent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getActivityIcon", "(Landroid/content/Intent;)Landroid/graphics/drawable/Drawable;", "GetGetActivityIcon_Landroid_content_Intent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="intent">The intent for which you would like to retrieve an icon.</param>
        <summary>Retrieve the icon associated with an Intent.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/pm/PackageManager$NameNotFoundException;Href=../../../../reference/android/content/pm/PackageManager.NameNotFoundException.html">Thrown if the resources for application
 matching the given intent could not be loaded.</exception>
        <altmember cref="M:Android.Content.PM.PackageManager.GetActivityIcon(Android.Content.ComponentName)" />
      </Docs>
    </Member>
    <Member MemberName="GetActivityInfo">
      <MemberSignature Language="C#" Value="public abstract Android.Content.PM.ActivityInfo GetActivityInfo (Android.Content.ComponentName component, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.PM.ActivityInfo GetActivityInfo(class Android.Content.ComponentName component, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getActivityInfo", "(Landroid/content/ComponentName;I)Landroid/content/pm/ActivityInfo;", "GetGetActivityInfo_Landroid_content_ComponentName_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ActivityInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="Android.Content.ComponentName" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="component">The full component name (i.e.
 com.google.apps.contacts/com.google.apps.contacts.ContactsList) of an Activity
 class.</param>
        <param name="flags">Additional option flags. Use any combination of
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.MetaData" tool="ReplaceLinkValue" /></c>, <c><see cref="F:Android.Content.PM.PackageInfoFlags.SharedLibraryFiles" tool="ReplaceLinkValue" /></c>,
 to modify the data (in ApplicationInfo) returned.</param>
        <summary>Retrieve all of the information we know about a particular activity
 class.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/pm/PackageManager$NameNotFoundException;Href=../../../../reference/android/content/pm/PackageManager.NameNotFoundException.html" />
      </Docs>
    </Member>
    <Member MemberName="GetActivityLogo">
      <MemberSignature Language="C#" Value="public abstract Android.Graphics.Drawables.Drawable GetActivityLogo (Android.Content.ComponentName activityName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable GetActivityLogo(class Android.Content.ComponentName activityName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getActivityLogo", "(Landroid/content/ComponentName;)Landroid/graphics/drawable/Drawable;", "GetGetActivityLogo_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityName" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="activityName">Name of the activity whose logo is to be retrieved.</param>
        <summary tool="true">Retrieve the logo associated with an activity.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 9" />
        <exception cref="!:NoType:android/content/pm/PackageManager$NameNotFoundException;Href=../../../../reference/android/content/pm/PackageManager.NameNotFoundException.html">Thrown if the resources for the given
             activity could not be loaded.</exception>
        <altmember cref="M:Android.Content.PM.PackageManager.GetActivityLogo(Android.Content.Intent)" />
      </Docs>
    </Member>
    <Member MemberName="GetActivityLogo">
      <MemberSignature Language="C#" Value="public abstract Android.Graphics.Drawables.Drawable GetActivityLogo (Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable GetActivityLogo(class Android.Content.Intent intent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getActivityLogo", "(Landroid/content/Intent;)Landroid/graphics/drawable/Drawable;", "GetGetActivityLogo_Landroid_content_Intent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="intent">The intent for which you would like to retrieve a logo.</param>
        <summary>Retrieve the logo associated with an Intent.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 9" />
        <exception cref="!:NoType:android/content/pm/PackageManager$NameNotFoundException;Href=../../../../reference/android/content/pm/PackageManager.NameNotFoundException.html">Thrown if the resources for application
 matching the given intent could not be loaded.</exception>
        <altmember cref="M:Android.Content.PM.PackageManager.GetActivityLogo(Android.Content.ComponentName)" />
      </Docs>
    </Member>
    <Member MemberName="GetAllPermissionGroups">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;Android.Content.PM.PermissionGroupInfo&gt; GetAllPermissionGroups (Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.Content.PM.PermissionGroupInfo&gt; GetAllPermissionGroups(valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getAllPermissionGroups", "(I)Ljava/util/List;", "GetGetAllPermissionGroups_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PM.PermissionGroupInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">Additional option flags.  Use <c><see cref="F:Android.Content.PM.PackageInfoFlags.MetaData" tool="ReplaceLinkValue" /></c> to
 retrieve any meta-data associated with the permission group.</param>
        <summary>Retrieve all of the known permission groups in the system.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetApplicationBanner">
      <MemberSignature Language="C#" Value="public abstract Android.Graphics.Drawables.Drawable GetApplicationBanner (Android.Content.PM.ApplicationInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable GetApplicationBanner(class Android.Content.PM.ApplicationInfo info) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getApplicationBanner", "(Landroid/content/pm/ApplicationInfo;)Landroid/graphics/drawable/Drawable;", "GetGetApplicationBanner_Landroid_content_pm_ApplicationInfo_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="Android.Content.PM.ApplicationInfo" />
      </Parameters>
      <Docs>
        <param name="info">Information about application being queried.</param>
        <summary>Retrieve the banner associated with an application.</summary>
        <returns>To be added.</returns>
        <remarks />
        <altmember cref="M:Android.Content.PM.PackageManager.GetApplicationBanner(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetApplicationBanner">
      <MemberSignature Language="C#" Value="public abstract Android.Graphics.Drawables.Drawable GetApplicationBanner (string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable GetApplicationBanner(string packageName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getApplicationBanner", "(Ljava/lang/String;)Landroid/graphics/drawable/Drawable;", "GetGetApplicationBanner_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">Name of the package whose application banner is to be
            retrieved.</param>
        <summary>Retrieve the banner associated with an application.</summary>
        <returns>To be added.</returns>
        <remarks />
        <exception cref="!:NoType:android/content/pm/PackageManager$NameNotFoundException;Href=../../../../reference/android/content/pm/PackageManager.NameNotFoundException.html">Thrown if the resources for the given
             application could not be loaded.</exception>
        <altmember cref="M:Android.Content.PM.PackageManager.GetApplicationBanner(Android.Content.PM.ApplicationInfo)" />
      </Docs>
    </Member>
    <Member MemberName="GetApplicationEnabledSetting">
      <MemberSignature Language="C#" Value="public abstract Android.Content.PM.ComponentEnabledState GetApplicationEnabledSetting (string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Content.PM.ComponentEnabledState GetApplicationEnabledSetting(string packageName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getApplicationEnabledSetting", "(Ljava/lang/String;)I", "GetGetApplicationEnabledSetting_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ComponentEnabledState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">The package name of the application to retrieve.</param>
        <summary>Return the enabled setting for an application.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the named package does not exist.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationIcon">
      <MemberSignature Language="C#" Value="public abstract Android.Graphics.Drawables.Drawable GetApplicationIcon (Android.Content.PM.ApplicationInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable GetApplicationIcon(class Android.Content.PM.ApplicationInfo info) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getApplicationIcon", "(Landroid/content/pm/ApplicationInfo;)Landroid/graphics/drawable/Drawable;", "GetGetApplicationIcon_Landroid_content_pm_ApplicationInfo_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="Android.Content.PM.ApplicationInfo" />
      </Parameters>
      <Docs>
        <param name="info">Information about application being queried.</param>
        <summary>Retrieve the icon associated with an application.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.PM.PackageManager.GetApplicationIcon(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetApplicationIcon">
      <MemberSignature Language="C#" Value="public abstract Android.Graphics.Drawables.Drawable GetApplicationIcon (string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable GetApplicationIcon(string packageName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getApplicationIcon", "(Ljava/lang/String;)Landroid/graphics/drawable/Drawable;", "GetGetApplicationIcon_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">Name of the package whose application icon is to be
                    retrieved.</param>
        <summary>Retrieve the icon associated with an application.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/pm/PackageManager$NameNotFoundException;Href=../../../../reference/android/content/pm/PackageManager.NameNotFoundException.html">Thrown if the resources for the given
 application could not be loaded.</exception>
        <altmember cref="M:Android.Content.PM.PackageManager.GetApplicationIcon(Android.Content.PM.ApplicationInfo)" />
      </Docs>
    </Member>
    <Member MemberName="GetApplicationInfo">
      <MemberSignature Language="C#" Value="public abstract Android.Content.PM.ApplicationInfo GetApplicationInfo (string packageName, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.PM.ApplicationInfo GetApplicationInfo(string packageName, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getApplicationInfo", "(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo;", "GetGetApplicationInfo_Ljava_lang_String_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ApplicationInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="packageName">The full name (i.e. com.google.apps.contacts) of an
                    application.</param>
        <param name="flags">Additional option flags. Use any combination of
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.MetaData" tool="ReplaceLinkValue" /></c>, <c><see cref="F:Android.Content.PM.PackageInfoFlags.SharedLibraryFiles" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.UninstalledPackages" tool="ReplaceLinkValue" /></c> to modify the data returned.</param>
        <summary>Retrieve all of the information we know about a particular
 package/application.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/pm/PackageManager$NameNotFoundException;Href=../../../../reference/android/content/pm/PackageManager.NameNotFoundException.html" />
      </Docs>
    </Member>
    <Member MemberName="GetApplicationLabel">
      <MemberSignature Language="C#" Value="public string GetApplicationLabel (Android.Content.PM.ApplicationInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetApplicationLabel(class Android.Content.PM.ApplicationInfo info) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="Android.Content.PM.ApplicationInfo" />
      </Parameters>
      <Docs>
        <param name="info">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetApplicationLabelFormatted">
      <MemberSignature Language="C#" Value="public abstract Java.Lang.ICharSequence GetApplicationLabelFormatted (Android.Content.PM.ApplicationInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.ICharSequence GetApplicationLabelFormatted(class Android.Content.PM.ApplicationInfo info) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getApplicationLabel", "(Landroid/content/pm/ApplicationInfo;)Ljava/lang/CharSequence;", "GetGetApplicationLabel_Landroid_content_pm_ApplicationInfo_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="Android.Content.PM.ApplicationInfo" />
      </Parameters>
      <Docs>
        <param name="info">The application to get the label of.
</param>
        <summary>Return the label to use for this application.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetApplicationLogo">
      <MemberSignature Language="C#" Value="public abstract Android.Graphics.Drawables.Drawable GetApplicationLogo (Android.Content.PM.ApplicationInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable GetApplicationLogo(class Android.Content.PM.ApplicationInfo info) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getApplicationLogo", "(Landroid/content/pm/ApplicationInfo;)Landroid/graphics/drawable/Drawable;", "GetGetApplicationLogo_Landroid_content_pm_ApplicationInfo_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="Android.Content.PM.ApplicationInfo" />
      </Parameters>
      <Docs>
        <param name="info">Information about application being queried.</param>
        <summary>Retrieve the logo associated with an application.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 9" />
        <altmember cref="M:Android.Content.PM.PackageManager.GetApplicationLogo(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetApplicationLogo">
      <MemberSignature Language="C#" Value="public abstract Android.Graphics.Drawables.Drawable GetApplicationLogo (string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable GetApplicationLogo(string packageName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getApplicationLogo", "(Ljava/lang/String;)Landroid/graphics/drawable/Drawable;", "GetGetApplicationLogo_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">Name of the package whose application logo is to be
                    retrieved.</param>
        <summary>Retrieve the logo associated with an application.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 9" />
        <exception cref="!:NoType:android/content/pm/PackageManager$NameNotFoundException;Href=../../../../reference/android/content/pm/PackageManager.NameNotFoundException.html">Thrown if the resources for the given
 application could not be loaded.</exception>
        <altmember cref="M:Android.Content.PM.PackageManager.GetApplicationLogo(Android.Content.PM.ApplicationInfo)" />
      </Docs>
    </Member>
    <Member MemberName="GetComponentEnabledSetting">
      <MemberSignature Language="C#" Value="public abstract Android.Content.PM.ComponentEnabledState GetComponentEnabledSetting (Android.Content.ComponentName componentName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Content.PM.ComponentEnabledState GetComponentEnabledSetting(class Android.Content.ComponentName componentName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getComponentEnabledSetting", "(Landroid/content/ComponentName;)I", "GetGetComponentEnabledSetting_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ComponentEnabledState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentName" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="componentName">The component to retrieve.</param>
        <summary>Return the enabled setting for a package component (activity,
 receiver, service, provider).</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetDrawable">
      <MemberSignature Language="C#" Value="public abstract Android.Graphics.Drawables.Drawable GetDrawable (string packageName, int resid, Android.Content.PM.ApplicationInfo appInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable GetDrawable(string packageName, int32 resid, class Android.Content.PM.ApplicationInfo appInfo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDrawable", "(Ljava/lang/String;ILandroid/content/pm/ApplicationInfo;)Landroid/graphics/drawable/Drawable;", "GetGetDrawable_Ljava_lang_String_ILandroid_content_pm_ApplicationInfo_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="resid" Type="System.Int32" />
        <Parameter Name="appInfo" Type="Android.Content.PM.ApplicationInfo" />
      </Parameters>
      <Docs>
        <param name="packageName">The name of the package that this icon is coming from.
 Cannot be null.</param>
        <param name="resid">The resource identifier of the desired image.  Cannot be 0.</param>
        <param name="appInfo">Overall information about <format type="text/html"><var>packageName</var></format>.  This
 may be null, in which case the application information will be retrieved
 for you if needed; if you already have this information around, it can
 be much more efficient to supply it here.</param>
        <summary>Retrieve an image from a package.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetInstalledApplications">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;Android.Content.PM.ApplicationInfo&gt; GetInstalledApplications (Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.Content.PM.ApplicationInfo&gt; GetInstalledApplications(valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInstalledApplications", "(I)Ljava/util/List;", "GetGetInstalledApplications_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PM.ApplicationInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">Additional option flags. Use any combination of
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.MetaData" tool="ReplaceLinkValue" /></c>, <c><see cref="F:Android.Content.PM.PackageInfoFlags.SharedLibraryFiles" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.UninstalledPackages" tool="ReplaceLinkValue" /></c> to modify the data returned.</param>
        <summary>Return a List of all application packages that are installed on the
 device.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetInstalledPackages">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;Android.Content.PM.PackageInfo&gt; GetInstalledPackages (Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.Content.PM.PackageInfo&gt; GetInstalledPackages(valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInstalledPackages", "(I)Ljava/util/List;", "GetGetInstalledPackages_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PM.PackageInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">Additional option flags. Use any combination of
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.Activities" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.Gids" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.Configurations" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.Instrumentation" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.Permissions" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.Providers" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.Receivers" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.Services" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.Signatures" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.UninstalledPackages" tool="ReplaceLinkValue" /></c> to modify the data returned.</param>
        <summary>Return a List of all packages that are installed
 on the device.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetInstallerPackageName">
      <MemberSignature Language="C#" Value="public abstract string GetInstallerPackageName (string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetInstallerPackageName(string packageName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInstallerPackageName", "(Ljava/lang/String;)Ljava/lang/String;", "GetGetInstallerPackageName_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">The name of the package to query
</param>
        <summary>Retrieve the package name of the application that installed a package.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="GetInstrumentationInfo">
      <MemberSignature Language="C#" Value="public abstract Android.Content.PM.InstrumentationInfo GetInstrumentationInfo (Android.Content.ComponentName className, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.PM.InstrumentationInfo GetInstrumentationInfo(class Android.Content.ComponentName className, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInstrumentationInfo", "(Landroid/content/ComponentName;I)Landroid/content/pm/InstrumentationInfo;", "GetGetInstrumentationInfo_Landroid_content_ComponentName_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.InstrumentationInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="Android.Content.ComponentName" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="className">The full name (i.e.
                  com.google.apps.contacts.InstrumentList) of an
                  Instrumentation class.</param>
        <param name="flags">Additional option flags.  Currently should always be 0.</param>
        <summary>Retrieve all of the information we know about a particular
 instrumentation class.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/pm/PackageManager$NameNotFoundException;Href=../../../../reference/android/content/pm/PackageManager.NameNotFoundException.html" />
      </Docs>
    </Member>
    <Member MemberName="GetLaunchIntentForPackage">
      <MemberSignature Language="C#" Value="public abstract Android.Content.Intent GetLaunchIntentForPackage (string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.Intent GetLaunchIntentForPackage(string packageName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getLaunchIntentForPackage", "(Ljava/lang/String;)Landroid/content/Intent;", "GetGetLaunchIntentForPackage_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Intent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">The name of the package to inspect.</param>
        <summary>Returns a "good" intent to launch a front-door activity in a package.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="GetLeanbackLaunchIntentForPackage">
      <MemberSignature Language="C#" Value="public abstract Android.Content.Intent GetLeanbackLaunchIntentForPackage (string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.Intent GetLeanbackLaunchIntentForPackage(string packageName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getLeanbackLaunchIntentForPackage", "(Ljava/lang/String;)Landroid/content/Intent;", "GetGetLeanbackLaunchIntentForPackage_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Intent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">The name of the package to inspect.</param>
        <summary>Return a "good" intent to launch a front-door Leanback activity in a
 package, for use for example to implement an "open" button when browsing
 through packages.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetNameForUid">
      <MemberSignature Language="C#" Value="public abstract string GetNameForUid (int uid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetNameForUid(int32 uid) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getNameForUid", "(I)Ljava/lang/String;", "GetGetNameForUid_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="uid">The user id for which you would like to retrieve a name.</param>
        <summary>Retrieve the official name associated with a user id.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetPackageArchiveInfo">
      <MemberSignature Language="C#" Value="public virtual Android.Content.PM.PackageInfo GetPackageArchiveInfo (string archiveFilePath, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.PM.PackageInfo GetPackageArchiveInfo(string archiveFilePath, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPackageArchiveInfo", "(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;", "GetGetPackageArchiveInfo_Ljava_lang_String_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.PackageInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="archiveFilePath" Type="System.String" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="archiveFilePath">The path to the archive file</param>
        <param name="flags">Additional option flags. Use any combination of
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.Activities" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.Gids" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.Configurations" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.Instrumentation" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.Permissions" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.Providers" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.Receivers" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.Services" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.Signatures" tool="ReplaceLinkValue" /></c>, to modify the data returned.</param>
        <summary>Retrieve overall information about an application package defined
 in a package archive file</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetPackageGids">
      <MemberSignature Language="C#" Value="public abstract int[] GetPackageGids (string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32[] GetPackageGids(string packageName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPackageGids", "(Ljava/lang/String;)[I", "GetGetPackageGids_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">The full name (i.e. com.google.apps.contacts) of the
            desired package.</param>
        <summary>Return an array of all of the secondary group-ids that have been assigned
 to a package.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/pm/PackageManager$NameNotFoundException;Href=../../../../reference/android/content/pm/PackageManager.NameNotFoundException.html" />
      </Docs>
    </Member>
    <Member MemberName="GetPackageInfo">
      <MemberSignature Language="C#" Value="public abstract Android.Content.PM.PackageInfo GetPackageInfo (string packageName, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.PM.PackageInfo GetPackageInfo(string packageName, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPackageInfo", "(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;", "GetGetPackageInfo_Ljava_lang_String_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.PackageInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="packageName">The full name (i.e. com.google.apps.contacts) of the
            desired package.</param>
        <param name="flags">Additional option flags. Use any combination of
            <c><see cref="F:Android.Content.PM.PackageInfoFlags.Activities" tool="ReplaceLinkValue" /></c>, <c><see cref="F:Android.Content.PM.PackageInfoFlags.Gids" tool="ReplaceLinkValue" /></c>,
            <c><see cref="F:Android.Content.PM.PackageInfoFlags.Configurations" tool="ReplaceLinkValue" /></c>, <c><see cref="F:Android.Content.PM.PackageInfoFlags.Instrumentation" tool="ReplaceLinkValue" /></c>,
            <c><see cref="F:Android.Content.PM.PackageInfoFlags.Permissions" tool="ReplaceLinkValue" /></c>, <c><see cref="F:Android.Content.PM.PackageInfoFlags.Providers" tool="ReplaceLinkValue" /></c>,
            <c><see cref="F:Android.Content.PM.PackageInfoFlags.Receivers" tool="ReplaceLinkValue" /></c>, <c><see cref="F:Android.Content.PM.PackageInfoFlags.Services" tool="ReplaceLinkValue" /></c>,
            <c><see cref="F:Android.Content.PM.PackageInfoFlags.Signatures" tool="ReplaceLinkValue" /></c>, <c><see cref="F:Android.Content.PM.PackageInfoFlags.UninstalledPackages" tool="ReplaceLinkValue" /></c> to
            modify the data returned.</param>
        <summary>Retrieve overall information about an application package that is
 installed on the system.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/pm/PackageManager$NameNotFoundException;Href=../../../../reference/android/content/pm/PackageManager.NameNotFoundException.html" />
      </Docs>
    </Member>
    <Member MemberName="GetPackagesForUid">
      <MemberSignature Language="C#" Value="public abstract string[] GetPackagesForUid (int uid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetPackagesForUid(int32 uid) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPackagesForUid", "(I)[Ljava/lang/String;", "GetGetPackagesForUid_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="uid">The user id for which you would like to retrieve the
 associated packages.</param>
        <summary>Retrieve the names of all packages that are associated with a particular
 user id.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetPackagesHoldingPermissions">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;Android.Content.PM.PackageInfo&gt; GetPackagesHoldingPermissions (string[] permissions, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.Content.PM.PackageInfo&gt; GetPackagesHoldingPermissions(string[] permissions, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPackagesHoldingPermissions", "([Ljava/lang/String;I)Ljava/util/List;", "GetGetPackagesHoldingPermissions_arrayLjava_lang_String_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PM.PackageInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permissions" Type="System.String[]" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="permissions">To be added.</param>
        <param name="flags">Additional option flags. Use any combination of
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.Activities" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.Gids" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.Configurations" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.Instrumentation" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.Permissions" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.Providers" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.Receivers" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.Services" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.Signatures" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.UninstalledPackages" tool="ReplaceLinkValue" /></c> to modify the data returned.</param>
        <summary>Return a List of all installed packages that are currently
 holding any of the given permissions.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="GetPermissionGroupInfo">
      <MemberSignature Language="C#" Value="public abstract Android.Content.PM.PermissionGroupInfo GetPermissionGroupInfo (string name, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.PM.PermissionGroupInfo GetPermissionGroupInfo(string name, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPermissionGroupInfo", "(Ljava/lang/String;I)Landroid/content/pm/PermissionGroupInfo;", "GetGetPermissionGroupInfo_Ljava_lang_String_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.PermissionGroupInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">The fully qualified name (i.e. com.google.permission_group.APPS)
             of the permission you are interested in.</param>
        <param name="flags">Additional option flags.  Use <c><see cref="F:Android.Content.PM.PackageInfoFlags.MetaData" tool="ReplaceLinkValue" /></c> to
 retrieve any meta-data associated with the permission group.</param>
        <summary>Retrieve all of the information we know about a particular group of
 permissions.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/pm/PackageManager$NameNotFoundException;Href=../../../../reference/android/content/pm/PackageManager.NameNotFoundException.html" />
      </Docs>
    </Member>
    <Member MemberName="GetPermissionInfo">
      <MemberSignature Language="C#" Value="public abstract Android.Content.PM.PermissionInfo GetPermissionInfo (string name, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.PM.PermissionInfo GetPermissionInfo(string name, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPermissionInfo", "(Ljava/lang/String;I)Landroid/content/pm/PermissionInfo;", "GetGetPermissionInfo_Ljava_lang_String_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.PermissionInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">The fully qualified name (i.e. com.google.permission.LOGIN)
             of the permission you are interested in.</param>
        <param name="flags">Additional option flags.  Use <c><see cref="F:Android.Content.PM.PackageInfoFlags.MetaData" tool="ReplaceLinkValue" /></c> to
 retrieve any meta-data associated with the permission.</param>
        <summary>Retrieve all of the information we know about a particular permission.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/pm/PackageManager$NameNotFoundException;Href=../../../../reference/android/content/pm/PackageManager.NameNotFoundException.html" />
      </Docs>
    </Member>
    <Member MemberName="GetPreferredActivities">
      <MemberSignature Language="C#" Value="public abstract int GetPreferredActivities (System.Collections.Generic.IList&lt;Android.Content.IntentFilter&gt; outFilters, System.Collections.Generic.IList&lt;Android.Content.ComponentName&gt; outActivities, string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetPreferredActivities(class System.Collections.Generic.IList`1&lt;class Android.Content.IntentFilter&gt; outFilters, class System.Collections.Generic.IList`1&lt;class Android.Content.ComponentName&gt; outActivities, string packageName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPreferredActivities", "(Ljava/util/List;Ljava/util/List;Ljava/lang/String;)I", "GetGetPreferredActivities_Ljava_util_List_Ljava_util_List_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outFilters" Type="System.Collections.Generic.IList&lt;Android.Content.IntentFilter&gt;" />
        <Parameter Name="outActivities" Type="System.Collections.Generic.IList&lt;Android.Content.ComponentName&gt;" />
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outFilters">To be added.</param>
        <param name="outActivities">To be added.</param>
        <param name="packageName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetPreferredPackages">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;Android.Content.PM.PackageInfo&gt; GetPreferredPackages (Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.Content.PM.PackageInfo&gt; GetPreferredPackages(valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPreferredPackages", "(I)Ljava/util/List;", "GetGetPreferredPackages_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PM.PackageInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">Additional option flags. Use any combination of
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.Activities" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.Gids" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.Configurations" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.Instrumentation" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.Permissions" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.Providers" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.Receivers" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.Services" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.Signatures" tool="ReplaceLinkValue" /></c>, to modify the data returned.</param>
        <summary>Retrieve the list of all currently configured preferred packages.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetProviderInfo">
      <MemberSignature Language="C#" Value="public abstract Android.Content.PM.ProviderInfo GetProviderInfo (Android.Content.ComponentName component, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.PM.ProviderInfo GetProviderInfo(class Android.Content.ComponentName component, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getProviderInfo", "(Landroid/content/ComponentName;I)Landroid/content/pm/ProviderInfo;", "GetGetProviderInfo_Landroid_content_ComponentName_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ProviderInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="Android.Content.ComponentName" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="component">The full component name (i.e.
 com.google.providers.media/com.google.providers.media.MediaProvider) of a
 ContentProvider class.</param>
        <param name="flags">Additional option flags.  Use any combination of
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.MetaData" tool="ReplaceLinkValue" /></c>, <c><see cref="F:Android.Content.PM.PackageInfoFlags.SharedLibraryFiles" tool="ReplaceLinkValue" /></c>,
 to modify the data returned.</param>
        <summary>Retrieve all of the information we know about a particular content
 provider class.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 9" />
        <exception cref="!:NoType:android/content/pm/PackageManager$NameNotFoundException;Href=../../../../reference/android/content/pm/PackageManager.NameNotFoundException.html" />
      </Docs>
    </Member>
    <Member MemberName="GetReceiverInfo">
      <MemberSignature Language="C#" Value="public abstract Android.Content.PM.ActivityInfo GetReceiverInfo (Android.Content.ComponentName component, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.PM.ActivityInfo GetReceiverInfo(class Android.Content.ComponentName component, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getReceiverInfo", "(Landroid/content/ComponentName;I)Landroid/content/pm/ActivityInfo;", "GetGetReceiverInfo_Landroid_content_ComponentName_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ActivityInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="Android.Content.ComponentName" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="component">The full component name (i.e.
 com.google.apps.calendar/com.google.apps.calendar.CalendarAlarm) of a Receiver
 class.</param>
        <param name="flags">Additional option flags.  Use any combination of
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.MetaData" tool="ReplaceLinkValue" /></c>, <c><see cref="F:Android.Content.PM.PackageInfoFlags.SharedLibraryFiles" tool="ReplaceLinkValue" /></c>,
 to modify the data returned.</param>
        <summary>Retrieve all of the information we know about a particular receiver
 class.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/pm/PackageManager$NameNotFoundException;Href=../../../../reference/android/content/pm/PackageManager.NameNotFoundException.html" />
      </Docs>
    </Member>
    <Member MemberName="GetResourcesForActivity">
      <MemberSignature Language="C#" Value="public abstract Android.Content.Res.Resources GetResourcesForActivity (Android.Content.ComponentName activityName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.Res.Resources GetResourcesForActivity(class Android.Content.ComponentName activityName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getResourcesForActivity", "(Landroid/content/ComponentName;)Landroid/content/res/Resources;", "GetGetResourcesForActivity_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.Resources</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityName" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="activityName">Name of the activity whose resources are to be
                     retrieved.</param>
        <summary>Retrieve the resources associated with an activity.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/pm/PackageManager$NameNotFoundException;Href=../../../../reference/android/content/pm/PackageManager.NameNotFoundException.html">Thrown if the resources for the given
 application could not be loaded.</exception>
        <altmember cref="M:Android.Content.PM.PackageManager.GetResourcesForApplication(Android.Content.PM.ApplicationInfo)" />
      </Docs>
    </Member>
    <Member MemberName="GetResourcesForApplication">
      <MemberSignature Language="C#" Value="public abstract Android.Content.Res.Resources GetResourcesForApplication (Android.Content.PM.ApplicationInfo app);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.Res.Resources GetResourcesForApplication(class Android.Content.PM.ApplicationInfo app) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getResourcesForApplication", "(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/Resources;", "GetGetResourcesForApplication_Landroid_content_pm_ApplicationInfo_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.Resources</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="app" Type="Android.Content.PM.ApplicationInfo" />
      </Parameters>
      <Docs>
        <param name="app">Information about the desired application.</param>
        <summary tool="true">Retrieve the resources for an application.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/pm/PackageManager$NameNotFoundException;Href=../../../../reference/android/content/pm/PackageManager.NameNotFoundException.html">Thrown if the resources for the given
 application could not be loaded (most likely because it was uninstalled).
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourcesForApplication">
      <MemberSignature Language="C#" Value="public abstract Android.Content.Res.Resources GetResourcesForApplication (string appPackageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.Res.Resources GetResourcesForApplication(string appPackageName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getResourcesForApplication", "(Ljava/lang/String;)Landroid/content/res/Resources;", "GetGetResourcesForApplication_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.Resources</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appPackageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appPackageName">Package name of the application whose resources
                       are to be retrieved.</param>
        <summary>Retrieve the resources associated with an application.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/pm/PackageManager$NameNotFoundException;Href=../../../../reference/android/content/pm/PackageManager.NameNotFoundException.html">Thrown if the resources for the given
 application could not be loaded.</exception>
        <altmember cref="M:Android.Content.PM.PackageManager.GetResourcesForApplication(Android.Content.PM.ApplicationInfo)" />
      </Docs>
    </Member>
    <Member MemberName="GetServiceInfo">
      <MemberSignature Language="C#" Value="public abstract Android.Content.PM.ServiceInfo GetServiceInfo (Android.Content.ComponentName component, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.PM.ServiceInfo GetServiceInfo(class Android.Content.ComponentName component, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getServiceInfo", "(Landroid/content/ComponentName;I)Landroid/content/pm/ServiceInfo;", "GetGetServiceInfo_Landroid_content_ComponentName_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ServiceInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="Android.Content.ComponentName" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="component">The full component name (i.e.
 com.google.apps.media/com.google.apps.media.BackgroundPlayback) of a Service
 class.</param>
        <param name="flags">Additional option flags.  Use any combination of
 <c><see cref="F:Android.Content.PM.PackageInfoFlags.MetaData" tool="ReplaceLinkValue" /></c>, <c><see cref="F:Android.Content.PM.PackageInfoFlags.SharedLibraryFiles" tool="ReplaceLinkValue" /></c>,
 to modify the data returned.</param>
        <summary>Retrieve all of the information we know about a particular service
 class.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/pm/PackageManager$NameNotFoundException;Href=../../../../reference/android/content/pm/PackageManager.NameNotFoundException.html" />
      </Docs>
    </Member>
    <Member MemberName="GetSystemAvailableFeatures">
      <MemberSignature Language="C#" Value="public abstract Android.Content.PM.FeatureInfo[] GetSystemAvailableFeatures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.PM.FeatureInfo[] GetSystemAvailableFeatures() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getSystemAvailableFeatures", "()[Landroid/content/pm/FeatureInfo;", "GetGetSystemAvailableFeaturesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.FeatureInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Get a list of features that are available on the
 system.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="GetSystemSharedLibraryNames">
      <MemberSignature Language="C#" Value="public abstract string[] GetSystemSharedLibraryNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetSystemSharedLibraryNames() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getSystemSharedLibraryNames", "()[Ljava/lang/String;", "GetGetSystemSharedLibraryNamesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Get a list of shared libraries that are available on the
 system.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public string GetText (string packageName, int resid, Android.Content.PM.ApplicationInfo appInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetText(string packageName, int32 resid, class Android.Content.PM.ApplicationInfo appInfo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="resid" Type="System.Int32" />
        <Parameter Name="appInfo" Type="Android.Content.PM.ApplicationInfo" />
      </Parameters>
      <Docs>
        <param name="packageName">To be added.</param>
        <param name="resid">To be added.</param>
        <param name="appInfo">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetTextFormatted">
      <MemberSignature Language="C#" Value="public abstract Java.Lang.ICharSequence GetTextFormatted (string packageName, int resid, Android.Content.PM.ApplicationInfo appInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.ICharSequence GetTextFormatted(string packageName, int32 resid, class Android.Content.PM.ApplicationInfo appInfo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getText", "(Ljava/lang/String;ILandroid/content/pm/ApplicationInfo;)Ljava/lang/CharSequence;", "GetGetText_Ljava_lang_String_ILandroid_content_pm_ApplicationInfo_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="resid" Type="System.Int32" />
        <Parameter Name="appInfo" Type="Android.Content.PM.ApplicationInfo" />
      </Parameters>
      <Docs>
        <param name="packageName">The name of the package that this text is coming from.
 Cannot be null.</param>
        <param name="resid">The resource identifier of the desired text.  Cannot be 0.</param>
        <param name="appInfo">Overall information about <format type="text/html"><var>packageName</var></format>.  This
 may be null, in which case the application information will be retrieved
 for you if needed; if you already have this information around, it can
 be much more efficient to supply it here.</param>
        <summary>Retrieve text from a package.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetUserBadgedDrawableForDensity">
      <MemberSignature Language="C#" Value="public abstract Android.Graphics.Drawables.Drawable GetUserBadgedDrawableForDensity (Android.Graphics.Drawables.Drawable drawable, Android.OS.UserHandle user, Android.Graphics.Rect badgeLocation, int badgeDensity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable GetUserBadgedDrawableForDensity(class Android.Graphics.Drawables.Drawable drawable, class Android.OS.UserHandle user, class Android.Graphics.Rect badgeLocation, int32 badgeDensity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getUserBadgedDrawableForDensity", "(Landroid/graphics/drawable/Drawable;Landroid/os/UserHandle;Landroid/graphics/Rect;I)Landroid/graphics/drawable/Drawable;", "GetGetUserBadgedDrawableForDensity_Landroid_graphics_drawable_Drawable_Landroid_os_UserHandle_Landroid_graphics_Rect_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drawable" Type="Android.Graphics.Drawables.Drawable" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
        <Parameter Name="badgeLocation" Type="Android.Graphics.Rect" />
        <Parameter Name="badgeDensity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="drawable">The drawable to badge.</param>
        <param name="user">The target user.</param>
        <param name="badgeLocation">Where in the bounds of the badged drawable to place
         the badge. If not provided, the badge is applied on top of the entire
         drawable being badged.</param>
        <param name="badgeDensity">The optional desired density for the badge as per
         <c><see cref="P:Android.Util.DisplayMetrics.DensityDpi" /></c>. If not provided,
         the density of the display is used.</param>
        <summary>If the target user is a managed profile of the calling user or the caller
 is itself a managed profile, then this returns a badged copy of the given
 drawable allowing the user to distinguish it from the original drawable.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetUserBadgedIcon">
      <MemberSignature Language="C#" Value="public abstract Android.Graphics.Drawables.Drawable GetUserBadgedIcon (Android.Graphics.Drawables.Drawable icon, Android.OS.UserHandle user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable GetUserBadgedIcon(class Android.Graphics.Drawables.Drawable icon, class Android.OS.UserHandle user) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getUserBadgedIcon", "(Landroid/graphics/drawable/Drawable;Landroid/os/UserHandle;)Landroid/graphics/drawable/Drawable;", "GetGetUserBadgedIcon_Landroid_graphics_drawable_Drawable_Landroid_os_UserHandle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="icon" Type="Android.Graphics.Drawables.Drawable" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="icon">The icon to badge.</param>
        <param name="user">The target user.</param>
        <summary>If the target user is a managed profile of the calling user or if the
 target user is the caller and is itself a managed profile, then this
 returns a badged copy of the given icon to be able to distinguish it from
 the original icon.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetUserBadgedLabel">
      <MemberSignature Language="C#" Value="public string GetUserBadgedLabel (string label, Android.OS.UserHandle user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetUserBadgedLabel(string label, class Android.OS.UserHandle user) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="user">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetUserBadgedLabelFormatted">
      <MemberSignature Language="C#" Value="public abstract Java.Lang.ICharSequence GetUserBadgedLabelFormatted (Java.Lang.ICharSequence label, Android.OS.UserHandle user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.ICharSequence GetUserBadgedLabelFormatted(class Java.Lang.ICharSequence label, class Android.OS.UserHandle user) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getUserBadgedLabel", "(Ljava/lang/CharSequence;Landroid/os/UserHandle;)Ljava/lang/CharSequence;", "GetGetUserBadgedLabel_Ljava_lang_CharSequence_Landroid_os_UserHandle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="Java.Lang.ICharSequence" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="label">The label to change.</param>
        <param name="user">The target user.</param>
        <summary>If the target user is a managed profile of the calling user or the caller
 is itself a managed profile, then this returns a copy of the label with
 badging for accessibility services like talkback.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlReader GetXml (string packageName, int resid, Android.Content.PM.ApplicationInfo appInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlReader GetXml(string packageName, int32 resid, class Android.Content.PM.ApplicationInfo appInfo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getXml", "(Ljava/lang/String;ILandroid/content/pm/ApplicationInfo;)Landroid/content/res/XmlResourceParser;", "GetGetXml_Ljava_lang_String_ILandroid_content_pm_ApplicationInfo_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="resid" Type="System.Int32" />
        <Parameter Name="appInfo" Type="Android.Content.PM.ApplicationInfo" />
      </Parameters>
      <Docs>
        <param name="packageName">The name of the package that this xml is coming from.
 Cannot be null.</param>
        <param name="resid">The resource identifier of the desired xml.  Cannot be 0.</param>
        <param name="appInfo">Overall information about <format type="text/html"><var>packageName</var></format>.  This
 may be null, in which case the application information will be retrieved
 for you if needed; if you already have this information around, it can
 be much more efficient to supply it here.</param>
        <summary>Retrieve an XML file from a package.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HasSystemFeature">
      <MemberSignature Language="C#" Value="public abstract bool HasSystemFeature (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasSystemFeature(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("hasSystemFeature", "(Ljava/lang/String;)Z", "GetHasSystemFeature_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>Check whether the given feature name is one of the available
 features as returned by <c><see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="IsSafeMode">
      <MemberSignature Language="C#" Value="public abstract bool IsSafeMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSafeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isSafeMode", "()Z", "GetIsSafeModeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return whether the device has been booted into safe mode.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="MaximumVerificationTimeout">
      <MemberSignature Language="C#" Value="public const long MaximumVerificationTimeout = 3600000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 MaximumVerificationTimeout = (3600000)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MAXIMUM_VERIFICATION_TIMEOUT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <MemberValue>3600000</MemberValue>
      <Docs>
        <summary>Can be used as the <c>millisecondsToDelay</c> argument for
 <c><see cref="M:Android.Content.PM.PackageManager.ExtendVerificationTimeout(System.Int32, Android.Content.PM.PackageInstallVerification, Android.Content.PM.PackageInstallVerification)" /></c>.</summary>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="PackageInstaller">
      <MemberSignature Language="C#" Value="public abstract Android.Content.PM.PackageInstaller PackageInstaller { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.PM.PackageInstaller PackageInstaller" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPackageInstaller", "()Landroid/content/pm/PackageInstaller;", "GetGetPackageInstallerHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.PackageInstaller</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return interface that offers the ability to install, upgrade, and remove
 applications on the device.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="PkgInstallComplete">
      <MemberSignature Language="C#" Value="public const int PkgInstallComplete = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 PkgInstallComplete = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PKG_INSTALL_COMPLETE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="PkgInstallIncomplete">
      <MemberSignature Language="C#" Value="public const int PkgInstallIncomplete = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 PkgInstallIncomplete = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PKG_INSTALL_INCOMPLETE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="QueryBroadcastReceivers">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;Android.Content.PM.ResolveInfo&gt; QueryBroadcastReceivers (Android.Content.Intent intent, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.Content.PM.ResolveInfo&gt; QueryBroadcastReceivers(class Android.Content.Intent intent, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("queryBroadcastReceivers", "(Landroid/content/Intent;I)Ljava/util/List;", "GetQueryBroadcastReceivers_Landroid_content_Intent_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PM.ResolveInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="intent">The desired intent as per resolveActivity().</param>
        <param name="flags">Additional option flags.</param>
        <summary>Retrieve all receivers that can handle a broadcast of the given intent.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="QueryContentProviders">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;Android.Content.PM.ProviderInfo&gt; QueryContentProviders (string processName, int uid, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.Content.PM.ProviderInfo&gt; QueryContentProviders(string processName, int32 uid, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("queryContentProviders", "(Ljava/lang/String;II)Ljava/util/List;", "GetQueryContentProviders_Ljava_lang_String_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PM.ProviderInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="processName" Type="System.String" />
        <Parameter Name="uid" Type="System.Int32" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="processName">If non-null, limits the returned providers to only
                    those that are hosted by the given process.  If null,
                    all content providers are returned.</param>
        <param name="uid">If <format type="text/html"><var>processName</var></format> is non-null, this is the required
        uid owning the requested content providers.</param>
        <param name="flags">Additional option flags.  Currently should always be 0.</param>
        <summary>Retrieve content provider information.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="QueryInstrumentation">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;Android.Content.PM.InstrumentationInfo&gt; QueryInstrumentation (string targetPackage, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.Content.PM.InstrumentationInfo&gt; QueryInstrumentation(string targetPackage, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("queryInstrumentation", "(Ljava/lang/String;I)Ljava/util/List;", "GetQueryInstrumentation_Ljava_lang_String_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PM.InstrumentationInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetPackage" Type="System.String" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="targetPackage">If null, all instrumentation is returned; only the
                      instrumentation targeting this package name is
                      returned.</param>
        <param name="flags">Additional option flags.  Currently should always be 0.</param>
        <summary>Retrieve information about available instrumentation code.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="QueryIntentActivities">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;Android.Content.PM.ResolveInfo&gt; QueryIntentActivities (Android.Content.Intent intent, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.Content.PM.ResolveInfo&gt; QueryIntentActivities(class Android.Content.Intent intent, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("queryIntentActivities", "(Landroid/content/Intent;I)Ljava/util/List;", "GetQueryIntentActivities_Landroid_content_Intent_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PM.ResolveInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="intent">The desired intent as per resolveActivity().</param>
        <param name="flags">Additional option flags.  The most important is
 <c><see cref="!:Android.Content.PM.PackageManager.MATCH_DEFAULT_ONLY" /></c>, to limit the resolution to only
 those activities that support the <c><see cref="F:Android.Content.Intent.CategoryDefault" /></c>.

 You can also set <c><see cref="!:Android.Content.PM.PackageManager.MATCH_ALL" /></c> for preventing the filtering of the results.</param>
        <summary>Retrieve all activities that can be performed for the given intent.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="QueryIntentActivityOptions">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;Android.Content.PM.ResolveInfo&gt; QueryIntentActivityOptions (Android.Content.ComponentName caller, Android.Content.Intent[] specifics, Android.Content.Intent intent, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.Content.PM.ResolveInfo&gt; QueryIntentActivityOptions(class Android.Content.ComponentName caller, class Android.Content.Intent[] specifics, class Android.Content.Intent intent, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("queryIntentActivityOptions", "(Landroid/content/ComponentName;[Landroid/content/Intent;Landroid/content/Intent;I)Ljava/util/List;", "GetQueryIntentActivityOptions_Landroid_content_ComponentName_arrayLandroid_content_Intent_Landroid_content_Intent_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PM.ResolveInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="caller" Type="Android.Content.ComponentName" />
        <Parameter Name="specifics" Type="Android.Content.Intent[]" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="caller">The class name of the activity that is making the
               request.  This activity will never appear in the output
               list.  Can be null.</param>
        <param name="specifics">An array of Intents that should be resolved to the
                  first specific results.  Can be null.</param>
        <param name="intent">The desired intent as per resolveActivity().</param>
        <param name="flags">Additional option flags.  The most important is
 <c><see cref="!:Android.Content.PM.PackageManager.MATCH_DEFAULT_ONLY" /></c>, to limit the resolution to only
 those activities that support the <c><see cref="F:Android.Content.Intent.CategoryDefault" /></c>.</param>
        <summary>Retrieve a set of activities that should be presented to the user as
 similar options.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="QueryIntentContentProviders">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;Android.Content.PM.ResolveInfo&gt; QueryIntentContentProviders (Android.Content.Intent intent, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.Content.PM.ResolveInfo&gt; QueryIntentContentProviders(class Android.Content.Intent intent, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("queryIntentContentProviders", "(Landroid/content/Intent;I)Ljava/util/List;", "GetQueryIntentContentProviders_Landroid_content_Intent_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PM.ResolveInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="intent">An intent containing all of the desired specification
            (action, data, type, category, and/or component).</param>
        <param name="flags">Additional option flags.</param>
        <summary>Retrieve all providers that can match the given intent.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="QueryIntentServices">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;Android.Content.PM.ResolveInfo&gt; QueryIntentServices (Android.Content.Intent intent, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.Content.PM.ResolveInfo&gt; QueryIntentServices(class Android.Content.Intent intent, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("queryIntentServices", "(Landroid/content/Intent;I)Ljava/util/List;", "GetQueryIntentServices_Landroid_content_Intent_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PM.ResolveInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="intent">The desired intent as per resolveService().</param>
        <param name="flags">Additional option flags.</param>
        <summary>Retrieve all services that can match the given intent.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="QueryPermissionsByGroup">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;Android.Content.PM.PermissionInfo&gt; QueryPermissionsByGroup (string group, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.Content.PM.PermissionInfo&gt; QueryPermissionsByGroup(string group, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("queryPermissionsByGroup", "(Ljava/lang/String;I)Ljava/util/List;", "GetQueryPermissionsByGroup_Ljava_lang_String_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PM.PermissionInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.String" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="group">The fully qualified name (i.e. com.google.permission.LOGIN)
             of the permission group you are interested in.  Use null to
             find all of the permissions not associated with a group.</param>
        <param name="flags">Additional option flags.  Use <c><see cref="F:Android.Content.PM.PackageInfoFlags.MetaData" tool="ReplaceLinkValue" /></c> to
 retrieve any meta-data associated with the permissions.</param>
        <summary>Query for all of the permissions associated with a particular group.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="!:NoType:android/content/pm/PackageManager$NameNotFoundException;Href=../../../../reference/android/content/pm/PackageManager.NameNotFoundException.html" />
      </Docs>
    </Member>
    <Member MemberName="RemovePackageFromPreferred">
      <MemberSignature Language="C#" Value="public abstract void RemovePackageFromPreferred (string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemovePackageFromPreferred(string packageName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removePackageFromPreferred", "(Ljava/lang/String;)V", "GetRemovePackageFromPreferred_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">To be added.</param>
        <summary>
        </summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RemovePermission">
      <MemberSignature Language="C#" Value="public abstract void RemovePermission (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemovePermission(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removePermission", "(Ljava/lang/String;)V", "GetRemovePermission_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the permission to remove.</param>
        <summary>Removes a permission that was previously added with
 <c><see cref="M:Android.Content.PM.PackageManager.AddPermission(Android.Content.PM.PermissionInfo)" /></c>.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.SecurityException">if you are not allowed to remove the
 given permission name.</exception>
        <altmember cref="M:Android.Content.PM.PackageManager.AddPermission(Android.Content.PM.PermissionInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ResolveActivity">
      <MemberSignature Language="C#" Value="public abstract Android.Content.PM.ResolveInfo ResolveActivity (Android.Content.Intent intent, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.PM.ResolveInfo ResolveActivity(class Android.Content.Intent intent, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resolveActivity", "(Landroid/content/Intent;I)Landroid/content/pm/ResolveInfo;", "GetResolveActivity_Landroid_content_Intent_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ResolveInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="intent">An intent containing all of the desired specification
               (action, data, type, category, and/or component).</param>
        <param name="flags">Additional option flags.  The most important is
 <c><see cref="!:Android.Content.PM.PackageManager.MATCH_DEFAULT_ONLY" /></c>, to limit the resolution to only
 those activities that support the <c><see cref="F:Android.Content.Intent.CategoryDefault" /></c>.</param>
        <summary>Determine the best action to perform for a given Intent.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ResolveContentProvider">
      <MemberSignature Language="C#" Value="public abstract Android.Content.PM.ProviderInfo ResolveContentProvider (string name, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.PM.ProviderInfo ResolveContentProvider(string name, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resolveContentProvider", "(Ljava/lang/String;I)Landroid/content/pm/ProviderInfo;", "GetResolveContentProvider_Ljava_lang_String_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ProviderInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">The name of the provider to find.</param>
        <param name="flags">Additional option flags.  Currently should always be 0.</param>
        <summary>Find a single content provider by its base path name.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ResolveService">
      <MemberSignature Language="C#" Value="public abstract Android.Content.PM.ResolveInfo ResolveService (Android.Content.Intent intent, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.PM.ResolveInfo ResolveService(class Android.Content.Intent intent, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resolveService", "(Landroid/content/Intent;I)Landroid/content/pm/ResolveInfo;", "GetResolveService_Landroid_content_Intent_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ResolveInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="intent">An intent containing all of the desired specification
               (action, data, type, category, and/or component).</param>
        <param name="flags">Additional option flags.</param>
        <summary>Determine the best service to handle for a given Intent.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetApplicationEnabledSetting">
      <MemberSignature Language="C#" Value="public abstract void SetApplicationEnabledSetting (string packageName, Android.Content.PM.ComponentEnabledState newState, Android.Content.PM.ComponentEnableOption flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetApplicationEnabledSetting(string packageName, valuetype Android.Content.PM.ComponentEnabledState newState, valuetype Android.Content.PM.ComponentEnableOption flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setApplicationEnabledSetting", "(Ljava/lang/String;II)V", "GetSetApplicationEnabledSetting_Ljava_lang_String_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="newState" Type="Android.Content.PM.ComponentEnabledState">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="flags" Type="Android.Content.PM.ComponentEnableOption">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="packageName">The package name of the application to enable</param>
        <param name="newState">The new enabled state for the component.  The legal values for this state
                 are:
                   <c><see cref="!:Android.Content.PM.PackageManager.COMPONENT_ENABLED_STATE_ENABLED" /></c>,
                   <c><see cref="!:Android.Content.PM.PackageManager.COMPONENT_ENABLED_STATE_DISABLED" /></c>
                   and
                   <c><see cref="!:Android.Content.PM.PackageManager.COMPONENT_ENABLED_STATE_DEFAULT" /></c>
                 The last one removes the setting, thereby restoring the applications's state to
                 whatever was set in its manifest (or enabled, by default).</param>
        <param name="flags">Optional behavior flags: <c><see cref="F:Android.Content.PM.PackageManager.DontKillApp" /></c> or 0.
</param>
        <summary>Set the enabled setting for an application
 This setting will override any enabled state which may have been set by the application in
 its manifest.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetComponentEnabledSetting">
      <MemberSignature Language="C#" Value="public abstract void SetComponentEnabledSetting (Android.Content.ComponentName componentName, Android.Content.PM.ComponentEnabledState newState, Android.Content.PM.ComponentEnableOption flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetComponentEnabledSetting(class Android.Content.ComponentName componentName, valuetype Android.Content.PM.ComponentEnabledState newState, valuetype Android.Content.PM.ComponentEnableOption flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setComponentEnabledSetting", "(Landroid/content/ComponentName;II)V", "GetSetComponentEnabledSetting_Landroid_content_ComponentName_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentName" Type="Android.Content.ComponentName" />
        <Parameter Name="newState" Type="Android.Content.PM.ComponentEnabledState">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="flags" Type="Android.Content.PM.ComponentEnableOption">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentName">The component to enable</param>
        <param name="newState">The new enabled state for the component.  The legal values for this state
                 are:
                   <c><see cref="!:Android.Content.PM.PackageManager.COMPONENT_ENABLED_STATE_ENABLED" /></c>,
                   <c><see cref="!:Android.Content.PM.PackageManager.COMPONENT_ENABLED_STATE_DISABLED" /></c>
                   and
                   <c><see cref="!:Android.Content.PM.PackageManager.COMPONENT_ENABLED_STATE_DEFAULT" /></c>
                 The last one removes the setting, thereby restoring the component's state to
                 whatever was set in it's manifest (or enabled, by default).</param>
        <param name="flags">Optional behavior flags: <c><see cref="F:Android.Content.PM.PackageManager.DontKillApp" /></c> or 0.
</param>
        <summary>Set the enabled setting for a package component (activity, receiver, service, provider).</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetInstallerPackageName">
      <MemberSignature Language="C#" Value="public abstract void SetInstallerPackageName (string targetPackage, string installerPackageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInstallerPackageName(string targetPackage, string installerPackageName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setInstallerPackageName", "(Ljava/lang/String;Ljava/lang/String;)V", "GetSetInstallerPackageName_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetPackage" Type="System.String" />
        <Parameter Name="installerPackageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetPackage">The installed package whose installer will be changed.</param>
        <param name="installerPackageName">The package name of the new installer.  May be
 null to clear the association.
</param>
        <summary>Change the installer associated with a given package.</summary>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="VerificationAllow">
      <MemberSignature Language="C#" Value="public const Android.Content.PM.PackageInstallVerification VerificationAllow = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.PM.PackageInstallVerification VerificationAllow = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("VERIFICATION_ALLOW")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Content.PM.PackageInstallVerification enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.PackageInstallVerification</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Used as the <c>verificationCode</c> argument for
 <c><see cref="M:Android.Content.PM.PackageManager.VerifyPendingInstall(System.Int32, Android.Content.PM.PackageInstallVerification)" /></c> to indicate that the calling
 package verifier allows the installation to proceed.</summary>
        <remarks />
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="VerificationReject">
      <MemberSignature Language="C#" Value="public const Android.Content.PM.PackageInstallVerification VerificationReject = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.PM.PackageInstallVerification VerificationReject = (-1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("VERIFICATION_REJECT")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Content.PM.PackageInstallVerification enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.PackageInstallVerification</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>Used as the <c>verificationCode</c> argument for
 <c><see cref="M:Android.Content.PM.PackageManager.VerifyPendingInstall(System.Int32, Android.Content.PM.PackageInstallVerification)" /></c> to indicate the calling
 package verifier does not vote to allow the installation to proceed.</summary>
        <remarks />
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="VerifyPendingInstall">
      <MemberSignature Language="C#" Value="public abstract void VerifyPendingInstall (int id, Android.Content.PM.PackageInstallVerification verificationCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VerifyPendingInstall(int32 id, valuetype Android.Content.PM.PackageInstallVerification verificationCode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("verifyPendingInstall", "(II)V", "GetVerifyPendingInstall_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="verificationCode" Type="Android.Content.PM.PackageInstallVerification">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="id">pending package identifier as passed via the
            <c><see cref="F:Android.Content.PM.PackageManager.ExtraVerificationId" /></c> Intent extra.</param>
        <param name="verificationCode">either <c><see cref="F:Android.Content.PM.PackageManager.VerificationAllow" /></c>
            or <c><see cref="F:Android.Content.PM.PackageManager.VerificationReject" /></c>.</param>
        <summary>Allows a package listening to the
 <c><see cref="F:Android.Content.Intent.ActionPackageNeedsVerification" /></c> to respond to the package manager.</summary>
        <remarks />
        <since version="Added in API level 14" />
        <exception cref="T:Java.Lang.SecurityException">if the caller does not have the
            PACKAGE_VERIFICATION_AGENT permission.
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
