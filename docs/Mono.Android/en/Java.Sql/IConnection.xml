<Type Name="IConnection" FullName="Java.Sql.IConnection">
  <TypeSignature Language="C#" Value="public interface IConnection : IDisposable, Java.Sql.IWrapper" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IConnection implements class Android.Runtime.IJavaObject, class Java.Sql.IWrapper, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Java.Sql.IWrapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/sql/Connection", "", "Java.Sql.IConnectionInvoker")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A connection represents a link from a Java application to a database.</summary>
    <remarks><para tool="javadoc-to-mdoc">A connection represents a link from a Java application to a database. All SQL
 statements and results are returned within the context of a connection.
 Database statements that are executed within this context form a
 database session which forms one or more closed transactions. Especially in
 distributed applications, multiple concurrent connections may exist accessing
 the same values of the database. which may lead to the following phenomena
 (referred to as <format type="text/html"><i>transaction isolation levels</i></format>):
 <list type="bullet"><item><term><format type="text/html"><i>dirty reads</i></format>:<format type="text/html"><br>
 reading values from table rows that are not committed.</br></format></term></item><item><term><format type="text/html"><i>non-repeatable reads</i></format>:<format type="text/html"><br>
 reading table rows more than once in a transaction but getting back different
 data because other transactions have altered the rows between the reads.</br></format></term></item><item><term><format type="text/html"><i>phantom reads</i></format>:<format type="text/html"><br>
 retrieving additional "phantom" rows in the course of repeated table reads
 because other transactions have inserted additional rows that satisfy an
 SQL <c>WHERE</c> clause</br></format></term></item></list></para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/sql/Connection.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort (Java.Util.Concurrent.IExecutor p0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Abort(class Java.Util.Concurrent.IExecutor p0) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("abort", "(Ljava/util/concurrent/Executor;)V", "GetAbort_Ljava_util_concurrent_Executor_Handler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="Java.Util.Concurrent.IExecutor" />
      </Parameters>
      <Docs>
        <param name="p0">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoCommit">
      <MemberSignature Language="C#" Value="public bool AutoCommit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoCommit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAutoCommit", "()Z", "GetGetAutoCommitHandler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setAutoCommit", "(Z)V", "GetSetAutoCommit_ZHandler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a <c>boolean</c> indicating whether or not this connection is in
 the <c>auto-commit</c> operating mode.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/java/sql/Connection.html#getAutoCommit()" target="_blank">[Android Documentation]</a><br /></format>Returns a <c>boolean</c> indicating whether or not this connection is in
 the <c>auto-commit</c> operating mode.</para><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/java/sql/Connection.html#setAutoCommit(boolean)" target="_blank">[Android Documentation]</a><br /></format>Sets this connection's auto-commit mode <c>on</c> or <c>off</c>.
 
 Putting a Connection into auto-commit mode means that all associated SQL
 statements are run and committed as separate transactions.
 By contrast, setting auto-commit to <c>off</c> means that associated SQL
 statements get grouped into transactions that need to be completed by
 explicit calls to either the <c><see cref="!:Java.Sql.Connection.commit()" /></c> or <c><see cref="!:Java.Sql.Connection.rollback()" /></c>
 methods.
 
 Auto-commit is the default mode for new connection instances.
 
 When in this mode, commits will automatically occur upon successful SQL
 statement completion or upon successful completion of an execute.
 Statements are not considered successfully completed until all associated
 <c>ResultSet</c>s and output parameters have been obtained or closed.
 
 Calling this operation during an uncommitted transaction will result in
 it being committed.</para><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc" /></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Sql.SQLException">if there is a problem accessing the database.
</exception>
        <exception cref="T:Java.Sql.SQLException">if there is a problem accessing the database.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Catalog">
      <MemberSignature Language="C#" Value="public string Catalog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Catalog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCatalog", "()Ljava/lang/String;", "GetGetCatalogHandler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setCatalog", "(Ljava/lang/String;)V", "GetSetCatalog_Ljava_lang_String_Handler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets this <c>Connection</c> object's current catalog name.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/java/sql/Connection.html#getCatalog()" target="_blank">[Android Documentation]</a><br /></format>Gets this <c>Connection</c> object's current catalog name.</para><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/java/sql/Connection.html#setCatalog(java.lang.String)" target="_blank">[Android Documentation]</a><br /></format>Sets the catalog name for this connection. This is used to select a
 subspace of the database for future work. If the driver does not support
 catalog names, this method is ignored.</para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Sql.SQLException">if there is a problem accessing the database.
</exception>
        <exception cref="T:Java.Sql.SQLException">if there is a problem accessing the database.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ClearWarnings">
      <MemberSignature Language="C#" Value="public void ClearWarnings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearWarnings() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearWarnings", "()V", "GetClearWarningsHandler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Discards all warnings that may have arisen for this connection.</summary>
        <remarks><para tool="javadoc-to-mdoc">Discards all warnings that may have arisen for this connection.
 Subsequent calls to <c><see cref="!:Java.Sql.Connection.getWarnings()" /></c> will return <c>null</c>
 up until a new warning condition occurs.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/sql/Connection.html#clearWarnings()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Sql.SQLException">if there is a problem accessing the database.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ClientInfo">
      <MemberSignature Language="C#" Value="public Java.Util.Properties ClientInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.Properties ClientInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getClientInfo", "()Ljava/util/Properties;", "GetGetClientInfoHandler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setClientInfo", "(Ljava/util/Properties;)V", "GetSetClientInfo_Ljava_util_Properties_Handler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Properties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a <c><see cref="T:Java.Util.Properties" /></c> object containing all client info properties.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/java/sql/Connection.html#getClientInfo()" target="_blank">[Android Documentation]</a><br /></format>Returns a <c><see cref="T:Java.Util.Properties" /></c> object containing all client info properties.</para><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/java/sql/Connection.html#setClientInfo(java.util.Properties)" target="_blank">[Android Documentation]</a><br /></format>Replaces all client info properties with the name/value pairs from <c>properties</c>.
 All existing properties are removed. If an exception is thrown, the resulting state of
 this connection's client info properties is undefined.</para></remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Sql.SQLClientInfoException">if this connection is closed, or there's a problem getting
 a property.
</exception>
        <exception cref="T:Java.Sql.SQLException" />
        <exception cref="T:Java.Sql.SQLClientInfoException">if this connection is closed, or there's a problem setting
 a property.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("close", "()V", "GetCloseHandler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Causes the instant release of all database and driver connection
 resources associated with this object.</summary>
        <remarks><para tool="javadoc-to-mdoc">Causes the instant release of all database and driver connection
 resources associated with this object. Any subsequent invocations of this
 method have no effect.
 </para><para tool="javadoc-to-mdoc">
 It is strongly recommended that all connections are closed before they
 are dereferenced by the application ready for garbage collection.
 Although the <c>finalize</c> method of the connection closes the
 connection before garbage collection takes place, it is not advisable to
 leave the <c>close</c> operation to take place in this way. Mainly
 because undesired side-effects may appear.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/sql/Connection.html#close()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Sql.SQLException">if there is a problem accessing the database.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Commit() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("commit", "()V", "GetCommitHandler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Commits all of the changes made since the last <c>commit</c> or
 <c>rollback</c> of the associated transaction.</summary>
        <remarks><para tool="javadoc-to-mdoc">Commits all of the changes made since the last <c>commit</c> or
 <c>rollback</c> of the associated transaction. All locks in the database
 held by this connection are also relinquished. Calling this operation on
 connection objects in <c>auto-commit</c> mode leads to an error.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/sql/Connection.html#commit()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Sql.SQLException">if there is a problem accessing the database or if the target
             connection instance is in auto-commit mode.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateArrayOf">
      <MemberSignature Language="C#" Value="public Java.Sql.IArray CreateArrayOf (string p0, Java.Lang.Object[] p1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Sql.IArray CreateArrayOf(string p0, class Java.Lang.Object[] p1) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createArrayOf", "(Ljava/lang/String;[Ljava/lang/Object;)Ljava/sql/Array;", "GetCreateArrayOf_Ljava_lang_String_arrayLjava_lang_Object_Handler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Sql.IArray</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.String" />
        <Parameter Name="p1" Type="Java.Lang.Object[]" />
      </Parameters>
      <Docs>
        <param name="p0">To be added.</param>
        <param name="p1">To be added.</param>
        <summary>Returns a new <c><see cref="T:Java.Sql.IArray" /></c> containing the given <c>elements</c>.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns a new <c><see cref="T:Java.Sql.IArray" /></c> containing the given <c>elements</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/sql/Connection.html#createArrayOf(java.lang.String, java.lang.Object[])" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Sql.SQLClientInfoException">if this connection is closed, or there's a problem creating
 the array.
</exception>
        <exception cref="T:Java.Sql.SQLException" />
      </Docs>
    </Member>
    <Member MemberName="CreateBlob">
      <MemberSignature Language="C#" Value="public Java.Sql.IBlob CreateBlob ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Sql.IBlob CreateBlob() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createBlob", "()Ljava/sql/Blob;", "GetCreateBlobHandler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Sql.IBlob</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a new empty Blob.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns a new empty Blob.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/sql/Connection.html#createBlob()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Sql.SQLException">if this connection is closed, or there's a problem creating a new blob.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateClob">
      <MemberSignature Language="C#" Value="public Java.Sql.IClob CreateClob ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Sql.IClob CreateClob() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createClob", "()Ljava/sql/Clob;", "GetCreateClobHandler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Sql.IClob</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a new empty Clob.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns a new empty Clob.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/sql/Connection.html#createClob()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Sql.SQLException">if this connection is closed, or there's a problem creating a new clob.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNClob">
      <MemberSignature Language="C#" Value="public Java.Sql.INClob CreateNClob ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Sql.INClob CreateNClob() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createNClob", "()Ljava/sql/NClob;", "GetCreateNClobHandler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Sql.INClob</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a new empty NClob.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns a new empty NClob.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/sql/Connection.html#createNClob()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Sql.SQLException">if this connection is closed, or there's a problem creating a new nclob.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSQLXML">
      <MemberSignature Language="C#" Value="public Java.Sql.ISQLXML CreateSQLXML ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Sql.ISQLXML CreateSQLXML() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createSQLXML", "()Ljava/sql/SQLXML;", "GetCreateSQLXMLHandler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Sql.ISQLXML</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a new empty SQLXML.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns a new empty SQLXML.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/sql/Connection.html#createSQLXML()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Sql.SQLException">if this connection is closed, or there's a problem creating a new XML.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateStatement">
      <MemberSignature Language="C#" Value="public Java.Sql.IStatement CreateStatement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Sql.IStatement CreateStatement() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createStatement", "()Ljava/sql/Statement;", "GetCreateStatementHandler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Sql.IStatement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a new instance of <c>Statement</c> for issuing SQL commands to
 the remote database.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns a new instance of <c>Statement</c> for issuing SQL commands to
 the remote database.
 </para><para tool="javadoc-to-mdoc"><c>ResultSets</c> generated by the returned statement will default to
 type <c>ResultSet.TYPE_FORWARD_ONLY</c> and concurrency level <c>ResultSet.CONCUR_READ_ONLY</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/sql/Connection.html#createStatement()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Sql.SQLException">if there is a problem accessing the database.</exception>
        <altmember cref="T:Java.Sql.ResultSet" />
      </Docs>
    </Member>
    <Member MemberName="CreateStatement">
      <MemberSignature Language="C#" Value="public Java.Sql.IStatement CreateStatement (int resultSetType, int resultSetConcurrency);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Sql.IStatement CreateStatement(int32 resultSetType, int32 resultSetConcurrency) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createStatement", "(II)Ljava/sql/Statement;", "GetCreateStatement_IIHandler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Sql.IStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultSetType" Type="System.Int32" />
        <Parameter Name="resultSetConcurrency" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resultSetType">one of the following type specifiers:
            <list type="bullet"><item><term><c><see cref="F:Java.Sql.ResultSet.TypeScrollSensitive" /></c></term></item><item><term><c><see cref="F:Java.Sql.ResultSet.TypeScrollInsensitive" /></c></term></item><item><term><c><see cref="F:Java.Sql.ResultSet.TypeForwardOnly" /></c></term></item></list></param>
        <param name="resultSetConcurrency">one of the following concurrency mode specifiers:
            <list type="bullet"><item><term><c><see cref="F:Java.Sql.ResultSet.ConcurUpdatable" /></c></term></item><item><term><c><see cref="F:Java.Sql.ResultSet.ConcurReadOnly" /></c></term></item></list></param>
        <summary>Returns a new instance of <c>Statement</c> whose associated <c>ResultSet</c>s have the characteristics specified in the type and
 concurrency arguments.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns a new instance of <c>Statement</c> whose associated <c>ResultSet</c>s have the characteristics specified in the type and
 concurrency arguments.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/sql/Connection.html#createStatement(int, int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Sql.SQLException">if there is a problem accessing the database
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateStatement">
      <MemberSignature Language="C#" Value="public Java.Sql.IStatement CreateStatement (int resultSetType, int resultSetConcurrency, int resultSetHoldability);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Sql.IStatement CreateStatement(int32 resultSetType, int32 resultSetConcurrency, int32 resultSetHoldability) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createStatement", "(III)Ljava/sql/Statement;", "GetCreateStatement_IIIHandler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Sql.IStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultSetType" Type="System.Int32" />
        <Parameter Name="resultSetConcurrency" Type="System.Int32" />
        <Parameter Name="resultSetHoldability" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resultSetType">one of the following type specifiers:
            <list type="bullet"><item><term><c><see cref="F:Java.Sql.ResultSet.TypeScrollSensitive" /></c></term></item><item><term><c><see cref="F:Java.Sql.ResultSet.TypeScrollInsensitive" /></c></term></item><item><term><c><see cref="F:Java.Sql.ResultSet.TypeForwardOnly" /></c></term></item></list></param>
        <param name="resultSetConcurrency">one of the following concurrency mode specifiers:
            <list type="bullet"><item><term><c><see cref="F:Java.Sql.ResultSet.ConcurUpdatable" /></c></term></item><item><term><c><see cref="F:Java.Sql.ResultSet.ConcurReadOnly" /></c></term></item></list></param>
        <param name="resultSetHoldability">one of the following holdability mode specifiers:
            <list type="bullet"><item><term><c><see cref="F:Java.Sql.ResultSet.HoldCursorsOverCommit" /></c></term></item><item><term><c><see cref="F:Java.Sql.ResultSet.CloseCursorsAtCommit" /></c></term></item></list></param>
        <summary>Returns a new instance of <c>Statement</c> whose associated
 <c>ResultSet</c>s will have the characteristics specified in the
 type, concurrency and holdability arguments.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns a new instance of <c>Statement</c> whose associated
 <c>ResultSet</c>s will have the characteristics specified in the
 type, concurrency and holdability arguments.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/sql/Connection.html#createStatement(int, int, int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Sql.SQLException">if there is a problem accessing the database.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateStruct">
      <MemberSignature Language="C#" Value="public Java.Sql.IStruct CreateStruct (string p0, Java.Lang.Object[] p1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Sql.IStruct CreateStruct(string p0, class Java.Lang.Object[] p1) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createStruct", "(Ljava/lang/String;[Ljava/lang/Object;)Ljava/sql/Struct;", "GetCreateStruct_Ljava_lang_String_arrayLjava_lang_Object_Handler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Sql.IStruct</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.String" />
        <Parameter Name="p1" Type="Java.Lang.Object[]" />
      </Parameters>
      <Docs>
        <param name="p0">To be added.</param>
        <param name="p1">To be added.</param>
        <summary>Returns a new <c><see cref="T:Java.Sql.IStruct" /></c> containing the given <c>attributes</c>.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns a new <c><see cref="T:Java.Sql.IStruct" /></c> containing the given <c>attributes</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/sql/Connection.html#createStruct(java.lang.String, java.lang.Object[])" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Sql.SQLClientInfoException">if this connection is closed, or there's a problem creating
 the array.
</exception>
        <exception cref="T:Java.Sql.SQLException" />
      </Docs>
    </Member>
    <Member MemberName="GetClientInfo">
      <MemberSignature Language="C#" Value="public string GetClientInfo (string p0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetClientInfo(string p0) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getClientInfo", "(Ljava/lang/String;)Ljava/lang/String;", "GetGetClientInfo_Ljava_lang_String_Handler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="p0">To be added.</param>
        <summary>Returns the value corresponding to the given client info property, or null if unset.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns the value corresponding to the given client info property, or null if unset.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/sql/Connection.html#getClientInfo(java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Sql.SQLClientInfoException">if this connection is closed, or there's a problem getting
 the property.
</exception>
        <exception cref="T:Java.Sql.SQLException" />
      </Docs>
    </Member>
    <Member MemberName="Holdability">
      <MemberSignature Language="C#" Value="public int Holdability { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Holdability" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getHoldability", "()I", "GetGetHoldabilityHandler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setHoldability", "(I)V", "GetSetHoldability_IHandler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the holdability property that any <c>ResultSet</c> produced by
 this instance will have.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/java/sql/Connection.html#getHoldability()" target="_blank">[Android Documentation]</a><br /></format>Returns the holdability property that any <c>ResultSet</c> produced by
 this instance will have.</para><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/java/sql/Connection.html#setHoldability(int)" target="_blank">[Android Documentation]</a><br /></format>Sets the holdability of the <c>ResultSet</c>s created by this Connection.</para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Sql.SQLException">if there is a problem accessing the a database.
</exception>
        <exception cref="T:Java.Sql.SQLException">if there is a problem accessing the database
</exception>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isClosed", "()Z", "GetIsClosedHandler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a <c>boolean</c> indicating whether or not this connection is in
 the <c>closed</c> state.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns a <c>boolean</c> indicating whether or not this connection is in
 the <c>closed</c> state. The <c>closed</c> state may be entered into as
 a consequence of a successful invocation of the <c><see cref="!:Java.Sql.Connection.close()" /></c> method
 or else if an error has occurred that prevents the connection from
 functioning normally.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/sql/Connection.html#isClosed()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Sql.SQLException">if there is a problem accessing the database.
</exception>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid (int p0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValid(int32 p0) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isValid", "(I)Z", "GetIsValid_IHandler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="p0">To be added.</param>
        <summary>Returns true if this connection is still open and valid, false otherwise.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns true if this connection is still open and valid, false otherwise.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/sql/Connection.html#isValid(int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Sql.SQLException">if <c>timeout </c></exception>
      </Docs>
    </Member>
    <Member MemberName="MetaData">
      <MemberSignature Language="C#" Value="public Java.Sql.IDatabaseMetaData MetaData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Sql.IDatabaseMetaData MetaData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMetaData", "()Ljava/sql/DatabaseMetaData;", "GetGetMetaDataHandler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Sql.IDatabaseMetaData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the metadata about the database referenced by this connection.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Gets the metadata about the database referenced by this connection. The
 returned <c>DatabaseMetaData</c> describes the database topography,
 available stored procedures, SQL syntax and so on.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/sql/Connection.html#getMetaData()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Sql.SQLException">if there is a problem accessing the a database.
</exception>
      </Docs>
    </Member>
    <Member MemberName="NativeSQL">
      <MemberSignature Language="C#" Value="public string NativeSQL (string sql);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string NativeSQL(string sql) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("nativeSQL", "(Ljava/lang/String;)Ljava/lang/String;", "GetNativeSQL_Ljava_lang_String_Handler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sql" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sql">the JDBC form of an SQL statement.</param>
        <summary>Returns a string representation of the input SQL statement
 <c>sql</c> expressed in the underlying system's native SQL
 syntax.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns a string representation of the input SQL statement
 <c>sql</c> expressed in the underlying system's native SQL
 syntax.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/sql/Connection.html#nativeSQL(java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Sql.SQLException">if there is a problem accessing the database
</exception>
      </Docs>
    </Member>
    <Member MemberName="NetworkTimeout">
      <MemberSignature Language="C#" Value="public int NetworkTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NetworkTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getNetworkTimeout", "()I", "GetGetNetworkTimeoutHandler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareCall">
      <MemberSignature Language="C#" Value="public Java.Sql.ICallableStatement PrepareCall (string sql);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Sql.ICallableStatement PrepareCall(string sql) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("prepareCall", "(Ljava/lang/String;)Ljava/sql/CallableStatement;", "GetPrepareCall_Ljava_lang_String_Handler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Sql.ICallableStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sql" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sql">the SQL statement that calls the stored function</param>
        <summary>Returns a new instance of <c>CallableStatement</c> that may be used for
 making stored procedure calls to the database.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns a new instance of <c>CallableStatement</c> that may be used for
 making stored procedure calls to the database.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/sql/Connection.html#prepareCall(java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Sql.SQLException">if a problem occurs accessing the database.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PrepareCall">
      <MemberSignature Language="C#" Value="public Java.Sql.ICallableStatement PrepareCall (string sql, int resultSetType, int resultSetConcurrency);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Sql.ICallableStatement PrepareCall(string sql, int32 resultSetType, int32 resultSetConcurrency) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("prepareCall", "(Ljava/lang/String;II)Ljava/sql/CallableStatement;", "GetPrepareCall_Ljava_lang_String_IIHandler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Sql.ICallableStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sql" Type="System.String" />
        <Parameter Name="resultSetType" Type="System.Int32" />
        <Parameter Name="resultSetConcurrency" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sql">the SQL statement</param>
        <param name="resultSetType">one of the following type specifiers:
            <list type="bullet"><item><term><c><see cref="F:Java.Sql.ResultSet.TypeScrollSensitive" /></c></term></item><item><term><c><see cref="F:Java.Sql.ResultSet.TypeScrollInsensitive" /></c></term></item><item><term><c><see cref="F:Java.Sql.ResultSet.TypeForwardOnly" /></c></term></item></list></param>
        <param name="resultSetConcurrency">one of the following concurrency mode specifiers:
            <list type="bullet"><item><term><c><see cref="F:Java.Sql.ResultSet.ConcurReadOnly" /></c></term></item><item><term><c><see cref="F:Java.Sql.ResultSet.ConcurUpdatable" /></c></term></item></list></param>
        <summary>Returns a new instance of <c>CallableStatement</c> that may be used for
 making stored procedure calls to the database.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns a new instance of <c>CallableStatement</c> that may be used for
 making stored procedure calls to the database. <c>ResultSet</c>s emitted
 from this <c>CallableStatement</c> will satisfy the specified <c>resultSetType</c> and <c>resultSetConcurrency</c> values.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/sql/Connection.html#prepareCall(java.lang.String, int, int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Sql.SQLException">if a problem occurs accessing the database
</exception>
      </Docs>
    </Member>
    <Member MemberName="PrepareCall">
      <MemberSignature Language="C#" Value="public Java.Sql.ICallableStatement PrepareCall (string sql, int resultSetType, int resultSetConcurrency, int resultSetHoldability);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Sql.ICallableStatement PrepareCall(string sql, int32 resultSetType, int32 resultSetConcurrency, int32 resultSetHoldability) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("prepareCall", "(Ljava/lang/String;III)Ljava/sql/CallableStatement;", "GetPrepareCall_Ljava_lang_String_IIIHandler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Sql.ICallableStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sql" Type="System.String" />
        <Parameter Name="resultSetType" Type="System.Int32" />
        <Parameter Name="resultSetConcurrency" Type="System.Int32" />
        <Parameter Name="resultSetHoldability" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sql">the SQL statement</param>
        <param name="resultSetType">one of the following type specifiers:
            <list type="bullet"><item><term><c><see cref="F:Java.Sql.ResultSet.TypeScrollSensitive" /></c></term></item><item><term><c><see cref="F:Java.Sql.ResultSet.TypeScrollInsensitive" /></c></term></item><item><term><c><see cref="F:Java.Sql.ResultSet.TypeForwardOnly" /></c></term></item></list></param>
        <param name="resultSetConcurrency">one of the following concurrency mode specifiers:
            <list type="bullet"><item><term><c><see cref="F:Java.Sql.ResultSet.ConcurReadOnly" /></c></term></item><item><term><c><see cref="F:Java.Sql.ResultSet.ConcurUpdatable" /></c></term></item></list></param>
        <param name="resultSetHoldability">one of the following holdability mode specifiers:
            <list type="bullet"><item><term><c><see cref="F:Java.Sql.ResultSet.HoldCursorsOverCommit" /></c></term></item><item><term><c><see cref="F:Java.Sql.ResultSet.CloseCursorsAtCommit" /></c></term></item></list></param>
        <summary>Returns a new instance of <c>CallableStatement</c> that may be used for
 making stored procedure calls to the database.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns a new instance of <c>CallableStatement</c> that may be used for
 making stored procedure calls to the database. <c>ResultSet</c>s created
 from this <c>CallableStatement</c> will have characteristics determined
 by the specified type, concurrency and holdability arguments.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/sql/Connection.html#prepareCall(java.lang.String, int, int, int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Sql.SQLException">if a problem occurs accessing the database.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PrepareStatement">
      <MemberSignature Language="C#" Value="public Java.Sql.IPreparedStatement PrepareStatement (string sql);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Sql.IPreparedStatement PrepareStatement(string sql) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("prepareStatement", "(Ljava/lang/String;)Ljava/sql/PreparedStatement;", "GetPrepareStatement_Ljava_lang_String_Handler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Sql.IPreparedStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sql" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sql">the SQL statement.</param>
        <summary>Returns a new instance of <c>PreparedStatement</c> that may be used any
 number of times to execute parameterized requests on the database server.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns a new instance of <c>PreparedStatement</c> that may be used any
 number of times to execute parameterized requests on the database server.
 </para><para tool="javadoc-to-mdoc">
 Subject to JDBC driver support, this operation will attempt to send the
 precompiled version of the statement to the database. If
 the driver does not support precompiled statements, the statement will
 not reach the database server until it is executed. This distinction
 determines the moment when <c>SQLException</c>s get raised.
 </para><para tool="javadoc-to-mdoc">
 By default, <c>ResultSet</c>s from the returned object will be
 <c><see cref="F:Java.Sql.ResultSet.TypeForwardOnly" /></c> type with a
 <c><see cref="F:Java.Sql.ResultSet.ConcurReadOnly" /></c> mode of concurrency.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/sql/Connection.html#prepareStatement(java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Sql.SQLException">if there is a problem accessing the database.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PrepareStatement">
      <MemberSignature Language="C#" Value="public Java.Sql.IPreparedStatement PrepareStatement (string sql, int autoGeneratedKeys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Sql.IPreparedStatement PrepareStatement(string sql, int32 autoGeneratedKeys) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("prepareStatement", "(Ljava/lang/String;I)Ljava/sql/PreparedStatement;", "GetPrepareStatement_Ljava_lang_String_IHandler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Sql.IPreparedStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sql" Type="System.String" />
        <Parameter Name="autoGeneratedKeys" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sql">the SQL statement.</param>
        <param name="autoGeneratedKeys">one of the following generated key options:
            <list type="bullet"><item><term><c><see cref="F:Java.Sql.Statement.ReturnGeneratedKeys" /></c></term></item><item><term><c><see cref="F:Java.Sql.Statement.NoGeneratedKeys" /></c></term></item></list></param>
        <summary>Creates a default <c>PreparedStatement</c> that can retrieve
 automatically generated keys.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Creates a default <c>PreparedStatement</c> that can retrieve
 automatically generated keys. Parameter <c>autoGeneratedKeys</c> may be
 used to tell the driver whether such keys should be made accessible.
 This is only relevant when the <c>sql</c> statement is an <c>insert</c>
 statement.
 </para><para tool="javadoc-to-mdoc">
 An SQL statement which may have <c>IN</c> parameters can be stored and
 precompiled in a <c>PreparedStatement</c>. The <c>PreparedStatement</c>
 can then be then be used to execute the statement multiple times in an
 efficient way.
 </para><para tool="javadoc-to-mdoc">
 Subject to JDBC driver support, this operation will attempt to send the
 precompiled version of the statement to the database. If
 the driver does not support precompiled statements, the statement will
 not reach the database server until it is executed. This distinction
 determines the moment when <c>SQLException</c>s get raised.
 </para><para tool="javadoc-to-mdoc">
 By default, <c>ResultSet</c>s from the returned object will be
 <c><see cref="F:Java.Sql.ResultSet.TypeForwardOnly" /></c> type with a
 <c><see cref="F:Java.Sql.ResultSet.ConcurReadOnly" /></c> mode of concurrency.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/sql/Connection.html#prepareStatement(java.lang.String, int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Sql.SQLException">if there is a problem accessing the database.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PrepareStatement">
      <MemberSignature Language="C#" Value="public Java.Sql.IPreparedStatement PrepareStatement (string sql, int[] columnIndexes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Sql.IPreparedStatement PrepareStatement(string sql, int32[] columnIndexes) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("prepareStatement", "(Ljava/lang/String;[I)Ljava/sql/PreparedStatement;", "GetPrepareStatement_Ljava_lang_String_arrayIHandler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Sql.IPreparedStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sql" Type="System.String" />
        <Parameter Name="columnIndexes" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="sql">the SQL statement.</param>
        <param name="columnIndexes">the indexes of the columns for which auto-generated keys
            should be made available.</param>
        <summary>Creates a default <c>PreparedStatement</c> that can retrieve the
 auto-generated keys designated by a supplied array.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Creates a default <c>PreparedStatement</c> that can retrieve the
 auto-generated keys designated by a supplied array. If <c>sql</c> is an
 SQL <c>INSERT</c> statement, the parameter <c>columnIndexes</c> is expected
 to hold the index values for each column in the statement's intended
 database table containing the autogenerated-keys of interest. Otherwise
 <c>columnIndexes</c> is ignored.
 </para><para tool="javadoc-to-mdoc">
 Subject to JDBC driver support, this operation will attempt to send the
 precompiled version of the statement to the database. If
 the driver does not support precompiled statements, the statement will
 not reach the database server until it is executed. This distinction
 determines the moment when <c>SQLException</c>s get raised.
 </para><para tool="javadoc-to-mdoc">
 By default, <c>ResultSet</c>s from the returned object will be
 <c><see cref="F:Java.Sql.ResultSet.TypeForwardOnly" /></c> type with a
 <c><see cref="F:Java.Sql.ResultSet.ConcurReadOnly" /></c> concurrency mode.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/sql/Connection.html#prepareStatement(java.lang.String, int[])" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Sql.SQLException">if a problem occurs accessing the database.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PrepareStatement">
      <MemberSignature Language="C#" Value="public Java.Sql.IPreparedStatement PrepareStatement (string sql, string[] columnNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Sql.IPreparedStatement PrepareStatement(string sql, string[] columnNames) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("prepareStatement", "(Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/PreparedStatement;", "GetPrepareStatement_Ljava_lang_String_arrayLjava_lang_String_Handler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Sql.IPreparedStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sql" Type="System.String" />
        <Parameter Name="columnNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="sql">the SQL statement.</param>
        <param name="columnNames">the names of the columns for which auto-generated keys should
            be made available.</param>
        <summary>Creates a default <c>PreparedStatement</c> that can retrieve the
 auto-generated keys designated by a supplied array.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Creates a default <c>PreparedStatement</c> that can retrieve the
 auto-generated keys designated by a supplied array. If <c>sql</c> is an
 SQL <c>INSERT</c> statement, <c>columnNames</c> is expected to hold the
 names of each column in the statement's associated database table
 containing the autogenerated-keys of interest. Otherwise <c>columnNames</c> is ignored.
 </para><para tool="javadoc-to-mdoc">
 Subject to JDBC driver support, this operation will attempt to send the
 precompiled version of the statement to the database. Alternatively, if
 the driver is not capable of handling precompiled statements, the
 statement will not reach the database server until it is executed. This
 will have a bearing on precisely <format type="text/html"><i>when</i></format><c>SQLException</c>
 instances get raised.
 </para><para tool="javadoc-to-mdoc">
 By default, ResultSets from the returned object will be
 <c><see cref="F:Java.Sql.ResultSet.TypeForwardOnly" /></c> type with a
 <c><see cref="F:Java.Sql.ResultSet.ConcurReadOnly" /></c> concurrency mode.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/sql/Connection.html#prepareStatement(java.lang.String, java.lang.String[])" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Sql.SQLException">if a problem occurs accessing the database.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PrepareStatement">
      <MemberSignature Language="C#" Value="public Java.Sql.IPreparedStatement PrepareStatement (string sql, int resultSetType, int resultSetConcurrency);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Sql.IPreparedStatement PrepareStatement(string sql, int32 resultSetType, int32 resultSetConcurrency) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("prepareStatement", "(Ljava/lang/String;II)Ljava/sql/PreparedStatement;", "GetPrepareStatement_Ljava_lang_String_IIHandler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Sql.IPreparedStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sql" Type="System.String" />
        <Parameter Name="resultSetType" Type="System.Int32" />
        <Parameter Name="resultSetConcurrency" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sql">the SQL statement. It can contain one or more <c>'?'</c><c>IN</c> parameter placeholders.</param>
        <param name="resultSetType">one of the following type specifiers:
            <list type="bullet"><item><term><c><see cref="F:Java.Sql.ResultSet.TypeScrollSensitive" /></c></term></item><item><term><c><see cref="F:Java.Sql.ResultSet.TypeScrollInsensitive" /></c></term></item><item><term><c><see cref="F:Java.Sql.ResultSet.TypeForwardOnly" /></c></term></item></list></param>
        <param name="resultSetConcurrency">one of the following concurrency mode specifiers:
            <list type="bullet"><item><term><c><see cref="F:Java.Sql.ResultSet.ConcurReadOnly" /></c></term></item><item><term><c><see cref="F:Java.Sql.ResultSet.ConcurUpdatable" /></c></term></item></list></param>
        <summary>Creates a <c>PreparedStatement</c> that generates <c>ResultSet</c>s
 with the specified values of <c>resultSetType</c> and <c>resultSetConcurrency</c>.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Creates a <c>PreparedStatement</c> that generates <c>ResultSet</c>s
 with the specified values of <c>resultSetType</c> and <c>resultSetConcurrency</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/sql/Connection.html#prepareStatement(java.lang.String, int, int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Sql.SQLException">if a problem occurs accessing the database.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PrepareStatement">
      <MemberSignature Language="C#" Value="public Java.Sql.IPreparedStatement PrepareStatement (string sql, int resultSetType, int resultSetConcurrency, int resultSetHoldability);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Sql.IPreparedStatement PrepareStatement(string sql, int32 resultSetType, int32 resultSetConcurrency, int32 resultSetHoldability) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("prepareStatement", "(Ljava/lang/String;III)Ljava/sql/PreparedStatement;", "GetPrepareStatement_Ljava_lang_String_IIIHandler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Sql.IPreparedStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sql" Type="System.String" />
        <Parameter Name="resultSetType" Type="System.Int32" />
        <Parameter Name="resultSetConcurrency" Type="System.Int32" />
        <Parameter Name="resultSetHoldability" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sql">the SQL statement. It can contain one or more <c>'?' IN</c>
            parameter placeholders.</param>
        <param name="resultSetType">one of the following type specifiers:
            <list type="bullet"><item><term><c><see cref="F:Java.Sql.ResultSet.TypeScrollSensitive" /></c></term></item><item><term><c><see cref="F:Java.Sql.ResultSet.TypeScrollInsensitive" /></c></term></item><item><term><c><see cref="F:Java.Sql.ResultSet.TypeForwardOnly" /></c></term></item></list></param>
        <param name="resultSetConcurrency">one of the following concurrency mode specifiers:
            <list type="bullet"><item><term><c><see cref="F:Java.Sql.ResultSet.ConcurReadOnly" /></c></term></item><item><term><c><see cref="F:Java.Sql.ResultSet.ConcurUpdatable" /></c></term></item></list></param>
        <param name="resultSetHoldability">one of the following holdability mode specifiers:
            <list type="bullet"><item><term><c><see cref="F:Java.Sql.ResultSet.HoldCursorsOverCommit" /></c></term></item><item><term><c><see cref="F:Java.Sql.ResultSet.CloseCursorsAtCommit" /></c></term></item></list></param>
        <summary>Creates a <c>PreparedStatement</c> that generates <c>ResultSet</c>s
 with the specified type, concurrency and holdability</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Creates a <c>PreparedStatement</c> that generates <c>ResultSet</c>s
 with the specified type, concurrency and holdability</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/sql/Connection.html#prepareStatement(java.lang.String, int, int, int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Sql.SQLException">if a problem occurs accessing the database.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isReadOnly", "()Z", "GetIsReadOnlyHandler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setReadOnly", "(Z)V", "GetSetReadOnly_ZHandler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a <c>boolean</c> indicating whether or not this connection is
 currently in the <c>read-only</c> state.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/java/sql/Connection.html#isReadOnly()" target="_blank">[Android Documentation]</a><br /></format>Returns a <c>boolean</c> indicating whether or not this connection is
 currently in the <c>read-only</c> state.</para><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/java/sql/Connection.html#setReadOnly(boolean)" target="_blank">[Android Documentation]</a><br /></format>Sets this connection to read-only mode.
 
 This serves as a hint to the driver, which can enable database
 optimizations.</para><para tool="javadoc-to-mdoc" /></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Sql.SQLException">if there is a problem accessing the database.
</exception>
        <exception cref="T:Java.Sql.SQLException">if there is a problem accessing the database.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReleaseSavepoint">
      <MemberSignature Language="C#" Value="public void ReleaseSavepoint (Java.Sql.ISavepoint savepoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseSavepoint(class Java.Sql.ISavepoint savepoint) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("releaseSavepoint", "(Ljava/sql/Savepoint;)V", "GetReleaseSavepoint_Ljava_sql_Savepoint_Handler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savepoint" Type="Java.Sql.ISavepoint" />
      </Parameters>
      <Docs>
        <param name="savepoint">the object targeted for removal.</param>
        <summary>Releases the specified <c>savepoint</c> from the present transaction.</summary>
        <remarks><para tool="javadoc-to-mdoc">Releases the specified <c>savepoint</c> from the present transaction. Once removed,
 the <c>Savepoint</c> is considered invalid and should not be referenced
 further.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/sql/Connection.html#releaseSavepoint(java.sql.Savepoint)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Sql.SQLException">if there is a problem with accessing the database or if
             <c>savepoint</c> is considered not valid in this
             transaction.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public void Rollback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rollback() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("rollback", "()V", "GetRollbackHandler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rolls back all updates made so far in this transaction and
 relinquishes all acquired database locks.</summary>
        <remarks><para tool="javadoc-to-mdoc">Rolls back all updates made so far in this transaction and
 relinquishes all acquired database locks. It is an error to invoke this
 operation when in auto-commit mode.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/sql/Connection.html#rollback()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Sql.SQLException">if there is a problem with the database or if the method is
             called while in auto-commit mode of operation.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public void Rollback (Java.Sql.ISavepoint savepoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rollback(class Java.Sql.ISavepoint savepoint) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("rollback", "(Ljava/sql/Savepoint;)V", "GetRollback_Ljava_sql_Savepoint_Handler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savepoint" Type="Java.Sql.ISavepoint" />
      </Parameters>
      <Docs>
        <param name="savepoint">the Savepoint to roll back to</param>
        <summary>Undoes all changes made after the supplied <c>Savepoint</c> object was
 set.</summary>
        <remarks><para tool="javadoc-to-mdoc">Undoes all changes made after the supplied <c>Savepoint</c> object was
 set. This method should only be used when auto-commit mode is disabled.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/sql/Connection.html#rollback(java.sql.Savepoint)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Sql.SQLException">if there is a problem accessing the database.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public string Schema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSchema", "()Ljava/lang/String;", "GetGetSchemaHandler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSchema", "(Ljava/lang/String;)V", "GetSetSchema_Ljava_lang_String_Handler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClientInfo">
      <MemberSignature Language="C#" Value="public void SetClientInfo (string p0, string p1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetClientInfo(string p0, string p1) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setClientInfo", "(Ljava/lang/String;Ljava/lang/String;)V", "GetSetClientInfo_Ljava_lang_String_Ljava_lang_String_Handler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.String" />
        <Parameter Name="p1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="p0">To be added.</param>
        <param name="p1">To be added.</param>
        <summary>Sets the client info property <c>name</c> to <c>value</c>.</summary>
        <remarks><para tool="javadoc-to-mdoc">Sets the client info property <c>name</c> to <c>value</c>. A value of null clears the
 client info property.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/sql/Connection.html#setClientInfo(java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Sql.SQLClientInfoException">if this connection is closed, or there's a problem setting
 the property.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetNetworkTimeout">
      <MemberSignature Language="C#" Value="public void SetNetworkTimeout (Java.Util.Concurrent.IExecutor p0, int p1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetNetworkTimeout(class Java.Util.Concurrent.IExecutor p0, int32 p1) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setNetworkTimeout", "(Ljava/util/concurrent/Executor;I)V", "GetSetNetworkTimeout_Ljava_util_concurrent_Executor_IHandler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="p1" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="p0">To be added.</param>
        <param name="p1">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSavepoint">
      <MemberSignature Language="C#" Value="public Java.Sql.ISavepoint SetSavepoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Sql.ISavepoint SetSavepoint() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSavepoint", "()Ljava/sql/Savepoint;", "GetSetSavepointHandler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Sql.ISavepoint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates an unnamed <c>Savepoint</c> in the current transaction.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Creates an unnamed <c>Savepoint</c> in the current transaction.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/sql/Connection.html#setSavepoint()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Sql.SQLException">if there is a problem accessing the database.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetSavepoint">
      <MemberSignature Language="C#" Value="public Java.Sql.ISavepoint SetSavepoint (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Sql.ISavepoint SetSavepoint(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSavepoint", "(Ljava/lang/String;)Ljava/sql/Savepoint;", "GetSetSavepoint_Ljava_lang_String_Handler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Sql.ISavepoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">the name to use for the new <c>Savepoint</c>.</param>
        <summary>Creates a named <c>Savepoint</c> in the current transaction.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Creates a named <c>Savepoint</c> in the current transaction.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/sql/Connection.html#setSavepoint(java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Sql.SQLException">if there is a problem accessing the database.
</exception>
      </Docs>
    </Member>
    <Member MemberName="TransactionIsolation">
      <MemberSignature Language="C#" Value="public int TransactionIsolation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TransactionIsolation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTransactionIsolation", "()I", "GetGetTransactionIsolationHandler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTransactionIsolation", "(I)V", "GetSetTransactionIsolation_IHandler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the transaction isolation level for this connection.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/java/sql/Connection.html#getTransactionIsolation()" target="_blank">[Android Documentation]</a><br /></format>Returns the transaction isolation level for this connection.</para><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/java/sql/Connection.html#setTransactionIsolation(int)" target="_blank">[Android Documentation]</a><br /></format>Sets the transaction isolation level for this Connection.
 
 If this method is called during a transaction, the results are
 implementation defined.</para><para tool="javadoc-to-mdoc" /></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Sql.SQLException">if there is a problem accessing the database.</exception>
        <altmember cref="F:Java.Sql.Connection.TransactionNone" />
        <altmember cref="F:Java.Sql.Connection.TransactionReadCommitted" />
        <altmember cref="F:Java.Sql.Connection.TransactionReadUncommitted" />
        <altmember cref="F:Java.Sql.Connection.TransactionRepeatableRead" />
        <altmember cref="F:Java.Sql.Connection.TransactionSerializable" />
        <exception cref="T:Java.Sql.SQLException">if there is a problem with the database or if the value of
             <c>level</c> is not one of the expected constant values.
</exception>
      </Docs>
    </Member>
    <Member MemberName="TypeMap">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Java.Lang.Class&gt; TypeMap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Java.Lang.Class&gt; TypeMap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTypeMap", "()Ljava/util/Map;", "GetGetTypeMapHandler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTypeMap", "(Ljava/util/Map;)V", "GetSetTypeMap_Ljava_util_Map_Handler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Java.Lang.Class&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the type mapping associated with this <c>Connection</c> object.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns the type mapping associated with this <c>Connection</c> object.
 The type mapping must be set on the application level.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/sql/Connection.html#getTypeMap()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Sql.SQLException">if there is a problem accessing the database.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Warnings">
      <MemberSignature Language="C#" Value="public Java.Sql.SQLWarning Warnings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Sql.SQLWarning Warnings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getWarnings", "()Ljava/sql/SQLWarning;", "GetGetWarningsHandler:Java.Sql.IConnectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Sql.SQLWarning</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the first instance of any <c>SQLWarning</c> objects that may have
 been created in the use of this connection.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Gets the first instance of any <c>SQLWarning</c> objects that may have
 been created in the use of this connection. If at least one warning has
 occurred then this operation returns the first one reported. A <c>null</c> indicates that no warnings have occurred.
 </para><para tool="javadoc-to-mdoc">
 By invoking the <c><see cref="P:Java.Sql.SQLWarning.NextWarning" /></c> method of the
 returned <c>SQLWarning</c> object it is possible to obtain all of
 this connection's warning objects.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/sql/Connection.html#getWarnings()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Sql.SQLException">if there is a problem accessing the database or if the call
             has been made on a connection which has been previously
             closed.
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
