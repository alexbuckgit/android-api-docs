<Type Name="DriverManager" FullName="Java.Sql.DriverManager">
  <TypeSignature Language="C#" Value="public class DriverManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DriverManager extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/sql/DriverManager", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Provides facilities for managing JDBC drivers.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Provides facilities for managing JDBC drivers. The <c>android.database</c> and
 <c>android.database.sqlite</c> packages offer a higher-performance alternative for new
 code.

 </para>
      <para tool="javadoc-to-mdoc">Note that Android does not include any JDBC drivers by default; you must provide your own.

 </para>
      <para tool="javadoc-to-mdoc">The <c>DriverManager</c> class loads JDBC drivers during its initialization,
 from the list of drivers referenced by the system property <c>"jdbc.drivers"</c>.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/java/sql/DriverManager.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DriverManager (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeregisterDriver">
      <MemberSignature Language="C#" Value="public static void DeregisterDriver (Java.Sql.IDriver driver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeregisterDriver(class Java.Sql.IDriver driver) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("deregisterDriver", "(Ljava/sql/Driver;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="driver" Type="Java.Sql.IDriver" />
      </Parameters>
      <Docs>
        <param name="driver">the JDBC driver to remove.</param>
        <summary>Removes a driver from the <c>DriverManager</c>'s registered driver list.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Removes a driver from the <c>DriverManager</c>'s registered driver list.
 This will only succeed when the caller's class loader loaded the driver
 that is to be removed. If the driver was loaded by a different class
 loader, the removal of the driver fails silently.
 </para>
          <para tool="javadoc-to-mdoc">
 If the removal succeeds, the <c>DriverManager</c> will not use this
 driver in the future when asked to get a <c>Connection</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/sql/DriverManager.html#deregisterDriver(java.sql.Driver)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Sql.SQLException">if there is a problem interfering with accessing the
             database.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Drivers">
      <MemberSignature Language="C#" Value="public static Java.Util.IEnumeration Drivers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Util.IEnumeration Drivers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDrivers", "()Ljava/util/Enumeration;", "GetGetDriversHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.IEnumeration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns an <c>Enumeration</c> that contains all of the loaded JDBC
 drivers that the current caller can access.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns an <c>Enumeration</c> that contains all of the loaded JDBC
 drivers that the current caller can access.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/sql/DriverManager.html#getDrivers()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetConnection">
      <MemberSignature Language="C#" Value="public static Java.Sql.IConnection GetConnection (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Sql.IConnection GetConnection(string url) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getConnection", "(Ljava/lang/String;)Ljava/sql/Connection;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Sql.IConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">a URL string representing the database target to connect with.</param>
        <summary>Attempts to establish a connection to the given database URL.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Attempts to establish a connection to the given database URL.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/sql/DriverManager.html#getConnection(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Sql.SQLException">if there is an error while attempting to connect to the
             database identified by the URL.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetConnection">
      <MemberSignature Language="C#" Value="public static Java.Sql.IConnection GetConnection (string url, Java.Util.Properties info);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Sql.IConnection GetConnection(string url, class Java.Util.Properties info) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getConnection", "(Ljava/lang/String;Ljava/util/Properties;)Ljava/sql/Connection;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Sql.IConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="info" Type="Java.Util.Properties" />
      </Parameters>
      <Docs>
        <param name="url">a URL string representing the database target to connect with</param>
        <param name="info">a set of properties to use as arguments to set up the
            connection. Properties are arbitrary string/value pairs.
            Normally, at least the properties <c>"user"</c> and <c>"password"</c> should be passed, with appropriate settings for
            the user ID and its corresponding password to get access to
            the corresponding database.</param>
        <summary>Attempts to establish a connection to the given database URL.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Attempts to establish a connection to the given database URL.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/sql/DriverManager.html#getConnection(java.lang.String, java.util.Properties)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Sql.SQLException">if there is an error while attempting to connect to the
             database identified by the URL.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetConnection">
      <MemberSignature Language="C#" Value="public static Java.Sql.IConnection GetConnection (string url, string user, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Sql.IConnection GetConnection(string url, string user, string password) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getConnection", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Connection;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Sql.IConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="user" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">a URL string representing the database target to connect with.</param>
        <param name="user">a user ID used to login to the database.</param>
        <param name="password">a password for the user ID to login to the database.</param>
        <summary>Attempts to establish a connection to the given database URL.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Attempts to establish a connection to the given database URL.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/sql/DriverManager.html#getConnection(java.lang.String, java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Sql.SQLException">if there is an error while attempting to connect to the
             database identified by the URL.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDriver">
      <MemberSignature Language="C#" Value="public static Java.Sql.IDriver GetDriver (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Sql.IDriver GetDriver(string url) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDriver", "(Ljava/lang/String;)Ljava/sql/Driver;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Sql.IDriver</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">the URL of a database.</param>
        <summary>Tries to find a driver that can interpret the supplied URL.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Tries to find a driver that can interpret the supplied URL.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/sql/DriverManager.html#getDriver(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Sql.SQLException">if there is any kind of problem accessing the database.
</exception>
      </Docs>
    </Member>
    <Member MemberName="LoginTimeout">
      <MemberSignature Language="C#" Value="public static int LoginTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 LoginTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLoginTimeout", "()I", "GetGetLoginTimeoutHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setLoginTimeout", "(I)V", "GetSetLoginTimeout_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the login timeout when connecting to a database in seconds.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/java/sql/DriverManager.html#getLoginTimeout()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the login timeout when connecting to a database in seconds.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/java/sql/DriverManager.html#setLoginTimeout(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the login timeout when connecting to a database in seconds.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LogStream">
      <MemberSignature Language="C#" Value="public static Java.IO.PrintStream LogStream { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.IO.PrintStream LogStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLogStream", "()Ljava/io/PrintStream;", "GetGetLogStreamHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setLogStream", "(Ljava/io/PrintStream;)V", "GetSetLogStream_Ljava_io_PrintStream_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.PrintStream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the log <c>PrintStream</c> used by the <c>DriverManager</c> and
 all the JDBC Drivers.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/java/sql/DriverManager.html#getLogStream()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the log <c>PrintStream</c> used by the <c>DriverManager</c> and
 all the JDBC Drivers.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/java/sql/DriverManager.html#setLogStream(java.io.PrintStream)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the print stream to use for logging data from the <c>DriverManager</c> and the JDBC drivers.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LogWriter">
      <MemberSignature Language="C#" Value="public static Java.IO.PrintWriter LogWriter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.IO.PrintWriter LogWriter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLogWriter", "()Ljava/io/PrintWriter;", "GetGetLogWriterHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setLogWriter", "(Ljava/io/PrintWriter;)V", "GetSetLogWriter_Ljava_io_PrintWriter_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.PrintWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieves the log writer.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/java/sql/DriverManager.html#getLogWriter()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Retrieves the log writer.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/java/sql/DriverManager.html#setLogWriter(java.io.PrintWriter)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the <c>PrintWriter</c> that is used by all loaded drivers, and also
 the <c>DriverManager</c>.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Println">
      <MemberSignature Language="C#" Value="public static void Println (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Println(string message) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("println", "(Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">the message to print to the JDBC log stream.
</param>
        <summary>Prints a message to the current JDBC log stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Prints a message to the current JDBC log stream. This is either the
 <c>PrintWriter</c> or (deprecated) the <c>PrintStream</c>, if set.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/sql/DriverManager.html#println(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PrintlnAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task PrintlnAsync (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task PrintlnAsync(string message) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterDriver">
      <MemberSignature Language="C#" Value="public static void RegisterDriver (Java.Sql.IDriver driver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterDriver(class Java.Sql.IDriver driver) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerDriver", "(Ljava/sql/Driver;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="driver" Type="Java.Sql.IDriver" />
      </Parameters>
      <Docs>
        <param name="driver">the <c>Driver</c> to register with the <c>DriverManager</c>.</param>
        <summary>Registers a given JDBC driver with the <c>DriverManager</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Registers a given JDBC driver with the <c>DriverManager</c>.
 </para>
          <para tool="javadoc-to-mdoc">
 A newly loaded JDBC driver class should register itself with the
 <c>DriverManager</c> by calling this method.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/sql/DriverManager.html#registerDriver(java.sql.Driver)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Sql.SQLException">if a database access error occurs.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>