<Type Name="IKeyListener" FullName="Android.Text.Method.IKeyListener">
  <TypeSignature Language="C#" Value="public interface IKeyListener : Android.Runtime.IJavaObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IKeyListener implements class Android.Runtime.IJavaObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Text.Method.IKeyListener" />
  <TypeSignature Language="F#" Value="type IKeyListener = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/text/method/KeyListener", "", "Android.Text.Method.IKeyListenerInvoker", ApiSince=1)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Interface for converting text key events into edit operations on an
 Editable class.</summary>
    <remarks />
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="ClearMetaKeyState">
      <MemberSignature Language="C#" Value="public void ClearMetaKeyState (Android.Views.View view, Android.Text.IEditable content, Android.Views.MetaKeyStates states);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearMetaKeyState(class Android.Views.View view, class Android.Text.IEditable content, valuetype Android.Views.MetaKeyStates states) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Method.IKeyListener.ClearMetaKeyState(Android.Views.View,Android.Text.IEditable,Android.Views.MetaKeyStates)" />
      <MemberSignature Language="F#" Value="abstract member ClearMetaKeyState : Android.Views.View * Android.Text.IEditable * Android.Views.MetaKeyStates -&gt; unit" Usage="iKeyListener.ClearMetaKeyState (view, content, states)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearMetaKeyState", "(Landroid/view/View;Landroid/text/Editable;I)V", "GetClearMetaKeyState_Landroid_view_View_Landroid_text_Editable_IHandler:Android.Text.Method.IKeyListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="content" Type="Android.Text.IEditable" />
        <Parameter Name="states" Type="Android.Views.MetaKeyStates">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <param name="content">To be added.</param>
        <param name="states">To be added.</param>
        <summary>Remove the given shift states from the edited text.</summary>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="InputType">
      <MemberSignature Language="C#" Value="public Android.Text.InputTypes InputType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Text.InputTypes InputType" />
      <MemberSignature Language="DocId" Value="P:Android.Text.Method.IKeyListener.InputType" />
      <MemberSignature Language="F#" Value="member this.InputType : Android.Text.InputTypes" Usage="Android.Text.Method.IKeyListener.InputType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getInputType", "()I", "GetGetInputTypeHandler:Android.Text.Method.IKeyListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.InputTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the type of text that this key listener is manipulating,
 as per <c><see cref="T:Android.Text.IInputType" /></c>.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="public bool OnKeyDown (Android.Views.View view, Android.Text.IEditable text, Android.Views.Keycode keyCode, Android.Views.KeyEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnKeyDown(class Android.Views.View view, class Android.Text.IEditable text, valuetype Android.Views.Keycode keyCode, class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Method.IKeyListener.OnKeyDown(Android.Views.View,Android.Text.IEditable,Android.Views.Keycode,Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="abstract member OnKeyDown : Android.Views.View * Android.Text.IEditable * Android.Views.Keycode * Android.Views.KeyEvent -&gt; bool" Usage="iKeyListener.OnKeyDown (view, text, keyCode, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onKeyDown", "(Landroid/view/View;Landroid/text/Editable;ILandroid/view/KeyEvent;)Z", "GetOnKeyDown_Landroid_view_View_Landroid_text_Editable_ILandroid_view_KeyEvent_Handler:Android.Text.Method.IKeyListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="text" Type="Android.Text.IEditable" />
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <param name="text">To be added.</param>
        <param name="keyCode">To be added.</param>
        <param name="e">To be added.</param>
        <summary tool="true">If the key listener wants to handle this key, return true,
 otherwise return false and the caller (i.e. the widget host)
 will handle the key.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyOther">
      <MemberSignature Language="C#" Value="public bool OnKeyOther (Android.Views.View view, Android.Text.IEditable text, Android.Views.KeyEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnKeyOther(class Android.Views.View view, class Android.Text.IEditable text, class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Method.IKeyListener.OnKeyOther(Android.Views.View,Android.Text.IEditable,Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="abstract member OnKeyOther : Android.Views.View * Android.Text.IEditable * Android.Views.KeyEvent -&gt; bool" Usage="iKeyListener.OnKeyOther (view, text, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onKeyOther", "(Landroid/view/View;Landroid/text/Editable;Landroid/view/KeyEvent;)Z", "GetOnKeyOther_Landroid_view_View_Landroid_text_Editable_Landroid_view_KeyEvent_Handler:Android.Text.Method.IKeyListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="text" Type="Android.Text.IEditable" />
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <param name="text">To be added.</param>
        <param name="e">To be added.</param>
        <summary tool="true">If the key listener wants to other kinds of key events, return true,
 otherwise return false and the caller (i.e. the widget host)
 will handle the key.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="public bool OnKeyUp (Android.Views.View view, Android.Text.IEditable text, Android.Views.Keycode keyCode, Android.Views.KeyEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnKeyUp(class Android.Views.View view, class Android.Text.IEditable text, valuetype Android.Views.Keycode keyCode, class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Method.IKeyListener.OnKeyUp(Android.Views.View,Android.Text.IEditable,Android.Views.Keycode,Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="abstract member OnKeyUp : Android.Views.View * Android.Text.IEditable * Android.Views.Keycode * Android.Views.KeyEvent -&gt; bool" Usage="iKeyListener.OnKeyUp (view, text, keyCode, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onKeyUp", "(Landroid/view/View;Landroid/text/Editable;ILandroid/view/KeyEvent;)Z", "GetOnKeyUp_Landroid_view_View_Landroid_text_Editable_ILandroid_view_KeyEvent_Handler:Android.Text.Method.IKeyListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="text" Type="Android.Text.IEditable" />
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <param name="text">To be added.</param>
        <param name="keyCode">To be added.</param>
        <param name="e">To be added.</param>
        <summary tool="true">If the key listener wants to handle this key release, return true,
 otherwise return false and the caller (i.e. the widget host)
 will handle the key.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
