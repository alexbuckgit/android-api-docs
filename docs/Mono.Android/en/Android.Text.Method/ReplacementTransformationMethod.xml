<Type Name="ReplacementTransformationMethod" FullName="Android.Text.Method.ReplacementTransformationMethod">
  <TypeSignature Language="C#" Value="public abstract class ReplacementTransformationMethod : Java.Lang.Object, Android.Text.Method.ITransformationMethod, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ReplacementTransformationMethod extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Android.Text.Method.ITransformationMethod, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Text.Method.ITransformationMethod</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/text/method/ReplacementTransformationMethod", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This transformation method causes the characters in the <c><see cref="M:Android.Text.Method.ReplacementTransformationMethod.GetOriginal" /></c>
 array to be replaced by the corresponding characters in the
 <c><see cref="M:Android.Text.Method.ReplacementTransformationMethod.GetReplacement" /></c> array.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">This transformation method causes the characters in the <c><see cref="M:Android.Text.Method.ReplacementTransformationMethod.GetOriginal" /></c>
 array to be replaced by the corresponding characters in the
 <c><see cref="M:Android.Text.Method.ReplacementTransformationMethod.GetReplacement" /></c> array.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/text/method/ReplacementTransformationMethod.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReplacementTransformationMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/method/ReplacementTransformationMethod.html#ReplacementTransformationMethod()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ReplacementTransformationMethod (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOriginal">
      <MemberSignature Language="C#" Value="protected abstract char[] GetOriginal ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance char[] GetOriginal() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getOriginal", "()[C", "GetGetOriginalHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the list of characters that are to be replaced by other
 characters when displayed.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the list of characters that are to be replaced by other
 characters when displayed.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/method/ReplacementTransformationMethod.html#getOriginal()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetReplacement">
      <MemberSignature Language="C#" Value="protected abstract char[] GetReplacement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance char[] GetReplacement() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getReplacement", "()[C", "GetGetReplacementHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a parallel array of replacement characters for the ones
 that are to be replaced.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a parallel array of replacement characters for the ones
 that are to be replaced.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/method/ReplacementTransformationMethod.html#getReplacement()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetTransformation">
      <MemberSignature Language="C#" Value="public string GetTransformation (string source, Android.Views.View v);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTransformation(string source, class Android.Views.View v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="v" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTransformationFormatted">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence GetTransformationFormatted (Java.Lang.ICharSequence source, Android.Views.View v);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.ICharSequence GetTransformationFormatted(class Java.Lang.ICharSequence source, class Android.Views.View v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getTransformation", "(Ljava/lang/CharSequence;Landroid/view/View;)Ljava/lang/CharSequence;", "GetGetTransformation_Ljava_lang_CharSequence_Landroid_view_View_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Java.Lang.ICharSequence" />
        <Parameter Name="v" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="v">To be added.</param>
        <summary>Returns a CharSequence that will mirror the contents of the
 source CharSequence but with the characters in <c><see cref="M:Android.Text.Method.ReplacementTransformationMethod.GetOriginal" /></c>
 replaced by ones from <c><see cref="M:Android.Text.Method.ReplacementTransformationMethod.GetReplacement" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a CharSequence that will mirror the contents of the
 source CharSequence but with the characters in <c><see cref="M:Android.Text.Method.ReplacementTransformationMethod.GetOriginal" /></c>
 replaced by ones from <c><see cref="M:Android.Text.Method.ReplacementTransformationMethod.GetReplacement" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/method/ReplacementTransformationMethod.html#getTransformation(java.lang.CharSequence, android.view.View)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnFocusChanged">
      <MemberSignature Language="C#" Value="public virtual void OnFocusChanged (Android.Views.View view, Java.Lang.ICharSequence sourceText, bool focused, Android.Views.FocusSearchDirection direction, Android.Graphics.Rect previouslyFocusedRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnFocusChanged(class Android.Views.View view, class Java.Lang.ICharSequence sourceText, bool focused, valuetype Android.Views.FocusSearchDirection direction, class Android.Graphics.Rect previouslyFocusedRect) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onFocusChanged", "(Landroid/view/View;Ljava/lang/CharSequence;ZILandroid/graphics/Rect;)V", "GetOnFocusChanged_Landroid_view_View_Ljava_lang_CharSequence_ZILandroid_graphics_Rect_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="sourceText" Type="Java.Lang.ICharSequence" />
        <Parameter Name="focused" Type="System.Boolean" />
        <Parameter Name="direction" Type="Android.Views.FocusSearchDirection" />
        <Parameter Name="previouslyFocusedRect" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <param name="sourceText">To be added.</param>
        <param name="focused">To be added.</param>
        <param name="direction">To be added.</param>
        <param name="previouslyFocusedRect">To be added.</param>
        <summary>This method is called when the TextView that uses this
 TransformationMethod gains or loses focus.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This method is called when the TextView that uses this
 TransformationMethod gains or loses focus.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/method/ReplacementTransformationMethod.html#onFocusChanged(android.view.View, java.lang.CharSequence, boolean, int, android.graphics.Rect)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnFocusChanged">
      <MemberSignature Language="C#" Value="public void OnFocusChanged (Android.Views.View view, string sourceText, bool focused, Android.Views.FocusSearchDirection direction, Android.Graphics.Rect previouslyFocusedRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnFocusChanged(class Android.Views.View view, string sourceText, bool focused, valuetype Android.Views.FocusSearchDirection direction, class Android.Graphics.Rect previouslyFocusedRect) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="sourceText" Type="System.String" />
        <Parameter Name="focused" Type="System.Boolean" />
        <Parameter Name="direction" Type="Android.Views.FocusSearchDirection" />
        <Parameter Name="previouslyFocusedRect" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <param name="sourceText">To be added.</param>
        <param name="focused">To be added.</param>
        <param name="direction">To be added.</param>
        <param name="previouslyFocusedRect">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>