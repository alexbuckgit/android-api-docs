<Type Name="LoudnessEnhancer" FullName="Android.Media.Audiofx.LoudnessEnhancer">
  <TypeSignature Language="C#" Value="public class LoudnessEnhancer : Android.Media.Audiofx.AudioEffect" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LoudnessEnhancer extends Android.Media.Audiofx.AudioEffect" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Media.Audiofx.AudioEffect</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/media/audiofx/LoudnessEnhancer", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>LoudnessEnhancer is an audio effect for increasing audio loudness.</summary>
    <remarks><para tool="javadoc-to-mdoc">LoudnessEnhancer is an audio effect for increasing audio loudness.
 The processing is parametrized by a target gain value, which determines the maximum amount
 by which an audio signal will be amplified; signals amplified outside of the sample
 range supported by the platform are compressed.
 An application creates a LoudnessEnhancer object to instantiate and control a
 this audio effect in the audio framework.
 To attach the LoudnessEnhancer to a particular AudioTrack or MediaPlayer,
 specify the audio session ID of this AudioTrack or MediaPlayer when constructing the effect
 (see <c><see cref="P:Android.Media.AudioTrack.AudioSessionId" /></c> and <c><see cref="P:Android.Media.MediaPlayer.AudioSessionId" /></c>).
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/media/audiofx/LoudnessEnhancer.html" target="_blank">[Android Documentation]</a></format></para></remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LoudnessEnhancer (int audioSession);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 audioSession) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="audioSession" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="audioSession">To be added.</param>
        <summary>Class constructor.</summary>
        <remarks><para tool="javadoc-to-mdoc">Class constructor.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/media/audiofx/LoudnessEnhancer.html#LoudnessEnhancer(int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <exception cref="T:Java.Lang.IllegalStateException" />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
        <exception cref="T:Java.Lang.UnsupportedOperationException" />
        <exception cref="T:Java.Lang.RuntimeException" />
        <exception cref="T:Java.Lang.IllegalStateException" />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
        <exception cref="T:Java.Lang.UnsupportedOperationException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LoudnessEnhancer (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParamTargetGainMb">
      <MemberSignature Language="C#" Value="public const Android.Media.Audiofx.LoudnessEnhancerParam ParamTargetGainMb = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.Audiofx.LoudnessEnhancerParam ParamTargetGainMb = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PARAM_TARGET_GAIN_MB")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.Audiofx.LoudnessEnhancerParam enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Audiofx.LoudnessEnhancerParam</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>The maximum gain applied applied to the signal to process.</summary>
        <remarks><para tool="javadoc-to-mdoc">The maximum gain applied applied to the signal to process.
 It is expressed in millibels (100mB = 1dB) where 0mB corresponds to no amplification.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/media/audiofx/LoudnessEnhancer.html#PARAM_TARGET_GAIN_MB" target="_blank">[Android Documentation]</a></format></para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTargetGain">
      <MemberSignature Language="C#" Value="public virtual void SetTargetGain (int gainmB);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTargetGain(int32 gainmB) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTargetGain", "(I)V", "GetSetTargetGain_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gainmB" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="gainmB">the effect target gain expressed in mB. 0mB corresponds to no amplification.</param>
        <summary>Set the target gain for the audio effect.</summary>
        <remarks><para tool="javadoc-to-mdoc">Set the target gain for the audio effect.
 The target gain is the maximum value by which a sample value will be amplified when the
 effect is enabled.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/media/audiofx/LoudnessEnhancer.html#setTargetGain(int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <exception cref="!:NoType:IllegalStateException" />
        <exception cref="!:NoType:IllegalArgumentException" />
        <exception cref="T:Java.Lang.UnsupportedOperationException" />
        <exception cref="T:Java.Lang.IllegalStateException" />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="TargetGain">
      <MemberSignature Language="C#" Value="public virtual float TargetGain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 TargetGain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTargetGain", "()F", "GetGetTargetGainHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the target gain.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Return the target gain.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/media/audiofx/LoudnessEnhancer.html#getTargetGain()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <exception cref="!:NoType:IllegalStateException" />
        <exception cref="!:NoType:IllegalArgumentException" />
        <exception cref="T:Java.Lang.UnsupportedOperationException" />
        <exception cref="T:Java.Lang.IllegalStateException" />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
