<Type Name="NoiseSuppressor" FullName="Android.Media.Audiofx.NoiseSuppressor">
  <TypeSignature Language="C#" Value="public class NoiseSuppressor : Android.Media.Audiofx.AudioEffect" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NoiseSuppressor extends Android.Media.Audiofx.AudioEffect" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Media.Audiofx.AudioEffect</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/media/audiofx/NoiseSuppressor", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="16">
    <summary>Noise Suppressor (NS).</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Noise Suppressor (NS).
 </para>
      <para tool="javadoc-to-mdoc">Noise suppression (NS) is an audio pre-processing which removes background noise from the
 captured signal. The component of the signal considered as noise can be either stationary
 (car/airplane engine, AC system) or non-stationary (other peoples conversations, car horn) for
 more advanced implementations.
 </para>
      <para tool="javadoc-to-mdoc">NS is mostly used by voice communication applications (voice chat, video conferencing,
 SIP calls).
 </para>
      <para tool="javadoc-to-mdoc">An application creates a NoiseSuppressor object to instantiate and control an NS
 engine in the audio framework.
 </para>
      <para tool="javadoc-to-mdoc">To attach the NoiseSuppressor to a particular <c><see cref="T:Android.Media.AudioRecord" /></c>,
 specify the audio session ID of this AudioRecord when creating the NoiseSuppressor.
 The audio session is retrieved by calling
 <c><see cref="P:Android.Media.AudioRecord.AudioSessionId" /></c> on the AudioRecord instance.
 </para>
      <para tool="javadoc-to-mdoc">On some devices, NS can be inserted by default in the capture path by the platform
 according to the <c><see cref="!:NoType:android/media/MediaRecorder$AudioSource;Href=../../../../reference/android/media/MediaRecorder.AudioSource.html" /></c> used. The application should
 call NoiseSuppressor.getEnable() after creating the NS to check the default NS activation
 state on a particular AudioRecord session.
 </para>
      <para tool="javadoc-to-mdoc">See <c><see cref="T:Android.Media.Audiofx.AudioEffect" /></c> class for more details on
 controlling audio effects.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/media/audiofx/NoiseSuppressor.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 16" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NoiseSuppressor (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T}(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Android.Media.Audiofx.NoiseSuppressor Create (int audioSession);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Media.Audiofx.NoiseSuppressor Create(int32 audioSession) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("create", "(I)Landroid/media/audiofx/NoiseSuppressor;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Audiofx.NoiseSuppressor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioSession" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="audioSession">system wide unique audio session identifier. The NoiseSuppressor
 will be applied to the AudioRecord with the same audio session.</param>
        <summary>Creates a NoiseSuppressor and attaches it to the AudioRecord on the audio
 session specified.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a NoiseSuppressor and attaches it to the AudioRecord on the audio
 session specified.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/audiofx/NoiseSuppressor.html#create(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="IsAvailable">
      <MemberSignature Language="C#" Value="public static bool IsAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isAvailable", "()Z", "GetIsAvailableHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Checks if the device implements noise suppression.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Checks if the device implements noise suppression.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/audiofx/NoiseSuppressor.html#isAvailable()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
