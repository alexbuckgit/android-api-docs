<Type Name="HandshakeCompletedEvent" FullName="Javax.Net.Ssl.HandshakeCompletedEvent">
  <TypeSignature Language="C#" Value="public class HandshakeCompletedEvent : Java.Util.EventObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HandshakeCompletedEvent extends Java.Util.EventObject" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Util.EventObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("javax/net/ssl/HandshakeCompletedEvent", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>The event object encapsulating the information about a completed SSL
 handshake on a SSL connection.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">The event object encapsulating the information about a completed SSL
 handshake on a SSL connection.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/javax/net/ssl/HandshakeCompletedEvent.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HandshakeCompletedEvent (Javax.Net.Ssl.SSLSocket sock, Javax.Net.Ssl.ISSLSession s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Javax.Net.Ssl.SSLSocket sock, class Javax.Net.Ssl.ISSLSession s) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljavax/net/ssl/SSLSocket;Ljavax/net/ssl/SSLSession;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="sock" Type="Javax.Net.Ssl.SSLSocket" />
        <Parameter Name="s" Type="Javax.Net.Ssl.ISSLSession" />
      </Parameters>
      <Docs>
        <param name="sock">To be added.</param>
        <param name="s">To be added.</param>
        <summary>Creates a new <c>HandshakeCompletedEvent</c> with the specified SSL
 socket and SSL session.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new <c>HandshakeCompletedEvent</c> with the specified SSL
 socket and SSL session.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/HandshakeCompletedEvent.html#HandshakeCompletedEvent(javax.net.ssl.SSLSocket, javax.net.ssl.SSLSession)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HandshakeCompletedEvent (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CipherSuite">
      <MemberSignature Language="C#" Value="public virtual string CipherSuite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CipherSuite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCipherSuite", "()Ljava/lang/String;", "GetGetCipherSuiteHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the name of the cipher suite negotiated during this handshake.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the name of the cipher suite negotiated during this handshake.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/HandshakeCompletedEvent.html#getCipherSuite()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLocalCertificates">
      <MemberSignature Language="C#" Value="public virtual Java.Security.Cert.Certificate[] GetLocalCertificates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Security.Cert.Certificate[] GetLocalCertificates() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getLocalCertificates", "()[Ljava/security/cert/Certificate;", "GetGetLocalCertificatesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Cert.Certificate[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the list of local certificates used during the handshake.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the list of local certificates used during the handshake. These
 certificates were sent to the peer.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/HandshakeCompletedEvent.html#getLocalCertificates()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetPeerCertificateChain">
      <MemberSignature Language="C#" Value="public virtual Javax.Security.Cert.X509Certificate[] GetPeerCertificateChain ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Javax.Security.Cert.X509Certificate[] GetPeerCertificateChain() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPeerCertificateChain", "()[Ljavax/security/cert/X509Certificate;", "GetGetPeerCertificateChainHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Security.Cert.X509Certificate[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the list of certificates identifying the peer.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the list of certificates identifying the peer. The peer's
 identity certificate is followed by the validated certificate authority
 certificates.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Replaced by:</b>
            </format>
            <c>
              <see cref="M:Javax.Net.Ssl.HandshakeCompletedEvent.GetPeerCertificates" />
            </c>
          </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/HandshakeCompletedEvent.html#getPeerCertificateChain()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Net.Ssl.SSLPeerUnverifiedException">if the identity of the peer has not been verified.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPeerCertificates">
      <MemberSignature Language="C#" Value="public virtual Java.Security.Cert.Certificate[] GetPeerCertificates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Security.Cert.Certificate[] GetPeerCertificates() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPeerCertificates", "()[Ljava/security/cert/Certificate;", "GetGetPeerCertificatesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Cert.Certificate[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return the list of certificates identifying the peer during the
 handshake.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the list of certificates identifying the peer during the
 handshake.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/HandshakeCompletedEvent.html#getPeerCertificates()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Net.Ssl.SSLPeerUnverifiedException">if the identity of the peer has not been verified.
</exception>
      </Docs>
    </Member>
    <Member MemberName="LocalPrincipal">
      <MemberSignature Language="C#" Value="public virtual Java.Security.IPrincipal LocalPrincipal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Security.IPrincipal LocalPrincipal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLocalPrincipal", "()Ljava/security/Principal;", "GetGetLocalPrincipalHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the <c>Principal</c> used to identify during the handshake.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the <c>Principal</c> used to identify during the handshake.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/HandshakeCompletedEvent.html#getLocalPrincipal()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PeerPrincipal">
      <MemberSignature Language="C#" Value="public virtual Java.Security.IPrincipal PeerPrincipal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Security.IPrincipal PeerPrincipal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPeerPrincipal", "()Ljava/security/Principal;", "GetGetPeerPrincipalHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the <c>Principal</c> identifying the peer.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the <c>Principal</c> identifying the peer.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/HandshakeCompletedEvent.html#getPeerPrincipal()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Net.Ssl.SSLPeerUnverifiedException">if the identity of the peer has not been verified.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public virtual Javax.Net.Ssl.ISSLSession Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Javax.Net.Ssl.ISSLSession Session" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSession", "()Ljavax/net/ssl/SSLSession;", "GetGetSessionHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.ISSLSession</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the SSL session associated with this event.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the SSL session associated with this event.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/HandshakeCompletedEvent.html#getSession()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Socket">
      <MemberSignature Language="C#" Value="public virtual Javax.Net.Ssl.SSLSocket Socket { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Javax.Net.Ssl.SSLSocket Socket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSocket", "()Ljavax/net/ssl/SSLSocket;", "GetGetSocketHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.SSLSocket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the SSL socket that produced this event.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the SSL socket that produced this event.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/HandshakeCompletedEvent.html#getSocket()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
