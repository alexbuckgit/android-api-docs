<Type Name="SSLContext" FullName="Javax.Net.Ssl.SSLContext">
  <TypeSignature Language="C#" Value="public class SSLContext : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SSLContext extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("javax/net/ssl/SSLContext", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>The public API for secure socket protocol implementations.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">The public API for secure socket protocol implementations. It acts as factory
 for <c>SSLSocketFactory</c>'s and <c>SSLEngine</c>s.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/javax/net/ssl/SSLContext.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SSLContext (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SSLContext (Javax.Net.Ssl.SSLContextSpi contextSpi, Java.Security.Provider provider, string protocol);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Javax.Net.Ssl.SSLContextSpi contextSpi, class Java.Security.Provider provider, string protocol) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljavax/net/ssl/SSLContextSpi;Ljava/security/Provider;Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="contextSpi" Type="Javax.Net.Ssl.SSLContextSpi" />
        <Parameter Name="provider" Type="Java.Security.Provider" />
        <Parameter Name="protocol" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contextSpi">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="protocol">To be added.</param>
        <summary>Creates a new <c>SSLContext</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new <c>SSLContext</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLContext.html#SSLContext(javax.net.ssl.SSLContextSpi, java.security.Provider, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ClientSessionContext">
      <MemberSignature Language="C#" Value="public Javax.Net.Ssl.ISSLSessionContext ClientSessionContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Javax.Net.Ssl.ISSLSessionContext ClientSessionContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getClientSessionContext", "()Ljavax/net/ssl/SSLSessionContext;", "GetGetClientSessionContextHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.ISSLSessionContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the SSL session context that encapsulates the set of SSL sessions
 that can be used for handshake of client-side SSL sockets.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the SSL session context that encapsulates the set of SSL sessions
 that can be used for handshake of client-side SSL sockets.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLContext.html#getClientSessionContext()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CreateSSLEngine">
      <MemberSignature Language="C#" Value="public Javax.Net.Ssl.SSLEngine CreateSSLEngine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Javax.Net.Ssl.SSLEngine CreateSSLEngine() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createSSLEngine", "()Ljavax/net/ssl/SSLEngine;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.SSLEngine</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">Creates an <c>SSLEngine</c> instance from this context.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates an <c>SSLEngine</c> instance from this context.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLContext.html#createSSLEngine()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.UnsupportedOperationException">if the provider does not support the operation.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSSLEngine">
      <MemberSignature Language="C#" Value="public Javax.Net.Ssl.SSLEngine CreateSSLEngine (string peerHost, int peerPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Javax.Net.Ssl.SSLEngine CreateSSLEngine(string peerHost, int32 peerPort) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createSSLEngine", "(Ljava/lang/String;I)Ljavax/net/ssl/SSLEngine;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.SSLEngine</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerHost" Type="System.String" />
        <Parameter Name="peerPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peerHost">the name of the host</param>
        <param name="peerPort">the port</param>
        <summary>Creates an <c>SSLEngine</c> instance from this context with the
 specified hostname and port.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates an <c>SSLEngine</c> instance from this context with the
 specified hostname and port.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLContext.html#createSSLEngine(java.lang.String, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.UnsupportedOperationException">if the provider does not support the operation.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static Javax.Net.Ssl.SSLContext Default { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Javax.Net.Ssl.SSLContext Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDefault", "()Ljavax/net/ssl/SSLContext;", "GetGetDefaultHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setDefault", "(Ljavax/net/ssl/SSLContext;)V", "GetSetDefault_Ljavax_net_ssl_SSLContext_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.SSLContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the default SSLContext.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b> <a href="http://developer.android.com/reference/javax/net/ssl/SSLContext.html#getDefault()" target="_blank">[Android Documentation]</a><br /></format>Returns the default SSLContext.

 The default SSL context can be set with <c><see cref="P:Javax.Net.Ssl.SSLContext.Default" /></c>. If
 not, one will be created with <c>SSLContext.getInstance("Default")</c>, which will already be
 initialized.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b> <a href="http://developer.android.com/reference/javax/net/ssl/SSLContext.html#setDefault(javax.net.ssl.SSLContext)" target="_blank">[Android Documentation]</a><br /></format>Sets the default SSLContext instance as returned by <c><see cref="P:Javax.Net.Ssl.SSLContext.Default" /></c> to a non-null initialized value.</para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if there is a problem creating
 the default instance.</exception>
        <exception cref="T:Java.Lang.NullPointerException">on a null argument</exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultSSLParameters">
      <MemberSignature Language="C#" Value="public Javax.Net.Ssl.SSLParameters DefaultSSLParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Javax.Net.Ssl.SSLParameters DefaultSSLParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDefaultSSLParameters", "()Ljavax/net/ssl/SSLParameters;", "GetGetDefaultSSLParametersHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.SSLParameters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the default SSL handshake parameters for SSLSockets
 created by this SSLContext.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the default SSL handshake parameters for SSLSockets
 created by this SSLContext.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLContext.html#getDefaultSSLParameters()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="!:NoType:UnsupportedOperationException" />
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Javax.Net.Ssl.SSLContext GetInstance (string protocol);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Net.Ssl.SSLContext GetInstance(string protocol) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInstance", "(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.SSLContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protocol" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="protocol">the requested protocol to create a context for.</param>
        <summary tool="true">Creates a new <c>SSLContext</c> instance for the specified protocol.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new <c>SSLContext</c> instance for the specified protocol.

 </para>
          <para tool="javadoc-to-mdoc">The following protocols are supported:
 <format type="text/html"><table><thead><tr><th>Protocol</th><th>API Levels</th></tr></thead><tbody><tr><td>Default</td><td>9+</td></tr><tr><td>SSL</td><td>9+</td></tr><tr><td>SSLv3</td><td>9+</td></tr><tr><td>TLS</td><td>1+</td></tr><tr><td>TLSv1</td><td>1+</td></tr><tr><td>TLSv1.1</td><td>16+</td></tr><tr><td>TLSv1.2</td><td>16+</td></tr></tbody></table></format></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLContext.html#getInstance(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if no installed provider can provide the requested protocol</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>protocol</c> is <c>null</c> (instead of
             NoSuchAlgorithmException as in 1.4 release)
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Javax.Net.Ssl.SSLContext GetInstance (string protocol, Java.Security.Provider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Net.Ssl.SSLContext GetInstance(string protocol, class Java.Security.Provider provider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/security/Provider;)Ljavax/net/ssl/SSLContext;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.SSLContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protocol" Type="System.String" />
        <Parameter Name="provider" Type="Java.Security.Provider" />
      </Parameters>
      <Docs>
        <param name="protocol">the requested protocol to create a context for</param>
        <param name="provider">the provider that provides the requested protocol.</param>
        <summary>Creates a new <c>SSLContext</c> instance for the specified protocol from
 the specified provider.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new <c>SSLContext</c> instance for the specified protocol from
 the specified provider.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLContext.html#getInstance(java.lang.String, java.security.Provider)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if the specified provider cannot provide the requested
             protocol.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>protocol</c> is <c>null</c> (instead of
             NoSuchAlgorithmException as in 1.4 release)
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Javax.Net.Ssl.SSLContext GetInstance (string protocol, string provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Net.Ssl.SSLContext GetInstance(string protocol, string provider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/lang/String;)Ljavax/net/ssl/SSLContext;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.SSLContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protocol" Type="System.String" />
        <Parameter Name="provider" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="protocol">the requested protocol to create a context for.</param>
        <param name="provider">the name of the provider that provides the requested protocol.</param>
        <summary>Creates a new <c>SSLContext</c> instance for the specified protocol from
 the specified provider.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new <c>SSLContext</c> instance for the specified protocol from
 the specified provider.

 </para>
          <para tool="javadoc-to-mdoc">The following combinations are supported:
 <format type="text/html"><table><thead><tr><th>Protocol</th><th>Provider</th><th>API Levels</th></tr></thead><tbody><tr><td>Default</td><td>AndroidOpenSSL</td><td>9+</td></tr><tr><td>SSL</td><td>AndroidOpenSSL</td><td>9+</td></tr><tr><td>SSL</td><td>HarmonyJSSE</td><td>9-19</td></tr><tr><td>SSLv3</td><td>AndroidOpenSSL</td><td>9+</td></tr><tr><td>SSLv3</td><td>HarmonyJSSE</td><td>9-19</td></tr><tr><td>TLS</td><td>AndroidOpenSSL</td><td>9+</td></tr><tr><td>TLS</td><td>HarmonyJSSE</td><td>1-19</td></tr><tr><td>TLSv1</td><td>AndroidOpenSSL</td><td>9+</td></tr><tr><td>TLSv1</td><td>HarmonyJSSE</td><td>1-19</td></tr><tr><td>TLSv1.1</td><td>AndroidOpenSSL</td><td>16+</td></tr><tr><td>TLSv1.2</td><td>AndroidOpenSSL</td><td>16+</td></tr></tbody></table></format></para>
          <para tool="javadoc-to-mdoc">
            <i>NOTE:</i> The best practice is to rely on platform
 defaults rather than explicitly specify a provider.
 <c><see cref="P:Javax.Net.Ssl.SSLContext.Default" /></c> and <c><see cref="M:Javax.Net.Ssl.SSLContext.GetInstance(System.String)" /></c> are normally
 preferred over this method.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLContext.html#getInstance(java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if the specified provider cannot provider the requested
             protocol.</exception>
        <exception cref="T:Java.Security.NoSuchProviderException">if the specified provider does not exits.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>protocol</c> is <c>null</c> (instead of
             NoSuchAlgorithmException as in 1.4 release)
</exception>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (Javax.Net.Ssl.IKeyManager[] km, Javax.Net.Ssl.ITrustManager[] tm, Java.Security.SecureRandom sr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Init(class Javax.Net.Ssl.IKeyManager[] km, class Javax.Net.Ssl.ITrustManager[] tm, class Java.Security.SecureRandom sr) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("init", "([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="km" Type="Javax.Net.Ssl.IKeyManager[]" />
        <Parameter Name="tm" Type="Javax.Net.Ssl.ITrustManager[]" />
        <Parameter Name="sr" Type="Java.Security.SecureRandom" />
      </Parameters>
      <Docs>
        <param name="km">the key sources or <c>null</c> for default.</param>
        <param name="tm">the trust decision sources or <c>null</c> for default.</param>
        <param name="sr">the randomness source or <c>null</c> for default.</param>
        <summary>Initializes this <c>SSLContext</c> instance.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Initializes this <c>SSLContext</c> instance. Three aspects of the context can be configured
 during initialization:
 <list type="bullet"><item><term>Providers of key material for key exchange and peer authentication
       (<c><see cref="T:Javax.Net.Ssl.IKeyManager" /></c> instances),</term></item><item><term>Providers of trust decisions about peers (<c><see cref="T:Javax.Net.Ssl.ITrustManager" /></c> instances),
   </term></item><item><term>Provider of randomness (<c><see cref="T:Java.Security.SecureRandom" /></c> instance).</term></item></list></para>
          <para tool="javadoc-to-mdoc">For each type of <c>KeyManager</c> or <c>TrustManager</c> used by this context, only the
 first matching instance from <c>km</c> or <c>tm</c> will be used. For example, only the
 first instance of <c><see cref="T:Javax.Net.Ssl.IX509TrustManager" /></c> from <c>tm</c> will be used.

 </para>
          <para tool="javadoc-to-mdoc">For any parameter set to <c>null</c> defaults will be used. In that case, the installed
 security providers will be searched for the highest priority implementation of the required
 primitives. For <c>km</c> and <c>tm</c>, the highest priority implementation
 of <c><see cref="T:Javax.Net.Ssl.KeyManagerFactory" /></c> and <c><see cref="T:Javax.Net.Ssl.TrustManagerFactory" /></c> will be used to obtain the
 required types of <c>KeyManager</c> and <c>TrustManager</c>. For <c>sr</c>, the default
 <c>SecureRandom</c> implementation will be used.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLContext.html#init(javax.net.ssl.KeyManager[], javax.net.ssl.TrustManager[], java.security.SecureRandom)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.KeyManagementException">if initializing this instance fails.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Protocol">
      <MemberSignature Language="C#" Value="public string Protocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Protocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getProtocol", "()Ljava/lang/String;", "GetGetProtocolHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the name of the secure socket protocol of this instance.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the name of the secure socket protocol of this instance.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLContext.html#getProtocol()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public Java.Security.Provider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Security.Provider Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getProvider", "()Ljava/security/Provider;", "GetGetProviderHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Provider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the provider of this <c>SSLContext</c> instance.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the provider of this <c>SSLContext</c> instance.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLContext.html#getProvider()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ServerSessionContext">
      <MemberSignature Language="C#" Value="public Javax.Net.Ssl.ISSLSessionContext ServerSessionContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Javax.Net.Ssl.ISSLSessionContext ServerSessionContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getServerSessionContext", "()Ljavax/net/ssl/SSLSessionContext;", "GetGetServerSessionContextHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.ISSLSessionContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the SSL session context that encapsulates the set of SSL sessions
 that can be used for handshake of server-side SSL sockets.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the SSL session context that encapsulates the set of SSL sessions
 that can be used for handshake of server-side SSL sockets.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLContext.html#getServerSessionContext()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ServerSocketFactory">
      <MemberSignature Language="C#" Value="public Javax.Net.Ssl.SSLServerSocketFactory ServerSocketFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Javax.Net.Ssl.SSLServerSocketFactory ServerSocketFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getServerSocketFactory", "()Ljavax/net/ssl/SSLServerSocketFactory;", "GetGetServerSocketFactoryHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.SSLServerSocketFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a server socket factory for this instance.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a server socket factory for this instance.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLContext.html#getServerSocketFactory()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SocketFactory">
      <MemberSignature Language="C#" Value="public Javax.Net.Ssl.SSLSocketFactory SocketFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Javax.Net.Ssl.SSLSocketFactory SocketFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSocketFactory", "()Ljavax/net/ssl/SSLSocketFactory;", "GetGetSocketFactoryHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.SSLSocketFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a socket factory for this instance.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a socket factory for this instance.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLContext.html#getSocketFactory()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SupportedSSLParameters">
      <MemberSignature Language="C#" Value="public Javax.Net.Ssl.SSLParameters SupportedSSLParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Javax.Net.Ssl.SSLParameters SupportedSSLParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSupportedSSLParameters", "()Ljavax/net/ssl/SSLParameters;", "GetGetSupportedSSLParametersHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.SSLParameters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns SSL handshake parameters for SSLSockets that includes
 all supported cipher suites and protocols.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns SSL handshake parameters for SSLSockets that includes
 all supported cipher suites and protocols.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLContext.html#getSupportedSSLParameters()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="!:NoType:UnsupportedOperationException" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
