<Type Name="SSLEngine" FullName="Javax.Net.Ssl.SSLEngine">
  <TypeSignature Language="C#" Value="public abstract class SSLEngine : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SSLEngine extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("javax/net/ssl/SSLEngine", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>The abstract implementation of secure communications using SSL, TLS, or other
 protocols.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">The abstract implementation of secure communications using SSL, TLS, or other
 protocols. It includes the setup, handshake, and encrypt/decrypt
 functionality needed to create a secure connection.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/javax/net/ssl/SSLEngine.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SSLEngine ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Creates a new <c>SSLEngine</c> instance.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new <c>SSLEngine</c> instance.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLEngine.html#SSLEngine()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SSLEngine (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SSLEngine (string host, int port);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string host, int32 port) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">To be added.</param>
        <param name="port">To be added.</param>
        <summary>Creates a new <c>SSLEngine</c> instance with the specified host and
 port.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new <c>SSLEngine</c> instance with the specified host and
 port.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLEngine.html#SSLEngine(java.lang.String, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BeginHandshake">
      <MemberSignature Language="C#" Value="public abstract void BeginHandshake ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginHandshake() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("beginHandshake", "()V", "GetBeginHandshakeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initiates a handshake on this engine.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Initiates a handshake on this engine.
 </para>
          <para tool="javadoc-to-mdoc">
 Calling this method is not needed for the initial handshake: it will be
 called by <c>wrap</c> or <c>unwrap</c> if the initial handshake has not
 been started yet.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLEngine.html#beginHandshake()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Net.Ssl.SSLException">if starting the handshake fails.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if the engine does not have all the needed settings (e.g.
             client/server mode not set).
</exception>
      </Docs>
    </Member>
    <Member MemberName="CloseInbound">
      <MemberSignature Language="C#" Value="public abstract void CloseInbound ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseInbound() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("closeInbound", "()V", "GetCloseInboundHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Notifies this engine instance that no more inbound network data will be
 sent to this engine.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Notifies this engine instance that no more inbound network data will be
 sent to this engine.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLEngine.html#closeInbound()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Net.Ssl.SSLException">if this engine did not receive a needed protocol specific
             close notification message from the peer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CloseOutbound">
      <MemberSignature Language="C#" Value="public abstract void CloseOutbound ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseOutbound() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("closeOutbound", "()V", "GetCloseOutboundHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Notifies this engine instance that no more outbound application data will
 be sent to this engine.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Notifies this engine instance that no more outbound application data will
 be sent to this engine.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLEngine.html#closeOutbound()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DelegatedTask">
      <MemberSignature Language="C#" Value="public abstract Java.Lang.IRunnable DelegatedTask { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.IRunnable DelegatedTask" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDelegatedTask", "()Ljava/lang/Runnable;", "GetGetDelegatedTaskHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.IRunnable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a delegate task for this engine instance.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a delegate task for this engine instance. Some engine operations
 may require the results of blocking or long running operations, and the
 <c>SSLEngineResult</c> instances returned by this engine may indicate
 that a delegated task result is needed. In this case the
 <c><see cref="M:Java.Lang.IRunnable.Run" /></c> method of the returned <c>Runnable</c>
 delegated task must be called.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLEngine.html#getDelegatedTask()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EnableSessionCreation">
      <MemberSignature Language="C#" Value="public abstract bool EnableSessionCreation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSessionCreation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getEnableSessionCreation", "()Z", "GetGetEnableSessionCreationHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setEnableSessionCreation", "(Z)V", "GetSetEnableSessionCreation_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether new SSL sessions may be established by this engine.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLEngine.html#getEnableSessionCreation()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns whether new SSL sessions may be established by this engine.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLEngine.html#setEnableSessionCreation(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets whether new SSL sessions may be established by this engine instance.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetEnabledCipherSuites">
      <MemberSignature Language="C#" Value="public abstract string[] GetEnabledCipherSuites ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetEnabledCipherSuites() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getEnabledCipherSuites", "()[Ljava/lang/String;", "GetGetEnabledCipherSuitesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the SSL cipher suite names that are enabled in this engine
 instance.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the SSL cipher suite names that are enabled in this engine
 instance.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLEngine.html#getEnabledCipherSuites()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetEnabledProtocols">
      <MemberSignature Language="C#" Value="public abstract string[] GetEnabledProtocols ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetEnabledProtocols() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getEnabledProtocols", "()[Ljava/lang/String;", "GetGetEnabledProtocolsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the protocol version names that are enabled in this engine
 instance.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the protocol version names that are enabled in this engine
 instance.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLEngine.html#getEnabledProtocols()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetSupportedCipherSuites">
      <MemberSignature Language="C#" Value="public abstract string[] GetSupportedCipherSuites ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetSupportedCipherSuites() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getSupportedCipherSuites", "()[Ljava/lang/String;", "GetGetSupportedCipherSuitesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the SSL cipher suite names that are supported by this engine.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the SSL cipher suite names that are supported by this engine.
 These cipher suites can be enabled using
 <c><see cref="M:Javax.Net.Ssl.SSLEngine.SetEnabledCipherSuites(System.String[])" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLEngine.html#getSupportedCipherSuites()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetSupportedProtocols">
      <MemberSignature Language="C#" Value="public abstract string[] GetSupportedProtocols ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetSupportedProtocols() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getSupportedProtocols", "()[Ljava/lang/String;", "GetGetSupportedProtocolsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the protocol names that are supported by this engine.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the protocol names that are supported by this engine. These
 protocols can be enables using <c><see cref="M:Javax.Net.Ssl.SSLEngine.SetEnabledProtocols(System.String[])" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLEngine.html#getSupportedProtocols()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HandshakeSession">
      <MemberSignature Language="C#" Value="public virtual Javax.Net.Ssl.ISSLSession HandshakeSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Javax.Net.Ssl.ISSLSession HandshakeSession" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getHandshakeSession", "()Ljavax/net/ssl/SSLSession;", "GetGetHandshakeSessionHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.ISSLSession</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandshakeStatus">
      <MemberSignature Language="C#" Value="public abstract Javax.Net.Ssl.SSLEngineResult.HandshakeStatus HandshakeStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Javax.Net.Ssl.SSLEngineResult/HandshakeStatus HandshakeStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getHandshakeStatus", "()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;", "GetGetHandshakeStatusHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.SSLEngineResult+HandshakeStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the status of the handshake of this engine instance.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the status of the handshake of this engine instance.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLEngine.html#getHandshakeStatus()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsInboundDone">
      <MemberSignature Language="C#" Value="public abstract bool IsInboundDone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInboundDone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isInboundDone", "()Z", "GetIsInboundDoneHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether no more inbound data will be accepted by this engine.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns whether no more inbound data will be accepted by this engine.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLEngine.html#isInboundDone()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsOutboundDone">
      <MemberSignature Language="C#" Value="public abstract bool IsOutboundDone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOutboundDone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isOutboundDone", "()Z", "GetIsOutboundDoneHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether no more outbound data will be produced by this engine.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns whether no more outbound data will be produced by this engine.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLEngine.html#isOutboundDone()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NeedClientAuth">
      <MemberSignature Language="C#" Value="public abstract bool NeedClientAuth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NeedClientAuth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getNeedClientAuth", "()Z", "GetGetNeedClientAuthHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setNeedClientAuth", "(Z)V", "GetSetNeedClientAuth_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether this engine instance will require client authentication.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLEngine.html#getNeedClientAuth()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns whether this engine instance will require client authentication.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLEngine.html#setNeedClientAuth(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets whether this engine must require client authentication. The client
 authentication is one of:
 <list type="bullet"><item><term>authentication required</term></item><item><term>authentication requested</term></item><item><term>no authentication needed</term></item></list>
 This method overrides the setting of <c><see cref="P:Javax.Net.Ssl.SSLEngine.WantClientAuth" /></c>.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PeerHost">
      <MemberSignature Language="C#" Value="public virtual string PeerHost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PeerHost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPeerHost", "()Ljava/lang/String;", "GetGetPeerHostHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the name of the peer host.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the name of the peer host.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLEngine.html#getPeerHost()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PeerPort">
      <MemberSignature Language="C#" Value="public virtual int PeerPort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PeerPort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPeerPort", "()I", "GetGetPeerPortHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the port number of the peer host.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the port number of the peer host.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLEngine.html#getPeerPort()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public abstract Javax.Net.Ssl.ISSLSession Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Javax.Net.Ssl.ISSLSession Session" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSession", "()Ljavax/net/ssl/SSLSession;", "GetGetSessionHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.ISSLSession</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the SSL session for this engine instance.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the SSL session for this engine instance.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLEngine.html#getSession()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetEnabledCipherSuites">
      <MemberSignature Language="C#" Value="public abstract void SetEnabledCipherSuites (string[] suites);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEnabledCipherSuites(string[] suites) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setEnabledCipherSuites", "([Ljava/lang/String;)V", "GetSetEnabledCipherSuites_arrayLjava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="suites" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="suites">the SSL cipher suite names to be enabled.</param>
        <summary>Sets the SSL cipher suite names that should be enabled in this engine
 instance.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the SSL cipher suite names that should be enabled in this engine
 instance. Only cipher suites listed by <c>getSupportedCipherSuites()</c>
 are allowed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLEngine.html#setEnabledCipherSuites(java.lang.String[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if one of the specified cipher suites is not supported, or if
             <c>suites</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetEnabledProtocols">
      <MemberSignature Language="C#" Value="public abstract void SetEnabledProtocols (string[] protocols);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEnabledProtocols(string[] protocols) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setEnabledProtocols", "([Ljava/lang/String;)V", "GetSetEnabledProtocols_arrayLjava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protocols" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="protocols">the protocol version names to be enabled.</param>
        <summary>Sets the protocol version names that should be enabled in this engine
 instance.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the protocol version names that should be enabled in this engine
 instance. Only protocols listed by <c>getSupportedProtocols()</c> are
 allowed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLEngine.html#setEnabledProtocols(java.lang.String[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if one of the protocol version names is not supported, or if
             <c>protocols</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SSLParameters">
      <MemberSignature Language="C#" Value="public virtual Javax.Net.Ssl.SSLParameters SSLParameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Javax.Net.Ssl.SSLParameters SSLParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSSLParameters", "()Ljavax/net/ssl/SSLParameters;", "GetGetSSLParametersHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSSLParameters", "(Ljavax/net/ssl/SSLParameters;)V", "GetSetSSLParameters_Ljavax_net_ssl_SSLParameters_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.SSLParameters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a new SSLParameters based on this SSLSocket's current
 cipher suites, protocols, and client authentication settings.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLEngine.html#getSSLParameters()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns a new SSLParameters based on this SSLSocket's current
 cipher suites, protocols, and client authentication settings.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLEngine.html#setSSLParameters(javax.net.ssl.SSLParameters)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets various SSL handshake parameters based on the SSLParameter
 argument. Specifically, sets the SSLEngine's enabled cipher
 suites if the parameter's cipher suites are non-null. Similarly
 sets the enabled protocols. If the parameters specify the want
 or need for client authentication, those requirements are set
 on the SSLEngine, otherwise both are set to false.</para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unwrap">
      <MemberSignature Language="C#" Value="public virtual Javax.Net.Ssl.SSLEngineResult Unwrap (Java.Nio.ByteBuffer src, Java.Nio.ByteBuffer dst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Javax.Net.Ssl.SSLEngineResult Unwrap(class Java.Nio.ByteBuffer src, class Java.Nio.ByteBuffer dst) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unwrap", "(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;", "GetUnwrap_Ljava_nio_ByteBuffer_Ljava_nio_ByteBuffer_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.SSLEngineResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="dst" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="src">the buffer with incoming network data</param>
        <param name="dst">the destination buffer for incoming application data.</param>
        <summary>Decodes the incoming network data buffer into the application data
 buffer.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Decodes the incoming network data buffer into the application data
 buffer. If a handshake has not been started yet, it will automatically be
 started.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLEngine.html#unwrap(java.nio.ByteBuffer, java.nio.ByteBuffer)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Net.Ssl.SSLException">if a problem occurred while processing the data.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if one of the destination buffers is read-only.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>src</c> or <c>dst</c> is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if the engine does not have all the needed settings (e.g.
             client/server mode not set).
</exception>
      </Docs>
    </Member>
    <Member MemberName="Unwrap">
      <MemberSignature Language="C#" Value="public virtual Javax.Net.Ssl.SSLEngineResult Unwrap (Java.Nio.ByteBuffer src, Java.Nio.ByteBuffer[] dsts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Javax.Net.Ssl.SSLEngineResult Unwrap(class Java.Nio.ByteBuffer src, class Java.Nio.ByteBuffer[] dsts) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unwrap", "(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;", "GetUnwrap_Ljava_nio_ByteBuffer_arrayLjava_nio_ByteBuffer_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.SSLEngineResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="dsts" Type="Java.Nio.ByteBuffer[]" />
      </Parameters>
      <Docs>
        <param name="src">the buffer with incoming network data</param>
        <param name="dsts">the array of destination buffers for incoming application
            data.</param>
        <summary>Decodes the incoming network data buffer into the application data
 buffers.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Decodes the incoming network data buffer into the application data
 buffers. If a handshake has not been started yet, it will automatically
 be started.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLEngine.html#unwrap(java.nio.ByteBuffer, java.nio.ByteBuffer[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Net.Ssl.SSLException">if a problem occurred while processing the data.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if one of the destination buffers is read-only.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>src</c> or <c>dsts</c> is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if the engine does not have all the needed settings (e.g.
             client/server mode not set).
</exception>
      </Docs>
    </Member>
    <Member MemberName="Unwrap">
      <MemberSignature Language="C#" Value="public abstract Javax.Net.Ssl.SSLEngineResult Unwrap (Java.Nio.ByteBuffer src, Java.Nio.ByteBuffer[] dsts, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Javax.Net.Ssl.SSLEngineResult Unwrap(class Java.Nio.ByteBuffer src, class Java.Nio.ByteBuffer[] dsts, int32 offset, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unwrap", "(Ljava/nio/ByteBuffer;[Ljava/nio/ByteBuffer;II)Ljavax/net/ssl/SSLEngineResult;", "GetUnwrap_Ljava_nio_ByteBuffer_arrayLjava_nio_ByteBuffer_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.SSLEngineResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="dsts" Type="Java.Nio.ByteBuffer[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="src">the buffer with incoming network data</param>
        <param name="dsts">the array of destination buffers for incoming application
            data.</param>
        <param name="offset">the offset in the array of destination buffers to which data
            is to be transferred.</param>
        <param name="length">the maximum number of destination buffers to be used.</param>
        <summary>Decodes the incoming network data buffer into application data buffers.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Decodes the incoming network data buffer into application data buffers.
 If a handshake has not been started yet, it will automatically be
 started.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLEngine.html#unwrap(java.nio.ByteBuffer, java.nio.ByteBuffer[], int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Net.Ssl.SSLException">if a problem occurred while processing the data.</exception>
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>length</c> is greater than
             <c>dsts.length - offset</c>.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if one of the destination buffers is read-only.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>src</c>, <c>dsts</c>, or one of the entries in
             <c>dsts</c> is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if the engine does not have all the needed settings (e.g.
             client/server mode not set).
</exception>
      </Docs>
    </Member>
    <Member MemberName="UseClientMode">
      <MemberSignature Language="C#" Value="public abstract bool UseClientMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseClientMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getUseClientMode", "()Z", "GetGetUseClientModeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setUseClientMode", "(Z)V", "GetSetUseClientMode_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether this engine is set to act in client mode when
 handshaking.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLEngine.html#getUseClientMode()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns whether this engine is set to act in client mode when
 handshaking.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLEngine.html#setUseClientMode(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets whether this engine should act in client (or server) mode when
 handshaking.</para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if this method is called after starting the initial
             handshake.
</exception>
      </Docs>
    </Member>
    <Member MemberName="WantClientAuth">
      <MemberSignature Language="C#" Value="public abstract bool WantClientAuth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WantClientAuth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getWantClientAuth", "()Z", "GetGetWantClientAuthHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setWantClientAuth", "(Z)V", "GetSetWantClientAuth_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether this engine will request client authentication.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLEngine.html#getWantClientAuth()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns whether this engine will request client authentication.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLEngine.html#setWantClientAuth(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets whether this engine should request client authentication. The client
 authentication is one of the following:
 <list type="bullet"><item><term>authentication required</term></item><item><term>authentication requested</term></item><item><term>no authentication needed</term></item></list>
 This method overrides the setting of <c><see cref="P:Javax.Net.Ssl.SSLEngine.NeedClientAuth" /></c>.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Wrap">
      <MemberSignature Language="C#" Value="public virtual Javax.Net.Ssl.SSLEngineResult Wrap (Java.Nio.ByteBuffer src, Java.Nio.ByteBuffer dst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Javax.Net.Ssl.SSLEngineResult Wrap(class Java.Nio.ByteBuffer src, class Java.Nio.ByteBuffer dst) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("wrap", "(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;", "GetWrap_Ljava_nio_ByteBuffer_Ljava_nio_ByteBuffer_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.SSLEngineResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="dst" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="src">the source buffers of outgoing application data.</param>
        <param name="dst">the destination buffer for network data.</param>
        <summary>Encodes the outgoing application data buffer into the network data
 buffer.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Encodes the outgoing application data buffer into the network data
 buffer. If a handshake has not been started yet, it will automatically be
 started.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLEngine.html#wrap(java.nio.ByteBuffer, java.nio.ByteBuffer)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Net.Ssl.SSLException">if a problem occurred while processing the data.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if the destination buffer is readonly.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>src</c> or <c>dst</c> is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if the engine does not have all the needed settings (e.g.
             client/server mode not set).
</exception>
      </Docs>
    </Member>
    <Member MemberName="Wrap">
      <MemberSignature Language="C#" Value="public virtual Javax.Net.Ssl.SSLEngineResult Wrap (Java.Nio.ByteBuffer[] srcs, Java.Nio.ByteBuffer dst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Javax.Net.Ssl.SSLEngineResult Wrap(class Java.Nio.ByteBuffer[] srcs, class Java.Nio.ByteBuffer dst) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("wrap", "([Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;", "GetWrap_arrayLjava_nio_ByteBuffer_Ljava_nio_ByteBuffer_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.SSLEngineResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="srcs" Type="Java.Nio.ByteBuffer[]" />
        <Parameter Name="dst" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="srcs">the array of source buffers of outgoing application data.</param>
        <param name="dst">the destination buffer for network data.</param>
        <summary>Encodes the outgoing application data buffers into the network data
 buffer.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Encodes the outgoing application data buffers into the network data
 buffer. If a handshake has not been started yet, it will automatically be
 started.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLEngine.html#wrap(java.nio.ByteBuffer[], java.nio.ByteBuffer)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Net.Ssl.SSLException">if a problem occurred while processing the data.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if the destination buffer is readonly.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>srcs</c> or <c>dst</c> is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if the engine does not have all the needed settings (e.g.
             client/server mode not set).
</exception>
      </Docs>
    </Member>
    <Member MemberName="Wrap">
      <MemberSignature Language="C#" Value="public abstract Javax.Net.Ssl.SSLEngineResult Wrap (Java.Nio.ByteBuffer[] srcs, int offset, int length, Java.Nio.ByteBuffer dst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Javax.Net.Ssl.SSLEngineResult Wrap(class Java.Nio.ByteBuffer[] srcs, int32 offset, int32 length, class Java.Nio.ByteBuffer dst) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("wrap", "([Ljava/nio/ByteBuffer;IILjava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;", "GetWrap_arrayLjava_nio_ByteBuffer_IILjava_nio_ByteBuffer_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.SSLEngineResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="srcs" Type="Java.Nio.ByteBuffer[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="dst" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="srcs">the array of source buffers of outgoing application data.</param>
        <param name="offset">the offset in the array of source buffers from which data is
            to be retrieved.</param>
        <param name="length">the maximum number of source buffers to be used.</param>
        <param name="dst">the destination buffer for network data.</param>
        <summary>Encodes the outgoing application data buffers into the network data
 buffer.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Encodes the outgoing application data buffers into the network data
 buffer. If a handshake has not been started yet, it will automatically be
 started.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/net/ssl/SSLEngine.html#wrap(java.nio.ByteBuffer[], int, int, java.nio.ByteBuffer)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Net.Ssl.SSLException">if a problem occurred while processing the data.</exception>
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>length</c> is greater than
             <c>srcs.length - offset</c>.</exception>
        <exception cref="T:Java.Nio.ReadOnlyBufferException">if the destination buffer is readonly.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>srcs</c>, <c>dst</c>, or one the entries in
             <c>srcs</c> is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if the engine does not have all the needed settings (e.g.
             client/server mode not set).
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
