<Type Name="HttpsURLConnection" FullName="Javax.Net.Ssl.HttpsURLConnection">
  <TypeSignature Language="C#" Value="public abstract class HttpsURLConnection : Java.Net.HttpURLConnection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpsURLConnection extends Java.Net.HttpURLConnection" />
  <TypeSignature Language="DocId" Value="T:Javax.Net.Ssl.HttpsURLConnection" />
  <TypeSignature Language="F#" Value="type HttpsURLConnection = class&#xA;    inherit HttpURLConnection" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Net.HttpURLConnection</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("javax/net/ssl/HttpsURLConnection", ApiSince=1, DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>An <c><see cref="T:Java.Net.HttpURLConnection" /></c> for HTTPS ().</summary>
    <remarks />
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpsURLConnection (Java.Net.URL url);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Java.Net.URL url) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.HttpsURLConnection.#ctor(Java.Net.URL)" />
      <MemberSignature Language="F#" Value="new Javax.Net.Ssl.HttpsURLConnection : Java.Net.URL -&gt; Javax.Net.Ssl.HttpsURLConnection" Usage="new Javax.Net.Ssl.HttpsURLConnection url" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/net/URL;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="url" Type="Java.Net.URL" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <summary>Creates a new <c>HttpsURLConnection</c> with the specified <c>URL</c>.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpsURLConnection (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.HttpsURLConnection.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Javax.Net.Ssl.HttpsURLConnection : nativeint * Android.Runtime.JniHandleOwnership -&gt; Javax.Net.Ssl.HttpsURLConnection" Usage="new Javax.Net.Ssl.HttpsURLConnection (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CipherSuite">
      <MemberSignature Language="C#" Value="public abstract string CipherSuite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CipherSuite" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.Ssl.HttpsURLConnection.CipherSuite" />
      <MemberSignature Language="F#" Value="member this.CipherSuite : string" Usage="Javax.Net.Ssl.HttpsURLConnection.CipherSuite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCipherSuite", "()Ljava/lang/String;", "GetGetCipherSuiteHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the name of the cipher suite negotiated during the SSL handshake.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if no connection has been established yet.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultHostnameVerifier">
      <MemberSignature Language="C#" Value="public static Javax.Net.Ssl.IHostnameVerifier DefaultHostnameVerifier { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Javax.Net.Ssl.IHostnameVerifier DefaultHostnameVerifier" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.Ssl.HttpsURLConnection.DefaultHostnameVerifier" />
      <MemberSignature Language="F#" Value="member this.DefaultHostnameVerifier : Javax.Net.Ssl.IHostnameVerifier with get, set" Usage="Javax.Net.Ssl.HttpsURLConnection.DefaultHostnameVerifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDefaultHostnameVerifier", "()Ljavax/net/ssl/HostnameVerifier;", "GetGetDefaultHostnameVerifierHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setDefaultHostnameVerifier", "(Ljavax/net/ssl/HostnameVerifier;)V", "GetSetDefaultHostnameVerifier_Ljavax_net_ssl_HostnameVerifier_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.IHostnameVerifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the default hostname verifier.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the specified verifier is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the specified verifier is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the specified verifier is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the specified verifier is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the specified verifier is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the specified verifier is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultSSLSocketFactory">
      <MemberSignature Language="C#" Value="public static Javax.Net.Ssl.SSLSocketFactory DefaultSSLSocketFactory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Javax.Net.Ssl.SSLSocketFactory DefaultSSLSocketFactory" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.Ssl.HttpsURLConnection.DefaultSSLSocketFactory" />
      <MemberSignature Language="F#" Value="member this.DefaultSSLSocketFactory : Javax.Net.Ssl.SSLSocketFactory with get, set" Usage="Javax.Net.Ssl.HttpsURLConnection.DefaultSSLSocketFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDefaultSSLSocketFactory", "()Ljavax/net/ssl/SSLSocketFactory;", "GetGetDefaultSSLSocketFactoryHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setDefaultSSLSocketFactory", "(Ljavax/net/ssl/SSLSocketFactory;)V", "GetSetDefaultSSLSocketFactory_Ljavax_net_ssl_SSLSocketFactory_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.SSLSocketFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the default SSL socket factory for new instances.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the specified socket factory is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the specified socket factory is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the specified socket factory is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the specified socket factory is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the specified socket factory is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the specified socket factory is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetLocalCertificates">
      <MemberSignature Language="C#" Value="public abstract Java.Security.Cert.Certificate[] GetLocalCertificates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Security.Cert.Certificate[] GetLocalCertificates() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.HttpsURLConnection.GetLocalCertificates" />
      <MemberSignature Language="F#" Value="abstract member GetLocalCertificates : unit -&gt; Java.Security.Cert.Certificate[]" Usage="httpsURLConnection.GetLocalCertificates " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getLocalCertificates", "()[Ljava/security/cert/Certificate;", "GetGetLocalCertificatesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Cert.Certificate[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the list of local certificates used during the handshake.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if no connection has been established yet.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetServerCertificates">
      <MemberSignature Language="C#" Value="public abstract Java.Security.Cert.Certificate[] GetServerCertificates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Security.Cert.Certificate[] GetServerCertificates() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Net.Ssl.HttpsURLConnection.GetServerCertificates" />
      <MemberSignature Language="F#" Value="abstract member GetServerCertificates : unit -&gt; Java.Security.Cert.Certificate[]" Usage="httpsURLConnection.GetServerCertificates " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getServerCertificates", "()[Ljava/security/cert/Certificate;", "GetGetServerCertificatesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Cert.Certificate[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return the list of certificates identifying the peer during the
 handshake.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Net.Ssl.SSLPeerUnverifiedException">if the identity of the peer has not been verified..</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if no connection has been established yet.
</exception>
      </Docs>
    </Member>
    <Member MemberName="HostnameVerifier">
      <MemberSignature Language="C#" Value="public virtual Javax.Net.Ssl.IHostnameVerifier HostnameVerifier { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Javax.Net.Ssl.IHostnameVerifier HostnameVerifier" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.Ssl.HttpsURLConnection.HostnameVerifier" />
      <MemberSignature Language="F#" Value="member this.HostnameVerifier : Javax.Net.Ssl.IHostnameVerifier with get, set" Usage="Javax.Net.Ssl.HttpsURLConnection.HostnameVerifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getHostnameVerifier", "()Ljavax/net/ssl/HostnameVerifier;", "GetGetHostnameVerifierHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setHostnameVerifier", "(Ljavax/net/ssl/HostnameVerifier;)V", "GetSetHostnameVerifier_Ljavax_net_ssl_HostnameVerifier_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.IHostnameVerifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the hostname verifier used by this instance.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the specified verifier is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the specified verifier is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the specified verifier is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the specified verifier is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the specified verifier is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the specified verifier is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.Ssl.HttpsURLConnection.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Javax.Net.Ssl.HttpsURLConnection.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalPrincipal">
      <MemberSignature Language="C#" Value="public virtual Java.Security.IPrincipal LocalPrincipal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Security.IPrincipal LocalPrincipal" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.Ssl.HttpsURLConnection.LocalPrincipal" />
      <MemberSignature Language="F#" Value="member this.LocalPrincipal : Java.Security.IPrincipal" Usage="Javax.Net.Ssl.HttpsURLConnection.LocalPrincipal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLocalPrincipal", "()Ljava/security/Principal;", "GetGetLocalPrincipalHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the <c>Principal</c> used to identify the local host during the handshake.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if no connection has been established yet.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PeerPrincipal">
      <MemberSignature Language="C#" Value="public virtual Java.Security.IPrincipal PeerPrincipal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Security.IPrincipal PeerPrincipal" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.Ssl.HttpsURLConnection.PeerPrincipal" />
      <MemberSignature Language="F#" Value="member this.PeerPrincipal : Java.Security.IPrincipal" Usage="Javax.Net.Ssl.HttpsURLConnection.PeerPrincipal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPeerPrincipal", "()Ljava/security/Principal;", "GetGetPeerPrincipalHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the <c>Principal</c> identifying the peer.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Net.Ssl.SSLPeerUnverifiedException">if the identity of the peer has not been verified.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if no connection has been established yet.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SSLSocketFactory">
      <MemberSignature Language="C#" Value="public virtual Javax.Net.Ssl.SSLSocketFactory SSLSocketFactory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Javax.Net.Ssl.SSLSocketFactory SSLSocketFactory" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.Ssl.HttpsURLConnection.SSLSocketFactory" />
      <MemberSignature Language="F#" Value="member this.SSLSocketFactory : Javax.Net.Ssl.SSLSocketFactory with get, set" Usage="Javax.Net.Ssl.HttpsURLConnection.SSLSocketFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSSLSocketFactory", "()Ljavax/net/ssl/SSLSocketFactory;", "GetGetSSLSocketFactoryHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSSLSocketFactory", "(Ljavax/net/ssl/SSLSocketFactory;)V", "GetSetSSLSocketFactory_Ljavax_net_ssl_SSLSocketFactory_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.SSLSocketFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the SSL socket factory used by this instance.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the specified socket factory is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the specified socket factory is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the specified socket factory is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the specified socket factory is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the specified socket factory is <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the specified socket factory is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.Ssl.HttpsURLConnection.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Javax.Net.Ssl.HttpsURLConnection.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Javax.Net.Ssl.HttpsURLConnection.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Javax.Net.Ssl.HttpsURLConnection.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
