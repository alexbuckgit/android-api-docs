<Type Name="MediaStore" FullName="Android.Provider.MediaStore">
  <TypeSignature Language="C#" Value="public sealed class MediaStore : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MediaStore extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/provider/MediaStore", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>The Media provider contains meta data for all available media on both internal
 and external storage devices.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">The Media provider contains meta data for all available media on both internal
 and external storage devices.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/provider/MediaStore.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaStore ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/MediaStore.html#MediaStore()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ActionImageCapture">
      <MemberSignature Language="C#" Value="public const string ActionImageCapture;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionImageCapture" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACTION_IMAGE_CAPTURE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Standard Intent action that can be sent to have the camera application
 capture an image and return it.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Standard Intent action that can be sent to have the camera application
 capture an image and return it.
 </para>
          <para tool="javadoc-to-mdoc">
 The caller may pass an extra EXTRA_OUTPUT to control where this image will be written.
 If the EXTRA_OUTPUT is not present, then a small sized image is returned as a Bitmap
 object in the extra field. This is useful for applications that only need a small image.
 If the EXTRA_OUTPUT is present, then the full-sized image will be written to the Uri
 value of EXTRA_OUTPUT.
 As of <c><see cref="!:NoType:android/os/Build$VERSION_CODES;Href=../../../reference/android/os/Build.VERSION_CODES.html#LOLLIPOP" /></c>, this uri can also be supplied through
 <c><see cref="P:Android.Content.Intent.ClipData" /></c>. If using this approach, you still must
 supply the uri through the EXTRA_OUTPUT field for compatibility with old applications.
 If you don't set a ClipData, it will be copied there for you when calling
 <c><see cref="M:Android.Content.Context.StartActivity(Android.Content.Intent)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/MediaStore.html#ACTION_IMAGE_CAPTURE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="F:Android.Provider.MediaStore.ExtraOutput" />
      </Docs>
    </Member>
    <Member MemberName="ActionImageCaptureSecure">
      <MemberSignature Language="C#" Value="public const string ActionImageCaptureSecure;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionImageCaptureSecure" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACTION_IMAGE_CAPTURE_SECURE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Intent action that can be sent to have the camera application capture an image and return
 it when the device is secured (e.g. with a pin, password, pattern, or face unlock).</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Intent action that can be sent to have the camera application capture an image and return
 it when the device is secured (e.g. with a pin, password, pattern, or face unlock).
 Applications responding to this intent must not expose any personal content like existing
 photos or videos on the device. The applications should be careful not to share any photo
 or video with other applications or internet. The activity should use <c><see cref="!:Android.Views.WindowManagerLayoutParams.FLAG_SHOW_WHEN_LOCKED" /></c> to display on top of the
 lock screen while secured. There is no activity stack when this flag is used, so
 launching more than one activity is strongly discouraged.
 </para>
          <para tool="javadoc-to-mdoc">
 The caller may pass an extra EXTRA_OUTPUT to control where this image will be written.
 If the EXTRA_OUTPUT is not present, then a small sized image is returned as a Bitmap
 object in the extra field. This is useful for applications that only need a small image.
 If the EXTRA_OUTPUT is present, then the full-sized image will be written to the Uri
 value of EXTRA_OUTPUT.
 As of <c><see cref="!:NoType:android/os/Build$VERSION_CODES;Href=../../../reference/android/os/Build.VERSION_CODES.html#LOLLIPOP" /></c>, this uri can also be supplied through
 <c><see cref="P:Android.Content.Intent.ClipData" /></c>. If using this approach, you still must
 supply the uri through the EXTRA_OUTPUT field for compatibility with old applications.
 If you don't set a ClipData, it will be copied there for you when calling
 <c><see cref="M:Android.Content.Context.StartActivity(Android.Content.Intent)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/MediaStore.html#ACTION_IMAGE_CAPTURE_SECURE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="F:Android.Provider.MediaStore.ActionImageCapture" />
        <altmember cref="F:Android.Provider.MediaStore.ExtraOutput" />
      </Docs>
    </Member>
    <Member MemberName="ActionVideoCapture">
      <MemberSignature Language="C#" Value="public const string ActionVideoCapture;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionVideoCapture" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACTION_VIDEO_CAPTURE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Standard Intent action that can be sent to have the camera application
 capture a video and return it.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Standard Intent action that can be sent to have the camera application
 capture a video and return it.
 </para>
          <para tool="javadoc-to-mdoc">
 The caller may pass in an extra EXTRA_VIDEO_QUALITY to control the video quality.
 </para>
          <para tool="javadoc-to-mdoc">
 The caller may pass in an extra EXTRA_OUTPUT to control
 where the video is written. If EXTRA_OUTPUT is not present the video will be
 written to the standard location for videos, and the Uri of that location will be
 returned in the data field of the Uri.
 As of <c><see cref="!:NoType:android/os/Build$VERSION_CODES;Href=../../../reference/android/os/Build.VERSION_CODES.html#LOLLIPOP" /></c>, this uri can also be supplied through
 <c><see cref="P:Android.Content.Intent.ClipData" /></c>. If using this approach, you still must
 supply the uri through the EXTRA_OUTPUT field for compatibility with old applications.
 If you don't set a ClipData, it will be copied there for you when calling
 <c><see cref="M:Android.Content.Context.StartActivity(Android.Content.Intent)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/MediaStore.html#ACTION_VIDEO_CAPTURE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="F:Android.Provider.MediaStore.ExtraOutput" />
        <altmember cref="F:Android.Provider.MediaStore.ExtraVideoQuality" />
        <altmember cref="F:Android.Provider.MediaStore.ExtraSizeLimit" />
        <altmember cref="F:Android.Provider.MediaStore.ExtraDurationLimit" />
      </Docs>
    </Member>
    <Member MemberName="Authority">
      <MemberSignature Language="C#" Value="public const string Authority;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Authority" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("AUTHORITY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/MediaStore.html#AUTHORITY" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ExtraDurationLimit">
      <MemberSignature Language="C#" Value="public const string ExtraDurationLimit;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraDurationLimit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_DURATION_LIMIT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specify the maximum allowed recording duration in seconds.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Specify the maximum allowed recording duration in seconds.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/MediaStore.html#EXTRA_DURATION_LIMIT" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ExtraFinishOnCompletion">
      <MemberSignature Language="C#" Value="public const string ExtraFinishOnCompletion;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraFinishOnCompletion" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_FINISH_ON_COMPLETION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the Intent-extra used to control the onCompletion behavior of a MovieView.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The name of the Intent-extra used to control the onCompletion behavior of a MovieView.
 This is a boolean property that specifies whether or not to finish the MovieView activity
 when the movie completes playing. The default value is true, which means to automatically
 exit the movie player activity when the movie completes playing.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/MediaStore.html#EXTRA_FINISH_ON_COMPLETION" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ExtraFullScreen">
      <MemberSignature Language="C#" Value="public const string ExtraFullScreen;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraFullScreen" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_FULL_SCREEN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of an Intent-extra used to control the UI of a ViewImage.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The name of an Intent-extra used to control the UI of a ViewImage.
 This is a boolean property that overrides the activity's default fullscreen state.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/MediaStore.html#EXTRA_FULL_SCREEN" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ExtraMediaAlbum">
      <MemberSignature Language="C#" Value="public const string ExtraMediaAlbum;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraMediaAlbum" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_MEDIA_ALBUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the Intent-extra used to define the album
</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The name of the Intent-extra used to define the album
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/MediaStore.html#EXTRA_MEDIA_ALBUM" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ExtraMediaArtist">
      <MemberSignature Language="C#" Value="public const string ExtraMediaArtist;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraMediaArtist" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_MEDIA_ARTIST")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the Intent-extra used to define the artist
</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The name of the Intent-extra used to define the artist
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/MediaStore.html#EXTRA_MEDIA_ARTIST" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ExtraMediaFocus">
      <MemberSignature Language="C#" Value="public const string ExtraMediaFocus;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraMediaFocus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_MEDIA_FOCUS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the Intent-extra used to define the search focus.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The name of the Intent-extra used to define the search focus. The search focus
 indicates whether the search should be for things related to the artist, album
 or song that is identified by the other extras.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/MediaStore.html#EXTRA_MEDIA_FOCUS" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ExtraMediaGenre">
      <MemberSignature Language="C#" Value="public const string ExtraMediaGenre;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraMediaGenre" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_MEDIA_GENRE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the Intent-extra used to define the genre.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The name of the Intent-extra used to define the genre.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/MediaStore.html#EXTRA_MEDIA_GENRE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraMediaPlaylist">
      <MemberSignature Language="C#" Value="public const string ExtraMediaPlaylist;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraMediaPlaylist" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_MEDIA_PLAYLIST")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the Intent-extra used to define the playlist.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The name of the Intent-extra used to define the playlist.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/MediaStore.html#EXTRA_MEDIA_PLAYLIST" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraMediaRadioChannel">
      <MemberSignature Language="C#" Value="public const string ExtraMediaRadioChannel;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraMediaRadioChannel" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_MEDIA_RADIO_CHANNEL")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the Intent-extra used to define the radio channel.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The name of the Intent-extra used to define the radio channel.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/MediaStore.html#EXTRA_MEDIA_RADIO_CHANNEL" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraMediaTitle">
      <MemberSignature Language="C#" Value="public const string ExtraMediaTitle;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraMediaTitle" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_MEDIA_TITLE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the Intent-extra used to define the song title
</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The name of the Intent-extra used to define the song title
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/MediaStore.html#EXTRA_MEDIA_TITLE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ExtraOutput">
      <MemberSignature Language="C#" Value="public const string ExtraOutput;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraOutput" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_OUTPUT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the Intent-extra used to indicate a content resolver Uri to be used to
 store the requested image or video.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The name of the Intent-extra used to indicate a content resolver Uri to be used to
 store the requested image or video.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/MediaStore.html#EXTRA_OUTPUT" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ExtraScreenOrientation">
      <MemberSignature Language="C#" Value="public const string ExtraScreenOrientation;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraScreenOrientation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_SCREEN_ORIENTATION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the Intent-extra used to control the orientation of a ViewImage or a MovieView.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The name of the Intent-extra used to control the orientation of a ViewImage or a MovieView.
 This is an int property that overrides the activity's requestedOrientation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/MediaStore.html#EXTRA_SCREEN_ORIENTATION" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ExtraShowActionIcons">
      <MemberSignature Language="C#" Value="public const string ExtraShowActionIcons;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraShowActionIcons" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_SHOW_ACTION_ICONS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of an Intent-extra used to control the UI of a ViewImage.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The name of an Intent-extra used to control the UI of a ViewImage.
 This is a boolean property that specifies whether or not to show action icons.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/MediaStore.html#EXTRA_SHOW_ACTION_ICONS" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ExtraSizeLimit">
      <MemberSignature Language="C#" Value="public const string ExtraSizeLimit;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraSizeLimit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_SIZE_LIMIT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specify the maximum allowed size.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Specify the maximum allowed size.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/MediaStore.html#EXTRA_SIZE_LIMIT" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ExtraVideoQuality">
      <MemberSignature Language="C#" Value="public const string ExtraVideoQuality;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraVideoQuality" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_VIDEO_QUALITY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the Intent-extra used to control the quality of a recorded video.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The name of the Intent-extra used to control the quality of a recorded video. This is an
 integer property. Currently value 0 means low quality, suitable for MMS messages, and
 value 1 means high quality. In the future other quality levels may be added.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/MediaStore.html#EXTRA_VIDEO_QUALITY" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="GetVersion">
      <MemberSignature Language="C#" Value="public static string GetVersion (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetVersion(class Android.Content.Context context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getVersion", "(Landroid/content/Context;)Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">Context to use for performing the query.</param>
        <summary>Get the media provider's version.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the media provider's version.
 Applications that import data from the media provider into their own caches
 can use this to detect that the media provider changed, and reimport data
 as needed. No other assumptions should be made about the meaning of the version.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/MediaStore.html#getVersion(android.content.Context)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="IntentActionMediaPlayFromSearch">
      <MemberSignature Language="C#" Value="public const string IntentActionMediaPlayFromSearch;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string IntentActionMediaPlayFromSearch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("INTENT_ACTION_MEDIA_PLAY_FROM_SEARCH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An intent to perform a search for music media and automatically play content from the
 result when possible.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">An intent to perform a search for music media and automatically play content from the
 result when possible. This can be fired, for example, by the result of a voice recognition
 command to listen to music.
 </para>
          <para tool="javadoc-to-mdoc">This intent always includes the <c><see cref="F:Android.Provider.MediaStore.ExtraMediaFocus" /></c>
 and <c><see cref="F:Android.App.SearchManager.Query" /></c> extras. The
 <c><see cref="F:Android.Provider.MediaStore.ExtraMediaFocus" /></c> extra determines the search mode, and
 the value of the <c><see cref="F:Android.App.SearchManager.Query" /></c> extra depends on the search mode.
 For more information about the search modes for this intent, see
 <format type="text/html"><a href="http://developer.android.com/reference/../guide/components/intents-common.html#PlaySearch">Play music based
 on a search query</a></format> in <format type="text/html"><a href="http://developer.android.com/reference/../guide/components/intents-common.html">Common
 Intents</a></format>.</para>
          <para tool="javadoc-to-mdoc">This intent makes the most sense for apps that can support large-scale search of music,
 such as services connected to an online database of music which can be streamed and played
 on the device.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/MediaStore.html#INTENT_ACTION_MEDIA_PLAY_FROM_SEARCH" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="IntentActionMediaSearch">
      <MemberSignature Language="C#" Value="public const string IntentActionMediaSearch;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string IntentActionMediaSearch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("INTENT_ACTION_MEDIA_SEARCH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Activity Action: Perform a search for media.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Activity Action: Perform a search for media.
 Contains at least the <c><see cref="F:Android.App.SearchManager.Query" /></c> extra.
 May also contain any combination of the following extras:
 EXTRA_MEDIA_ARTIST, EXTRA_MEDIA_ALBUM, EXTRA_MEDIA_TITLE, EXTRA_MEDIA_FOCUS</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/MediaStore.html#INTENT_ACTION_MEDIA_SEARCH" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="F:Android.Provider.MediaStore.ExtraMediaArtist" />
        <altmember cref="F:Android.Provider.MediaStore.ExtraMediaAlbum" />
        <altmember cref="F:Android.Provider.MediaStore.ExtraMediaTitle" />
        <altmember cref="F:Android.Provider.MediaStore.ExtraMediaFocus" />
      </Docs>
    </Member>
    <Member MemberName="IntentActionMusicPlayer">
      <MemberSignature Language="C#" Value="public const string IntentActionMusicPlayer;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string IntentActionMusicPlayer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("INTENT_ACTION_MUSIC_PLAYER")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Activity Action: Launch a music player.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Activity Action: Launch a music player.
 The activity should be able to play, browse, or manipulate music files stored on the device.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/MediaStore.html#INTENT_ACTION_MUSIC_PLAYER" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="IntentActionStillImageCamera">
      <MemberSignature Language="C#" Value="public const string IntentActionStillImageCamera;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string IntentActionStillImageCamera" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("INTENT_ACTION_STILL_IMAGE_CAMERA")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the Intent action used to launch a camera in still image mode.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The name of the Intent action used to launch a camera in still image mode.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/MediaStore.html#INTENT_ACTION_STILL_IMAGE_CAMERA" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="IntentActionStillImageCameraSecure">
      <MemberSignature Language="C#" Value="public const string IntentActionStillImageCameraSecure;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string IntentActionStillImageCameraSecure" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("INTENT_ACTION_STILL_IMAGE_CAMERA_SECURE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the Intent action used to launch a camera in still image mode
 for use when the device is secured (e.g. with a pin, password, pattern,
 or face unlock).</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The name of the Intent action used to launch a camera in still image mode
 for use when the device is secured (e.g. with a pin, password, pattern,
 or face unlock). Applications responding to this intent must not expose
 any personal content like existing photos or videos on the device. The
 applications should be careful not to share any photo or video with other
 applications or internet. The activity should use <c><see cref="!:Android.Views.WindowManagerLayoutParams.FLAG_SHOW_WHEN_LOCKED" /></c> to display
 on top of the lock screen while secured. There is no activity stack when
 this flag is used, so launching more than one activity is strongly
 discouraged.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/MediaStore.html#INTENT_ACTION_STILL_IMAGE_CAMERA_SECURE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="IntentActionTextOpenFromSearch">
      <MemberSignature Language="C#" Value="public const string IntentActionTextOpenFromSearch;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string IntentActionTextOpenFromSearch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("INTENT_ACTION_TEXT_OPEN_FROM_SEARCH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An intent to perform a search for readable media and automatically play content from the
 result when possible.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">An intent to perform a search for readable media and automatically play content from the
 result when possible. This can be fired, for example, by the result of a voice recognition
 command to read a book or magazine.
 </para>
          <para tool="javadoc-to-mdoc">
 Contains the <c><see cref="F:Android.App.SearchManager.Query" /></c> extra, which is a string that can
 contain any type of unstructured text search, like the name of a book or magazine, an author
 a genre, a publisher, or any combination of these.
 </para>
          <para tool="javadoc-to-mdoc">
 Because this intent includes an open-ended unstructured search string, it makes the most
 sense for apps that can support large-scale search of text media, such as services connected
 to an online database of books and/or magazines which can be read on the device.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/MediaStore.html#INTENT_ACTION_TEXT_OPEN_FROM_SEARCH" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="IntentActionVideoCamera">
      <MemberSignature Language="C#" Value="public const string IntentActionVideoCamera;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string IntentActionVideoCamera" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("INTENT_ACTION_VIDEO_CAMERA")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the Intent action used to launch a camera in video mode.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The name of the Intent action used to launch a camera in video mode.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/MediaStore.html#INTENT_ACTION_VIDEO_CAMERA" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="IntentActionVideoPlayFromSearch">
      <MemberSignature Language="C#" Value="public const string IntentActionVideoPlayFromSearch;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string IntentActionVideoPlayFromSearch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("INTENT_ACTION_VIDEO_PLAY_FROM_SEARCH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An intent to perform a search for video media and automatically play content from the
 result when possible.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">An intent to perform a search for video media and automatically play content from the
 result when possible. This can be fired, for example, by the result of a voice recognition
 command to play movies.
 </para>
          <para tool="javadoc-to-mdoc">
 Contains the <c><see cref="F:Android.App.SearchManager.Query" /></c> extra, which is a string that can
 contain any type of unstructured video search, like the name of a movie, one or more actors,
 a genre, or any combination of these.
 </para>
          <para tool="javadoc-to-mdoc">
 Because this intent includes an open-ended unstructured search string, it makes the most
 sense for apps that can support large-scale search of video, such as services connected to an
 online database of videos which can be streamed and played on the device.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/MediaStore.html#INTENT_ACTION_VIDEO_PLAY_FROM_SEARCH" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="MediaIgnoreFilename">
      <MemberSignature Language="C#" Value="public const string MediaIgnoreFilename;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MediaIgnoreFilename" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEDIA_IGNORE_FILENAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Name of the file signaling the media scanner to ignore media in the containing directory
 and its subdirectories.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Name of the file signaling the media scanner to ignore media in the containing directory
 and its subdirectories. Developers should use this to avoid application graphics showing
 up in the Gallery and likewise prevent application sounds and music from showing up in
 the Music app.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/MediaStore.html#MEDIA_IGNORE_FILENAME" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="MediaScannerUri">
      <MemberSignature Language="C#" Value="public static Android.Net.Uri MediaScannerUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Net.Uri MediaScannerUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMediaScannerUri", "()Landroid/net/Uri;", "GetGetMediaScannerUriHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Uri for querying the state of the media scanner.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Uri for querying the state of the media scanner.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/MediaStore.html#getMediaScannerUri()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MediaScannerVolume">
      <MemberSignature Language="C#" Value="public const string MediaScannerVolume;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MediaScannerVolume" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEDIA_SCANNER_VOLUME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Name of current volume being scanned by the media scanner.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Name of current volume being scanned by the media scanner.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/MediaStore.html#MEDIA_SCANNER_VOLUME" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownString">
      <MemberSignature Language="C#" Value="public const string UnknownString;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string UnknownString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("UNKNOWN_STRING")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The string that is used when a media attribute is not known.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The string that is used when a media attribute is not known. For example,
 if an audio file does not have any meta data, the artist and album columns
 will be set to this value.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/MediaStore.html#UNKNOWN_STRING" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
  </Members>
</Type>