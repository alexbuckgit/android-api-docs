<Type Name="ContactsContract+PhoneLookup" FullName="Android.Provider.ContactsContract+PhoneLookup">
  <TypeSignature Language="C#" Value="public sealed class ContactsContract.PhoneLookup : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit ContactsContract/PhoneLookup extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/provider/ContactsContract$PhoneLookup", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A table that represents the result of looking up a phone number, for
 example for caller ID.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">A table that represents the result of looking up a phone number, for
 example for caller ID. To perform a lookup you must append the number you
 want to find to <c><see cref="P:Android.Provider.ContactsContract.PhoneLookup.ContentFilterUri" /></c>.  This query is highly
 optimized.
 <example><code lang="java">
 Uri uri = Uri.withAppendedPath(PhoneLookup.CONTENT_FILTER_URI, Uri.encode(phoneNumber));
 resolver.query(uri, new String[]{PhoneLookup.DISPLAY_NAME,...
 </code></example><format type="text/html"><h3>Columns</h3></format><format type="text/html"><table class="jd-sumtable"><tr><th colspan="4">PhoneLookup</th></tr><tr><td>String</td><td><c><see cref="F:Android.Provider.ContactsContract.PhoneLookupColumns.Number" /></c></td><td>read-only</td><td>Phone number.</td></tr><tr><td>String</td><td><c><see cref="F:Android.Provider.ContactsContract.PhoneLookupColumns.Type" /></c></td><td>read-only</td><td>Phone number type. See <c><see cref="T:Android.Provider.ContactsContract+CommonDataKinds+Phone" /></c>.</td></tr><tr><td>String</td><td><c><see cref="F:Android.Provider.ContactsContract.PhoneLookupColumns.Label" /></c></td><td>read-only</td><td>Custom label for the phone number. See <c><see cref="T:Android.Provider.ContactsContract+CommonDataKinds+Phone" /></c>.</td></tr></table></format><format type="text/html"><table class="jd-sumtable"><tr><th colspan="4">Join with <c><see cref="T:Android.Provider.Contacts" /></c></th></tr><tr><td>long</td><td><c><see cref="F:Android.Provider.BaseColumns.Id" /></c></td><td>read-only</td><td>Contact ID.</td></tr><tr><td>String</td><td><c><see cref="F:Android.Provider.ContactsContract.ContactsColumns.LookupKey" /></c></td><td>read-only</td><td>See <c><see cref="T:Android.Provider.ContactsContract+Contacts" /></c></td></tr><tr><td>String</td><td><c><see cref="F:Android.Provider.ContactsContract.ContactsColumns.DisplayName" /></c></td><td>read-only</td><td>See <c><see cref="T:Android.Provider.ContactsContract+Contacts" /></c></td></tr><tr><td>long</td><td><c><see cref="F:Android.Provider.ContactsContract.ContactsColumns.PhotoId" /></c></td><td>read-only</td><td>See <c><see cref="T:Android.Provider.ContactsContract+Contacts" /></c>.</td></tr><tr><td>int</td><td><c><see cref="F:Android.Provider.ContactsContract.ContactsColumns.InVisibleGroup" /></c></td><td>read-only</td><td>See <c><see cref="T:Android.Provider.ContactsContract+Contacts" /></c>.</td></tr><tr><td>int</td><td><c><see cref="F:Android.Provider.ContactsContract.ContactsColumns.HasPhoneNumber" /></c></td><td>read-only</td><td>See <c><see cref="T:Android.Provider.ContactsContract+Contacts" /></c>.</td></tr><tr><td>int</td><td><c><see cref="F:Android.Provider.ContactsContract.ContactOptionsColumns.TimesContacted" /></c></td><td>read-only</td><td>See <c><see cref="T:Android.Provider.ContactsContract+Contacts" /></c>.</td></tr><tr><td>long</td><td><c><see cref="F:Android.Provider.ContactsContract.ContactOptionsColumns.LastTimeContacted" /></c></td><td>read-only</td><td>See <c><see cref="T:Android.Provider.ContactsContract+Contacts" /></c>.</td></tr><tr><td>int</td><td><c><see cref="F:Android.Provider.ContactsContract.ContactOptionsColumns.Starred" /></c></td><td>read-only</td><td>See <c><see cref="T:Android.Provider.ContactsContract+Contacts" /></c>.</td></tr><tr><td>String</td><td><c><see cref="F:Android.Provider.ContactsContract.ContactOptionsColumns.CustomRingtone" /></c></td><td>read-only</td><td>See <c><see cref="T:Android.Provider.ContactsContract+Contacts" /></c>.</td></tr><tr><td>int</td><td><c><see cref="F:Android.Provider.ContactsContract.ContactOptionsColumns.SendToVoicemail" /></c></td><td>read-only</td><td>See <c><see cref="T:Android.Provider.ContactsContract+Contacts" /></c>.</td></tr></table></format></para>
      <para tool="javadoc-to-mdoc">
 Columns from the Contacts table are also available through a join.
 </para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/provider/ContactsContract.PhoneLookup.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 5" />
  </Docs>
  <Members>
    <Member MemberName="ContentFilterUri">
      <MemberSignature Language="C#" Value="public static Android.Net.Uri ContentFilterUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Net.Uri ContentFilterUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTENT_FILTER_URI")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The content:// style URI for this table.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">The content:// style URI for this table. Append the phone number you want to lookup
 to this URI and query it to perform a lookup. For example:
 <sample external-id="0B87519DBBC53633FF375EFD72A9EC50" /></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/ContactsContract.PhoneLookup.html#CONTENT_FILTER_URI" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
