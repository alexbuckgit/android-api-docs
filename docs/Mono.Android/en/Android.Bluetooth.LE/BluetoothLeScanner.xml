<Type Name="BluetoothLeScanner" FullName="Android.Bluetooth.LE.BluetoothLeScanner">
  <TypeSignature Language="C#" Value="public sealed class BluetoothLeScanner : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BluetoothLeScanner extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/bluetooth/le/BluetoothLeScanner", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="21">
    <summary>This class provides methods to perform scan related operations for Bluetooth LE devices.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">This class provides methods to perform scan related operations for Bluetooth LE devices. An
 application can scan for a particular type of Bluetotoh LE devices using <c><see cref="T:Android.Bluetooth.LE.ScanFilter" /></c>. It
 can also request different types of callbacks for delivering the result.
 </para>
      <para tool="javadoc-to-mdoc">
 Use <c><see cref="P:Android.Bluetooth.BluetoothAdapter.BluetoothLeScanner" /></c> to get an instance of
 <c><see cref="T:Android.Bluetooth.LE.BluetoothLeScanner" /></c>.
 </para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <b>Note:</b>
        </format> Most of the scan methods here require
 <c><see cref="!:NoType:android/Manifest$permission;Href=../../../../reference/android/Manifest.permission.html#BLUETOOTH_ADMIN" /></c> permission.</para>
      <format type="text/html">
        <h5 class="jd-tagtitle">See Also</h5>
      </format>
      <list type="bullet">
        <item>
          <term>
            <c>
              <see cref="T:Android.Bluetooth.LE.ScanFilter" />
            </c>
          </term>
        </item>
      </list>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/bluetooth/le/BluetoothLeScanner.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FlushPendingScanResults">
      <MemberSignature Language="C#" Value="public void FlushPendingScanResults (Android.Bluetooth.LE.ScanCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FlushPendingScanResults(class Android.Bluetooth.LE.ScanCallback callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("flushPendingScanResults", "(Landroid/bluetooth/le/ScanCallback;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Bluetooth.LE.ScanCallback" />
      </Parameters>
      <Docs>
        <param name="callback">Callback of the Bluetooth LE Scan, it has to be the same instance as the one
            used to start scan.
</param>
        <summary>Flush pending batch scan results stored in Bluetooth controller.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Flush pending batch scan results stored in Bluetooth controller. This will return Bluetooth
 LE scan results batched on bluetooth controller. Returns immediately, batch scan results data
 will be delivered through the <c>callback</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/bluetooth/le/BluetoothLeScanner.html#flushPendingScanResults(android.bluetooth.le.ScanCallback)" target="_blank">[Android Documentation]</a>
              <since version="Added in API level 21" />
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartScan">
      <MemberSignature Language="C#" Value="public void StartScan (Android.Bluetooth.LE.ScanCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartScan(class Android.Bluetooth.LE.ScanCallback callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startScan", "(Landroid/bluetooth/le/ScanCallback;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Bluetooth.LE.ScanCallback" />
      </Parameters>
      <Docs>
        <param name="callback">Callback used to deliver scan results.</param>
        <summary>Start Bluetooth LE scan with default parameters and no filters.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Start Bluetooth LE scan with default parameters and no filters. The scan results will be
 delivered through <c>callback</c>.
 </para>
          <para tool="javadoc-to-mdoc">
 Requires <c><see cref="!:NoType:android/Manifest$permission;Href=../../../../reference/android/Manifest.permission.html#BLUETOOTH_ADMIN" /></c> permission.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/bluetooth/le/BluetoothLeScanner.html#startScan(android.bluetooth.le.ScanCallback)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalArgumentException">If <c>callback</c> is null.
</exception>
      </Docs>
    </Member>
    <Member MemberName="StartScan">
      <MemberSignature Language="C#" Value="public void StartScan (System.Collections.Generic.IList&lt;Android.Bluetooth.LE.ScanFilter&gt; filters, Android.Bluetooth.LE.ScanSettings settings, Android.Bluetooth.LE.ScanCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartScan(class System.Collections.Generic.IList`1&lt;class Android.Bluetooth.LE.ScanFilter&gt; filters, class Android.Bluetooth.LE.ScanSettings settings, class Android.Bluetooth.LE.ScanCallback callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startScan", "(Ljava/util/List;Landroid/bluetooth/le/ScanSettings;Landroid/bluetooth/le/ScanCallback;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filters" Type="System.Collections.Generic.IList&lt;Android.Bluetooth.LE.ScanFilter&gt;" />
        <Parameter Name="settings" Type="Android.Bluetooth.LE.ScanSettings" />
        <Parameter Name="callback" Type="Android.Bluetooth.LE.ScanCallback" />
      </Parameters>
      <Docs>
        <param name="filters">To be added.</param>
        <param name="settings">To be added.</param>
        <param name="callback">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopScan">
      <MemberSignature Language="C#" Value="public void StopScan (Android.Bluetooth.LE.ScanCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopScan(class Android.Bluetooth.LE.ScanCallback callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("stopScan", "(Landroid/bluetooth/le/ScanCallback;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Bluetooth.LE.ScanCallback" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <summary>Stops an ongoing Bluetooth LE scan.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Stops an ongoing Bluetooth LE scan.
 </para>
          <para tool="javadoc-to-mdoc">
 Requires <c><see cref="!:NoType:android/Manifest$permission;Href=../../../../reference/android/Manifest.permission.html#BLUETOOTH_ADMIN" /></c> permission.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/bluetooth/le/BluetoothLeScanner.html#stopScan(android.bluetooth.le.ScanCallback)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>