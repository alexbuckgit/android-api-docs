<Type Name="ITransferQueue" FullName="Java.Util.Concurrent.ITransferQueue">
  <TypeSignature Language="C#" Value="public interface ITransferQueue : IDisposable, Java.Util.Concurrent.IBlockingQueue" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITransferQueue implements class Android.Runtime.IJavaObject, class Java.Lang.IIterable, class Java.Util.Concurrent.IBlockingQueue, class Java.Util.ICollection, class Java.Util.IQueue, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Java.Util.Concurrent.IBlockingQueue</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/util/concurrent/TransferQueue", "", "Java.Util.Concurrent.ITransferQueueInvoker")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="21">
    <summary>A <c><see cref="T:Java.Util.Concurrent.IBlockingQueue" /></c> in which producers may wait for consumers
 to receive elements.</summary>
    <remarks />
  </Docs>
  <Members>
    <Member MemberName="HasWaitingConsumer">
      <MemberSignature Language="C#" Value="public bool HasWaitingConsumer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasWaitingConsumer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("hasWaitingConsumer", "()Z", "GetHasWaitingConsumerHandler:Java.Util.Concurrent.ITransferQueueInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if there is at least one consumer waiting
 to receive an element via <c><see cref="M:Java.Util.Concurrent.IBlockingQueue.Take" /></c> or
 timed <c><see cref="M:Java.Util.Concurrent.IBlockingQueue.Poll(System.Int64, Java.Util.Concurrent.TimeUnit)" /></c>.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Transfer">
      <MemberSignature Language="C#" Value="public void Transfer (Java.Lang.Object e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Transfer(class Java.Lang.Object e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("transfer", "(Ljava/lang/Object;)V", "GetTransfer_Ljava_lang_Object_Handler:Java.Util.Concurrent.ITransferQueueInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="TryTransfer">
      <MemberSignature Language="C#" Value="public bool TryTransfer (Java.Lang.Object e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryTransfer(class Java.Lang.Object e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("tryTransfer", "(Ljava/lang/Object;)Z", "GetTryTransfer_Ljava_lang_Object_Handler:Java.Util.Concurrent.ITransferQueueInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="TryTransfer">
      <MemberSignature Language="C#" Value="public bool TryTransfer (Java.Lang.Object e, long timeout, Java.Util.Concurrent.TimeUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryTransfer(class Java.Lang.Object e, int64 timeout, class Java.Util.Concurrent.TimeUnit unit) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("tryTransfer", "(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z", "GetTryTransfer_Ljava_lang_Object_JLjava_util_concurrent_TimeUnit_Handler:Java.Util.Concurrent.ITransferQueueInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Java.Lang.Object" />
        <Parameter Name="timeout" Type="System.Int64" />
        <Parameter Name="unit" Type="Java.Util.Concurrent.TimeUnit" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <param name="timeout">To be added.</param>
        <param name="unit">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="WaitingConsumerCount">
      <MemberSignature Language="C#" Value="public int WaitingConsumerCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WaitingConsumerCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getWaitingConsumerCount", "()I", "GetGetWaitingConsumerCountHandler:Java.Util.Concurrent.ITransferQueueInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns an estimate of the number of consumers waiting to
 receive elements via <c><see cref="M:Java.Util.Concurrent.IBlockingQueue.Take" /></c> or timed
 <c><see cref="M:Java.Util.Concurrent.IBlockingQueue.Poll(System.Int64, Java.Util.Concurrent.TimeUnit)" /></c>.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
