<Type Name="ConcurrentHashMap" FullName="Java.Util.Concurrent.ConcurrentHashMap">
  <TypeSignature Language="C#" Value="public class ConcurrentHashMap : Java.Util.AbstractMap, IDisposable, Java.IO.ISerializable, Java.Util.Concurrent.IConcurrentMap" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConcurrentHashMap extends Java.Util.AbstractMap implements class Android.Runtime.IJavaObject, class Java.IO.ISerializable, class Java.Util.Concurrent.IConcurrentMap, class Java.Util.IMap, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Util.AbstractMap</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Java.IO.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Util.Concurrent.IConcurrentMap</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/util/concurrent/ConcurrentHashMap", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A hash table supporting full concurrency of retrievals and
 adjustable expected concurrency for updates.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">A hash table supporting full concurrency of retrievals and
 adjustable expected concurrency for updates. This class obeys the
 same functional specification as <c><see cref="T:Java.Util.Hashtable" /></c>, and
 includes versions of methods corresponding to each method of
 <c>Hashtable</c>. However, even though all operations are
 thread-safe, retrieval operations do <i>not</i> entail locking,
 and there is <i>not</i> any support for locking the entire table
 in a way that prevents all access.  This class is fully
 interoperable with <c>Hashtable</c> in programs that rely on its
 thread safety but not on its synchronization details.

 </para>
      <para tool="javadoc-to-mdoc"> Retrieval operations (including <c>get</c>) generally do not
 block, so may overlap with update operations (including
 <c>put</c> and <c>remove</c>). Retrievals reflect the results
 of the most recently <i>completed</i> update operations holding
 upon their onset.  For aggregate operations such as <c>putAll</c>
 and <c>clear</c>, concurrent retrievals may reflect insertion or
 removal of only some entries.  Similarly, Iterators and
 Enumerations return elements reflecting the state of the hash table
 at some point at or since the creation of the iterator/enumeration.
 They do <i>not</i> throw <c><see cref="T:Java.Util.ConcurrentModificationException" /></c>.
 However, iterators are designed to be used by only one thread at a time.

 </para>
      <para tool="javadoc-to-mdoc"> The allowed concurrency among update operations is guided by
 the optional <c>concurrencyLevel</c> constructor argument
 (default <c>16</c>), which is used as a hint for internal sizing.  The
 table is internally partitioned to try to permit the indicated
 number of concurrent updates without contention. Because placement
 in hash tables is essentially random, the actual concurrency will
 vary.  Ideally, you should choose a value to accommodate as many
 threads as will ever concurrently modify the table. Using a
 significantly higher value than you need can waste space and time,
 and a significantly lower value can lead to thread contention. But
 overestimates and underestimates within an order of magnitude do
 not usually have much noticeable impact. A value of one is
 appropriate when it is known that only one thread will modify and
 all others will only read. Also, resizing this or any other kind of
 hash table is a relatively slow operation, so, when possible, it is
 a good idea to provide estimates of expected table sizes in
 constructors.

 </para>
      <para tool="javadoc-to-mdoc">This class and its views and iterators implement all of the
 <i>optional</i> methods of the <c><see cref="T:Java.Util.IMap" /></c> and <c><see cref="T:Java.Util.IIterator" /></c>
 interfaces.

 </para>
      <para tool="javadoc-to-mdoc"> Like <c><see cref="T:Java.Util.Hashtable" /></c> but unlike <c><see cref="T:Android.Runtime.JavaDictionary" /></c>, this class
 does <i>not</i> allow <c>null</c> to be used as a key or value.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentHashMap ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Creates a new, empty map with a default initial capacity (16),
 load factor (0.75) and concurrencyLevel (16).</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new, empty map with a default initial capacity (16),
 load factor (0.75) and concurrencyLevel (16).
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap.html#ConcurrentHashMap()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentHashMap (System.Collections.IDictionary m);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary m) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/util/Map;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="m" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="m">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentHashMap (int initialCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCapacity) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="initialCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="initialCapacity">To be added.</param>
        <summary>Creates a new, empty map with the specified initial capacity,
 and with default load factor (0.75) and concurrencyLevel (16).</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new, empty map with the specified initial capacity,
 and with default load factor (0.75) and concurrencyLevel (16).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap.html#ConcurrentHashMap(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the initial capacity of
 elements is negative.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentHashMap (int p0, float p1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 p0, float32 p1) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(IF)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="p0" Type="System.Int32" />
        <Parameter Name="p1" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="p0">To be added.</param>
        <param name="p1">To be added.</param>
        <summary>Creates a new, empty map with the specified initial capacity
 and load factor and with the default concurrencyLevel (16).</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new, empty map with the specified initial capacity
 and load factor and with the default concurrencyLevel (16).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap.html#ConcurrentHashMap(int, float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the initial capacity of
 elements is negative or the load factor is nonpositive</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ConcurrentHashMap (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentHashMap (int initialCapacity, float loadFactor, int concurrencyLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCapacity, float32 loadFactor, int32 concurrencyLevel) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(IFI)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="initialCapacity" Type="System.Int32" />
        <Parameter Name="loadFactor" Type="System.Single" />
        <Parameter Name="concurrencyLevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="initialCapacity">To be added.</param>
        <param name="loadFactor">To be added.</param>
        <param name="concurrencyLevel">To be added.</param>
        <summary>Creates a new, empty map with the specified initial
 capacity, load factor and concurrency level.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new, empty map with the specified initial
 capacity, load factor and concurrency level.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap.html#ConcurrentHashMap(int, float, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the initial capacity is
 negative or the load factor or concurrencyLevel are
 nonpositive.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (Java.Lang.Object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class Java.Lang.Object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("contains", "(Ljava/lang/Object;)Z", "GetContains_Ljava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="value">a value to search for</param>
        <summary>Legacy method testing if some key maps into the specified value
 in this table.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Legacy method testing if some key maps into the specified value
 in this table.  This method is identical in functionality to
 <c><see cref="M:Java.Util.AbstractMap.ContainsValue(Java.Lang.Object)" /></c>, and exists solely to ensure
 full compatibility with class <c><see cref="T:Java.Util.Hashtable" /></c>,
 which supported this method prior to introduction of the
 Java Collections framework.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap.html#contains(java.lang.Object)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the specified value is null
</exception>
      </Docs>
    </Member>
    <Member MemberName="Elements">
      <MemberSignature Language="C#" Value="public virtual Java.Util.IEnumeration Elements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.IEnumeration Elements() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("elements", "()Ljava/util/Enumeration;", "GetElementsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.IEnumeration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumeration of the values in this table.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns an enumeration of the values in this table.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap.html#elements()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Util.AbstractMap.Values" />
      </Docs>
    </Member>
    <Member MemberName="EntrySet">
      <MemberSignature Language="C#" Value="public override System.Collections.ICollection EntrySet ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.ICollection EntrySet() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("entrySet", "()Ljava/util/Set;", "GetEntrySetHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a <c><see cref="T:Java.Util.ISet" /></c> view of the mappings contained in this map.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c><see cref="T:Java.Util.ISet" /></c> view of the mappings contained in this map.
 The set is backed by the map, so changes to the map are
 reflected in the set, and vice-versa.  The set supports element
 removal, which removes the corresponding mapping from the map,
 via the <c>Iterator.remove</c>, <c>Set.remove</c>,
 <c>removeAll</c>, <c>retainAll</c>, and <c>clear</c>
 operations.  It does not support the <c>add</c> or
 <c>addAll</c> operations.

 </para>
          <para tool="javadoc-to-mdoc">The view's <c>iterator</c> is a "weakly consistent" iterator
 that will never throw <c><see cref="T:Java.Util.ConcurrentModificationException" /></c>,
 and guarantees to traverse elements as they existed upon
 construction of the iterator, and may (but is not guaranteed to)
 reflect any modifications subsequent to construction.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap.html#entrySet()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public virtual Java.Util.IEnumeration Keys ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.IEnumeration Keys() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("keys", "()Ljava/util/Enumeration;", "GetKeysHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.IEnumeration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumeration of the keys in this table.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns an enumeration of the keys in this table.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap.html#keys()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Util.AbstractMap.KeySet" />
      </Docs>
    </Member>
    <Member MemberName="PutIfAbsent">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object PutIfAbsent (Java.Lang.Object key, Java.Lang.Object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object PutIfAbsent(class Java.Lang.Object key, class Java.Lang.Object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("putIfAbsent", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", "GetPutIfAbsent_Ljava_lang_Object_Ljava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Lang.Object" />
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual bool Remove (Java.Lang.Object key, Java.Lang.Object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class Java.Lang.Object key, class Java.Lang.Object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("remove", "(Ljava/lang/Object;Ljava/lang/Object;)Z", "GetRemove_Ljava_lang_Object_Ljava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Lang.Object" />
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="key">key with which the specified value is associated</param>
        <param name="value">value expected to be associated with the specified key</param>
        <summary>Removes the entry for a key only if currently mapped to a given value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Removes the entry for a key only if currently mapped to a given value.
 This is equivalent to
  <sample external-id="94A48315C97714DFE96E3CC129C28B22" />

 except that the action is performed atomically.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/concurrent/ConcurrentHashMap.html#remove(java.lang.Object, java.lang.Object)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the specified key is null
</exception>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object Replace (Java.Lang.Object key, Java.Lang.Object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object Replace(class Java.Lang.Object key, class Java.Lang.Object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("replace", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", "GetReplace_Ljava_lang_Object_Ljava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Lang.Object" />
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public virtual bool Replace (Java.Lang.Object key, Java.Lang.Object oldValue, Java.Lang.Object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Replace(class Java.Lang.Object key, class Java.Lang.Object oldValue, class Java.Lang.Object newValue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("replace", "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z", "GetReplace_Ljava_lang_Object_Ljava_lang_Object_Ljava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Lang.Object" />
        <Parameter Name="oldValue" Type="Java.Lang.Object" />
        <Parameter Name="newValue" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="oldValue">To be added.</param>
        <param name="newValue">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
