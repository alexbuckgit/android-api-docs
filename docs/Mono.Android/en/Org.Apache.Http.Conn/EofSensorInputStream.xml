<Type Name="EofSensorInputStream" FullName="Org.Apache.Http.Conn.EofSensorInputStream">
  <TypeSignature Language="C#" Value="public class EofSensorInputStream : Java.IO.InputStream, IDisposable, Org.Apache.Http.Conn.IConnectionReleaseTrigger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EofSensorInputStream extends Java.IO.InputStream implements class Android.Runtime.IJavaObject, class Org.Apache.Http.Conn.IConnectionReleaseTrigger, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.IO.InputStream</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Org.Apache.Http.Conn.IConnectionReleaseTrigger</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("org/apache/http/conn/EofSensorInputStream", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A stream wrapper that triggers actions on <c><see cref="!:Org.Apache.Http.Conn.EofSensorInputStream.close()" /></c> and EOF.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">A stream wrapper that triggers actions on <c><see cref="!:Org.Apache.Http.Conn.EofSensorInputStream.close()" /></c> and EOF.
 Primarily used to auto-release an underlying
 <c><see cref="T:Org.Apache.Http.Conn.IManagedClientConnection" /></c>
 when the response body is consumed or no longer needed.

 </para>
      <para tool="javadoc-to-mdoc">
 This class is based on <c>AutoCloseInputStream</c> in HttpClient 3.1,
 but has notable differences. It does not allow mark/reset, distinguishes
 different kinds of event, and does not always close the underlying stream
 on EOF. That decision is left to the <c><see cref="T:Org.Apache.Http.Conn.IEofSensorWatcher" /></c>.
 </para>
      <format type="text/html">
        <h5 class="jd-tagtitle">See Also</h5>
      </format>
      <list type="bullet">
        <item>
          <term>
            <c>
              <see cref="T:Org.Apache.Http.Conn.IEofSensorWatcher" />
            </c>
          </term>
        </item>
      </list>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/org/apache/http/conn/EofSensorInputStream.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EofSensorInputStream (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EofSensorInputStream (System.IO.Stream in, Org.Apache.Http.Conn.IEofSensorWatcher watcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream in, class Org.Apache.Http.Conn.IEofSensorWatcher watcher) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/InputStream;Lorg/apache/http/conn/EofSensorWatcher;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="in" Type="System.IO.Stream" />
        <Parameter Name="watcher" Type="Org.Apache.Http.Conn.IEofSensorWatcher" />
      </Parameters>
      <Docs>
        <param name="in">To be added.</param>
        <param name="watcher">To be added.</param>
        <summary>Creates a new EOF sensor.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new EOF sensor.
 If no watcher is passed, the underlying stream will simply be
 closed when EOF is detected or <c><see cref="!:Org.Apache.Http.Conn.EofSensorInputStream.close()" /></c> is called.
 Otherwise, the watcher decides whether the underlying stream
 should be closed before detaching from it.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/EofSensorInputStream.html#EofSensorInputStream(java.io.InputStream, org.apache.http.conn.EofSensorWatcher)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AbortConnection">
      <MemberSignature Language="C#" Value="public virtual void AbortConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AbortConnection() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("abortConnection", "()V", "GetAbortConnectionHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aborts this stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Aborts this stream.
 This is a special version of <c><see cref="!:Org.Apache.Http.Conn.EofSensorInputStream.close()" /></c> which prevents
 re-use of the underlying connection, if any. Calling this method
 indicates that there should be no attempt to read until the end of
 the stream.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/EofSensorInputStream.html#abortConnection()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="CheckAbort">
      <MemberSignature Language="C#" Value="protected virtual void CheckAbort ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CheckAbort() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("checkAbort", "()V", "GetCheckAbortHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Detects stream abort and notifies the watcher.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Detects stream abort and notifies the watcher.
 There's not much to detect since this is called by
 <c><see cref="M:Org.Apache.Http.Conn.EofSensorInputStream.AbortConnection" /></c>.
 The watcher will only be notified if this stream is aborted
 for the first time and before EOF has been detected or the
 stream has been <c><see cref="!:Org.Apache.Http.Conn.EofSensorInputStream.close()" /></c> gracefully.
 This stream will be detached from the underlying stream to prevent
 multiple notifications to the watcher.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/EofSensorInputStream.html#checkAbort()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">in case of an IO problem on closing the underlying stream
</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckClose">
      <MemberSignature Language="C#" Value="protected virtual void CheckClose ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CheckClose() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("checkClose", "()V", "GetCheckCloseHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Detects stream close and notifies the watcher.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Detects stream close and notifies the watcher.
 There's not much to detect since this is called by <c><see cref="!:Org.Apache.Http.Conn.EofSensorInputStream.close()" /></c>.
 The watcher will only be notified if this stream is closed
 for the first time and before EOF has been detected.
 This stream will be detached from the underlying stream to prevent
 multiple notifications to the watcher.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/EofSensorInputStream.html#checkClose()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">in case of an IO problem on closing the underlying stream
</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckEOF">
      <MemberSignature Language="C#" Value="protected virtual void CheckEOF (int eof);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CheckEOF(int32 eof) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("checkEOF", "(I)V", "GetCheckEOF_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eof" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eof">the result of the calling read operation.
                  A negative value indicates that EOF is reached.</param>
        <summary>Detects EOF and notifies the watcher.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Detects EOF and notifies the watcher.
 This method should only be called while the underlying stream is
 still accessible. Use <c><see cref="P:Org.Apache.Http.Conn.EofSensorInputStream.IsReadAllowed" /></c> to
 check that condition.
 <format type="text/html"><br /></format>
 If EOF is detected, the watcher will be notified and this stream
 is detached from the underlying stream. This prevents multiple
 notifications from this stream.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/EofSensorInputStream.html#checkEOF(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">in case of an IO problem on closing the underlying stream
</exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadAllowed">
      <MemberSignature Language="C#" Value="protected virtual bool IsReadAllowed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadAllowed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isReadAllowed", "()Z", "GetIsReadAllowedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Checks whether the underlying stream can be read from.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Checks whether the underlying stream can be read from.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/EofSensorInputStream.html#isReadAllowed()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if this stream is already closed
</exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("read", "()I", "GetReadHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a single byte from this stream and returns it as an integer in the
 range from 0 to 255.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Reads a single byte from this stream and returns it as an integer in the
 range from 0 to 255. Returns -1 if the end of the stream has been
 reached. Blocks until one byte has been read, the end of the source
 stream is detected or an exception is thrown.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/EofSensorInputStream.html#read()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseConnection">
      <MemberSignature Language="C#" Value="public virtual void ReleaseConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseConnection() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("releaseConnection", "()V", "GetReleaseConnectionHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Same as <c><see cref="!:Org.Apache.Http.Conn.EofSensorInputStream.close()" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Same as <c><see cref="!:Org.Apache.Http.Conn.EofSensorInputStream.close()" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/EofSensorInputStream.html#releaseConnection()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WrappedStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream WrappedStream { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream WrappedStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("wrappedStream")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The wrapped input stream, while accessible.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">The wrapped input stream, while accessible.
 The value changes to <c>null</c> when the wrapped stream
 becomes inaccessible.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/EofSensorInputStream.html#wrappedStream" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>