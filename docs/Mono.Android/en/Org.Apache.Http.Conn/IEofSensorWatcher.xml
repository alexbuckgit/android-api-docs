<Type Name="IEofSensorWatcher" FullName="Org.Apache.Http.Conn.IEofSensorWatcher">
  <TypeSignature Language="C#" Value="public interface IEofSensorWatcher : Android.Runtime.IJavaObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEofSensorWatcher implements class Android.Runtime.IJavaObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("org/apache/http/conn/EofSensorWatcher", "", "Org.Apache.Http.Conn.IEofSensorWatcherInvoker")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A watcher for <c><see cref="T:Org.Apache.Http.Conn.EofSensorInputStream" /></c>.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">A watcher for <c><see cref="T:Org.Apache.Http.Conn.EofSensorInputStream" /></c>.
 Each stream will notify it's watcher at most once.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/org/apache/http/conn/EofSensorWatcher.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="EofDetected">
      <MemberSignature Language="C#" Value="public bool EofDetected (System.IO.Stream wrapped);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EofDetected(class System.IO.Stream wrapped) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("eofDetected", "(Ljava/io/InputStream;)Z", "GetEofDetected_Ljava_io_InputStream_Handler:Org.Apache.Http.Conn.IEofSensorWatcherInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wrapped" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="wrapped">the underlying stream which has reached EOF</param>
        <summary>Indicates that EOF is detected.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates that EOF is detected.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/EofSensorWatcher.html#eofDetected(java.io.InputStream)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">in case of an IO problem, for example if the watcher itself
         closes the underlying stream. The caller will leave the
         wrapped stream alone, as if <c>false</c> was returned.
</exception>
      </Docs>
    </Member>
    <Member MemberName="StreamAbort">
      <MemberSignature Language="C#" Value="public bool StreamAbort (System.IO.Stream wrapped);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool StreamAbort(class System.IO.Stream wrapped) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("streamAbort", "(Ljava/io/InputStream;)Z", "GetStreamAbort_Ljava_io_InputStream_Handler:Org.Apache.Http.Conn.IEofSensorWatcherInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wrapped" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="wrapped">the underlying stream which has not reached EOF</param>
        <summary>Indicates that the <c><see cref="T:Org.Apache.Http.Conn.EofSensorInputStream" /></c> is aborted.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates that the <c><see cref="T:Org.Apache.Http.Conn.EofSensorInputStream" /></c> is aborted.
 This method will be called only if EOF was <format type="text/html"><i>not</i></format> detected
 before aborting. Otherwise, <c><see cref="M:Org.Apache.Http.Conn.IEofSensorWatcher.EofDetected(System.IO.Stream)" /></c> is called.
 </para>
          <para tool="javadoc-to-mdoc">
 This method will also be invoked when an input operation causes an
 IOException to be thrown to make sure the input stream gets shut down.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/EofSensorWatcher.html#streamAbort(java.io.InputStream)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">in case of an IO problem, for example if the watcher itself
         closes the underlying stream. The caller will leave the
         wrapped stream alone, as if <c>false</c> was returned.
</exception>
      </Docs>
    </Member>
    <Member MemberName="StreamClosed">
      <MemberSignature Language="C#" Value="public bool StreamClosed (System.IO.Stream wrapped);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool StreamClosed(class System.IO.Stream wrapped) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("streamClosed", "(Ljava/io/InputStream;)Z", "GetStreamClosed_Ljava_io_InputStream_Handler:Org.Apache.Http.Conn.IEofSensorWatcherInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wrapped" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="wrapped">the underlying stream which has not reached EOF</param>
        <summary>Indicates that the <c><see cref="T:Org.Apache.Http.Conn.EofSensorInputStream" /></c> is closed.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates that the <c><see cref="T:Org.Apache.Http.Conn.EofSensorInputStream" /></c> is closed.
 This method will be called only if EOF was <format type="text/html"><i>not</i></format> detected
 before closing. Otherwise, <c><see cref="M:Org.Apache.Http.Conn.IEofSensorWatcher.EofDetected(System.IO.Stream)" /></c> is called.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/EofSensorWatcher.html#streamClosed(java.io.InputStream)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">in case of an IO problem, for example if the watcher itself
         closes the underlying stream. The caller will leave the
         wrapped stream alone, as if <c>false</c> was returned.
</exception>
      </Docs>
    </Member>
  </Members>
</Type>