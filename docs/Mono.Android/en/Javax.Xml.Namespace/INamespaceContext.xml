<Type Name="INamespaceContext" FullName="Javax.Xml.Namespace.INamespaceContext">
  <TypeSignature Language="C#" Value="public interface INamespaceContext : Android.Runtime.IJavaObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INamespaceContext implements class Android.Runtime.IJavaObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("javax/xml/namespace/NamespaceContext", "", "Javax.Xml.Namespace.INamespaceContextInvoker")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><list type="bullet"><item><term>Namespace URI:
       Namespace name expressed as a URI to which the prefix is bound</term></item><item><term>prefix: syntactically, this is the part of the attribute name
       following the <c>XMLConstants.XMLNS_ATTRIBUTE</c>
       ("xmlns") in the Namespace declaration</term></item></list></summary>
    <remarks><para tool="javadoc-to-mdoc"><list type="bullet"><item><term>Namespace URI:
       Namespace name expressed as a URI to which the prefix is bound</term></item><item><term>prefix: syntactically, this is the part of the attribute name
       following the <c>XMLConstants.XMLNS_ATTRIBUTE</c>
       ("xmlns") in the Namespace declaration</term></item></list></para><para tool="javadoc-to-mdoc">Interface for read only XML Namespace context processing.</para><para tool="javadoc-to-mdoc">An XML Namespace has the properties:</para><para tool="javadoc-to-mdoc"> example: <c>&lt;element xmlns:prefix="http://Namespace-name-URI"&gt;</c></para><para tool="javadoc-to-mdoc">All <c>get*(*)</c> methods operate in the current scope
 for Namespace URI and prefix resolution.</para><para tool="javadoc-to-mdoc">Note that a Namespace URI can be bound to
 <i>multiple</i> prefixes in the current scope.  This can
 occur when multiple <c>XMLConstants.XMLNS_ATTRIBUTE</c>
 ("xmlns") Namespace declarations occur in the same Start-Tag and
 refer to the same Namespace URI. e.g.<format type="text/html"><br /></format><sample external-id="45AFF1FBDCF8F6CB343FC64CADC839CB" />
 This can also occur when the same Namespace URI is used in multiple
 <c>XMLConstants.XMLNS_ATTRIBUTE</c> ("xmlns") Namespace
 declarations in the logical parent element hierarchy.  e.g.<format type="text/html"><br /></format><sample external-id="99029313E53E151A0350EF62C08E81E4" /></para><para tool="javadoc-to-mdoc">A prefix can only be bound to a <i>single</i>
 Namespace URI in the current scope.</para><format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="T:Javax.Xml.XMLConstants" /></c></term></item><item><term></term></item><item><term></term></item><item><term></term></item></list><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/javax/xml/namespace/NamespaceContext.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 8" />
  </Docs>
  <Members>
    <Member MemberName="GetNamespaceURI">
      <MemberSignature Language="C#" Value="public string GetNamespaceURI (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetNamespaceURI(string prefix) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getNamespaceURI", "(Ljava/lang/String;)Ljava/lang/String;", "GetGetNamespaceURI_Ljava_lang_String_Handler:Javax.Xml.Namespace.INamespaceContextInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">prefix to look up</param>
        <summary><format type="text/html"><table border="2" rules="all" cellpadding="4"><thead><tr><td align="center" colspan="2"><c>getNamespaceURI(prefix)</c>
         return value for specified prefixes
       </td></tr><tr><td>prefix parameter</td><td>Namespace URI return value</td></tr></thead><tbody><tr><td><c>DEFAULT_NS_PREFIX</c> ("")</td><td>default Namespace URI in the current scope or
         <c><c><see cref="F:Javax.Xml.XMLConstants.NullNsUri" /></c></c>
         when there is no default Namespace URI in the current scope</td></tr><tr><td>bound prefix</td><td>Namespace URI bound to prefix in current scope</td></tr><tr><td>unbound prefix</td><td><c><c><see cref="F:Javax.Xml.XMLConstants.NullNsUri" /></c></c></td></tr><tr><td><c>XMLConstants.XML_NS_PREFIX</c> ("xml")</td><td><c>XMLConstants.XML_NS_URI</c>
           ("http://www.w3.org/XML/1998/namespace")</td></tr><tr><td><c>XMLConstants.XMLNS_ATTRIBUTE</c> ("xmlns")</td><td><c>XMLConstants.XMLNS_ATTRIBUTE_NS_URI</c>
         ("http://www.w3.org/2000/xmlns/")</td></tr><tr><td><c>null</c></td><td><c>IllegalArgumentException</c> is thrown</td></tr></tbody></table></format></summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc"><format type="text/html"><table border="2" rules="all" cellpadding="4"><thead><tr><td align="center" colspan="2"><c>getNamespaceURI(prefix)</c>
         return value for specified prefixes
       </td></tr><tr><td>prefix parameter</td><td>Namespace URI return value</td></tr></thead><tbody><tr><td><c>DEFAULT_NS_PREFIX</c> ("")</td><td>default Namespace URI in the current scope or
         <c><c><see cref="F:Javax.Xml.XMLConstants.NullNsUri" /></c></c>
         when there is no default Namespace URI in the current scope</td></tr><tr><td>bound prefix</td><td>Namespace URI bound to prefix in current scope</td></tr><tr><td>unbound prefix</td><td><c><c><see cref="F:Javax.Xml.XMLConstants.NullNsUri" /></c></c></td></tr><tr><td><c>XMLConstants.XML_NS_PREFIX</c> ("xml")</td><td><c>XMLConstants.XML_NS_URI</c>
           ("http://www.w3.org/XML/1998/namespace")</td></tr><tr><td><c>XMLConstants.XMLNS_ATTRIBUTE</c> ("xmlns")</td><td><c>XMLConstants.XMLNS_ATTRIBUTE_NS_URI</c>
         ("http://www.w3.org/2000/xmlns/")</td></tr><tr><td><c>null</c></td><td><c>IllegalArgumentException</c> is thrown</td></tr></tbody></table></format></para><para tool="javadoc-to-mdoc">Get Namespace URI bound to a prefix in the current scope.</para><para tool="javadoc-to-mdoc">When requesting a Namespace URI by prefix, the following
 table describes the returned Namespace URI value for all
 possible prefix values:</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/javax/xml/namespace/NamespaceContext.html#getNamespaceURI(java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetPrefix">
      <MemberSignature Language="C#" Value="public string GetPrefix (string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPrefix(string namespaceURI) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPrefix", "(Ljava/lang/String;)Ljava/lang/String;", "GetGetPrefix_Ljava_lang_String_Handler:Javax.Xml.Namespace.INamespaceContextInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="namespaceURI">URI of Namespace to lookup</param>
        <summary><format type="text/html"><table border="2" rules="all" cellpadding="4"><thead><tr><td align="center" colspan="2"><c>getPrefix(namespaceURI)</c> return value for
         specified Namespace URIs
       </td></tr><tr><td>Namespace URI parameter</td><td>prefix value returned</td></tr></thead><tbody><tr><td>&lt;default Namespace URI&gt;</td><td><c>XMLConstants.DEFAULT_NS_PREFIX</c> ("")
       </td></tr><tr><td>bound Namespace URI</td><td>prefix bound to Namespace URI in the current scope,
           if multiple prefixes are bound to the Namespace URI in
           the current scope, a single arbitrary prefix, whose
           choice is implementation dependent, is returned</td></tr><tr><td>unbound Namespace URI</td><td><c>null</c></td></tr><tr><td><c>XMLConstants.XML_NS_URI</c>
           ("http://www.w3.org/XML/1998/namespace")</td><td><c>XMLConstants.XML_NS_PREFIX</c> ("xml")</td></tr><tr><td><c>XMLConstants.XMLNS_ATTRIBUTE_NS_URI</c>
           ("http://www.w3.org/2000/xmlns/")</td><td><c>XMLConstants.XMLNS_ATTRIBUTE</c> ("xmlns")</td></tr><tr><td><c>null</c></td><td><c>IllegalArgumentException</c> is thrown</td></tr></tbody></table></format></summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc"><format type="text/html"><table border="2" rules="all" cellpadding="4"><thead><tr><td align="center" colspan="2"><c>getPrefix(namespaceURI)</c> return value for
         specified Namespace URIs
       </td></tr><tr><td>Namespace URI parameter</td><td>prefix value returned</td></tr></thead><tbody><tr><td>&lt;default Namespace URI&gt;</td><td><c>XMLConstants.DEFAULT_NS_PREFIX</c> ("")
       </td></tr><tr><td>bound Namespace URI</td><td>prefix bound to Namespace URI in the current scope,
           if multiple prefixes are bound to the Namespace URI in
           the current scope, a single arbitrary prefix, whose
           choice is implementation dependent, is returned</td></tr><tr><td>unbound Namespace URI</td><td><c>null</c></td></tr><tr><td><c>XMLConstants.XML_NS_URI</c>
           ("http://www.w3.org/XML/1998/namespace")</td><td><c>XMLConstants.XML_NS_PREFIX</c> ("xml")</td></tr><tr><td><c>XMLConstants.XMLNS_ATTRIBUTE_NS_URI</c>
           ("http://www.w3.org/2000/xmlns/")</td><td><c>XMLConstants.XMLNS_ATTRIBUTE</c> ("xmlns")</td></tr><tr><td><c>null</c></td><td><c>IllegalArgumentException</c> is thrown</td></tr></tbody></table></format></para><para tool="javadoc-to-mdoc">Get prefix bound to Namespace URI in the current scope.</para><para tool="javadoc-to-mdoc">To get all prefixes bound to a Namespace URI in the current
 scope, use <c><see cref="M:Javax.Xml.Namespace.INamespaceContext.GetPrefixes(System.String)" /></c>.</para><para tool="javadoc-to-mdoc">When requesting a prefix by Namespace URI, the following
 table describes the returned prefix value for all Namespace URI
 values:</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/javax/xml/namespace/NamespaceContext.html#getPrefix(java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetPrefixes">
      <MemberSignature Language="C#" Value="public Java.Util.IIterator GetPrefixes (string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.IIterator GetPrefixes(string namespaceURI) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPrefixes", "(Ljava/lang/String;)Ljava/util/Iterator;", "GetGetPrefixes_Ljava_lang_String_Handler:Javax.Xml.Namespace.INamespaceContextInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.IIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="namespaceURI">URI of Namespace to lookup</param>
        <summary><format type="text/html"><table border="2" rules="all" cellpadding="4"><thead><tr><td align="center" colspan="2"><c>
         getPrefixes(namespaceURI)</c> return value for
         specified Namespace URIs</td></tr><tr><td>Namespace URI parameter</td><td>prefixes value returned</td></tr></thead><tbody><tr><td>bound Namespace URI,
         including the &lt;default Namespace URI&gt;</td><td><c>Iterator</c> over prefixes bound to Namespace URI in
         the current scope in an arbitrary, <i>implementation dependent</i>,
         order</td></tr><tr><td>unbound Namespace URI</td><td>empty <c>Iterator</c></td></tr><tr><td><c>XMLConstants.XML_NS_URI</c>
           ("http://www.w3.org/XML/1998/namespace")</td><td><c>Iterator</c> with one element set to
         <c>XMLConstants.XML_NS_PREFIX</c> ("xml")</td></tr><tr><td><c>XMLConstants.XMLNS_ATTRIBUTE_NS_URI</c>
           ("http://www.w3.org/2000/xmlns/")</td><td><c>Iterator</c> with one element set to
         <c>XMLConstants.XMLNS_ATTRIBUTE</c> ("xmlns")</td></tr><tr><td><c>null</c></td><td><c>IllegalArgumentException</c> is thrown</td></tr></tbody></table></format></summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc"><format type="text/html"><table border="2" rules="all" cellpadding="4"><thead><tr><td align="center" colspan="2"><c>
         getPrefixes(namespaceURI)</c> return value for
         specified Namespace URIs</td></tr><tr><td>Namespace URI parameter</td><td>prefixes value returned</td></tr></thead><tbody><tr><td>bound Namespace URI,
         including the &lt;default Namespace URI&gt;</td><td><c>Iterator</c> over prefixes bound to Namespace URI in
         the current scope in an arbitrary, <i>implementation dependent</i>,
         order</td></tr><tr><td>unbound Namespace URI</td><td>empty <c>Iterator</c></td></tr><tr><td><c>XMLConstants.XML_NS_URI</c>
           ("http://www.w3.org/XML/1998/namespace")</td><td><c>Iterator</c> with one element set to
         <c>XMLConstants.XML_NS_PREFIX</c> ("xml")</td></tr><tr><td><c>XMLConstants.XMLNS_ATTRIBUTE_NS_URI</c>
           ("http://www.w3.org/2000/xmlns/")</td><td><c>Iterator</c> with one element set to
         <c>XMLConstants.XMLNS_ATTRIBUTE</c> ("xmlns")</td></tr><tr><td><c>null</c></td><td><c>IllegalArgumentException</c> is thrown</td></tr></tbody></table></format></para><para tool="javadoc-to-mdoc">Get all prefixes bound to a Namespace URI in the current
 scope.</para><para tool="javadoc-to-mdoc">An Iterator over String elements is returned in an arbitrary, <i>implementation dependent</i>, order.</para><para tool="javadoc-to-mdoc"><i>The <c>Iterator</c> is
 <i>not</i> modifiable.  e.g. the
 <c>remove()</c> method will throw
 <c>UnsupportedOperationException</c>.</i></para><para tool="javadoc-to-mdoc">When requesting prefixes by Namespace URI, the following
 table describes the returned prefixes value for all Namespace
 URI values:</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/javax/xml/namespace/NamespaceContext.html#getPrefixes(java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
  </Members>
</Type>
