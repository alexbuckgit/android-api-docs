<Type Name="Preferences" FullName="Java.Util.Prefs.Preferences">
  <TypeSignature Language="C#" Value="public abstract class Preferences : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Preferences extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/util/prefs/Preferences", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>An instance of the class <c>Preferences</c> represents one node in a
 preference tree, which provides a mechanism to store and access configuration
 data in a hierarchical way.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">An instance of the class <c>Preferences</c> represents one node in a
 preference tree, which provides a mechanism to store and access configuration
 data in a hierarchical way. Two hierarchy trees are maintained, one for
 system preferences shared by all users and the other for user preferences
 specific to the user. <c>Preferences</c> hierarchy trees and data are stored
 in an implementation-dependent back-end.
 </para>
      <para tool="javadoc-to-mdoc">
 Every node has one name and one unique absolute path following the same
 notational conventions as directories in a file system. The root node's
 name is "", and other node name strings cannot contain the slash character
 and cannot be empty. The root node's absolute path is "/", and all other
 nodes' absolute paths are constructed in the standard way: &lt;parent's
 absolute path&gt; + "/" + &lt;node's name&gt;. Since the set of nodes forms a
 tree with the root node at its base, all absolute paths start with the slash
 character. Every node has one relative path to each of its ancestors. The
 relative path doesn't start with slash: it equals the node's absolute path
 with leading substring removed corresponding to the ancestor's absolute path
 and a slash.
 </para>
      <para tool="javadoc-to-mdoc">
 Modification to preferences data may be asynchronous, which means that
 preference update method calls may return immediately instead of blocking.
 The <c>flush()</c> and <c>sync()</c> methods force the back-end to
 synchronously perform all pending updates, but the implementation is
 permitted to perform the modifications on the underlying back-end data
 at any time between the moment the request is made and the moment the
 <c>flush()</c> or <c>sync()</c> method returns. Please note that if the JVM
 exits normally, the implementation must assure all modifications are
 persisted implicitly.
 </para>
      <para tool="javadoc-to-mdoc">
 When invoking a method that retrieves preferences, the user must provide
 a default value. The default value is returned when the preferences cannot
 be found or the back-end is unavailable. Some other methods will throw
 <c>BackingStoreException</c> when the back-end is unavailable.
 </para>
      <para tool="javadoc-to-mdoc">
 Preferences can be exported to and imported from an XML files. These
 documents must have an XML DOCTYPE declaration:
 <example><code lang="java"></code></example>
 This system URI is not really accessed by network, it is only a
 identification string. Visit the DTD location to see the actual format
 permitted.
 </para>
      <para tool="javadoc-to-mdoc">
 There must be a concrete <c>PreferencesFactory</c> type for every concrete
 <c>Preferences</c> type developed. Every J2SE implementation must provide a
 default implementation for every supported platform, and must also provide a
 means of replacing the default implementation. This implementation uses the
 system property <c>java.util.prefs.PreferencesFactory</c> to determine which
 preferences implementation to use.
 </para>
      <para tool="javadoc-to-mdoc">
 The methods of this class are thread-safe. If multiple JVMs are using the
 same back-end concurrently, the back-end won't be corrupted, but no other
 behavior guarantees are made.<format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="T:Java.Util.Prefs.IPreferencesFactory" /></c></term></item></list></para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Preferences ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor, for use by subclasses only.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Default constructor, for use by subclasses only.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#Preferences()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Preferences (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AbsolutePath">
      <MemberSignature Language="C#" Value="public abstract string AbsolutePath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string AbsolutePath() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("absolutePath", "()Ljava/lang/String;", "GetAbsolutePathHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the absolute path string of this preference node.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the absolute path string of this preference node.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#absolutePath()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AddNodeChangeListener">
      <MemberSignature Language="C#" Value="public abstract void AddNodeChangeListener (Java.Util.Prefs.INodeChangeListener ncl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddNodeChangeListener(class Java.Util.Prefs.INodeChangeListener ncl) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addNodeChangeListener", "(Ljava/util/prefs/NodeChangeListener;)V", "GetAddNodeChangeListener_Ljava_util_prefs_NodeChangeListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ncl" Type="Java.Util.Prefs.INodeChangeListener" />
      </Parameters>
      <Docs>
        <param name="ncl">the listener to be registered.</param>
        <summary>Registers a <c>NodeChangeListener</c> instance for this node, which will
 handle <c>NodeChangeEvent</c>s.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Registers a <c>NodeChangeListener</c> instance for this node, which will
 handle <c>NodeChangeEvent</c>s. <c>NodeChangeEvent</c>s will be fired
 when a child node has been added to or removed from this node.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#addNodeChangeListener(java.util.prefs.NodeChangeListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the given listener is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="AddPreferenceChangeListener">
      <MemberSignature Language="C#" Value="public abstract void AddPreferenceChangeListener (Java.Util.Prefs.IPreferenceChangeListener pcl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddPreferenceChangeListener(class Java.Util.Prefs.IPreferenceChangeListener pcl) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addPreferenceChangeListener", "(Ljava/util/prefs/PreferenceChangeListener;)V", "GetAddPreferenceChangeListener_Ljava_util_prefs_PreferenceChangeListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcl" Type="Java.Util.Prefs.IPreferenceChangeListener" />
      </Parameters>
      <Docs>
        <param name="pcl">the listener to be registered.</param>
        <summary>Registers a <c>PreferenceChangeListener</c> instance for this node,
 which will handle <c>PreferenceChangeEvent</c>s.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Registers a <c>PreferenceChangeListener</c> instance for this node,
 which will handle <c>PreferenceChangeEvent</c>s. <c>PreferenceChangeEvent</c>s will be fired when a preference has been added
 to, removed from, or updated for this node.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#addPreferenceChangeListener(java.util.prefs.PreferenceChangeListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the given listener is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ChildrenNames">
      <MemberSignature Language="C#" Value="public abstract string[] ChildrenNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] ChildrenNames() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("childrenNames", "()[Ljava/lang/String;", "GetChildrenNamesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the names of all children of this node or an empty array if this
 node has no children.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the names of all children of this node or an empty array if this
 node has no children.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#childrenNames()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.Prefs.BackingStoreException">if backing store is unavailable or causes an operation
             failure.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public abstract void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clear", "()V", "GetClearHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all preferences of this node.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Removes all preferences of this node.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#clear()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.Prefs.BackingStoreException">if backing store is unavailable or causes an operation
             failure.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ExportNode">
      <MemberSignature Language="C#" Value="public abstract void ExportNode (System.IO.Stream ostream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportNode(class System.IO.Stream ostream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("exportNode", "(Ljava/io/OutputStream;)V", "GetExportNode_Ljava_io_OutputStream_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ostream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="ostream">the output stream to write the XML-formatted data to.</param>
        <summary>Exports all of the preferences of this node to a XML document using the
 given output stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Exports all of the preferences of this node to a XML document using the
 given output stream.
 </para>
          <para tool="javadoc-to-mdoc">
 This XML document uses the UTF-8 encoding and is written according to the
 DTD in its DOCTYPE declaration, which is the following:

 <example><code lang="xml">
 &lt;!DOCTYPE preferences SYSTEM "http://java.sun.com/dtd/preferences.dtd"&gt;
 </code></example><format type="text/html"><i>Please note that (unlike the methods of this class that don't concern
 serialization), this call is not thread-safe.</i></format></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#exportNode(java.io.OutputStream)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while exporting.</exception>
        <exception cref="T:Java.Util.Prefs.BackingStoreException">if the backing store is unavailable or causes an operation
             failure.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ExportNodeAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ExportNodeAsync (System.IO.Stream ostream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ExportNodeAsync(class System.IO.Stream ostream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ostream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="ostream">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportSubtree">
      <MemberSignature Language="C#" Value="public abstract void ExportSubtree (System.IO.Stream ostream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportSubtree(class System.IO.Stream ostream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("exportSubtree", "(Ljava/io/OutputStream;)V", "GetExportSubtree_Ljava_io_OutputStream_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ostream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="ostream">the output stream to write the XML-formatted data to.</param>
        <summary>Exports all of the preferences of this node and all its descendants to a
 XML document using the given output stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Exports all of the preferences of this node and all its descendants to a
 XML document using the given output stream.
 </para>
          <para tool="javadoc-to-mdoc">
 This XML document uses the UTF-8 encoding and is written according to the
 DTD in its DOCTYPE declaration, which is the following:

 <example><code lang="xml">
 &lt;!DOCTYPE preferences SYSTEM "http://java.sun.com/dtd/preferences.dtd"&gt;
 </code></example><format type="text/html"><i>Please note that (unlike the methods of this class that don't concern
 serialization), this call is not thread-safe.</i></format></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#exportSubtree(java.io.OutputStream)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while exporting.</exception>
        <exception cref="T:Java.Util.Prefs.BackingStoreException">if the backing store is unavailable or causes an operation
             failure.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ExportSubtreeAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ExportSubtreeAsync (System.IO.Stream ostream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ExportSubtreeAsync(class System.IO.Stream ostream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ostream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="ostream">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public abstract void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("flush", "()V", "GetFlushHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Forces all pending updates to this node and its descendants to be
 persisted in the backing store.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Forces all pending updates to this node and its descendants to be
 persisted in the backing store.
 </para>
          <para tool="javadoc-to-mdoc">
 If this node has been removed, the invocation of this method only flushes
 this node, not its descendants.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#flush()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.Prefs.BackingStoreException">if the backing store is unavailable or causes an operation
             failure.
</exception>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public abstract string Get (string key, string deflt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Get(string key, string deflt) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("get", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "GetGet_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="deflt" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">the preference key.</param>
        <param name="deflt">the default value, which will be returned if no value is
            mapped to the given key or no backing store is available.</param>
        <summary>Gets the <c>String</c> value mapped to the given key or its default
 value if no value is mapped or no backing store is available.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the <c>String</c> value mapped to the given key or its default
 value if no value is mapped or no backing store is available.
 </para>
          <para tool="javadoc-to-mdoc">
 Some implementations may store default values in backing stores. In this
 case, if there is no value mapped to the given key, the stored default
 value is returned.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#get(java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the parameter <c>key</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public abstract bool GetBoolean (string key, bool deflt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetBoolean(string key, bool deflt) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getBoolean", "(Ljava/lang/String;Z)Z", "GetGetBoolean_Ljava_lang_String_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="deflt" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">the preference key.</param>
        <param name="deflt">the default value, which will be returned if no value is
            mapped to the given key, if the backing store is unavailable,
            or if the value is invalid.</param>
        <summary>Gets the <c>boolean</c> value mapped to the given key or its default
 value if no value is mapped, if the backing store is unavailable, or if
 the value is invalid.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the <c>boolean</c> value mapped to the given key or its default
 value if no value is mapped, if the backing store is unavailable, or if
 the value is invalid.
 </para>
          <para tool="javadoc-to-mdoc">
 The only valid values are the <c>String</c> "true", which represents
 <c>true</c> and "false", which represents <c>false</c>, ignoring case.
 </para>
          <para tool="javadoc-to-mdoc">
 Some implementations may store default values in backing stores. In this
 case, if there is no value mapped to the given key, the stored default
 value is returned.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#getBoolean(java.lang.String, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the parameter <c>key</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetByteArray">
      <MemberSignature Language="C#" Value="public abstract byte[] GetByteArray (string key, byte[] deflt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetByteArray(string key, unsigned int8[] deflt) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getByteArray", "(Ljava/lang/String;[B)[B", "GetGetByteArray_Ljava_lang_String_arrayBHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="deflt" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="key">the preference key.</param>
        <param name="deflt">the default value, which will be returned if no value is
            mapped to the given key, if the backing store is unavailable,
            or if the value is invalid.</param>
        <summary>Gets the <c>byte</c> array value mapped to the given key or its default
 value if no value is mapped, if the backing store is unavailable, or if
 the value is an invalid string.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the <c>byte</c> array value mapped to the given key or its default
 value if no value is mapped, if the backing store is unavailable, or if
 the value is an invalid string.
 </para>
          <para tool="javadoc-to-mdoc">
 To be valid, the value string must be Base64-encoded binary data. The
 Base64 encoding is as defined in , section 6.8.
 </para>
          <para tool="javadoc-to-mdoc">
 Some implementations may store default values in backing stores. In this
 case, if there is no value mapped to the given key, the stored default
 value is returned.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#getByteArray(java.lang.String, byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the parameter <c>key</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public abstract double GetDouble (string key, double deflt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 GetDouble(string key, float64 deflt) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDouble", "(Ljava/lang/String;D)D", "GetGetDouble_Ljava_lang_String_DHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="deflt" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="key">the preference key.</param>
        <param name="deflt">the default value, which will be returned if no value is
            mapped to the given key, if the backing store is unavailable, or if the
            value is invalid.</param>
        <summary>Gets the <c>double</c> value mapped to the given key or its default
 value if no value is mapped, if the backing store is unavailable, or if
 the value is an invalid string.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the <c>double</c> value mapped to the given key or its default
 value if no value is mapped, if the backing store is unavailable, or if
 the value is an invalid string.
 </para>
          <para tool="javadoc-to-mdoc">
 To be valid, the value string must be a string that can be converted to a
 <c>double</c> by <c><see cref="M:Java.Lang.Double.ParseDouble(System.String)" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
 Some implementations may store default values in backing stores. In this
 case, if there is no value mapped to the given key, the stored default
 value is returned.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#getDouble(java.lang.String, double)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the parameter <c>key</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public abstract float GetFloat (string key, float deflt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetFloat(string key, float32 deflt) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getFloat", "(Ljava/lang/String;F)F", "GetGetFloat_Ljava_lang_String_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="deflt" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="key">the preference key.</param>
        <param name="deflt">the default value, which will be returned if no value is
            mapped to the given key, if the backing store is unavailable, or if the
            value is invalid.</param>
        <summary>Gets the <c>float</c> value mapped to the given key or its default value
 if no value is mapped, if the backing store is unavailable, or if the
 value is an invalid string.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the <c>float</c> value mapped to the given key or its default value
 if no value is mapped, if the backing store is unavailable, or if the
 value is an invalid string.
 </para>
          <para tool="javadoc-to-mdoc">
 To be valid, the value string must be a string that can be converted to a
 <c>float</c> by <c><see cref="M:Java.Lang.Float.ParseFloat(System.String)" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
 Some implementations may store default values in backing stores. In this
 case, if there is no value mapped to the given key, the stored default
 value is returned.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#getFloat(java.lang.String, float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the parameter <c>key</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt">
      <MemberSignature Language="C#" Value="public abstract int GetInt (string key, int deflt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetInt(string key, int32 deflt) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInt", "(Ljava/lang/String;I)I", "GetGetInt_Ljava_lang_String_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="deflt" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="key">the preference key.</param>
        <param name="deflt">the default value, which will be returned if no value is
            mapped to the given key, if the backing store is unavailable,
            or if the value is invalid.</param>
        <summary>Gets the <c>int</c> value mapped to the given key or its default value
 if no value is mapped, if the backing store is unavailable, or if the
 value is an invalid string.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the <c>int</c> value mapped to the given key or its default value
 if no value is mapped, if the backing store is unavailable, or if the
 value is an invalid string.
 </para>
          <para tool="javadoc-to-mdoc">
 To be valid, the value string must be a string that can be converted to
 an <c>int</c> by <c><see cref="M:Java.Lang.Integer.ParseInt(System.String)" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
 Some implementations may store default values in backing stores. In this
 case, if there is no value mapped to the given key, the stored default
 value is returned.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#getInt(java.lang.String, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the parameter <c>key</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetLong">
      <MemberSignature Language="C#" Value="public abstract long GetLong (string key, long deflt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetLong(string key, int64 deflt) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getLong", "(Ljava/lang/String;J)J", "GetGetLong_Ljava_lang_String_JHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="deflt" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="key">the preference key.</param>
        <param name="deflt">the default value, which will be returned if no value is
            mapped to the given key, if the backing store is unavailable,
            or if the value is invalid.</param>
        <summary>Gets the <c>long</c> value mapped to the given key or its default value
 if no value is mapped, if the backing store is unavailable, or if the
 value is an invalid string.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the <c>long</c> value mapped to the given key or its default value
 if no value is mapped, if the backing store is unavailable, or if the
 value is an invalid string.
 </para>
          <para tool="javadoc-to-mdoc">
 To be valid, the value string must be a string that can be converted to a
 <c>long</c> by <c><see cref="M:Java.Lang.Long.ParseLong(System.String)" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
 Some implementations may store default values in backing stores. In this
 case, if there is no value mapped to the given key, the stored default
 value is returned.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#getLong(java.lang.String, long)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the parameter <c>key</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportPreferences">
      <MemberSignature Language="C#" Value="public static void ImportPreferences (System.IO.Stream istream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ImportPreferences(class System.IO.Stream istream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("importPreferences", "(Ljava/io/InputStream;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="istream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="istream">the input stream to read the data from.</param>
        <summary>Imports all the preferences from an XML document using the given input
 stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Imports all the preferences from an XML document using the given input
 stream.
 </para>
          <para tool="javadoc-to-mdoc">
 This XML document uses the UTF-8 encoding and must be written according
 to the DTD in its DOCTYPE declaration, which must be the following:

 <example><code lang="xml">
 &lt;!DOCTYPE preferences SYSTEM "http://java.sun.com/dtd/preferences.dtd"&gt;
 </code></example><format type="text/html"><i>Please note that (unlike the methods of this class that don't concern
 serialization), this call is not thread-safe.</i></format></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#importPreferences(java.io.InputStream)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.Prefs.InvalidPreferencesFormatException">if the data read from the given input stream is not from a
             valid XML document.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while importing.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportPreferencesAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task ImportPreferencesAsync (System.IO.Stream istream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task ImportPreferencesAsync(class System.IO.Stream istream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="istream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="istream">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserNode">
      <MemberSignature Language="C#" Value="public abstract bool IsUserNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUserNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isUserNode", "()Z", "GetIsUserNodeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether this is a user preference node.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns whether this is a user preference node.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#isUserNode()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public abstract string[] Keys ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] Keys() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("keys", "()[Ljava/lang/String;", "GetKeysHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns all preference keys stored in this node or an empty array if no
 key was found.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns all preference keys stored in this node or an empty array if no
 key was found.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#keys()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.Prefs.BackingStoreException">if the backing store is unavailable or causes an operation
             failure.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxKeyLength">
      <MemberSignature Language="C#" Value="public const int MaxKeyLength = 80;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxKeyLength = (80)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MAX_KEY_LENGTH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>80</MemberValue>
      <Docs>
        <summary>Maximum size in characters allowed for a preferences key.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Maximum size in characters allowed for a preferences key.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#MAX_KEY_LENGTH" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MaxNameLength">
      <MemberSignature Language="C#" Value="public const int MaxNameLength = 80;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxNameLength = (80)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MAX_NAME_LENGTH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>80</MemberValue>
      <Docs>
        <summary>Maximum size in characters allowed for a preferences name.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Maximum size in characters allowed for a preferences name.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#MAX_NAME_LENGTH" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MaxValueLength">
      <MemberSignature Language="C#" Value="public const int MaxValueLength = 8192;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxValueLength = (8192)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MAX_VALUE_LENGTH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>8192</MemberValue>
      <Docs>
        <summary>Maximum size in characters allowed for a preferences value.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Maximum size in characters allowed for a preferences value.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#MAX_VALUE_LENGTH" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Name() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("name", "()Ljava/lang/String;", "GetNameHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the name of this node.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the name of this node.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#name()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Node">
      <MemberSignature Language="C#" Value="public abstract Java.Util.Prefs.Preferences Node (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Prefs.Preferences Node(string path) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("node", "(Ljava/lang/String;)Ljava/util/prefs/Preferences;", "GetNode_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Prefs.Preferences</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">the path name of the requested preference node.</param>
        <summary>Returns the preference node with the given path name.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the preference node with the given path name. The path name can
 be relative or absolute. The requested node and its ancestors will
 be created if they do not exist.
 </para>
          <para tool="javadoc-to-mdoc">
 The path is treated as relative to this node if it doesn't start with a
 slash, otherwise it will be treated as an absolute path.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#node(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the path name is invalid.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the given path is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="NodeExists">
      <MemberSignature Language="C#" Value="public abstract bool NodeExists (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool NodeExists(string path) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("nodeExists", "(Ljava/lang/String;)Z", "GetNodeExists_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">the path name of the preference node to query.</param>
        <summary>Returns whether the preference node with the given path name exists.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns whether the preference node with the given path name exists. The
 path is treated as relative to this node if it doesn't start with a slash,
 otherwise it is treated as an absolute path.
 </para>
          <para tool="javadoc-to-mdoc">
 Please note that if this node has been removed, an invocation of this
 node will throw an <c>IllegalStateException</c> unless the given path is
 an empty string, which will return <c>false</c>.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#nodeExists(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed and the path is not an empty
             string.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the path name is invalid.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the given path is <c>null</c>.</exception>
        <exception cref="T:Java.Util.Prefs.BackingStoreException">if the backing store is unavailable or causes an operation
             failure.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public abstract Java.Util.Prefs.Preferences Parent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Prefs.Preferences Parent() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parent", "()Ljava/util/prefs/Preferences;", "GetParentHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Prefs.Preferences</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the parent preference node of this node or <c>null</c> if this
 node is the root node.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the parent preference node of this node or <c>null</c> if this
 node is the root node.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#parent()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public abstract void Put (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Put(string key, string value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("put", "(Ljava/lang/String;Ljava/lang/String;)V", "GetPut_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">the preference key to be added or updated.</param>
        <param name="value">the preference value for the given key.</param>
        <summary>Adds a new preference to this node using the given key and value or
 updates the value if a preference with the given key already exists.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Adds a new preference to this node using the given key and value or
 updates the value if a preference with the given key already exists.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#put(java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the given key or value is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the given key's length is bigger than <c>MAX_KEY_LENGTH</c> or the value's length is bigger than <c>MAX_VALUE_LENGTH</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PutBoolean">
      <MemberSignature Language="C#" Value="public abstract void PutBoolean (string key, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PutBoolean(string key, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("putBoolean", "(Ljava/lang/String;Z)V", "GetPutBoolean_Ljava_lang_String_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">the preference key to be added or updated.</param>
        <param name="value">the preference <c>boolean</c> value for the given key.</param>
        <summary>Adds a new preference with a <c>boolean</c> value to this node using the
 given key and value or updates the value if a preference with the given
 key already exists.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Adds a new preference with a <c>boolean</c> value to this node using the
 given key and value or updates the value if a preference with the given
 key already exists.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#putBoolean(java.lang.String, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the given key is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the given key's length is bigger than <c>MAX_KEY_LENGTH</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PutByteArray">
      <MemberSignature Language="C#" Value="public abstract void PutByteArray (string key, byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PutByteArray(string key, unsigned int8[] value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("putByteArray", "(Ljava/lang/String;[B)V", "GetPutByteArray_Ljava_lang_String_arrayBHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="key">the preference key to be added or updated.</param>
        <param name="value">the preference value for the given key.</param>
        <summary>Adds a new preference to this node using the given key and the string
 form of the given value or updates the value if a preference with the
 given key already exists.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Adds a new preference to this node using the given key and the string
 form of the given value or updates the value if a preference with the
 given key already exists.
 </para>
          <para tool="javadoc-to-mdoc">
 The string form of the value is the Base64-encoded binary data of the
 given byte array. The Base64 encoding is as defined in , section 6.8.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#putByteArray(java.lang.String, byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the given key or value is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the given key's length is bigger than <c>MAX_KEY_LENGTH</c> or value's length is bigger than three
             quarters of <c>MAX_KEY_LENGTH</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PutDouble">
      <MemberSignature Language="C#" Value="public abstract void PutDouble (string key, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PutDouble(string key, float64 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("putDouble", "(Ljava/lang/String;D)V", "GetPutDouble_Ljava_lang_String_DHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="key">the preference key to be added or updated.</param>
        <param name="value">the preference value for the given key.</param>
        <summary>Adds a new preference to this node using the given key and <c>double</c>
 value or updates the value if a preference with the
 given key already exists.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Adds a new preference to this node using the given key and <c>double</c>
 value or updates the value if a preference with the
 given key already exists.
 </para>
          <para tool="javadoc-to-mdoc">
 The value is stored in its string form, which is the result of invoking
 <c><see cref="M:Java.Lang.Double.ToString(System.Double)" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#putDouble(java.lang.String, double)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the given key is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the given key's length is bigger than <c>MAX_KEY_LENGTH</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PutFloat">
      <MemberSignature Language="C#" Value="public abstract void PutFloat (string key, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PutFloat(string key, float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("putFloat", "(Ljava/lang/String;F)V", "GetPutFloat_Ljava_lang_String_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="key">the preference key to be added or updated.</param>
        <param name="value">the preference value for the given key.</param>
        <summary>Adds a new preference to this node using the given key and <c>float</c>
 value or updates the value if a preference with the
 given key already exists.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Adds a new preference to this node using the given key and <c>float</c>
 value or updates the value if a preference with the
 given key already exists.
 </para>
          <para tool="javadoc-to-mdoc">
 The value is stored in its string form, which is the result of invoking
 <c><see cref="M:Java.Lang.Float.ToString(System.Single)" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#putFloat(java.lang.String, float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the given key is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the given key's length is bigger than <c>MAX_KEY_LENGTH</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PutInt">
      <MemberSignature Language="C#" Value="public abstract void PutInt (string key, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PutInt(string key, int32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("putInt", "(Ljava/lang/String;I)V", "GetPutInt_Ljava_lang_String_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="key">the preference key to be added or updated.</param>
        <param name="value">the preference value for the given key.</param>
        <summary>Adds a new preference to this node using the given key and <c>int</c>
 value or updates the value if a preference with the
 given key already exists.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Adds a new preference to this node using the given key and <c>int</c>
 value or updates the value if a preference with the
 given key already exists.
 </para>
          <para tool="javadoc-to-mdoc">
 The value is stored in its string form, which is the result of invoking
 <c><see cref="M:Java.Lang.Integer.ToString(System.Int32)" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#putInt(java.lang.String, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the given key is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the given key's length is bigger than <c>MAX_KEY_LENGTH</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PutLong">
      <MemberSignature Language="C#" Value="public abstract void PutLong (string key, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PutLong(string key, int64 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("putLong", "(Ljava/lang/String;J)V", "GetPutLong_Ljava_lang_String_JHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="key">the preference key to be added or updated.</param>
        <param name="value">the preference value for the given key.</param>
        <summary>Adds a new preference to this node using the given key and <c>long</c>
 value or updates the value if a preference with the
 given key already exists.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Adds a new preference to this node using the given key and <c>long</c>
 value or updates the value if a preference with the
 given key already exists.
 </para>
          <para tool="javadoc-to-mdoc">
 The value is stored in its string form, which is the result of invoking
 <c><see cref="M:Java.Lang.Long.ToString(System.Int64)" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#putLong(java.lang.String, long)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the given key is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the given key's length is bigger than <c>MAX_KEY_LENGTH</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public abstract void Remove (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(string key) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("remove", "(Ljava/lang/String;)V", "GetRemove_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">the key of the preference to be removed.</param>
        <summary>Removes the preference mapped to the given key from this node.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Removes the preference mapped to the given key from this node.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#remove(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the given key is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveNode">
      <MemberSignature Language="C#" Value="public abstract void RemoveNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveNode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeNode", "()V", "GetRemoveNodeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes this preference node with all its descendants.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Removes this preference node with all its descendants. The removal won't
 necessarily be persisted until the method <c>flush()</c> is invoked.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#removeNode()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.Prefs.BackingStoreException">if the backing store is unavailable or causes an operation
             failure.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.</exception>
        <exception cref="T:Java.Lang.UnsupportedOperationException">if this is a root node.
</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveNodeChangeListener">
      <MemberSignature Language="C#" Value="public abstract void RemoveNodeChangeListener (Java.Util.Prefs.INodeChangeListener ncl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveNodeChangeListener(class Java.Util.Prefs.INodeChangeListener ncl) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeNodeChangeListener", "(Ljava/util/prefs/NodeChangeListener;)V", "GetRemoveNodeChangeListener_Ljava_util_prefs_NodeChangeListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ncl" Type="Java.Util.Prefs.INodeChangeListener" />
      </Parameters>
      <Docs>
        <param name="ncl">the listener to be removed.</param>
        <summary>Removes the given <c>NodeChangeListener</c> instance from this node.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Removes the given <c>NodeChangeListener</c> instance from this node.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#removeNodeChangeListener(java.util.prefs.NodeChangeListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the given listener is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="RemovePreferenceChangeListener">
      <MemberSignature Language="C#" Value="public abstract void RemovePreferenceChangeListener (Java.Util.Prefs.IPreferenceChangeListener pcl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemovePreferenceChangeListener(class Java.Util.Prefs.IPreferenceChangeListener pcl) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removePreferenceChangeListener", "(Ljava/util/prefs/PreferenceChangeListener;)V", "GetRemovePreferenceChangeListener_Ljava_util_prefs_PreferenceChangeListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcl" Type="Java.Util.Prefs.IPreferenceChangeListener" />
      </Parameters>
      <Docs>
        <param name="pcl">the listener to be removed.</param>
        <summary>Removes the given <c>PreferenceChangeListener</c> instance from this
 node.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Removes the given <c>PreferenceChangeListener</c> instance from this
 node.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#removePreferenceChangeListener(java.util.prefs.PreferenceChangeListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the given listener is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Sync">
      <MemberSignature Language="C#" Value="public abstract void Sync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sync() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sync", "()V", "GetSyncHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Synchronizes the data of this preference node and its descendants with
 the back-end preference store.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Synchronizes the data of this preference node and its descendants with
 the back-end preference store. Any changes found in the back-end data
 should be reflected in this node and its descendants, and at the same
 time any local changes to this node and descendants should be persisted.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#sync()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.Prefs.BackingStoreException">if the backing store is unavailable or causes an operation
             failure.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SyncAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SyncAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SyncAsync() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SystemNodeForPackage">
      <MemberSignature Language="C#" Value="public static Java.Util.Prefs.Preferences SystemNodeForPackage (Java.Lang.Class c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.Prefs.Preferences SystemNodeForPackage(class Java.Lang.Class c) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("systemNodeForPackage", "(Ljava/lang/Class;)Ljava/util/prefs/Preferences;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Prefs.Preferences</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="c">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SystemRoot">
      <MemberSignature Language="C#" Value="public static Java.Util.Prefs.Preferences SystemRoot ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.Prefs.Preferences SystemRoot() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("systemRoot", "()Ljava/util/prefs/Preferences;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Prefs.Preferences</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <i>Legacy code; do not use.</i> On Android, the Preference nodes
 corresponding to the "system" and "user" preferences are stored in sections
 of the file system that are inaccessible to apps.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">
            <i>Legacy code; do not use.</i> On Android, the Preference nodes
 corresponding to the "system" and "user" preferences are stored in sections
 of the file system that are inaccessible to apps. Further, allowing apps to set
 "system wide" preferences is contrary to android's security model.

 Returns the root node of the system preference hierarchy.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#systemRoot()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public abstract string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("toString", "()Ljava/lang/String;", "GetToStringHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a string representation of this node.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a string representation of this node. The format is "User/System
 Preference Node: " followed by this node's absolute path.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#toString()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="UserNodeForPackage">
      <MemberSignature Language="C#" Value="public static Java.Util.Prefs.Preferences UserNodeForPackage (Java.Lang.Class c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.Prefs.Preferences UserNodeForPackage(class Java.Lang.Class c) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("userNodeForPackage", "(Ljava/lang/Class;)Ljava/util/prefs/Preferences;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Prefs.Preferences</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="c">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserRoot">
      <MemberSignature Language="C#" Value="public static Java.Util.Prefs.Preferences UserRoot ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.Prefs.Preferences UserRoot() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("userRoot", "()Ljava/util/prefs/Preferences;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Prefs.Preferences</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <i>Legacy code; do not use.</i> On Android, the Preference nodes
 corresponding to the "system" and "user" preferences are stored in sections
 of the file system that are inaccessible to apps.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">
            <i>Legacy code; do not use.</i> On Android, the Preference nodes
 corresponding to the "system" and "user" preferences are stored in sections
 of the file system that are inaccessible to apps. Further, allowing apps to set
 "system wide" preferences is contrary to android's security model.

 Returns the root node of the user preference hierarchy.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/prefs/Preferences.html#userRoot()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
