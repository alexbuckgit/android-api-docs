<Type Name="IReadWriteLock" FullName="Java.Util.Concurrent.Locks.IReadWriteLock">
  <TypeSignature Language="C#" Value="public interface IReadWriteLock : Android.Runtime.IJavaObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IReadWriteLock implements class Android.Runtime.IJavaObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/util/concurrent/locks/ReadWriteLock", "", "Java.Util.Concurrent.Locks.IReadWriteLockInvoker")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A <c>ReadWriteLock</c> maintains a pair of associated <c><see cref="T:Java.Util.Concurrent.Locks.ILock" /></c>, one for read-only operations and one for writing.</summary>
    <remarks />
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="ReadLock">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.Locks.ILock ReadLock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.Locks.ILock ReadLock() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readLock", "()Ljava/util/concurrent/locks/Lock;", "GetReadLockHandler:Java.Util.Concurrent.Locks.IReadWriteLockInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.Locks.ILock</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the lock used for reading.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WriteLock">
      <MemberSignature Language="C#" Value="public Java.Util.Concurrent.Locks.ILock WriteLock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Concurrent.Locks.ILock WriteLock() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeLock", "()Ljava/util/concurrent/locks/Lock;", "GetWriteLockHandler:Java.Util.Concurrent.Locks.IReadWriteLockInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.Locks.ILock</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the lock used for writing.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
