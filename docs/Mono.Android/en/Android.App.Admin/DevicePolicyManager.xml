<Type Name="DevicePolicyManager" FullName="Android.App.Admin.DevicePolicyManager">
  <TypeSignature Language="C#" Value="public class DevicePolicyManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DevicePolicyManager extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/app/admin/DevicePolicyManager", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="8">
    <summary>Public interface for managing policies enforced on a device.</summary>
    <remarks />
    <since version="Added in API level 8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DevicePolicyManager (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ActionAddDeviceAdmin">
      <MemberSignature Language="C#" Value="public const string ActionAddDeviceAdmin;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionAddDeviceAdmin" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACTION_ADD_DEVICE_ADMIN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Activity action: ask the user to add a new device administrator to the system.</summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ActionProvisionManagedProfile">
      <MemberSignature Language="C#" Value="public const string ActionProvisionManagedProfile;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionProvisionManagedProfile" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACTION_PROVISION_MANAGED_PROFILE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Activity action: Starts the provisioning flow which sets up a managed profile.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ActionSetNewPassword">
      <MemberSignature Language="C#" Value="public const string ActionSetNewPassword;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionSetNewPassword" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACTION_SET_NEW_PASSWORD")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Activity action: have the user enter a new password.</summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ActionStartEncryption">
      <MemberSignature Language="C#" Value="public const string ActionStartEncryption;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionStartEncryption" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACTION_START_ENCRYPTION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Activity action: begin the process of encrypting data on the device.</summary>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="ActiveAdmins">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Content.ComponentName&gt; ActiveAdmins { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Content.ComponentName&gt; ActiveAdmins" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getActiveAdmins", "()Ljava/util/List;", "GetGetActiveAdminsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.ComponentName&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return a list of all currently active device administrators' component
 names.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="AddCrossProfileIntentFilter">
      <MemberSignature Language="C#" Value="public virtual void AddCrossProfileIntentFilter (Android.Content.ComponentName admin, Android.Content.IntentFilter filter, Android.App.Admin.DevicePolicyManagerFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddCrossProfileIntentFilter(class Android.Content.ComponentName admin, class Android.Content.IntentFilter filter, valuetype Android.App.Admin.DevicePolicyManagerFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addCrossProfileIntentFilter", "(Landroid/content/ComponentName;Landroid/content/IntentFilter;I)V", "GetAddCrossProfileIntentFilter_Landroid_content_ComponentName_Landroid_content_IntentFilter_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="filter" Type="Android.Content.IntentFilter" />
        <Parameter Name="flags" Type="Android.App.Admin.DevicePolicyManagerFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <param name="filter">The <c><see cref="T:Android.Content.IntentFilter" /></c> the intent has to match to be also resolved in the
 other profile</param>
        <param name="flags">
          <c>
            <see cref="F:Android.App.Admin.DevicePolicyManager.FlagManagedCanAccessParent" />
          </c> and
 <c><see cref="F:Android.App.Admin.DevicePolicyManager.FlagParentCanAccessManaged" /></c> are supported.
</param>
        <summary>Called by the profile owner of a managed profile so that some intents sent in the managed
 profile can also be resolved in the parent, or vice versa.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AddCrossProfileWidgetProvider">
      <MemberSignature Language="C#" Value="public virtual bool AddCrossProfileWidgetProvider (Android.Content.ComponentName admin, string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AddCrossProfileWidgetProvider(class Android.Content.ComponentName admin, string packageName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addCrossProfileWidgetProvider", "(Landroid/content/ComponentName;Ljava/lang/String;)Z", "GetAddCrossProfileWidgetProvider_Landroid_content_ComponentName_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <param name="packageName">The package from which widget providers are white-listed.</param>
        <summary>Called by the profile owner of a managed profile to enable widget providers from a
 given package to be available in the parent profile.</summary>
        <returns>To be added.</returns>
        <remarks />
        <altmember cref="M:Android.App.Admin.DevicePolicyManager.RemoveCrossProfileWidgetProvider(Android.Content.ComponentName, System.String)" />
        <altmember cref="M:Android.App.Admin.DevicePolicyManager.GetCrossProfileWidgetProviders(Android.Content.ComponentName)" />
      </Docs>
    </Member>
    <Member MemberName="AddPersistentPreferredActivity">
      <MemberSignature Language="C#" Value="public virtual void AddPersistentPreferredActivity (Android.Content.ComponentName admin, Android.Content.IntentFilter filter, Android.Content.ComponentName activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddPersistentPreferredActivity(class Android.Content.ComponentName admin, class Android.Content.IntentFilter filter, class Android.Content.ComponentName activity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addPersistentPreferredActivity", "(Landroid/content/ComponentName;Landroid/content/IntentFilter;Landroid/content/ComponentName;)V", "GetAddPersistentPreferredActivity_Landroid_content_ComponentName_Landroid_content_IntentFilter_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="filter" Type="Android.Content.IntentFilter" />
        <Parameter Name="activity" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <param name="filter">The IntentFilter for which a default handler is added.</param>
        <param name="activity">The Activity that is added as default intent handler.
</param>
        <summary>Called by a profile owner or device owner to add a default intent handler activity for
 intents that match a certain intent filter.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AddUserRestriction">
      <MemberSignature Language="C#" Value="public virtual void AddUserRestriction (Android.Content.ComponentName admin, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddUserRestriction(class Android.Content.ComponentName admin, string key) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addUserRestriction", "(Landroid/content/ComponentName;Ljava/lang/String;)V", "GetAddUserRestriction_Landroid_content_ComponentName_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated
            with.</param>
        <param name="key">The key of the restriction. See the constants in
            <c><see cref="T:Android.OS.UserManager" /></c> for the list of keys.
</param>
        <summary>Called by a profile or device owner to set a user restriction specified by the key.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AutoTimeRequired">
      <MemberSignature Language="C#" Value="public virtual bool AutoTimeRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoTimeRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAutoTimeRequired", "()Z", "GetGetAutoTimeRequiredHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ClearCrossProfileIntentFilters">
      <MemberSignature Language="C#" Value="public virtual void ClearCrossProfileIntentFilters (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearCrossProfileIntentFilters(class Android.Content.ComponentName admin) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearCrossProfileIntentFilters", "(Landroid/content/ComponentName;)V", "GetClearCrossProfileIntentFilters_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.
</param>
        <summary>Called by a profile owner of a managed profile to remove the cross-profile intent filters
 that go from the managed profile to the parent, or from the parent to the managed profile.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ClearDeviceOwnerApp">
      <MemberSignature Language="C#" Value="public virtual void ClearDeviceOwnerApp (string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearDeviceOwnerApp(string packageName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearDeviceOwnerApp", "(Ljava/lang/String;)V", "GetClearDeviceOwnerApp_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">The package name of the device owner.
</param>
        <summary>Clears the current device owner.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ClearPackagePersistentPreferredActivities">
      <MemberSignature Language="C#" Value="public virtual void ClearPackagePersistentPreferredActivities (Android.Content.ComponentName admin, string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearPackagePersistentPreferredActivities(class Android.Content.ComponentName admin, string packageName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearPackagePersistentPreferredActivities", "(Landroid/content/ComponentName;Ljava/lang/String;)V", "GetClearPackagePersistentPreferredActivities_Landroid_content_ComponentName_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <param name="packageName">The name of the package for which preferences are removed.
</param>
        <summary>Called by a profile owner or device owner to remove all persistent intent handler preferences
 associated with the given package that were set by <c><see cref="M:Android.App.Admin.DevicePolicyManager.AddPersistentPreferredActivity(Android.Content.ComponentName, Android.Content.IntentFilter, Android.Content.IntentFilter)" /></c>.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ClearUserRestriction">
      <MemberSignature Language="C#" Value="public virtual void ClearUserRestriction (Android.Content.ComponentName admin, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearUserRestriction(class Android.Content.ComponentName admin, string key) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearUserRestriction", "(Landroid/content/ComponentName;Ljava/lang/String;)V", "GetClearUserRestriction_Landroid_content_ComponentName_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated
            with.</param>
        <param name="key">The key of the restriction. See the constants in
            <c><see cref="T:Android.OS.UserManager" /></c> for the list of keys.
</param>
        <summary>Called by a profile or device owner to clear a user restriction specified by the key.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CreateAndInitializeUser">
      <MemberSignature Language="C#" Value="public virtual Android.OS.UserHandle CreateAndInitializeUser (Android.Content.ComponentName admin, string name, string ownerName, Android.Content.ComponentName profileOwnerComponent, Android.OS.Bundle adminExtras);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.UserHandle CreateAndInitializeUser(class Android.Content.ComponentName admin, string name, string ownerName, class Android.Content.ComponentName profileOwnerComponent, class Android.OS.Bundle adminExtras) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createAndInitializeUser", "(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;Landroid/os/Bundle;)Landroid/os/UserHandle;", "GetCreateAndInitializeUser_Landroid_content_ComponentName_Ljava_lang_String_Ljava_lang_String_Landroid_content_ComponentName_Landroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.UserHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ownerName" Type="System.String" />
        <Parameter Name="profileOwnerComponent" Type="Android.Content.ComponentName" />
        <Parameter Name="adminExtras" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <param name="name">the user's name</param>
        <param name="ownerName">the human readable name of the organisation associated with this DPM.</param>
        <param name="profileOwnerComponent">The <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> that will be an active admin on
      the user.</param>
        <param name="adminExtras">Extras that will be passed to onEnable of the admin receiver
      on the new user.</param>
        <summary>Called by a device owner to create a user with the specified name.</summary>
        <returns>To be added.</returns>
        <remarks />
        <altmember cref="T:Android.OS.UserHandle" />
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public virtual Android.OS.UserHandle CreateUser (Android.Content.ComponentName admin, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.UserHandle CreateUser(class Android.Content.ComponentName admin, string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createUser", "(Landroid/content/ComponentName;Ljava/lang/String;)Landroid/os/UserHandle;", "GetCreateUser_Landroid_content_ComponentName_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.UserHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <param name="name">the user's name</param>
        <summary>Called by a device owner to create a user with the specified name.</summary>
        <returns>To be added.</returns>
        <remarks />
        <altmember cref="T:Android.OS.UserHandle" />
      </Docs>
    </Member>
    <Member MemberName="CurrentFailedPasswordAttempts">
      <MemberSignature Language="C#" Value="public virtual int CurrentFailedPasswordAttempts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentFailedPasswordAttempts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCurrentFailedPasswordAttempts", "()I", "GetGetCurrentFailedPasswordAttemptsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the number of times the user has failed at entering a
 password since that last successful password entry.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="EnableSystemApp">
      <MemberSignature Language="C#" Value="public virtual int EnableSystemApp (Android.Content.ComponentName admin, Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 EnableSystemApp(class Android.Content.ComponentName admin, class Android.Content.Intent intent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("enableSystemApp", "(Landroid/content/ComponentName;Landroid/content/Intent;)I", "GetEnableSystemApp_Landroid_content_ComponentName_Landroid_content_Intent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <param name="intent">An intent matching the app(s) to be installed. All apps that resolve for this
               intent will be re-enabled in the current profile.</param>
        <summary tool="true">Called by profile or device owners to re-enable system apps by intent that were disabled
 by default when the user was initialized.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="EnableSystemApp">
      <MemberSignature Language="C#" Value="public virtual void EnableSystemApp (Android.Content.ComponentName admin, string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnableSystemApp(class Android.Content.ComponentName admin, string packageName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("enableSystemApp", "(Landroid/content/ComponentName;Ljava/lang/String;)V", "GetEnableSystemApp_Landroid_content_ComponentName_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <param name="packageName">The package to be re-enabled in the current profile.
</param>
        <summary>Called by profile or device owners to re-enable a system app that was disabled by default
 when the user was initialized.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ExtraAddExplanation">
      <MemberSignature Language="C#" Value="public const string ExtraAddExplanation;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraAddExplanation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_ADD_EXPLANATION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An optional CharSequence providing additional explanation for why the
 admin is being added.</summary>
        <remarks />
        <since version="Added in API level 8" />
        <altmember cref="F:Android.App.Admin.DevicePolicyManager.ActionAddDeviceAdmin" />
      </Docs>
    </Member>
    <Member MemberName="ExtraDeviceAdmin">
      <MemberSignature Language="C#" Value="public const string ExtraDeviceAdmin;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraDeviceAdmin" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_DEVICE_ADMIN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The ComponentName of the administrator component.</summary>
        <remarks />
        <since version="Added in API level 8" />
        <altmember cref="F:Android.App.Admin.DevicePolicyManager.ActionAddDeviceAdmin" />
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningAdminExtrasBundle">
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningAdminExtrasBundle;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningAdminExtrasBundle" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_PROVISIONING_ADMIN_EXTRAS_BUNDLE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <c><see cref="T:Android.OS.Parcelable" /></c> extra of type <c><see cref="T:Android.OS.PersistableBundle" /></c> that
 allows a mobile device management application or NFC programmer application which starts
 managed provisioning to pass data to the management application instance after provisioning.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningDeviceAdminPackageChecksum">
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningDeviceAdminPackageChecksum;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningDeviceAdminPackageChecksum" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A String extra holding the URL-safe base64 encoded SHA-256 or SHA-1 hash (see notes below) of
 the file at download location specified in
 <c><see cref="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningDeviceAdminPackageDownloadLocation" /></c>.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningDeviceAdminPackageDownloadCookieHeader">
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningDeviceAdminPackageDownloadCookieHeader;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningDeviceAdminPackageDownloadCookieHeader" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_DOWNLOAD_COOKIE_HEADER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A String extra holding a http cookie header which should be used in the http request to the
 url specified in <c><see cref="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningDeviceAdminPackageDownloadLocation" /></c>.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningDeviceAdminPackageDownloadLocation">
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningDeviceAdminPackageDownloadLocation;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningDeviceAdminPackageDownloadLocation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_DOWNLOAD_LOCATION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A String extra holding a url that specifies the download location of the device admin
 package.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningDeviceAdminPackageName">
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningDeviceAdminPackageName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningDeviceAdminPackageName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_NAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A String extra holding the package name of the mobile device management application that
 will be set as the profile owner or device owner.</summary>
        <remarks />
        <altmember cref="T:Android.App.Admin.DeviceAdminReceiver" />
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningEmailAddress">
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningEmailAddress;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningEmailAddress" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_PROVISIONING_EMAIL_ADDRESS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A String extra that, holds the email address of the account which a managed profile is
 created for.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningLocale">
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningLocale;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningLocale" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_PROVISIONING_LOCALE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A String extra holding the <c><see cref="T:Java.Util.Locale" /></c> that the device will be set to.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningLocalTime">
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningLocalTime;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningLocalTime" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_PROVISIONING_LOCAL_TIME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A Long extra holding the wall clock time (in milliseconds) to be set on the device's
 <c><see cref="T:Android.App.AlarmManager" /></c>.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningTimeZone">
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningTimeZone;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningTimeZone" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_PROVISIONING_TIME_ZONE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A String extra holding the time zone <c><see cref="T:Android.App.AlarmManager" /></c> that the device
 will be set to.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningWifiHidden">
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningWifiHidden;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningWifiHidden" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_HIDDEN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A boolean extra indicating whether the wifi network in <c><see cref="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningWifiSsid" /></c>
 is hidden or not.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningWifiPacUrl">
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningWifiPacUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningWifiPacUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_PAC_URL")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A String extra holding the proxy auto-config (PAC) URL for the wifi network in
 <c><see cref="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningWifiSsid" /></c>.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningWifiPassword">
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningWifiPassword;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningWifiPassword" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_PASSWORD")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A String extra holding the password of the wifi network in
 <c><see cref="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningWifiSsid" /></c>.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningWifiProxyBypass">
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningWifiProxyBypass;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningWifiProxyBypass" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_PROXY_BYPASS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A String extra holding the proxy bypass for the wifi network in
 <c><see cref="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningWifiSsid" /></c>.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningWifiProxyHost">
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningWifiProxyHost;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningWifiProxyHost" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_PROXY_HOST")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A String extra holding the proxy host for the wifi network in
 <c><see cref="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningWifiSsid" /></c>.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningWifiProxyPort">
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningWifiProxyPort;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningWifiProxyPort" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_PROXY_PORT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An int extra holding the proxy port for the wifi network in
 <c><see cref="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningWifiSsid" /></c>.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningWifiSecurityType">
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningWifiSecurityType;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningWifiSecurityType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_SECURITY_TYPE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A String extra indicating the security type of the wifi network in
 <c><see cref="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningWifiSsid" /></c>.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningWifiSsid">
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningWifiSsid;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningWifiSsid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_SSID")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A String extra holding the ssid of the wifi network that should be used during nfc device
 owner provisioning for downloading the mobile device management application.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FlagManagedCanAccessParent">
      <MemberSignature Language="C#" Value="public const Android.App.Admin.DevicePolicyManagerFlags FlagManagedCanAccessParent = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.DevicePolicyManagerFlags FlagManagedCanAccessParent = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FLAG_MANAGED_CAN_ACCESS_PARENT")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.DevicePolicyManagerFlags enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.DevicePolicyManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Flag used by <c><see cref="M:Android.App.Admin.DevicePolicyManager.AddCrossProfileIntentFilter(Android.Content.ComponentName, Android.Content.IntentFilter, Android.Content.IntentFilter)" /></c> to allow activities in
 the managed profile to access intents sent from the parent profile.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FlagParentCanAccessManaged">
      <MemberSignature Language="C#" Value="public const Android.App.Admin.DevicePolicyManagerFlags FlagParentCanAccessManaged = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.DevicePolicyManagerFlags FlagParentCanAccessManaged = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FLAG_PARENT_CAN_ACCESS_MANAGED")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.DevicePolicyManagerFlags enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.DevicePolicyManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Flag used by <c><see cref="M:Android.App.Admin.DevicePolicyManager.AddCrossProfileIntentFilter(Android.Content.ComponentName, Android.Content.IntentFilter, Android.Content.IntentFilter)" /></c> to allow activities in
 the parent profile to access intents sent from the managed profile.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FromContext">
      <MemberSignature Language="C#" Value="public static Android.App.Admin.DevicePolicyManager FromContext (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.Admin.DevicePolicyManager FromContext(class Android.Content.Context context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.App.Admin.DevicePolicyManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetAccountTypesWithManagementDisabled">
      <MemberSignature Language="C#" Value="public virtual string[] GetAccountTypesWithManagementDisabled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetAccountTypesWithManagementDisabled() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getAccountTypesWithManagementDisabled", "()[Ljava/lang/String;", "GetGetAccountTypesWithManagementDisabledHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the array of accounts for which account management is disabled by the profile owner.</summary>
        <returns>To be added.</returns>
        <remarks />
        <altmember cref="M:Android.App.Admin.DevicePolicyManager.SetAccountManagementDisabled(Android.Content.ComponentName, System.String, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetApplicationRestrictions">
      <MemberSignature Language="C#" Value="public virtual Android.OS.Bundle GetApplicationRestrictions (Android.Content.ComponentName admin, string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.Bundle GetApplicationRestrictions(class Android.Content.ComponentName admin, string packageName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getApplicationRestrictions", "(Landroid/content/ComponentName;Ljava/lang/String;)Landroid/os/Bundle;", "GetGetApplicationRestrictions_Landroid_content_ComponentName_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Bundle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <param name="packageName">The name of the package to fetch restricted settings of.</param>
        <summary>Called by a profile or device owner to get the application restrictions for a given target
 application running in the profile.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetCameraDisabled">
      <MemberSignature Language="C#" Value="public virtual bool GetCameraDisabled (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetCameraDisabled(class Android.Content.ComponentName admin) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getCameraDisabled", "(Landroid/content/ComponentName;)Z", "GetGetCameraDisabled_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">The name of the admin component to check, or <c>null</c> to check whether any admins
 have disabled the camera
</param>
        <summary>Determine whether or not the device's cameras have been disabled for this user,
 either by the current admin, if specified, or all admins.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="GetCrossProfileCallerIdDisabled">
      <MemberSignature Language="C#" Value="public virtual bool GetCrossProfileCallerIdDisabled (Android.Content.ComponentName who);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetCrossProfileCallerIdDisabled(class Android.Content.ComponentName who) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getCrossProfileCallerIdDisabled", "(Landroid/content/ComponentName;)Z", "GetGetCrossProfileCallerIdDisabled_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="who" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="who">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.
</param>
        <summary>Called by a profile owner of a managed profile to determine whether or not caller-Id
 information has been disabled.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetCrossProfileWidgetProviders">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetCrossProfileWidgetProviders (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetCrossProfileWidgetProviders(class Android.Content.ComponentName admin) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getCrossProfileWidgetProviders", "(Landroid/content/ComponentName;)Ljava/util/List;", "GetGetCrossProfileWidgetProviders_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <summary>Called by the profile owner of a managed profile to query providers from which packages are
 available in the parent profile.</summary>
        <returns>To be added.</returns>
        <remarks />
        <altmember cref="M:Android.App.Admin.DevicePolicyManager.AddCrossProfileWidgetProvider(Android.Content.ComponentName, System.String)" />
        <altmember cref="M:Android.App.Admin.DevicePolicyManager.RemoveCrossProfileWidgetProvider(Android.Content.ComponentName, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetInstalledCaCerts">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;byte[]&gt; GetInstalledCaCerts (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;unsigned int8[]&gt; GetInstalledCaCerts(class Android.Content.ComponentName admin) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInstalledCaCerts", "(Landroid/content/ComponentName;)Ljava/util/List;", "GetGetInstalledCaCerts_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with, or
              <c>null</c> if calling from a delegated certificate installer.</param>
        <summary>Returns all CA certificates that are currently trusted, excluding system CA certificates.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetKeyguardDisabledFeatures">
      <MemberSignature Language="C#" Value="public virtual Android.App.Admin.KeyguardDisable GetKeyguardDisabledFeatures (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.App.Admin.KeyguardDisable GetKeyguardDisabledFeatures(class Android.Content.ComponentName admin) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getKeyguardDisabledFeatures", "(Landroid/content/ComponentName;)I", "GetGetKeyguardDisabledFeatures_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.KeyguardDisable</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">The name of the admin component to check, or <c>null</c> to check whether any admins
 have disabled features in keyguard.</param>
        <summary>Determine whether or not features have been disabled in keyguard either by the current
 admin, if specified, or all admins.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="GetMaximumFailedPasswordsForWipe">
      <MemberSignature Language="C#" Value="public virtual int GetMaximumFailedPasswordsForWipe (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMaximumFailedPasswordsForWipe(class Android.Content.ComponentName admin) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getMaximumFailedPasswordsForWipe", "(Landroid/content/ComponentName;)I", "GetGetMaximumFailedPasswordsForWipe_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">The name of the admin component to check, or <c>null</c> to aggregate
 all admins.
</param>
        <summary>Retrieve the current maximum number of login attempts that are allowed
 before the device wipes itself, for all admins of this user and its profiles
 or a particular one.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetMaximumTimeToLock">
      <MemberSignature Language="C#" Value="public virtual long GetMaximumTimeToLock (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetMaximumTimeToLock(class Android.Content.ComponentName admin) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getMaximumTimeToLock", "(Landroid/content/ComponentName;)J", "GetGetMaximumTimeToLock_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">The name of the admin component to check, or <c>null</c> to aggregate
 all admins.</param>
        <summary>Retrieve the current maximum time to unlock for all admins of this user
 and its profiles or a particular one.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetPasswordExpiration">
      <MemberSignature Language="C#" Value="public virtual long GetPasswordExpiration (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetPasswordExpiration(class Android.Content.ComponentName admin) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPasswordExpiration", "(Landroid/content/ComponentName;)J", "GetGetPasswordExpiration_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">The name of the admin component to check, or <c>null</c> to aggregate all admins.</param>
        <summary>Get the current password expiration time for the given admin or an aggregate of
 all admins of this user and its profiles if admin is null.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetPasswordExpirationTimeout">
      <MemberSignature Language="C#" Value="public virtual long GetPasswordExpirationTimeout (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetPasswordExpirationTimeout(class Android.Content.ComponentName admin) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPasswordExpirationTimeout", "(Landroid/content/ComponentName;)J", "GetGetPasswordExpirationTimeout_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">The name of the admin component to check, or <c>null</c> to aggregate all admins.</param>
        <summary>Get the password expiration timeout for the given admin.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetPasswordHistoryLength">
      <MemberSignature Language="C#" Value="public virtual int GetPasswordHistoryLength (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetPasswordHistoryLength(class Android.Content.ComponentName admin) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPasswordHistoryLength", "(Landroid/content/ComponentName;)I", "GetGetPasswordHistoryLength_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">The name of the admin component to check, or <c>null</c> to aggregate
 all admins.</param>
        <summary>Retrieve the current password history length for all admins of this
 user and its profiles or a particular one.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetPasswordMaximumLength">
      <MemberSignature Language="C#" Value="public virtual int GetPasswordMaximumLength (Android.App.Admin.PasswordQuality quality);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetPasswordMaximumLength(valuetype Android.App.Admin.PasswordQuality quality) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPasswordMaximumLength", "(I)I", "GetGetPasswordMaximumLength_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quality" Type="Android.App.Admin.PasswordQuality">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="quality">The quality being interrogated.</param>
        <summary>Return the maximum password length that the device supports for a
 particular password quality.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetPasswordMinimumLength">
      <MemberSignature Language="C#" Value="public virtual int GetPasswordMinimumLength (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetPasswordMinimumLength(class Android.Content.ComponentName admin) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPasswordMinimumLength", "(Landroid/content/ComponentName;)I", "GetGetPasswordMinimumLength_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">The name of the admin component to check, or <c>null</c> to aggregate
 all admins.
</param>
        <summary>Retrieve the current minimum password length for all admins of this
 user and its profiles or a particular one.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetPasswordMinimumLetters">
      <MemberSignature Language="C#" Value="public virtual int GetPasswordMinimumLetters (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetPasswordMinimumLetters(class Android.Content.ComponentName admin) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPasswordMinimumLetters", "(Landroid/content/ComponentName;)I", "GetGetPasswordMinimumLetters_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">The name of the admin component to check, or <c>null</c> to
            aggregate all admins.</param>
        <summary>Retrieve the current number of letters required in the password for all
 admins or a particular one.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetPasswordMinimumLowerCase">
      <MemberSignature Language="C#" Value="public virtual int GetPasswordMinimumLowerCase (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetPasswordMinimumLowerCase(class Android.Content.ComponentName admin) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPasswordMinimumLowerCase", "(Landroid/content/ComponentName;)I", "GetGetPasswordMinimumLowerCase_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">The name of the admin component to check, or <c>null</c> to
            aggregate all admins.</param>
        <summary>Retrieve the current number of lower case letters required in the
 password for all admins of this user and its profiles or a particular one.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetPasswordMinimumNonLetter">
      <MemberSignature Language="C#" Value="public virtual int GetPasswordMinimumNonLetter (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetPasswordMinimumNonLetter(class Android.Content.ComponentName admin) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPasswordMinimumNonLetter", "(Landroid/content/ComponentName;)I", "GetGetPasswordMinimumNonLetter_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">The name of the admin component to check, or <c>null</c> to
            aggregate all admins.</param>
        <summary>Retrieve the current number of non-letter characters required in the
 password for all admins of this user and its profiles or a particular one.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetPasswordMinimumNumeric">
      <MemberSignature Language="C#" Value="public virtual int GetPasswordMinimumNumeric (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetPasswordMinimumNumeric(class Android.Content.ComponentName admin) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPasswordMinimumNumeric", "(Landroid/content/ComponentName;)I", "GetGetPasswordMinimumNumeric_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">The name of the admin component to check, or <c>null</c> to
            aggregate all admins.</param>
        <summary>Retrieve the current number of numerical digits required in the password
 for all admins of this user and its profiles or a particular one.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetPasswordMinimumSymbols">
      <MemberSignature Language="C#" Value="public virtual int GetPasswordMinimumSymbols (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetPasswordMinimumSymbols(class Android.Content.ComponentName admin) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPasswordMinimumSymbols", "(Landroid/content/ComponentName;)I", "GetGetPasswordMinimumSymbols_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">The name of the admin component to check, or <c>null</c> to
            aggregate all admins.</param>
        <summary>Retrieve the current number of symbols required in the password for all
 admins or a particular one.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetPasswordMinimumUpperCase">
      <MemberSignature Language="C#" Value="public virtual int GetPasswordMinimumUpperCase (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetPasswordMinimumUpperCase(class Android.Content.ComponentName admin) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPasswordMinimumUpperCase", "(Landroid/content/ComponentName;)I", "GetGetPasswordMinimumUpperCase_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">The name of the admin component to check, or <c>null</c> to
            aggregate all admins.</param>
        <summary>Retrieve the current number of upper case letters required in the
 password for all admins of this user and its profiles or a particular one.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetPasswordQuality">
      <MemberSignature Language="C#" Value="public virtual Android.App.Admin.PasswordQuality GetPasswordQuality (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.App.Admin.PasswordQuality GetPasswordQuality(class Android.Content.ComponentName admin) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPasswordQuality", "(Landroid/content/ComponentName;)I", "GetGetPasswordQuality_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.PasswordQuality</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">The name of the admin component to check, or <c>null</c> to aggregate
 all admins.
</param>
        <summary>Retrieve the current minimum password quality for all admins of this user
 and its profiles or a particular one.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetPermittedAccessibilityServices">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetPermittedAccessibilityServices (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetPermittedAccessibilityServices(class Android.Content.ComponentName admin) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPermittedAccessibilityServices", "(Landroid/content/ComponentName;)Ljava/util/List;", "GetGetPermittedAccessibilityServices_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <summary>Returns the list of permitted accessibility services set by this device or profile owner.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetPermittedInputMethods">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetPermittedInputMethods (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetPermittedInputMethods(class Android.Content.ComponentName admin) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPermittedInputMethods", "(Landroid/content/ComponentName;)Ljava/util/List;", "GetGetPermittedInputMethods_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <summary>Returns the list of permitted input methods set by this device or profile owner.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetScreenCaptureDisabled">
      <MemberSignature Language="C#" Value="public virtual bool GetScreenCaptureDisabled (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetScreenCaptureDisabled(class Android.Content.ComponentName admin) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getScreenCaptureDisabled", "(Landroid/content/ComponentName;)Z", "GetGetScreenCaptureDisabled_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">The name of the admin component to check, or <c>null</c> to check whether any admins
 have disabled screen capture.
</param>
        <summary>Determine whether or not screen capture has been disabled by the current
 admin, if specified, or all admins.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetStorageEncryption">
      <MemberSignature Language="C#" Value="public virtual bool GetStorageEncryption (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetStorageEncryption(class Android.Content.ComponentName admin) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getStorageEncryption", "(Landroid/content/ComponentName;)Z", "GetGetStorageEncryption_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.  If null,
 this will return the requested encryption setting as an aggregate of all active
 administrators.</param>
        <summary>Called by an application that is administering the device to
 determine the requested setting for secure storage.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="HasCaCertInstalled">
      <MemberSignature Language="C#" Value="public virtual bool HasCaCertInstalled (Android.Content.ComponentName admin, byte[] certBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasCaCertInstalled(class Android.Content.ComponentName admin, unsigned int8[] certBuffer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("hasCaCertInstalled", "(Landroid/content/ComponentName;[B)Z", "GetHasCaCertInstalled_Landroid_content_ComponentName_arrayBHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="certBuffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with, or
              <c>null</c> if calling from a delegated certificate installer.</param>
        <param name="certBuffer">encoded form of the certificate to look up.
</param>
        <summary>Returns whether this certificate is installed as a trusted CA.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="HasGrantedPolicy">
      <MemberSignature Language="C#" Value="public virtual bool HasGrantedPolicy (Android.Content.ComponentName admin, Android.App.Admin.DeviceAdminUses usesPolicy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasGrantedPolicy(class Android.Content.ComponentName admin, valuetype Android.App.Admin.DeviceAdminUses usesPolicy) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("hasGrantedPolicy", "(Landroid/content/ComponentName;I)Z", "GetHasGrantedPolicy_Landroid_content_ComponentName_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="usesPolicy" Type="Android.App.Admin.DeviceAdminUses">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.  Must be
 an active administrator, or an exception will be thrown.</param>
        <param name="usesPolicy">Which uses-policy to check, as defined in <c><see cref="T:Android.App.Admin.DeviceAdminInfo" /></c>.
</param>
        <summary>Returns true if an administrator has been granted a particular device policy.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="InstallCaCert">
      <MemberSignature Language="C#" Value="public virtual bool InstallCaCert (Android.Content.ComponentName admin, byte[] certBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InstallCaCert(class Android.Content.ComponentName admin, unsigned int8[] certBuffer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("installCaCert", "(Landroid/content/ComponentName;[B)Z", "GetInstallCaCert_Landroid_content_ComponentName_arrayBHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="certBuffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with, or
              <c>null</c> if calling from a delegated certificate installer.</param>
        <param name="certBuffer">encoded form of the certificate to install.</param>
        <summary>Installs the given certificate as a user CA.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="InstallKeyPair">
      <MemberSignature Language="C#" Value="public virtual bool InstallKeyPair (Android.Content.ComponentName who, Java.Security.IPrivateKey privKey, Java.Security.Cert.Certificate cert, string alias);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InstallKeyPair(class Android.Content.ComponentName who, class Java.Security.IPrivateKey privKey, class Java.Security.Cert.Certificate cert, string alias) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("installKeyPair", "(Landroid/content/ComponentName;Ljava/security/PrivateKey;Ljava/security/cert/Certificate;Ljava/lang/String;)Z", "GetInstallKeyPair_Landroid_content_ComponentName_Ljava_security_PrivateKey_Ljava_security_cert_Certificate_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="who" Type="Android.Content.ComponentName" />
        <Parameter Name="privKey" Type="Java.Security.IPrivateKey" />
        <Parameter Name="cert" Type="Java.Security.Cert.Certificate" />
        <Parameter Name="alias" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="who">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <param name="privKey">The private key to install.</param>
        <param name="cert">The certificate to install.</param>
        <param name="alias">The private key alias under which to install the certificate. If a certificate
 with that alias already exists, it will be overwritten.</param>
        <summary>Called by a device or profile owner to install a certificate and private key pair.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="IsActivePasswordSufficient">
      <MemberSignature Language="C#" Value="public virtual bool IsActivePasswordSufficient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsActivePasswordSufficient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isActivePasswordSufficient", "()Z", "GetIsActivePasswordSufficientHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Determine whether the current password the user has set is sufficient
 to meet the policy requirements (quality, minimum length) that have been
 requested by the admins of this user and its profiles.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="IsAdminActive">
      <MemberSignature Language="C#" Value="public virtual bool IsAdminActive (Android.Content.ComponentName who);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAdminActive(class Android.Content.ComponentName who) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isAdminActive", "(Landroid/content/ComponentName;)Z", "GetIsAdminActive_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="who" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="who">To be added.</param>
        <summary>Return true if the given administrator component is currently
 active (enabled) in the system.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="IsApplicationHidden">
      <MemberSignature Language="C#" Value="public virtual bool IsApplicationHidden (Android.Content.ComponentName admin, string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsApplicationHidden(class Android.Content.ComponentName admin, string packageName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isApplicationHidden", "(Landroid/content/ComponentName;Ljava/lang/String;)Z", "GetIsApplicationHidden_Landroid_content_ComponentName_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <param name="packageName">The name of the package to retrieve the hidden status of.</param>
        <summary>Called by profile or device owners to determine if a package is hidden.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="IsDeviceOwnerApp">
      <MemberSignature Language="C#" Value="public virtual bool IsDeviceOwnerApp (string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDeviceOwnerApp(string packageName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isDeviceOwnerApp", "(Ljava/lang/String;)Z", "GetIsDeviceOwnerApp_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">the package name of the app, to compare with the registered device owner
 app, if any.</param>
        <summary>Used to determine if a particular package has been registered as a Device Owner app.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="IsLockTaskPermitted">
      <MemberSignature Language="C#" Value="public virtual bool IsLockTaskPermitted (string pkg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLockTaskPermitted(string pkg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isLockTaskPermitted", "(Ljava/lang/String;)Z", "GetIsLockTaskPermitted_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pkg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pkg">The package to check
</param>
        <summary>This function lets the caller know whether the given component is allowed to start the
 lock task mode.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="IsMasterVolumeMuted">
      <MemberSignature Language="C#" Value="public virtual bool IsMasterVolumeMuted (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsMasterVolumeMuted(class Android.Content.ComponentName admin) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isMasterVolumeMuted", "(Landroid/content/ComponentName;)Z", "GetIsMasterVolumeMuted_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <summary>Called by profile or device owners to check whether the master volume mute is on or off.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="IsProfileOwnerApp">
      <MemberSignature Language="C#" Value="public virtual bool IsProfileOwnerApp (string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsProfileOwnerApp(string packageName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isProfileOwnerApp", "(Ljava/lang/String;)Z", "GetIsProfileOwnerApp_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">The package name of the app to compare with the registered profile owner.</param>
        <summary>Used to determine if a particular package is registered as the profile owner for the
 current user.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="IsUninstallBlocked">
      <MemberSignature Language="C#" Value="public virtual bool IsUninstallBlocked (Android.Content.ComponentName admin, string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUninstallBlocked(class Android.Content.ComponentName admin, string packageName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isUninstallBlocked", "(Landroid/content/ComponentName;Ljava/lang/String;)Z", "GetIsUninstallBlocked_Landroid_content_ComponentName_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="admin">The name of the admin component whose blocking policy will be checked, or
              <c>null</c> to check whether any admin has blocked the uninstallation.</param>
        <param name="packageName">package to check.</param>
        <summary tool="true">Check whether the current user has been blocked by device policy from uninstalling a package.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="KeyguardDisableFeaturesAll">
      <MemberSignature Language="C#" Value="public const Android.App.Admin.KeyguardDisable KeyguardDisableFeaturesAll = 2147483647;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.KeyguardDisable KeyguardDisableFeaturesAll = (2147483647)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("KEYGUARD_DISABLE_FEATURES_ALL")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.KeyguardDisable enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.KeyguardDisable</ReturnType>
      </ReturnValue>
      <MemberValue>2147483647</MemberValue>
      <Docs>
        <summary>Disable all current and future keyguard customizations.</summary>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="KeyguardDisableFeaturesNone">
      <MemberSignature Language="C#" Value="public const Android.App.Admin.KeyguardDisable KeyguardDisableFeaturesNone = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.KeyguardDisable KeyguardDisableFeaturesNone = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("KEYGUARD_DISABLE_FEATURES_NONE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.KeyguardDisable enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.KeyguardDisable</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Widgets are enabled in keyguard
</summary>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="KeyguardDisableFingerprint">
      <MemberSignature Language="C#" Value="public const Android.App.Admin.KeyguardDisable KeyguardDisableFingerprint = 32;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.KeyguardDisable KeyguardDisableFingerprint = (32)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("KEYGUARD_DISABLE_FINGERPRINT")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.KeyguardDisable enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.KeyguardDisable</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>Disable fingerprint sensor on keyguard secure screens (e.g.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="KeyguardDisableSecureCamera">
      <MemberSignature Language="C#" Value="public const Android.App.Admin.KeyguardDisable KeyguardDisableSecureCamera = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.KeyguardDisable KeyguardDisableSecureCamera = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("KEYGUARD_DISABLE_SECURE_CAMERA")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.KeyguardDisable enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.KeyguardDisable</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Disable the camera on secure keyguard screens (e.g.</summary>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="KeyguardDisableSecureNotifications">
      <MemberSignature Language="C#" Value="public const Android.App.Admin.KeyguardDisable KeyguardDisableSecureNotifications = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.KeyguardDisable KeyguardDisableSecureNotifications = (4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("KEYGUARD_DISABLE_SECURE_NOTIFICATIONS")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.KeyguardDisable enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.KeyguardDisable</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Disable showing all notifications on secure keyguard screens (e.g.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="KeyguardDisableTrustAgents">
      <MemberSignature Language="C#" Value="public const Android.App.Admin.KeyguardDisable KeyguardDisableTrustAgents = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.KeyguardDisable KeyguardDisableTrustAgents = (16)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("KEYGUARD_DISABLE_TRUST_AGENTS")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.KeyguardDisable enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.KeyguardDisable</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>Ignore trust agent state on secure keyguard screens
 (e.g.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="KeyguardDisableUnredactedNotifications">
      <MemberSignature Language="C#" Value="public const Android.App.Admin.KeyguardDisable KeyguardDisableUnredactedNotifications = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.KeyguardDisable KeyguardDisableUnredactedNotifications = (8)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("KEYGUARD_DISABLE_UNREDACTED_NOTIFICATIONS")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.KeyguardDisable enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.KeyguardDisable</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>Only allow redacted notifications on secure keyguard screens (e.g.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="KeyguardDisableWidgetsAll">
      <MemberSignature Language="C#" Value="public const Android.App.Admin.KeyguardDisable KeyguardDisableWidgetsAll = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.KeyguardDisable KeyguardDisableWidgetsAll = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("KEYGUARD_DISABLE_WIDGETS_ALL")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.KeyguardDisable enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.KeyguardDisable</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Disable all keyguard widgets.</summary>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="LockNow">
      <MemberSignature Language="C#" Value="public virtual void LockNow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LockNow() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("lockNow", "()V", "GetLockNowHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Make the device lock immediately, as if the lock screen timeout has
 expired at the point of this call.</summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="MimeTypeProvisioningNfc">
      <MemberSignature Language="C#" Value="public const string MimeTypeProvisioningNfc;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MimeTypeProvisioningNfc" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MIME_TYPE_PROVISIONING_NFC")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This MIME type is used for starting the Device Owner provisioning.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="RemoveActiveAdmin">
      <MemberSignature Language="C#" Value="public virtual void RemoveActiveAdmin (Android.Content.ComponentName who);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveActiveAdmin(class Android.Content.ComponentName who) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeActiveAdmin", "(Landroid/content/ComponentName;)V", "GetRemoveActiveAdmin_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="who" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="who">To be added.</param>
        <summary>Remove a current administration component.</summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="RemoveCrossProfileWidgetProvider">
      <MemberSignature Language="C#" Value="public virtual bool RemoveCrossProfileWidgetProvider (Android.Content.ComponentName admin, string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoveCrossProfileWidgetProvider(class Android.Content.ComponentName admin, string packageName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeCrossProfileWidgetProvider", "(Landroid/content/ComponentName;Ljava/lang/String;)Z", "GetRemoveCrossProfileWidgetProvider_Landroid_content_ComponentName_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <param name="packageName">The package from which widget providers are no longer
     white-listed.</param>
        <summary>Called by the profile owner of a managed profile to disable widget providers from a given
 package to be available in the parent profile.</summary>
        <returns>To be added.</returns>
        <remarks />
        <altmember cref="M:Android.App.Admin.DevicePolicyManager.AddCrossProfileWidgetProvider(Android.Content.ComponentName, System.String)" />
        <altmember cref="M:Android.App.Admin.DevicePolicyManager.GetCrossProfileWidgetProviders(Android.Content.ComponentName)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveUser">
      <MemberSignature Language="C#" Value="public virtual bool RemoveUser (Android.Content.ComponentName admin, Android.OS.UserHandle userHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoveUser(class Android.Content.ComponentName admin, class Android.OS.UserHandle userHandle) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeUser", "(Landroid/content/ComponentName;Landroid/os/UserHandle;)Z", "GetRemoveUser_Landroid_content_ComponentName_Landroid_os_UserHandle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="userHandle" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <param name="userHandle">the user to remove.</param>
        <summary>Called by a device owner to remove a user and all associated data.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ResetPassword">
      <MemberSignature Language="C#" Value="public virtual bool ResetPassword (string password, Android.App.Admin.ResetPasswordFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ResetPassword(string password, valuetype Android.App.Admin.ResetPasswordFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resetPassword", "(Ljava/lang/String;I)Z", "GetResetPassword_Ljava_lang_String_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="flags" Type="Android.App.Admin.ResetPasswordFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="password">The new password for the user. Null or empty clears the password.</param>
        <param name="flags">May be 0 or combination of <c><see cref="F:Android.App.Admin.DevicePolicyManager.ResetPasswordRequireEntry" /></c> and
              <c><see cref="F:Android.App.Admin.DevicePolicyManager.ResetPasswordDoNotAskCredentialsOnBoot" /></c>.</param>
        <summary>Force a new device unlock password (the password needed to access the
 entire device, not for individual accounts) on the user.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ResetPasswordRequireEntry">
      <MemberSignature Language="C#" Value="public const Android.App.Admin.ResetPasswordFlags ResetPasswordRequireEntry = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.ResetPasswordFlags ResetPasswordRequireEntry = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("RESET_PASSWORD_REQUIRE_ENTRY")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.ResetPasswordFlags enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.ResetPasswordFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Flag for <c><see cref="M:Android.App.Admin.DevicePolicyManager.ResetPassword(System.String, Android.App.Admin.ResetPasswordFlags)" /></c>: don't allow other admins to change
 the password again until the user has entered it.</summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetAccountManagementDisabled">
      <MemberSignature Language="C#" Value="public virtual void SetAccountManagementDisabled (Android.Content.ComponentName admin, string accountType, bool disabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAccountManagementDisabled(class Android.Content.ComponentName admin, string accountType, bool disabled) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAccountManagementDisabled", "(Landroid/content/ComponentName;Ljava/lang/String;Z)V", "GetSetAccountManagementDisabled_Landroid_content_ComponentName_Ljava_lang_String_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="accountType" Type="System.String" />
        <Parameter Name="disabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <param name="accountType">For which account management is disabled or enabled.</param>
        <param name="disabled">The boolean indicating that account management will be disabled (true) or
 enabled (false).
</param>
        <summary>Called by a device owner or profile owner to disable account management for a specific type
 of account.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetApplicationHidden">
      <MemberSignature Language="C#" Value="public virtual bool SetApplicationHidden (Android.Content.ComponentName admin, string packageName, bool hidden);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetApplicationHidden(class Android.Content.ComponentName admin, string packageName, bool hidden) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setApplicationHidden", "(Landroid/content/ComponentName;Ljava/lang/String;Z)Z", "GetSetApplicationHidden_Landroid_content_ComponentName_Ljava_lang_String_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="hidden" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <param name="packageName">The name of the package to hide or unhide.</param>
        <param name="hidden">
          <c>true</c> if the package should be hidden, <c>false</c> if it should be
                 unhidden.</param>
        <summary>Called by profile or device owners to hide or unhide packages.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetApplicationRestrictions">
      <MemberSignature Language="C#" Value="public virtual void SetApplicationRestrictions (Android.Content.ComponentName admin, string packageName, Android.OS.Bundle settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetApplicationRestrictions(class Android.Content.ComponentName admin, string packageName, class Android.OS.Bundle settings) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setApplicationRestrictions", "(Landroid/content/ComponentName;Ljava/lang/String;Landroid/os/Bundle;)V", "GetSetApplicationRestrictions_Landroid_content_ComponentName_Ljava_lang_String_Landroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="settings" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <param name="packageName">The name of the package to update restricted settings for.</param>
        <param name="settings">A <c><see cref="T:Android.OS.Bundle" /></c> to be parsed by the receiving application, conveying a new
 set of active restrictions.</param>
        <summary>Called by a profile or device owner to set the application restrictions for a given target
 application running in the profile.</summary>
        <remarks />
        <altmember cref="F:Android.OS.UserManager.KeyRestrictionsPending" />
      </Docs>
    </Member>
    <Member MemberName="SetAutoTimeRequired">
      <MemberSignature Language="C#" Value="public virtual void SetAutoTimeRequired (Android.Content.ComponentName admin, bool required);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAutoTimeRequired(class Android.Content.ComponentName admin, bool required) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAutoTimeRequired", "(Landroid/content/ComponentName;Z)V", "GetSetAutoTimeRequired_Landroid_content_ComponentName_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="required" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <param name="required">Whether auto time is set required or not.
</param>
        <summary>Called by a device owner to set whether auto time is required.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetCameraDisabled">
      <MemberSignature Language="C#" Value="public virtual void SetCameraDisabled (Android.Content.ComponentName admin, bool disabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCameraDisabled(class Android.Content.ComponentName admin, bool disabled) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setCameraDisabled", "(Landroid/content/ComponentName;Z)V", "GetSetCameraDisabled_Landroid_content_ComponentName_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="disabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <param name="disabled">Whether or not the camera should be disabled.
</param>
        <summary>Called by an application that is administering the device to disable all cameras
 on the device, for this user.</summary>
        <remarks />
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetCrossProfileCallerIdDisabled">
      <MemberSignature Language="C#" Value="public virtual void SetCrossProfileCallerIdDisabled (Android.Content.ComponentName who, bool disabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCrossProfileCallerIdDisabled(class Android.Content.ComponentName who, bool disabled) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setCrossProfileCallerIdDisabled", "(Landroid/content/ComponentName;Z)V", "GetSetCrossProfileCallerIdDisabled_Landroid_content_ComponentName_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="who" Type="Android.Content.ComponentName" />
        <Parameter Name="disabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="who">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <param name="disabled">If true caller-Id information in the managed profile is not displayed.
</param>
        <summary>Called by a profile owner of a managed profile to set whether caller-Id information from
 the managed profile will be shown in the parent profile, for incoming calls.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetGlobalSetting">
      <MemberSignature Language="C#" Value="public virtual void SetGlobalSetting (Android.Content.ComponentName admin, string setting, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetGlobalSetting(class Android.Content.ComponentName admin, string setting, string value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setGlobalSetting", "(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;)V", "GetSetGlobalSetting_Landroid_content_ComponentName_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="setting" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <param name="setting">The name of the setting to update.</param>
        <param name="value">The value to update the setting to.
</param>
        <summary>Called by device owners to update <c><see cref="!:NoType:android/provider/Settings$Global;Href=../../../../reference/android/provider/Settings.Global.html" /></c> settings.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetKeyguardDisabledFeatures">
      <MemberSignature Language="C#" Value="public virtual void SetKeyguardDisabledFeatures (Android.Content.ComponentName admin, Android.App.Admin.KeyguardDisable which);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetKeyguardDisabledFeatures(class Android.Content.ComponentName admin, valuetype Android.App.Admin.KeyguardDisable which) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setKeyguardDisabledFeatures", "(Landroid/content/ComponentName;I)V", "GetSetKeyguardDisabledFeatures_Landroid_content_ComponentName_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="which" Type="Android.App.Admin.KeyguardDisable">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <param name="which">
          <c>
            <see cref="F:Android.App.Admin.DevicePolicyManager.KeyguardDisableFeaturesNone" />
          </c> (default),
 <c><see cref="F:Android.App.Admin.DevicePolicyManager.KeyguardDisableWidgetsAll" /></c>, <c><see cref="F:Android.App.Admin.DevicePolicyManager.KeyguardDisableSecureCamera" /></c>,
 <c><see cref="F:Android.App.Admin.DevicePolicyManager.KeyguardDisableSecureNotifications" /></c>, <c><see cref="F:Android.App.Admin.DevicePolicyManager.KeyguardDisableTrustAgents" /></c>,
 <c><see cref="F:Android.App.Admin.DevicePolicyManager.KeyguardDisableUnredactedNotifications" /></c>, <c><see cref="F:Android.App.Admin.DevicePolicyManager.KeyguardDisableFingerprint" /></c>,
 <c><see cref="F:Android.App.Admin.DevicePolicyManager.KeyguardDisableFeaturesAll" /></c></param>
        <summary>Called by an application that is administering the device to disable keyguard customizations,
 such as widgets.</summary>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="SetLockTaskPackages">
      <MemberSignature Language="C#" Value="public virtual void SetLockTaskPackages (Android.Content.ComponentName admin, string[] packages);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLockTaskPackages(class Android.Content.ComponentName admin, string[] packages) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLockTaskPackages", "(Landroid/content/ComponentName;[Ljava/lang/String;)V", "GetSetLockTaskPackages_Landroid_content_ComponentName_arrayLjava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="packages" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <param name="packages">The list of packages allowed to enter lock task mode</param>
        <summary>Sets which packages may enter lock task mode.</summary>
        <remarks />
        <exception cref="T:Java.Lang.SecurityException" />
        <altmember cref="M:Android.App.Activity.StartLockTask" />
        <altmember cref="M:Android.App.Admin.DeviceAdminReceiver.OnLockTaskModeEntering(Android.Content.Context, Android.Content.Intent, Android.Content.Intent)" />
        <altmember cref="M:Android.App.Admin.DeviceAdminReceiver.OnLockTaskModeExiting(Android.Content.Context, Android.Content.Intent)" />
        <altmember cref="F:Android.OS.UserManager.DisallowCreateWindows" />
      </Docs>
    </Member>
    <Member MemberName="SetMasterVolumeMuted">
      <MemberSignature Language="C#" Value="public virtual void SetMasterVolumeMuted (Android.Content.ComponentName admin, bool on);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMasterVolumeMuted(class Android.Content.ComponentName admin, bool on) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setMasterVolumeMuted", "(Landroid/content/ComponentName;Z)V", "GetSetMasterVolumeMuted_Landroid_content_ComponentName_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="on" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <param name="on">
          <c>true</c> to mute master volume, <c>false</c> to turn mute off.
</param>
        <summary>Called by profile or device owners to set the master volume mute on or off.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetMaximumFailedPasswordsForWipe">
      <MemberSignature Language="C#" Value="public virtual void SetMaximumFailedPasswordsForWipe (Android.Content.ComponentName admin, int num);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMaximumFailedPasswordsForWipe(class Android.Content.ComponentName admin, int32 num) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setMaximumFailedPasswordsForWipe", "(Landroid/content/ComponentName;I)V", "GetSetMaximumFailedPasswordsForWipe_Landroid_content_ComponentName_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="num" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <param name="num">The number of failed password attempts at which point the
 device will wipe its data.
</param>
        <summary>Setting this to a value greater than zero enables a built-in policy
 that will perform a device wipe after too many incorrect
 device-unlock passwords have been entered.</summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetMaximumTimeToLock">
      <MemberSignature Language="C#" Value="public virtual void SetMaximumTimeToLock (Android.Content.ComponentName admin, long timeMs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMaximumTimeToLock(class Android.Content.ComponentName admin, int64 timeMs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setMaximumTimeToLock", "(Landroid/content/ComponentName;J)V", "GetSetMaximumTimeToLock_Landroid_content_ComponentName_JHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="timeMs" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <param name="timeMs">The new desired maximum time to lock in milliseconds.
 A value of 0 means there is no restriction.
</param>
        <summary>Called by an application that is administering the device to set the
 maximum time for user activity until the device will lock.</summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetPasswordExpirationTimeout">
      <MemberSignature Language="C#" Value="public virtual void SetPasswordExpirationTimeout (Android.Content.ComponentName admin, long timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPasswordExpirationTimeout(class Android.Content.ComponentName admin, int64 timeout) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPasswordExpirationTimeout", "(Landroid/content/ComponentName;J)V", "GetSetPasswordExpirationTimeout_Landroid_content_ComponentName_JHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="timeout" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <param name="timeout">The limit (in ms) that a password can remain in effect. A value of 0
        means there is no restriction (unlimited).
</param>
        <summary>Called by a device admin to set the password expiration timeout.</summary>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetPasswordHistoryLength">
      <MemberSignature Language="C#" Value="public virtual void SetPasswordHistoryLength (Android.Content.ComponentName admin, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPasswordHistoryLength(class Android.Content.ComponentName admin, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPasswordHistoryLength", "(Landroid/content/ComponentName;I)V", "GetSetPasswordHistoryLength_Landroid_content_ComponentName_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated
        with.</param>
        <param name="length">The new desired length of password history. A value of 0
        means there is no restriction.
</param>
        <summary>Called by an application that is administering the device to set the length
 of the password history.</summary>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetPasswordMinimumLength">
      <MemberSignature Language="C#" Value="public virtual void SetPasswordMinimumLength (Android.Content.ComponentName admin, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPasswordMinimumLength(class Android.Content.ComponentName admin, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPasswordMinimumLength", "(Landroid/content/ComponentName;I)V", "GetSetPasswordMinimumLength_Landroid_content_ComponentName_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <param name="length">The new desired minimum password length.  A value of 0
 means there is no restriction.
</param>
        <summary>Called by an application that is administering the device to set the
 minimum allowed password length.</summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetPasswordMinimumLetters">
      <MemberSignature Language="C#" Value="public virtual void SetPasswordMinimumLetters (Android.Content.ComponentName admin, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPasswordMinimumLetters(class Android.Content.ComponentName admin, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPasswordMinimumLetters", "(Landroid/content/ComponentName;I)V", "GetSetPasswordMinimumLetters_Landroid_content_ComponentName_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated
            with.</param>
        <param name="length">The new desired minimum number of letters required in the
            password. A value of 0 means there is no restriction.
</param>
        <summary>Called by an application that is administering the device to set the
 minimum number of letters required in the password.</summary>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetPasswordMinimumLowerCase">
      <MemberSignature Language="C#" Value="public virtual void SetPasswordMinimumLowerCase (Android.Content.ComponentName admin, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPasswordMinimumLowerCase(class Android.Content.ComponentName admin, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPasswordMinimumLowerCase", "(Landroid/content/ComponentName;I)V", "GetSetPasswordMinimumLowerCase_Landroid_content_ComponentName_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated
            with.</param>
        <param name="length">The new desired minimum number of lower case letters
            required in the password. A value of 0 means there is no
            restriction.
</param>
        <summary>Called by an application that is administering the device to set the
 minimum number of lower case letters required in the password.</summary>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetPasswordMinimumNonLetter">
      <MemberSignature Language="C#" Value="public virtual void SetPasswordMinimumNonLetter (Android.Content.ComponentName admin, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPasswordMinimumNonLetter(class Android.Content.ComponentName admin, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPasswordMinimumNonLetter", "(Landroid/content/ComponentName;I)V", "GetSetPasswordMinimumNonLetter_Landroid_content_ComponentName_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated
            with.</param>
        <param name="length">The new desired minimum number of letters required in the
            password. A value of 0 means there is no restriction.
</param>
        <summary>Called by an application that is administering the device to set the
 minimum number of non-letter characters (numerical digits or symbols)
 required in the password.</summary>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetPasswordMinimumNumeric">
      <MemberSignature Language="C#" Value="public virtual void SetPasswordMinimumNumeric (Android.Content.ComponentName admin, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPasswordMinimumNumeric(class Android.Content.ComponentName admin, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPasswordMinimumNumeric", "(Landroid/content/ComponentName;I)V", "GetSetPasswordMinimumNumeric_Landroid_content_ComponentName_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated
            with.</param>
        <param name="length">The new desired minimum number of numerical digits required
            in the password. A value of 0 means there is no restriction.
</param>
        <summary>Called by an application that is administering the device to set the
 minimum number of numerical digits required in the password.</summary>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetPasswordMinimumSymbols">
      <MemberSignature Language="C#" Value="public virtual void SetPasswordMinimumSymbols (Android.Content.ComponentName admin, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPasswordMinimumSymbols(class Android.Content.ComponentName admin, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPasswordMinimumSymbols", "(Landroid/content/ComponentName;I)V", "GetSetPasswordMinimumSymbols_Landroid_content_ComponentName_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated
            with.</param>
        <param name="length">The new desired minimum number of symbols required in the
            password. A value of 0 means there is no restriction.
</param>
        <summary>Called by an application that is administering the device to set the
 minimum number of symbols required in the password.</summary>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetPasswordMinimumUpperCase">
      <MemberSignature Language="C#" Value="public virtual void SetPasswordMinimumUpperCase (Android.Content.ComponentName admin, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPasswordMinimumUpperCase(class Android.Content.ComponentName admin, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPasswordMinimumUpperCase", "(Landroid/content/ComponentName;I)V", "GetSetPasswordMinimumUpperCase_Landroid_content_ComponentName_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated
            with.</param>
        <param name="length">The new desired minimum number of upper case letters
            required in the password. A value of 0 means there is no
            restriction.
</param>
        <summary>Called by an application that is administering the device to set the
 minimum number of upper case letters required in the password.</summary>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetPasswordQuality">
      <MemberSignature Language="C#" Value="public virtual void SetPasswordQuality (Android.Content.ComponentName admin, Android.App.Admin.PasswordQuality quality);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPasswordQuality(class Android.Content.ComponentName admin, valuetype Android.App.Admin.PasswordQuality quality) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPasswordQuality", "(Landroid/content/ComponentName;I)V", "GetSetPasswordQuality_Landroid_content_ComponentName_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="quality" Type="Android.App.Admin.PasswordQuality">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <param name="quality">The new desired quality.  One of
 <c><see cref="!:Android.App.Admin.DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED" /></c>, <c><see cref="!:Android.App.Admin.DevicePolicyManager.PASSWORD_QUALITY_SOMETHING" /></c>,
 <c><see cref="!:Android.App.Admin.DevicePolicyManager.PASSWORD_QUALITY_NUMERIC" /></c>, <c><see cref="!:Android.App.Admin.DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX" /></c>,
 <c><see cref="!:Android.App.Admin.DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC" /></c>, <c><see cref="!:Android.App.Admin.DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC" /></c>
 or <c><see cref="F:Android.App.Admin.PasswordQuality.Complex" tool="ReplaceLinkValue" /></c>.
</param>
        <summary>Called by an application that is administering the device to set the
 password restrictions it is imposing.</summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetPermittedAccessibilityServices">
      <MemberSignature Language="C#" Value="public virtual bool SetPermittedAccessibilityServices (Android.Content.ComponentName admin, System.Collections.Generic.IList&lt;string&gt; packageNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetPermittedAccessibilityServices(class Android.Content.ComponentName admin, class System.Collections.Generic.IList`1&lt;string&gt; packageNames) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPermittedAccessibilityServices", "(Landroid/content/ComponentName;Ljava/util/List;)Z", "GetSetPermittedAccessibilityServices_Landroid_content_ComponentName_Ljava_util_List_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="packageNames" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="admin">To be added.</param>
        <param name="packageNames">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetPermittedInputMethods">
      <MemberSignature Language="C#" Value="public virtual bool SetPermittedInputMethods (Android.Content.ComponentName admin, System.Collections.Generic.IList&lt;string&gt; packageNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetPermittedInputMethods(class Android.Content.ComponentName admin, class System.Collections.Generic.IList`1&lt;string&gt; packageNames) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPermittedInputMethods", "(Landroid/content/ComponentName;Ljava/util/List;)Z", "GetSetPermittedInputMethods_Landroid_content_ComponentName_Ljava_util_List_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="packageNames" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="admin">To be added.</param>
        <param name="packageNames">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetProfileEnabled">
      <MemberSignature Language="C#" Value="public virtual void SetProfileEnabled (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetProfileEnabled(class Android.Content.ComponentName admin) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setProfileEnabled", "(Landroid/content/ComponentName;)V", "GetSetProfileEnabled_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.
</param>
        <summary>Sets the enabled state of the profile.</summary>
        <remarks />
        <altmember cref="M:Android.App.Admin.DevicePolicyManager.IsProfileOwnerApp(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetProfileName">
      <MemberSignature Language="C#" Value="public virtual void SetProfileName (Android.Content.ComponentName who, string profileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetProfileName(class Android.Content.ComponentName who, string profileName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setProfileName", "(Landroid/content/ComponentName;Ljava/lang/String;)V", "GetSetProfileName_Landroid_content_ComponentName_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="who" Type="Android.Content.ComponentName" />
        <Parameter Name="profileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="who">To be added.</param>
        <param name="profileName">The name of the profile.
</param>
        <summary>Sets the name of the profile.</summary>
        <remarks />
        <altmember cref="M:Android.App.Admin.DevicePolicyManager.IsProfileOwnerApp(System.String)" />
        <altmember cref="M:Android.App.Admin.DevicePolicyManager.IsDeviceOwnerApp(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetRecommendedGlobalProxy">
      <MemberSignature Language="C#" Value="public virtual void SetRecommendedGlobalProxy (Android.Content.ComponentName admin, Android.Net.ProxyInfo proxyInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRecommendedGlobalProxy(class Android.Content.ComponentName admin, class Android.Net.ProxyInfo proxyInfo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setRecommendedGlobalProxy", "(Landroid/content/ComponentName;Landroid/net/ProxyInfo;)V", "GetSetRecommendedGlobalProxy_Landroid_content_ComponentName_Landroid_net_ProxyInfo_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="proxyInfo" Type="Android.Net.ProxyInfo" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated
            with.</param>
        <param name="proxyInfo">The a <c><see cref="T:Android.Net.ProxyInfo" /></c> object defining the new global
        HTTP proxy.  A <c>null</c> value will clear the global HTTP proxy.
</param>
        <summary>Set a network-independent global HTTP proxy.</summary>
        <remarks />
        <altmember cref="T:Android.Net.ProxyInfo" />
      </Docs>
    </Member>
    <Member MemberName="SetRestrictionsProvider">
      <MemberSignature Language="C#" Value="public virtual void SetRestrictionsProvider (Android.Content.ComponentName admin, Android.Content.ComponentName provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRestrictionsProvider(class Android.Content.ComponentName admin, class Android.Content.ComponentName provider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setRestrictionsProvider", "(Landroid/content/ComponentName;Landroid/content/ComponentName;)V", "GetSetRestrictionsProvider_Landroid_content_ComponentName_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="provider" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <param name="provider">The component name of the service that implements
 <c><see cref="T:Android.Service.Restrictions.RestrictionsReceiver" /></c>. If this param is null,
 it removes the restrictions provider previously assigned.
</param>
        <summary>Designates a specific service component as the provider for
 making permission requests of a local or remote administrator of the user.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetScreenCaptureDisabled">
      <MemberSignature Language="C#" Value="public virtual void SetScreenCaptureDisabled (Android.Content.ComponentName admin, bool disabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetScreenCaptureDisabled(class Android.Content.ComponentName admin, bool disabled) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setScreenCaptureDisabled", "(Landroid/content/ComponentName;Z)V", "GetSetScreenCaptureDisabled_Landroid_content_ComponentName_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="disabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <param name="disabled">Whether screen capture is disabled or not.
</param>
        <summary>Called by a device/profile owner to set whether the screen capture is disabled.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetSecureSetting">
      <MemberSignature Language="C#" Value="public virtual void SetSecureSetting (Android.Content.ComponentName admin, string setting, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSecureSetting(class Android.Content.ComponentName admin, string setting, string value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSecureSetting", "(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;)V", "GetSetSecureSetting_Landroid_content_ComponentName_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="setting" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <param name="setting">The name of the setting to update.</param>
        <param name="value">The value to update the setting to.
</param>
        <summary>Called by profile or device owners to update <c><see cref="!:NoType:android/provider/Settings$Secure;Href=../../../../reference/android/provider/Settings.Secure.html" /></c> settings.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetStorageEncryption">
      <MemberSignature Language="C#" Value="public virtual Android.App.Admin.EncryptionStatus SetStorageEncryption (Android.Content.ComponentName admin, bool encrypt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.App.Admin.EncryptionStatus SetStorageEncryption(class Android.Content.ComponentName admin, bool encrypt) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setStorageEncryption", "(Landroid/content/ComponentName;Z)I", "GetSetStorageEncryption_Landroid_content_ComponentName_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.EncryptionStatus</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="encrypt" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <param name="encrypt">true to request encryption, false to release any previous request</param>
        <summary>Called by an application that is administering the device to
 request that the storage system be encrypted.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetUninstallBlocked">
      <MemberSignature Language="C#" Value="public virtual void SetUninstallBlocked (Android.Content.ComponentName admin, string packageName, bool uninstallBlocked);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetUninstallBlocked(class Android.Content.ComponentName admin, string packageName, bool uninstallBlocked) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setUninstallBlocked", "(Landroid/content/ComponentName;Ljava/lang/String;Z)V", "GetSetUninstallBlocked_Landroid_content_ComponentName_Ljava_lang_String_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="uninstallBlocked" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <param name="packageName">package to change.</param>
        <param name="uninstallBlocked">true if the user shouldn't be able to uninstall the package.
</param>
        <summary>Called by profile or device owners to change whether a user can uninstall
 a package.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="StorageEncryptionStatus">
      <MemberSignature Language="C#" Value="public virtual Android.App.Admin.EncryptionStatus StorageEncryptionStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.App.Admin.EncryptionStatus StorageEncryptionStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getStorageEncryptionStatus", "()I", "GetGetStorageEncryptionStatusHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.EncryptionStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Called by an application that is administering the device to
 determine the current encryption status of the device.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SwitchUser">
      <MemberSignature Language="C#" Value="public virtual bool SwitchUser (Android.Content.ComponentName admin, Android.OS.UserHandle userHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SwitchUser(class Android.Content.ComponentName admin, class Android.OS.UserHandle userHandle) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("switchUser", "(Landroid/content/ComponentName;Landroid/os/UserHandle;)Z", "GetSwitchUser_Landroid_content_ComponentName_Landroid_os_UserHandle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="userHandle" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with.</param>
        <param name="userHandle">the user to switch to; null will switch to primary.</param>
        <summary>Called by a device owner to switch the specified user to the foreground.</summary>
        <returns>To be added.</returns>
        <remarks />
        <altmember cref="F:Android.Content.Intent.ActionUserForeground" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="UninstallAllUserCaCerts">
      <MemberSignature Language="C#" Value="public virtual void UninstallAllUserCaCerts (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UninstallAllUserCaCerts(class Android.Content.ComponentName admin) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("uninstallAllUserCaCerts", "(Landroid/content/ComponentName;)V", "GetUninstallAllUserCaCerts_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with, or
              <c>null</c> if calling from a delegated certificate installer.
</param>
        <summary>Uninstalls all custom trusted CA certificates from the profile.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="UninstallCaCert">
      <MemberSignature Language="C#" Value="public virtual void UninstallCaCert (Android.Content.ComponentName admin, byte[] certBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UninstallCaCert(class Android.Content.ComponentName admin, unsigned int8[] certBuffer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("uninstallCaCert", "(Landroid/content/ComponentName;[B)V", "GetUninstallCaCert_Landroid_content_ComponentName_arrayBHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="certBuffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c><see cref="T:Android.App.Admin.DeviceAdminReceiver" /></c> this request is associated with, or
              <c>null</c> if calling from a delegated certificate installer.</param>
        <param name="certBuffer">encoded form of the certificate to remove.
</param>
        <summary>Uninstalls the given certificate from trusted user CAs, if present.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="WipeData">
      <MemberSignature Language="C#" Value="public virtual void WipeData (Android.App.Admin.WipeDataFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WipeData(valuetype Android.App.Admin.WipeDataFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("wipeData", "(I)V", "GetWipeData_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="Android.App.Admin.WipeDataFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">Bit mask of additional options: currently supported flags
 are <c><see cref="F:Android.App.Admin.DevicePolicyManager.WipeExternalStorage" /></c> and
 <c><see cref="F:Android.App.Admin.DevicePolicyManager.WipeResetProtectionData" /></c>.
</param>
        <summary>Ask the user data be wiped.</summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="WipeExternalStorage">
      <MemberSignature Language="C#" Value="public const Android.App.Admin.WipeDataFlags WipeExternalStorage = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.WipeDataFlags WipeExternalStorage = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("WIPE_EXTERNAL_STORAGE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.WipeDataFlags enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.WipeDataFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Flag for <c><see cref="M:Android.App.Admin.DevicePolicyManager.WipeData(Android.App.Admin.WipeDataFlags)" /></c>: also erase the device's external
 storage (such as SD cards).</summary>
        <remarks />
        <since version="Added in API level 9" />
      </Docs>
    </Member>
  </Members>
</Type>
