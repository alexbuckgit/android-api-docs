<Type Name="WebStorage" FullName="Android.Webkit.WebStorage">
  <TypeSignature Language="C#" Value="public class WebStorage : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebStorage extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/webkit/WebStorage", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="5">
    <summary>This class is used to manage the JavaScript storage APIs provided by the
 <c><see cref="T:Android.Webkit.WebView" /></c>.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">This class is used to manage the JavaScript storage APIs provided by the
 <c><see cref="T:Android.Webkit.WebView" /></c>. It manages the Application Cache API, the Web SQL Database
 API and the HTML5 Web Storage API.

 The Application Cache API provides a mechanism to create and maintain an
 application cache to power offline Web applications. Use of the Application
 Cache API can be attributed to an origin <c><see cref="!:NoType:android/webkit/WebStorage$Origin;Href=../../../reference/android/webkit/WebStorage.Origin.html" /></c>, however
 it is not possible to set per-origin quotas. Note that there can be only
 one application cache per application.

 The Web SQL Database API provides storage which is private to a given origin.
 Similar to the Application Cache, use of the Web SQL Database can be attributed
 to an origin. It is also possible to set per-origin quotas.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/webkit/WebStorage.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 5" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebStorage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebStorage (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAllData">
      <MemberSignature Language="C#" Value="public virtual void DeleteAllData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteAllData() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("deleteAllData", "()V", "GetDeleteAllDataHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears all storage currently being used by the JavaScript storage APIs.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Clears all storage currently being used by the JavaScript storage APIs.
 This includes the Application Cache, Web SQL Database and the HTML5 Web
 Storage APIs.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebStorage.html#deleteAllData()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="DeleteOrigin">
      <MemberSignature Language="C#" Value="public virtual void DeleteOrigin (string origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteOrigin(string origin) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("deleteOrigin", "(Ljava/lang/String;)V", "GetDeleteOrigin_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="origin" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="origin">To be added.</param>
        <summary>Clears the storage currently being used by both the Application Cache and
 Web SQL Database APIs by the given origin.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Clears the storage currently being used by both the Application Cache and
 Web SQL Database APIs by the given origin. The origin is specified using
 its string representation.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebStorage.html#deleteOrigin(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="GetOrigins">
      <MemberSignature Language="C#" Value="public virtual void GetOrigins (Android.Webkit.IValueCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetOrigins(class Android.Webkit.IValueCallback callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getOrigins", "(Landroid/webkit/ValueCallback;)V", "GetGetOrigins_Landroid_webkit_ValueCallback_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Webkit.IValueCallback" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQuotaForOrigin">
      <MemberSignature Language="C#" Value="public virtual void GetQuotaForOrigin (string origin, Android.Webkit.IValueCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetQuotaForOrigin(string origin, class Android.Webkit.IValueCallback callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getQuotaForOrigin", "(Ljava/lang/String;Landroid/webkit/ValueCallback;)V", "GetGetQuotaForOrigin_Ljava_lang_String_Landroid_webkit_ValueCallback_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="origin" Type="System.String" />
        <Parameter Name="callback" Type="Android.Webkit.IValueCallback" />
      </Parameters>
      <Docs>
        <param name="origin">To be added.</param>
        <param name="callback">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUsageForOrigin">
      <MemberSignature Language="C#" Value="public virtual void GetUsageForOrigin (string origin, Android.Webkit.IValueCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetUsageForOrigin(string origin, class Android.Webkit.IValueCallback callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getUsageForOrigin", "(Ljava/lang/String;Landroid/webkit/ValueCallback;)V", "GetGetUsageForOrigin_Ljava_lang_String_Landroid_webkit_ValueCallback_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="origin" Type="System.String" />
        <Parameter Name="callback" Type="Android.Webkit.IValueCallback" />
      </Parameters>
      <Docs>
        <param name="origin">To be added.</param>
        <param name="callback">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static Android.Webkit.WebStorage Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Webkit.WebStorage Instance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getInstance", "()Landroid/webkit/WebStorage;", "GetGetInstanceHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Webkit.WebStorage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the singleton instance of this class.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the singleton instance of this class.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebStorage.html#getInstance()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="SetQuotaForOrigin">
      <MemberSignature Language="C#" Value="public virtual void SetQuotaForOrigin (string origin, long quota);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetQuotaForOrigin(string origin, int64 quota) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setQuotaForOrigin", "(Ljava/lang/String;J)V", "GetSetQuotaForOrigin_Ljava_lang_String_JHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="origin" Type="System.String" />
        <Parameter Name="quota" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="origin">To be added.</param>
        <param name="quota">To be added.</param>
        <summary>Sets the storage quota for the Web SQL Database API for the given origin.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the storage quota for the Web SQL Database API for the given origin.
 The quota is specified in bytes and the origin is specified using its string
 representation. Note that a quota is not enforced on a per-origin basis
 for the Application Cache API.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebStorage.html#setQuotaForOrigin(java.lang.String, long)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>