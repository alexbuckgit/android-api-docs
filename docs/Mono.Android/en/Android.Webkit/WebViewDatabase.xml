<Type Name="WebViewDatabase" FullName="Android.Webkit.WebViewDatabase">
  <TypeSignature Language="C#" Value="public class WebViewDatabase : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebViewDatabase extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/webkit/WebViewDatabase", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This class allows developers to determine whether any WebView used in the
 application has stored any of the following types of browsing data and
 to clear any such stored data for all WebViews in the application.</summary>
    <remarks><para tool="javadoc-to-mdoc">This class allows developers to determine whether any WebView used in the
 application has stored any of the following types of browsing data and
 to clear any such stored data for all WebViews in the application.
 <list type="bullet"><item><term>Username/password pairs for web forms</term></item><item><term>HTTP authentication username/password pairs</term></item><item><term>Data entered into text fields (e.g. for autocomplete suggestions)</term></item></list></para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/webkit/WebViewDatabase.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebViewDatabase (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearFormData">
      <MemberSignature Language="C#" Value="public virtual void ClearFormData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearFormData() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearFormData", "()V", "GetClearFormDataHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears any saved data for web forms.</summary>
        <remarks><para tool="javadoc-to-mdoc">Clears any saved data for web forms.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/webkit/WebViewDatabase.html#clearFormData()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Webkit.WebViewDatabase.HasFormData" />
      </Docs>
    </Member>
    <Member MemberName="ClearHttpAuthUsernamePassword">
      <MemberSignature Language="C#" Value="public virtual void ClearHttpAuthUsernamePassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearHttpAuthUsernamePassword() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearHttpAuthUsernamePassword", "()V", "GetClearHttpAuthUsernamePasswordHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears any saved credentials for HTTP authentication.</summary>
        <remarks><para tool="javadoc-to-mdoc">Clears any saved credentials for HTTP authentication.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/webkit/WebViewDatabase.html#clearHttpAuthUsernamePassword()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Webkit.WebView.GetHttpAuthUsernamePassword(System.String, System.String)" />
        <altmember cref="M:Android.Webkit.WebView.SetHttpAuthUsernamePassword(System.String, System.String, System.String, System.String)" />
        <altmember cref="P:Android.Webkit.WebViewDatabase.HasHttpAuthUsernamePassword" />
      </Docs>
    </Member>
    <Member MemberName="ClearUsernamePassword">
      <MemberSignature Language="C#" Value="public virtual void ClearUsernamePassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearUsernamePassword() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearUsernamePassword", "()V", "GetClearUsernamePasswordHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears any saved username/password pairs for web forms.</summary>
        <remarks><para tool="javadoc-to-mdoc">Clears any saved username/password pairs for web forms.
 Note that these are unrelated to HTTP authentication credentials.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/webkit/WebViewDatabase.html#clearUsernamePassword()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Webkit.WebView.SavePassword(System.String, System.String, System.String)" />
        <altmember cref="P:Android.Webkit.WebViewDatabase.HasUsernamePassword" />
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Android.Webkit.WebViewDatabase GetInstance (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Webkit.WebViewDatabase GetInstance(class Android.Content.Context context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInstance", "(Landroid/content/Context;)Landroid/webkit/WebViewDatabase;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Webkit.WebViewDatabase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary></summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/webkit/WebViewDatabase.html#getInstance(android.content.Context)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HasFormData">
      <MemberSignature Language="C#" Value="public virtual bool HasFormData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFormData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("hasFormData", "()Z", "GetHasFormDataHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether there is any saved data for web forms.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Gets whether there is any saved data for web forms.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/webkit/WebViewDatabase.html#hasFormData()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Webkit.WebViewDatabase.ClearFormData" />
      </Docs>
    </Member>
    <Member MemberName="HasHttpAuthUsernamePassword">
      <MemberSignature Language="C#" Value="public virtual bool HasHttpAuthUsernamePassword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasHttpAuthUsernamePassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("hasHttpAuthUsernamePassword", "()Z", "GetHasHttpAuthUsernamePasswordHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether there are any saved credentials for HTTP authentication.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Gets whether there are any saved credentials for HTTP authentication.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/webkit/WebViewDatabase.html#hasHttpAuthUsernamePassword()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Webkit.WebView.GetHttpAuthUsernamePassword(System.String, System.String)" />
        <altmember cref="M:Android.Webkit.WebView.SetHttpAuthUsernamePassword(System.String, System.String, System.String, System.String)" />
        <altmember cref="M:Android.Webkit.WebViewDatabase.ClearHttpAuthUsernamePassword" />
      </Docs>
    </Member>
    <Member MemberName="HasUsernamePassword">
      <MemberSignature Language="C#" Value="public virtual bool HasUsernamePassword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasUsernamePassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("hasUsernamePassword", "()Z", "GetHasUsernamePasswordHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether there are any saved username/password pairs for web forms.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Gets whether there are any saved username/password pairs for web forms.
 Note that these are unrelated to HTTP authentication credentials.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/webkit/WebViewDatabase.html#hasUsernamePassword()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Webkit.WebView.SavePassword(System.String, System.String, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Logtag">
      <MemberSignature Language="C#" Value="protected const string Logtag;" />
      <MemberSignature Language="ILAsm" Value=".field family static literal string Logtag" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LOGTAG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
