<Type Name="SAXTransformerFactory" FullName="Javax.Xml.Transform.Sax.SAXTransformerFactory">
  <TypeSignature Language="C#" Value="public abstract class SAXTransformerFactory : Javax.Xml.Transform.TransformerFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SAXTransformerFactory extends Javax.Xml.Transform.TransformerFactory" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Javax.Xml.Transform.TransformerFactory</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("javax/xml/transform/sax/SAXTransformerFactory", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This class extends TransformerFactory to provide SAX-specific
 factory methods.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">This class extends TransformerFactory to provide SAX-specific
 factory methods.  It provides two types of ContentHandlers,
 one for creating Transformers, the other for creating Templates
 objects.

 </para>
      <para tool="javadoc-to-mdoc">If an application wants to set the ErrorHandler or EntityResolver
 for an XMLReader used during a transformation, it should use a URIResolver
 to return the SAXSource which provides (with getXMLReader) a reference to
 the XMLReader.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/javax/xml/transform/sax/SAXTransformerFactory.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SAXTransformerFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>The default constructor is protected on purpose.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The default constructor is protected on purpose.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/sax/SAXTransformerFactory.html#SAXTransformerFactory()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SAXTransformerFactory (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Feature">
      <MemberSignature Language="C#" Value="public const string Feature;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Feature" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If <c><see cref="M:Javax.Xml.Transform.TransformerFactory.GetFeature(System.String)" /></c>
 returns true when passed this value as an argument,
 the TransformerFactory returned from
 <c><see cref="M:Javax.Xml.Transform.TransformerFactory.NewInstance" /></c> may
 be safely cast to a SAXTransformerFactory.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">If <c><see cref="M:Javax.Xml.Transform.TransformerFactory.GetFeature(System.String)" /></c>
 returns true when passed this value as an argument,
 the TransformerFactory returned from
 <c><see cref="M:Javax.Xml.Transform.TransformerFactory.NewInstance" /></c> may
 be safely cast to a SAXTransformerFactory.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/sax/SAXTransformerFactory.html#FEATURE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="FeatureXmlfilter">
      <MemberSignature Language="C#" Value="public const string FeatureXmlfilter;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureXmlfilter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE_XMLFILTER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If <c><see cref="M:Javax.Xml.Transform.TransformerFactory.GetFeature(System.String)" /></c>
 returns true when passed this value as an argument,
 the <c><see cref="M:Javax.Xml.Transform.Sax.SAXTransformerFactory.NewXMLFilter(Javax.Xml.Transform.ISource)" /></c>
 and <c><see cref="M:Javax.Xml.Transform.Sax.SAXTransformerFactory.NewXMLFilter(Javax.Xml.Transform.ITemplates)" /></c> methods are supported.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">If <c><see cref="M:Javax.Xml.Transform.TransformerFactory.GetFeature(System.String)" /></c>
 returns true when passed this value as an argument,
 the <c><see cref="M:Javax.Xml.Transform.Sax.SAXTransformerFactory.NewXMLFilter(Javax.Xml.Transform.ISource)" /></c>
 and <c><see cref="M:Javax.Xml.Transform.Sax.SAXTransformerFactory.NewXMLFilter(Javax.Xml.Transform.ITemplates)" /></c> methods are supported.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/sax/SAXTransformerFactory.html#FEATURE_XMLFILTER" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="NewTemplatesHandler">
      <MemberSignature Language="C#" Value="public abstract Javax.Xml.Transform.Sax.ITemplatesHandler NewTemplatesHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Javax.Xml.Transform.Sax.ITemplatesHandler NewTemplatesHandler() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newTemplatesHandler", "()Ljavax/xml/transform/sax/TemplatesHandler;", "GetNewTemplatesHandlerHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Transform.Sax.ITemplatesHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Get a TemplatesHandler object that can process SAX
 ContentHandler events into a Templates object.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Get a TemplatesHandler object that can process SAX
 ContentHandler events into a Templates object.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/sax/SAXTransformerFactory.html#newTemplatesHandler()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Javax.Xml.Transform.TransformerConfigurationException">If for some reason the
 TemplatesHandler cannot be created.
</exception>
      </Docs>
    </Member>
    <Member MemberName="NewTransformerHandler">
      <MemberSignature Language="C#" Value="public abstract Javax.Xml.Transform.Sax.ITransformerHandler NewTransformerHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Javax.Xml.Transform.Sax.ITransformerHandler NewTransformerHandler() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newTransformerHandler", "()Ljavax/xml/transform/sax/TransformerHandler;", "GetNewTransformerHandlerHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Transform.Sax.ITransformerHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Get a TransformerHandler object that can process SAX
 ContentHandler events into a Result.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Get a TransformerHandler object that can process SAX
 ContentHandler events into a Result. The transformation
 is defined as an identity (or copy) transformation, for example
 to copy a series of SAX parse events into a DOM tree.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/sax/SAXTransformerFactory.html#newTransformerHandler()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Javax.Xml.Transform.TransformerConfigurationException">If for some reason the
 TransformerHandler cannot be created.
</exception>
      </Docs>
    </Member>
    <Member MemberName="NewTransformerHandler">
      <MemberSignature Language="C#" Value="public abstract Javax.Xml.Transform.Sax.ITransformerHandler NewTransformerHandler (Javax.Xml.Transform.ISource src);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Javax.Xml.Transform.Sax.ITransformerHandler NewTransformerHandler(class Javax.Xml.Transform.ISource src) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newTransformerHandler", "(Ljavax/xml/transform/Source;)Ljavax/xml/transform/sax/TransformerHandler;", "GetNewTransformerHandler_Ljavax_xml_transform_Source_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Transform.Sax.ITransformerHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Javax.Xml.Transform.ISource" />
      </Parameters>
      <Docs>
        <param name="src">The Source of the transformation instructions.</param>
        <summary>Get a TransformerHandler object that can process SAX
 ContentHandler events into a Result, based on the transformation
 instructions specified by the argument.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Get a TransformerHandler object that can process SAX
 ContentHandler events into a Result, based on the transformation
 instructions specified by the argument.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/sax/SAXTransformerFactory.html#newTransformerHandler(javax.xml.transform.Source)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Javax.Xml.Transform.TransformerConfigurationException">If for some reason the
 TransformerHandler can not be created.
</exception>
      </Docs>
    </Member>
    <Member MemberName="NewTransformerHandler">
      <MemberSignature Language="C#" Value="public abstract Javax.Xml.Transform.Sax.ITransformerHandler NewTransformerHandler (Javax.Xml.Transform.ITemplates templates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Javax.Xml.Transform.Sax.ITransformerHandler NewTransformerHandler(class Javax.Xml.Transform.ITemplates templates) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newTransformerHandler", "(Ljavax/xml/transform/Templates;)Ljavax/xml/transform/sax/TransformerHandler;", "GetNewTransformerHandler_Ljavax_xml_transform_Templates_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Xml.Transform.Sax.ITransformerHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templates" Type="Javax.Xml.Transform.ITemplates" />
      </Parameters>
      <Docs>
        <param name="templates">The compiled transformation instructions.</param>
        <summary>Get a TransformerHandler object that can process SAX
 ContentHandler events into a Result, based on the Templates argument.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Get a TransformerHandler object that can process SAX
 ContentHandler events into a Result, based on the Templates argument.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/sax/SAXTransformerFactory.html#newTransformerHandler(javax.xml.transform.Templates)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Javax.Xml.Transform.TransformerConfigurationException">If for some reason the
 TransformerHandler can not be created.
</exception>
      </Docs>
    </Member>
    <Member MemberName="NewXMLFilter">
      <MemberSignature Language="C#" Value="public abstract Org.Xml.Sax.IXMLFilter NewXMLFilter (Javax.Xml.Transform.ISource src);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.Xml.Sax.IXMLFilter NewXMLFilter(class Javax.Xml.Transform.ISource src) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newXMLFilter", "(Ljavax/xml/transform/Source;)Lorg/xml/sax/XMLFilter;", "GetNewXMLFilter_Ljavax_xml_transform_Source_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Xml.Sax.IXMLFilter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Javax.Xml.Transform.ISource" />
      </Parameters>
      <Docs>
        <param name="src">The Source of the transformation instructions.</param>
        <summary>Create an XMLFilter that uses the given Source as the
 transformation instructions.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create an XMLFilter that uses the given Source as the
 transformation instructions.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/sax/SAXTransformerFactory.html#newXMLFilter(javax.xml.transform.Source)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Javax.Xml.Transform.TransformerConfigurationException">If for some reason the
 TemplatesHandler cannot be created.
</exception>
      </Docs>
    </Member>
    <Member MemberName="NewXMLFilter">
      <MemberSignature Language="C#" Value="public abstract Org.Xml.Sax.IXMLFilter NewXMLFilter (Javax.Xml.Transform.ITemplates templates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.Xml.Sax.IXMLFilter NewXMLFilter(class Javax.Xml.Transform.ITemplates templates) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newXMLFilter", "(Ljavax/xml/transform/Templates;)Lorg/xml/sax/XMLFilter;", "GetNewXMLFilter_Ljavax_xml_transform_Templates_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Xml.Sax.IXMLFilter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templates" Type="Javax.Xml.Transform.ITemplates" />
      </Parameters>
      <Docs>
        <param name="templates">The compiled transformation instructions.</param>
        <summary>Create an XMLFilter, based on the Templates argument.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create an XMLFilter, based on the Templates argument..</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/sax/SAXTransformerFactory.html#newXMLFilter(javax.xml.transform.Templates)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Javax.Xml.Transform.TransformerConfigurationException">If for some reason the
 TemplatesHandler cannot be created.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
