<Type Name="SQLiteQueryBuilder" FullName="Android.Database.Sqlite.SQLiteQueryBuilder">
  <TypeSignature Language="C#" Value="public class SQLiteQueryBuilder : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SQLiteQueryBuilder extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Database.Sqlite.SQLiteQueryBuilder" />
  <TypeSignature Language="F#" Value="type SQLiteQueryBuilder = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/database/sqlite/SQLiteQueryBuilder", ApiSince=1, DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This is a convience class that helps build SQL queries to be sent to
 <see cref="T:Android.Database.Sqlite.SQLiteDatabase" /> objects.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteQueryBuilder" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SQLiteQueryBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteQueryBuilder.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SQLiteQueryBuilder (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteQueryBuilder.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Database.Sqlite.SQLiteQueryBuilder : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Database.Sqlite.SQLiteQueryBuilder" Usage="new Android.Database.Sqlite.SQLiteQueryBuilder (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendColumns">
      <MemberSignature Language="C#" Value="public static void AppendColumns (Java.Lang.StringBuilder s, string[] columns);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AppendColumns(class Java.Lang.StringBuilder s, string[] columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteQueryBuilder.AppendColumns(Java.Lang.StringBuilder,System.String[])" />
      <MemberSignature Language="F#" Value="static member AppendColumns : Java.Lang.StringBuilder * string[] -&gt; unit" Usage="Android.Database.Sqlite.SQLiteQueryBuilder.AppendColumns (s, columns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("appendColumns", "(Ljava/lang/StringBuilder;[Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="Java.Lang.StringBuilder" />
        <Parameter Name="columns" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="columns">To be added.</param>
        <summary>Add the names that are non-null in columns to s, separating
 them with commas.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AppendWhere">
      <MemberSignature Language="C#" Value="public virtual void AppendWhere (Java.Lang.ICharSequence inWhere);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendWhere(class Java.Lang.ICharSequence inWhere) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteQueryBuilder.AppendWhere(Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="abstract member AppendWhere : Java.Lang.ICharSequence -&gt; unit&#xA;override this.AppendWhere : Java.Lang.ICharSequence -&gt; unit" Usage="sQLiteQueryBuilder.AppendWhere inWhere" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("appendWhere", "(Ljava/lang/CharSequence;)V", "GetAppendWhere_Ljava_lang_CharSequence_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inWhere" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="inWhere">the chunk of text to append to the WHERE clause.
</param>
        <summary>Append a chunk to the WHERE clause of the query.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AppendWhere">
      <MemberSignature Language="C#" Value="public void AppendWhere (string inWhere);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendWhere(string inWhere) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteQueryBuilder.AppendWhere(System.String)" />
      <MemberSignature Language="F#" Value="member this.AppendWhere : string -&gt; unit" Usage="sQLiteQueryBuilder.AppendWhere inWhere" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inWhere" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inWhere">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendWhereEscapeString">
      <MemberSignature Language="C#" Value="public virtual void AppendWhereEscapeString (string inWhere);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendWhereEscapeString(string inWhere) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteQueryBuilder.AppendWhereEscapeString(System.String)" />
      <MemberSignature Language="F#" Value="abstract member AppendWhereEscapeString : string -&gt; unit&#xA;override this.AppendWhereEscapeString : string -&gt; unit" Usage="sQLiteQueryBuilder.AppendWhereEscapeString inWhere" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("appendWhereEscapeString", "(Ljava/lang/String;)V", "GetAppendWhereEscapeString_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inWhere" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inWhere">the chunk of text to append to the WHERE clause. it will be escaped
 to avoid SQL injection attacks
</param>
        <summary>Append a chunk to the WHERE clause of the query.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BuildQuery">
      <MemberSignature Language="C#" Value="public virtual string BuildQuery (string[] projectionIn, string selection, string groupBy, string having, string sortOrder, string limit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string BuildQuery(string[] projectionIn, string selection, string groupBy, string having, string sortOrder, string limit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteQueryBuilder.BuildQuery(System.String[],System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member BuildQuery : string[] * string * string * string * string * string -&gt; string&#xA;override this.BuildQuery : string[] * string * string * string * string * string -&gt; string" Usage="sQLiteQueryBuilder.BuildQuery (projectionIn, selection, groupBy, having, sortOrder, limit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("buildQuery", "([Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "GetBuildQuery_arrayLjava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler", ApiSince=11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectionIn" Type="System.String[]" />
        <Parameter Name="selection" Type="System.String" />
        <Parameter Name="groupBy" Type="System.String" />
        <Parameter Name="having" Type="System.String" />
        <Parameter Name="sortOrder" Type="System.String" />
        <Parameter Name="limit" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectionIn">A list of which columns to return. Passing
    null will return all columns, which is discouraged to
    prevent reading data from storage that isn't going to be
    used.</param>
        <param name="selection">A filter declaring which rows to return,
   formatted as an SQL WHERE clause (excluding the WHERE
   itself).  Passing null will return all rows for the given
   URL.</param>
        <param name="groupBy">A filter declaring how to group rows, formatted
   as an SQL GROUP BY clause (excluding the GROUP BY itself).
   Passing null will cause the rows to not be grouped.</param>
        <param name="having">A filter declare which row groups to include in
   the cursor, if row grouping is being used, formatted as an
   SQL HAVING clause (excluding the HAVING itself).  Passing
   null will cause all row groups to be included, and is
   required when row grouping is not being used.</param>
        <param name="sortOrder">How to order the rows, formatted as an SQL
   ORDER BY clause (excluding the ORDER BY itself). Passing null
   will use the default sort order, which may be unordered.</param>
        <param name="limit">Limits the number of rows returned by the query,
   formatted as LIMIT clause. Passing null denotes no LIMIT clause.</param>
        <summary>Construct a SELECT statement suitable for use in a group of
 SELECT statements that will be joined through UNION operators
 in buildUnionQuery.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="BuildQuery">
      <MemberSignature Language="C#" Value="public virtual string BuildQuery (string[] projectionIn, string selection, string[] selectionArgs, string groupBy, string having, string sortOrder, string limit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string BuildQuery(string[] projectionIn, string selection, string[] selectionArgs, string groupBy, string having, string sortOrder, string limit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteQueryBuilder.BuildQuery(System.String[],System.String,System.String[],System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member BuildQuery : string[] * string * string[] * string * string * string * string -&gt; string&#xA;override this.BuildQuery : string[] * string * string[] * string * string * string * string -&gt; string" Usage="sQLiteQueryBuilder.BuildQuery (projectionIn, selection, selectionArgs, groupBy, having, sortOrder, limit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("buildQuery", "([Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "GetBuildQuery_arrayLjava_lang_String_Ljava_lang_String_arrayLjava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectionIn" Type="System.String[]" />
        <Parameter Name="selection" Type="System.String" />
        <Parameter Name="selectionArgs" Type="System.String[]" />
        <Parameter Name="groupBy" Type="System.String" />
        <Parameter Name="having" Type="System.String" />
        <Parameter Name="sortOrder" Type="System.String" />
        <Parameter Name="limit" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectionIn">To be added.</param>
        <param name="selection">To be added.</param>
        <param name="selectionArgs">To be added.</param>
        <param name="groupBy">To be added.</param>
        <param name="having">To be added.</param>
        <param name="sortOrder">To be added.</param>
        <param name="limit">To be added.</param>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BuildQueryString">
      <MemberSignature Language="C#" Value="public static string BuildQueryString (bool distinct, string tables, string[] columns, string where, string groupBy, string having, string orderBy, string limit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string BuildQueryString(bool distinct, string tables, string[] columns, string where, string groupBy, string having, string orderBy, string limit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteQueryBuilder.BuildQueryString(System.Boolean,System.String,System.String[],System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="F#" Value="static member BuildQueryString : bool * string * string[] * string * string * string * string * string -&gt; string" Usage="Android.Database.Sqlite.SQLiteQueryBuilder.BuildQueryString (distinct, tables, columns, where, groupBy, having, orderBy, limit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("buildQueryString", "(ZLjava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="distinct" Type="System.Boolean" />
        <Parameter Name="tables" Type="System.String" />
        <Parameter Name="columns" Type="System.String[]" />
        <Parameter Name="where" Type="System.String" />
        <Parameter Name="groupBy" Type="System.String" />
        <Parameter Name="having" Type="System.String" />
        <Parameter Name="orderBy" Type="System.String" />
        <Parameter Name="limit" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="distinct">true if you want each row to be unique, false otherwise.</param>
        <param name="tables">The table names to compile the query against.</param>
        <param name="columns">A list of which columns to return. Passing null will
            return all columns, which is discouraged to prevent reading
            data from storage that isn't going to be used.</param>
        <param name="where">A filter declaring which rows to return, formatted as an SQL
            WHERE clause (excluding the WHERE itself). Passing null will
            return all rows for the given URL.</param>
        <param name="groupBy">A filter declaring how to group rows, formatted as an SQL
            GROUP BY clause (excluding the GROUP BY itself). Passing null
            will cause the rows to not be grouped.</param>
        <param name="having">A filter declare which row groups to include in the cursor,
            if row grouping is being used, formatted as an SQL HAVING
            clause (excluding the HAVING itself). Passing null will cause
            all row groups to be included, and is required when row
            grouping is not being used.</param>
        <param name="orderBy">How to order the rows, formatted as an SQL ORDER BY clause
            (excluding the ORDER BY itself). Passing null will use the
            default sort order, which may be unordered.</param>
        <param name="limit">Limits the number of rows returned by the query,
            formatted as LIMIT clause. Passing null denotes no LIMIT clause.</param>
        <summary>Build an SQL query string from the given clauses.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BuildUnionQuery">
      <MemberSignature Language="C#" Value="public virtual string BuildUnionQuery (string[] subQueries, string sortOrder, string limit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string BuildUnionQuery(string[] subQueries, string sortOrder, string limit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteQueryBuilder.BuildUnionQuery(System.String[],System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member BuildUnionQuery : string[] * string * string -&gt; string&#xA;override this.BuildUnionQuery : string[] * string * string -&gt; string" Usage="sQLiteQueryBuilder.BuildUnionQuery (subQueries, sortOrder, limit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("buildUnionQuery", "([Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "GetBuildUnionQuery_arrayLjava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subQueries" Type="System.String[]" />
        <Parameter Name="sortOrder" Type="System.String" />
        <Parameter Name="limit" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subQueries">an array of SQL SELECT statements, all of
   which must have the same columns as the same positions in
   their results</param>
        <param name="sortOrder">How to order the rows, formatted as an SQL
   ORDER BY clause (excluding the ORDER BY itself).  Passing
   null will use the default sort order, which may be unordered.</param>
        <param name="limit">The limit clause, which applies to the entire union result set</param>
        <summary>Given a set of subqueries, all of which are SELECT statements,
 construct a query that returns the union of what those
 subqueries return.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BuildUnionSubQuery">
      <MemberSignature Language="C#" Value="public virtual string BuildUnionSubQuery (string typeDiscriminatorColumn, string[] unionColumns, System.Collections.Generic.ICollection&lt;string&gt; columnsPresentInTable, int computedColumnsOffset, string typeDiscriminatorValue, string selection, string groupBy, string having);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string BuildUnionSubQuery(string typeDiscriminatorColumn, string[] unionColumns, class System.Collections.Generic.ICollection`1&lt;string&gt; columnsPresentInTable, int32 computedColumnsOffset, string typeDiscriminatorValue, string selection, string groupBy, string having) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteQueryBuilder.BuildUnionSubQuery(System.String,System.String[],System.Collections.Generic.ICollection{System.String},System.Int32,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member BuildUnionSubQuery : string * string[] * System.Collections.Generic.ICollection&lt;string&gt; * int * string * string * string * string -&gt; string&#xA;override this.BuildUnionSubQuery : string * string[] * System.Collections.Generic.ICollection&lt;string&gt; * int * string * string * string * string -&gt; string" Usage="sQLiteQueryBuilder.BuildUnionSubQuery (typeDiscriminatorColumn, unionColumns, columnsPresentInTable, computedColumnsOffset, typeDiscriminatorValue, selection, groupBy, having)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("buildUnionSubQuery", "(Ljava/lang/String;[Ljava/lang/String;Ljava/util/Set;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "GetBuildUnionSubQuery_Ljava_lang_String_arrayLjava_lang_String_Ljava_util_Set_ILjava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler", ApiSince=11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDiscriminatorColumn" Type="System.String" />
        <Parameter Name="unionColumns" Type="System.String[]" />
        <Parameter Name="columnsPresentInTable" Type="System.Collections.Generic.ICollection&lt;System.String&gt;" />
        <Parameter Name="computedColumnsOffset" Type="System.Int32" />
        <Parameter Name="typeDiscriminatorValue" Type="System.String" />
        <Parameter Name="selection" Type="System.String" />
        <Parameter Name="groupBy" Type="System.String" />
        <Parameter Name="having" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeDiscriminatorColumn">To be added.</param>
        <param name="unionColumns">To be added.</param>
        <param name="columnsPresentInTable">To be added.</param>
        <param name="computedColumnsOffset">To be added.</param>
        <param name="typeDiscriminatorValue">To be added.</param>
        <param name="selection">To be added.</param>
        <param name="groupBy">To be added.</param>
        <param name="having">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildUnionSubQuery">
      <MemberSignature Language="C#" Value="public virtual string BuildUnionSubQuery (string typeDiscriminatorColumn, string[] unionColumns, System.Collections.Generic.ICollection&lt;string&gt; columnsPresentInTable, int computedColumnsOffset, string typeDiscriminatorValue, string selection, string[] selectionArgs, string groupBy, string having);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string BuildUnionSubQuery(string typeDiscriminatorColumn, string[] unionColumns, class System.Collections.Generic.ICollection`1&lt;string&gt; columnsPresentInTable, int32 computedColumnsOffset, string typeDiscriminatorValue, string selection, string[] selectionArgs, string groupBy, string having) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteQueryBuilder.BuildUnionSubQuery(System.String,System.String[],System.Collections.Generic.ICollection{System.String},System.Int32,System.String,System.String,System.String[],System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member BuildUnionSubQuery : string * string[] * System.Collections.Generic.ICollection&lt;string&gt; * int * string * string * string[] * string * string -&gt; string&#xA;override this.BuildUnionSubQuery : string * string[] * System.Collections.Generic.ICollection&lt;string&gt; * int * string * string * string[] * string * string -&gt; string" Usage="sQLiteQueryBuilder.BuildUnionSubQuery (typeDiscriminatorColumn, unionColumns, columnsPresentInTable, computedColumnsOffset, typeDiscriminatorValue, selection, selectionArgs, groupBy, having)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("buildUnionSubQuery", "(Ljava/lang/String;[Ljava/lang/String;Ljava/util/Set;ILjava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "GetBuildUnionSubQuery_Ljava_lang_String_arrayLjava_lang_String_Ljava_util_Set_ILjava_lang_String_Ljava_lang_String_arrayLjava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDiscriminatorColumn" Type="System.String" />
        <Parameter Name="unionColumns" Type="System.String[]" />
        <Parameter Name="columnsPresentInTable" Type="System.Collections.Generic.ICollection&lt;System.String&gt;" />
        <Parameter Name="computedColumnsOffset" Type="System.Int32" />
        <Parameter Name="typeDiscriminatorValue" Type="System.String" />
        <Parameter Name="selection" Type="System.String" />
        <Parameter Name="selectionArgs" Type="System.String[]" />
        <Parameter Name="groupBy" Type="System.String" />
        <Parameter Name="having" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeDiscriminatorColumn">To be added.</param>
        <param name="unionColumns">To be added.</param>
        <param name="columnsPresentInTable">To be added.</param>
        <param name="computedColumnsOffset">To be added.</param>
        <param name="typeDiscriminatorValue">To be added.</param>
        <param name="selection">To be added.</param>
        <param name="selectionArgs">To be added.</param>
        <param name="groupBy">To be added.</param>
        <param name="having">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Database.Sqlite.SQLiteQueryBuilder.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Database.Sqlite.SQLiteQueryBuilder.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public virtual Android.Database.ICursor Query (Android.Database.Sqlite.SQLiteDatabase db, string[] projectionIn, string selection, string[] selectionArgs, string groupBy, string having, string sortOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Database.ICursor Query(class Android.Database.Sqlite.SQLiteDatabase db, string[] projectionIn, string selection, string[] selectionArgs, string groupBy, string having, string sortOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteQueryBuilder.Query(Android.Database.Sqlite.SQLiteDatabase,System.String[],System.String,System.String[],System.String,System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member Query : Android.Database.Sqlite.SQLiteDatabase * string[] * string * string[] * string * string * string -&gt; Android.Database.ICursor&#xA;override this.Query : Android.Database.Sqlite.SQLiteDatabase * string[] * string * string[] * string * string * string -&gt; Android.Database.ICursor" Usage="sQLiteQueryBuilder.Query (db, projectionIn, selection, selectionArgs, groupBy, having, sortOrder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("query", "(Landroid/database/sqlite/SQLiteDatabase;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;", "GetQuery_Landroid_database_sqlite_SQLiteDatabase_arrayLjava_lang_String_Ljava_lang_String_arrayLjava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.ICursor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="db" Type="Android.Database.Sqlite.SQLiteDatabase" />
        <Parameter Name="projectionIn" Type="System.String[]" />
        <Parameter Name="selection" Type="System.String" />
        <Parameter Name="selectionArgs" Type="System.String[]" />
        <Parameter Name="groupBy" Type="System.String" />
        <Parameter Name="having" Type="System.String" />
        <Parameter Name="sortOrder" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="db">the database to query on</param>
        <param name="projectionIn">A list of which columns to return. Passing
   null will return all columns, which is discouraged to prevent
   reading data from storage that isn't going to be used.</param>
        <param name="selection">A filter declaring which rows to return,
   formatted as an SQL WHERE clause (excluding the WHERE
   itself). Passing null will return all rows for the given URL.</param>
        <param name="selectionArgs">You may include ?s in selection, which
   will be replaced by the values from selectionArgs, in order
   that they appear in the selection. The values will be bound
   as Strings.</param>
        <param name="groupBy">A filter declaring how to group rows, formatted
   as an SQL GROUP BY clause (excluding the GROUP BY
   itself). Passing null will cause the rows to not be grouped.</param>
        <param name="having">A filter declare which row groups to include in
   the cursor, if row grouping is being used, formatted as an
   SQL HAVING clause (excluding the HAVING itself).  Passing
   null will cause all row groups to be included, and is
   required when row grouping is not being used.</param>
        <param name="sortOrder">How to order the rows, formatted as an SQL
   ORDER BY clause (excluding the ORDER BY itself). Passing null
   will use the default sort order, which may be unordered.</param>
        <summary>Perform a query by combining all current settings and the
 information passed into this method.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.ContentResolver.Query(Android.Net.Uri, System.String[], System.String[], System.String[], System.String[])" />
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public virtual Android.Database.ICursor Query (Android.Database.Sqlite.SQLiteDatabase db, string[] projectionIn, string selection, string[] selectionArgs, string groupBy, string having, string sortOrder, string limit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Database.ICursor Query(class Android.Database.Sqlite.SQLiteDatabase db, string[] projectionIn, string selection, string[] selectionArgs, string groupBy, string having, string sortOrder, string limit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteQueryBuilder.Query(Android.Database.Sqlite.SQLiteDatabase,System.String[],System.String,System.String[],System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member Query : Android.Database.Sqlite.SQLiteDatabase * string[] * string * string[] * string * string * string * string -&gt; Android.Database.ICursor&#xA;override this.Query : Android.Database.Sqlite.SQLiteDatabase * string[] * string * string[] * string * string * string * string -&gt; Android.Database.ICursor" Usage="sQLiteQueryBuilder.Query (db, projectionIn, selection, selectionArgs, groupBy, having, sortOrder, limit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("query", "(Landroid/database/sqlite/SQLiteDatabase;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;", "GetQuery_Landroid_database_sqlite_SQLiteDatabase_arrayLjava_lang_String_Ljava_lang_String_arrayLjava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.ICursor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="db" Type="Android.Database.Sqlite.SQLiteDatabase" />
        <Parameter Name="projectionIn" Type="System.String[]" />
        <Parameter Name="selection" Type="System.String" />
        <Parameter Name="selectionArgs" Type="System.String[]" />
        <Parameter Name="groupBy" Type="System.String" />
        <Parameter Name="having" Type="System.String" />
        <Parameter Name="sortOrder" Type="System.String" />
        <Parameter Name="limit" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="db">the database to query on</param>
        <param name="projectionIn">A list of which columns to return. Passing
   null will return all columns, which is discouraged to prevent
   reading data from storage that isn't going to be used.</param>
        <param name="selection">A filter declaring which rows to return,
   formatted as an SQL WHERE clause (excluding the WHERE
   itself). Passing null will return all rows for the given URL.</param>
        <param name="selectionArgs">You may include ?s in selection, which
   will be replaced by the values from selectionArgs, in order
   that they appear in the selection. The values will be bound
   as Strings.</param>
        <param name="groupBy">A filter declaring how to group rows, formatted
   as an SQL GROUP BY clause (excluding the GROUP BY
   itself). Passing null will cause the rows to not be grouped.</param>
        <param name="having">A filter declare which row groups to include in
   the cursor, if row grouping is being used, formatted as an
   SQL HAVING clause (excluding the HAVING itself).  Passing
   null will cause all row groups to be included, and is
   required when row grouping is not being used.</param>
        <param name="sortOrder">How to order the rows, formatted as an SQL
   ORDER BY clause (excluding the ORDER BY itself). Passing null
   will use the default sort order, which may be unordered.</param>
        <param name="limit">Limits the number of rows returned by the query,
   formatted as LIMIT clause. Passing null denotes no LIMIT clause.</param>
        <summary>Perform a query by combining all current settings and the
 information passed into this method.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.ContentResolver.Query(Android.Net.Uri, System.String[], System.String[], System.String[], System.String[])" />
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public virtual Android.Database.ICursor Query (Android.Database.Sqlite.SQLiteDatabase db, string[] projectionIn, string selection, string[] selectionArgs, string groupBy, string having, string sortOrder, string limit, Android.OS.CancellationSignal cancellationSignal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Database.ICursor Query(class Android.Database.Sqlite.SQLiteDatabase db, string[] projectionIn, string selection, string[] selectionArgs, string groupBy, string having, string sortOrder, string limit, class Android.OS.CancellationSignal cancellationSignal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteQueryBuilder.Query(Android.Database.Sqlite.SQLiteDatabase,System.String[],System.String,System.String[],System.String,System.String,System.String,System.String,Android.OS.CancellationSignal)" />
      <MemberSignature Language="F#" Value="abstract member Query : Android.Database.Sqlite.SQLiteDatabase * string[] * string * string[] * string * string * string * string * Android.OS.CancellationSignal -&gt; Android.Database.ICursor&#xA;override this.Query : Android.Database.Sqlite.SQLiteDatabase * string[] * string * string[] * string * string * string * string * Android.OS.CancellationSignal -&gt; Android.Database.ICursor" Usage="sQLiteQueryBuilder.Query (db, projectionIn, selection, selectionArgs, groupBy, having, sortOrder, limit, cancellationSignal)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("query", "(Landroid/database/sqlite/SQLiteDatabase;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/os/CancellationSignal;)Landroid/database/Cursor;", "GetQuery_Landroid_database_sqlite_SQLiteDatabase_arrayLjava_lang_String_Ljava_lang_String_arrayLjava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Landroid_os_CancellationSignal_Handler", ApiSince=16)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.ICursor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="db" Type="Android.Database.Sqlite.SQLiteDatabase" />
        <Parameter Name="projectionIn" Type="System.String[]" />
        <Parameter Name="selection" Type="System.String" />
        <Parameter Name="selectionArgs" Type="System.String[]" />
        <Parameter Name="groupBy" Type="System.String" />
        <Parameter Name="having" Type="System.String" />
        <Parameter Name="sortOrder" Type="System.String" />
        <Parameter Name="limit" Type="System.String" />
        <Parameter Name="cancellationSignal" Type="Android.OS.CancellationSignal" />
      </Parameters>
      <Docs>
        <param name="db">the database to query on</param>
        <param name="projectionIn">A list of which columns to return. Passing
   null will return all columns, which is discouraged to prevent
   reading data from storage that isn't going to be used.</param>
        <param name="selection">A filter declaring which rows to return,
   formatted as an SQL WHERE clause (excluding the WHERE
   itself). Passing null will return all rows for the given URL.</param>
        <param name="selectionArgs">You may include ?s in selection, which
   will be replaced by the values from selectionArgs, in order
   that they appear in the selection. The values will be bound
   as Strings.</param>
        <param name="groupBy">A filter declaring how to group rows, formatted
   as an SQL GROUP BY clause (excluding the GROUP BY
   itself). Passing null will cause the rows to not be grouped.</param>
        <param name="having">A filter declare which row groups to include in
   the cursor, if row grouping is being used, formatted as an
   SQL HAVING clause (excluding the HAVING itself).  Passing
   null will cause all row groups to be included, and is
   required when row grouping is not being used.</param>
        <param name="sortOrder">How to order the rows, formatted as an SQL
   ORDER BY clause (excluding the ORDER BY itself). Passing null
   will use the default sort order, which may be unordered.</param>
        <param name="limit">Limits the number of rows returned by the query,
   formatted as LIMIT clause. Passing null denotes no LIMIT clause.</param>
        <param name="cancellationSignal">A signal to cancel the operation in progress, or null if none.
 If the operation is canceled, then <see cref="T:Android.OS.OperationCanceledException" /> will be thrown
 when the query is executed.</param>
        <summary>Perform a query by combining all current settings and the
 information passed into this method.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Content.ContentResolver.Query(Android.Net.Uri, System.String[], System.String[], System.String[], System.String[])" />
      </Docs>
    </Member>
    <Member MemberName="SetCursorFactory">
      <MemberSignature Language="C#" Value="public virtual void SetCursorFactory (Android.Database.Sqlite.SQLiteDatabase.ICursorFactory factory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCursorFactory(class Android.Database.Sqlite.SQLiteDatabase/ICursorFactory factory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteQueryBuilder.SetCursorFactory(Android.Database.Sqlite.SQLiteDatabase.ICursorFactory)" />
      <MemberSignature Language="F#" Value="abstract member SetCursorFactory : Android.Database.Sqlite.SQLiteDatabase.ICursorFactory -&gt; unit&#xA;override this.SetCursorFactory : Android.Database.Sqlite.SQLiteDatabase.ICursorFactory -&gt; unit" Usage="sQLiteQueryBuilder.SetCursorFactory factory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setCursorFactory", "(Landroid/database/sqlite/SQLiteDatabase$CursorFactory;)V", "GetSetCursorFactory_Landroid_database_sqlite_SQLiteDatabase_CursorFactory_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factory" Type="Android.Database.Sqlite.SQLiteDatabase+ICursorFactory" />
      </Parameters>
      <Docs>
        <param name="factory">the factory to use.
</param>
        <summary>Sets the cursor factory to be used for the query.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetDistinct">
      <MemberSignature Language="C#" Value="public virtual void SetDistinct (bool distinct);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDistinct(bool distinct) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteQueryBuilder.SetDistinct(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetDistinct : bool -&gt; unit&#xA;override this.SetDistinct : bool -&gt; unit" Usage="sQLiteQueryBuilder.SetDistinct distinct" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDistinct", "(Z)V", "GetSetDistinct_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="distinct" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="distinct">if true the query is DISTINCT, otherwise it isn't
</param>
        <summary>Mark the query as DISTINCT.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetProjectionMap">
      <MemberSignature Language="C#" Value="public virtual void SetProjectionMap (System.Collections.Generic.IDictionary&lt;string,string&gt; columnMap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetProjectionMap(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; columnMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteQueryBuilder.SetProjectionMap(System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="F#" Value="abstract member SetProjectionMap : System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; unit&#xA;override this.SetProjectionMap : System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; unit" Usage="sQLiteQueryBuilder.SetProjectionMap columnMap" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setProjectionMap", "(Ljava/util/Map;)V", "GetSetProjectionMap_Ljava_util_Map_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnMap" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="columnMap">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStrict">
      <MemberSignature Language="C#" Value="public virtual void SetStrict (bool flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetStrict(bool flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Database.Sqlite.SQLiteQueryBuilder.SetStrict(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetStrict : bool -&gt; unit&#xA;override this.SetStrict : bool -&gt; unit" Usage="sQLiteQueryBuilder.SetStrict flag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setStrict", "(Z)V", "GetSetStrict_ZHandler", ApiSince=14)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="flag">To be added.</param>
        <summary>When set, the selection is verified against malicious arguments.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="Tables">
      <MemberSignature Language="C#" Value="public virtual string Tables { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Tables" />
      <MemberSignature Language="DocId" Value="P:Android.Database.Sqlite.SQLiteQueryBuilder.Tables" />
      <MemberSignature Language="F#" Value="member this.Tables : string with get, set" Usage="Android.Database.Sqlite.SQLiteQueryBuilder.Tables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTables", "()Ljava/lang/String;", "GetGetTablesHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTables", "(Ljava/lang/String;)V", "GetSetTables_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the list of tables being queried</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Database.Sqlite.SQLiteQueryBuilder.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Database.Sqlite.SQLiteQueryBuilder.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Database.Sqlite.SQLiteQueryBuilder.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Database.Sqlite.SQLiteQueryBuilder.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
