<Type Name="MifareClassic" FullName="Android.Nfc.Tech.MifareClassic">
  <TypeSignature Language="C#" Value="public sealed class MifareClassic : Android.Nfc.Tech.BasicTagTechnology" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MifareClassic extends Android.Nfc.Tech.BasicTagTechnology" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Nfc.Tech.BasicTagTechnology</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/nfc/tech/MifareClassic", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="10">
    <summary>Provides access to MIFARE Classic properties and I/O operations on a <c><see cref="T:Android.Nfc.Tag" /></c>.</summary>
    <remarks />
    <since version="Added in API level 10" />
  </Docs>
  <Members>
    <Member MemberName="AuthenticateSectorWithKeyA">
      <MemberSignature Language="C#" Value="public bool AuthenticateSectorWithKeyA (int sectorIndex, byte[] key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool AuthenticateSectorWithKeyA(int32 sectorIndex, unsigned int8[] key) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("authenticateSectorWithKeyA", "(I[B)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Int32" />
        <Parameter Name="p1" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="sectorIndex">index of sector to authenticate, starting from 0</param>
        <param name="key">6-byte authentication key</param>
        <summary>Authenticate a sector with key A.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 10" />
        <exception cref="T:Android.Nfc.TagLostException">if the tag leaves the field</exception>
        <exception cref="T:Java.IO.IOException">if there is an I/O failure, or the operation is canceled
</exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateSectorWithKeyB">
      <MemberSignature Language="C#" Value="public bool AuthenticateSectorWithKeyB (int sectorIndex, byte[] key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool AuthenticateSectorWithKeyB(int32 sectorIndex, unsigned int8[] key) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("authenticateSectorWithKeyB", "(I[B)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Int32" />
        <Parameter Name="p1" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="sectorIndex">index of sector to authenticate, starting from 0</param>
        <param name="key">6-byte authentication key</param>
        <summary>Authenticate a sector with key B.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 10" />
        <exception cref="T:Android.Nfc.TagLostException">if the tag leaves the field</exception>
        <exception cref="T:Java.IO.IOException">if there is an I/O failure, or the operation is canceled
</exception>
      </Docs>
    </Member>
    <Member MemberName="BlockCount">
      <MemberSignature Language="C#" Value="public int BlockCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getBlockCount", "()I", "GetGetBlockCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the total number of MIFARE Classic blocks.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="BlockSize">
      <MemberSignature Language="C#" Value="public const int BlockSize = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 BlockSize = (16)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("BLOCK_SIZE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>Size of a MIFARE Classic block (in bytes) </summary>
        <remarks />
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="BlockToSector">
      <MemberSignature Language="C#" Value="public int BlockToSector (int blockIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 BlockToSector(int32 blockIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("blockToSector", "(I)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="blockIndex">index of block to lookup, starting from 0</param>
        <summary>Return the sector that contains a given block.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("close", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disable I/O operations to the tag from this <c><see cref="T:Android.Nfc.Tech.ITagTechnology" /></c> object, and release resources.</summary>
        <remarks />
        <since version="Added in API level 10" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public override void Connect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Connect() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("connect", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enable I/O operations to the tag from this <c><see cref="T:Android.Nfc.Tech.ITagTechnology" /></c> object.</summary>
        <remarks />
        <since version="Added in API level 10" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Decrement">
      <MemberSignature Language="C#" Value="public void Decrement (int blockIndex, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Decrement(int32 blockIndex, int32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("decrement", "(II)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Int32" />
        <Parameter Name="p1" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="blockIndex">index of block to decrement, starting from 0</param>
        <param name="value">non-negative to decrement by</param>
        <summary>Decrement a value block, storing the result in the temporary block on the tag.</summary>
        <remarks />
        <since version="Added in API level 10" />
        <exception cref="T:Android.Nfc.TagLostException">if the tag leaves the field</exception>
        <exception cref="T:Java.IO.IOException">if there is an I/O failure, or the operation is canceled
</exception>
      </Docs>
    </Member>
    <Member MemberName="DecrementAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DecrementAsync (int blockIndex, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task DecrementAsync(int32 blockIndex, int32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Int32" />
        <Parameter Name="p1" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="blockIndex">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public static Android.Nfc.Tech.MifareClassic Get (Android.Nfc.Tag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Nfc.Tech.MifareClassic Get(class Android.Nfc.Tag tag) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("get", "(Landroid/nfc/Tag;)Landroid/nfc/tech/MifareClassic;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Nfc.Tech.MifareClassic</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="Android.Nfc.Tag" />
      </Parameters>
      <Docs>
        <param name="tag">an MIFARE Classic compatible tag</param>
        <summary>Get an instance of <c><see cref="T:Android.Nfc.Tech.MifareClassic" /></c> for the given tag.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="GetBlockCountInSector">
      <MemberSignature Language="C#" Value="public int GetBlockCountInSector (int sectorIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetBlockCountInSector(int32 sectorIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getBlockCountInSector", "(I)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sectorIndex">index of sector, starting from 0</param>
        <summary>Return the number of blocks in the given sector.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="Increment">
      <MemberSignature Language="C#" Value="public void Increment (int blockIndex, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Increment(int32 blockIndex, int32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("increment", "(II)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Int32" />
        <Parameter Name="p1" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="blockIndex">index of block to increment, starting from 0</param>
        <param name="value">non-negative to increment by</param>
        <summary>Increment a value block, storing the result in the temporary block on the tag.</summary>
        <remarks />
        <since version="Added in API level 10" />
        <exception cref="T:Android.Nfc.TagLostException">if the tag leaves the field</exception>
        <exception cref="T:Java.IO.IOException">if there is an I/O failure, or the operation is canceled
</exception>
      </Docs>
    </Member>
    <Member MemberName="IncrementAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task IncrementAsync (int blockIndex, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task IncrementAsync(int32 blockIndex, int32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Int32" />
        <Parameter Name="p1" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="blockIndex">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="IsConnected">
      <MemberSignature Language="C#" Value="public override bool IsConnected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConnected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isConnected", "()Z", "GetIsConnectedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Helper to indicate if I/O operations should be possible.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="KeyDefault">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;byte&gt; KeyDefault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;unsigned int8&gt; KeyDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("KEY_DEFAULT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The default factory key.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="KeyMifareApplicationDirectory">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;byte&gt; KeyMifareApplicationDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;unsigned int8&gt; KeyMifareApplicationDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("KEY_MIFARE_APPLICATION_DIRECTORY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The well-known key for tags formatted according to the
 MIFARE Application Directory (MAD) specification.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="KeyNfcForum">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;byte&gt; KeyNfcForum { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;unsigned int8&gt; KeyNfcForum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("KEY_NFC_FORUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The well-known key for tags formatted according to the
 NDEF on MIFARE Classic specification.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="MaxTransceiveLength">
      <MemberSignature Language="C#" Value="public int MaxTransceiveLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxTransceiveLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMaxTransceiveLength", "()I", "GetGetMaxTransceiveLengthHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the maximum number of bytes that can be sent with <c><see cref="M:Android.Nfc.Tech.MifareClassic.Transceive(System.Byte[])" /></c>.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="ReadBlock">
      <MemberSignature Language="C#" Value="public byte[] ReadBlock (int blockIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] ReadBlock(int32 blockIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readBlock", "(I)[B", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="blockIndex">index of block to read, starting from 0</param>
        <summary>Read 16-byte block.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 10" />
        <exception cref="T:Android.Nfc.TagLostException">if the tag leaves the field</exception>
        <exception cref="T:Java.IO.IOException">if there is an I/O failure, or the operation is canceled
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; ReadBlockAsync (int blockIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; ReadBlockAsync(int32 blockIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="blockIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Restore">
      <MemberSignature Language="C#" Value="public void Restore (int blockIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Restore(int32 blockIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("restore", "(I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="blockIndex">index of block to copy from</param>
        <summary>Copy from a value block to the temporary block.</summary>
        <remarks />
        <since version="Added in API level 10" />
        <exception cref="T:Android.Nfc.TagLostException">if the tag leaves the field</exception>
        <exception cref="T:Java.IO.IOException">if there is an I/O failure, or the operation is canceled
</exception>
      </Docs>
    </Member>
    <Member MemberName="RestoreAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RestoreAsync (int blockIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task RestoreAsync(int32 blockIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="blockIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SectorCount">
      <MemberSignature Language="C#" Value="public int SectorCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SectorCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSectorCount", "()I", "GetGetSectorCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the number of MIFARE Classic sectors.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="SectorToBlock">
      <MemberSignature Language="C#" Value="public int SectorToBlock (int sectorIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 SectorToBlock(int32 sectorIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sectorToBlock", "(I)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sectorIndex">index of sector to lookup, starting from 0</param>
        <summary>Return the first block of a given sector.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSize", "()I", "GetGetSizeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the size of the tag in bytes
 </summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="Size1k">
      <MemberSignature Language="C#" Value="public const Android.Nfc.Tech.MifareClassicSize Size1k = 1024;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Nfc.Tech.MifareClassicSize Size1k = (1024)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SIZE_1K")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Nfc.Tech.MifareClassicSize enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Nfc.Tech.MifareClassicSize</ReturnType>
      </ReturnValue>
      <MemberValue>1024</MemberValue>
      <Docs>
        <summary>Tag contains 16 sectors, each with 4 blocks.</summary>
        <remarks />
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="Size2k">
      <MemberSignature Language="C#" Value="public const Android.Nfc.Tech.MifareClassicSize Size2k = 2048;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Nfc.Tech.MifareClassicSize Size2k = (2048)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SIZE_2K")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Nfc.Tech.MifareClassicSize enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Nfc.Tech.MifareClassicSize</ReturnType>
      </ReturnValue>
      <MemberValue>2048</MemberValue>
      <Docs>
        <summary>Tag contains 32 sectors, each with 4 blocks.</summary>
        <remarks />
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="Size4k">
      <MemberSignature Language="C#" Value="public const Android.Nfc.Tech.MifareClassicSize Size4k = 4096;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Nfc.Tech.MifareClassicSize Size4k = (4096)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SIZE_4K")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Nfc.Tech.MifareClassicSize enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Nfc.Tech.MifareClassicSize</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary>Tag contains 40 sectors.</summary>
        <remarks />
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="SizeMini">
      <MemberSignature Language="C#" Value="public const Android.Nfc.Tech.MifareClassicSize SizeMini = 320;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Nfc.Tech.MifareClassicSize SizeMini = (320)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SIZE_MINI")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Nfc.Tech.MifareClassicSize enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Nfc.Tech.MifareClassicSize</ReturnType>
      </ReturnValue>
      <MemberValue>320</MemberValue>
      <Docs>
        <summary>Tag contains 5 sectors, each with 4 blocks.</summary>
        <remarks />
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public override Android.Nfc.Tag Tag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Nfc.Tag Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTag", "()Landroid/nfc/Tag;", "GetGetTagHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Nfc.Tag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the <c><see cref="T:Android.Nfc.Tag" /></c> object backing this <c><see cref="T:Android.Nfc.Tech.ITagTechnology" /></c> object.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTimeout", "()I", "GetGetTimeoutHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTimeout", "(I)V", "GetSetTimeout_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the current <c><see cref="M:Android.Nfc.Tech.MifareClassic.Transceive(System.Byte[])" /></c> timeout in milliseconds.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="Transceive">
      <MemberSignature Language="C#" Value="public byte[] Transceive (byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Transceive(unsigned int8[] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("transceive", "([B)[B", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>Send raw NfcA data to a tag and receive the response.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 10" />
        <exception cref="T:Java.IO.IOException" />
        <altmember cref="M:Android.Nfc.Tech.NfcA.Transceive(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="TransceiveAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; TransceiveAsync (byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; TransceiveAsync(unsigned int8[] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Transfer">
      <MemberSignature Language="C#" Value="public void Transfer (int blockIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transfer(int32 blockIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("transfer", "(I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="blockIndex">index of block to copy to</param>
        <summary>Copy from the temporary block to a value block.</summary>
        <remarks />
        <since version="Added in API level 10" />
        <exception cref="T:Android.Nfc.TagLostException">if the tag leaves the field</exception>
        <exception cref="T:Java.IO.IOException">if there is an I/O failure, or the operation is canceled
</exception>
      </Docs>
    </Member>
    <Member MemberName="TransferAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task TransferAsync (int blockIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task TransferAsync(int32 blockIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="blockIndex">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Android.Nfc.Tech.MifareClassicType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Nfc.Tech.MifareClassicType Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getType", "()I", "GetGetTypeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Nfc.Tech.MifareClassicType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the type of this MIFARE Classic compatible tag.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="TypeClassic">
      <MemberSignature Language="C#" Value="public const Android.Nfc.Tech.MifareClassicType TypeClassic = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Nfc.Tech.MifareClassicType TypeClassic = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TYPE_CLASSIC")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Nfc.Tech.MifareClassicType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Nfc.Tech.MifareClassicType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>A MIFARE Classic tag </summary>
        <remarks />
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="TypePlus">
      <MemberSignature Language="C#" Value="public const Android.Nfc.Tech.MifareClassicType TypePlus = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Nfc.Tech.MifareClassicType TypePlus = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TYPE_PLUS")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Nfc.Tech.MifareClassicType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Nfc.Tech.MifareClassicType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>A MIFARE Plus tag </summary>
        <remarks />
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="TypePro">
      <MemberSignature Language="C#" Value="public const Android.Nfc.Tech.MifareClassicType TypePro = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Nfc.Tech.MifareClassicType TypePro = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TYPE_PRO")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Nfc.Tech.MifareClassicType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Nfc.Tech.MifareClassicType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>A MIFARE Pro tag </summary>
        <remarks />
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="TypeUnknown">
      <MemberSignature Language="C#" Value="public const Android.Nfc.Tech.MifareClassicType TypeUnknown = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Nfc.Tech.MifareClassicType TypeUnknown = (-1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TYPE_UNKNOWN")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Nfc.Tech.MifareClassicType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Nfc.Tech.MifareClassicType</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>A MIFARE Classic compatible card of unknown type </summary>
        <remarks />
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="WriteBlock">
      <MemberSignature Language="C#" Value="public void WriteBlock (int blockIndex, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBlock(int32 blockIndex, unsigned int8[] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeBlock", "(I[B)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Int32" />
        <Parameter Name="p1" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="blockIndex">index of block to write, starting from 0</param>
        <param name="data">16 bytes of data to write</param>
        <summary>Write 16-byte block.</summary>
        <remarks />
        <since version="Added in API level 10" />
        <exception cref="T:Android.Nfc.TagLostException">if the tag leaves the field</exception>
        <exception cref="T:Java.IO.IOException">if there is an I/O failure, or the operation is canceled
</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBlockAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteBlockAsync (int blockIndex, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteBlockAsync(int32 blockIndex, unsigned int8[] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Int32" />
        <Parameter Name="p1" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="blockIndex">To be added.</param>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
