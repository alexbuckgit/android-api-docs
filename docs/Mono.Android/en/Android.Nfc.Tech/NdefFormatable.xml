<Type Name="NdefFormatable" FullName="Android.Nfc.Tech.NdefFormatable">
  <TypeSignature Language="C#" Value="public sealed class NdefFormatable : Android.Nfc.Tech.BasicTagTechnology" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NdefFormatable extends Android.Nfc.Tech.BasicTagTechnology" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Nfc.Tech.BasicTagTechnology</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/nfc/tech/NdefFormatable", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="10">
    <summary>Provide access to NDEF format operations on a <c><see cref="T:Android.Nfc.Tag" /></c>.</summary>
    <remarks />
    <since version="Added in API level 10" />
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("close", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disable I/O operations to the tag from this <c><see cref="T:Android.Nfc.Tech.ITagTechnology" /></c> object, and release resources.</summary>
        <remarks />
        <since version="Added in API level 10" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public override void Connect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Connect() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("connect", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enable I/O operations to the tag from this <c><see cref="T:Android.Nfc.Tech.ITagTechnology" /></c> object.</summary>
        <remarks />
        <since version="Added in API level 10" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public void Format (Android.Nfc.NdefMessage firstMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Format(class Android.Nfc.NdefMessage firstMessage) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("format", "(Landroid/nfc/NdefMessage;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="Android.Nfc.NdefMessage" />
      </Parameters>
      <Docs>
        <param name="firstMessage">the NDEF message to write after formatting, can be null</param>
        <summary>Format a tag as NDEF, and write a <c><see cref="T:Android.Nfc.NdefMessage" /></c>.</summary>
        <remarks />
        <since version="Added in API level 10" />
        <exception cref="T:Android.Nfc.TagLostException">if the tag leaves the field</exception>
        <exception cref="T:Java.IO.IOException">if there is an I/O failure, or the operation is canceled</exception>
        <exception cref="T:Android.Nfc.FormatException">if the NDEF Message to write is malformed
</exception>
      </Docs>
    </Member>
    <Member MemberName="FormatAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FormatAsync (Android.Nfc.NdefMessage firstMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FormatAsync(class Android.Nfc.NdefMessage firstMessage) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="Android.Nfc.NdefMessage" />
      </Parameters>
      <Docs>
        <param name="firstMessage">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FormatReadOnly">
      <MemberSignature Language="C#" Value="public void FormatReadOnly (Android.Nfc.NdefMessage firstMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FormatReadOnly(class Android.Nfc.NdefMessage firstMessage) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("formatReadOnly", "(Landroid/nfc/NdefMessage;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="Android.Nfc.NdefMessage" />
      </Parameters>
      <Docs>
        <param name="firstMessage">the NDEF message to write after formatting</param>
        <summary>Formats a tag as NDEF, write a <c><see cref="T:Android.Nfc.NdefMessage" /></c>, and make read-only.</summary>
        <remarks />
        <since version="Added in API level 10" />
        <exception cref="T:Android.Nfc.TagLostException">if the tag leaves the field</exception>
        <exception cref="T:Java.IO.IOException">if there is an I/O failure, or the operation is canceled</exception>
        <exception cref="T:Android.Nfc.FormatException">if the NDEF Message to write is malformed
</exception>
      </Docs>
    </Member>
    <Member MemberName="FormatReadOnlyAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FormatReadOnlyAsync (Android.Nfc.NdefMessage firstMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FormatReadOnlyAsync(class Android.Nfc.NdefMessage firstMessage) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="Android.Nfc.NdefMessage" />
      </Parameters>
      <Docs>
        <param name="firstMessage">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public static Android.Nfc.Tech.NdefFormatable Get (Android.Nfc.Tag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Nfc.Tech.NdefFormatable Get(class Android.Nfc.Tag tag) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("get", "(Landroid/nfc/Tag;)Landroid/nfc/tech/NdefFormatable;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Nfc.Tech.NdefFormatable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="Android.Nfc.Tag" />
      </Parameters>
      <Docs>
        <param name="tag">an NDEF formatable tag</param>
        <summary>Get an instance of <c><see cref="T:Android.Nfc.Tech.NdefFormatable" /></c> for the given tag.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="IsConnected">
      <MemberSignature Language="C#" Value="public override bool IsConnected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConnected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isConnected", "()Z", "GetIsConnectedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Helper to indicate if I/O operations should be possible.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public override Android.Nfc.Tag Tag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Nfc.Tag Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTag", "()Landroid/nfc/Tag;", "GetGetTagHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Nfc.Tag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the <c><see cref="T:Android.Nfc.Tag" /></c> object backing this <c><see cref="T:Android.Nfc.Tech.ITagTechnology" /></c> object.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
