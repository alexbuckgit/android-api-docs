<Type Name="UrlQuerySanitizer" FullName="Android.Net.UrlQuerySanitizer">
  <TypeSignature Language="C#" Value="public class UrlQuerySanitizer : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UrlQuerySanitizer extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/net/UrlQuerySanitizer", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Sanitizes the Query portion of a URL.</summary>
    <remarks><para tool="javadoc-to-mdoc">Sanitizes the Query portion of a URL. Simple example:
 <c>
 UrlQuerySanitizer sanitizer = new UrlQuerySanitizer();
 sanitizer.setAllowUnregisteredParamaters(true);
 sanitizer.parseUrl("http://example.com/?name=Joe+User");
 String name = sanitizer.getValue("name"));
 // name now contains "Joe_User"
 </c>

 Register ValueSanitizers to customize the way individual
 parameters are sanitized:
 <c>
 UrlQuerySanitizer sanitizer = new UrlQuerySanitizer();
 sanitizer.registerParamater("name", UrlQuerySanitizer.createSpaceLegal());
 sanitizer.parseUrl("http://example.com/?name=Joe+User");
 String name = sanitizer.getValue("name"));
 // name now contains "Joe User". (The string is first decoded, which
 // converts the '+' to a ' '. Then the string is sanitized, which
 // converts the ' ' to an '_'. (The ' ' is converted because the default
 unregistered parameter sanitizer does not allow any special characters,
 and ' ' is a special character.)
 </c>

 There are several ways to create ValueSanitizers. In order of increasing
 sophistication:
 <list type="number"><item><term>Call one of the UrlQuerySanitizer.createXXX() methods.
 </term></item><item><term>Construct your own instance of
 UrlQuerySanitizer.IllegalCharacterValueSanitizer.
 </term></item><item><term>Subclass UrlQuerySanitizer.ValueSanitizer to define your own value
 sanitizer.
 </term></item></list></para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/UrlQuerySanitizer.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UrlQuerySanitizer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Constructs a UrlQuerySanitizer.</summary>
        <remarks><para tool="javadoc-to-mdoc">Constructs a UrlQuerySanitizer.
 </para><para tool="javadoc-to-mdoc">
 Defaults:
 <list type="bullet"><item><term>unregistered parameters are not allowed.
 </term></item><item><term>the last instance of a repeated parameter is preferred.
 </term></item><item><term>The default value sanitizer is an AllIllegal value sanitizer.
 <list type="bullet" /></term></item></list></para><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/UrlQuerySanitizer.html#UrlQuerySanitizer()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UrlQuerySanitizer (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <summary>Constructs a UrlQuerySanitizer and parse a URL.</summary>
        <remarks><para tool="javadoc-to-mdoc">Constructs a UrlQuerySanitizer and parse a URL.
 This constructor is provided for convenience when the
 default parsing behavior is acceptable.
 </para><para tool="javadoc-to-mdoc">
 Because the URL is parsed before the constructor returns, there isn't
 a chance to configure the sanitizer to change the parsing behavior.
 </para><para tool="javadoc-to-mdoc"><c>
 UrlQuerySanitizer sanitizer = new UrlQuerySanitizer(myUrl);
 String name = sanitizer.getValue("name");
 </c></para><para tool="javadoc-to-mdoc">
 Defaults:
 <list type="bullet"><item><term>unregistered parameters <i>are</i> allowed.
 </term></item><item><term>the last instance of a repeated parameter is preferred.
 </term></item><item><term>The default value sanitizer is an AllIllegal value sanitizer.
 <list type="bullet" /></term></item></list></para><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/UrlQuerySanitizer.html#UrlQuerySanitizer(java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UrlQuerySanitizer (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSanitizedEntry">
      <MemberSignature Language="C#" Value="protected virtual void AddSanitizedEntry (string parameter, string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddSanitizedEntry(string parameter, string value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addSanitizedEntry", "(Ljava/lang/String;Ljava/lang/String;)V", "GetAddSanitizedEntry_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameter">an unescaped parameter</param>
        <param name="value">a sanitized unescaped value
</param>
        <summary>Record a sanitized parameter-value pair.</summary>
        <remarks><para tool="javadoc-to-mdoc">Record a sanitized parameter-value pair. Override if you want to
 do additional filtering or validation.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/UrlQuerySanitizer.html#addSanitizedEntry(java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AllButNulAndAngleBracketsLegal">
      <MemberSignature Language="C#" Value="public static Android.Net.UrlQuerySanitizer.IValueSanitizer AllButNulAndAngleBracketsLegal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Net.UrlQuerySanitizer/IValueSanitizer AllButNulAndAngleBracketsLegal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAllButNulAndAngleBracketsLegal", "()Landroid/net/UrlQuerySanitizer$ValueSanitizer;", "GetGetAllButNulAndAngleBracketsLegalHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.UrlQuerySanitizer+IValueSanitizer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return a value sanitizer that allows any special characters
 except angle brackets ('<format type="text/html"><_27_ and="" _27_="">') and Nul ('\0').
 Allows script URLs.</_27_></format></summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Return a value sanitizer that allows any special characters
 except angle brackets ('<format type="text/html"><_27_ and="" _27_="">') and Nul ('\0').
 Allows script URLs.</_27_></format></para><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/UrlQuerySanitizer.html#getAllButNulAndAngleBracketsLegal()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AllButNulLegal">
      <MemberSignature Language="C#" Value="public static Android.Net.UrlQuerySanitizer.IValueSanitizer AllButNulLegal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Net.UrlQuerySanitizer/IValueSanitizer AllButNulLegal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAllButNulLegal", "()Landroid/net/UrlQuerySanitizer$ValueSanitizer;", "GetGetAllButNulLegalHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.UrlQuerySanitizer+IValueSanitizer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return a value sanitizer that allows everything except Nul ('\0')
 characters.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Return a value sanitizer that allows everything except Nul ('\0')
 characters. Script URLs are allowed.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/UrlQuerySanitizer.html#getAllButNulLegal()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AllButWhitespaceLegal">
      <MemberSignature Language="C#" Value="public static Android.Net.UrlQuerySanitizer.IValueSanitizer AllButWhitespaceLegal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Net.UrlQuerySanitizer/IValueSanitizer AllButWhitespaceLegal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAllButWhitespaceLegal", "()Landroid/net/UrlQuerySanitizer$ValueSanitizer;", "GetGetAllButWhitespaceLegalHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.UrlQuerySanitizer+IValueSanitizer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return a value sanitizer that allows everything except Nul ('\0')
 characters, space (' '), and other whitespace characters.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Return a value sanitizer that allows everything except Nul ('\0')
 characters, space (' '), and other whitespace characters.
 Script URLs are allowed.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/UrlQuerySanitizer.html#getAllButWhitespaceLegal()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AllIllegal">
      <MemberSignature Language="C#" Value="public static Android.Net.UrlQuerySanitizer.IValueSanitizer AllIllegal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Net.UrlQuerySanitizer/IValueSanitizer AllIllegal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAllIllegal", "()Landroid/net/UrlQuerySanitizer$ValueSanitizer;", "GetGetAllIllegalHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.UrlQuerySanitizer+IValueSanitizer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return a value sanitizer that does not allow any special characters,
 and also does not allow script URLs.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Return a value sanitizer that does not allow any special characters,
 and also does not allow script URLs.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/UrlQuerySanitizer.html#getAllIllegal()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AllowUnregisteredParamaters">
      <MemberSignature Language="C#" Value="public virtual bool AllowUnregisteredParamaters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowUnregisteredParamaters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAllowUnregisteredParamaters", "()Z", "GetGetAllowUnregisteredParamatersHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setAllowUnregisteredParamaters", "(Z)V", "GetSetAllowUnregisteredParamaters_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get whether or not unregistered parameters are allowed.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/android/net/UrlQuerySanitizer.html#getAllowUnregisteredParamaters()" target="_blank">[Android Documentation]</a><br /></format>Get whether or not unregistered parameters are allowed. If not
 allowed, they will be dropped when a query is parsed.</para><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/android/net/UrlQuerySanitizer.html#setAllowUnregisteredParamaters(boolean)" target="_blank">[Android Documentation]</a><br /></format>Set whether or not unregistered parameters are allowed. If they
 are not allowed, then they will be dropped when a query is sanitized.
 
 Defaults to false.</para><para tool="javadoc-to-mdoc" /></remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Net.UrlQuerySanitizer.AllowUnregisteredParamaters" />
        <altmember cref="P:Android.Net.UrlQuerySanitizer.AllowUnregisteredParamaters" />
      </Docs>
    </Member>
    <Member MemberName="AmpAndSpaceLegal">
      <MemberSignature Language="C#" Value="public static Android.Net.UrlQuerySanitizer.IValueSanitizer AmpAndSpaceLegal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Net.UrlQuerySanitizer/IValueSanitizer AmpAndSpaceLegal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAmpAndSpaceLegal", "()Landroid/net/UrlQuerySanitizer$ValueSanitizer;", "GetGetAmpAndSpaceLegalHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.UrlQuerySanitizer+IValueSanitizer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return a value sanitizer that does not allow any special characters
 except ampersand ('&amp;') and space (' ').</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Return a value sanitizer that does not allow any special characters
 except ampersand ('&amp;') and space (' '). Does not allow script URLs.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/UrlQuerySanitizer.html#getAmpAndSpaceLegal()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AmpLegal">
      <MemberSignature Language="C#" Value="public static Android.Net.UrlQuerySanitizer.IValueSanitizer AmpLegal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Net.UrlQuerySanitizer/IValueSanitizer AmpLegal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAmpLegal", "()Landroid/net/UrlQuerySanitizer$ValueSanitizer;", "GetGetAmpLegalHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.UrlQuerySanitizer+IValueSanitizer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return a value sanitizer that does not allow any special characters
 except ampersand ('&amp;').</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Return a value sanitizer that does not allow any special characters
 except ampersand ('&amp;'). Does not allow script URLs.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/UrlQuerySanitizer.html#getAmpLegal()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="protected virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Clear() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clear", "()V", "GetClearHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clear the existing entries.</summary>
        <remarks><para tool="javadoc-to-mdoc">Clear the existing entries. Called to get ready to parse a new
 query string.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/UrlQuerySanitizer.html#clear()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DecodeHexDigit">
      <MemberSignature Language="C#" Value="protected virtual int DecodeHexDigit (char c);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 DecodeHexDigit(char c) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("decodeHexDigit", "(C)I", "GetDecodeHexDigit_CHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">the hexidecimal digit.</param>
        <summary>Convert a character that represents a hexidecimal digit into an integer.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Convert a character that represents a hexidecimal digit into an integer.
 If the character is not a hexidecimal digit, then -1 is returned.
 Both upper case and lower case hex digits are allowed.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/UrlQuerySanitizer.html#decodeHexDigit(char)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetEffectiveValueSanitizer">
      <MemberSignature Language="C#" Value="public virtual Android.Net.UrlQuerySanitizer.IValueSanitizer GetEffectiveValueSanitizer (string parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Net.UrlQuerySanitizer/IValueSanitizer GetEffectiveValueSanitizer(string parameter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getEffectiveValueSanitizer", "(Ljava/lang/String;)Landroid/net/UrlQuerySanitizer$ValueSanitizer;", "GetGetEffectiveValueSanitizer_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.UrlQuerySanitizer+IValueSanitizer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameter">an unescaped parameter</param>
        <summary>Get the effective value sanitizer for a parameter.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Get the effective value sanitizer for a parameter. Like getValueSanitizer,
 except if there is no value sanitizer registered for a parameter, and
 unregistered paramaters are allowed, then the default value sanitizer is
 returned.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/UrlQuerySanitizer.html#getEffectiveValueSanitizer(java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public virtual string GetValue (string parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetValue(string parameter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getValue", "(Ljava/lang/String;)Ljava/lang/String;", "GetGetValue_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameter">the unencoded name of a parameter.</param>
        <summary>Get the value for a parameter in the current sanitized query.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Get the value for a parameter in the current sanitized query.
 Returns null if the parameter does not
 exit.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/UrlQuerySanitizer.html#getValue(java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetValueSanitizer">
      <MemberSignature Language="C#" Value="public virtual Android.Net.UrlQuerySanitizer.IValueSanitizer GetValueSanitizer (string parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Net.UrlQuerySanitizer/IValueSanitizer GetValueSanitizer(string parameter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getValueSanitizer", "(Ljava/lang/String;)Landroid/net/UrlQuerySanitizer$ValueSanitizer;", "GetGetValueSanitizer_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.UrlQuerySanitizer+IValueSanitizer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameter">the unescaped parameter</param>
        <summary>Get the value sanitizer for a parameter.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Get the value sanitizer for a parameter. Returns null if there
 is no value sanitizer registered for the parameter.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/UrlQuerySanitizer.html#getValueSanitizer(java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Net.UrlQuerySanitizer.RegisterParameter(System.String, .IValueSanitizer)" />
      </Docs>
    </Member>
    <Member MemberName="HasParameter">
      <MemberSignature Language="C#" Value="public virtual bool HasParameter (string parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasParameter(string parameter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("hasParameter", "(Ljava/lang/String;)Z", "GetHasParameter_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameter">the unencoded name of a parameter.</param>
        <summary>Check if a parameter exists in the current sanitized query.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Check if a parameter exists in the current sanitized query.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/UrlQuerySanitizer.html#hasParameter(java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsHexDigit">
      <MemberSignature Language="C#" Value="protected virtual bool IsHexDigit (char c);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsHexDigit(char c) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isHexDigit", "(C)Z", "GetIsHexDigit_CHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">the character to test</param>
        <summary>Test if a character is a hexidecimal digit.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Test if a character is a hexidecimal digit. Both upper case and lower
 case hex digits are allowed.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/UrlQuerySanitizer.html#isHexDigit(char)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ParameterList">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Net.UrlQuerySanitizer.ParameterValuePair&gt; ParameterList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Net.UrlQuerySanitizer/ParameterValuePair&gt; ParameterList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getParameterList", "()Ljava/util/List;", "GetGetParameterListHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Net.UrlQuerySanitizer+ParameterValuePair&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An array list of all of the parameter value pairs in the sanitized
 query, in the order they appeared in the query.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">An array list of all of the parameter value pairs in the sanitized
 query, in the order they appeared in the query. May contain duplicate
 parameters.
 </para><para tool="javadoc-to-mdoc"><format type="text/html"><b>Note:</b></format> Do not modify this list. Treat it as a read-only list.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/UrlQuerySanitizer.html#getParameterList()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ParameterSet">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.ICollection&lt;string&gt; ParameterSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;string&gt; ParameterSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getParameterSet", "()Ljava/util/Set;", "GetGetParameterSetHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get a set of all of the parameters found in the sanitized query.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Get a set of all of the parameters found in the sanitized query.
 </para><para tool="javadoc-to-mdoc">
 Note: Do not modify this set. Treat it as a read-only set.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/UrlQuerySanitizer.html#getParameterSet()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ParseEntry">
      <MemberSignature Language="C#" Value="protected virtual void ParseEntry (string parameter, string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ParseEntry(string parameter, string value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parseEntry", "(Ljava/lang/String;Ljava/lang/String;)V", "GetParseEntry_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameter">an escaped parameter</param>
        <param name="value">an unsanitzied escaped value
</param>
        <summary>Parse an escaped parameter-value pair.</summary>
        <remarks><para tool="javadoc-to-mdoc">Parse an escaped parameter-value pair. The default implementation
 unescapes both the parameter and the value, then looks up the
 effective value sanitizer for the parameter and uses it to sanitize
 the value. If all goes well then addSanitizedValue is called with
 the unescaped parameter and the sanitized unescaped value.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/UrlQuerySanitizer.html#parseEntry(java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ParseQuery">
      <MemberSignature Language="C#" Value="public virtual void ParseQuery (string query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ParseQuery(string query) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parseQuery", "(Ljava/lang/String;)V", "GetParseQuery_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="query">the query to parse.
</param>
        <summary>Parse a query.</summary>
        <remarks><para tool="javadoc-to-mdoc">Parse a query. A query string is any number of parameter-value clauses
 separated by any non-zero number of ampersands. A parameter-value clause
 is a parameter followed by an equal sign, followed by a value. If the
 equal sign is missing, the value is assumed to be the empty string.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/UrlQuerySanitizer.html#parseQuery(java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ParseUrl">
      <MemberSignature Language="C#" Value="public virtual void ParseUrl (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ParseUrl(string url) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parseUrl", "(Ljava/lang/String;)V", "GetParseUrl_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">the encoded URL to parse.
</param>
        <summary>Parse the query parameters out of an encoded URL.</summary>
        <remarks><para tool="javadoc-to-mdoc">Parse the query parameters out of an encoded URL.
 Works by extracting the query portion from the URL and then
 calling parseQuery(). If there is no query portion it is
 treated as if the query portion is an empty string.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/UrlQuerySanitizer.html#parseUrl(java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PreferFirstRepeatedParameter">
      <MemberSignature Language="C#" Value="public virtual bool PreferFirstRepeatedParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreferFirstRepeatedParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPreferFirstRepeatedParameter", "()Z", "GetGetPreferFirstRepeatedParameterHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setPreferFirstRepeatedParameter", "(Z)V", "GetSetPreferFirstRepeatedParameter_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get whether or not the first occurrence of a repeated parameter is
 preferred.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/android/net/UrlQuerySanitizer.html#getPreferFirstRepeatedParameter()" target="_blank">[Android Documentation]</a><br /></format>Get whether or not the first occurrence of a repeated parameter is
 preferred.</para><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/android/net/UrlQuerySanitizer.html#setPreferFirstRepeatedParameter(boolean)" target="_blank">[Android Documentation]</a><br /></format>Set whether or not the first occurrence of a repeated parameter is
 preferred. True means the first repeated parameter is preferred.
 False means that the last repeated parameter is preferred.
 
 The preferred parameter is the one that is returned when getParameter
 is called.
 
 defaults to false.</para><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc" /></remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Net.UrlQuerySanitizer.PreferFirstRepeatedParameter" />
        <altmember cref="P:Android.Net.UrlQuerySanitizer.PreferFirstRepeatedParameter" />
      </Docs>
    </Member>
    <Member MemberName="RegisterParameter">
      <MemberSignature Language="C#" Value="public virtual void RegisterParameter (string parameter, Android.Net.UrlQuerySanitizer.IValueSanitizer valueSanitizer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterParameter(string parameter, class Android.Net.UrlQuerySanitizer/IValueSanitizer valueSanitizer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerParameter", "(Ljava/lang/String;Landroid/net/UrlQuerySanitizer$ValueSanitizer;)V", "GetRegisterParameter_Ljava_lang_String_Landroid_net_UrlQuerySanitizer_ValueSanitizer_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.String" />
        <Parameter Name="valueSanitizer" Type="Android.Net.UrlQuerySanitizer+IValueSanitizer" />
      </Parameters>
      <Docs>
        <param name="parameter">an unencoded parameter name</param>
        <param name="valueSanitizer">the value sanitizer to use for a particular
 parameter. May be null in order to unregister that parameter.</param>
        <summary>Register a value sanitizer for a particular parameter.</summary>
        <remarks><para tool="javadoc-to-mdoc">Register a value sanitizer for a particular parameter. Can also be used
 to replace or remove an already-set value sanitizer.
 </para><para tool="javadoc-to-mdoc">
 Registering a non-null value sanitizer for a particular parameter
 makes that parameter a registered parameter.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/UrlQuerySanitizer.html#registerParameter(java.lang.String, android.net.UrlQuerySanitizer.ValueSanitizer)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Net.UrlQuerySanitizer.AllowUnregisteredParamaters" />
      </Docs>
    </Member>
    <Member MemberName="RegisterParameters">
      <MemberSignature Language="C#" Value="public virtual void RegisterParameters (string[] parameters, Android.Net.UrlQuerySanitizer.IValueSanitizer valueSanitizer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterParameters(string[] parameters, class Android.Net.UrlQuerySanitizer/IValueSanitizer valueSanitizer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerParameters", "([Ljava/lang/String;Landroid/net/UrlQuerySanitizer$ValueSanitizer;)V", "GetRegisterParameters_arrayLjava_lang_String_Landroid_net_UrlQuerySanitizer_ValueSanitizer_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.String[]" />
        <Parameter Name="valueSanitizer" Type="Android.Net.UrlQuerySanitizer+IValueSanitizer" />
      </Parameters>
      <Docs>
        <param name="parameters">An array of unencoded parameter names.</param>
        <param name="valueSanitizer">To be added.</param>
        <summary>Register a value sanitizer for an array of parameters.</summary>
        <remarks><para tool="javadoc-to-mdoc">Register a value sanitizer for an array of parameters.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/UrlQuerySanitizer.html#registerParameters(java.lang.String[], android.net.UrlQuerySanitizer.ValueSanitizer)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Net.UrlQuerySanitizer.RegisterParameter(System.String, .IValueSanitizer)" />
      </Docs>
    </Member>
    <Member MemberName="SpaceLegal">
      <MemberSignature Language="C#" Value="public static Android.Net.UrlQuerySanitizer.IValueSanitizer SpaceLegal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Net.UrlQuerySanitizer/IValueSanitizer SpaceLegal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSpaceLegal", "()Landroid/net/UrlQuerySanitizer$ValueSanitizer;", "GetGetSpaceLegalHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.UrlQuerySanitizer+IValueSanitizer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return a value sanitizer that does not allow any special characters
 except space (' ').</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Return a value sanitizer that does not allow any special characters
 except space (' '). Does not allow script URLs.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/UrlQuerySanitizer.html#getSpaceLegal()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unescape">
      <MemberSignature Language="C#" Value="public virtual string Unescape (string string);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Unescape(string string) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unescape", "(Ljava/lang/String;)Ljava/lang/String;", "GetUnescape_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="string">the escaped string</param>
        <summary>Unescape an escaped string.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Unescape an escaped string.
 <list type="bullet"><item><term>'+' characters are replaced by
 ' ' characters.
 </term></item><item><term>Valid "%xx" escape sequences are replaced by the
 corresponding unescaped character.
 </term></item><item><term>Invalid escape sequences such as %1z", are passed through unchanged.
 <list type="number" /></term></item></list></para><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/UrlQuerySanitizer.html#unescape(java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="UnregisteredParameterValueSanitizer">
      <MemberSignature Language="C#" Value="public virtual Android.Net.UrlQuerySanitizer.IValueSanitizer UnregisteredParameterValueSanitizer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Net.UrlQuerySanitizer/IValueSanitizer UnregisteredParameterValueSanitizer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getUnregisteredParameterValueSanitizer", "()Landroid/net/UrlQuerySanitizer$ValueSanitizer;", "GetGetUnregisteredParameterValueSanitizerHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setUnregisteredParameterValueSanitizer", "(Landroid/net/UrlQuerySanitizer$ValueSanitizer;)V", "GetSetUnregisteredParameterValueSanitizer_Landroid_net_UrlQuerySanitizer_ValueSanitizer_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.UrlQuerySanitizer+IValueSanitizer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the current value sanitizer used when processing
 unregistered parameter values.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/android/net/UrlQuerySanitizer.html#getUnregisteredParameterValueSanitizer()" target="_blank">[Android Documentation]</a><br /></format>Get the current value sanitizer used when processing
 unregistered parameter values.
 <format type="text/html"><b>Note:</b></format> The default unregistered parameter value sanitizer is
 one that doesn't allow any special characters, similar to what
 is returned by calling createAllIllegal.</para><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/android/net/UrlQuerySanitizer.html#setUnregisteredParameterValueSanitizer(android.net.UrlQuerySanitizer.ValueSanitizer)" target="_blank">[Android Documentation]</a><br /></format>Set the value sanitizer used when processing unregistered
 parameter values.</para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="UrlAndSpaceLegal">
      <MemberSignature Language="C#" Value="public static Android.Net.UrlQuerySanitizer.IValueSanitizer UrlAndSpaceLegal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Net.UrlQuerySanitizer/IValueSanitizer UrlAndSpaceLegal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getUrlAndSpaceLegal", "()Landroid/net/UrlQuerySanitizer$ValueSanitizer;", "GetGetUrlAndSpaceLegalHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.UrlQuerySanitizer+IValueSanitizer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return a value sanitizer that allows all the characters used by
 encoded URLs and allows spaces, which are not technically legal
 in encoded URLs, but commonly appear anyway.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Return a value sanitizer that allows all the characters used by
 encoded URLs and allows spaces, which are not technically legal
 in encoded URLs, but commonly appear anyway.
 Does not allow script URLs.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/UrlQuerySanitizer.html#getUrlAndSpaceLegal()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="UrlLegal">
      <MemberSignature Language="C#" Value="public static Android.Net.UrlQuerySanitizer.IValueSanitizer UrlLegal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Net.UrlQuerySanitizer/IValueSanitizer UrlLegal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getUrlLegal", "()Landroid/net/UrlQuerySanitizer$ValueSanitizer;", "GetGetUrlLegalHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.UrlQuerySanitizer+IValueSanitizer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return a value sanitizer that allows all the characters used by
 encoded URLs.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Return a value sanitizer that allows all the characters used by
 encoded URLs. Does not allow script URLs.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/UrlQuerySanitizer.html#getUrlLegal()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
