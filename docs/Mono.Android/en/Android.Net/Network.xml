<Type Name="Network" FullName="Android.Net.Network">
  <TypeSignature Language="C#" Value="public class Network : Java.Lang.Object, Android.OS.IParcelable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Network extends Java.Lang.Object implements class Android.OS.IParcelable, class Android.Runtime.IJavaObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.OS.IParcelable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/net/Network", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="21">
    <summary>Identifies a <c>Network</c>.</summary>
    <remarks />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Network (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="BindSocket">
      <MemberSignature Language="C#" Value="public virtual void BindSocket (Java.Net.Socket socket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BindSocket(class Java.Net.Socket socket) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("bindSocket", "(Ljava/net/Socket;)V", "GetBindSocket_Ljava_net_Socket_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="socket" Type="Java.Net.Socket" />
      </Parameters>
      <Docs>
        <param name="socket">To be added.</param>
        <summary>Binds the specified <c><see cref="T:Java.Net.Socket" /></c> to this <c>Network</c>.</summary>
        <remarks />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public static Android.OS.IParcelableCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.OS.IParcelableCreator Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CREATOR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IParcelableCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="DescribeContents">
      <MemberSignature Language="C#" Value="public virtual int DescribeContents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 DescribeContents() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("describeContents", "()I", "GetDescribeContentsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Describe the kinds of special objects contained in this Parcelable's
 marshalled representation.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetAllByName">
      <MemberSignature Language="C#" Value="public virtual Java.Net.InetAddress[] GetAllByName (string host);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Net.InetAddress[] GetAllByName(string host) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getAllByName", "(Ljava/lang/String;)[Ljava/net/InetAddress;", "GetGetAllByName_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.InetAddress[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="host">the hostname or literal IP string to be resolved.</param>
        <summary>Operates the same as <c>InetAddress.getAllByName</c> except that host
 resolution is done on this network.</summary>
        <returns>To be added.</returns>
        <remarks />
        <exception cref="T:Java.Net.UnknownHostException">if the address lookup fails.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetByName">
      <MemberSignature Language="C#" Value="public virtual Java.Net.InetAddress GetByName (string host);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Net.InetAddress GetByName(string host) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getByName", "(Ljava/lang/String;)Ljava/net/InetAddress;", "GetGetByName_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.InetAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="host">the hostName to be resolved to an address or <c>null</c>.</param>
        <summary>Operates the same as <c>InetAddress.getByName</c> except that host
 resolution is done on this network.</summary>
        <returns>To be added.</returns>
        <remarks />
        <exception cref="T:Java.Net.UnknownHostException">if the address lookup fails.
</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenConnection">
      <MemberSignature Language="C#" Value="public virtual Java.Net.URLConnection OpenConnection (Java.Net.URL url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Net.URLConnection OpenConnection(class Java.Net.URL url) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("openConnection", "(Ljava/net/URL;)Ljava/net/URLConnection;", "GetOpenConnection_Ljava_net_URL_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.URLConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Java.Net.URL" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <summary>Opens the specified <c><see cref="T:Java.Net.URL" /></c> on this <c>Network</c>, such that all traffic will be sent
 on this Network.</summary>
        <returns>To be added.</returns>
        <remarks />
        <exception cref="T:Java.Net.MalformedURLException">if the URL protocol is not HTTP or HTTPS.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while opening the connection.</exception>
        <altmember cref="M:Java.Net.URL.OpenConnection" />
      </Docs>
    </Member>
    <Member MemberName="SocketFactory">
      <MemberSignature Language="C#" Value="public virtual Javax.Net.SocketFactory SocketFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Javax.Net.SocketFactory SocketFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSocketFactory", "()Ljavax/net/SocketFactory;", "GetGetSocketFactoryHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.SocketFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a <c><see cref="T:Javax.Net.SocketFactory" /></c> bound to this network.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="WriteToParcel">
      <MemberSignature Language="C#" Value="public virtual void WriteToParcel (Android.OS.Parcel dest, Android.OS.ParcelableWriteFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteToParcel(class Android.OS.Parcel dest, valuetype Android.OS.ParcelableWriteFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeToParcel", "(Landroid/os/Parcel;I)V", "GetWriteToParcel_Landroid_os_Parcel_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="Android.OS.Parcel" />
        <Parameter Name="flags" Type="Android.OS.ParcelableWriteFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="dest">The Parcel in which the object should be written.</param>
        <param name="flags">Additional flags about how the object should be written.
 May be 0 or <c><see cref="F:Android.OS.Parcelable.ParcelableWriteReturnValue" /></c>.
</param>
        <summary>Flatten this object in to a Parcel.</summary>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
