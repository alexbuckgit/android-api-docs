<Type Name="VpnService+Builder" FullName="Android.Net.VpnService+Builder">
  <TypeSignature Language="C#" Value="public class VpnService.Builder : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit VpnService/Builder extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/net/VpnService$Builder", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Helper class to create a VPN interface.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Helper class to create a VPN interface. This class should be always
 used within the scope of the outer <c><see cref="T:Android.Net.VpnService" /></c>.</para>
      <format type="text/html">
        <h5 class="jd-tagtitle">See Also</h5>
      </format>
      <list type="bullet">
        <item>
          <term>
            <c>
              <see cref="T:Android.Net.VpnService" />
            </c>
          </term>
        </item>
      </list>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/net/VpnService.Builder.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 14" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Builder (Android.Net.VpnService __self);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Net.VpnService __self) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/net/VpnService;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="__self" Type="Android.Net.VpnService" />
      </Parameters>
      <Docs>
        <param name="__self">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Builder (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAddress">
      <MemberSignature Language="C#" Value="public virtual Android.Net.VpnService.Builder AddAddress (Java.Net.InetAddress address, int prefixLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Net.VpnService/Builder AddAddress(class Java.Net.InetAddress address, int32 prefixLength) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addAddress", "(Ljava/net/InetAddress;I)Landroid/net/VpnService$Builder;", "GetAddAddress_Ljava_net_InetAddress_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.VpnService+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="Java.Net.InetAddress" />
        <Parameter Name="prefixLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <param name="prefixLength">To be added.</param>
        <summary>Add a network address to the VPN interface.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Add a network address to the VPN interface. Both IPv4 and IPv6
 addresses are supported. At least one address must be set before
 calling <c><see cref="M:Android.Net.VpnService.Builder.Establish" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/VpnService.Builder.html#addAddress(java.net.InetAddress, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the address is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="AddAddress">
      <MemberSignature Language="C#" Value="public virtual Android.Net.VpnService.Builder AddAddress (string address, int prefixLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Net.VpnService/Builder AddAddress(string address, int32 prefixLength) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addAddress", "(Ljava/lang/String;I)Landroid/net/VpnService$Builder;", "GetAddAddress_Ljava_lang_String_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.VpnService+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="prefixLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <param name="prefixLength">To be added.</param>
        <summary>Convenience method to add a network address to the VPN interface
 using a numeric address string.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Convenience method to add a network address to the VPN interface
 using a numeric address string. See <c><see cref="T:Java.Net.InetAddress" /></c> for the
 definitions of numeric address formats.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/VpnService.Builder.html#addAddress(java.lang.String, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the address is invalid.</exception>
        <altmember cref="M:Android.Net.VpnService.Builder.AddAddress(Java.Net.InetAddress, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AddAllowedApplication">
      <MemberSignature Language="C#" Value="public virtual Android.Net.VpnService.Builder AddAllowedApplication (string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Net.VpnService/Builder AddAllowedApplication(string packageName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addAllowedApplication", "(Ljava/lang/String;)Landroid/net/VpnService$Builder;", "GetAddAllowedApplication_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.VpnService+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDisallowedApplication">
      <MemberSignature Language="C#" Value="public virtual Android.Net.VpnService.Builder AddDisallowedApplication (string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Net.VpnService/Builder AddDisallowedApplication(string packageName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addDisallowedApplication", "(Ljava/lang/String;)Landroid/net/VpnService$Builder;", "GetAddDisallowedApplication_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.VpnService+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDnsServer">
      <MemberSignature Language="C#" Value="public virtual Android.Net.VpnService.Builder AddDnsServer (Java.Net.InetAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Net.VpnService/Builder AddDnsServer(class Java.Net.InetAddress address) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addDnsServer", "(Ljava/net/InetAddress;)Landroid/net/VpnService$Builder;", "GetAddDnsServer_Ljava_net_InetAddress_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.VpnService+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="Java.Net.InetAddress" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>Add a DNS server to the VPN connection.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Add a DNS server to the VPN connection. Both IPv4 and IPv6
 addresses are supported. If none is set, the DNS servers of
 the default network will be used.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/VpnService.Builder.html#addDnsServer(java.net.InetAddress)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the address is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="AddDnsServer">
      <MemberSignature Language="C#" Value="public virtual Android.Net.VpnService.Builder AddDnsServer (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Net.VpnService/Builder AddDnsServer(string address) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addDnsServer", "(Ljava/lang/String;)Landroid/net/VpnService$Builder;", "GetAddDnsServer_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.VpnService+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>Convenience method to add a DNS server to the VPN connection
 using a numeric address string.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Convenience method to add a DNS server to the VPN connection
 using a numeric address string. See <c><see cref="T:Java.Net.InetAddress" /></c> for the
 definitions of numeric address formats.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/VpnService.Builder.html#addDnsServer(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the address is invalid.</exception>
        <altmember cref="M:Android.Net.VpnService.Builder.AddDnsServer(Java.Net.InetAddress)" />
      </Docs>
    </Member>
    <Member MemberName="AddRoute">
      <MemberSignature Language="C#" Value="public virtual Android.Net.VpnService.Builder AddRoute (Java.Net.InetAddress address, int prefixLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Net.VpnService/Builder AddRoute(class Java.Net.InetAddress address, int32 prefixLength) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addRoute", "(Ljava/net/InetAddress;I)Landroid/net/VpnService$Builder;", "GetAddRoute_Ljava_net_InetAddress_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.VpnService+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="Java.Net.InetAddress" />
        <Parameter Name="prefixLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <param name="prefixLength">To be added.</param>
        <summary>Add a network route to the VPN interface.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Add a network route to the VPN interface. Both IPv4 and IPv6
 routes are supported.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/VpnService.Builder.html#addRoute(java.net.InetAddress, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the route is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="AddRoute">
      <MemberSignature Language="C#" Value="public virtual Android.Net.VpnService.Builder AddRoute (string address, int prefixLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Net.VpnService/Builder AddRoute(string address, int32 prefixLength) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addRoute", "(Ljava/lang/String;I)Landroid/net/VpnService$Builder;", "GetAddRoute_Ljava_lang_String_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.VpnService+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="prefixLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <param name="prefixLength">To be added.</param>
        <summary>Convenience method to add a network route to the VPN interface
 using a numeric address string.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Convenience method to add a network route to the VPN interface
 using a numeric address string. See <c><see cref="T:Java.Net.InetAddress" /></c> for the
 definitions of numeric address formats.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/VpnService.Builder.html#addRoute(java.lang.String, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the route is invalid.</exception>
        <altmember cref="M:Android.Net.VpnService.Builder.AddRoute(Java.Net.InetAddress, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AddSearchDomain">
      <MemberSignature Language="C#" Value="public virtual Android.Net.VpnService.Builder AddSearchDomain (string domain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Net.VpnService/Builder AddSearchDomain(string domain) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addSearchDomain", "(Ljava/lang/String;)Landroid/net/VpnService$Builder;", "GetAddSearchDomain_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.VpnService+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="domain">To be added.</param>
        <summary>Add a search domain to the DNS resolver.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Add a search domain to the DNS resolver.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/VpnService.Builder.html#addSearchDomain(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="AllowBypass">
      <MemberSignature Language="C#" Value="public virtual Android.Net.VpnService.Builder AllowBypass ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Net.VpnService/Builder AllowBypass() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("allowBypass", "()Landroid/net/VpnService$Builder;", "GetAllowBypassHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.VpnService+Builder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowFamily">
      <MemberSignature Language="C#" Value="public virtual Android.Net.VpnService.Builder AllowFamily (int family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Net.VpnService/Builder AllowFamily(int32 family) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("allowFamily", "(I)Landroid/net/VpnService$Builder;", "GetAllowFamily_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.VpnService+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="family" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="family">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Establish">
      <MemberSignature Language="C#" Value="public virtual Android.OS.ParcelFileDescriptor Establish ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.ParcelFileDescriptor Establish() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("establish", "()Landroid/os/ParcelFileDescriptor;", "GetEstablishHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.ParcelFileDescriptor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Create a VPN interface using the parameters supplied to this
 builder.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a VPN interface using the parameters supplied to this
 builder. The interface works on IP packets, and a file descriptor
 is returned for the application to access them. Each read
 retrieves an outgoing packet which was routed to the interface.
 Each write injects an incoming packet just like it was received
 from the interface. The file descriptor is put into non-blocking
 mode by default to avoid blocking Java threads. To use the file
 descriptor completely in native space, see
 <c><see cref="M:Android.OS.ParcelFileDescriptor.DetachFd" /></c>. The application MUST
 close the file descriptor when the VPN connection is terminated.
 The VPN interface will be removed and the network will be
 restored by the system automatically.

 </para>
          <para tool="javadoc-to-mdoc">To avoid conflicts, there can be only one active VPN interface
 at the same time. Usually network parameters are never changed
 during the lifetime of a VPN connection. It is also common for an
 application to create a new file descriptor after closing the
 previous one. However, it is rare but not impossible to have two
 interfaces while performing a seamless handover. In this case, the
 old interface will be deactivated when the new one is created
 successfully. Both file descriptors are valid but now outgoing
 packets will be routed to the new interface. Therefore, after
 draining the old file descriptor, the application MUST close it
 and start using the new file descriptor. If the new interface
 cannot be created, the existing interface and its file descriptor
 remain untouched.

 </para>
          <para tool="javadoc-to-mdoc">An exception will be thrown if the interface cannot be created
 for any reason. However, this method returns <c>null</c> if the
 application is not prepared or is revoked. This helps solve
 possible race conditions between other VPN applications.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/VpnService.Builder.html#establish()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if a parameter is not accepted
         by the operating system.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if a parameter cannot be applied
         by the operating system.</exception>
        <exception cref="T:Java.Lang.SecurityException">if the service is not properly declared
         in <c>AndroidManifest.xml</c>.</exception>
        <altmember cref="T:Android.Net.VpnService" />
      </Docs>
    </Member>
    <Member MemberName="SetBlocking">
      <MemberSignature Language="C#" Value="public virtual Android.Net.VpnService.Builder SetBlocking (bool blocking);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Net.VpnService/Builder SetBlocking(bool blocking) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setBlocking", "(Z)Landroid/net/VpnService$Builder;", "GetSetBlocking_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.VpnService+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blocking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="blocking">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetConfigureIntent">
      <MemberSignature Language="C#" Value="public virtual Android.Net.VpnService.Builder SetConfigureIntent (Android.App.PendingIntent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Net.VpnService/Builder SetConfigureIntent(class Android.App.PendingIntent intent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setConfigureIntent", "(Landroid/app/PendingIntent;)Landroid/net/VpnService$Builder;", "GetSetConfigureIntent_Landroid_app_PendingIntent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.VpnService+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="intent">To be added.</param>
        <summary>Set the <c><see cref="T:Android.App.PendingIntent" /></c> to an activity for users to
 configure the VPN connection.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the <c><see cref="T:Android.App.PendingIntent" /></c> to an activity for users to
 configure the VPN connection. If it is not set, the button
 to configure will not be shown in system-managed dialogs.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/VpnService.Builder.html#setConfigureIntent(android.app.PendingIntent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetMtu">
      <MemberSignature Language="C#" Value="public virtual Android.Net.VpnService.Builder SetMtu (int mtu);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Net.VpnService/Builder SetMtu(int32 mtu) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setMtu", "(I)Landroid/net/VpnService$Builder;", "GetSetMtu_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.VpnService+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mtu" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mtu">To be added.</param>
        <summary>Set the maximum transmission unit (MTU) of the VPN interface.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the maximum transmission unit (MTU) of the VPN interface. If
 it is not set, the default value in the operating system will be
 used.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/VpnService.Builder.html#setMtu(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the value is not positive.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetSession">
      <MemberSignature Language="C#" Value="public virtual Android.Net.VpnService.Builder SetSession (string session);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Net.VpnService/Builder SetSession(string session) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSession", "(Ljava/lang/String;)Landroid/net/VpnService$Builder;", "GetSetSession_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.VpnService+Builder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="session">To be added.</param>
        <summary>Set the name of this session.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the name of this session. It will be displayed in
 system-managed dialogs and notifications. This is recommended
 not required.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/VpnService.Builder.html#setSession(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
