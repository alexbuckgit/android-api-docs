<Type Name="SSLCertificateSocketFactory" FullName="Android.Net.SSLCertificateSocketFactory">
  <TypeSignature Language="C#" Value="public class SSLCertificateSocketFactory : Javax.Net.Ssl.SSLSocketFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SSLCertificateSocketFactory extends Javax.Net.Ssl.SSLSocketFactory" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Javax.Net.Ssl.SSLSocketFactory</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/net/SSLCertificateSocketFactory", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>SSLSocketFactory implementation with several extra features:

 <list type="bullet"><item><term>Timeout specification for SSL handshake operations
 </term></item><item><term>Hostname verification in most cases (see WARNINGs below)
 </term></item><item><term>Optional SSL session caching with <c><see cref="T:Android.Net.SSLSessionCache" /></c></term></item><item><term>Optionally bypass all SSL certificate checks
 </term></item></list>

 The handshake timeout does not apply to actual TCP socket connection.</summary>
    <remarks />
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SSLCertificateSocketFactory (int handshakeTimeoutMillis);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 handshakeTimeoutMillis) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="socketReadTimeoutForSslHandshake" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="handshakeTimeoutMillis">To be added.</param>
        <summary>
        </summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SSLCertificateSocketFactory (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CreateSocket">
      <MemberSignature Language="C#" Value="public override Java.Net.Socket CreateSocket (Java.Net.InetAddress addr, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Net.Socket CreateSocket(class Java.Net.InetAddress addr, int32 port) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createSocket", "(Ljava/net/InetAddress;I)Ljava/net/Socket;", "GetCreateSocket_Ljava_net_InetAddress_IHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inaddr" Type="Java.Net.InetAddress" />
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="addr">the host address the socket has to be connected to.</param>
        <param name="port">the port number of the remote host at which the socket is
            connected.</param>
        <summary tool="true">Creates a new socket which is connected to the remote host specified by
 the InetAddress <c>host</c>.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="CreateSocket">
      <MemberSignature Language="C#" Value="public override Java.Net.Socket CreateSocket (string host, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Net.Socket CreateSocket(string host, int32 port) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createSocket", "(Ljava/lang/String;I)Ljava/net/Socket;", "GetCreateSocket_Ljava_lang_String_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">the remote host address the socket has to be connected to.</param>
        <param name="port">the port number of the remote host at which the socket is
            connected.</param>
        <summary>Creates a new socket which is connected to the remote host specified by
 the parameters <c>host</c> and <c>port</c>.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="CreateSocket">
      <MemberSignature Language="C#" Value="public override Java.Net.Socket CreateSocket (Java.Net.InetAddress addr, int port, Java.Net.InetAddress localAddr, int localPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Net.Socket CreateSocket(class Java.Net.InetAddress addr, int32 port, class Java.Net.InetAddress localAddr, int32 localPort) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createSocket", "(Ljava/net/InetAddress;ILjava/net/InetAddress;I)Ljava/net/Socket;", "GetCreateSocket_Ljava_net_InetAddress_ILjava_net_InetAddress_IHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inaddr" Type="Java.Net.InetAddress" />
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="inaddr2" Type="Java.Net.InetAddress" />
        <Parameter Name="j" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="addr">the remote host address the socket has to be connected to.</param>
        <param name="port">the port number of the remote host at which the socket is
            connected.</param>
        <param name="localAddr">the local host address the socket is bound to.</param>
        <param name="localPort">the port number of the local host at which the socket is
            bound.</param>
        <summary>Creates a new socket which is connected to the remote host specified by
 the InetAddress <c>address</c>.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="CreateSocket">
      <MemberSignature Language="C#" Value="public override Java.Net.Socket CreateSocket (Java.Net.Socket k, string host, int port, bool close);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Net.Socket CreateSocket(class Java.Net.Socket k, string host, int32 port, bool close) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createSocket", "(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;", "GetCreateSocket_Ljava_net_Socket_Ljava_lang_String_IZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="socket" Type="Java.Net.Socket" />
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="flag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="k">the socket.</param>
        <param name="host">the host.</param>
        <param name="port">the port number.</param>
        <param name="close">
          <c>true</c> if socket <c>s</c> should be closed when the
            created socket is closed, <c>false</c> if the socket
            <c>s</c> should be left open.</param>
        <summary>Creates an <c>SSLSocket</c> over the specified socket that is connected
 to the specified host at the specified port.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="CreateSocket">
      <MemberSignature Language="C#" Value="public override Java.Net.Socket CreateSocket (string host, int port, Java.Net.InetAddress localAddr, int localPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Net.Socket CreateSocket(string host, int32 port, class Java.Net.InetAddress localAddr, int32 localPort) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createSocket", "(Ljava/lang/String;ILjava/net/InetAddress;I)Ljava/net/Socket;", "GetCreateSocket_Ljava_lang_String_ILjava_net_InetAddress_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="inaddr" Type="Java.Net.InetAddress" />
        <Parameter Name="j" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">the remote host address the socket has to be connected to.</param>
        <param name="port">the port number of the remote host at which the socket is
            connected.</param>
        <param name="localAddr">the local host address the socket is bound to.</param>
        <param name="localPort">the port number of the local host at which the socket is
            bound.</param>
        <summary>Creates a new socket which is connected to the remote host specified by
 the parameters <c>host</c> and <c>port</c>.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="GetDefault">
      <MemberSignature Language="C#" Value="public static Javax.Net.SocketFactory GetDefault (int handshakeTimeoutMillis);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Net.SocketFactory GetDefault(int32 handshakeTimeoutMillis) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDefault", "(I)Ljavax/net/SocketFactory;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.SocketFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="socketReadTimeoutForSslHandshake" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="handshakeTimeoutMillis">to use for SSL connection handshake, or 0
         for none.  The socket timeout is reset to 0 after the handshake.</param>
        <summary tool="true">Returns a new socket factory instance with an optional handshake timeout.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetDefault">
      <MemberSignature Language="C#" Value="public static Javax.Net.Ssl.SSLSocketFactory GetDefault (int handshakeTimeoutMillis, Android.Net.SSLSessionCache cache);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Net.Ssl.SSLSocketFactory GetDefault(int32 handshakeTimeoutMillis, class Android.Net.SSLSessionCache cache) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDefault", "(ILandroid/net/SSLSessionCache;)Ljavax/net/ssl/SSLSocketFactory;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.SSLSocketFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handshakeTimeoutMillis" Type="System.Int32" />
        <Parameter Name="cache" Type="Android.Net.SSLSessionCache" />
      </Parameters>
      <Docs>
        <param name="handshakeTimeoutMillis">to use for SSL connection handshake, or 0
         for none.  The socket timeout is reset to 0 after the handshake.</param>
        <param name="cache">The <c><see cref="T:Android.Net.SSLSessionCache" /></c> to use, or null for no cache.</param>
        <summary>Returns a new socket factory instance with an optional handshake timeout
 and SSL session cache.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultCipherSuites">
      <MemberSignature Language="C#" Value="public override string[] GetDefaultCipherSuites ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetDefaultCipherSuites() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDefaultCipherSuites", "()[Ljava/lang/String;", "GetGetDefaultCipherSuitesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the names of the cipher suites that are enabled by default.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetHttpSocketFactory">
      <MemberSignature Language="C#" Value="public static Org.Apache.Http.Conn.Ssl.SSLSocketFactory GetHttpSocketFactory (int handshakeTimeoutMillis, Android.Net.SSLSessionCache cache);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Org.Apache.Http.Conn.Ssl.SSLSocketFactory GetHttpSocketFactory(int32 handshakeTimeoutMillis, class Android.Net.SSLSessionCache cache) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getHttpSocketFactory", "(ILandroid/net/SSLSessionCache;)Lorg/apache/http/conn/ssl/SSLSocketFactory;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.Conn.Ssl.SSLSocketFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handshakeTimeoutMillis" Type="System.Int32" />
        <Parameter Name="cache" Type="Android.Net.SSLSessionCache" />
      </Parameters>
      <Docs>
        <param name="handshakeTimeoutMillis">to use for SSL connection handshake, or 0
         for none.  The socket timeout is reset to 0 after the handshake.</param>
        <param name="cache">The <c><see cref="T:Android.Net.SSLSessionCache" /></c> to use, or null for no cache.</param>
        <summary>Returns a socket factory (also named SSLSocketFactory, but in a different
 namespace) for use with the Apache HTTP stack.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetInsecure">
      <MemberSignature Language="C#" Value="public static Javax.Net.Ssl.SSLSocketFactory GetInsecure (int handshakeTimeoutMillis, Android.Net.SSLSessionCache cache);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Net.Ssl.SSLSocketFactory GetInsecure(int32 handshakeTimeoutMillis, class Android.Net.SSLSessionCache cache) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInsecure", "(ILandroid/net/SSLSessionCache;)Ljavax/net/ssl/SSLSocketFactory;", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Net.Ssl.SSLSocketFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handshakeTimeoutMillis" Type="System.Int32" />
        <Parameter Name="cache" Type="Android.Net.SSLSessionCache" />
      </Parameters>
      <Docs>
        <param name="handshakeTimeoutMillis">to use for SSL connection handshake, or 0
         for none.  The socket timeout is reset to 0 after the handshake.</param>
        <param name="cache">The <c><see cref="T:Android.Net.SSLSessionCache" /></c> to use, or null for no cache.</param>
        <summary>Returns a new instance of a socket factory with all SSL security checks
 disabled, using an optional handshake timeout and SSL session cache.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetNpnSelectedProtocol">
      <MemberSignature Language="C#" Value="public virtual byte[] GetNpnSelectedProtocol (Java.Net.Socket socket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetNpnSelectedProtocol(class Java.Net.Socket socket) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getNpnSelectedProtocol", "(Ljava/net/Socket;)[B", "GetGetNpnSelectedProtocol_Ljava_net_Socket_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="socket" Type="Java.Net.Socket" />
      </Parameters>
      <Docs>
        <param name="socket">a socket created by this factory.</param>
        <summary>Returns the  protocol selected by client and server, or
 null if no protocol was negotiated.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 16" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the socket was not created by this factory.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedCipherSuites">
      <MemberSignature Language="C#" Value="public override string[] GetSupportedCipherSuites ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetSupportedCipherSuites() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getSupportedCipherSuites", "()[Ljava/lang/String;", "GetGetSupportedCipherSuitesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the names of the cipher suites that are supported and could be
 enabled for an SSL connection.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetHostname">
      <MemberSignature Language="C#" Value="public virtual void SetHostname (Java.Net.Socket socket, string hostName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetHostname(class Java.Net.Socket socket, string hostName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setHostname", "(Ljava/net/Socket;Ljava/lang/String;)V", "GetSetHostname_Ljava_net_Socket_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="socket" Type="Java.Net.Socket" />
        <Parameter Name="hostName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="socket">a socket created by this factory.</param>
        <param name="hostName">the desired SNI hostname, null to disable.</param>
        <summary>Turns on  on a given socket.</summary>
        <remarks />
        <since version="Added in API level 17" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the socket was not created by this factory.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetKeyManagers">
      <MemberSignature Language="C#" Value="public virtual void SetKeyManagers (Javax.Net.Ssl.IKeyManager[] keyManagers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetKeyManagers(class Javax.Net.Ssl.IKeyManager[] keyManagers) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setKeyManagers", "([Ljavax/net/ssl/KeyManager;)V", "GetSetKeyManagers_arrayLjavax_net_ssl_KeyManager_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyManagers" Type="Javax.Net.Ssl.IKeyManager[]" />
      </Parameters>
      <Docs>
        <param name="keyManagers">To be added.</param>
        <summary>Sets the <c><see cref="T:Javax.Net.Ssl.IKeyManager" /></c>s to be used for connections made by this factory.</summary>
        <remarks />
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetNpnProtocols">
      <MemberSignature Language="C#" Value="public virtual void SetNpnProtocols (byte[][] npnProtocols);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetNpnProtocols(unsigned int8[][] npnProtocols) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setNpnProtocols", "([[B)V", "GetSetNpnProtocols_arrayarrayBHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="npnProtocols" Type="System.Byte[][]" />
      </Parameters>
      <Docs>
        <param name="npnProtocols">a non-empty list of protocol byte arrays. All arrays
     must be non-empty and of length less than 256.
</param>
        <summary>Sets the  protocols that this peer is interested in.</summary>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SetTrustManagers">
      <MemberSignature Language="C#" Value="public virtual void SetTrustManagers (Javax.Net.Ssl.ITrustManager[] trustManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTrustManagers(class Javax.Net.Ssl.ITrustManager[] trustManager) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTrustManagers", "([Ljavax/net/ssl/TrustManager;)V", "GetSetTrustManagers_arrayLjavax_net_ssl_TrustManager_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trustManager" Type="Javax.Net.Ssl.ITrustManager[]" />
      </Parameters>
      <Docs>
        <param name="trustManager">To be added.</param>
        <summary>Sets the <c><see cref="T:Javax.Net.Ssl.ITrustManager" /></c>s to be used for connections made by this factory.</summary>
        <remarks />
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetUseSessionTickets">
      <MemberSignature Language="C#" Value="public virtual void SetUseSessionTickets (Java.Net.Socket socket, bool useSessionTickets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetUseSessionTickets(class Java.Net.Socket socket, bool useSessionTickets) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setUseSessionTickets", "(Ljava/net/Socket;Z)V", "GetSetUseSessionTickets_Ljava_net_Socket_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="socket" Type="Java.Net.Socket" />
        <Parameter Name="useSessionTickets" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="socket">a socket created by this factory</param>
        <param name="useSessionTickets">
          <c>true</c> to enable session ticket support on this socket.</param>
        <summary>Enables 
 support on the given socket.</summary>
        <remarks />
        <since version="Added in API level 17" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the socket was not created by this factory.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
