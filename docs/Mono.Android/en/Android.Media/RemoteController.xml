<Type Name="RemoteController" FullName="Android.Media.RemoteController">
  <TypeSignature Language="C#" Value="public sealed class RemoteController : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RemoteController extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/media/RemoteController", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("This class is obsoleted in this android platform")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="19">
    <summary>The RemoteController class is used to control media playback, display and update media metadata
 and playback status, published by applications using the <c><see cref="T:Android.Media.RemoteControlClient" /></c> class.</summary>
    <remarks />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteController (Android.Content.Context context, Android.Media.RemoteController.IOnClientUpdateListener updateListener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Media.RemoteController/IOnClientUpdateListener updateListener) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/media/RemoteController$OnClientUpdateListener;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="updateListener" Type="Android.Media.RemoteController+IOnClientUpdateListener" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="updateListener">To be added.</param>
        <summary>Class constructor.</summary>
        <remarks />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteController (Android.Content.Context context, Android.Media.RemoteController.IOnClientUpdateListener updateListener, Android.OS.Looper looper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Media.RemoteController/IOnClientUpdateListener updateListener, class Android.OS.Looper looper) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/media/RemoteController$OnClientUpdateListener;Landroid/os/Looper;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="updateListener" Type="Android.Media.RemoteController+IOnClientUpdateListener" />
        <Parameter Name="looper" Type="Android.OS.Looper" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="updateListener">To be added.</param>
        <param name="looper">To be added.</param>
        <summary>Class constructor.</summary>
        <remarks />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="ClearArtworkConfiguration">
      <MemberSignature Language="C#" Value="public bool ClearArtworkConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ClearArtworkConfiguration() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearArtworkConfiguration", "()Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Prevents this RemoteController from receiving artwork images.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="EditMetadata">
      <MemberSignature Language="C#" Value="public Android.Media.RemoteController.MetadataEditor EditMetadata ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Media.RemoteController/MetadataEditor EditMetadata() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("editMetadata", "()Landroid/media/RemoteController$MetadataEditor;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.RemoteController+MetadataEditor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a <c><see cref="!:NoType:android/media/RemoteController$MetadataEditor;Href=../../../reference/android/media/RemoteController.MetadataEditor.html" /></c> for updating metadata values of the editable keys of
 the current <c><see cref="T:Android.Media.RemoteControlClient" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="EstimatedMediaPosition">
      <MemberSignature Language="C#" Value="public long EstimatedMediaPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 EstimatedMediaPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getEstimatedMediaPosition", "()J", "GetGetEstimatedMediaPositionHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the estimated playback position of the current media track or a negative value
 if not available.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="PositionSynchronizationCheck">
      <MemberSignature Language="C#" Value="public const Android.Media.SynchronizationPosition PositionSynchronizationCheck = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.SynchronizationPosition PositionSynchronizationCheck = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("POSITION_SYNCHRONIZATION_CHECK")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.SynchronizationPosition enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.SynchronizationPosition</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>The playback position synchronization mode where the RemoteControlClient instances which
 expose their playback position to the framework, will be regularly polled to check
 whether any drift has been noticed between their estimated position and the one they report.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="PositionSynchronizationNone">
      <MemberSignature Language="C#" Value="public const Android.Media.SynchronizationPosition PositionSynchronizationNone = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.SynchronizationPosition PositionSynchronizationNone = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("POSITION_SYNCHRONIZATION_NONE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.SynchronizationPosition enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.SynchronizationPosition</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Default playback position synchronization mode where the RemoteControlClient is not
 asked regularly for its playback position to see if it has drifted from the estimated
 position.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SeekTo">
      <MemberSignature Language="C#" Value="public bool SeekTo (long timeMs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SeekTo(int64 timeMs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("seekTo", "(J)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeMs" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="timeMs">a 0 or positive value for the new playback position, expressed in ms.</param>
        <summary>Sets the new playback position.</summary>
        <returns>To be added.</returns>
        <remarks />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="SendMediaKeyEvent">
      <MemberSignature Language="C#" Value="public bool SendMediaKeyEvent (Android.Views.KeyEvent keyEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SendMediaKeyEvent(class Android.Views.KeyEvent keyEvent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sendMediaKeyEvent", "(Landroid/view/KeyEvent;)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyEvent" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="keyEvent">a <c><see cref="T:Android.Views.KeyEvent" /></c> instance whose key code is one of
     <c><see cref="!:Android.Views.KeyEvent.KEYCODE_MUTE" /></c>,
     <c><see cref="!:Android.Views.KeyEvent.KEYCODE_HEADSETHOOK" /></c>,
     <c><see cref="!:Android.Views.KeyEvent.KEYCODE_MEDIA_PLAY" /></c>,
     <c><see cref="!:Android.Views.KeyEvent.KEYCODE_MEDIA_PAUSE" /></c>,
     <c><see cref="!:Android.Views.KeyEvent.KEYCODE_MEDIA_PLAY_PAUSE" /></c>,
     <c><see cref="!:Android.Views.KeyEvent.KEYCODE_MEDIA_STOP" /></c>,
     <c><see cref="!:Android.Views.KeyEvent.KEYCODE_MEDIA_NEXT" /></c>,
     <c><see cref="!:Android.Views.KeyEvent.KEYCODE_MEDIA_PREVIOUS" /></c>,
     <c><see cref="!:Android.Views.KeyEvent.KEYCODE_MEDIA_REWIND" /></c>,
     <c><see cref="!:Android.Views.KeyEvent.KEYCODE_MEDIA_RECORD" /></c>,
     <c><see cref="!:Android.Views.KeyEvent.KEYCODE_MEDIA_FAST_FORWARD" /></c>,
     <c><see cref="!:Android.Views.KeyEvent.KEYCODE_MEDIA_CLOSE" /></c>,
     <c><see cref="!:Android.Views.KeyEvent.KEYCODE_MEDIA_EJECT" /></c>,
     or <c><see cref="!:Android.Views.KeyEvent.KEYCODE_MEDIA_AUDIO_TRACK" /></c>.</param>
        <summary>Send a simulated key event for a media button to be received by the current client.</summary>
        <returns>To be added.</returns>
        <remarks />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="SetArtworkConfiguration">
      <MemberSignature Language="C#" Value="public bool SetArtworkConfiguration (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SetArtworkConfiguration(int32 width, int32 height) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setArtworkConfiguration", "(II)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">the maximum width in pixels</param>
        <param name="height">the maximum height in pixels</param>
        <summary>Set the maximum artwork image dimensions to be received in the metadata.</summary>
        <returns>To be added.</returns>
        <remarks />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="SetSynchronizationMode">
      <MemberSignature Language="C#" Value="public bool SetSynchronizationMode (Android.Media.SynchronizationPosition sync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SetSynchronizationMode(valuetype Android.Media.SynchronizationPosition sync) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSynchronizationMode", "(I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sync" Type="Android.Media.SynchronizationPosition">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="sync">
          <c>
            <see cref="F:Android.Media.RemoteController.PositionSynchronizationNone" />
          </c> or <c><see cref="F:Android.Media.RemoteController.PositionSynchronizationCheck" /></c></param>
        <summary>Set the playback position synchronization mode.</summary>
        <returns>To be added.</returns>
        <remarks />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
