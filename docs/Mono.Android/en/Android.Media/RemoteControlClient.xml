<Type Name="RemoteControlClient" FullName="Android.Media.RemoteControlClient">
  <TypeSignature Language="C#" Value="public class RemoteControlClient : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RemoteControlClient extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/media/RemoteControlClient", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("This class is obsoleted in this android platform")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="14">
    <summary>RemoteControlClient enables exposing information meant to be consumed by remote controls
 capable of displaying metadata, artwork and media transport control buttons.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">RemoteControlClient enables exposing information meant to be consumed by remote controls
 capable of displaying metadata, artwork and media transport control buttons.

 </para>
      <para tool="javadoc-to-mdoc">A remote control client object is associated with a media button event receiver. This
 event receiver must have been previously registered with
 <c><see cref="M:Android.Media.AudioManager.RegisterMediaButtonEventReceiver(Android.Content.ComponentName)" /></c> before the
 RemoteControlClient can be registered through
 <c><see cref="M:Android.Media.AudioManager.RegisterRemoteControlClient(Android.Media.RemoteControlClient)" /></c>.

 </para>
      <para tool="javadoc-to-mdoc">Here is an example of creating a RemoteControlClient instance after registering a media
 button event receiver:
 <example><code lang="java">ComponentName myEventReceiver = new ComponentName(getPackageName(), MyRemoteControlEventReceiver.class.getName());
 AudioManager myAudioManager = (AudioManager) getSystemService(Context.AUDIO_SERVICE);
 myAudioManager.registerMediaButtonEventReceiver(myEventReceiver);
 // build the PendingIntent for the remote control client
 Intent mediaButtonIntent = new Intent(Intent.ACTION_MEDIA_BUTTON);
 mediaButtonIntent.setComponent(myEventReceiver);
 PendingIntent mediaPendingIntent = PendingIntent.getBroadcast(getApplicationContext(), 0, mediaButtonIntent, 0);
 // create and register the remote control client
 RemoteControlClient myRemoteControlClient = new RemoteControlClient(mediaPendingIntent);
 myAudioManager.registerRemoteControlClient(myRemoteControlClient);</code></example></para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/media/RemoteControlClient.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 14" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteControlClient (Android.App.PendingIntent mediaButtonIntent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.App.PendingIntent mediaButtonIntent) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/app/PendingIntent;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="mediaButtonIntent" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="mediaButtonIntent">To be added.</param>
        <summary>Class constructor.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Class constructor.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/RemoteControlClient.html#RemoteControlClient(android.app.PendingIntent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Media.AudioManager.RegisterMediaButtonEventReceiver(Android.Content.ComponentName)" />
        <altmember cref="M:Android.Media.AudioManager.RegisterRemoteControlClient(Android.Media.RemoteControlClient)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RemoteControlClient (Android.App.PendingIntent mediaButtonIntent, Android.OS.Looper looper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.App.PendingIntent mediaButtonIntent, class Android.OS.Looper looper) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/app/PendingIntent;Landroid/os/Looper;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="mediaButtonIntent" Type="Android.App.PendingIntent" />
        <Parameter Name="looper" Type="Android.OS.Looper" />
      </Parameters>
      <Docs>
        <param name="mediaButtonIntent">To be added.</param>
        <param name="looper">To be added.</param>
        <summary>Class constructor for a remote control client whose internal event handling
 happens on a user-provided Looper.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Class constructor for a remote control client whose internal event handling
 happens on a user-provided Looper.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/RemoteControlClient.html#RemoteControlClient(android.app.PendingIntent, android.os.Looper)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Media.AudioManager.RegisterMediaButtonEventReceiver(Android.Content.ComponentName)" />
        <altmember cref="M:Android.Media.AudioManager.RegisterRemoteControlClient(Android.Media.RemoteControlClient)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RemoteControlClient (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditMetadata">
      <MemberSignature Language="C#" Value="public virtual Android.Media.RemoteControlClient.MetadataEditor EditMetadata (bool startEmpty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Media.RemoteControlClient/MetadataEditor EditMetadata(bool startEmpty) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("editMetadata", "(Z)Landroid/media/RemoteControlClient$MetadataEditor;", "GetEditMetadata_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.RemoteControlClient+MetadataEditor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startEmpty" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startEmpty">Set to false if you want the MetadataEditor to contain the metadata that
     was previously applied to the RemoteControlClient, or true if it is to be created empty.</param>
        <summary>Creates a <c><see cref="!:NoType:android/media/RemoteControlClient$MetadataEditor;Href=../../../reference/android/media/RemoteControlClient.MetadataEditor.html" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a <c><see cref="!:NoType:android/media/RemoteControlClient$MetadataEditor;Href=../../../reference/android/media/RemoteControlClient.MetadataEditor.html" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/RemoteControlClient.html#editMetadata(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="FlagKeyMediaFastForward">
      <MemberSignature Language="C#" Value="public const Android.Media.RemoteControlFlags FlagKeyMediaFastForward = 64;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.RemoteControlFlags FlagKeyMediaFastForward = (64)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FLAG_KEY_MEDIA_FAST_FORWARD")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.RemoteControlFlags enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.RemoteControlFlags</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary>Flag indicating a RemoteControlClient makes use of the "fast forward" media key.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Flag indicating a RemoteControlClient makes use of the "fast forward" media key.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/RemoteControlClient.html#FLAG_KEY_MEDIA_FAST_FORWARD" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Media.RemoteControlClient.SetTransportControlFlags(Android.Media.RemoteControlFlags)" />
      </Docs>
    </Member>
    <Member MemberName="FlagKeyMediaNext">
      <MemberSignature Language="C#" Value="public const Android.Media.RemoteControlFlags FlagKeyMediaNext = 128;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.RemoteControlFlags FlagKeyMediaNext = (128)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FLAG_KEY_MEDIA_NEXT")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.RemoteControlFlags enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.RemoteControlFlags</ReturnType>
      </ReturnValue>
      <MemberValue>128</MemberValue>
      <Docs>
        <summary>Flag indicating a RemoteControlClient makes use of the "next" media key.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Flag indicating a RemoteControlClient makes use of the "next" media key.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/RemoteControlClient.html#FLAG_KEY_MEDIA_NEXT" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Media.RemoteControlClient.SetTransportControlFlags(Android.Media.RemoteControlFlags)" />
      </Docs>
    </Member>
    <Member MemberName="FlagKeyMediaPause">
      <MemberSignature Language="C#" Value="public const Android.Media.RemoteControlFlags FlagKeyMediaPause = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.RemoteControlFlags FlagKeyMediaPause = (16)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FLAG_KEY_MEDIA_PAUSE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.RemoteControlFlags enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.RemoteControlFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>Flag indicating a RemoteControlClient makes use of the "pause" media key.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Flag indicating a RemoteControlClient makes use of the "pause" media key.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/RemoteControlClient.html#FLAG_KEY_MEDIA_PAUSE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Media.RemoteControlClient.SetTransportControlFlags(Android.Media.RemoteControlFlags)" />
      </Docs>
    </Member>
    <Member MemberName="FlagKeyMediaPlay">
      <MemberSignature Language="C#" Value="public const Android.Media.RemoteControlFlags FlagKeyMediaPlay = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.RemoteControlFlags FlagKeyMediaPlay = (4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FLAG_KEY_MEDIA_PLAY")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.RemoteControlFlags enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.RemoteControlFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Flag indicating a RemoteControlClient makes use of the "play" media key.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Flag indicating a RemoteControlClient makes use of the "play" media key.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/RemoteControlClient.html#FLAG_KEY_MEDIA_PLAY" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Media.RemoteControlClient.SetTransportControlFlags(Android.Media.RemoteControlFlags)" />
      </Docs>
    </Member>
    <Member MemberName="FlagKeyMediaPlayPause">
      <MemberSignature Language="C#" Value="public const Android.Media.RemoteControlFlags FlagKeyMediaPlayPause = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.RemoteControlFlags FlagKeyMediaPlayPause = (8)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FLAG_KEY_MEDIA_PLAY_PAUSE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.RemoteControlFlags enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.RemoteControlFlags</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>Flag indicating a RemoteControlClient makes use of the "play/pause" media key.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Flag indicating a RemoteControlClient makes use of the "play/pause" media key.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/RemoteControlClient.html#FLAG_KEY_MEDIA_PLAY_PAUSE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Media.RemoteControlClient.SetTransportControlFlags(Android.Media.RemoteControlFlags)" />
      </Docs>
    </Member>
    <Member MemberName="FlagKeyMediaPositionUpdate">
      <MemberSignature Language="C#" Value="public const Android.Media.RemoteControlFlags FlagKeyMediaPositionUpdate = 256;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.RemoteControlFlags FlagKeyMediaPositionUpdate = (256)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FLAG_KEY_MEDIA_POSITION_UPDATE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.RemoteControlFlags enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.RemoteControlFlags</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary>Flag indicating a RemoteControlClient can receive changes in the media playback position
 through the <c><see cref="!:NoType:android/media/RemoteControlClient$OnPlaybackPositionUpdateListener;Href=../../../reference/android/media/RemoteControlClient.OnPlaybackPositionUpdateListener.html" /></c> interface.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Flag indicating a RemoteControlClient can receive changes in the media playback position
 through the <c><see cref="!:NoType:android/media/RemoteControlClient$OnPlaybackPositionUpdateListener;Href=../../../reference/android/media/RemoteControlClient.OnPlaybackPositionUpdateListener.html" /></c> interface. This flag must be set
 in order for components that display the RemoteControlClient information, to display and
 let the user control media playback position.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/RemoteControlClient.html#FLAG_KEY_MEDIA_POSITION_UPDATE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
        <altmember cref="M:Android.Media.RemoteControlClient.SetTransportControlFlags(Android.Media.RemoteControlFlags)" />
        <altmember cref="M:Android.Media.RemoteControlClient.SetOnGetPlaybackPositionListener(.IOnGetPlaybackPositionListener)" />
        <altmember cref="M:Android.Media.RemoteControlClient.SetPlaybackPositionUpdateListener(.IOnPlaybackPositionUpdateListener)" />
      </Docs>
    </Member>
    <Member MemberName="FlagKeyMediaPrevious">
      <MemberSignature Language="C#" Value="public const Android.Media.RemoteControlFlags FlagKeyMediaPrevious = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.RemoteControlFlags FlagKeyMediaPrevious = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FLAG_KEY_MEDIA_PREVIOUS")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.RemoteControlFlags enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.RemoteControlFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Flag indicating a RemoteControlClient makes use of the "previous" media key.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Flag indicating a RemoteControlClient makes use of the "previous" media key.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/RemoteControlClient.html#FLAG_KEY_MEDIA_PREVIOUS" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Media.RemoteControlClient.SetTransportControlFlags(Android.Media.RemoteControlFlags)" />
      </Docs>
    </Member>
    <Member MemberName="FlagKeyMediaRating">
      <MemberSignature Language="C#" Value="public const Android.Media.RemoteControlFlags FlagKeyMediaRating = 512;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.RemoteControlFlags FlagKeyMediaRating = (512)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FLAG_KEY_MEDIA_RATING")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.RemoteControlFlags enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.RemoteControlFlags</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary>Flag indicating a RemoteControlClient supports ratings.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Flag indicating a RemoteControlClient supports ratings.
 This flag must be set in order for components that display the RemoteControlClient
 information, to display ratings information, and, if ratings are declared editable
 (by calling <c><see cref="M:Android.Media.MediaMetadataEditor.AddEditableKey(Android.Media.MediaMetadataEditKey)" /></c> with the
 <c><see cref="F:Android.Media.MediaMetadataEditor.RatingKeyByUser" /></c> key), it will enable the user to rate
 the media, with values being received through the interface set with
 <c><see cref="M:Android.Media.RemoteControlClient.SetMetadataUpdateListener(.IOnMetadataUpdateListener)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/RemoteControlClient.html#FLAG_KEY_MEDIA_RATING" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.Media.RemoteControlClient.SetTransportControlFlags(Android.Media.RemoteControlFlags)" />
      </Docs>
    </Member>
    <Member MemberName="FlagKeyMediaRewind">
      <MemberSignature Language="C#" Value="public const Android.Media.RemoteControlFlags FlagKeyMediaRewind = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.RemoteControlFlags FlagKeyMediaRewind = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FLAG_KEY_MEDIA_REWIND")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.RemoteControlFlags enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.RemoteControlFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Flag indicating a RemoteControlClient makes use of the "rewind" media key.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Flag indicating a RemoteControlClient makes use of the "rewind" media key.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/RemoteControlClient.html#FLAG_KEY_MEDIA_REWIND" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Media.RemoteControlClient.SetTransportControlFlags(Android.Media.RemoteControlFlags)" />
      </Docs>
    </Member>
    <Member MemberName="FlagKeyMediaStop">
      <MemberSignature Language="C#" Value="public const Android.Media.RemoteControlFlags FlagKeyMediaStop = 32;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.RemoteControlFlags FlagKeyMediaStop = (32)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FLAG_KEY_MEDIA_STOP")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.RemoteControlFlags enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.RemoteControlFlags</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>Flag indicating a RemoteControlClient makes use of the "stop" media key.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Flag indicating a RemoteControlClient makes use of the "stop" media key.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/RemoteControlClient.html#FLAG_KEY_MEDIA_STOP" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Media.RemoteControlClient.SetTransportControlFlags(Android.Media.RemoteControlFlags)" />
      </Docs>
    </Member>
    <Member MemberName="GetPlaybackPosition">
      <MemberSignature Language="C#" Value="public Android.Media.RemoteControlClient.GetPlaybackPositionHandler GetPlaybackPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.RemoteControlClient/GetPlaybackPositionHandler GetPlaybackPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Media.RemoteControlClient+GetPlaybackPositionHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaSession">
      <MemberSignature Language="C#" Value="public virtual Android.Media.Session.MediaSession MediaSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.Session.MediaSession MediaSession" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMediaSession", "()Landroid/media/session/MediaSession;", "GetGetMediaSessionHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Session.MediaSession</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get a <c><see cref="T:Android.Media.Session.MediaSession" /></c> associated with this RCC.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get a <c><see cref="T:Android.Media.Session.MediaSession" /></c> associated with this RCC. It will only have a
 session while it is registered with
 <c><see cref="M:Android.Media.AudioManager.RegisterRemoteControlClient(Android.Media.RemoteControlClient)" /></c>. The session returned
 should not be modified directly by the application but may be used with
 other APIs that require a session.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/RemoteControlClient.html#getMediaSession()" target="_blank">[Android Documentation]</a>
              <since version="Added in API level 21" />
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MetadataUpdate">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.RemoteControlClient.MetadataUpdateEventArgs&gt; MetadataUpdate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.RemoteControlClient/MetadataUpdateEventArgs&gt; MetadataUpdate" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.RemoteControlClient+MetadataUpdateEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlaybackPositionUpdate">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.RemoteControlClient.PlaybackPositionUpdateEventArgs&gt; PlaybackPositionUpdate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.RemoteControlClient/PlaybackPositionUpdateEventArgs&gt; PlaybackPositionUpdate" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.RemoteControlClient+PlaybackPositionUpdateEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlaystateBuffering">
      <MemberSignature Language="C#" Value="public const Android.Media.RemoteControlPlayState PlaystateBuffering = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.RemoteControlPlayState PlaystateBuffering = (8)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PLAYSTATE_BUFFERING")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.RemoteControlPlayState enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.RemoteControlPlayState</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>Playback state of a RemoteControlClient which is buffering data to play before it can
    start or resume playback.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Playback state of a RemoteControlClient which is buffering data to play before it can
    start or resume playback.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/RemoteControlClient.html#PLAYSTATE_BUFFERING" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Media.RemoteControlClient.SetPlaybackState(Android.Media.RemoteControlPlayState)" />
      </Docs>
    </Member>
    <Member MemberName="PlaystateError">
      <MemberSignature Language="C#" Value="public const Android.Media.RemoteControlPlayState PlaystateError = 9;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.RemoteControlPlayState PlaystateError = (9)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PLAYSTATE_ERROR")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.RemoteControlPlayState enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.RemoteControlPlayState</ReturnType>
      </ReturnValue>
      <MemberValue>9</MemberValue>
      <Docs>
        <summary>Playback state of a RemoteControlClient which cannot perform any playback related
    operation because of an internal error.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Playback state of a RemoteControlClient which cannot perform any playback related
    operation because of an internal error. Examples of such situations are no network
    connectivity when attempting to stream data from a server, or expired user credentials
    when trying to play subscription-based content.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/RemoteControlClient.html#PLAYSTATE_ERROR" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Media.RemoteControlClient.SetPlaybackState(Android.Media.RemoteControlPlayState)" />
      </Docs>
    </Member>
    <Member MemberName="PlaystateFastForwarding">
      <MemberSignature Language="C#" Value="public const Android.Media.RemoteControlPlayState PlaystateFastForwarding = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.RemoteControlPlayState PlaystateFastForwarding = (4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PLAYSTATE_FAST_FORWARDING")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.RemoteControlPlayState enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.RemoteControlPlayState</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Playback state of a RemoteControlClient which is fast forwarding in the media
    it is currently playing.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Playback state of a RemoteControlClient which is fast forwarding in the media
    it is currently playing.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/RemoteControlClient.html#PLAYSTATE_FAST_FORWARDING" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Media.RemoteControlClient.SetPlaybackState(Android.Media.RemoteControlPlayState)" />
      </Docs>
    </Member>
    <Member MemberName="PlaystatePaused">
      <MemberSignature Language="C#" Value="public const Android.Media.RemoteControlPlayState PlaystatePaused = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.RemoteControlPlayState PlaystatePaused = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PLAYSTATE_PAUSED")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.RemoteControlPlayState enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.RemoteControlPlayState</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Playback state of a RemoteControlClient which is paused.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Playback state of a RemoteControlClient which is paused.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/RemoteControlClient.html#PLAYSTATE_PAUSED" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Media.RemoteControlClient.SetPlaybackState(Android.Media.RemoteControlPlayState)" />
      </Docs>
    </Member>
    <Member MemberName="PlaystatePlaying">
      <MemberSignature Language="C#" Value="public const Android.Media.RemoteControlPlayState PlaystatePlaying = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.RemoteControlPlayState PlaystatePlaying = (3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PLAYSTATE_PLAYING")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.RemoteControlPlayState enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.RemoteControlPlayState</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Playback state of a RemoteControlClient which is playing media.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Playback state of a RemoteControlClient which is playing media.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/RemoteControlClient.html#PLAYSTATE_PLAYING" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Media.RemoteControlClient.SetPlaybackState(Android.Media.RemoteControlPlayState)" />
      </Docs>
    </Member>
    <Member MemberName="PlaystateRewinding">
      <MemberSignature Language="C#" Value="public const Android.Media.RemoteControlPlayState PlaystateRewinding = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.RemoteControlPlayState PlaystateRewinding = (5)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PLAYSTATE_REWINDING")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.RemoteControlPlayState enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.RemoteControlPlayState</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>Playback state of a RemoteControlClient which is fast rewinding in the media
    it is currently playing.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Playback state of a RemoteControlClient which is fast rewinding in the media
    it is currently playing.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/RemoteControlClient.html#PLAYSTATE_REWINDING" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Media.RemoteControlClient.SetPlaybackState(Android.Media.RemoteControlPlayState)" />
      </Docs>
    </Member>
    <Member MemberName="PlaystateSkippingBackwards">
      <MemberSignature Language="C#" Value="public const Android.Media.RemoteControlPlayState PlaystateSkippingBackwards = 7;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.RemoteControlPlayState PlaystateSkippingBackwards = (7)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PLAYSTATE_SKIPPING_BACKWARDS")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.RemoteControlPlayState enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.RemoteControlPlayState</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>Playback state of a RemoteControlClient which is skipping back to the previous
    logical chapter (such as a song in a playlist) in the media it is currently playing.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Playback state of a RemoteControlClient which is skipping back to the previous
    logical chapter (such as a song in a playlist) in the media it is currently playing.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/RemoteControlClient.html#PLAYSTATE_SKIPPING_BACKWARDS" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Media.RemoteControlClient.SetPlaybackState(Android.Media.RemoteControlPlayState)" />
      </Docs>
    </Member>
    <Member MemberName="PlaystateSkippingForwards">
      <MemberSignature Language="C#" Value="public const Android.Media.RemoteControlPlayState PlaystateSkippingForwards = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.RemoteControlPlayState PlaystateSkippingForwards = (6)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PLAYSTATE_SKIPPING_FORWARDS")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.RemoteControlPlayState enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.RemoteControlPlayState</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>Playback state of a RemoteControlClient which is skipping to the next
    logical chapter (such as a song in a playlist) in the media it is currently playing.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Playback state of a RemoteControlClient which is skipping to the next
    logical chapter (such as a song in a playlist) in the media it is currently playing.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/RemoteControlClient.html#PLAYSTATE_SKIPPING_FORWARDS" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Media.RemoteControlClient.SetPlaybackState(Android.Media.RemoteControlPlayState)" />
      </Docs>
    </Member>
    <Member MemberName="PlaystateStopped">
      <MemberSignature Language="C#" Value="public const Android.Media.RemoteControlPlayState PlaystateStopped = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.RemoteControlPlayState PlaystateStopped = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PLAYSTATE_STOPPED")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.RemoteControlPlayState enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.RemoteControlPlayState</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Playback state of a RemoteControlClient which is stopped.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Playback state of a RemoteControlClient which is stopped.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/RemoteControlClient.html#PLAYSTATE_STOPPED" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Media.RemoteControlClient.SetPlaybackState(Android.Media.RemoteControlPlayState)" />
      </Docs>
    </Member>
    <Member MemberName="SetMetadataUpdateListener">
      <MemberSignature Language="C#" Value="public virtual void SetMetadataUpdateListener (Android.Media.RemoteControlClient.IOnMetadataUpdateListener l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMetadataUpdateListener(class Android.Media.RemoteControlClient/IOnMetadataUpdateListener l) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setMetadataUpdateListener", "(Landroid/media/RemoteControlClient$OnMetadataUpdateListener;)V", "GetSetMetadataUpdateListener_Landroid_media_RemoteControlClient_OnMetadataUpdateListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Android.Media.RemoteControlClient+IOnMetadataUpdateListener" />
      </Parameters>
      <Docs>
        <param name="l">the metadata update listener
</param>
        <summary>Sets the listener to be called whenever the metadata is updated.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the listener to be called whenever the metadata is updated.
 New metadata values will be received in the same thread as the one in which
 RemoteControlClient was created.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/RemoteControlClient.html#setMetadataUpdateListener(android.media.RemoteControlClient.OnMetadataUpdateListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOnGetPlaybackPositionListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnGetPlaybackPositionListener (Android.Media.RemoteControlClient.IOnGetPlaybackPositionListener l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnGetPlaybackPositionListener(class Android.Media.RemoteControlClient/IOnGetPlaybackPositionListener l) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnGetPlaybackPositionListener", "(Landroid/media/RemoteControlClient$OnGetPlaybackPositionListener;)V", "GetSetOnGetPlaybackPositionListener_Landroid_media_RemoteControlClient_OnGetPlaybackPositionListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Android.Media.RemoteControlClient+IOnGetPlaybackPositionListener" />
      </Parameters>
      <Docs>
        <param name="l">the listener to be called to retrieve the playback position
</param>
        <summary>Sets the listener to be called whenever the media current playback position is needed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the listener to be called whenever the media current playback position is needed.
 Queries will be received in the same thread as the one in which RemoteControlClient
 was created.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/RemoteControlClient.html#setOnGetPlaybackPositionListener(android.media.RemoteControlClient.OnGetPlaybackPositionListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="SetPlaybackPositionUpdateListener">
      <MemberSignature Language="C#" Value="public virtual void SetPlaybackPositionUpdateListener (Android.Media.RemoteControlClient.IOnPlaybackPositionUpdateListener l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPlaybackPositionUpdateListener(class Android.Media.RemoteControlClient/IOnPlaybackPositionUpdateListener l) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPlaybackPositionUpdateListener", "(Landroid/media/RemoteControlClient$OnPlaybackPositionUpdateListener;)V", "GetSetPlaybackPositionUpdateListener_Landroid_media_RemoteControlClient_OnPlaybackPositionUpdateListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Android.Media.RemoteControlClient+IOnPlaybackPositionUpdateListener" />
      </Parameters>
      <Docs>
        <param name="l">the position update listener to be called
</param>
        <summary>Sets the listener to be called whenever the media playback position is requested
 to be updated.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the listener to be called whenever the media playback position is requested
 to be updated.
 Notifications will be received in the same thread as the one in which RemoteControlClient
 was created.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/RemoteControlClient.html#setPlaybackPositionUpdateListener(android.media.RemoteControlClient.OnPlaybackPositionUpdateListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="SetPlaybackState">
      <MemberSignature Language="C#" Value="public virtual void SetPlaybackState (Android.Media.RemoteControlPlayState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPlaybackState(valuetype Android.Media.RemoteControlPlayState state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPlaybackState", "(I)V", "GetSetPlaybackState_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Android.Media.RemoteControlPlayState">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="state">The current playback state, one of the following values:
       <c><see cref="F:Android.Media.RemoteControlClient.PlaystateStopped" /></c>,
       <c><see cref="F:Android.Media.RemoteControlClient.PlaystatePaused" /></c>,
       <c><see cref="F:Android.Media.RemoteControlClient.PlaystatePlaying" /></c>,
       <c><see cref="F:Android.Media.RemoteControlClient.PlaystateFastForwarding" /></c>,
       <c><see cref="F:Android.Media.RemoteControlClient.PlaystateRewinding" /></c>,
       <c><see cref="F:Android.Media.RemoteControlClient.PlaystateSkippingForwards" /></c>,
       <c><see cref="F:Android.Media.RemoteControlClient.PlaystateSkippingBackwards" /></c>,
       <c><see cref="F:Android.Media.RemoteControlClient.PlaystateBuffering" /></c>,
       <c><see cref="F:Android.Media.RemoteControlClient.PlaystateError" /></c>.
</param>
        <summary tool="true">Sets the current playback state and the matching media position for the current playback
   speed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the current playback state.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/RemoteControlClient.html#setPlaybackState(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetPlaybackState">
      <MemberSignature Language="C#" Value="public virtual void SetPlaybackState (Android.Media.RemoteControlPlayState state, long timeInMs, float playbackSpeed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPlaybackState(valuetype Android.Media.RemoteControlPlayState state, int64 timeInMs, float32 playbackSpeed) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPlaybackState", "(IJF)V", "GetSetPlaybackState_IJFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Android.Media.RemoteControlPlayState">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="timeInMs" Type="System.Int64" />
        <Parameter Name="playbackSpeed" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="state">The current playback state, one of the following values:
       <c><see cref="F:Android.Media.RemoteControlClient.PlaystateStopped" /></c>,
       <c><see cref="F:Android.Media.RemoteControlClient.PlaystatePaused" /></c>,
       <c><see cref="F:Android.Media.RemoteControlClient.PlaystatePlaying" /></c>,
       <c><see cref="F:Android.Media.RemoteControlClient.PlaystateFastForwarding" /></c>,
       <c><see cref="F:Android.Media.RemoteControlClient.PlaystateRewinding" /></c>,
       <c><see cref="F:Android.Media.RemoteControlClient.PlaystateSkippingForwards" /></c>,
       <c><see cref="F:Android.Media.RemoteControlClient.PlaystateSkippingBackwards" /></c>,
       <c><see cref="F:Android.Media.RemoteControlClient.PlaystateBuffering" /></c>,
       <c><see cref="F:Android.Media.RemoteControlClient.PlaystateError" /></c>.</param>
        <param name="timeInMs">a 0 or positive value for the current media position expressed in ms
    (same unit as for when sending the media duration, if applicable, with
    <c><see cref="F:Android.Media.MediaMetadataRetriever.MetadataKeyDuration" /></c> in the
    <c><see cref="!:NoType:android/media/RemoteControlClient$MetadataEditor;Href=../../../reference/android/media/RemoteControlClient.MetadataEditor.html" /></c>). Negative values imply that position is not
    known (e.g. listening to a live stream of a radio) or not applicable (e.g. when state
    is <c><see cref="F:Android.Media.RemoteControlClient.PlaystateBuffering" /></c> and nothing had played yet).</param>
        <param name="playbackSpeed">a value expressed as a ratio of 1x playback: 1.0f is normal playback,
    2.0f is 2x, 0.5f is half-speed, -2.0f is rewind at 2x speed. 0.0f means nothing is
    playing (e.g. when state is <c><see cref="F:Android.Media.RemoteControlClient.PlaystateError" /></c>).
</param>
        <summary>Sets the current playback state and the matching media position for the current playback
   speed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the current playback state and the matching media position for the current playback
   speed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/RemoteControlClient.html#setPlaybackState(int, long, float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="SetTransportControlFlags">
      <MemberSignature Language="C#" Value="public virtual void SetTransportControlFlags (Android.Media.RemoteControlFlags transportControlFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTransportControlFlags(valuetype Android.Media.RemoteControlFlags transportControlFlags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTransportControlFlags", "(I)V", "GetSetTransportControlFlags_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transportControlFlags" Type="Android.Media.RemoteControlFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="transportControlFlags">A combination of the following flags:
      <c><see cref="F:Android.Media.RemoteControlClient.FlagKeyMediaPrevious" /></c>,
      <c><see cref="F:Android.Media.RemoteControlClient.FlagKeyMediaRewind" /></c>,
      <c><see cref="F:Android.Media.RemoteControlClient.FlagKeyMediaPlay" /></c>,
      <c><see cref="F:Android.Media.RemoteControlClient.FlagKeyMediaPlayPause" /></c>,
      <c><see cref="F:Android.Media.RemoteControlClient.FlagKeyMediaPause" /></c>,
      <c><see cref="F:Android.Media.RemoteControlClient.FlagKeyMediaStop" /></c>,
      <c><see cref="F:Android.Media.RemoteControlClient.FlagKeyMediaFastForward" /></c>,
      <c><see cref="F:Android.Media.RemoteControlClient.FlagKeyMediaNext" /></c>,
      <c><see cref="F:Android.Media.RemoteControlClient.FlagKeyMediaPositionUpdate" /></c>,
      <c><see cref="F:Android.Media.RemoteControlClient.FlagKeyMediaRating" /></c>.
</param>
        <summary>Sets the flags for the media transport control buttons that this client supports.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the flags for the media transport control buttons that this client supports.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/RemoteControlClient.html#setTransportControlFlags(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>