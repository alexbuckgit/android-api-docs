<Type Name="MediaSyncEvent" FullName="Android.Media.MediaSyncEvent">
  <TypeSignature Language="C#" Value="public class MediaSyncEvent : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MediaSyncEvent extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/media/MediaSyncEvent", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>The MediaSyncEvent class defines events that can be used to synchronize playback or capture
 actions between different players and recorders.</summary>
    <remarks><para tool="javadoc-to-mdoc">The MediaSyncEvent class defines events that can be used to synchronize playback or capture
 actions between different players and recorders.
 </para><para tool="javadoc-to-mdoc">For instance, <c><see cref="M:Android.Media.AudioRecord.StartRecording(Android.Media.MediaSyncEvent)" /></c> is used to start capture
 only when the playback on a particular audio session is complete.
 The audio session ID is retrieved from a player (e.g <c><see cref="T:Android.Media.MediaPlayer" /></c>, <c><see cref="T:Android.Media.AudioTrack" /></c> or
 <c><see cref="T:Android.Media.ToneGenerator" /></c>) by use of the getAudioSessionId() method.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/media/MediaSyncEvent.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 16" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MediaSyncEvent (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AudioSessionId">
      <MemberSignature Language="C#" Value="public virtual int AudioSessionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AudioSessionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAudioSessionId", "()I", "GetGetAudioSessionIdHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the synchronization event audio session ID.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Gets the synchronization event audio session ID.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/media/MediaSyncEvent.html#getAudioSessionId()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="CreateEvent">
      <MemberSignature Language="C#" Value="public static Android.Media.MediaSyncEvent CreateEvent (Android.Media.MediaSyncEventType eventType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Media.MediaSyncEvent CreateEvent(valuetype Android.Media.MediaSyncEventType eventType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createEvent", "(I)Landroid/media/MediaSyncEvent;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaSyncEvent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="Android.Media.MediaSyncEventType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventType">the synchronization event type.</param>
        <summary>Creates a synchronization event of the sepcified type.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Creates a synchronization event of the sepcified type.

 </para><para tool="javadoc-to-mdoc">The type specifies which kind of event is monitored.
 For instance, event <c><see cref="F:Android.Media.MediaSyncEvent.SyncEventPresentationComplete" /></c> corresponds to the audio being
 presented to the user on a particular audio session.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/media/MediaSyncEvent.html#createEvent(int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="SetAudioSessionId">
      <MemberSignature Language="C#" Value="public virtual Android.Media.MediaSyncEvent SetAudioSessionId (int audioSessionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Media.MediaSyncEvent SetAudioSessionId(int32 audioSessionId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAudioSessionId", "(I)Landroid/media/MediaSyncEvent;", "GetSetAudioSessionId_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaSyncEvent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioSessionId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="audioSessionId">the audio session ID of the event source being monitored.</param>
        <summary>Sets the event source audio session ID.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Sets the event source audio session ID.

 </para><para tool="javadoc-to-mdoc">The audio session ID specifies on which audio session the synchronization event should be
 monitored.
 It is mandatory for certain event types (e.g. <c><see cref="F:Android.Media.MediaSyncEvent.SyncEventPresentationComplete" /></c>).
 For instance, the audio session ID can be retrieved via
 <c><see cref="P:Android.Media.MediaPlayer.AudioSessionId" /></c> when monitoring an event on a particular MediaPlayer.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/media/MediaSyncEvent.html#setAudioSessionId(int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="SyncEventNone">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaSyncEventType SyncEventNone = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaSyncEventType SyncEventNone = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYNC_EVENT_NONE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaSyncEventType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaSyncEventType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>No sync event specified.</summary>
        <remarks><para tool="javadoc-to-mdoc">No sync event specified. When used with a synchronized playback or capture method, the
 behavior is equivalent to calling the corresponding non synchronized method.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/media/MediaSyncEvent.html#SYNC_EVENT_NONE" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SyncEventPresentationComplete">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaSyncEventType SyncEventPresentationComplete = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaSyncEventType SyncEventPresentationComplete = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYNC_EVENT_PRESENTATION_COMPLETE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaSyncEventType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaSyncEventType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>The corresponding action is triggered only when the presentation is completed
 (meaning the media has been presented to the user) on the specified session.</summary>
        <remarks><para tool="javadoc-to-mdoc">The corresponding action is triggered only when the presentation is completed
 (meaning the media has been presented to the user) on the specified session.
 A synchronization of this type requires a source audio session ID to be set via
 {@link #setAudioSessionId(int) method.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/media/MediaSyncEvent.html#SYNC_EVENT_PRESENTATION_COMPLETE" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public virtual Android.Media.MediaSyncEventType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.MediaSyncEventType Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getType", "()I", "GetGetTypeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaSyncEventType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the synchronization event type.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Gets the synchronization event type.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/media/MediaSyncEvent.html#getType()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
  </Members>
</Type>
