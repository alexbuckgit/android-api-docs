<Type Name="MediaRouter" FullName="Android.Media.MediaRouter">
  <TypeSignature Language="C#" Value="public class MediaRouter : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MediaRouter extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/media/MediaRouter", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="16">
    <summary>MediaRouter allows applications to control the routing of media channels
 and streams from the current device to external speakers and destination devices.</summary>
    <remarks />
    <since version="Added in API level 16" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MediaRouter (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AddCallback">
      <MemberSignature Language="C#" Value="public virtual void AddCallback (Android.Media.MediaRouteType types, Android.Media.MediaRouter.Callback cb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddCallback(valuetype Android.Media.MediaRouteType types, class Android.Media.MediaRouter/Callback cb) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addCallback", "(ILandroid/media/MediaRouter$Callback;)V", "GetAddCallback_ILandroid_media_MediaRouter_Callback_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="Android.Media.MediaRouteType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cb" Type="Android.Media.MediaRouter+Callback" />
      </Parameters>
      <Docs>
        <param name="types">Types of routes this callback is interested in</param>
        <param name="cb">Callback to add
</param>
        <summary>Add a callback to listen to events about specific kinds of media routes.</summary>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="AddCallback">
      <MemberSignature Language="C#" Value="public virtual void AddCallback (Android.Media.MediaRouteType types, Android.Media.MediaRouter.Callback cb, Android.Media.MediaRouterCallbackFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddCallback(valuetype Android.Media.MediaRouteType types, class Android.Media.MediaRouter/Callback cb, valuetype Android.Media.MediaRouterCallbackFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addCallback", "(ILandroid/media/MediaRouter$Callback;I)V", "GetAddCallback_ILandroid_media_MediaRouter_Callback_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="Android.Media.MediaRouteType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cb" Type="Android.Media.MediaRouter+Callback" />
        <Parameter Name="flags" Type="Android.Media.MediaRouterCallbackFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="types">Types of routes this callback is interested in</param>
        <param name="cb">Callback to add</param>
        <param name="flags">Flags to control the behavior of the callback.
 May be zero or a combination of <c><see cref="F:Android.Media.MediaRouter.CallbackFlagPerformActiveScan" /></c> and
 <c><see cref="F:Android.Media.MediaRouter.CallbackFlagUnfilteredEvents" /></c>.
</param>
        <summary>Add a callback to listen to events about specific kinds of media routes.</summary>
        <remarks />
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="AddUserRoute">
      <MemberSignature Language="C#" Value="public virtual void AddUserRoute (Android.Media.MediaRouter.UserRouteInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddUserRoute(class Android.Media.MediaRouter/UserRouteInfo info) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addUserRoute", "(Landroid/media/MediaRouter$UserRouteInfo;)V", "GetAddUserRoute_Landroid_media_MediaRouter_UserRouteInfo_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="Android.Media.MediaRouter+UserRouteInfo" />
      </Parameters>
      <Docs>
        <param name="info">Definition of the route to add</param>
        <summary>Add an app-specified route for media to the MediaRouter.</summary>
        <remarks />
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Media.MediaRouter.CreateUserRoute(.RouteCategory)" />
        <altmember cref="M:Android.Media.MediaRouter.RemoveUserRoute(.UserRouteInfo)" />
      </Docs>
    </Member>
    <Member MemberName="CallbackFlagPerformActiveScan">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaRouterCallbackFlags CallbackFlagPerformActiveScan = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaRouterCallbackFlags CallbackFlagPerformActiveScan = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CALLBACK_FLAG_PERFORM_ACTIVE_SCAN")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaRouterCallbackFlags enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaRouterCallbackFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Flag for <c><see cref="M:Android.Media.MediaRouter.AddCallback(Android.Media.MediaRouteType, .Callback)" /></c>: Actively scan for routes while this callback
 is registered.</summary>
        <remarks />
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="CallbackFlagUnfilteredEvents">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaRouterCallbackFlags CallbackFlagUnfilteredEvents = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaRouterCallbackFlags CallbackFlagUnfilteredEvents = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CALLBACK_FLAG_UNFILTERED_EVENTS")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaRouterCallbackFlags enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaRouterCallbackFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Flag for <c><see cref="M:Android.Media.MediaRouter.AddCallback(Android.Media.MediaRouteType, .Callback)" /></c>: Do not filter route events.</summary>
        <remarks />
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="CategoryCount">
      <MemberSignature Language="C#" Value="public virtual int CategoryCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CategoryCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCategoryCount", "()I", "GetGetCategoryCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the number of <c><see cref="!:NoType:android/media/MediaRouter$RouteCategory;Href=../../../reference/android/media/MediaRouter.RouteCategory.html" /></c> currently
 represented by routes known to this MediaRouter.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="ClearUserRoutes">
      <MemberSignature Language="C#" Value="public virtual void ClearUserRoutes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearUserRoutes() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearUserRoutes", "()V", "GetClearUserRoutesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Remove all app-specified routes from the MediaRouter.</summary>
        <remarks />
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Media.MediaRouter.RemoveUserRoute(.UserRouteInfo)" />
      </Docs>
    </Member>
    <Member MemberName="CreateRouteCategory">
      <MemberSignature Language="C#" Value="public virtual Android.Media.MediaRouter.RouteCategory CreateRouteCategory (Java.Lang.ICharSequence name, bool isGroupable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Media.MediaRouter/RouteCategory CreateRouteCategory(class Java.Lang.ICharSequence name, bool isGroupable) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createRouteCategory", "(Ljava/lang/CharSequence;Z)Landroid/media/MediaRouter$RouteCategory;", "GetCreateRouteCategory_Ljava_lang_CharSequence_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaRouter+RouteCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="Java.Lang.ICharSequence" />
        <Parameter Name="isGroupable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">Name of the new category</param>
        <param name="isGroupable">true if routes in this category may be grouped with one another</param>
        <summary>Create a new route category.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="CreateRouteCategory">
      <MemberSignature Language="C#" Value="public virtual Android.Media.MediaRouter.RouteCategory CreateRouteCategory (int nameResId, bool isGroupable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Media.MediaRouter/RouteCategory CreateRouteCategory(int32 nameResId, bool isGroupable) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createRouteCategory", "(IZ)Landroid/media/MediaRouter$RouteCategory;", "GetCreateRouteCategory_IZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaRouter+RouteCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nameResId" Type="System.Int32" />
        <Parameter Name="isGroupable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nameResId">Resource ID of the name of the new category</param>
        <param name="isGroupable">true if routes in this category may be grouped with one another</param>
        <summary>Create a new route category.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="CreateRouteCategory">
      <MemberSignature Language="C#" Value="public Android.Media.MediaRouter.RouteCategory CreateRouteCategory (string name, bool isGroupable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Media.MediaRouter/RouteCategory CreateRouteCategory(string name, bool isGroupable) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Media.MediaRouter+RouteCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="isGroupable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="isGroupable">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CreateUserRoute">
      <MemberSignature Language="C#" Value="public virtual Android.Media.MediaRouter.UserRouteInfo CreateUserRoute (Android.Media.MediaRouter.RouteCategory category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Media.MediaRouter/UserRouteInfo CreateUserRoute(class Android.Media.MediaRouter/RouteCategory category) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createUserRoute", "(Landroid/media/MediaRouter$RouteCategory;)Landroid/media/MediaRouter$UserRouteInfo;", "GetCreateUserRoute_Landroid_media_MediaRouter_RouteCategory_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaRouter+UserRouteInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="Android.Media.MediaRouter+RouteCategory" />
      </Parameters>
      <Docs>
        <param name="category">The category the new route will belong to</param>
        <summary>Create a new user route that may be modified and registered for use by the application.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Media.MediaRouter.AddUserRoute(.UserRouteInfo)" />
        <altmember cref="M:Android.Media.MediaRouter.RemoveUserRoute(.UserRouteInfo)" />
        <altmember cref="M:Android.Media.MediaRouter.CreateRouteCategory(Java.Lang.ICharSequence, System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="DefaultRoute">
      <MemberSignature Language="C#" Value="public virtual Android.Media.MediaRouter.RouteInfo DefaultRoute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.MediaRouter/RouteInfo DefaultRoute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDefaultRoute", "()Landroid/media/MediaRouter$RouteInfo;", "GetGetDefaultRouteHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaRouter+RouteInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the default route for playing media content on the system.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="GetCategoryAt">
      <MemberSignature Language="C#" Value="public virtual Android.Media.MediaRouter.RouteCategory GetCategoryAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Media.MediaRouter/RouteCategory GetCategoryAt(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getCategoryAt", "(I)Landroid/media/MediaRouter$RouteCategory;", "GetGetCategoryAt_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaRouter+RouteCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">which category to return</param>
        <summary>Return the <c><see cref="!:NoType:android/media/MediaRouter$RouteCategory;Href=../../../reference/android/media/MediaRouter.RouteCategory.html" /></c> at the given index.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="GetRouteAt">
      <MemberSignature Language="C#" Value="public virtual Android.Media.MediaRouter.RouteInfo GetRouteAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Media.MediaRouter/RouteInfo GetRouteAt(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getRouteAt", "(I)Landroid/media/MediaRouter$RouteInfo;", "GetGetRouteAt_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaRouter+RouteInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">index of the route to return</param>
        <summary>Return the route at the specified index.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="GetSelectedRoute">
      <MemberSignature Language="C#" Value="public virtual Android.Media.MediaRouter.RouteInfo GetSelectedRoute (Android.Media.MediaRouteType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Media.MediaRouter/RouteInfo GetSelectedRoute(valuetype Android.Media.MediaRouteType type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getSelectedRoute", "(I)Landroid/media/MediaRouter$RouteInfo;", "GetGetSelectedRoute_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaRouter+RouteInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Android.Media.MediaRouteType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type">route types</param>
        <summary>Return the currently selected route for any of the given types</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="RemoveCallback">
      <MemberSignature Language="C#" Value="public virtual void RemoveCallback (Android.Media.MediaRouter.Callback cb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveCallback(class Android.Media.MediaRouter/Callback cb) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeCallback", "(Landroid/media/MediaRouter$Callback;)V", "GetRemoveCallback_Landroid_media_MediaRouter_Callback_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="Android.Media.MediaRouter+Callback" />
      </Parameters>
      <Docs>
        <param name="cb">Callback to remove
</param>
        <summary>Remove the specified callback.</summary>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="RemoveUserRoute">
      <MemberSignature Language="C#" Value="public virtual void RemoveUserRoute (Android.Media.MediaRouter.UserRouteInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveUserRoute(class Android.Media.MediaRouter/UserRouteInfo info) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeUserRoute", "(Landroid/media/MediaRouter$UserRouteInfo;)V", "GetRemoveUserRoute_Landroid_media_MediaRouter_UserRouteInfo_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="Android.Media.MediaRouter+UserRouteInfo" />
      </Parameters>
      <Docs>
        <param name="info">Definition of the route to remove</param>
        <summary>Remove an app-specified route for media from the MediaRouter.</summary>
        <remarks />
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Media.MediaRouter.AddUserRoute(.UserRouteInfo)" />
      </Docs>
    </Member>
    <Member MemberName="RouteCount">
      <MemberSignature Language="C#" Value="public virtual int RouteCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RouteCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getRouteCount", "()I", "GetGetRouteCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the number of <c><see cref="!:NoType:android/media/MediaRouter$RouteInfo;Href=../../../reference/android/media/MediaRouter.RouteInfo.html" /></c> currently known
 to this MediaRouter.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="RouteTypeLiveAudio">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaRouteType RouteTypeLiveAudio = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaRouteType RouteTypeLiveAudio = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ROUTE_TYPE_LIVE_AUDIO")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaRouteType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaRouteType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Route type flag for live audio.</summary>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="RouteTypeLiveVideo">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaRouteType RouteTypeLiveVideo = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaRouteType RouteTypeLiveVideo = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ROUTE_TYPE_LIVE_VIDEO")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaRouteType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaRouteType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Route type flag for live video.</summary>
        <remarks />
        <since version="Added in API level 17" />
        <altmember cref="T:Android.App.Presentation" />
      </Docs>
    </Member>
    <Member MemberName="RouteTypeUser">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaRouteType RouteTypeUser = 8388608;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaRouteType RouteTypeUser = (8388608)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ROUTE_TYPE_USER")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaRouteType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaRouteType</ReturnType>
      </ReturnValue>
      <MemberValue>8388608</MemberValue>
      <Docs>
        <summary>Route type flag for application-specific usage.</summary>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SelectRoute">
      <MemberSignature Language="C#" Value="public virtual void SelectRoute (Android.Media.MediaRouteType types, Android.Media.MediaRouter.RouteInfo route);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectRoute(valuetype Android.Media.MediaRouteType types, class Android.Media.MediaRouter/RouteInfo route) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("selectRoute", "(ILandroid/media/MediaRouter$RouteInfo;)V", "GetSelectRoute_ILandroid_media_MediaRouter_RouteInfo_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="Android.Media.MediaRouteType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="route" Type="Android.Media.MediaRouter+RouteInfo" />
      </Parameters>
      <Docs>
        <param name="types">type flags indicating which types this route should be used for.
              The route must support at least a subset.</param>
        <param name="route">Route to select</param>
        <summary>Select the specified route to use for output of the given media types.</summary>
        <remarks />
        <since version="Added in API level 16" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the given route is <c>null</c></exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
