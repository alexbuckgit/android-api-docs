<Type Name="MediaRecorder" FullName="Android.Media.MediaRecorder">
  <TypeSignature Language="C#" Value="public class MediaRecorder : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MediaRecorder extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/media/MediaRecorder", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Used to record audio and video.</summary>
    <remarks />
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaRecorder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MediaRecorder (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AudioSourceMax">
      <MemberSignature Language="C#" Value="public static int AudioSourceMax { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 AudioSourceMax" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAudioSourceMax", "()I", "GetGetAudioSourceMaxHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the maximum value for audio sources.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.MediaRecorder.ErrorEventArgs&gt; Error;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.MediaRecorder/ErrorEventArgs&gt; Error" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.MediaRecorder+ErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Info">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.MediaRecorder.InfoEventArgs&gt; Info;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.MediaRecorder/InfoEventArgs&gt; Info" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.MediaRecorder+InfoEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="MaxAmplitude">
      <MemberSignature Language="C#" Value="public virtual int MaxAmplitude { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxAmplitude" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMaxAmplitude", "()I", "GetGetMaxAmplitudeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the maximum absolute amplitude that was sampled since the last
 call to this method.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called before
 the audio source has been set.
</exception>
      </Docs>
    </Member>
    <Member MemberName="MediaErrorServerDied">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaRecorderError MediaErrorServerDied = 100;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaRecorderError MediaErrorServerDied = (100)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEDIA_ERROR_SERVER_DIED")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaRecorderError enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaRecorderError</ReturnType>
      </ReturnValue>
      <MemberValue>100</MemberValue>
      <Docs>
        <summary>Media server died.</summary>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="MediaRecorderErrorUnknown">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaRecorderError MediaRecorderErrorUnknown = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaRecorderError MediaRecorderErrorUnknown = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEDIA_RECORDER_ERROR_UNKNOWN")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaRecorderError enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaRecorderError</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Unspecified media recorder error.</summary>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public virtual void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Prepare() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("prepare", "()V", "GetPrepareHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Prepares the recorder to begin capturing and encoding data.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called after
 start() or before setOutputFormat().</exception>
        <exception cref="T:Java.IO.IOException">if prepare fails otherwise.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public virtual void Release ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Release() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("release", "()V", "GetReleaseHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases resources associated with this MediaRecorder object.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("reset", "()V", "GetResetHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restarts the MediaRecorder to its idle state.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetAudioChannels">
      <MemberSignature Language="C#" Value="public virtual void SetAudioChannels (int numChannels);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAudioChannels(int32 numChannels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAudioChannels", "(I)V", "GetSetAudioChannels_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numChannels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="numChannels">the number of audio channels. Usually it is either 1 (mono) or 2
 (stereo).
</param>
        <summary>Sets the number of audio channels for recording.</summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetAudioEncoder">
      <MemberSignature Language="C#" Value="public virtual void SetAudioEncoder (Android.Media.AudioEncoder audio_encoder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAudioEncoder(valuetype Android.Media.AudioEncoder audio_encoder) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAudioEncoder", "(I)V", "GetSetAudioEncoder_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audio_encoder" Type="Android.Media.AudioEncoder">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="audio_encoder">the audio encoder to use.</param>
        <summary>Sets the audio encoder to be used for recording.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called before
 setOutputFormat() or after prepare().</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAudioEncodingBitRate">
      <MemberSignature Language="C#" Value="public virtual void SetAudioEncodingBitRate (int bitRate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAudioEncodingBitRate(int32 bitRate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAudioEncodingBitRate", "(I)V", "GetSetAudioEncodingBitRate_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitRate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bitRate">the audio encoding bit rate in bits per second.
</param>
        <summary>Sets the audio encoding bit rate for recording.</summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetAudioSamplingRate">
      <MemberSignature Language="C#" Value="public virtual void SetAudioSamplingRate (int samplingRate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAudioSamplingRate(int32 samplingRate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAudioSamplingRate", "(I)V", "GetSetAudioSamplingRate_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="samplingRate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="samplingRate">the sampling rate for audio in samples per second.
</param>
        <summary>Sets the audio sampling rate for recording.</summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetAudioSource">
      <MemberSignature Language="C#" Value="public virtual void SetAudioSource (Android.Media.AudioSource audio_source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAudioSource(valuetype Android.Media.AudioSource audio_source) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAudioSource", "(I)V", "GetSetAudioSource_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audio_source" Type="Android.Media.AudioSource">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="audio_source">the audio source to use</param>
        <summary>Sets the audio source to be used for recording.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called after setOutputFormat()</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAuxiliaryOutputFile">
      <MemberSignature Language="C#" Value="public virtual void SetAuxiliaryOutputFile (Java.IO.FileDescriptor fd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAuxiliaryOutputFile(class Java.IO.FileDescriptor fd) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAuxiliaryOutputFile", "(Ljava/io/FileDescriptor;)V", "GetSetAuxiliaryOutputFile_Ljava_io_FileDescriptor_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
      </Parameters>
      <Docs>
        <param name="fd">To be added.</param>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetAuxiliaryOutputFile">
      <MemberSignature Language="C#" Value="public virtual void SetAuxiliaryOutputFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAuxiliaryOutputFile(string path) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAuxiliaryOutputFile", "(Ljava/lang/String;)V", "GetSetAuxiliaryOutputFile_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetCamera">
      <MemberSignature Language="C#" Value="public virtual void SetCamera (Android.Hardware.Camera c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCamera(class Android.Hardware.Camera c) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setCamera", "(Landroid/hardware/Camera;)V", "GetSetCamera_Landroid_hardware_Camera_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Android.Hardware.Camera" />
      </Parameters>
      <Docs>
        <param name="c">the Camera to use for recording</param>
        <summary>Sets a <c><see cref="T:Android.Hardware.Camera" /></c> to use for recording.</summary>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetCaptureRate">
      <MemberSignature Language="C#" Value="public virtual void SetCaptureRate (double fps);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCaptureRate(float64 fps) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setCaptureRate", "(D)V", "GetSetCaptureRate_DHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fps" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="fps">Rate at which frames should be captured in frames per second.
 The fps can go as low as desired. However the fastest fps will be limited by the hardware.
 For resolutions that can be captured by the video camera, the fastest fps can be computed using
 <c><see cref="!:NoType:android/hardware/Camera$Parameters;Href=../../../reference/android/hardware/Camera.Parameters.html#getPreviewFpsRange(int[])" /></c>. For higher
 resolutions the fastest fps may be more restrictive.
 Note that the recorder cannot guarantee that frames will be captured at the
 given rate due to camera/encoder limitations. However it tries to be as close as
 possible.
</param>
        <summary>Set video frame capture rate.</summary>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetLocation">
      <MemberSignature Language="C#" Value="public virtual void SetLocation (float latitude, float longitude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLocation(float32 latitude, float32 longitude) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLocation", "(FF)V", "GetSetLocation_FFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="latitude" Type="System.Single" />
        <Parameter Name="longitude" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="latitude">latitude in degrees. Its value must be in the
 range [-90, 90].</param>
        <param name="longitude">longitude in degrees. Its value must be in the
 range [-180, 180].</param>
        <summary>Set and store the geodata (latitude and longitude) in the output file.</summary>
        <remarks />
        <since version="Added in API level 14" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the given latitude or
 longitude is out of range.

</exception>
      </Docs>
    </Member>
    <Member MemberName="SetMaxDuration">
      <MemberSignature Language="C#" Value="public virtual void SetMaxDuration (int max_duration_ms);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMaxDuration(int32 max_duration_ms) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setMaxDuration", "(I)V", "GetSetMaxDuration_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="max_duration_ms" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="max_duration_ms">the maximum duration in ms (if zero or negative, disables the duration limit)

</param>
        <summary>Sets the maximum duration (in ms) of the recording session.</summary>
        <remarks />
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="SetMaxFileSize">
      <MemberSignature Language="C#" Value="public virtual void SetMaxFileSize (long max_filesize_bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMaxFileSize(int64 max_filesize_bytes) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setMaxFileSize", "(J)V", "GetSetMaxFileSize_JHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="max_filesize_bytes" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="max_filesize_bytes">the maximum filesize in bytes (if zero or negative, disables the limit)

</param>
        <summary>Sets the maximum filesize (in bytes) of the recording session.</summary>
        <remarks />
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="SetOnErrorListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnErrorListener (Android.Media.MediaRecorder.IOnErrorListener l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnErrorListener(class Android.Media.MediaRecorder/IOnErrorListener l) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnErrorListener", "(Landroid/media/MediaRecorder$OnErrorListener;)V", "GetSetOnErrorListener_Landroid_media_MediaRecorder_OnErrorListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Android.Media.MediaRecorder+IOnErrorListener" />
      </Parameters>
      <Docs>
        <param name="l">the callback that will be run
</param>
        <summary>Register a callback to be invoked when an error occurs while
 recording.</summary>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetOnInfoListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnInfoListener (Android.Media.MediaRecorder.IOnInfoListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnInfoListener(class Android.Media.MediaRecorder/IOnInfoListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnInfoListener", "(Landroid/media/MediaRecorder$OnInfoListener;)V", "GetSetOnInfoListener_Landroid_media_MediaRecorder_OnInfoListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.MediaRecorder+IOnInfoListener" />
      </Parameters>
      <Docs>
        <param name="listener">the callback that will be run
</param>
        <summary>Register a callback to be invoked when an informational event occurs while
 recording.</summary>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetOrientationHint">
      <MemberSignature Language="C#" Value="public virtual void SetOrientationHint (int degrees);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOrientationHint(int32 degrees) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOrientationHint", "(I)V", "GetSetOrientationHint_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="degrees" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="degrees">the angle to be rotated clockwise in degrees.
 The supported angles are 0, 90, 180, and 270 degrees.</param>
        <summary>Sets the orientation hint for output video playback.</summary>
        <remarks />
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the angle is not supported.

</exception>
      </Docs>
    </Member>
    <Member MemberName="SetOutputFile">
      <MemberSignature Language="C#" Value="public virtual void SetOutputFile (Java.IO.FileDescriptor fd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOutputFile(class Java.IO.FileDescriptor fd) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOutputFile", "(Ljava/io/FileDescriptor;)V", "GetSetOutputFile_Ljava_io_FileDescriptor_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
      </Parameters>
      <Docs>
        <param name="fd">an open file descriptor to be written into.</param>
        <summary tool="true">Pass in the file descriptor of the file to be written.</summary>
        <remarks />
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called before
 setOutputFormat() or after prepare()
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetOutputFile">
      <MemberSignature Language="C#" Value="public virtual void SetOutputFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOutputFile(string path) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOutputFile", "(Ljava/lang/String;)V", "GetSetOutputFile_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">The pathname to use.</param>
        <summary>Sets the path of the output file to be produced.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called before
 setOutputFormat() or after prepare()
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetOutputFormat">
      <MemberSignature Language="C#" Value="public virtual void SetOutputFormat (Android.Media.OutputFormat output_format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOutputFormat(valuetype Android.Media.OutputFormat output_format) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOutputFormat", "(I)V", "GetSetOutputFormat_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output_format" Type="Android.Media.OutputFormat">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="output_format">the output format to use. The output format
 needs to be specified before setting recording-parameters or encoders.</param>
        <summary>Sets the format of the output file produced during recording.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called after prepare() or before
 setAudioSource()/setVideoSource().</exception>
      </Docs>
    </Member>
    <Member MemberName="SetPreviewDisplay">
      <MemberSignature Language="C#" Value="public virtual void SetPreviewDisplay (Android.Views.Surface sv);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPreviewDisplay(class Android.Views.Surface sv) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPreviewDisplay", "(Landroid/view/Surface;)V", "GetSetPreviewDisplay_Landroid_view_Surface_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sv" Type="Android.Views.Surface" />
      </Parameters>
      <Docs>
        <param name="sv">the Surface to use for the preview</param>
        <summary>Sets a Surface to show a preview of recorded media (video).</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Hardware.Camera.SetPreviewDisplay(Android.Views.ISurfaceHolder)" />
      </Docs>
    </Member>
    <Member MemberName="SetProfile">
      <MemberSignature Language="C#" Value="public virtual void SetProfile (Android.Media.CamcorderProfile profile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetProfile(class Android.Media.CamcorderProfile profile) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setProfile", "(Landroid/media/CamcorderProfile;)V", "GetSetProfile_Landroid_media_CamcorderProfile_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="profile" Type="Android.Media.CamcorderProfile" />
      </Parameters>
      <Docs>
        <param name="profile">the CamcorderProfile to use</param>
        <summary>Uses the settings from a CamcorderProfile object for recording.</summary>
        <remarks />
        <since version="Added in API level 8" />
        <altmember cref="T:Android.Media.CamcorderProfile" />
      </Docs>
    </Member>
    <Member MemberName="SetVideoEncoder">
      <MemberSignature Language="C#" Value="public virtual void SetVideoEncoder (Android.Media.VideoEncoder video_encoder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVideoEncoder(valuetype Android.Media.VideoEncoder video_encoder) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setVideoEncoder", "(I)V", "GetSetVideoEncoder_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="video_encoder" Type="Android.Media.VideoEncoder">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="video_encoder">the video encoder to use.</param>
        <summary>Sets the video encoder to be used for recording.</summary>
        <remarks />
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called before
 setOutputFormat() or after prepare()</exception>
      </Docs>
    </Member>
    <Member MemberName="SetVideoEncodingBitRate">
      <MemberSignature Language="C#" Value="public virtual void SetVideoEncodingBitRate (int bitRate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVideoEncodingBitRate(int32 bitRate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setVideoEncodingBitRate", "(I)V", "GetSetVideoEncodingBitRate_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitRate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bitRate">the video encoding bit rate in bits per second.
</param>
        <summary>Sets the video encoding bit rate for recording.</summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetVideoFrameRate">
      <MemberSignature Language="C#" Value="public virtual void SetVideoFrameRate (int rate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVideoFrameRate(int32 rate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setVideoFrameRate", "(I)V", "GetSetVideoFrameRate_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rate">the number of frames per second of video to capture</param>
        <summary>Sets the frame rate of the video to be captured.</summary>
        <remarks />
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called after
 prepare() or before setOutputFormat().

 NOTE: On some devices that have auto-frame rate, this sets the
 maximum frame rate, not a constant frame rate. Actual frame rate
 will vary according to lighting conditions.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetVideoSize">
      <MemberSignature Language="C#" Value="public virtual void SetVideoSize (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVideoSize(int32 width, int32 height) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setVideoSize", "(II)V", "GetSetVideoSize_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">the width of the video to be captured</param>
        <param name="height">the height of the video to be captured</param>
        <summary>Sets the width and height of the video to be captured.</summary>
        <remarks />
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called after
 prepare() or before setOutputFormat()
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetVideoSource">
      <MemberSignature Language="C#" Value="public virtual void SetVideoSource (Android.Media.VideoSource video_source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVideoSource(valuetype Android.Media.VideoSource video_source) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setVideoSource", "(I)V", "GetSetVideoSource_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="video_source" Type="Android.Media.VideoSource">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="video_source">the video source to use</param>
        <summary>Sets the video source to be used for recording.</summary>
        <remarks />
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called after setOutputFormat()</exception>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public virtual void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Start() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("start", "()V", "GetStartHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Begins capturing and encoding data to the file specified with
 setOutputFile().</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called before
 prepare().
</exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public virtual void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Stop() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("stop", "()V", "GetStopHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stops recording.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called before start()
</exception>
      </Docs>
    </Member>
    <Member MemberName="Surface">
      <MemberSignature Language="C#" Value="public virtual Android.Views.Surface Surface { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.Surface Surface" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSurface", "()Landroid/view/Surface;", "GetGetSurfaceHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Surface</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the surface to record from when using SURFACE video source.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 21" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called before <c><see cref="M:Android.Media.MediaRecorder.Prepare" /></c>, after
 <c><see cref="M:Android.Media.MediaRecorder.Stop" /></c>, or is called when VideoSource is not set to SURFACE.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
