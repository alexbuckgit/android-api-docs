<Type Name="ToneGenerator" FullName="Android.Media.ToneGenerator">
  <TypeSignature Language="C#" Value="public class ToneGenerator : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ToneGenerator extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/media/ToneGenerator", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This class provides methods to play DTMF tones (ITU-T Recommendation Q.23),
 call supervisory tones (3GPP TS 22.</summary>
    <remarks><para tool="javadoc-to-mdoc">This class provides methods to play DTMF tones (ITU-T Recommendation Q.23),
 call supervisory tones (3GPP TS 22.001, CEPT) and proprietary tones (3GPP TS 31.111).
 Depending on call state and routing options, tones are mixed to the downlink audio
 or output to the speaker phone or headset.
 This API is not for generating tones over the uplink audio path.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/media/ToneGenerator.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToneGenerator (Android.Media.Stream streamType, Android.Media.Volume volume);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Android.Media.Stream streamType, valuetype Android.Media.Volume volume) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(II)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="volume" Type="Android.Media.Volume">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="streamType">To be added.</param>
        <param name="volume">To be added.</param>
        <summary>ToneGenerator class contructor specifying output stream type and volume.</summary>
        <remarks><para tool="javadoc-to-mdoc">ToneGenerator class contructor specifying output stream type and volume.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/media/ToneGenerator.html#ToneGenerator(int, int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ToneGenerator (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AudioSessionId">
      <MemberSignature Language="C#" Value="public int AudioSessionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AudioSessionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAudioSessionId", "()I", "GetGetAudioSessionIdHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the audio session ID.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns the audio session ID.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/media/ToneGenerator.html#getAudioSessionId()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public virtual void Release ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Release() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("release", "()V", "GetReleaseHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases resources associated with this ToneGenerator object.</summary>
        <remarks><para tool="javadoc-to-mdoc">Releases resources associated with this ToneGenerator object. It is good
 practice to call this method when you're done using the ToneGenerator.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/media/ToneGenerator.html#release()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StartTone">
      <MemberSignature Language="C#" Value="public virtual bool StartTone (Android.Media.Tone toneType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool StartTone(valuetype Android.Media.Tone toneType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startTone", "(I)Z", "GetStartTone_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toneType" Type="Android.Media.Tone">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="toneType">The type of tone generated chosen from the following list:
 <list type="bullet"><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_DTMF_0" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_DTMF_1" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_DTMF_2" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_DTMF_3" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_DTMF_4" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_DTMF_5" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_DTMF_6" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_DTMF_7" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_DTMF_8" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_DTMF_9" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_DTMF_A" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_DTMF_B" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_DTMF_C" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_DTMF_D" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_SUP_DIAL" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_SUP_BUSY" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_SUP_CONGESTION" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_SUP_RADIO_ACK" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_SUP_RADIO_NOTAVAIL" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_SUP_ERROR" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_SUP_CALL_WAITING" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_SUP_RINGTONE" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_PROP_BEEP" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_PROP_ACK" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_PROP_NACK" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_PROP_PROMPT" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_PROP_BEEP2" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_SUP_INTERCEPT" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_SUP_INTERCEPT_ABBREV" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_SUP_CONGESTION_ABBREV" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_SUP_CONFIRM" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_SUP_PIP" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_DIAL_TONE_LITE" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_NETWORK_USA_RINGBACK" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_INTERCEPT" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_ABBR_INTERCEPT" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_REORDER" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_ABBR_REORDER" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_NETWORK_BUSY" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_CONFIRM" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_ANSWER" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_NETWORK_CALLWAITING" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_PIP" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_CALL_SIGNAL_ISDN_NORMAL" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_CALL_SIGNAL_ISDN_INTERGROUP" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_CALL_SIGNAL_ISDN_SP_PRI" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_CALL_SIGNAL_ISDN_PAT3" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_CALL_SIGNAL_ISDN_PING_RING" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_CALL_SIGNAL_ISDN_PAT5" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_CALL_SIGNAL_ISDN_PAT6" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_CALL_SIGNAL_ISDN_PAT7" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_HIGH_L" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_MED_L" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_LOW_L" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_HIGH_SS" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_MED_SS" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_LOW_SS" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_HIGH_SSL" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_MED_SSL" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_LOW_SSL" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_HIGH_SS_2" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_MED_SS_2" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_LOW_SS_2" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_HIGH_SLS" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_MED_SLS" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_LOW_SLS" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_HIGH_S_X4" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_MED_S_X4" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_LOW_S_X4" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_HIGH_PBX_L" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_MED_PBX_L" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_LOW_PBX_L" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_HIGH_PBX_SS" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_MED_PBX_SS" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_LOW_PBX_SS" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_HIGH_PBX_SSL" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_MED_PBX_SSL" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_LOW_PBX_SSL" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_HIGH_PBX_SLS" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_MED_PBX_SLS" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_LOW_PBX_SLS" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_HIGH_PBX_S_X4" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_MED_PBX_S_X4" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_LOW_PBX_S_X4" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_ALERT_NETWORK_LITE" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_ALERT_AUTOREDIAL_LITE" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_ONE_MIN_BEEP" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_KEYPAD_VOLUME_KEY_LITE" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_PRESSHOLDKEY_LITE" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_ALERT_INCALL_LITE" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_EMERGENCY_RINGBACK" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_ALERT_CALL_GUARD" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_SOFT_ERROR_LITE" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_CALLDROP_LITE" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_NETWORK_BUSY_ONE_SHOT" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_ABBR_ALERT" /></c><item><term><c><see cref="!:Android.Media.ToneGenerator.TONE_CDMA_SIGNAL_OFF" /></c></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></term></item></list></param>
        <summary>This method starts the playback of a tone of the specified type.
 only one tone can play at a time: if a tone is playing while this method is called,
 this tone is stopped and replaced by the one requested.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">This method starts the playback of a tone of the specified type.
 only one tone can play at a time: if a tone is playing while this method is called,
 this tone is stopped and replaced by the one requested.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/media/ToneGenerator.html#startTone(int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <altmember cref="C:Android.Media.ToneGenerator(Android.Media.Stream, Android.Media.Volume)" />
      </Docs>
    </Member>
    <Member MemberName="StartTone">
      <MemberSignature Language="C#" Value="public virtual bool StartTone (Android.Media.Tone toneType, int durationMs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool StartTone(valuetype Android.Media.Tone toneType, int32 durationMs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startTone", "(II)Z", "GetStartTone_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toneType" Type="Android.Media.Tone">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="durationMs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="toneType">The type of tone generated @see <c><see cref="M:Android.Media.ToneGenerator.StartTone(Android.Media.Tone)" /></c>.</param>
        <param name="durationMs">The tone duration in milliseconds. If the tone is limited in time by definition,
 the actual duration will be the minimum of durationMs and the defined tone duration. Setting durationMs to -1,
 is equivalent to calling <c><see cref="M:Android.Media.ToneGenerator.StartTone(Android.Media.Tone)" /></c>.
</param>
        <summary>This method starts the playback of a tone of the specified type for the specified duration.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">This method starts the playback of a tone of the specified type for the specified duration.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/media/ToneGenerator.html#startTone(int, int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="StopTone">
      <MemberSignature Language="C#" Value="public virtual void StopTone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopTone() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("stopTone", "()V", "GetStopToneHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This method stops the tone currently playing playback.</summary>
        <remarks><para tool="javadoc-to-mdoc">This method stops the tone currently playing playback.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/media/ToneGenerator.html#stopTone()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <altmember cref="C:Android.Media.ToneGenerator(Android.Media.Stream, Android.Media.Volume)" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
