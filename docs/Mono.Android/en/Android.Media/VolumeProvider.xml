<Type Name="VolumeProvider" FullName="Android.Media.VolumeProvider">
  <TypeSignature Language="C#" Value="public abstract class VolumeProvider : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit VolumeProvider extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/media/VolumeProvider", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Handles requests to adjust or set the volume on a session.</summary>
    <remarks><para tool="javadoc-to-mdoc">Handles requests to adjust or set the volume on a session. This is also used
 to push volume updates back to the session. The provider must call
 <c><see cref="P:Android.Media.VolumeProvider.CurrentVolume" /></c> each time the volume being provided changes.
 </para><para tool="javadoc-to-mdoc">
 You can set a volume provider on a session by calling
 <c><see cref="M:Android.Media.Session.MediaSession.SetPlaybackToRemote(Android.Media.VolumeProvider)" /></c>.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/media/VolumeProvider.html" target="_blank">[Android Documentation]</a></format></para></remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected VolumeProvider (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentVolume">
      <MemberSignature Language="C#" Value="public int CurrentVolume { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentVolume" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCurrentVolume", "()I", "GetGetCurrentVolumeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setCurrentVolume", "(I)V", "GetSetCurrentVolume_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current volume.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/android/media/VolumeProvider.html#getCurrentVolume()" target="_blank">[Android Documentation]</a><br /></format>Gets the current volume. This will be the last value set by
 <c><see cref="P:Android.Media.VolumeProvider.CurrentVolume" /></c>.</para><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/android/media/VolumeProvider.html#setCurrentVolume(int)" target="_blank">[Android Documentation]</a><br /></format>Notify the system that the current volume has been changed. This must be
 called every time the volume changes to ensure it is displayed properly.</para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxVolume">
      <MemberSignature Language="C#" Value="public int MaxVolume { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxVolume" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMaxVolume", "()I", "GetGetMaxVolumeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the maximum volume this provider allows.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Get the maximum volume this provider allows.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/media/VolumeProvider.html#getMaxVolume()" target="_blank">[Android Documentation]</a></format></para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAdjustVolume">
      <MemberSignature Language="C#" Value="public virtual void OnAdjustVolume (Android.Media.Adjust direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnAdjustVolume(valuetype Android.Media.Adjust direction) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onAdjustVolume", "(I)V", "GetOnAdjustVolume_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="Android.Media.Adjust">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="direction">The direction to change the volume in.
</param>
        <summary>Override to handle requests to adjust the volume of the current output.</summary>
        <remarks><para tool="javadoc-to-mdoc">Override to handle requests to adjust the volume of the current output.
 Direction will be one of <c><see cref="!:Android.Media.AudioManager.ADJUST_LOWER" /></c>,
 <c><see cref="!:Android.Media.AudioManager.ADJUST_RAISE" /></c>, <c><see cref="!:Android.Media.AudioManager.ADJUST_SAME" /></c>.
 After the volume has been modified <c><see cref="P:Android.Media.VolumeProvider.CurrentVolume" /></c> must be
 called to notify the system.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/media/VolumeProvider.html#onAdjustVolume(int)" target="_blank">[Android Documentation]</a></format></para></remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSetVolumeTo">
      <MemberSignature Language="C#" Value="public virtual void OnSetVolumeTo (int volume);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSetVolumeTo(int32 volume) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onSetVolumeTo", "(I)V", "GetOnSetVolumeTo_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="volume" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="volume">The volume to set the output to.
</param>
        <summary>Override to handle requests to set the volume of the current output.</summary>
        <remarks><para tool="javadoc-to-mdoc">Override to handle requests to set the volume of the current output.
 After the volume has been modified <c><see cref="P:Android.Media.VolumeProvider.CurrentVolume" /></c> must be
 called to notify the system.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/media/VolumeProvider.html#onSetVolumeTo(int)" target="_blank">[Android Documentation]</a></format></para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
