<Type Name="MediaRouter+VolumeCallback" FullName="Android.Media.MediaRouter+VolumeCallback">
  <TypeSignature Language="C#" Value="public abstract class MediaRouter.VolumeCallback : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi abstract beforefieldinit MediaRouter/VolumeCallback extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/media/MediaRouter$VolumeCallback", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface for receiving events about volume changes.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Interface for receiving events about volume changes.
 All methods of this interface will be called from the application's main thread.

 </para>
      <para tool="javadoc-to-mdoc">A VolumeCallback will only receive events relevant to routes that the callback
 was registered for.<format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="M:Android.Media.MediaRouter.UserRouteInfo.SetVolumeCallback(Android.Media.MediaRouter.VolumeCallback)" /></c></term></item></list></para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/media/MediaRouter.VolumeCallback.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 16" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VolumeCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaRouter.VolumeCallback.html#MediaRouter.VolumeCallback()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected VolumeCallback (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVolumeSetRequest">
      <MemberSignature Language="C#" Value="public abstract void OnVolumeSetRequest (Android.Media.MediaRouter.RouteInfo info, int volume);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnVolumeSetRequest(class Android.Media.MediaRouter/RouteInfo info, int32 volume) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onVolumeSetRequest", "(Landroid/media/MediaRouter$RouteInfo;I)V", "GetOnVolumeSetRequest_Landroid_media_MediaRouter_RouteInfo_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="Android.Media.MediaRouter+RouteInfo" />
        <Parameter Name="volume" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="info">the route affected by this event</param>
        <param name="volume">an integer indicating the new volume value that should be used, always
     between 0 and the value set by <c><see cref="M:Android.Media.MediaRouter.UserRouteInfo.SetVolumeMax(System.Int32)" /></c>.
</param>
        <summary>Called when the volume for the route should be set to the given value</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when the volume for the route should be set to the given value</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaRouter.VolumeCallback.html#onVolumeSetRequest(android.media.MediaRouter.RouteInfo, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="OnVolumeUpdateRequest">
      <MemberSignature Language="C#" Value="public abstract void OnVolumeUpdateRequest (Android.Media.MediaRouter.RouteInfo info, int direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnVolumeUpdateRequest(class Android.Media.MediaRouter/RouteInfo info, int32 direction) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onVolumeUpdateRequest", "(Landroid/media/MediaRouter$RouteInfo;I)V", "GetOnVolumeUpdateRequest_Landroid_media_MediaRouter_RouteInfo_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="Android.Media.MediaRouter+RouteInfo" />
        <Parameter Name="direction" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="info">the route affected by this event</param>
        <param name="direction">an integer indicating whether the volume is to be increased
     (positive value) or decreased (negative value).
     For bundled changes, the absolute value indicates the number of changes
     in the same direction, e.g. +3 corresponds to three "volume up" changes.
</param>
        <summary>Called when the volume for the route should be increased or decreased.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when the volume for the route should be increased or decreased.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaRouter.VolumeCallback.html#onVolumeUpdateRequest(android.media.MediaRouter.RouteInfo, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>