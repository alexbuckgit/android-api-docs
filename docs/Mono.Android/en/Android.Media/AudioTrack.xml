<Type Name="AudioTrack" FullName="Android.Media.AudioTrack">
  <TypeSignature Language="C#" Value="public class AudioTrack : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AudioTrack extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/media/AudioTrack", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="3">
    <summary>The AudioTrack class manages and plays a single audio resource for Java applications.</summary>
    <remarks />
    <since version="Added in API level 3" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AudioTrack (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AudioTrack (Android.Media.AudioAttributes attributes, Android.Media.AudioFormat format, int bufferSizeInBytes, Android.Media.AudioTrackMode mode, int sessionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Media.AudioAttributes attributes, class Android.Media.AudioFormat format, int32 bufferSizeInBytes, valuetype Android.Media.AudioTrackMode mode, int32 sessionId) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/media/AudioAttributes;Landroid/media/AudioFormat;III)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="attributes" Type="Android.Media.AudioAttributes" />
        <Parameter Name="format" Type="Android.Media.AudioFormat" />
        <Parameter Name="bufferSizeInBytes" Type="System.Int32" />
        <Parameter Name="mode" Type="Android.Media.AudioTrackMode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="sessionId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="attributes">To be added.</param>
        <param name="format">To be added.</param>
        <param name="bufferSizeInBytes">To be added.</param>
        <param name="mode">To be added.</param>
        <param name="sessionId">To be added.</param>
        <summary>Class constructor with <c><see cref="T:Android.Media.AudioAttributes" /></c> and <c><see cref="T:Android.Media.AudioFormat" /></c>.</summary>
        <remarks />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AudioTrack (Android.Media.Stream streamType, int sampleRateInHz, Android.Media.ChannelConfiguration channelConfig, Android.Media.Encoding audioFormat, int bufferSizeInBytes, Android.Media.AudioTrackMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Android.Media.Stream streamType, int32 sampleRateInHz, valuetype Android.Media.ChannelConfiguration channelConfig, valuetype Android.Media.Encoding audioFormat, int32 bufferSizeInBytes, valuetype Android.Media.AudioTrackMode mode) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("ChannelConfiguration is obsolete. Please use another overload with ChannelOut instead")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="sampleRateInHz" Type="System.Int32" />
        <Parameter Name="channelConfig" Type="Android.Media.ChannelConfiguration">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="audioFormat" Type="Android.Media.Encoding">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="bufferSizeInBytes" Type="System.Int32" />
        <Parameter Name="mode" Type="Android.Media.AudioTrackMode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="streamType">To be added.</param>
        <param name="sampleRateInHz">To be added.</param>
        <param name="channelConfig">To be added.</param>
        <param name="audioFormat">To be added.</param>
        <param name="bufferSizeInBytes">To be added.</param>
        <param name="mode">To be added.</param>
        <summary>Class constructor.</summary>
        <remarks />
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AudioTrack (Android.Media.Stream streamType, int sampleRateInHz, Android.Media.ChannelOut channelConfig, Android.Media.Encoding audioFormat, int bufferSizeInBytes, Android.Media.AudioTrackMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Android.Media.Stream streamType, int32 sampleRateInHz, valuetype Android.Media.ChannelOut channelConfig, valuetype Android.Media.Encoding audioFormat, int32 bufferSizeInBytes, valuetype Android.Media.AudioTrackMode mode) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(IIIIII)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="sampleRateInHz" Type="System.Int32" />
        <Parameter Name="channelConfig" Type="Android.Media.ChannelOut">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="audioFormat" Type="Android.Media.Encoding">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="bufferSizeInBytes" Type="System.Int32" />
        <Parameter Name="mode" Type="Android.Media.AudioTrackMode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="streamType">To be added.</param>
        <param name="sampleRateInHz">To be added.</param>
        <param name="channelConfig">To be added.</param>
        <param name="audioFormat">To be added.</param>
        <param name="bufferSizeInBytes">To be added.</param>
        <param name="mode">To be added.</param>
        <summary>Class constructor.</summary>
        <remarks />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AudioTrack (Android.Media.Stream streamType, int sampleRateInHz, Android.Media.ChannelConfiguration channelConfig, Android.Media.Encoding audioFormat, int bufferSizeInBytes, Android.Media.AudioTrackMode mode, int sessionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Android.Media.Stream streamType, int32 sampleRateInHz, valuetype Android.Media.ChannelConfiguration channelConfig, valuetype Android.Media.Encoding audioFormat, int32 bufferSizeInBytes, valuetype Android.Media.AudioTrackMode mode, int32 sessionId) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("ChannelConfiguration is obsolete. Please use another overload with ChannelOut instead")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="sampleRateInHz" Type="System.Int32" />
        <Parameter Name="channelConfig" Type="Android.Media.ChannelConfiguration">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="audioFormat" Type="Android.Media.Encoding">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="bufferSizeInBytes" Type="System.Int32" />
        <Parameter Name="mode" Type="Android.Media.AudioTrackMode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="sessionId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="streamType">To be added.</param>
        <param name="sampleRateInHz">To be added.</param>
        <param name="channelConfig">To be added.</param>
        <param name="audioFormat">To be added.</param>
        <param name="bufferSizeInBytes">To be added.</param>
        <param name="mode">To be added.</param>
        <param name="sessionId">To be added.</param>
        <summary>Class constructor with audio session.</summary>
        <remarks />
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AudioTrack (Android.Media.Stream streamType, int sampleRateInHz, Android.Media.ChannelOut channelConfig, Android.Media.Encoding audioFormat, int bufferSizeInBytes, Android.Media.AudioTrackMode mode, int sessionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Android.Media.Stream streamType, int32 sampleRateInHz, valuetype Android.Media.ChannelOut channelConfig, valuetype Android.Media.Encoding audioFormat, int32 bufferSizeInBytes, valuetype Android.Media.AudioTrackMode mode, int32 sessionId) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(IIIIIII)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="sampleRateInHz" Type="System.Int32" />
        <Parameter Name="channelConfig" Type="Android.Media.ChannelOut">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="audioFormat" Type="Android.Media.Encoding">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="bufferSizeInBytes" Type="System.Int32" />
        <Parameter Name="mode" Type="Android.Media.AudioTrackMode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="sessionId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="streamType">To be added.</param>
        <param name="sampleRateInHz">To be added.</param>
        <param name="channelConfig">To be added.</param>
        <param name="audioFormat">To be added.</param>
        <param name="bufferSizeInBytes">To be added.</param>
        <param name="mode">To be added.</param>
        <param name="sessionId">To be added.</param>
        <summary>Class constructor with audio session.</summary>
        <remarks />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="AttachAuxEffect">
      <MemberSignature Language="C#" Value="public virtual Android.Media.TrackStatus AttachAuxEffect (int effectId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.TrackStatus AttachAuxEffect(int32 effectId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("attachAuxEffect", "(I)I", "GetAttachAuxEffect_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.TrackStatus</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="effectId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="effectId">system wide unique id of the effect to attach</param>
        <summary>Attaches an auxiliary effect to the audio track.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 9" />
        <altmember cref="M:Android.Media.AudioTrack.SetAuxEffectSendLevel(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="AudioFormat">
      <MemberSignature Language="C#" Value="public virtual Android.Media.Encoding AudioFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.Encoding AudioFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAudioFormat", "()I", "GetGetAudioFormatHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the configured audio data encoding.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="AudioSessionId">
      <MemberSignature Language="C#" Value="public virtual int AudioSessionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AudioSessionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAudioSessionId", "()I", "GetGetAudioSessionIdHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the audio session ID.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="ChannelConfiguration">
      <MemberSignature Language="C#" Value="public virtual Android.Media.ChannelOut ChannelConfiguration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.ChannelOut ChannelConfiguration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getChannelConfiguration", "()I", "GetGetChannelConfigurationHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.ChannelOut</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the configured channel position mask.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ChannelCount">
      <MemberSignature Language="C#" Value="public virtual int ChannelCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChannelCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getChannelCount", "()I", "GetGetChannelCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the configured number of channels.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public const Android.Media.TrackStatus Error = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.TrackStatus Error = (-1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ERROR")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.TrackStatus enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.TrackStatus</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>Denotes a generic operation failure.</summary>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ErrorBadValue">
      <MemberSignature Language="C#" Value="public const Android.Media.TrackStatus ErrorBadValue = -2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.TrackStatus ErrorBadValue = (-2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ERROR_BAD_VALUE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.TrackStatus enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.TrackStatus</ReturnType>
      </ReturnValue>
      <MemberValue>-2</MemberValue>
      <Docs>
        <summary>Denotes a failure due to the use of an invalid value.</summary>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ErrorInvalidOperation">
      <MemberSignature Language="C#" Value="public const Android.Media.TrackStatus ErrorInvalidOperation = -3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.TrackStatus ErrorInvalidOperation = (-3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ERROR_INVALID_OPERATION")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.TrackStatus enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.TrackStatus</ReturnType>
      </ReturnValue>
      <MemberValue>-3</MemberValue>
      <Docs>
        <summary>Denotes a failure due to the improper use of a method.</summary>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public virtual void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("flush", "()V", "GetFlushHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Flushes the audio data currently queued for playback.</summary>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="GetMinBufferSize">
      <MemberSignature Language="C#" Value="public static int GetMinBufferSize (int sampleRateInHz, Android.Media.ChannelOut channelConfig, Android.Media.Encoding audioFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetMinBufferSize(int32 sampleRateInHz, valuetype Android.Media.ChannelOut channelConfig, valuetype Android.Media.Encoding audioFormat) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getMinBufferSize", "(III)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sampleRateInHz" Type="System.Int32" />
        <Parameter Name="channelConfig" Type="Android.Media.ChannelOut">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="audioFormat" Type="Android.Media.Encoding">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="sampleRateInHz">the source sample rate expressed in Hz.</param>
        <param name="channelConfig">describes the configuration of the audio channels.
   See <c><see cref="!:Android.Media.AudioFormat.CHANNEL_OUT_MONO" /></c> and
   <c><see cref="!:Android.Media.AudioFormat.CHANNEL_OUT_STEREO" /></c></param>
        <param name="audioFormat">the format in which the audio data is represented.
   See <c><see cref="!:Android.Media.AudioFormat.ENCODING_PCM_16BIT" /></c> and
   <c><see cref="!:Android.Media.AudioFormat.ENCODING_PCM_8BIT" /></c>,
   and <c><see cref="!:Android.Media.AudioFormat.ENCODING_PCM_FLOAT" /></c>.</param>
        <summary>Returns the minimum buffer size required for the successful creation of an AudioTrack
 object to be created in the <c><see cref="!:Android.Media.AudioTrack.MODE_STREAM" /></c> mode.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="GetNativeOutputSampleRate">
      <MemberSignature Language="C#" Value="public static int GetNativeOutputSampleRate (Android.Media.Stream streamType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetNativeOutputSampleRate(valuetype Android.Media.Stream streamType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getNativeOutputSampleRate", "(I)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="streamType">To be added.</param>
        <summary>Returns the output sample rate in Hz for the specified stream type.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="GetTimestamp">
      <MemberSignature Language="C#" Value="public virtual bool GetTimestamp (Android.Media.AudioTimestamp timestamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetTimestamp(class Android.Media.AudioTimestamp timestamp) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getTimestamp", "(Landroid/media/AudioTimestamp;)Z", "GetGetTimestamp_Landroid_media_AudioTimestamp_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timestamp" Type="Android.Media.AudioTimestamp" />
      </Parameters>
      <Docs>
        <param name="timestamp">a reference to a non-null AudioTimestamp instance allocated
        and owned by caller.</param>
        <summary>Poll for a timestamp on demand.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="MarkerReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.AudioTrack.MarkerReachedEventArgs&gt; MarkerReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.AudioTrack/MarkerReachedEventArgs&gt; MarkerReached" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.AudioTrack+MarkerReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="MaxVolume">
      <MemberSignature Language="C#" Value="public static float MaxVolume { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float32 MaxVolume" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMaxVolume", "()F", "GetGetMaxVolumeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the maximum gain value, which is greater than or equal to 1.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="MinVolume">
      <MemberSignature Language="C#" Value="public static float MinVolume { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float32 MinVolume" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMinVolume", "()F", "GetGetMinVolumeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the minimum gain value, which is the constant 0.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="NativeFrameCount">
      <MemberSignature Language="C#" Value="protected virtual int NativeFrameCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NativeFrameCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getNativeFrameCount", "()I", "GetGetNativeFrameCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the frame count of the native <c>AudioTrack</c> buffer.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 3" />
        <exception cref="!:NoType:IllegalStateException" />
      </Docs>
    </Member>
    <Member MemberName="NotificationMarkerPosition">
      <MemberSignature Language="C#" Value="public virtual int NotificationMarkerPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NotificationMarkerPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getNotificationMarkerPosition", "()I", "GetGetNotificationMarkerPositionHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns marker position expressed in frames.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public virtual void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Pause() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("pause", "()V", "GetPauseHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pauses the playback of the audio data.</summary>
        <remarks />
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalStateException" />
      </Docs>
    </Member>
    <Member MemberName="PeriodicNotification">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.AudioTrack.PeriodicNotificationEventArgs&gt; PeriodicNotification;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.AudioTrack/PeriodicNotificationEventArgs&gt; PeriodicNotification" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.AudioTrack+PeriodicNotificationEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Play">
      <MemberSignature Language="C#" Value="public virtual void Play ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Play() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("play", "()V", "GetPlayHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Starts playing an AudioTrack.</summary>
        <remarks />
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalStateException">if the track isn't properly initialized
</exception>
      </Docs>
    </Member>
    <Member MemberName="PlaybackHeadPosition">
      <MemberSignature Language="C#" Value="public virtual int PlaybackHeadPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PlaybackHeadPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPlaybackHeadPosition", "()I", "GetGetPlaybackHeadPositionHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the playback head position expressed in frames.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="PlaybackRate">
      <MemberSignature Language="C#" Value="public virtual int PlaybackRate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PlaybackRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPlaybackRate", "()I", "GetGetPlaybackRateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current playback sample rate rate in Hz.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="PlayState">
      <MemberSignature Language="C#" Value="public virtual Android.Media.PlayState PlayState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.PlayState PlayState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPlayState", "()I", "GetGetPlayStateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.PlayState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the playback state of the AudioTrack instance.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="PositionNotificationPeriod">
      <MemberSignature Language="C#" Value="public virtual int PositionNotificationPeriod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PositionNotificationPeriod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPositionNotificationPeriod", "()I", "GetGetPositionNotificationPeriodHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the notification update period expressed in frames.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public virtual void Release ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Release() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("release", "()V", "GetReleaseHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the native AudioTrack resources.</summary>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ReloadStaticData">
      <MemberSignature Language="C#" Value="public virtual Android.Media.TrackStatus ReloadStaticData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.TrackStatus ReloadStaticData() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("reloadStaticData", "()I", "GetReloadStaticDataHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.TrackStatus</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sets the playback head position within the static buffer to zero,
 that is it rewinds to start of static buffer.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SampleRate">
      <MemberSignature Language="C#" Value="public virtual int SampleRate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SampleRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSampleRate", "()I", "GetGetSampleRateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the configured audio data sample rate in Hz
</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetAuxEffectSendLevel">
      <MemberSignature Language="C#" Value="public virtual Android.Media.TrackStatus SetAuxEffectSendLevel (float level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.TrackStatus SetAuxEffectSendLevel(float32 level) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAuxEffectSendLevel", "(F)I", "GetSetAuxEffectSendLevel_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.TrackStatus</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="level">linear send level</param>
        <summary>Sets the send level of the audio track to the attached auxiliary effect
 <c><see cref="M:Android.Media.AudioTrack.AttachAuxEffect(System.Int32)" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="SetLoopPoints">
      <MemberSignature Language="C#" Value="public virtual Android.Media.TrackStatus SetLoopPoints (int startInFrames, int endInFrames, int loopCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.TrackStatus SetLoopPoints(int32 startInFrames, int32 endInFrames, int32 loopCount) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLoopPoints", "(III)I", "GetSetLoopPoints_IIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.TrackStatus</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startInFrames" Type="System.Int32" />
        <Parameter Name="endInFrames" Type="System.Int32" />
        <Parameter Name="loopCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startInFrames">loop start marker expressed in frames.
 Zero corresponds to start of buffer.
 The start marker must not be greater than or equal to the buffer size in frames, or negative.</param>
        <param name="endInFrames">loop end marker expressed in frames.
 The total buffer size in frames corresponds to end of buffer.
 The end marker must not be greater than the buffer size in frames.
 For looping, the end marker must not be less than or equal to the start marker,
 but to disable looping
 it is permitted for start marker, end marker, and loop count to all be 0.
 If any input parameters are out of range, this method returns <c><see cref="F:Android.Media.AudioTrack.ErrorBadValue" /></c>.
 If the loop period (endInFrames - startInFrames) is too small for the implementation to
 support,
 <c><see cref="F:Android.Media.AudioTrack.ErrorBadValue" /></c> is returned.
 The loop range is the interval [startInFrames, endInFrames).
 <format type="text/html"><br /></format>
 As of <c><see cref="!:NoType:android/os/Build$VERSION_CODES;Href=../../../reference/android/os/Build.VERSION_CODES.html#M" /></c>, the position is left unchanged,
 unless it is greater than or equal to the loop end marker, in which case
 it is forced to the loop start marker.
 For earlier API levels, the effect on position is unspecified.</param>
        <param name="loopCount">the number of times the loop is looped; must be greater than or equal to -1.
    A value of -1 means infinite looping, and 0 disables looping.
    A value of positive N means to "loop" (go back) N times.  For example,
    a value of one means to play the region two times in total.</param>
        <summary>Sets the loop points and the loop count.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetNotificationMarkerPosition">
      <MemberSignature Language="C#" Value="public virtual Android.Media.TrackStatus SetNotificationMarkerPosition (int markerInFrames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.TrackStatus SetNotificationMarkerPosition(int32 markerInFrames) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setNotificationMarkerPosition", "(I)I", "GetSetNotificationMarkerPosition_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.TrackStatus</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="markerInFrames" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="markerInFrames">marker position in wrapping frame units similar to
 <c><see cref="P:Android.Media.AudioTrack.PlaybackHeadPosition" /></c>, or zero to disable the marker.
 To set a marker at a position which would appear as zero due to wraparound,
 a workaround is to use a non-zero position near zero, such as -1 or 1.</param>
        <summary>Sets the position of the notification marker.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetPlaybackHeadPosition">
      <MemberSignature Language="C#" Value="public virtual Android.Media.TrackStatus SetPlaybackHeadPosition (int positionInFrames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.TrackStatus SetPlaybackHeadPosition(int32 positionInFrames) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPlaybackHeadPosition", "(I)I", "GetSetPlaybackHeadPosition_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.TrackStatus</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="positionInFrames" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="positionInFrames">playback head position within buffer, expressed in frames.
 Zero corresponds to start of buffer.
 The position must not be greater than the buffer size in frames, or negative.
 Though this method and <c><see cref="P:Android.Media.AudioTrack.PlaybackHeadPosition" /></c> have similar names,
 the position values have different meanings.
 <format type="text/html"><br /></format>
 If looping is currently enabled and the new position is greater than or equal to the
 loop end marker, the behavior varies by API level:
 as of <c><see cref="!:NoType:android/os/Build$VERSION_CODES;Href=../../../reference/android/os/Build.VERSION_CODES.html#M" /></c>,
 the looping is first disabled and then the position is set.
 For earlier API levels, the behavior is unspecified.</param>
        <summary>Sets the playback head position within the static buffer.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetPlaybackPositionUpdateListener">
      <MemberSignature Language="C#" Value="public virtual void SetPlaybackPositionUpdateListener (Android.Media.AudioTrack.IOnPlaybackPositionUpdateListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPlaybackPositionUpdateListener(class Android.Media.AudioTrack/IOnPlaybackPositionUpdateListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPlaybackPositionUpdateListener", "(Landroid/media/AudioTrack$OnPlaybackPositionUpdateListener;)V", "GetSetPlaybackPositionUpdateListener_Landroid_media_AudioTrack_OnPlaybackPositionUpdateListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.AudioTrack+IOnPlaybackPositionUpdateListener" />
      </Parameters>
      <Docs>
        <param name="listener">To be added.</param>
        <summary>Sets the listener the AudioTrack notifies when a previously set marker is reached or
 for each periodic playback head position update.</summary>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetPlaybackPositionUpdateListener">
      <MemberSignature Language="C#" Value="public virtual void SetPlaybackPositionUpdateListener (Android.Media.AudioTrack.IOnPlaybackPositionUpdateListener listener, Android.OS.Handler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPlaybackPositionUpdateListener(class Android.Media.AudioTrack/IOnPlaybackPositionUpdateListener listener, class Android.OS.Handler handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPlaybackPositionUpdateListener", "(Landroid/media/AudioTrack$OnPlaybackPositionUpdateListener;Landroid/os/Handler;)V", "GetSetPlaybackPositionUpdateListener_Landroid_media_AudioTrack_OnPlaybackPositionUpdateListener_Landroid_os_Handler_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.AudioTrack+IOnPlaybackPositionUpdateListener" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="listener">To be added.</param>
        <param name="handler">the Handler that will receive the event notification messages.
</param>
        <summary>Sets the listener the AudioTrack notifies when a previously set marker is reached or
 for each periodic playback head position update.</summary>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetPlaybackRate">
      <MemberSignature Language="C#" Value="public virtual int SetPlaybackRate (int sampleRateInHz);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SetPlaybackRate(int32 sampleRateInHz) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPlaybackRate", "(I)I", "GetSetPlaybackRate_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sampleRateInHz" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sampleRateInHz">the sample rate expressed in Hz</param>
        <summary>Sets the playback sample rate for this track.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetPositionNotificationPeriod">
      <MemberSignature Language="C#" Value="public virtual Android.Media.TrackStatus SetPositionNotificationPeriod (int periodInFrames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.TrackStatus SetPositionNotificationPeriod(int32 periodInFrames) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPositionNotificationPeriod", "(I)I", "GetSetPositionNotificationPeriod_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.TrackStatus</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="periodInFrames" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="periodInFrames">update period expressed in frames.
 Zero period means no position updates.  A negative period is not allowed.</param>
        <summary>Sets the period for the periodic notification event.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetState">
      <MemberSignature Language="C#" Value="protected virtual void SetState (int state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetState(int32 state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setState", "(I)V", "GetSetState_IHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="state">the state of the AudioTrack instance</param>
        <summary>Sets the initialization state of the instance.</summary>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetStereoVolume">
      <MemberSignature Language="C#" Value="public virtual Android.Media.TrackStatus SetStereoVolume (float leftGain, float rightGain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.TrackStatus SetStereoVolume(float32 leftGain, float32 rightGain) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setStereoVolume", "(FF)I", "GetSetStereoVolume_FFHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.TrackStatus</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leftVolume" Type="System.Single" />
        <Parameter Name="rightVolume" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="leftGain">output gain for the left channel.</param>
        <param name="rightGain">output gain for the right channel</param>
        <param name="leftVolume">output attenuation for the left channel. A value of 0.0f is silence,
      a value of 1.0f is no attenuation.</param>
        <param name="rightVolume">output attenuation for the right channel</param>
        <summary>Sets the specified left and right output gain values on the AudioTrack.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetVolume">
      <MemberSignature Language="C#" Value="public virtual Android.Media.TrackStatus SetVolume (float gain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.TrackStatus SetVolume(float32 gain) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setVolume", "(F)I", "GetSetVolume_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.TrackStatus</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gain" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="gain">output gain for all channels.</param>
        <summary>Sets the specified output gain value on all channels of this track.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public virtual Android.Media.AudioTrackState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.AudioTrackState State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getState", "()I", "GetGetStateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioTrackState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the state of the AudioTrack instance.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public virtual void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Stop() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("stop", "()V", "GetStopHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stops playing the audio data.</summary>
        <remarks />
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalStateException" />
      </Docs>
    </Member>
    <Member MemberName="StreamType">
      <MemberSignature Language="C#" Value="public virtual Android.Media.Stream StreamType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.Stream StreamType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getStreamType", "()I", "GetGetStreamTypeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the type of audio stream this AudioTrack is configured for.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Success">
      <MemberSignature Language="C#" Value="public const Android.Media.TrackStatus Success = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.TrackStatus Success = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SUCCESS")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.TrackStatus enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.TrackStatus</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Denotes a successful operation.</summary>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual int Write (Java.Nio.ByteBuffer audioData, int sizeInBytes, Android.Media.WriteMode writeMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Write(class Java.Nio.ByteBuffer audioData, int32 sizeInBytes, valuetype Android.Media.WriteMode writeMode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("write", "(Ljava/nio/ByteBuffer;II)I", "GetWrite_Ljava_nio_ByteBuffer_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioData" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="sizeInBytes" Type="System.Int32" />
        <Parameter Name="writeMode" Type="Android.Media.WriteMode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="audioData">the buffer that holds the data to play, starting at the position reported
     by <c>audioData.position()</c>.
     <format type="text/html"><br /></format>Note that upon return, the buffer position (<c>audioData.position()</c>) will
     have been advanced to reflect the amount of data that was successfully written to
     the AudioTrack.</param>
        <param name="sizeInBytes">number of bytes to write.
     <format type="text/html"><br /></format>Note this may differ from <c>audioData.remaining()</c>, but cannot exceed it.</param>
        <param name="writeMode">one of <c><see cref="!:Android.Media.AudioTrack.WRITE_BLOCKING" /></c>, <c><see cref="!:Android.Media.AudioTrack.WRITE_NON_BLOCKING" /></c>. It has no
     effect in static mode.
     <format type="text/html"><br /></format>With <c><see cref="!:Android.Media.AudioTrack.WRITE_BLOCKING" /></c>, the write will block until all data has been written
         to the audio sink.
     <format type="text/html"><br /></format>With <c><see cref="!:Android.Media.AudioTrack.WRITE_NON_BLOCKING" /></c>, the write will return immediately after
     queuing as much audio data for playback as possible without blocking.</param>
        <summary>Writes the audio data to the audio sink for playback (streaming mode),
 or copies audio data for later playback (static buffer mode).</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual int Write (byte[] audioData, int offsetInBytes, int sizeInBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Write(unsigned int8[] audioData, int32 offsetInBytes, int32 sizeInBytes) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("write", "([BII)I", "GetWrite_arrayBIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioData" Type="System.Byte[]" />
        <Parameter Name="offsetInBytes" Type="System.Int32" />
        <Parameter Name="sizeInBytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="audioData">the array that holds the data to play.</param>
        <param name="offsetInBytes">the offset expressed in bytes in audioData where the data to play
    starts.</param>
        <param name="sizeInBytes">the number of bytes to read in audioData after the offset.</param>
        <summary>Writes the audio data to the audio sink for playback (streaming mode),
 or copies audio data for later playback (static buffer mode).</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual int Write (short[] audioData, int offsetInShorts, int sizeInShorts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Write(int16[] audioData, int32 offsetInShorts, int32 sizeInShorts) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("write", "([SII)I", "GetWrite_arraySIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioData" Type="System.Int16[]" />
        <Parameter Name="offsetInShorts" Type="System.Int32" />
        <Parameter Name="sizeInShorts" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="audioData">the array that holds the data to play.</param>
        <param name="offsetInShorts">the offset expressed in shorts in audioData where the data to play
     starts.</param>
        <param name="sizeInShorts">the number of shorts to read in audioData after the offset.</param>
        <summary>Writes the audio data to the audio sink for playback (streaming mode),
 or copies audio data for later playback (static buffer mode).</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public virtual int Write (float[] audioData, int offsetInFloats, int sizeInFloats, Android.Media.WriteMode writeMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Write(float32[] audioData, int32 offsetInFloats, int32 sizeInFloats, valuetype Android.Media.WriteMode writeMode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("write", "([FIII)I", "GetWrite_arrayFIIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioData" Type="System.Single[]" />
        <Parameter Name="offsetInFloats" Type="System.Int32" />
        <Parameter Name="sizeInFloats" Type="System.Int32" />
        <Parameter Name="writeMode" Type="Android.Media.WriteMode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="audioData">the array that holds the data to play.
     The implementation does not clip for sample values within the nominal range
     [-1.0f, 1.0f], provided that all gains in the audio pipeline are
     less than or equal to unity (1.0f), and in the absence of post-processing effects
     that could add energy, such as reverb.  For the convenience of applications
     that compute samples using filters with non-unity gain,
     sample values +3 dB beyond the nominal range are permitted.
     However such values may eventually be limited or clipped, depending on various gains
     and later processing in the audio path.  Therefore applications are encouraged
     to provide samples values within the nominal range.</param>
        <param name="offsetInFloats">the offset, expressed as a number of floats,
     in audioData where the data to play starts.</param>
        <param name="sizeInFloats">the number of floats to read in audioData after the offset.</param>
        <param name="writeMode">one of <c><see cref="!:Android.Media.AudioTrack.WRITE_BLOCKING" /></c>, <c><see cref="!:Android.Media.AudioTrack.WRITE_NON_BLOCKING" /></c>. It has no
     effect in static mode.
     <format type="text/html"><br /></format>With <c><see cref="!:Android.Media.AudioTrack.WRITE_BLOCKING" /></c>, the write will block until all data has been written
         to the audio sink.
     <format type="text/html"><br /></format>With <c><see cref="!:Android.Media.AudioTrack.WRITE_NON_BLOCKING" /></c>, the write will return immediately after
     queuing as much audio data for playback as possible without blocking.</param>
        <summary>Writes the audio data to the audio sink for playback (streaming mode),
 or copies audio data for later playback (static buffer mode).</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; WriteAsync (Java.Nio.ByteBuffer audioData, int sizeInBytes, Android.Media.WriteMode writeMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; WriteAsync(class Java.Nio.ByteBuffer audioData, int32 sizeInBytes, valuetype Android.Media.WriteMode writeMode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioData" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="sizeInBytes" Type="System.Int32" />
        <Parameter Name="writeMode" Type="Android.Media.WriteMode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="audioData">To be added.</param>
        <param name="sizeInBytes">To be added.</param>
        <param name="writeMode">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; WriteAsync (byte[] audioData, int offsetInBytes, int sizeInBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; WriteAsync(unsigned int8[] audioData, int32 offsetInBytes, int32 sizeInBytes) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioData" Type="System.Byte[]" />
        <Parameter Name="offsetInBytes" Type="System.Int32" />
        <Parameter Name="sizeInBytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="audioData">To be added.</param>
        <param name="offsetInBytes">To be added.</param>
        <param name="sizeInBytes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; WriteAsync (short[] audioData, int offsetInShorts, int sizeInShorts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; WriteAsync(int16[] audioData, int32 offsetInShorts, int32 sizeInShorts) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioData" Type="System.Int16[]" />
        <Parameter Name="offsetInShorts" Type="System.Int32" />
        <Parameter Name="sizeInShorts" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="audioData">To be added.</param>
        <param name="offsetInShorts">To be added.</param>
        <param name="sizeInShorts">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; WriteAsync (float[] audioData, int offsetInFloats, int sizeInFloats, Android.Media.WriteMode writeMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; WriteAsync(float32[] audioData, int32 offsetInFloats, int32 sizeInFloats, valuetype Android.Media.WriteMode writeMode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioData" Type="System.Single[]" />
        <Parameter Name="offsetInFloats" Type="System.Int32" />
        <Parameter Name="sizeInFloats" Type="System.Int32" />
        <Parameter Name="writeMode" Type="Android.Media.WriteMode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="audioData">To be added.</param>
        <param name="offsetInFloats">To be added.</param>
        <param name="sizeInFloats">To be added.</param>
        <param name="writeMode">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
