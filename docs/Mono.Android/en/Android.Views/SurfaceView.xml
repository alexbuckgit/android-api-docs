<Type Name="SurfaceView" FullName="Android.Views.SurfaceView">
  <TypeSignature Language="C#" Value="public class SurfaceView : Android.Views.View" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SurfaceView extends Android.Views.View" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Views.View</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/view/SurfaceView", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Provides a dedicated drawing surface embedded inside of a view hierarchy.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Provides a dedicated drawing surface embedded inside of a view hierarchy.
 You can control the format of this surface and, if you like, its size; the
 SurfaceView takes care of placing the surface at the correct location on the
 screen

 </para>
      <para tool="javadoc-to-mdoc">The surface is Z ordered so that it is behind the window holding its
 SurfaceView; the SurfaceView punches a hole in its window to allow its
 surface to be displayed. The view hierarchy will take care of correctly
 compositing with the Surface any siblings of the SurfaceView that would
 normally appear on top of it. This can be used to place overlays such as
 buttons on top of the Surface, though note however that it can have an
 impact on performance since a full alpha-blended composite will be performed
 each time the Surface changes.

 </para>
      <para tool="javadoc-to-mdoc"> The transparent region that makes the surface visible is based on the
 layout positions in the view hierarchy. If the post-layout transform
 properties are used to draw a sibling view on top of the SurfaceView, the
 view may not be properly composited with the surface.

 </para>
      <para tool="javadoc-to-mdoc">Access to the underlying surface is provided via the SurfaceHolder interface,
 which can be retrieved by calling <c><see cref="P:Android.Views.SurfaceView.Holder" /></c>.

 </para>
      <para tool="javadoc-to-mdoc">The Surface will be created for you while the SurfaceView's window is
 visible; you should implement <c><see cref="M:Android.Views.ISurfaceHolderCallback.SurfaceCreated(Android.Views.ISurfaceHolder)" /></c>
 and <c><see cref="M:Android.Views.ISurfaceHolderCallback.SurfaceDestroyed(Android.Views.ISurfaceHolder)" /></c> to discover when the
 Surface is created and destroyed as the window is shown and hidden.

 </para>
      <para tool="javadoc-to-mdoc">One of the purposes of this class is to provide a surface in which a
 secondary thread can render into the screen. If you are going to use it
 this way, you need to be aware of some threading semantics:

 <list type="bullet"><item><term> All SurfaceView and
 <c><see cref="T:Android.Views.ISurfaceHolderCallback" /></c> methods will be called
 from the thread running the SurfaceView's window (typically the main thread
 of the application). They thus need to correctly synchronize with any
 state that is also touched by the drawing thread.
 </term></item><item><term> You must ensure that the drawing thread only touches the underlying
 Surface while it is valid -- between
 <c><see cref="M:Android.Views.ISurfaceHolderCallback.SurfaceCreated(Android.Views.ISurfaceHolder)" /></c>
 and
 <c><see cref="M:Android.Views.ISurfaceHolderCallback.SurfaceDestroyed(Android.Views.ISurfaceHolder)" /></c>.
 </term></item></list></para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/view/SurfaceView.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SurfaceView (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/SurfaceView.html#SurfaceView(android.content.Context)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SurfaceView (Android.Content.Context context, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/SurfaceView.html#SurfaceView(android.content.Context, android.util.AttributeSet)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SurfaceView (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T}(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SurfaceView (Android.Content.Context context, Android.Util.IAttributeSet attrs, int defStyleAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs, int32 defStyleAttr) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="defStyle" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <param name="defStyleAttr">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/SurfaceView.html#SurfaceView(android.content.Context, android.util.AttributeSet, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SurfaceView (Android.Content.Context context, Android.Util.IAttributeSet attrs, int defStyleAttr, int defStyleRes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs, int32 defStyleAttr, int32 defStyleRes) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;II)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="defStyleAttr" Type="System.Int32" />
        <Parameter Name="defStyleRes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <param name="defStyleAttr">To be added.</param>
        <param name="defStyleRes">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/SurfaceView.html#SurfaceView(android.content.Context, android.util.AttributeSet, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherTransparentRegion">
      <MemberSignature Language="C#" Value="public virtual bool GatherTransparentRegion (Android.Graphics.Region region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GatherTransparentRegion(class Android.Graphics.Region region) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("gatherTransparentRegion", "(Landroid/graphics/Region;)Z", "GetGatherTransparentRegion_Landroid_graphics_Region_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="Android.Graphics.Region" />
      </Parameters>
      <Docs>
        <param name="region">The transparent region for this ViewAncestor (window).</param>
        <summary>This is used by the RootView to perform an optimization when
 the view hierarchy contains one or several SurfaceView.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">This is used by the RootView to perform an optimization when
 the view hierarchy contains one or several SurfaceView.
 SurfaceView is always considered transparent, but its children are not,
 therefore all View objects remove themselves from the global transparent
 region (passed as a parameter to this function).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/SurfaceView.html#gatherTransparentRegion(android.graphics.Region)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Holder">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ISurfaceHolder Holder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.ISurfaceHolder Holder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getHolder", "()Landroid/view/SurfaceHolder;", "GetGetHolderHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ISurfaceHolder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the SurfaceHolder providing access and control over this
 SurfaceView's underlying surface.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the SurfaceHolder providing access and control over this
 SurfaceView's underlying surface.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/SurfaceView.html#getHolder()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetSecure">
      <MemberSignature Language="C#" Value="public virtual void SetSecure (bool isSecure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSecure(bool isSecure) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSecure", "(Z)V", "GetSetSecure_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isSecure" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isSecure">True if the surface view is secure.
</param>
        <summary>Control whether the surface view's content should be treated as secure,
 preventing it from appearing in screenshots or from being viewed on
 non-secure displays.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Control whether the surface view's content should be treated as secure,
 preventing it from appearing in screenshots or from being viewed on
 non-secure displays.

 </para>
          <para tool="javadoc-to-mdoc">Note that this must be set before the surface view's containing
 window is attached to the window manager.

 </para>
          <para tool="javadoc-to-mdoc">See <c><see cref="F:Android.Views.Display.FlagSecure" /></c> for details.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/SurfaceView.html#setSecure(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="SetZOrderMediaOverlay">
      <MemberSignature Language="C#" Value="public virtual void SetZOrderMediaOverlay (bool isMediaOverlay);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetZOrderMediaOverlay(bool isMediaOverlay) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setZOrderMediaOverlay", "(Z)V", "GetSetZOrderMediaOverlay_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isMediaOverlay" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isMediaOverlay">To be added.</param>
        <summary>Control whether the surface view's surface is placed on top of another
 regular surface view in the window (but still behind the window itself).</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Control whether the surface view's surface is placed on top of another
 regular surface view in the window (but still behind the window itself).
 This is typically used to place overlays on top of an underlying media
 surface view.

 </para>
          <para tool="javadoc-to-mdoc">Note that this must be set before the surface view's containing
 window is attached to the window manager.

 </para>
          <para tool="javadoc-to-mdoc">Calling this overrides any previous call to <c><see cref="M:Android.Views.SurfaceView.SetZOrderOnTop(System.Boolean)" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/SurfaceView.html#setZOrderMediaOverlay(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="SetZOrderOnTop">
      <MemberSignature Language="C#" Value="public virtual void SetZOrderOnTop (bool onTop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetZOrderOnTop(bool onTop) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setZOrderOnTop", "(Z)V", "GetSetZOrderOnTop_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="onTop" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="onTop">To be added.</param>
        <summary>Control whether the surface view's surface is placed on top of its
 window.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Control whether the surface view's surface is placed on top of its
 window.  Normally it is placed behind the window, to allow it to
 (for the most part) appear to composite with the views in the
 hierarchy.  By setting this, you cause it to be placed above the
 window.  This means that none of the contents of the window this
 SurfaceView is in will be visible on top of its surface.

 </para>
          <para tool="javadoc-to-mdoc">Note that this must be set before the surface view's containing
 window is attached to the window manager.

 </para>
          <para tool="javadoc-to-mdoc">Calling this overrides any previous call to <c><see cref="M:Android.Views.SurfaceView.SetZOrderMediaOverlay(System.Boolean)" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/SurfaceView.html#setZOrderOnTop(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
