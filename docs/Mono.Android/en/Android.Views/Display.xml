<Type Name="Display" FullName="Android.Views.Display">
  <TypeSignature Language="C#" Value="public class Display : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Display extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/view/Display", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Provides information about the size and density of a logical display.</summary>
    <remarks />
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Display (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AppVsyncOffsetNanos">
      <MemberSignature Language="C#" Value="public virtual long AppVsyncOffsetNanos { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 AppVsyncOffsetNanos" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAppVsyncOffsetNanos", "()J", "GetGetAppVsyncOffsetNanosHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the app VSYNC offset, in nanoseconds.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="DefaultDisplay">
      <MemberSignature Language="C#" Value="public const int DefaultDisplay = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 DefaultDisplay = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DEFAULT_DISPLAY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>The default Display id, which is the id of the built-in primary display
 assuming there is one.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DisplayId">
      <MemberSignature Language="C#" Value="public virtual int DisplayId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DisplayId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDisplayId", "()I", "GetGetDisplayIdHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the display id.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FlagPresentation">
      <MemberSignature Language="C#" Value="public const Android.Views.DisplayFlags FlagPresentation = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.DisplayFlags FlagPresentation = (8)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FLAG_PRESENTATION")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.DisplayFlags enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.DisplayFlags</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>Display flag: Indicates that the display is a presentation display.</summary>
        <remarks />
        <altmember cref="P:Android.Views.Display.Flags" />
      </Docs>
    </Member>
    <Member MemberName="FlagPrivate">
      <MemberSignature Language="C#" Value="public const Android.Views.DisplayFlags FlagPrivate = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.DisplayFlags FlagPrivate = (4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FLAG_PRIVATE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.DisplayFlags enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.DisplayFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Display flag: Indicates that the display is private.</summary>
        <remarks />
        <altmember cref="P:Android.Views.Display.Flags" />
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public virtual Android.Views.DisplayFlags Flags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.DisplayFlags Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFlags", "()I", "GetGetFlagsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.DisplayFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a combination of flags that describe the capabilities of the display.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 17" />
        <altmember cref="F:Android.Views.Display.FlagSupportsProtectedBuffers" />
        <altmember cref="F:Android.Views.Display.FlagSecure" />
        <altmember cref="F:Android.Views.Display.FlagPrivate" />
      </Docs>
    </Member>
    <Member MemberName="FlagSecure">
      <MemberSignature Language="C#" Value="public const Android.Views.DisplayFlags FlagSecure = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.DisplayFlags FlagSecure = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FLAG_SECURE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.DisplayFlags enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.DisplayFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Display flag: Indicates that the display has a secure video output and
 supports compositing secure surfaces.</summary>
        <remarks />
        <since version="Added in API level 17" />
        <altmember cref="P:Android.Views.Display.Flags" />
      </Docs>
    </Member>
    <Member MemberName="FlagSupportsProtectedBuffers">
      <MemberSignature Language="C#" Value="public const Android.Views.DisplayFlags FlagSupportsProtectedBuffers = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.DisplayFlags FlagSupportsProtectedBuffers = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FLAG_SUPPORTS_PROTECTED_BUFFERS")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.DisplayFlags enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.DisplayFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Display flag: Indicates that the display supports compositing content
 that is stored in protected graphics buffers.</summary>
        <remarks />
        <since version="Added in API level 17" />
        <altmember cref="P:Android.Views.Display.Flags" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentSizeRange">
      <MemberSignature Language="C#" Value="public virtual void GetCurrentSizeRange (Android.Graphics.Point outSmallestSize, Android.Graphics.Point outLargestSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetCurrentSizeRange(class Android.Graphics.Point outSmallestSize, class Android.Graphics.Point outLargestSize) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getCurrentSizeRange", "(Landroid/graphics/Point;Landroid/graphics/Point;)V", "GetGetCurrentSizeRange_Landroid_graphics_Point_Landroid_graphics_Point_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outSmallestSize" Type="Android.Graphics.Point" />
        <Parameter Name="outLargestSize" Type="Android.Graphics.Point" />
      </Parameters>
      <Docs>
        <param name="outSmallestSize">Filled in with the smallest width and height
 that the application will encounter, in pixels (not dp units).  The x
 (width) dimension here directly corresponds to
 <c><see cref="P:Android.Content.Res.Configuration.SmallestScreenWidthDp" /></c>, except the value here is in raw
 screen pixels rather than dp units.  Your application may of course
 still get smaller space yet if, for example, a soft keyboard is
 being displayed.</param>
        <param name="outLargestSize">Filled in with the largest width and height
 that the application will encounter, in pixels (not dp units).  Your
 application may of course still get larger space than this if,
 for example, screen decorations like the status bar are being hidden.
</param>
        <summary>Return the range of display sizes an application can expect to encounter
 under normal operation, as long as there is no physical change in screen
 size.</summary>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="GetMetrics">
      <MemberSignature Language="C#" Value="public virtual void GetMetrics (Android.Util.DisplayMetrics outMetrics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetMetrics(class Android.Util.DisplayMetrics outMetrics) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getMetrics", "(Landroid/util/DisplayMetrics;)V", "GetGetMetrics_Landroid_util_DisplayMetrics_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outMetrics" Type="Android.Util.DisplayMetrics" />
      </Parameters>
      <Docs>
        <param name="outMetrics">A <c><see cref="T:Android.Util.DisplayMetrics" /></c> object to receive the metrics.
</param>
        <summary>Gets display metrics that describe the size and density of this display.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetRealMetrics">
      <MemberSignature Language="C#" Value="public virtual void GetRealMetrics (Android.Util.DisplayMetrics outMetrics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetRealMetrics(class Android.Util.DisplayMetrics outMetrics) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getRealMetrics", "(Landroid/util/DisplayMetrics;)V", "GetGetRealMetrics_Landroid_util_DisplayMetrics_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outMetrics" Type="Android.Util.DisplayMetrics" />
      </Parameters>
      <Docs>
        <param name="outMetrics">A <c><see cref="T:Android.Util.DisplayMetrics" /></c> object to receive the metrics.
</param>
        <summary>Gets display metrics based on the real size of this display.</summary>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="GetRealSize">
      <MemberSignature Language="C#" Value="public virtual void GetRealSize (Android.Graphics.Point outSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetRealSize(class Android.Graphics.Point outSize) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getRealSize", "(Landroid/graphics/Point;)V", "GetGetRealSize_Landroid_graphics_Point_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outSize" Type="Android.Graphics.Point" />
      </Parameters>
      <Docs>
        <param name="outSize">Set to the real size of the display.
</param>
        <summary>Gets the real size of the display without subtracting any window decor or
 applying any compatibility scale factors.</summary>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="GetRectSize">
      <MemberSignature Language="C#" Value="public virtual void GetRectSize (Android.Graphics.Rect outSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetRectSize(class Android.Graphics.Rect outSize) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getRectSize", "(Landroid/graphics/Rect;)V", "GetGetRectSize_Landroid_graphics_Rect_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outSize" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="outSize">A <c><see cref="T:Android.Graphics.Rect" /></c> object to receive the size information.</param>
        <summary>Gets the size of the display as a rectangle, in pixels.</summary>
        <remarks />
        <since version="Added in API level 13" />
        <altmember cref="M:Android.Views.Display.GetSize(Android.Graphics.Point)" />
      </Docs>
    </Member>
    <Member MemberName="GetSize">
      <MemberSignature Language="C#" Value="public virtual void GetSize (Android.Graphics.Point outSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetSize(class Android.Graphics.Point outSize) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getSize", "(Landroid/graphics/Point;)V", "GetGetSize_Landroid_graphics_Point_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outSize" Type="Android.Graphics.Point" />
      </Parameters>
      <Docs>
        <param name="outSize">A <c><see cref="T:Android.Graphics.Point" /></c> object to receive the size information.
</param>
        <summary>Gets the size of the display, in pixels.</summary>
        <remarks />
        <since version="Added in API level 13" />
      </Docs>
    </Member>
    <Member MemberName="GetSupportedRefreshRates">
      <MemberSignature Language="C#" Value="public virtual float[] GetSupportedRefreshRates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32[] GetSupportedRefreshRates() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getSupportedRefreshRates", "()[F", "GetGetSupportedRefreshRatesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Get the supported refresh rates of this display in frames per second.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public virtual int Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getHeight", "()I", "GetGetHeightHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isValid", "()Z", "GetIsValidHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this display is still valid, false if the display has been removed.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getName", "()Ljava/lang/String;", "GetGetNameHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the display.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public virtual int Orientation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getOrientation", "()I", "GetGetOrientationHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PixelFormat">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Format PixelFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Graphics.Format PixelFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPixelFormat", "()I", "GetGetPixelFormatHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Format</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the pixel format of the display.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PresentationDeadlineNanos">
      <MemberSignature Language="C#" Value="public virtual long PresentationDeadlineNanos { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 PresentationDeadlineNanos" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPresentationDeadlineNanos", "()J", "GetGetPresentationDeadlineNanosHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This is how far in advance a buffer must be queued for presentation at
 a given time.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="RefreshRate">
      <MemberSignature Language="C#" Value="public virtual float RefreshRate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 RefreshRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getRefreshRate", "()F", "GetGetRefreshRateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the refresh rate of this display in frames per second.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public virtual Android.Views.SurfaceOrientation Rotation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.SurfaceOrientation Rotation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getRotation", "()I", "GetGetRotationHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.SurfaceOrientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the rotation of the screen from its "natural" orientation.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public virtual Android.Views.DisplayState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.DisplayState State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getState", "()I", "GetGetStateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.DisplayState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the state of the display, such as whether it is on or off.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="StateDozing">
      <MemberSignature Language="C#" Value="public const int StateDozing = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 StateDozing = (3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("STATE_DOZING")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public virtual int Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getWidth", "()I", "GetGetWidthHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
