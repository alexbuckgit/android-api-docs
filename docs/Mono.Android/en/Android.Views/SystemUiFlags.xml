<Type Name="SystemUiFlags" FullName="Android.Views.SystemUiFlags">
  <TypeSignature Language="C#" Value="public enum SystemUiFlags" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SystemUiFlags extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Enumerates values returned by  several types and taken as a parameter of the <see cref="F:Android.Views.View.DispatchSystemUiVisibilityChanged" />, <see cref="F:Android.Views.View.DispatchWindowSystemUiVisiblityChanged" />, and <see cref="F:Android.Views.View.OnWindowSystemUiVisibilityChanged" /> members.</summary>
    <remarks>Enumerates values returned by the following: <list type="bullet"><item><term><see cref="F:Android.Views.SystemUiFlags.Fullscreen" /></term></item><item><term><see cref="F:Android.Views.SystemUiFlags.HideNavigation" /></term></item><item><term><see cref="F:Android.Views.SystemUiFlags.Immersive" /></term></item><item><term><see cref="F:Android.Views.SystemUiFlags.ImmersiveSticky" /></term></item><item><term><see cref="F:Android.Views.SystemUiFlags.LayoutFlags" /></term></item><item><term><see cref="F:Android.Views.SystemUiFlags.LayoutFullscreen" /></term></item><item><term><see cref="F:Android.Views.SystemUiFlags.LayoutHideNavigation" /></term></item><item><term><see cref="F:Android.Views.SystemUiFlags.LayoutStable" /></term></item><item><term><see cref="F:Android.Views.SystemUiFlags.LowProfile" /></term></item><item><term><see cref="F:Android.Views.SystemUiFlags.Visible" /></term></item><item><term><see cref="F:Android.Views.View.SystemUiFlagFullscreen" /></term></item><item><term><see cref="F:Android.Views.View.SystemUiFlagHideNavigation" /></term></item><item><term><see cref="F:Android.Views.View.SystemUiFlagImmersive" /></term></item><item><term><see cref="F:Android.Views.View.SystemUiFlagImmersiveSticky" /></term></item><item><term><see cref="F:Android.Views.View.SystemUiFlagLayoutFullscreen" /></term></item><item><term><see cref="F:Android.Views.View.SystemUiFlagLayoutHideNavigation" /></term></item><item><term><see cref="F:Android.Views.View.SystemUiFlagLayoutStable" /></term></item><item><term><see cref="F:Android.Views.View.SystemUiFlagLowProfile" /></term></item><item><term><see cref="F:Android.Views.View.SystemUiFlagVisible" /></term></item><item><term><see cref="F:Android.Views.View.SystemUiLayoutFlags" /></term></item><item><term><see cref="F:Android.Views.View.WindowSystemUiVisibility" /></term></item></list>
 and taken as a parameter of the <see cref="F:Android.Views.View.DispatchSystemUiVisibilityChanged" />, <see cref="F:Android.Views.View.DispatchWindowSystemUiVisiblityChanged" />, and <see cref="F:Android.Views.View.OnWindowSystemUiVisibilityChanged" /> members.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Fullscreen">
      <MemberSignature Language="C#" Value="Fullscreen" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.SystemUiFlags Fullscreen = int32(4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Views.SystemUiFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">
            <c>
              <see cref="P:Android.Views.View.SystemUiVisibility" />
            </c>
          </para>
          <para tool="javadoc-to-mdoc">
            <c>
              <see cref="F:Android.Views.WindowManagerFlags.Fullscreen" />
            </c>
            <c>
              <see cref="F:Android.Views.WindowFeatures.ActionBarOverlay" />
            </c>
          </para>
          <para tool="javadoc-to-mdoc">
            <c>
              <see cref="F:Android.Views.WindowManagerFlags.Fullscreen" />
            </c>
          </para>
          <para tool="javadoc-to-mdoc">When using this flag, the application should provide some easy facility
 for the user to go out of it.  A common example would be in an e-book
 reader, where tapping on the screen brings back whatever screen and UI
 decorations that had been hidden while the user was immersed in reading
 the book.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="HideNavigation">
      <MemberSignature Language="C#" Value="HideNavigation" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.SystemUiFlags HideNavigation = int32(2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Views.SystemUiFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">
            <c>
              <see cref="P:Android.Views.View.SystemUiVisibility" />
            </c>
          </para>
          <para tool="javadoc-to-mdoc">
            <c>
              <see cref="F:Android.Views.View.SystemUiFlagLowProfile" />
            </c>
            <c>SYSTEM_UI_FLAG_HIDE_NAVIGATION</c>
            <c>
              <see cref="F:Android.Views.WindowManagerFlags.Fullscreen" />
            </c>
            <c>
              <see cref="F:Android.Views.WindowManagerFlags.LayoutInScreen" />
            </c>
          </para>
          <para tool="javadoc-to-mdoc">There is a limitation: because navigation controls are so important, the least user
 interaction will cause them to reappear immediately.  When this happens, both
 this flag and <c><see cref="F:Android.Views.View.SystemUiFlagFullscreen" /></c> will be cleared automatically,
 so that both elements reappear at the same time.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Immersive">
      <MemberSignature Language="C#" Value="Immersive" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.SystemUiFlags Immersive = int32(2048)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Views.SystemUiFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
      </Docs>
    </Member>
    <Member MemberName="ImmersiveSticky">
      <MemberSignature Language="C#" Value="ImmersiveSticky" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.SystemUiFlags ImmersiveSticky = int32(4096)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Views.SystemUiFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
      </Docs>
    </Member>
    <Member MemberName="LayoutFlags">
      <MemberSignature Language="C#" Value="LayoutFlags" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.SystemUiFlags LayoutFlags = int32(1536)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Views.SystemUiFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Flags that can impact the layout in relation to system UI.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="LayoutFullscreen">
      <MemberSignature Language="C#" Value="LayoutFullscreen" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.SystemUiFlags LayoutFullscreen = int32(1024)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Views.SystemUiFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Flag for <c><see cref="P:Android.Views.View.SystemUiVisibility" /></c>: View would like its window
 to be layed out as if it has requested
 <c><see cref="F:Android.Views.View.SystemUiFlagFullscreen" /></c>, even if it currently hasn't.  This
 allows it to avoid artifacts when switching in and out of that mode, at
 the expense that some of its user interface may be covered by screen
 decorations when they are shown.  You can perform layout of your inner
 UI elements to account for non-fullscreen system UI through the
 <c><see cref="M:Android.Views.View.FitSystemWindows(Android.Graphics.Rect)" /></c> method.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="LayoutHideNavigation">
      <MemberSignature Language="C#" Value="LayoutHideNavigation" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.SystemUiFlags LayoutHideNavigation = int32(512)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Views.SystemUiFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Flag for <c><see cref="P:Android.Views.View.SystemUiVisibility" /></c>: View would like its window
 to be layed out as if it has requested
 <c><see cref="F:Android.Views.View.SystemUiFlagHideNavigation" /></c>, even if it currently hasn't.  This
 allows it to avoid artifacts when switching in and out of that mode, at
 the expense that some of its user interface may be covered by screen
 decorations when they are shown.  You can perform layout of your inner
 UI elements to account for the navagation system UI through the
 <c><see cref="M:Android.Views.View.FitSystemWindows(Android.Graphics.Rect)" /></c> method.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="LayoutStable">
      <MemberSignature Language="C#" Value="LayoutStable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.SystemUiFlags LayoutStable = int32(256)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Views.SystemUiFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">
            <c>
              <see cref="P:Android.Views.View.SystemUiVisibility" />
            </c>
            <c>
              <see cref="M:Android.Views.View.FitSystemWindows(Android.Graphics.Rect)" />
            </c>
            <c>
              <see cref="F:Android.Views.View.SystemUiFlagLayoutFullscreen" />
            </c>
            <c>
              <see cref="F:Android.Views.View.SystemUiFlagFullscreen" />
            </c>
            <c>
              <see cref="F:Android.Views.View.SystemUiFlagLayoutFullscreen" />
            </c>
            <c>
              <see cref="F:Android.Views.View.SystemUiFlagLayoutHideNavigation" />
            </c>
            <c>
              <see cref="F:Android.Views.View.SystemUiFlagFullscreen" />
            </c>
            <c>
              <see cref="F:Android.Views.View.SystemUiFlagHideNavigation" />
            </c>
            <c>
              <see cref="F:Android.Views.View.SystemUiFlagLayoutHideNavigation" />
            </c>
            <c>
              <see cref="F:Android.Views.WindowManagerFlags.Fullscreen" />
            </c>
            <c>
              <see cref="F:Android.Views.View.SystemUiFlagFullscreen" />
            </c>
          </para>
          <para tool="javadoc-to-mdoc">If you are using ActionBar in
 overlay mode with <c><see cref="F:Android.Views.WindowFeatures.ActionBarOverlay" /></c>, this flag will also impact the
 insets it adds to those given to the application.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="LowProfile">
      <MemberSignature Language="C#" Value="LowProfile" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.SystemUiFlags LowProfile = int32(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Views.SystemUiFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">
            <c>
              <see cref="P:Android.Views.View.SystemUiVisibility" />
            </c>
          </para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">In low profile mode, the status bar and/or navigation icons may dim.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="Visible" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.SystemUiFlags Visible = int32(0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Views.SystemUiFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Special constant for <c><see cref="P:Android.Views.View.SystemUiVisibility" /></c>: View has
 requested the system UI (status bar) to be visible (the default).</para>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>