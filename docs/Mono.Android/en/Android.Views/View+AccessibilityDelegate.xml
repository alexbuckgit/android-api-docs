<Type Name="View+AccessibilityDelegate" FullName="Android.Views.View+AccessibilityDelegate">
  <TypeSignature Language="C#" Value="public class View.AccessibilityDelegate : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit View/AccessibilityDelegate extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/view/View$AccessibilityDelegate", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <format type="text/html">
        <h3>Developer Guides</h3>
      </format>
      <c>
        <example>
          <code lang="java">
 if (Build.VERSION.SDK_INT &gt;= 14) {
     // If the API version is equal of higher than the version in
     // which onInitializeAccessibilityNodeInfo was introduced we
     // register a delegate with a customized implementation.
     View view = findViewById(R.id.view_id);
     view.setAccessibilityDelegate(new AccessibilityDelegate() {
         public void onInitializeAccessibilityNodeInfo(View host,
                 AccessibilityNodeInfo info) {
             // Let the default implementation populate the info.
             super.onInitializeAccessibilityNodeInfo(host, info);
             // Set some other information.
             info.setEnabled(host.isEnabled());
         }
     });
 }
 </code>
        </example>
      </c>
    </summary>
    <remarks />
    <since version="Added in API level 14" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AccessibilityDelegate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks />
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AccessibilityDelegate (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="DispatchPopulateAccessibilityEvent">
      <MemberSignature Language="C#" Value="public virtual bool DispatchPopulateAccessibilityEvent (Android.Views.View host, Android.Views.Accessibility.AccessibilityEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchPopulateAccessibilityEvent(class Android.Views.View host, class Android.Views.Accessibility.AccessibilityEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchPopulateAccessibilityEvent", "(Landroid/view/View;Landroid/view/accessibility/AccessibilityEvent;)Z", "GetDispatchPopulateAccessibilityEvent_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="Android.Views.View" />
        <Parameter Name="e" Type="Android.Views.Accessibility.AccessibilityEvent" />
      </Parameters>
      <Docs>
        <param name="host">The View hosting the delegate.</param>
        <param name="e">The event.</param>
        <summary>Dispatches an <c><see cref="T:Android.Views.Accessibility.AccessibilityEvent" /></c> to the host <c><see cref="T:Android.Views.View" /></c> first and then
 to its children for adding their text content to the event.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Views.View.DispatchPopulateAccessibilityEvent(Android.Views.Accessibility.AccessibilityEvent)" />
      </Docs>
    </Member>
    <Member MemberName="GetAccessibilityNodeProvider">
      <MemberSignature Language="C#" Value="public virtual Android.Views.Accessibility.AccessibilityNodeProvider GetAccessibilityNodeProvider (Android.Views.View host);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.Accessibility.AccessibilityNodeProvider GetAccessibilityNodeProvider(class Android.Views.View host) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getAccessibilityNodeProvider", "(Landroid/view/View;)Landroid/view/accessibility/AccessibilityNodeProvider;", "GetGetAccessibilityNodeProvider_Landroid_view_View_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Accessibility.AccessibilityNodeProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="host">To be added.</param>
        <summary>Gets the provider for managing a virtual view hierarchy rooted at this View
 and reported to <c><see cref="T:Android.AccessibilityServices.AccessibilityService" /></c>s
 that explore the window content.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 16" />
        <altmember cref="T:Android.Views.Accessibility.AccessibilityNodeProvider" />
      </Docs>
    </Member>
    <Member MemberName="OnInitializeAccessibilityEvent">
      <MemberSignature Language="C#" Value="public virtual void OnInitializeAccessibilityEvent (Android.Views.View host, Android.Views.Accessibility.AccessibilityEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnInitializeAccessibilityEvent(class Android.Views.View host, class Android.Views.Accessibility.AccessibilityEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onInitializeAccessibilityEvent", "(Landroid/view/View;Landroid/view/accessibility/AccessibilityEvent;)V", "GetOnInitializeAccessibilityEvent_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="Android.Views.View" />
        <Parameter Name="e" Type="Android.Views.Accessibility.AccessibilityEvent" />
      </Parameters>
      <Docs>
        <param name="host">The View hosting the delegate.</param>
        <param name="e">The event to initialize.</param>
        <summary>Initializes an <c><see cref="T:Android.Views.Accessibility.AccessibilityEvent" /></c> with information about the
 the host View which is the event source.</summary>
        <remarks />
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Views.View.OnInitializeAccessibilityEvent(Android.Views.Accessibility.AccessibilityEvent)" />
      </Docs>
    </Member>
    <Member MemberName="OnInitializeAccessibilityNodeInfo">
      <MemberSignature Language="C#" Value="public virtual void OnInitializeAccessibilityNodeInfo (Android.Views.View host, Android.Views.Accessibility.AccessibilityNodeInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnInitializeAccessibilityNodeInfo(class Android.Views.View host, class Android.Views.Accessibility.AccessibilityNodeInfo info) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onInitializeAccessibilityNodeInfo", "(Landroid/view/View;Landroid/view/accessibility/AccessibilityNodeInfo;)V", "GetOnInitializeAccessibilityNodeInfo_Landroid_view_View_Landroid_view_accessibility_AccessibilityNodeInfo_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="Android.Views.View" />
        <Parameter Name="info" Type="Android.Views.Accessibility.AccessibilityNodeInfo" />
      </Parameters>
      <Docs>
        <param name="host">The View hosting the delegate.</param>
        <param name="info">The instance to initialize.</param>
        <summary>Initializes an <c><see cref="T:Android.Views.Accessibility.AccessibilityNodeInfo" /></c> with information about the host view.</summary>
        <remarks />
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Views.View.OnInitializeAccessibilityNodeInfo(Android.Views.Accessibility.AccessibilityNodeInfo)" />
      </Docs>
    </Member>
    <Member MemberName="OnPopulateAccessibilityEvent">
      <MemberSignature Language="C#" Value="public virtual void OnPopulateAccessibilityEvent (Android.Views.View host, Android.Views.Accessibility.AccessibilityEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPopulateAccessibilityEvent(class Android.Views.View host, class Android.Views.Accessibility.AccessibilityEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onPopulateAccessibilityEvent", "(Landroid/view/View;Landroid/view/accessibility/AccessibilityEvent;)V", "GetOnPopulateAccessibilityEvent_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="Android.Views.View" />
        <Parameter Name="e" Type="Android.Views.Accessibility.AccessibilityEvent" />
      </Parameters>
      <Docs>
        <param name="host">The View hosting the delegate.</param>
        <param name="e">The accessibility event which to populate.</param>
        <summary>Gives a chance to the host View to populate the accessibility event with its
 text content.</summary>
        <remarks />
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Views.View.OnPopulateAccessibilityEvent(Android.Views.Accessibility.AccessibilityEvent)" />
      </Docs>
    </Member>
    <Member MemberName="OnRequestSendAccessibilityEvent">
      <MemberSignature Language="C#" Value="public virtual bool OnRequestSendAccessibilityEvent (Android.Views.ViewGroup host, Android.Views.View child, Android.Views.Accessibility.AccessibilityEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnRequestSendAccessibilityEvent(class Android.Views.ViewGroup host, class Android.Views.View child, class Android.Views.Accessibility.AccessibilityEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onRequestSendAccessibilityEvent", "(Landroid/view/ViewGroup;Landroid/view/View;Landroid/view/accessibility/AccessibilityEvent;)Z", "GetOnRequestSendAccessibilityEvent_Landroid_view_ViewGroup_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="Android.Views.ViewGroup" />
        <Parameter Name="child" Type="Android.Views.View" />
        <Parameter Name="e" Type="Android.Views.Accessibility.AccessibilityEvent" />
      </Parameters>
      <Docs>
        <param name="host">The View hosting the delegate.</param>
        <param name="child">The child which requests sending the event.</param>
        <param name="e">The event to be sent.</param>
        <summary>Called when a child of the host View has requested sending an
 <c><see cref="T:Android.Views.Accessibility.AccessibilityEvent" /></c> and gives an opportunity to the parent (the host)
 to augment the event.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Views.ViewGroup.OnRequestSendAccessibilityEvent(Android.Views.View, Android.Views.Accessibility.AccessibilityEvent)" />
      </Docs>
    </Member>
    <Member MemberName="PerformAccessibilityAction">
      <MemberSignature Language="C#" Value="public virtual bool PerformAccessibilityAction (Android.Views.View host, Android.AccessibilityServices.GlobalAction action, Android.OS.Bundle args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PerformAccessibilityAction(class Android.Views.View host, valuetype Android.AccessibilityServices.GlobalAction action, class Android.OS.Bundle args) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("performAccessibilityAction", "(Landroid/view/View;ILandroid/os/Bundle;)Z", "GetPerformAccessibilityAction_Landroid_view_View_ILandroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="Android.Views.View" />
        <Parameter Name="action" Type="Android.AccessibilityServices.GlobalAction">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="args" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="host">To be added.</param>
        <param name="action">The action to perform.</param>
        <param name="args">To be added.</param>
        <summary>Performs the specified accessibility action on the view.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Views.View.PerformAccessibilityAction(Android.AccessibilityServices.GlobalAction, Android.OS.Bundle)" />
      </Docs>
    </Member>
    <Member MemberName="SendAccessibilityEvent">
      <MemberSignature Language="C#" Value="public virtual void SendAccessibilityEvent (Android.Views.View host, Android.Views.Accessibility.EventTypes eventType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendAccessibilityEvent(class Android.Views.View host, valuetype Android.Views.Accessibility.EventTypes eventType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sendAccessibilityEvent", "(Landroid/view/View;I)V", "GetSendAccessibilityEvent_Landroid_view_View_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="Android.Views.View" />
        <Parameter Name="eventType" Type="Android.Views.Accessibility.EventTypes">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="host">The View hosting the delegate.</param>
        <param name="eventType">The type of the event to send.</param>
        <summary>Sends an accessibility event of the given type.</summary>
        <remarks />
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Views.View.SendAccessibilityEvent(Android.Views.Accessibility.EventTypes)" />
      </Docs>
    </Member>
    <Member MemberName="SendAccessibilityEventUnchecked">
      <MemberSignature Language="C#" Value="public virtual void SendAccessibilityEventUnchecked (Android.Views.View host, Android.Views.Accessibility.AccessibilityEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendAccessibilityEventUnchecked(class Android.Views.View host, class Android.Views.Accessibility.AccessibilityEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sendAccessibilityEventUnchecked", "(Landroid/view/View;Landroid/view/accessibility/AccessibilityEvent;)V", "GetSendAccessibilityEventUnchecked_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="Android.Views.View" />
        <Parameter Name="e" Type="Android.Views.Accessibility.AccessibilityEvent" />
      </Parameters>
      <Docs>
        <param name="host">The View hosting the delegate.</param>
        <param name="e">The event to send.</param>
        <summary>Sends an accessibility event.</summary>
        <remarks />
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Views.View.SendAccessibilityEventUnchecked(Android.Views.Accessibility.AccessibilityEvent)" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
