<Type Name="ContextThemeWrapper" FullName="Android.Views.ContextThemeWrapper">
  <TypeSignature Language="C#" Value="public class ContextThemeWrapper : Android.Content.ContextWrapper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContextThemeWrapper extends Android.Content.ContextWrapper" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Content.ContextWrapper</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/view/ContextThemeWrapper", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A ContextWrapper that allows you to modify the theme from what is in the 
 wrapped context.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">A ContextWrapper that allows you to modify the theme from what is in the 
 wrapped context. 
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/view/ContextThemeWrapper.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextThemeWrapper ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ContextThemeWrapper.html#ContextThemeWrapper()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextThemeWrapper (Android.Content.Context base, int themeres);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context base, int32 themeres) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="base" Type="Android.Content.Context" />
        <Parameter Name="themeres" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="base">To be added.</param>
        <param name="themeres">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ContextThemeWrapper.html#ContextThemeWrapper(android.content.Context, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ContextThemeWrapper (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyOverrideConfiguration">
      <MemberSignature Language="C#" Value="public virtual void ApplyOverrideConfiguration (Android.Content.Res.Configuration overrideConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyOverrideConfiguration(class Android.Content.Res.Configuration overrideConfiguration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("applyOverrideConfiguration", "(Landroid/content/res/Configuration;)V", "GetApplyOverrideConfiguration_Landroid_content_res_Configuration_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="overrideConfiguration" Type="Android.Content.Res.Configuration" />
      </Parameters>
      <Docs>
        <param name="overrideConfiguration">To be added.</param>
        <summary>Call to set an "override configuration" on this context -- this is
 a configuration that replies one or more values of the standard
 configuration that is applied to the context.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Call to set an "override configuration" on this context -- this is
 a configuration that replies one or more values of the standard
 configuration that is applied to the context.  See
 <c><see cref="M:Android.Content.Context.CreateConfigurationContext(Android.Content.Res.Configuration)" /></c> for more
 information.

 </para>
          <para tool="javadoc-to-mdoc">This method can only be called once, and must be called before any
 calls to <c><see cref="!:Android.Views.ContextThemeWrapper.getResources()" /></c> are made.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ContextThemeWrapper.html#applyOverrideConfiguration(android.content.res.Configuration)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="OnApplyThemeResource">
      <MemberSignature Language="C#" Value="protected virtual void OnApplyThemeResource (Android.Content.Res.Resources.Theme theme, int resid, bool first);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnApplyThemeResource(class Android.Content.Res.Resources/Theme theme, int32 resid, bool first) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onApplyThemeResource", "(Landroid/content/res/Resources$Theme;IZ)V", "GetOnApplyThemeResource_Landroid_content_res_Resources_Theme_IZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="theme" Type="Android.Content.Res.Resources+Theme" />
        <Parameter Name="resid" Type="System.Int32" />
        <Parameter Name="first" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="theme">The Theme object being modified.</param>
        <param name="resid">The theme style resource being applied to <format type="text/html"><var>theme</var></format>.</param>
        <param name="first">Set to true if this is the first time a style is being
              applied to <format type="text/html"><var>theme</var></format>.
</param>
        <summary>Called by <c><see cref="!:Android.Views.ContextThemeWrapper.setTheme(int)" /></c> and <c><see cref="!:Android.Views.ContextThemeWrapper.getTheme()" /></c> to apply a theme
 resource to the current Theme object.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called by <c><see cref="!:Android.Views.ContextThemeWrapper.setTheme(int)" /></c> and <c><see cref="!:Android.Views.ContextThemeWrapper.getTheme()" /></c> to apply a theme
 resource to the current Theme object.  Can override to change the
 default (simple) behavior.  This method will not be called in multiple
 threads simultaneously.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ContextThemeWrapper.html#onApplyThemeResource(android.content.res.Resources.Theme, int, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>