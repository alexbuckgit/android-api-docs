<Type Name="KeyEvent+DispatcherState" FullName="Android.Views.KeyEvent+DispatcherState">
  <TypeSignature Language="C#" Value="public class KeyEvent.DispatcherState : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit KeyEvent/DispatcherState extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/view/KeyEvent$DispatcherState", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Use with <c><see cref="M:Android.Views.KeyEvent.Dispatch(Android.Views.KeyEvent.ICallback, Android.Views.KeyEvent.DispatcherState, Android.Views.KeyEvent.DispatcherState)" /></c>
 for more advanced key dispatching, such as long presses.</summary>
    <remarks />
    <since version="Added in API level 5" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DispatcherState (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="HandleUpEvent">
      <MemberSignature Language="C#" Value="public virtual void HandleUpEvent (Android.Views.KeyEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HandleUpEvent(class Android.Views.KeyEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("handleUpEvent", "(Landroid/view/KeyEvent;)V", "GetHandleUpEvent_Landroid_view_KeyEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>Handle key up event to stop tracking.</summary>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="IsTracking">
      <MemberSignature Language="C#" Value="public virtual bool IsTracking (Android.Views.KeyEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsTracking(class Android.Views.KeyEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isTracking", "(Landroid/view/KeyEvent;)Z", "GetIsTracking_Landroid_view_KeyEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>Return true if the key event is for a key code that is currently
 being tracked by the dispatcher.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="PerformedLongPress">
      <MemberSignature Language="C#" Value="public virtual void PerformedLongPress (Android.Views.KeyEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PerformedLongPress(class Android.Views.KeyEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("performedLongPress", "(Landroid/view/KeyEvent;)V", "GetPerformedLongPress_Landroid_view_KeyEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>Keep track of the given event's key code as having performed an
 action with a long press, so no action should occur on the up.</summary>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("reset", "()V", "GetResetHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reset back to initial state.</summary>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset (Java.Lang.Object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset(class Java.Lang.Object target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("reset", "(Ljava/lang/Object;)V", "GetReset_Ljava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <summary>Stop any tracking associated with this target.</summary>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="StartTracking">
      <MemberSignature Language="C#" Value="public virtual void StartTracking (Android.Views.KeyEvent e, Java.Lang.Object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartTracking(class Android.Views.KeyEvent e, class Java.Lang.Object target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startTracking", "(Landroid/view/KeyEvent;Ljava/lang/Object;)V", "GetStartTracking_Landroid_view_KeyEvent_Ljava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
        <Parameter Name="target" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <param name="target">To be added.</param>
        <summary>Start tracking the key code associated with the given event.</summary>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
