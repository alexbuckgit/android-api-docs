<Type Name="View" FullName="Android.Views.View">
  <TypeSignature Language="C#" Value="public class View : Java.Lang.Object, Android.Graphics.Drawables.Drawable.ICallback, Android.Views.Accessibility.IAccessibilityEventSource, Android.Views.KeyEvent.ICallback, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit View extends Java.Lang.Object implements class Android.Graphics.Drawables.Drawable/ICallback, class Android.Runtime.IJavaObject, class Android.Views.Accessibility.IAccessibilityEventSource, class Android.Views.KeyEvent/ICallback, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Graphics.Drawables.Drawable+ICallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Views.Accessibility.IAccessibilityEventSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Views.KeyEvent+ICallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/view/View", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary tool="true">
      <format type="text/html">
        <h3>Developer Guides</h3>
      </format>For information about using this class to develop your application's user interface,
 read the <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/ui/index.html">User Interface</a></format> developer guide.</summary>
    <remarks />
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public View (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>Simple constructor to use when creating a view from code.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public View (Android.Content.Context context, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>Constructor that is called when inflating a view from XML.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="C:Android.Views.View(Android.Content.Context, Android.Util.IAttributeSet, Android.Util.IAttributeSet)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected View (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public View (Android.Content.Context context, Android.Util.IAttributeSet attrs, int defStyleAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs, int32 defStyleAttr) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="defStyle" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <param name="defStyleAttr">To be added.</param>
        <summary>Perform inflation from XML and apply a class-specific base style from a
 theme attribute.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="C:Android.Views.View(Android.Content.Context, Android.Util.IAttributeSet)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public View (Android.Content.Context context, Android.Util.IAttributeSet attrs, int defStyleAttr, int defStyleRes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs, int32 defStyleAttr, int32 defStyleRes) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;II)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="defStyleAttr" Type="System.Int32" />
        <Parameter Name="defStyleRes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <param name="defStyleAttr">To be added.</param>
        <param name="defStyleRes">To be added.</param>
        <summary>Perform inflation from XML and apply a class-specific base style from a
 theme attribute or style resource.</summary>
        <remarks />
        <altmember cref="C:Android.Views.View(Android.Content.Context, Android.Util.IAttributeSet, Android.Util.IAttributeSet)" />
      </Docs>
    </Member>
    <Member MemberName="AccessibilityLiveRegion">
      <MemberSignature Language="C#" Value="public virtual Android.Views.AccessibilityLiveRegion AccessibilityLiveRegion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.AccessibilityLiveRegion AccessibilityLiveRegion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAccessibilityLiveRegion", "()I", "GetGetAccessibilityLiveRegionHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setAccessibilityLiveRegion", "(I)V", "GetSetAccessibilityLiveRegion_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.AccessibilityLiveRegion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the live region mode for this View.</summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Views.View.AccessibilityLiveRegion" />
      </Docs>
      <since version="Added in API level 19" />
    </Member>
    <Member MemberName="AccessibilityLiveRegionAssertive">
      <MemberSignature Language="C#" Value="public const Android.Views.AccessibilityLiveRegion AccessibilityLiveRegionAssertive = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.AccessibilityLiveRegion AccessibilityLiveRegionAssertive = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACCESSIBILITY_LIVE_REGION_ASSERTIVE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.AccessibilityLiveRegion enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.AccessibilityLiveRegion</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Live region mode specifying that accessibility services should interrupt
 ongoing speech to immediately announce changes to this view.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AccessibilityLiveRegionNone">
      <MemberSignature Language="C#" Value="public const Android.Views.AccessibilityLiveRegion AccessibilityLiveRegionNone = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.AccessibilityLiveRegion AccessibilityLiveRegionNone = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACCESSIBILITY_LIVE_REGION_NONE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.AccessibilityLiveRegion enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.AccessibilityLiveRegion</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Live region mode specifying that accessibility services should not
 automatically announce changes to this view.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AccessibilityLiveRegionPolite">
      <MemberSignature Language="C#" Value="public const Android.Views.AccessibilityLiveRegion AccessibilityLiveRegionPolite = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.AccessibilityLiveRegion AccessibilityLiveRegionPolite = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACCESSIBILITY_LIVE_REGION_POLITE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.AccessibilityLiveRegion enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.AccessibilityLiveRegion</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Live region mode specifying that accessibility services should announce
 changes to this view.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AccessibilityNodeProvider">
      <MemberSignature Language="C#" Value="public virtual Android.Views.Accessibility.AccessibilityNodeProvider AccessibilityNodeProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.Accessibility.AccessibilityNodeProvider AccessibilityNodeProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAccessibilityNodeProvider", "()Landroid/view/accessibility/AccessibilityNodeProvider;", "GetGetAccessibilityNodeProviderHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Accessibility.AccessibilityNodeProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the provider for managing a virtual view hierarchy rooted at this View
 and reported to <c><see cref="T:Android.AccessibilityServices.AccessibilityService" /></c>s
 that explore the window content.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 16" />
        <altmember cref="T:Android.Views.Accessibility.AccessibilityNodeProvider" />
      </Docs>
    </Member>
    <Member MemberName="Activated">
      <MemberSignature Language="C#" Value="public virtual bool Activated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Activated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isActivated", "()Z", "GetIsActivatedHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setActivated", "(Z)V", "GetSetActivated_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the activation state of this view.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="AddChildrenForAccessibility">
      <MemberSignature Language="C#" Value="public virtual void AddChildrenForAccessibility (System.Collections.Generic.IList&lt;Android.Views.View&gt; children);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddChildrenForAccessibility(class System.Collections.Generic.IList`1&lt;class Android.Views.View&gt; children) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addChildrenForAccessibility", "(Ljava/util/ArrayList;)V", "GetAddChildrenForAccessibility_Ljava_util_ArrayList_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="children" Type="System.Collections.Generic.IList&lt;Android.Views.View&gt;" />
      </Parameters>
      <Docs>
        <param name="children">To be added.</param>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AddFocusables">
      <MemberSignature Language="C#" Value="public virtual void AddFocusables (System.Collections.Generic.IList&lt;Android.Views.View&gt; views, Android.Views.FocusSearchDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddFocusables(class System.Collections.Generic.IList`1&lt;class Android.Views.View&gt; views, valuetype Android.Views.FocusSearchDirection direction) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addFocusables", "(Ljava/util/ArrayList;I)V", "GetAddFocusables_Ljava_util_ArrayList_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="views" Type="System.Collections.Generic.IList&lt;Android.Views.View&gt;" />
        <Parameter Name="direction" Type="Android.Views.FocusSearchDirection">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="views">To be added.</param>
        <param name="direction">To be added.</param>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AddFocusables">
      <MemberSignature Language="C#" Value="public virtual void AddFocusables (System.Collections.Generic.IList&lt;Android.Views.View&gt; views, Android.Views.FocusSearchDirection direction, Android.Views.FocusablesFlags focusableMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddFocusables(class System.Collections.Generic.IList`1&lt;class Android.Views.View&gt; views, valuetype Android.Views.FocusSearchDirection direction, valuetype Android.Views.FocusablesFlags focusableMode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addFocusables", "(Ljava/util/ArrayList;II)V", "GetAddFocusables_Ljava_util_ArrayList_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="views" Type="System.Collections.Generic.IList&lt;Android.Views.View&gt;" />
        <Parameter Name="direction" Type="Android.Views.FocusSearchDirection">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="focusableMode" Type="Android.Views.FocusablesFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="views">To be added.</param>
        <param name="direction">To be added.</param>
        <param name="focusableMode">To be added.</param>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AddOnAttachStateChangeListener">
      <MemberSignature Language="C#" Value="public virtual void AddOnAttachStateChangeListener (Android.Views.View.IOnAttachStateChangeListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddOnAttachStateChangeListener(class Android.Views.View/IOnAttachStateChangeListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addOnAttachStateChangeListener", "(Landroid/view/View$OnAttachStateChangeListener;)V", "GetAddOnAttachStateChangeListener_Landroid_view_View_OnAttachStateChangeListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Views.View+IOnAttachStateChangeListener" />
      </Parameters>
      <Docs>
        <param name="listener">Listener to attach</param>
        <summary>Add a listener for attach state changes.</summary>
        <remarks />
        <since version="Added in API level 12" />
        <altmember cref="M:Android.Views.View.RemoveOnAttachStateChangeListener(.IOnAttachStateChangeListener)" />
      </Docs>
    </Member>
    <Member MemberName="AddOnLayoutChangeListener">
      <MemberSignature Language="C#" Value="public virtual void AddOnLayoutChangeListener (Android.Views.View.IOnLayoutChangeListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddOnLayoutChangeListener(class Android.Views.View/IOnLayoutChangeListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addOnLayoutChangeListener", "(Landroid/view/View$OnLayoutChangeListener;)V", "GetAddOnLayoutChangeListener_Landroid_view_View_OnLayoutChangeListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Views.View+IOnLayoutChangeListener" />
      </Parameters>
      <Docs>
        <param name="listener">The listener that will be called when layout bounds change.
</param>
        <summary>Add a listener that will be called when the bounds of the view change due to
 layout processing.</summary>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="AddTouchables">
      <MemberSignature Language="C#" Value="public virtual void AddTouchables (System.Collections.Generic.IList&lt;Android.Views.View&gt; views);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddTouchables(class System.Collections.Generic.IList`1&lt;class Android.Views.View&gt; views) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addTouchables", "(Ljava/util/ArrayList;)V", "GetAddTouchables_Ljava_util_ArrayList_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="views" Type="System.Collections.Generic.IList&lt;Android.Views.View&gt;" />
      </Parameters>
      <Docs>
        <param name="views">To be added.</param>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Alpha">
      <MemberSignature Language="C#" Value="public virtual float Alpha { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Alpha" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAlpha", "()F", "GetGetAlphaHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setAlpha", "(F)V", "GetSetAlpha_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The opacity of the view.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="P:Android.Views.View.HasOverlappingRendering" />
        <altmember cref="M:Android.Views.View.SetLayerType(Android.Views.LayerType, Android.Graphics.Paint)" />
      </Docs>
    </Member>
    <Member MemberName="Animate">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator Animate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator Animate() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("animate", "()Landroid/view/ViewPropertyAnimator;", "GetAnimateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This method returns a ViewPropertyAnimator object, which can be used to animate
 specific properties on this View.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="Animation">
      <MemberSignature Language="C#" Value="public virtual Android.Views.Animations.Animation Animation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.Animations.Animation Animation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAnimation", "()Landroid/view/animation/Animation;", "GetGetAnimationHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setAnimation", "(Landroid/view/animation/Animation;)V", "GetSetAnimation_Landroid_view_animation_Animation_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Animations.Animation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the animation currently associated with this view.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AnnounceForAccessibility">
      <MemberSignature Language="C#" Value="public virtual void AnnounceForAccessibility (Java.Lang.ICharSequence text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AnnounceForAccessibility(class Java.Lang.ICharSequence text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("announceForAccessibility", "(Ljava/lang/CharSequence;)V", "GetAnnounceForAccessibility_Ljava_lang_CharSequence_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="text">The announcement text.
</param>
        <summary>Convenience method for sending a <c><see cref="F:Android.Support.V4.View.Accessibility.AccessibilityEventCompat.TypeAnnouncement" tool="ReplaceLinkValue" /></c><c><see cref="T:Android.Views.Accessibility.AccessibilityEvent" /></c> to make an announcement which is related to some
 sort of a context change for which none of the events representing UI transitions
 is a good fit.</summary>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="AnnounceForAccessibility">
      <MemberSignature Language="C#" Value="public void AnnounceForAccessibility (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AnnounceForAccessibility(string text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ApplicationWindowToken">
      <MemberSignature Language="C#" Value="public virtual Android.OS.IBinder ApplicationWindowToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.OS.IBinder ApplicationWindowToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getApplicationWindowToken", "()Landroid/os/IBinder;", "GetGetApplicationWindowTokenHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IBinder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve a unique token identifying the top-level "real" window of
 the window that this view is attached to.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ApplyWindowInsets">
      <MemberSignature Language="C#" Value="public Android.Views.View.ApplyWindowInsetsHandler ApplyWindowInsets { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.View/ApplyWindowInsetsHandler ApplyWindowInsets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Views.View+ApplyWindowInsetsHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AwakenScrollBars">
      <MemberSignature Language="C#" Value="protected virtual bool AwakenScrollBars ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool AwakenScrollBars() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("awakenScrollBars", "()Z", "GetAwakenScrollBarsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">
        </summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 5" />
        <altmember cref="M:Android.Views.View.AwakenScrollBars(System.Int32)" />
        <altmember cref="M:Android.Views.View.ScrollBy(System.Int32, System.Int32)" />
        <altmember cref="M:Android.Views.View.ScrollTo(System.Int32, System.Int32)" />
        <altmember cref="P:Android.Views.View.HorizontalScrollBarEnabled" />
        <altmember cref="P:Android.Views.View.VerticalScrollBarEnabled" />
        <altmember cref="P:Android.Views.View.HorizontalScrollBarEnabled" />
        <altmember cref="P:Android.Views.View.VerticalScrollBarEnabled" />
      </Docs>
    </Member>
    <Member MemberName="AwakenScrollBars">
      <MemberSignature Language="C#" Value="protected virtual bool AwakenScrollBars (int startDelay);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool AwakenScrollBars(int32 startDelay) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("awakenScrollBars", "(I)Z", "GetAwakenScrollBars_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDelay" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startDelay">the delay, in milliseconds, after which the animation
        should start; when the delay is 0, the animation starts
        immediately</param>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 5" />
        <altmember cref="M:Android.Views.View.ScrollBy(System.Int32, System.Int32)" />
        <altmember cref="M:Android.Views.View.ScrollTo(System.Int32, System.Int32)" />
        <altmember cref="P:Android.Views.View.HorizontalScrollBarEnabled" />
        <altmember cref="P:Android.Views.View.VerticalScrollBarEnabled" />
        <altmember cref="P:Android.Views.View.HorizontalScrollBarEnabled" />
        <altmember cref="P:Android.Views.View.VerticalScrollBarEnabled" />
      </Docs>
    </Member>
    <Member MemberName="AwakenScrollBars">
      <MemberSignature Language="C#" Value="protected virtual bool AwakenScrollBars (int startDelay, bool invalidate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool AwakenScrollBars(int32 startDelay, bool invalidate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("awakenScrollBars", "(IZ)Z", "GetAwakenScrollBars_IZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDelay" Type="System.Int32" />
        <Parameter Name="invalidate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startDelay">the delay, in milliseconds, after which the animation
        should start; when the delay is 0, the animation starts
        immediately</param>
        <param name="invalidate">Whether this method should call invalidate</param>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 5" />
        <altmember cref="M:Android.Views.View.ScrollBy(System.Int32, System.Int32)" />
        <altmember cref="M:Android.Views.View.ScrollTo(System.Int32, System.Int32)" />
        <altmember cref="P:Android.Views.View.HorizontalScrollBarEnabled" />
        <altmember cref="P:Android.Views.View.VerticalScrollBarEnabled" />
        <altmember cref="P:Android.Views.View.HorizontalScrollBarEnabled" />
        <altmember cref="P:Android.Views.View.VerticalScrollBarEnabled" />
      </Docs>
    </Member>
    <Member MemberName="Background">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable Background { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Drawables.Drawable Background" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getBackground", "()Landroid/graphics/drawable/Drawable;", "GetGetBackgroundHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setBackground", "(Landroid/graphics/drawable/Drawable;)V", "GetSetBackground_Landroid_graphics_drawable_Drawable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the background drawable</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.Background" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundTintList">
      <MemberSignature Language="C#" Value="public virtual Android.Content.Res.ColorStateList BackgroundTintList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.Res.ColorStateList BackgroundTintList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getBackgroundTintList", "()Landroid/content/res/ColorStateList;", "GetGetBackgroundTintListHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setBackgroundTintList", "(Landroid/content/res/ColorStateList;)V", "GetSetBackgroundTintList_Landroid_content_res_ColorStateList_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.ColorStateList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the tint applied to the background drawable, if specified.</summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Views.View.BackgroundTintList" />
        <altmember cref="P:Android.Views.View.BackgroundTintList" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetTintList(Android.Content.Res.ColorStateList)" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundTintMode">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.PorterDuff.Mode BackgroundTintMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.PorterDuff/Mode BackgroundTintMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getBackgroundTintMode", "()Landroid/graphics/PorterDuff$Mode;", "GetGetBackgroundTintModeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setBackgroundTintMode", "(Landroid/graphics/PorterDuff$Mode;)V", "GetSetBackgroundTintMode_Landroid_graphics_PorterDuff_Mode_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.PorterDuff+Mode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the blending mode used to apply the tint to the background
 drawable, if specified.</summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Views.View.BackgroundTintMode" />
        <altmember cref="P:Android.Views.View.BackgroundTintMode" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetTintMode(.Mode)" />
      </Docs>
    </Member>
    <Member MemberName="Baseline">
      <MemberSignature Language="C#" Value="public virtual int Baseline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Baseline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getBaseline", "()I", "GetGetBaselineHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
        </summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Bottom">
      <MemberSignature Language="C#" Value="public int Bottom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Bottom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getBottom", "()I", "GetGetBottomHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setBottom", "(I)V", "GetSetBottom_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bottom position of this view relative to its parent.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BottomFadingEdgeStrength">
      <MemberSignature Language="C#" Value="protected virtual float BottomFadingEdgeStrength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 BottomFadingEdgeStrength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getBottomFadingEdgeStrength", "()F", "GetGetBottomFadingEdgeStrengthHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the strength, or intensity, of the bottom faded edge.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BottomPaddingOffset">
      <MemberSignature Language="C#" Value="protected virtual int BottomPaddingOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BottomPaddingOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getBottomPaddingOffset", "()I", "GetGetBottomPaddingOffsetHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Amount by which to extend the bottom fading region.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 2" />
        <altmember cref="P:Android.Views.View.IsPaddingOffsetRequired" />
      </Docs>
    </Member>
    <Member MemberName="BringToFront">
      <MemberSignature Language="C#" Value="public virtual void BringToFront ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BringToFront() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("bringToFront", "()V", "GetBringToFrontHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Change the view's z order in the tree, so it's on top of other sibling
 views.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.ViewGroup.BringChildToFront(Android.Views.View)" />
      </Docs>
    </Member>
    <Member MemberName="BuildDrawingCache">
      <MemberSignature Language="C#" Value="public virtual void BuildDrawingCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BuildDrawingCache() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("buildDrawingCache", "()V", "GetBuildDrawingCacheHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">
        </summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.BuildDrawingCache(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="BuildDrawingCache">
      <MemberSignature Language="C#" Value="public virtual void BuildDrawingCache (bool autoScale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BuildDrawingCache(bool autoScale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("buildDrawingCache", "(Z)V", "GetBuildDrawingCache_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoScale" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoScale">To be added.</param>
        <summary>
        </summary>
        <remarks />
        <since version="Added in API level 4" />
        <altmember cref="P:Android.Views.View.DrawingCache" />
        <altmember cref="M:Android.Views.View.DestroyDrawingCache" />
      </Docs>
    </Member>
    <Member MemberName="BuildLayer">
      <MemberSignature Language="C#" Value="public virtual void BuildLayer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BuildLayer() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("buildLayer", "()V", "GetBuildLayerHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Forces this view's layer to be created and this view to be rendered
 into its layer.</summary>
        <remarks />
        <since version="Added in API level 12" />
        <exception cref="T:Java.Lang.IllegalStateException">If this view is not attached to a window</exception>
        <altmember cref="M:Android.Views.View.SetLayerType(Android.Views.LayerType, Android.Graphics.Paint)" />
      </Docs>
    </Member>
    <Member MemberName="CallOnClick">
      <MemberSignature Language="C#" Value="public virtual bool CallOnClick ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CallOnClick() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("callOnClick", "()Z", "GetCallOnClickHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Directly call any attached OnClickListener.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 15" />
      </Docs>
    </Member>
    <Member MemberName="CameraDistance">
      <MemberSignature Language="C#" Value="public virtual float CameraDistance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 CameraDistance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCameraDistance", "()F", "GetGetCameraDistanceHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the distance along the Z axis from the camera to this view.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Views.View.SetCameraDistance(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="CancelLongPress">
      <MemberSignature Language="C#" Value="public virtual void CancelLongPress ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelLongPress() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("cancelLongPress", "()V", "GetCancelLongPressHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancels a pending long press.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CancelPendingInputEvents">
      <MemberSignature Language="C#" Value="public void CancelPendingInputEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelPendingInputEvents() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("cancelPendingInputEvents", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancel any deferred high-level input events that were previously posted to the event queue.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CanResolveLayoutDirection">
      <MemberSignature Language="C#" Value="public virtual bool CanResolveLayoutDirection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanResolveLayoutDirection() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("canResolveLayoutDirection", "()Z", "GetCanResolveLayoutDirectionHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Check if layout direction resolution can be done.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CanResolveTextAlignment">
      <MemberSignature Language="C#" Value="public virtual bool CanResolveTextAlignment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanResolveTextAlignment() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("canResolveTextAlignment", "()Z", "GetCanResolveTextAlignmentHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Check if text alignment resolution can be done.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CanResolveTextDirection">
      <MemberSignature Language="C#" Value="public virtual bool CanResolveTextDirection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanResolveTextDirection() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("canResolveTextDirection", "()Z", "GetCanResolveTextDirectionHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Check if text direction resolution can be done.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CanScrollHorizontally">
      <MemberSignature Language="C#" Value="public virtual bool CanScrollHorizontally (Android.Views.FocusSearchDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanScrollHorizontally(valuetype Android.Views.FocusSearchDirection direction) cil managed" />
      <MemberType>Method</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("canScrollHorizontally", "(I)Z", "GetCanScrollHorizontally_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="Android.Views.FocusSearchDirection">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="direction">Negative to check scrolling left, positive to check scrolling right.</param>
        <summary>Check if this view can be scrolled horizontally in a certain direction.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="CanScrollHorizontally">
      <MemberSignature Language="C#" Value="public virtual bool CanScrollHorizontally (int direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanScrollHorizontally(int32 direction) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("canScrollHorizontally", "(I)Z", "GetCanScrollHorizontally_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="direction">Negative to check scrolling left, positive to check scrolling right.</param>
        <summary>Check if this view can be scrolled horizontally in a certain direction.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CanScrollVertically">
      <MemberSignature Language="C#" Value="public virtual bool CanScrollVertically (Android.Views.FocusSearchDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanScrollVertically(valuetype Android.Views.FocusSearchDirection direction) cil managed" />
      <MemberType>Method</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("canScrollVertically", "(I)Z", "GetCanScrollVertically_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="Android.Views.FocusSearchDirection">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="direction">Negative to check scrolling up, positive to check scrolling down.</param>
        <summary>Check if this view can be scrolled vertically in a certain direction.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="CanScrollVertically">
      <MemberSignature Language="C#" Value="public virtual bool CanScrollVertically (int direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanScrollVertically(int32 direction) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("canScrollVertically", "(I)Z", "GetCanScrollVertically_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="direction">Negative to check scrolling up, positive to check scrolling down.</param>
        <summary>Check if this view can be scrolled vertically in a certain direction.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CheckInputConnectionProxy">
      <MemberSignature Language="C#" Value="public virtual bool CheckInputConnectionProxy (Android.Views.View view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckInputConnectionProxy(class Android.Views.View view) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("checkInputConnectionProxy", "(Landroid/view/View;)Z", "GetCheckInputConnectionProxy_Landroid_view_View_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="view">The View that is making the InputMethodManager call.</param>
        <summary>Called by the <c><see cref="T:Android.Views.InputMethods.InputMethodManager" /></c>
 when a view who is not the current
 input connection target is trying to make a call on the manager.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ClearAnimation">
      <MemberSignature Language="C#" Value="public virtual void ClearAnimation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearAnimation() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearAnimation", "()V", "GetClearAnimationHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancels any animations for this view.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ClearFocus">
      <MemberSignature Language="C#" Value="public virtual void ClearFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearFocus() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearFocus", "()V", "GetClearFocusHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when this view wants to give up focus.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Clickable">
      <MemberSignature Language="C#" Value="public virtual bool Clickable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Clickable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isClickable", "()Z", "GetIsClickableHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setClickable", "(Z)V", "GetSetClickable_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this view reacts to click events or not.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.Clickable" />
        <altmember cref="P:Android.Views.View.Clickable" />
      </Docs>
    </Member>
    <Member MemberName="ClipBounds">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Rect ClipBounds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Rect ClipBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getClipBounds", "()Landroid/graphics/Rect;", "GetGetClipBoundsHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setClipBounds", "(Landroid/graphics/Rect;)V", "GetSetClipBounds_Landroid_graphics_Rect_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a copy of the current <c><see cref="P:Android.Views.View.ClipBounds" /></c>.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="ClipToOutline">
      <MemberSignature Language="C#" Value="public bool ClipToOutline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ClipToOutline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getClipToOutline", "()Z", "GetGetClipToOutlineHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setClipToOutline", "(Z)V", "GetSetClipToOutline_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether the Outline should be used to clip the contents of the View.</summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Views.View.OutlineProvider" />
        <altmember cref="P:Android.Views.View.ClipToOutline" />
        <altmember cref="P:Android.Views.View.OutlineProvider" />
        <altmember cref="P:Android.Views.View.ClipToOutline" />
      </Docs>
    </Member>
    <Member MemberName="CombineMeasuredStates">
      <MemberSignature Language="C#" Value="public static int CombineMeasuredStates (int curState, int newState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CombineMeasuredStates(int32 curState, int32 newState) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("combineMeasuredStates", "(II)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="curState" Type="System.Int32" />
        <Parameter Name="newState" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="curState">The current state as returned from a view or the result
 of combining multiple views.</param>
        <param name="newState">The new view state to combine.</param>
        <summary>Merge two states as returned by <c><see cref="P:Android.Views.View.MeasuredState" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="ComputeHorizontalScrollExtent">
      <MemberSignature Language="C#" Value="protected virtual int ComputeHorizontalScrollExtent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ComputeHorizontalScrollExtent() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("computeHorizontalScrollExtent", "()I", "GetComputeHorizontalScrollExtentHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">
        </summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.ComputeHorizontalScrollRange" />
        <altmember cref="M:Android.Views.View.ComputeHorizontalScrollOffset" />
      </Docs>
    </Member>
    <Member MemberName="ComputeHorizontalScrollOffset">
      <MemberSignature Language="C#" Value="protected virtual int ComputeHorizontalScrollOffset ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ComputeHorizontalScrollOffset() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("computeHorizontalScrollOffset", "()I", "GetComputeHorizontalScrollOffsetHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">
        </summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.ComputeHorizontalScrollRange" />
        <altmember cref="M:Android.Views.View.ComputeHorizontalScrollExtent" />
      </Docs>
    </Member>
    <Member MemberName="ComputeHorizontalScrollRange">
      <MemberSignature Language="C#" Value="protected virtual int ComputeHorizontalScrollRange ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ComputeHorizontalScrollRange() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("computeHorizontalScrollRange", "()I", "GetComputeHorizontalScrollRangeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.ComputeHorizontalScrollExtent" />
        <altmember cref="M:Android.Views.View.ComputeHorizontalScrollOffset" />
      </Docs>
    </Member>
    <Member MemberName="ComputeScroll">
      <MemberSignature Language="C#" Value="public virtual void ComputeScroll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComputeScroll() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("computeScroll", "()V", "GetComputeScrollHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called by a parent to request that a child update its values for mScrollX
 and mScrollY if necessary.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ComputeSystemWindowInsets">
      <MemberSignature Language="C#" Value="public virtual Android.Views.WindowInsets ComputeSystemWindowInsets (Android.Views.WindowInsets in, Android.Graphics.Rect outLocalInsets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.WindowInsets ComputeSystemWindowInsets(class Android.Views.WindowInsets in, class Android.Graphics.Rect outLocalInsets) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("computeSystemWindowInsets", "(Landroid/view/WindowInsets;Landroid/graphics/Rect;)Landroid/view/WindowInsets;", "GetComputeSystemWindowInsets_Landroid_view_WindowInsets_Landroid_graphics_Rect_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowInsets</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="in" Type="Android.Views.WindowInsets" />
        <Parameter Name="outLocalInsets" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="in">Insets currently being processed by this View, likely received as a parameter
           to <c><see cref="M:Android.Views.View.OnApplyWindowInsets(Android.Views.WindowInsets)" /></c>.</param>
        <param name="outLocalInsets">A Rect that will receive the insets that should be consumed
                       by this view</param>
        <summary>Compute insets that should be consumed by this view and the ones that should propagate
 to those under it.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ComputeVerticalScrollExtent">
      <MemberSignature Language="C#" Value="protected virtual int ComputeVerticalScrollExtent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ComputeVerticalScrollExtent() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("computeVerticalScrollExtent", "()I", "GetComputeVerticalScrollExtentHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">
        </summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.ComputeVerticalScrollRange" />
        <altmember cref="M:Android.Views.View.ComputeVerticalScrollOffset" />
      </Docs>
    </Member>
    <Member MemberName="ComputeVerticalScrollOffset">
      <MemberSignature Language="C#" Value="protected virtual int ComputeVerticalScrollOffset ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ComputeVerticalScrollOffset() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("computeVerticalScrollOffset", "()I", "GetComputeVerticalScrollOffsetHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">
        </summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.ComputeVerticalScrollRange" />
        <altmember cref="M:Android.Views.View.ComputeVerticalScrollExtent" />
      </Docs>
    </Member>
    <Member MemberName="ComputeVerticalScrollRange">
      <MemberSignature Language="C#" Value="protected virtual int ComputeVerticalScrollRange ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ComputeVerticalScrollRange() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("computeVerticalScrollRange", "()I", "GetComputeVerticalScrollRangeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.ComputeVerticalScrollExtent" />
        <altmember cref="M:Android.Views.View.ComputeVerticalScrollOffset" />
      </Docs>
    </Member>
    <Member MemberName="ContentDescription">
      <MemberSignature Language="C#" Value="public string ContentDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ContentDescriptionFormatted">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence ContentDescriptionFormatted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ICharSequence ContentDescriptionFormatted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getContentDescription", "()Ljava/lang/CharSequence;", "GetGetContentDescriptionHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setContentDescription", "(Ljava/lang/CharSequence;)V", "GetSetContentDescription_Ljava_lang_CharSequence_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <c><see cref="T:Android.Views.View" /></c> description.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public Android.Content.Context Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.Context Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getContext", "()Landroid/content/Context;", "GetGetContextHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Context</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the context the view is running in, through which it can
 access the current theme, resources, etc.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenuCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.View.CreateContextMenuEventArgs&gt; ContextMenuCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.View/CreateContextMenuEventArgs&gt; ContextMenuCreated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.View+CreateContextMenuEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ContextMenuInfo">
      <MemberSignature Language="C#" Value="protected virtual Android.Views.IContextMenuContextMenuInfo ContextMenuInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.IContextMenuContextMenuInfo ContextMenuInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getContextMenuInfo", "()Landroid/view/ContextMenu$ContextMenuInfo;", "GetGetContextMenuInfoHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.IContextMenuContextMenuInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Views should implement this if they have extra information to associate
 with the context menu.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityNodeInfo">
      <MemberSignature Language="C#" Value="public virtual Android.Views.Accessibility.AccessibilityNodeInfo CreateAccessibilityNodeInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.Accessibility.AccessibilityNodeInfo CreateAccessibilityNodeInfo() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createAccessibilityNodeInfo", "()Landroid/view/accessibility/AccessibilityNodeInfo;", "GetCreateAccessibilityNodeInfoHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Accessibility.AccessibilityNodeInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an <c><see cref="T:Android.Views.Accessibility.AccessibilityNodeInfo" /></c> representing this view from the
 point of view of an <c><see cref="T:Android.AccessibilityServices.AccessibilityService" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 14" />
        <altmember cref="T:Android.Views.Accessibility.AccessibilityNodeInfo" />
      </Docs>
    </Member>
    <Member MemberName="CreateContextMenu">
      <MemberSignature Language="C#" Value="public virtual void CreateContextMenu (Android.Views.IContextMenu menu);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateContextMenu(class Android.Views.IContextMenu menu) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createContextMenu", "(Landroid/view/ContextMenu;)V", "GetCreateContextMenu_Landroid_view_ContextMenu_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menu" Type="Android.Views.IContextMenu" />
      </Parameters>
      <Docs>
        <param name="menu">The context menu to populate
</param>
        <summary>Show the context menu for this view.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DestroyDrawingCache">
      <MemberSignature Language="C#" Value="public virtual void DestroyDrawingCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DestroyDrawingCache() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("destroyDrawingCache", "()V", "GetDestroyDrawingCacheHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">
        </summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.DrawingCacheEnabled" />
        <altmember cref="M:Android.Views.View.BuildDrawingCache" />
        <altmember cref="P:Android.Views.View.DrawingCache" />
      </Docs>
    </Member>
    <Member MemberName="DispatchApplyWindowInsets">
      <MemberSignature Language="C#" Value="public virtual Android.Views.WindowInsets DispatchApplyWindowInsets (Android.Views.WindowInsets insets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.WindowInsets DispatchApplyWindowInsets(class Android.Views.WindowInsets insets) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchApplyWindowInsets", "(Landroid/view/WindowInsets;)Landroid/view/WindowInsets;", "GetDispatchApplyWindowInsets_Landroid_view_WindowInsets_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowInsets</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="insets" Type="Android.Views.WindowInsets" />
      </Parameters>
      <Docs>
        <param name="insets">Insets to apply</param>
        <summary>Request to apply the given window insets to this view or another view in its subtree.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="DispatchConfigurationChanged">
      <MemberSignature Language="C#" Value="public virtual void DispatchConfigurationChanged (Android.Content.Res.Configuration newConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DispatchConfigurationChanged(class Android.Content.Res.Configuration newConfig) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchConfigurationChanged", "(Landroid/content/res/Configuration;)V", "GetDispatchConfigurationChanged_Landroid_content_res_Configuration_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newConfig" Type="Android.Content.Res.Configuration" />
      </Parameters>
      <Docs>
        <param name="newConfig">The new resource configuration.</param>
        <summary>Dispatch a notification about a resource configuration change down
 the view hierarchy.</summary>
        <remarks />
        <since version="Added in API level 8" />
        <altmember cref="M:Android.Views.View.OnConfigurationChanged(Android.Content.Res.Configuration)" />
      </Docs>
    </Member>
    <Member MemberName="DispatchDisplayHint">
      <MemberSignature Language="C#" Value="public virtual void DispatchDisplayHint (Android.Views.ViewStates hint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DispatchDisplayHint(valuetype Android.Views.ViewStates hint) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchDisplayHint", "(I)V", "GetDispatchDisplayHint_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hint" Type="Android.Views.ViewStates">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="hint">A hint about whether or not this view is displayed:
 <c><see cref="T:Android.Views.ViewStates.Visible" tool="ReplaceLinkValue" /></c> or <c><see cref="F:Android.Views.ViewStates.Invisible" tool="ReplaceLinkValue" /></c>.
</param>
        <summary>Dispatch a hint about whether this view is displayed.</summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DispatchDragEvent">
      <MemberSignature Language="C#" Value="public virtual bool DispatchDragEvent (Android.Views.DragEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchDragEvent(class Android.Views.DragEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchDragEvent", "(Landroid/view/DragEvent;)Z", "GetDispatchDragEvent_Landroid_view_DragEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.DragEvent" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>Detects if this View is enabled and has a drag event listener.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="DispatchDraw">
      <MemberSignature Language="C#" Value="protected virtual void DispatchDraw (Android.Graphics.Canvas canvas);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DispatchDraw(class Android.Graphics.Canvas canvas) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchDraw", "(Landroid/graphics/Canvas;)V", "GetDispatchDraw_Landroid_graphics_Canvas_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
      </Parameters>
      <Docs>
        <param name="canvas">the canvas on which to draw the view
</param>
        <summary>Called by draw to draw the child views.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DispatchGenericFocusedEvent">
      <MemberSignature Language="C#" Value="protected virtual bool DispatchGenericFocusedEvent (Android.Views.MotionEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool DispatchGenericFocusedEvent(class Android.Views.MotionEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchGenericFocusedEvent", "(Landroid/view/MotionEvent;)Z", "GetDispatchGenericFocusedEvent_Landroid_view_MotionEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">The motion event to be dispatched.</param>
        <summary>Dispatch a generic motion event to the currently focused view.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="DispatchGenericMotionEvent">
      <MemberSignature Language="C#" Value="public virtual bool DispatchGenericMotionEvent (Android.Views.MotionEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchGenericMotionEvent(class Android.Views.MotionEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchGenericMotionEvent", "(Landroid/view/MotionEvent;)Z", "GetDispatchGenericMotionEvent_Landroid_view_MotionEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">The motion event to be dispatched.</param>
        <summary>Dispatch a generic motion event.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="DispatchGenericPointerEvent">
      <MemberSignature Language="C#" Value="protected virtual bool DispatchGenericPointerEvent (Android.Views.MotionEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool DispatchGenericPointerEvent(class Android.Views.MotionEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchGenericPointerEvent", "(Landroid/view/MotionEvent;)Z", "GetDispatchGenericPointerEvent_Landroid_view_MotionEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">The motion event to be dispatched.</param>
        <summary>Dispatch a generic motion event to the view under the first pointer.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="DispatchHoverEvent">
      <MemberSignature Language="C#" Value="protected virtual bool DispatchHoverEvent (Android.Views.MotionEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool DispatchHoverEvent(class Android.Views.MotionEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchHoverEvent", "(Landroid/view/MotionEvent;)Z", "GetDispatchHoverEvent_Landroid_view_MotionEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">The motion event to be dispatched.</param>
        <summary>Dispatch a hover event.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="DispatchKeyEvent">
      <MemberSignature Language="C#" Value="public virtual bool DispatchKeyEvent (Android.Views.KeyEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchKeyEvent(class Android.Views.KeyEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchKeyEvent", "(Landroid/view/KeyEvent;)Z", "GetDispatchKeyEvent_Landroid_view_KeyEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="e">The key event to be dispatched.</param>
        <summary>Dispatch a key event to the next view on the focus path.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DispatchKeyEventPreIme">
      <MemberSignature Language="C#" Value="public virtual bool DispatchKeyEventPreIme (Android.Views.KeyEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchKeyEventPreIme(class Android.Views.KeyEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchKeyEventPreIme", "(Landroid/view/KeyEvent;)Z", "GetDispatchKeyEventPreIme_Landroid_view_KeyEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="e">The key event to be dispatched.</param>
        <summary>Dispatch a key event before it is processed by any input method
 associated with the view hierarchy.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="DispatchKeyShortcutEvent">
      <MemberSignature Language="C#" Value="public virtual bool DispatchKeyShortcutEvent (Android.Views.KeyEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchKeyShortcutEvent(class Android.Views.KeyEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchKeyShortcutEvent", "(Landroid/view/KeyEvent;)Z", "GetDispatchKeyShortcutEvent_Landroid_view_KeyEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="e">The key event to be dispatched.</param>
        <summary>Dispatches a key shortcut event.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DispatchNestedFling">
      <MemberSignature Language="C#" Value="public virtual bool DispatchNestedFling (float velocityX, float velocityY, bool consumed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchNestedFling(float32 velocityX, float32 velocityY, bool consumed) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchNestedFling", "(FFZ)Z", "GetDispatchNestedFling_FFZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="velocityX" Type="System.Single" />
        <Parameter Name="velocityY" Type="System.Single" />
        <Parameter Name="consumed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="velocityX">Horizontal fling velocity in pixels per second</param>
        <param name="velocityY">Vertical fling velocity in pixels per second</param>
        <param name="consumed">true if the child consumed the fling, false otherwise</param>
        <summary>Dispatch a fling to a nested scrolling parent.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="DispatchNestedPreFling">
      <MemberSignature Language="C#" Value="public virtual bool DispatchNestedPreFling (float velocityX, float velocityY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchNestedPreFling(float32 velocityX, float32 velocityY) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchNestedPreFling", "(FF)Z", "GetDispatchNestedPreFling_FFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="velocityX" Type="System.Single" />
        <Parameter Name="velocityY" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="velocityX">Horizontal fling velocity in pixels per second</param>
        <param name="velocityY">Vertical fling velocity in pixels per second</param>
        <summary>Dispatch a fling to a nested scrolling parent before it is processed by this view.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="DispatchNestedPreScroll">
      <MemberSignature Language="C#" Value="public virtual bool DispatchNestedPreScroll (int dx, int dy, int[] consumed, int[] offsetInWindow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchNestedPreScroll(int32 dx, int32 dy, int32[] consumed, int32[] offsetInWindow) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchNestedPreScroll", "(II[I[I)Z", "GetDispatchNestedPreScroll_IIarrayIarrayIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Int32" />
        <Parameter Name="dy" Type="System.Int32" />
        <Parameter Name="consumed" Type="System.Int32[]" />
        <Parameter Name="offsetInWindow" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="dx">Horizontal scroll distance in pixels</param>
        <param name="dy">Vertical scroll distance in pixels</param>
        <param name="consumed">Output. If not null, consumed[0] will contain the consumed component of dx
                 and consumed[1] the consumed dy.</param>
        <param name="offsetInWindow">Optional. If not null, on return this will contain the offset
                       in local view coordinates of this view from before this operation
                       to after it completes. View implementations may use this to adjust
                       expected input coordinate tracking.</param>
        <summary>Dispatch one step of a nested scroll in progress before this view consumes any portion of it.</summary>
        <returns>To be added.</returns>
        <remarks />
        <altmember cref="M:Android.Views.View.DispatchNestedScroll(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="DispatchNestedScroll">
      <MemberSignature Language="C#" Value="public virtual bool DispatchNestedScroll (int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, int[] offsetInWindow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchNestedScroll(int32 dxConsumed, int32 dyConsumed, int32 dxUnconsumed, int32 dyUnconsumed, int32[] offsetInWindow) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchNestedScroll", "(IIII[I)Z", "GetDispatchNestedScroll_IIIIarrayIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dxConsumed" Type="System.Int32" />
        <Parameter Name="dyConsumed" Type="System.Int32" />
        <Parameter Name="dxUnconsumed" Type="System.Int32" />
        <Parameter Name="dyUnconsumed" Type="System.Int32" />
        <Parameter Name="offsetInWindow" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="dxConsumed">Horizontal distance in pixels consumed by this view during this scroll step</param>
        <param name="dyConsumed">Vertical distance in pixels consumed by this view during this scroll step</param>
        <param name="dxUnconsumed">Horizontal scroll distance in pixels not consumed by this view</param>
        <param name="dyUnconsumed">Horizontal scroll distance in pixels not consumed by this view</param>
        <param name="offsetInWindow">Optional. If not null, on return this will contain the offset
                       in local view coordinates of this view from before this operation
                       to after it completes. View implementations may use this to adjust
                       expected input coordinate tracking.</param>
        <summary>Dispatch one step of a nested scroll in progress.</summary>
        <returns>To be added.</returns>
        <remarks />
        <altmember cref="M:Android.Views.View.DispatchNestedPreScroll(System.Int32, System.Int32, System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="DispatchPopulateAccessibilityEvent">
      <MemberSignature Language="C#" Value="public virtual bool DispatchPopulateAccessibilityEvent (Android.Views.Accessibility.AccessibilityEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchPopulateAccessibilityEvent(class Android.Views.Accessibility.AccessibilityEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchPopulateAccessibilityEvent", "(Landroid/view/accessibility/AccessibilityEvent;)Z", "GetDispatchPopulateAccessibilityEvent_Landroid_view_accessibility_AccessibilityEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.Accessibility.AccessibilityEvent" />
      </Parameters>
      <Docs>
        <param name="e">The event.</param>
        <summary>Dispatches an <c><see cref="T:Android.Views.Accessibility.AccessibilityEvent" /></c> to the <c><see cref="T:Android.Views.View" /></c> first and then
 to its children for adding their text content to the event.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="DispatchRestoreInstanceState">
      <MemberSignature Language="C#" Value="protected virtual void DispatchRestoreInstanceState (Android.Util.SparseArray container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DispatchRestoreInstanceState(class Android.Util.SparseArray container) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchRestoreInstanceState", "(Landroid/util/SparseArray;)V", "GetDispatchRestoreInstanceState_Landroid_util_SparseArray_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="Android.Util.SparseArray" />
      </Parameters>
      <Docs>
        <param name="container">To be added.</param>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="DispatchSaveInstanceState">
      <MemberSignature Language="C#" Value="protected virtual void DispatchSaveInstanceState (Android.Util.SparseArray container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DispatchSaveInstanceState(class Android.Util.SparseArray container) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchSaveInstanceState", "(Landroid/util/SparseArray;)V", "GetDispatchSaveInstanceState_Landroid_util_SparseArray_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="Android.Util.SparseArray" />
      </Parameters>
      <Docs>
        <param name="container">To be added.</param>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="DispatchSetActivated">
      <MemberSignature Language="C#" Value="protected virtual void DispatchSetActivated (bool activated);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DispatchSetActivated(bool activated) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchSetActivated", "(Z)V", "GetDispatchSetActivated_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="activated">The new activated state
</param>
        <summary>Dispatch setActivated to all of this View's children.</summary>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="P:Android.Views.View.Activated" />
      </Docs>
    </Member>
    <Member MemberName="DispatchSetPressed">
      <MemberSignature Language="C#" Value="protected virtual void DispatchSetPressed (bool pressed);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DispatchSetPressed(bool pressed) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchSetPressed", "(Z)V", "GetDispatchSetPressed_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pressed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pressed">The new pressed state
</param>
        <summary>Dispatch setPressed to all of this View's children.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.Pressed" />
      </Docs>
    </Member>
    <Member MemberName="DispatchSetSelected">
      <MemberSignature Language="C#" Value="protected virtual void DispatchSetSelected (bool selected);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DispatchSetSelected(bool selected) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchSetSelected", "(Z)V", "GetDispatchSetSelected_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selected" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="selected">The new selected state
</param>
        <summary>Dispatch setSelected to all of this View's children.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.Selected" />
      </Docs>
    </Member>
    <Member MemberName="DispatchSystemUiVisibilityChanged">
      <MemberSignature Language="C#" Value="public virtual void DispatchSystemUiVisibilityChanged (Android.Views.SystemUiFlags visibility);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DispatchSystemUiVisibilityChanged(valuetype Android.Views.SystemUiFlags visibility) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchSystemUiVisibilityChanged", "(I)V", "GetDispatchSystemUiVisibilityChanged_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visibility" Type="Android.Views.SystemUiFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="visibility">To be added.</param>
        <summary>Dispatch callbacks to <c><see cref="M:Android.Views.View.SetOnSystemUiVisibilityChangeListener(.IOnSystemUiVisibilityChangeListener)" /></c> down
 the view hierarchy.</summary>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="DispatchSystemUiVisibilityChanged">
      <MemberSignature Language="C#" Value="public void DispatchSystemUiVisibilityChanged (int visibility);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DispatchSystemUiVisibilityChanged(int32 visibility) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visibility" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="visibility">To be added.</param>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="DispatchTouchEvent">
      <MemberSignature Language="C#" Value="public virtual bool DispatchTouchEvent (Android.Views.MotionEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchTouchEvent(class Android.Views.MotionEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchTouchEvent", "(Landroid/view/MotionEvent;)Z", "GetDispatchTouchEvent_Landroid_view_MotionEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">The motion event to be dispatched.</param>
        <summary>Pass the touch screen motion event down to the target view, or this
 view if it is the target.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DispatchTrackballEvent">
      <MemberSignature Language="C#" Value="public virtual bool DispatchTrackballEvent (Android.Views.MotionEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchTrackballEvent(class Android.Views.MotionEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchTrackballEvent", "(Landroid/view/MotionEvent;)Z", "GetDispatchTrackballEvent_Landroid_view_MotionEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">The motion event to be dispatched.</param>
        <summary>Pass a trackball motion event down to the focused view.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DispatchUnhandledMove">
      <MemberSignature Language="C#" Value="public virtual bool DispatchUnhandledMove (Android.Views.View focused, Android.Views.FocusSearchDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchUnhandledMove(class Android.Views.View focused, valuetype Android.Views.FocusSearchDirection direction) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchUnhandledMove", "(Landroid/view/View;I)Z", "GetDispatchUnhandledMove_Landroid_view_View_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focused" Type="Android.Views.View" />
        <Parameter Name="direction" Type="Android.Views.FocusSearchDirection">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="focused">The currently focused view.</param>
        <param name="direction">The direction focus wants to move. One of FOCUS_UP,
        FOCUS_DOWN, FOCUS_LEFT, and FOCUS_RIGHT.</param>
        <summary>This method is the last chance for the focused view and its ancestors to
 respond to an arrow key.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DispatchVisibilityChanged">
      <MemberSignature Language="C#" Value="protected virtual void DispatchVisibilityChanged (Android.Views.View changedView, Android.Views.ViewStates visibility);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DispatchVisibilityChanged(class Android.Views.View changedView, valuetype Android.Views.ViewStates visibility) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchVisibilityChanged", "(Landroid/view/View;I)V", "GetDispatchVisibilityChanged_Landroid_view_View_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changedView" Type="Android.Views.View" />
        <Parameter Name="visibility" Type="Android.Views.ViewStates">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="changedView">The view whose visibility changed. Could be 'this' or
 an ancestor view.</param>
        <param name="visibility">The new visibility of changedView: <c><see cref="T:Android.Views.ViewStates.Visible" tool="ReplaceLinkValue" /></c>,
 <c><see cref="F:Android.Views.ViewStates.Invisible" tool="ReplaceLinkValue" /></c> or <c><see cref="F:Android.Views.ViewStates.Gone" tool="ReplaceLinkValue" /></c>.
</param>
        <summary>Dispatch a view visibility change down the view hierarchy.</summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DispatchWindowFocusChanged">
      <MemberSignature Language="C#" Value="public virtual void DispatchWindowFocusChanged (bool hasFocus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DispatchWindowFocusChanged(bool hasFocus) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchWindowFocusChanged", "(Z)V", "GetDispatchWindowFocusChanged_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hasFocus" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="hasFocus">True if the window containing this view now has focus,
        false otherwise.
</param>
        <summary>Called when the window containing this view gains or loses window focus.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DispatchWindowSystemUiVisiblityChanged">
      <MemberSignature Language="C#" Value="public virtual void DispatchWindowSystemUiVisiblityChanged (Android.Views.SystemUiFlags visible);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DispatchWindowSystemUiVisiblityChanged(valuetype Android.Views.SystemUiFlags visible) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchWindowSystemUiVisiblityChanged", "(I)V", "GetDispatchWindowSystemUiVisiblityChanged_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visible" Type="Android.Views.SystemUiFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="visible">To be added.</param>
        <summary>Dispatch callbacks to <c><see cref="M:Android.Views.View.OnWindowSystemUiVisibilityChanged(Android.Views.SystemUiFlags)" /></c> down
 the view hierarchy.</summary>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="DispatchWindowVisibilityChanged">
      <MemberSignature Language="C#" Value="public virtual void DispatchWindowVisibilityChanged (Android.Views.ViewStates visibility);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DispatchWindowVisibilityChanged(valuetype Android.Views.ViewStates visibility) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchWindowVisibilityChanged", "(I)V", "GetDispatchWindowVisibilityChanged_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visibility" Type="Android.Views.ViewStates">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="visibility">The new visibility of the window.</param>
        <summary>Dispatch a window visibility change down the view hierarchy.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.OnWindowVisibilityChanged(Android.Views.ViewStates)" />
      </Docs>
    </Member>
    <Member MemberName="Display">
      <MemberSignature Language="C#" Value="public virtual Android.Views.Display Display { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.Display Display" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDisplay", "()Landroid/view/Display;", "GetGetDisplayHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Display</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the logical display to which the view's window has been attached.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="Drag">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.View.DragEventArgs&gt; Drag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.View/DragEventArgs&gt; Drag" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.View+DragEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public virtual void Draw (Android.Graphics.Canvas canvas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Draw(class Android.Graphics.Canvas canvas) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("draw", "(Landroid/graphics/Canvas;)V", "GetDraw_Landroid_graphics_Canvas_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
      </Parameters>
      <Docs>
        <param name="canvas">The Canvas to which the View is rendered.
</param>
        <summary>Manually render this view (and all of its children) to the given Canvas.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DrawableHotspotChanged">
      <MemberSignature Language="C#" Value="public virtual void DrawableHotspotChanged (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawableHotspotChanged(float32 x, float32 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("drawableHotspotChanged", "(FF)V", "GetDrawableHotspotChanged_FFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">hotspot x coordinate</param>
        <param name="y">hotspot y coordinate
</param>
        <summary>This function is called whenever the view hotspot changes and needs to
 be propagated to drawables or child views managed by the view.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="DrawableStateChanged">
      <MemberSignature Language="C#" Value="protected virtual void DrawableStateChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DrawableStateChanged() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("drawableStateChanged", "()V", "GetDrawableStateChangedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This function is called whenever the state of the view changes in such
 a way that it impacts the state of drawables being shown.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetState(System.Int32[])" />
      </Docs>
    </Member>
    <Member MemberName="DrawingCache">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Bitmap DrawingCache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Bitmap DrawingCache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDrawingCache", "()Landroid/graphics/Bitmap;", "GetGetDrawingCacheHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
        </summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.GetDrawingCache(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="DrawingCacheBackgroundColor">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Color DrawingCacheBackgroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Graphics.Color DrawingCacheBackgroundColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDrawingCacheBackgroundColor", "()I", "GetGetDrawingCacheBackgroundColorHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setDrawingCacheBackgroundColor", "(I)V", "GetSetDrawingCacheBackgroundColor_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.DrawingCacheBackgroundColor" />
        <altmember cref="P:Android.Views.View.DrawingCacheEnabled" />
        <altmember cref="M:Android.Views.View.BuildDrawingCache" />
        <altmember cref="P:Android.Views.View.DrawingCache" />
      </Docs>
    </Member>
    <Member MemberName="DrawingCacheEnabled">
      <MemberSignature Language="C#" Value="public virtual bool DrawingCacheEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DrawingCacheEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isDrawingCacheEnabled", "()Z", "GetIsDrawingCacheEnabledHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setDrawingCacheEnabled", "(Z)V", "GetSetDrawingCacheEnabled_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
        </summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.DrawingCacheEnabled" />
        <altmember cref="P:Android.Views.View.DrawingCache" />
        <altmember cref="P:Android.Views.View.DrawingCacheEnabled" />
        <altmember cref="P:Android.Views.View.DrawingCache" />
        <altmember cref="M:Android.Views.View.BuildDrawingCache" />
        <altmember cref="M:Android.Views.View.SetLayerType(Android.Views.LayerType, Android.Graphics.Paint)" />
      </Docs>
    </Member>
    <Member MemberName="DrawingCacheQuality">
      <MemberSignature Language="C#" Value="public virtual Android.Views.DrawingCacheQuality DrawingCacheQuality { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.DrawingCacheQuality DrawingCacheQuality" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDrawingCacheQuality", "()I", "GetGetDrawingCacheQualityHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setDrawingCacheQuality", "(I)V", "GetSetDrawingCacheQuality_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.DrawingCacheQuality</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the quality of the drawing cache.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.DrawingCacheQuality" />
        <altmember cref="P:Android.Views.View.DrawingCacheEnabled" />
        <altmember cref="P:Android.Views.View.DrawingCacheEnabled" />
        <altmember cref="P:Android.Views.View.DrawingCacheQuality" />
        <altmember cref="P:Android.Views.View.DrawingCacheEnabled" />
        <altmember cref="P:Android.Views.View.DrawingCacheEnabled" />
      </Docs>
    </Member>
    <Member MemberName="DrawingTime">
      <MemberSignature Language="C#" Value="public virtual long DrawingTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 DrawingTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDrawingTime", "()J", "GetGetDrawingTimeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
        </summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DuplicateParentStateEnabled">
      <MemberSignature Language="C#" Value="public virtual bool DuplicateParentStateEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DuplicateParentStateEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isDuplicateParentStateEnabled", "()Z", "GetIsDuplicateParentStateEnabledHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setDuplicateParentStateEnabled", "(Z)V", "GetSetDuplicateParentStateEnabled_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
        </summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.GetDrawableState" />
        <altmember cref="P:Android.Views.View.DuplicateParentStateEnabled" />
        <altmember cref="M:Android.Views.View.GetDrawableState" />
        <altmember cref="P:Android.Views.View.DuplicateParentStateEnabled" />
      </Docs>
    </Member>
    <Member MemberName="Elevation">
      <MemberSignature Language="C#" Value="public virtual float Elevation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Elevation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getElevation", "()F", "GetGetElevationHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setElevation", "(F)V", "GetSetElevation_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The base elevation of this view relative to its parent, in pixels.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="EmptyStateSet">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt; EmptyStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; EmptyStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EMPTY_STATE_SET")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view has no states set.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Graphics.Drawables.Drawable" />
        <altmember cref="M:Android.Views.View.GetDrawableState" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public virtual bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isEnabled", "()Z", "GetIsEnabledHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setEnabled", "(Z)V", "GetSetEnabled_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the enabled status for this view.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EnabledFocusedSelectedStateSet">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt; EnabledFocusedSelectedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; EnabledFocusedSelectedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ENABLED_FOCUSED_SELECTED_STATE_SET")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is enabled, focused and selected.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.EnabledStateSet" />
        <altmember cref="P:Android.Views.View.FocusedStateSet" />
        <altmember cref="P:Android.Views.View.SelectedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="EnabledFocusedSelectedWindowFocusedStateSet">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt; EnabledFocusedSelectedWindowFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; EnabledFocusedSelectedWindowFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is enabled, focused, selected and its window
 has the focus.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.EnabledStateSet" />
        <altmember cref="P:Android.Views.View.FocusedStateSet" />
        <altmember cref="P:Android.Views.View.SelectedStateSet" />
        <altmember cref="P:Android.Views.View.WindowFocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="EnabledFocusedStateSet">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt; EnabledFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; EnabledFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ENABLED_FOCUSED_STATE_SET")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is enabled and has the focus.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.EnabledStateSet" />
        <altmember cref="P:Android.Views.View.FocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="EnabledFocusedWindowFocusedStateSet">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt; EnabledFocusedWindowFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; EnabledFocusedWindowFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is enabled, focused and its window has the focus.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.EnabledStateSet" />
        <altmember cref="P:Android.Views.View.FocusedStateSet" />
        <altmember cref="P:Android.Views.View.WindowFocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="EnabledSelectedStateSet">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt; EnabledSelectedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; EnabledSelectedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ENABLED_SELECTED_STATE_SET")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is enabled and selected.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.EnabledStateSet" />
        <altmember cref="P:Android.Views.View.SelectedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="EnabledSelectedWindowFocusedStateSet">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt; EnabledSelectedWindowFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; EnabledSelectedWindowFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is enabled, selected and its window has the focus.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.EnabledStateSet" />
        <altmember cref="P:Android.Views.View.SelectedStateSet" />
        <altmember cref="P:Android.Views.View.WindowFocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="EnabledStateSet">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt; EnabledStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; EnabledStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ENABLED_STATE_SET")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is enabled.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Graphics.Drawables.Drawable" />
        <altmember cref="M:Android.Views.View.GetDrawableState" />
      </Docs>
    </Member>
    <Member MemberName="EnabledWindowFocusedStateSet">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt; EnabledWindowFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; EnabledWindowFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ENABLED_WINDOW_FOCUSED_STATE_SET")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is enabled and that its window has focus.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.EnabledStateSet" />
        <altmember cref="P:Android.Views.View.WindowFocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="FilterTouchesWhenObscured">
      <MemberSignature Language="C#" Value="public virtual bool FilterTouchesWhenObscured { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FilterTouchesWhenObscured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFilterTouchesWhenObscured", "()Z", "GetGetFilterTouchesWhenObscuredHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setFilterTouchesWhenObscured", "(Z)V", "GetSetFilterTouchesWhenObscured_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether the framework should discard touches when the view's
 window is obscured by another visible window.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 9" />
        <altmember cref="P:Android.Views.View.FilterTouchesWhenObscured" />
        <altmember cref="P:Android.Views.View.FilterTouchesWhenObscured" />
      </Docs>
    </Member>
    <Member MemberName="FindFocus">
      <MemberSignature Language="C#" Value="public virtual Android.Views.View FindFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.View FindFocus() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("findFocus", "()Landroid/view/View;", "GetFindFocusHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Find the view in the hierarchy rooted at this view that currently has
 focus.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FindViewById">
      <MemberSignature Language="C#" Value="public Android.Views.View FindViewById (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Views.View FindViewById(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("findViewById", "(I)Landroid/view/View;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">The id to search for.</param>
        <summary>Look for a child view with the given id.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FindViewById&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T FindViewById&lt;T&gt; (int id) where T : Android.Views.View;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T FindViewById&lt;(class Android.Views.View) T&gt;(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Android.Views.View</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="id">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FindViewsWithContentDescription">
      <MemberSignature Language="C#" Value="public const Android.Views.FindViewsWith FindViewsWithContentDescription = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.FindViewsWith FindViewsWithContentDescription = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FIND_VIEWS_WITH_CONTENT_DESCRIPTION")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.FindViewsWith enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.FindViewsWith</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Find find views that contain the specified content description.</summary>
        <remarks />
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="FindViewsWithText">
      <MemberSignature Language="C#" Value="public virtual void FindViewsWithText (System.Collections.Generic.IList&lt;Android.Views.View&gt; outViews, Java.Lang.ICharSequence searched, Android.Views.FindViewsWith flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FindViewsWithText(class System.Collections.Generic.IList`1&lt;class Android.Views.View&gt; outViews, class Java.Lang.ICharSequence searched, valuetype Android.Views.FindViewsWith flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("findViewsWithText", "(Ljava/util/ArrayList;Ljava/lang/CharSequence;I)V", "GetFindViewsWithText_Ljava_util_ArrayList_Ljava_lang_CharSequence_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outViews" Type="System.Collections.Generic.IList&lt;Android.Views.View&gt;" />
        <Parameter Name="searched" Type="Java.Lang.ICharSequence" />
        <Parameter Name="flags" Type="Android.Views.FindViewsWith">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="outViews">To be added.</param>
        <param name="searched">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FindViewsWithText">
      <MemberSignature Language="C#" Value="public void FindViewsWithText (System.Collections.Generic.IList&lt;Android.Views.View&gt; outViews, string searched, Android.Views.FindViewsWith flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FindViewsWithText(class System.Collections.Generic.IList`1&lt;class Android.Views.View&gt; outViews, string searched, valuetype Android.Views.FindViewsWith flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outViews" Type="System.Collections.Generic.IList&lt;Android.Views.View&gt;" />
        <Parameter Name="searched" Type="System.String" />
        <Parameter Name="flags" Type="Android.Views.FindViewsWith">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="outViews">To be added.</param>
        <param name="searched">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FindViewWithTag">
      <MemberSignature Language="C#" Value="public Android.Views.View FindViewWithTag (Java.Lang.Object tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Views.View FindViewWithTag(class Java.Lang.Object tag) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("findViewWithTag", "(Ljava/lang/Object;)Landroid/view/View;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="tag">The tag to search for, using "tag.equals(getTag())".</param>
        <summary>Look for a child view with the given tag.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FitsSystemWindows">
      <MemberSignature Language="C#" Value="public virtual bool FitsSystemWindows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FitsSystemWindows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFitsSystemWindows", "()Z", "GetGetFitsSystemWindowsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Check for state of <c><see cref="M:Android.Views.View.SetFitsSystemWindows(System.Boolean)" /></c>.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Views.View.SetFitsSystemWindows(System.Boolean)" />
        <altmember cref="M:Android.Views.View.FitSystemWindows(Android.Graphics.Rect)" />
        <altmember cref="P:Android.Views.View.SystemUiVisibility" />
      </Docs>
    </Member>
    <Member MemberName="FitSystemWindows">
      <MemberSignature Language="C#" Value="protected virtual bool FitSystemWindows (Android.Graphics.Rect insets);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool FitSystemWindows(class Android.Graphics.Rect insets) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("fitSystemWindows", "(Landroid/graphics/Rect;)Z", "GetFitSystemWindows_Landroid_graphics_Rect_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="insets" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="insets">Current content insets of the window.  Prior to
 <c><see cref="F:Android.OS.Build+VERSION.JellyBean" tool="ReplaceLinkValue" /></c> you must not modify
 the insets or else you and Android will be unhappy.</param>
        <summary>Called by the view hierarchy when the content insets for a window have
 changed, to allow it to adjust its content to fit within those windows.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.FitsSystemWindows" />
        <altmember cref="M:Android.Views.View.SetFitsSystemWindows(System.Boolean)" />
        <altmember cref="P:Android.Views.View.SystemUiVisibility" />
      </Docs>
    </Member>
    <Member MemberName="Focusable">
      <MemberSignature Language="C#" Value="public bool Focusable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focusable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isFocusable", "()Z", "GetIsFocusableHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setFocusable", "(Z)V", "GetSetFocusable_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether this View is able to take focus.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.FocusableInTouchMode" />
      </Docs>
    </Member>
    <Member MemberName="FocusableInTouchMode">
      <MemberSignature Language="C#" Value="public bool FocusableInTouchMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FocusableInTouchMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isFocusableInTouchMode", "()Z", "GetIsFocusableInTouchModeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setFocusableInTouchMode", "(Z)V", "GetSetFocusableInTouchMode_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When a view is focusable, it may not want to take focus when in touch mode.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="FocusChange">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.View.FocusChangeEventArgs&gt; FocusChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.View/FocusChangeEventArgs&gt; FocusChange" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.View+FocusChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FocusedSelectedStateSet">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt; FocusedSelectedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; FocusedSelectedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FOCUSED_SELECTED_STATE_SET")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is focused and selected.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.FocusedStateSet" />
        <altmember cref="P:Android.Views.View.SelectedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="FocusedSelectedWindowFocusedStateSet">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt; FocusedSelectedWindowFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; FocusedSelectedWindowFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is focused, selected and its window has the focus.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.FocusedStateSet" />
        <altmember cref="P:Android.Views.View.SelectedStateSet" />
        <altmember cref="P:Android.Views.View.WindowFocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="FocusedStateSet">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt; FocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; FocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FOCUSED_STATE_SET")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is focused.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Graphics.Drawables.Drawable" />
        <altmember cref="M:Android.Views.View.GetDrawableState" />
      </Docs>
    </Member>
    <Member MemberName="FocusedWindowFocusedStateSet">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt; FocusedWindowFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; FocusedWindowFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FOCUSED_WINDOW_FOCUSED_STATE_SET")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view has the focus and that its window has the focus.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.FocusedStateSet" />
        <altmember cref="P:Android.Views.View.WindowFocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="FocusSearch">
      <MemberSignature Language="C#" Value="public virtual Android.Views.View FocusSearch (Android.Views.FocusSearchDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.View FocusSearch(valuetype Android.Views.FocusSearchDirection direction) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("focusSearch", "(I)Landroid/view/View;", "GetFocusSearch_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="Android.Views.FocusSearchDirection">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="direction">One of FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, and FOCUS_RIGHT</param>
        <summary>Find the nearest view in the specified direction that can take focus.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ForceLayout">
      <MemberSignature Language="C#" Value="public virtual void ForceLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForceLayout() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("forceLayout", "()V", "GetForceLayoutHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Forces this view to be laid out during the next layout pass.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GenerateViewId">
      <MemberSignature Language="C#" Value="public static int GenerateViewId ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GenerateViewId() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("generateViewId", "()I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Generate a value suitable for use in <c><see cref="P:Android.Views.View.Id" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="GenericMotion">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.View.GenericMotionEventArgs&gt; GenericMotion;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.View/GenericMotionEventArgs&gt; GenericMotion" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.View+GenericMotionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultSize">
      <MemberSignature Language="C#" Value="public static int GetDefaultSize (int size, int measureSpec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDefaultSize(int32 size, int32 measureSpec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDefaultSize", "(II)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="measureSpec" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="size">Default size for this view</param>
        <param name="measureSpec">Constraints imposed by the parent</param>
        <summary>Utility to return a default size.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetDrawableState">
      <MemberSignature Language="C#" Value="public int[] GetDrawableState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] GetDrawableState() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDrawableState", "()[I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return an array of resource IDs of the drawable states representing the
 current state of the view.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetState(System.Int32[])" />
        <altmember cref="M:Android.Views.View.DrawableStateChanged" />
        <altmember cref="M:Android.Views.View.OnCreateDrawableState(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDrawingCache">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Bitmap GetDrawingCache (bool autoScale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Bitmap GetDrawingCache(bool autoScale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDrawingCache", "(Z)Landroid/graphics/Bitmap;", "GetGetDrawingCache_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoScale" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoScale">Indicates whether the generated bitmap should be scaled based on
        the current density of the screen when the application is in compatibility
        mode.</param>
        <summary tool="true">
        </summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 4" />
        <altmember cref="P:Android.Views.View.DrawingCacheEnabled" />
        <altmember cref="P:Android.Views.View.DrawingCacheEnabled" />
        <altmember cref="M:Android.Views.View.BuildDrawingCache(System.Boolean)" />
        <altmember cref="M:Android.Views.View.DestroyDrawingCache" />
      </Docs>
    </Member>
    <Member MemberName="GetDrawingRect">
      <MemberSignature Language="C#" Value="public virtual void GetDrawingRect (Android.Graphics.Rect outRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetDrawingRect(class Android.Graphics.Rect outRect) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDrawingRect", "(Landroid/graphics/Rect;)V", "GetGetDrawingRect_Landroid_graphics_Rect_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outRect" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="outRect">The (scrolled) drawing bounds of the view.
</param>
        <summary>Return the visible drawing bounds of your view.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetFocusables">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Views.View&gt; GetFocusables (Android.Views.FocusSearchDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.Views.View&gt; GetFocusables(valuetype Android.Views.FocusSearchDirection direction) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getFocusables", "(I)Ljava/util/ArrayList;", "GetGetFocusables_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Views.View&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="Android.Views.FocusSearchDirection">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="direction">The direction of the focus</param>
        <summary>Find and return all focusable views that are descendants of this view,
 possibly including this view if it is focusable itself.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetFocusedRect">
      <MemberSignature Language="C#" Value="public virtual void GetFocusedRect (Android.Graphics.Rect r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetFocusedRect(class Android.Graphics.Rect r) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getFocusedRect", "(Landroid/graphics/Rect;)V", "GetGetFocusedRect_Landroid_graphics_Rect_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="r">The rectangle to fill in, in this view's coordinates.
</param>
        <summary>When a view has focus and the user navigates away from it, the next view is searched for
 starting from the rectangle filled in by this method.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetGlobalVisibleRect">
      <MemberSignature Language="C#" Value="public bool GetGlobalVisibleRect (Android.Graphics.Rect r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetGlobalVisibleRect(class Android.Graphics.Rect r) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getGlobalVisibleRect", "(Landroid/graphics/Rect;)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <summary tool="true">
        </summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetGlobalVisibleRect">
      <MemberSignature Language="C#" Value="public virtual bool GetGlobalVisibleRect (Android.Graphics.Rect r, Android.Graphics.Point globalOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetGlobalVisibleRect(class Android.Graphics.Rect r, class Android.Graphics.Point globalOffset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getGlobalVisibleRect", "(Landroid/graphics/Rect;Landroid/graphics/Point;)Z", "GetGetGlobalVisibleRect_Landroid_graphics_Rect_Landroid_graphics_Point_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Graphics.Rect" />
        <Parameter Name="globalOffset" Type="Android.Graphics.Point" />
      </Parameters>
      <Docs>
        <param name="r">If true is returned, r holds the global coordinates of the
        visible portion of this view.</param>
        <param name="globalOffset">If true is returned, globalOffset holds the dx,dy
        between this view and its root. globalOffet may be null.</param>
        <summary>If some part of this view is not clipped by any of its parents, then
 return that area in r in global (root) coordinates.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetHitRect">
      <MemberSignature Language="C#" Value="public virtual void GetHitRect (Android.Graphics.Rect outRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetHitRect(class Android.Graphics.Rect outRect) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getHitRect", "(Landroid/graphics/Rect;)V", "GetGetHitRect_Landroid_graphics_Rect_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outRect" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="outRect">The hit rectangle of the view.
</param>
        <summary>Hit rectangle in parent's coordinates</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLocalVisibleRect">
      <MemberSignature Language="C#" Value="public bool GetLocalVisibleRect (Android.Graphics.Rect r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetLocalVisibleRect(class Android.Graphics.Rect r) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getLocalVisibleRect", "(Landroid/graphics/Rect;)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLocationInWindow">
      <MemberSignature Language="C#" Value="public virtual void GetLocationInWindow (int[] location);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetLocationInWindow(int32[] location) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getLocationInWindow", "([I)V", "GetGetLocationInWindow_arrayIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="location">an array of two integers in which to hold the coordinates
</param>
        <summary>
        </summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLocationOnScreen">
      <MemberSignature Language="C#" Value="public virtual void GetLocationOnScreen (int[] location);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetLocationOnScreen(int32[] location) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getLocationOnScreen", "([I)V", "GetGetLocationOnScreen_arrayIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="location">an array of two integers in which to hold the coordinates
</param>
        <summary>
        </summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetTag">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object GetTag (int key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object GetTag(int32 key) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getTag", "(I)Ljava/lang/Object;", "GetGetTag_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="key">The key identifying the tag</param>
        <summary>Returns the tag associated with this view and the specified key.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 4" />
        <altmember cref="M:Android.Views.View.SetTag(System.Int32, Java.Lang.Object)" />
        <altmember cref="P:Android.Views.View.Tag" />
      </Docs>
    </Member>
    <Member MemberName="GetWindowVisibleDisplayFrame">
      <MemberSignature Language="C#" Value="public virtual void GetWindowVisibleDisplayFrame (Android.Graphics.Rect outRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetWindowVisibleDisplayFrame(class Android.Graphics.Rect outRect) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getWindowVisibleDisplayFrame", "(Landroid/graphics/Rect;)V", "GetGetWindowVisibleDisplayFrame_Landroid_graphics_Rect_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outRect" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="outRect">Filled in with the visible display frame.  If the view
 is not attached to a window, this is simply the raw display size.
</param>
        <summary>Retrieve the overall visible display size in which the window this view is
 attached to has been positioned in.</summary>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="GetX">
      <MemberSignature Language="C#" Value="public virtual float GetX ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetX() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getX", "()F", "GetGetXHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The visual x position of this view, in pixels.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetY">
      <MemberSignature Language="C#" Value="public virtual float GetY ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetY() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getY", "()F", "GetGetYHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The visual y position of this view, in pixels.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetZ">
      <MemberSignature Language="C#" Value="public virtual float GetZ ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetZ() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getZ", "()F", "GetGetZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The visual z position of this view, in pixels.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Handler">
      <MemberSignature Language="C#" Value="public virtual Android.OS.Handler Handler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.OS.Handler Handler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getHandler", "()Landroid/os/Handler;", "GetGetHandlerHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Handler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HapticFeedbackEnabled">
      <MemberSignature Language="C#" Value="public virtual bool HapticFeedbackEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HapticFeedbackEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isHapticFeedbackEnabled", "()Z", "GetIsHapticFeedbackEnabledHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setHapticFeedbackEnabled", "(Z)V", "GetSetHapticFeedbackEnabled_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 3" />
        <altmember cref="P:Android.Views.View.HapticFeedbackEnabled" />
        <altmember cref="M:Android.Views.View.PerformHapticFeedback(Android.Views.FeedbackConstants)" />
        <altmember cref="P:Android.Views.View.HapticFeedbackEnabled" />
        <altmember cref="M:Android.Views.View.PerformHapticFeedback(Android.Views.FeedbackConstants)" />
      </Docs>
    </Member>
    <Member MemberName="HasFocus">
      <MemberSignature Language="C#" Value="public virtual bool HasFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("hasFocus", "()Z", "GetHasFocusHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this view has focus itself, or is the ancestor of the
 view that has focus.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HasFocusable">
      <MemberSignature Language="C#" Value="public virtual bool HasFocusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFocusable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("hasFocusable", "()Z", "GetHasFocusableHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this view is focusable or if it contains a reachable View
 for which <c><see cref="P:Android.Views.View.HasFocusable" /></c> returns true.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.ViewGroup.TouchscreenBlocksFocus" />
      </Docs>
    </Member>
    <Member MemberName="HasNestedScrollingParent">
      <MemberSignature Language="C#" Value="public virtual bool HasNestedScrollingParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasNestedScrollingParent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("hasNestedScrollingParent", "()Z", "GetHasNestedScrollingParentHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this view has a nested scrolling parent.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="HasOnClickListeners">
      <MemberSignature Language="C#" Value="public virtual bool HasOnClickListeners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasOnClickListeners" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("hasOnClickListeners", "()Z", "GetHasOnClickListenersHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return whether this view has an attached OnClickListener.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 15" />
      </Docs>
    </Member>
    <Member MemberName="HasOverlappingRendering">
      <MemberSignature Language="C#" Value="public virtual bool HasOverlappingRendering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasOverlappingRendering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("hasOverlappingRendering", "()Z", "GetHasOverlappingRenderingHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether this View has content which overlaps.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="HasTransientState">
      <MemberSignature Language="C#" Value="public virtual bool HasTransientState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasTransientState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("hasTransientState", "()Z", "GetHasTransientStateHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setHasTransientState", "(Z)V", "GetSetHasTransientState_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether the view is currently tracking transient state that the
 app should not need to concern itself with saving and restoring, but that
 the framework should take special note to preserve when possible.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="HasWindowFocus">
      <MemberSignature Language="C#" Value="public virtual bool HasWindowFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasWindowFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("hasWindowFocus", "()Z", "GetHasWindowFocusHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this view is in a window that currently has window focus.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public int Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getHeight", "()I", "GetGetHeightHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the height of your view.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalFadingEdgeEnabled">
      <MemberSignature Language="C#" Value="public virtual bool HorizontalFadingEdgeEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HorizontalFadingEdgeEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isHorizontalFadingEdgeEnabled", "()Z", "GetIsHorizontalFadingEdgeEnabledHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setHorizontalFadingEdgeEnabled", "(Z)V", "GetSetHorizontalFadingEdgeEnabled_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
        </summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.HorizontalFadingEdgeEnabled" />
        <altmember cref="P:Android.Views.View.HorizontalFadingEdgeEnabled" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalFadingEdgeLength">
      <MemberSignature Language="C#" Value="public virtual int HorizontalFadingEdgeLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HorizontalFadingEdgeLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getHorizontalFadingEdgeLength", "()I", "GetGetHorizontalFadingEdgeLengthHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the size of the horizontal faded edges used to indicate that more
 content in this view is visible.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarEnabled">
      <MemberSignature Language="C#" Value="public virtual bool HorizontalScrollBarEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HorizontalScrollBarEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isHorizontalScrollBarEnabled", "()Z", "GetIsHorizontalScrollBarEnabledHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setHorizontalScrollBarEnabled", "(Z)V", "GetSetHorizontalScrollBarEnabled_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
        </summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.HorizontalScrollBarEnabled" />
        <altmember cref="P:Android.Views.View.HorizontalScrollBarEnabled" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollbarHeight">
      <MemberSignature Language="C#" Value="protected virtual int HorizontalScrollbarHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HorizontalScrollbarHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getHorizontalScrollbarHeight", "()I", "GetGetHorizontalScrollbarHeightHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the height of the horizontal scrollbar.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Hover">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.View.HoverEventArgs&gt; Hover;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.View/HoverEventArgs&gt; Hover" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.View+HoverEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Hovered">
      <MemberSignature Language="C#" Value="public virtual bool Hovered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Hovered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isHovered", "()Z", "GetIsHoveredHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setHovered", "(Z)V", "GetSetHovered_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if the view is currently hovered.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 14" />
        <altmember cref="P:Android.Views.View.Hovered" />
        <altmember cref="M:Android.Views.View.OnHoverChanged(System.Boolean)" />
        <altmember cref="P:Android.Views.View.Hovered" />
        <altmember cref="M:Android.Views.View.OnHoverChanged(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public virtual int Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getId", "()I", "GetGetIdHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setId", "(I)V", "GetSetId_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns this view's identifier.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.Id" />
        <altmember cref="M:Android.Views.View.FindViewById(System.Int32)" />
        <altmember cref="F:Android.Views.View.NoId" />
        <altmember cref="P:Android.Views.View.Id" />
        <altmember cref="M:Android.Views.View.FindViewById(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ImportantForAccessibility">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ImportantForAccessibility ImportantForAccessibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.ImportantForAccessibility ImportantForAccessibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getImportantForAccessibility", "()I", "GetGetImportantForAccessibilityHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setImportantForAccessibility", "(I)V", "GetSetImportantForAccessibility_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ImportantForAccessibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the mode for determining whether this View is important for accessibility
 which is if it fires accessibility events and if it is reported to
 accessibility services that query the screen.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 16" />
        <altmember cref="F:Android.Views.View.ImportantForAccessibilityYes" />
        <altmember cref="F:Android.Views.View.ImportantForAccessibilityNo" />
        <altmember cref="F:Android.Views.View.ImportantForAccessibilityNoHideDescendants" />
        <altmember cref="F:Android.Views.View.ImportantForAccessibilityAuto" />
        <altmember cref="F:Android.Views.View.ImportantForAccessibilityYes" />
        <altmember cref="F:Android.Views.View.ImportantForAccessibilityNo" />
        <altmember cref="F:Android.Views.View.ImportantForAccessibilityNoHideDescendants" />
        <altmember cref="F:Android.Views.View.ImportantForAccessibilityAuto" />
      </Docs>
    </Member>
    <Member MemberName="ImportantForAccessibilityAuto">
      <MemberSignature Language="C#" Value="public const Android.Views.ImportantForAccessibility ImportantForAccessibilityAuto = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.ImportantForAccessibility ImportantForAccessibilityAuto = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("IMPORTANT_FOR_ACCESSIBILITY_AUTO")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.ImportantForAccessibility enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ImportantForAccessibility</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Automatically determine whether a view is important for accessibility.</summary>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="ImportantForAccessibilityNo">
      <MemberSignature Language="C#" Value="public const Android.Views.ImportantForAccessibility ImportantForAccessibilityNo = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.ImportantForAccessibility ImportantForAccessibilityNo = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("IMPORTANT_FOR_ACCESSIBILITY_NO")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.ImportantForAccessibility enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ImportantForAccessibility</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>The view is not important for accessibility.</summary>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="ImportantForAccessibilityNoHideDescendants">
      <MemberSignature Language="C#" Value="public const Android.Views.ImportantForAccessibility ImportantForAccessibilityNoHideDescendants = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.ImportantForAccessibility ImportantForAccessibilityNoHideDescendants = (4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.ImportantForAccessibility enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ImportantForAccessibility</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>The view is not important for accessibility, nor are any of its
 descendant views.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ImportantForAccessibilityYes">
      <MemberSignature Language="C#" Value="public const Android.Views.ImportantForAccessibility ImportantForAccessibilityYes = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.ImportantForAccessibility ImportantForAccessibilityYes = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("IMPORTANT_FOR_ACCESSIBILITY_YES")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.ImportantForAccessibility enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ImportantForAccessibility</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>The view is important for accessibility.</summary>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public static Android.Views.View Inflate (Android.Content.Context context, int resource, Android.Views.ViewGroup root);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Views.View Inflate(class Android.Content.Context context, int32 resource, class Android.Views.ViewGroup root) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("inflate", "(Landroid/content/Context;ILandroid/view/ViewGroup;)Landroid/view/View;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="resource" Type="System.Int32" />
        <Parameter Name="root" Type="Android.Views.ViewGroup" />
      </Parameters>
      <Docs>
        <param name="context">The Context object for your activity or application.</param>
        <param name="resource">The resource ID to inflate</param>
        <param name="root">A view group that will be the parent.  Used to properly inflate the
 layout_* parameters.</param>
        <summary>Inflate a view from an XML resource.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Views.LayoutInflater" />
      </Docs>
    </Member>
    <Member MemberName="InitializeFadingEdge">
      <MemberSignature Language="C#" Value="protected virtual void InitializeFadingEdge (Android.Content.Res.TypedArray a);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeFadingEdge(class Android.Content.Res.TypedArray a) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("initializeFadingEdge", "(Landroid/content/res/TypedArray;)V", "GetInitializeFadingEdge_Landroid_content_res_TypedArray_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Android.Content.Res.TypedArray" />
      </Parameters>
      <Docs>
        <param name="a">the styled attributes set to initialize the fading edges from
</param>
        <summary>
        </summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InitializeScrollbars">
      <MemberSignature Language="C#" Value="protected virtual void InitializeScrollbars (Android.Content.Res.TypedArray a);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeScrollbars(class Android.Content.Res.TypedArray a) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("initializeScrollbars", "(Landroid/content/res/TypedArray;)V", "GetInitializeScrollbars_Landroid_content_res_TypedArray_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Android.Content.Res.TypedArray" />
      </Parameters>
      <Docs>
        <param name="a">the styled attributes set to initialize the scrollbars from
</param>
        <summary>
        </summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public virtual void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invalidate() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("invalidate", "()V", "GetInvalidateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Invalidate the whole view.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public virtual void Invalidate (Android.Graphics.Rect dirty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invalidate(class Android.Graphics.Rect dirty) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("invalidate", "(Landroid/graphics/Rect;)V", "GetInvalidate_Landroid_graphics_Rect_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dirty" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="dirty">the rectangle representing the bounds of the dirty region
</param>
        <summary>Mark the area defined by dirty as needing to be drawn.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public virtual void Invalidate (int l, int t, int r, int b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invalidate(int32 l, int32 t, int32 r, int32 b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("invalidate", "(IIII)V", "GetInvalidate_IIIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="System.Int32" />
        <Parameter Name="t" Type="System.Int32" />
        <Parameter Name="r" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="l">the left position of the dirty region</param>
        <param name="t">the top position of the dirty region</param>
        <param name="r">the right position of the dirty region</param>
        <param name="b">the bottom position of the dirty region
</param>
        <summary>Mark the area defined by the rect (l,t,r,b) as needing to be drawn.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InvalidateDrawable">
      <MemberSignature Language="C#" Value="public virtual void InvalidateDrawable (Android.Graphics.Drawables.Drawable drawable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InvalidateDrawable(class Android.Graphics.Drawables.Drawable drawable) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("invalidateDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetInvalidateDrawable_Landroid_graphics_drawable_Drawable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drawable" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="drawable">the drawable to invalidate
</param>
        <summary>Invalidates the specified Drawable.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InvalidateOutline">
      <MemberSignature Language="C#" Value="public virtual void InvalidateOutline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InvalidateOutline() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("invalidateOutline", "()V", "GetInvalidateOutlineHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called to rebuild this View's Outline from its <c><see cref="T:Android.Views.ViewOutlineProvider" /></c></summary>
        <remarks />
        <altmember cref="P:Android.Views.View.OutlineProvider" />
      </Docs>
    </Member>
    <Member MemberName="InvokeFitsSystemWindows">
      <MemberSignature Language="C#" Value="public virtual bool InvokeFitsSystemWindows ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InvokeFitsSystemWindows() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("fitsSystemWindows", "()Z", "GetInvokeFitsSystemWindowsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="IsAccessibilityFocused">
      <MemberSignature Language="C#" Value="public virtual bool IsAccessibilityFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAccessibilityFocused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isAccessibilityFocused", "()Z", "GetIsAccessibilityFocusedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether this View is accessibility focused.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="IsAttachedToWindow">
      <MemberSignature Language="C#" Value="public virtual bool IsAttachedToWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAttachedToWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isAttachedToWindow", "()Z", "GetIsAttachedToWindowHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this view is currently attached to a window.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public virtual bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isDirty", "()Z", "GetIsDirtyHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>True if this view has changed since the last time being drawn.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="IsFocused">
      <MemberSignature Language="C#" Value="public virtual bool IsFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFocused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isFocused", "()Z", "GetIsFocusedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this view has focus</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsHardwareAccelerated">
      <MemberSignature Language="C#" Value="public virtual bool IsHardwareAccelerated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHardwareAccelerated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isHardwareAccelerated", "()Z", "GetIsHardwareAcceleratedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="IsImportantForAccessibility">
      <MemberSignature Language="C#" Value="public virtual bool IsImportantForAccessibility { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImportantForAccessibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isImportantForAccessibility", "()Z", "GetIsImportantForAccessibilityHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Computes whether this view should be exposed for accessibility.</summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Views.View.ImportantForAccessibility" />
        <altmember cref="P:Android.Views.View.ImportantForAccessibility" />
      </Docs>
    </Member>
    <Member MemberName="IsInEditMode">
      <MemberSignature Language="C#" Value="public virtual bool IsInEditMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isInEditMode", "()Z", "GetIsInEditModeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this View is currently in edit mode.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="IsInLayout">
      <MemberSignature Language="C#" Value="public virtual bool IsInLayout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isInLayout", "()Z", "GetIsInLayoutHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether the view hierarchy is currently undergoing a layout pass.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="IsInTouchMode">
      <MemberSignature Language="C#" Value="public virtual bool IsInTouchMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInTouchMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isInTouchMode", "()Z", "GetIsInTouchModeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether the device is currently in touch mode.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsLaidOut">
      <MemberSignature Language="C#" Value="public virtual bool IsLaidOut { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLaidOut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isLaidOut", "()Z", "GetIsLaidOutHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this view has been through at least one layout since it
 was last attached to or detached from a window.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="IsLayoutDirectionResolved">
      <MemberSignature Language="C#" Value="public virtual bool IsLayoutDirectionResolved { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLayoutDirectionResolved" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isLayoutDirectionResolved", "()Z", "GetIsLayoutDirectionResolvedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="IsLayoutRequested">
      <MemberSignature Language="C#" Value="public virtual bool IsLayoutRequested { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLayoutRequested" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isLayoutRequested", "()Z", "GetIsLayoutRequestedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
        </summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsOpaque">
      <MemberSignature Language="C#" Value="public virtual bool IsOpaque { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOpaque" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isOpaque", "()Z", "GetIsOpaqueHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this View is opaque.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="IsPaddingOffsetRequired">
      <MemberSignature Language="C#" Value="protected virtual bool IsPaddingOffsetRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPaddingOffsetRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isPaddingOffsetRequired", "()Z", "GetIsPaddingOffsetRequiredHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If the View draws content inside its padding and enables fading edges,
 it needs to support padding offsets.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 2" />
        <altmember cref="P:Android.Views.View.LeftPaddingOffset" />
        <altmember cref="P:Android.Views.View.RightPaddingOffset" />
        <altmember cref="P:Android.Views.View.TopPaddingOffset" />
        <altmember cref="P:Android.Views.View.BottomPaddingOffset" />
      </Docs>
    </Member>
    <Member MemberName="IsPaddingRelative">
      <MemberSignature Language="C#" Value="public virtual bool IsPaddingRelative { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPaddingRelative" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isPaddingRelative", "()Z", "GetIsPaddingRelativeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return if the padding has been set through relative values
 <c><see cref="M:Android.Views.View.SetPaddingRelative(System.Int32, System.Int32, System.Int32, System.Int32)" /></c> or through</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="IsScrollContainer">
      <MemberSignature Language="C#" Value="public virtual bool IsScrollContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsScrollContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isScrollContainer", "()Z", "GetIsScrollContainerHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this view is one of the set of scrollable containers in
 its window.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="IsShown">
      <MemberSignature Language="C#" Value="public virtual bool IsShown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsShown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isShown", "()Z", "GetIsShownHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the visibility of this view and all of its ancestors</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsTextAlignmentResolved">
      <MemberSignature Language="C#" Value="public virtual bool IsTextAlignmentResolved { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTextAlignmentResolved" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isTextAlignmentResolved", "()Z", "GetIsTextAlignmentResolvedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="IsTextDirectionResolved">
      <MemberSignature Language="C#" Value="public virtual bool IsTextDirectionResolved { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTextDirectionResolved" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isTextDirectionResolved", "()Z", "GetIsTextDirectionResolvedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="JumpDrawablesToCurrentState">
      <MemberSignature Language="C#" Value="public virtual void JumpDrawablesToCurrentState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void JumpDrawablesToCurrentState() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("jumpDrawablesToCurrentState", "()V", "GetJumpDrawablesToCurrentStateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Call <c><see cref="M:Android.Graphics.Drawables.Drawable.JumpToCurrentState" /></c>
 on all Drawable objects associated with this view.</summary>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="KeepScreenOn">
      <MemberSignature Language="C#" Value="public virtual bool KeepScreenOn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepScreenOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getKeepScreenOn", "()Z", "GetGetKeepScreenOnHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setKeepScreenOn", "(Z)V", "GetSetKeepScreenOn_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether the screen should remain on, corresponding to the current
 value of <c><see cref="!:Android.Views.View.KEEP_SCREEN_ON" /></c>.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.KeepScreenOn" />
        <altmember cref="P:Android.Views.View.KeepScreenOn" />
      </Docs>
    </Member>
    <Member MemberName="KeyDispatcherState">
      <MemberSignature Language="C#" Value="public virtual Android.Views.KeyEvent.DispatcherState KeyDispatcherState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.KeyEvent/DispatcherState KeyDispatcherState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getKeyDispatcherState", "()Landroid/view/KeyEvent$DispatcherState;", "GetGetKeyDispatcherStateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.KeyEvent+DispatcherState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the global <c><see cref="!:NoType:android/view/KeyEvent$DispatcherState;Href=../../../reference/android/view/KeyEvent.DispatcherState.html" /></c>
 for this view's window.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="KeyPress">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.View.KeyEventArgs&gt; KeyPress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.View/KeyEventArgs&gt; KeyPress" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.View+KeyEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="LabelFor">
      <MemberSignature Language="C#" Value="public virtual int LabelFor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LabelFor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLabelFor", "()I", "GetGetLabelForHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setLabelFor", "(I)V", "GetSetLabelFor_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the id of a view for which this view serves as a label for
 accessibility purposes.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="LayerType">
      <MemberSignature Language="C#" Value="public virtual Android.Views.LayerType LayerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.LayerType LayerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLayerType", "()I", "GetGetLayerTypeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.LayerType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates what type of layer is currently associated with this view.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="M:Android.Views.View.SetLayerType(Android.Views.LayerType, Android.Graphics.Paint)" />
        <altmember cref="M:Android.Views.View.BuildLayer" />
      </Docs>
    </Member>
    <Member MemberName="Layout">
      <MemberSignature Language="C#" Value="public virtual void Layout (int l, int t, int r, int b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Layout(int32 l, int32 t, int32 r, int32 b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("layout", "(IIII)V", "GetLayout_IIIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="System.Int32" />
        <Parameter Name="t" Type="System.Int32" />
        <Parameter Name="r" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="l">Left position, relative to parent</param>
        <param name="t">Top position, relative to parent</param>
        <param name="r">Right position, relative to parent</param>
        <param name="b">Bottom position, relative to parent
</param>
        <summary tool="true">Assign a size and position to a view and all of its
 descendants

 </summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LayoutChange">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.View.LayoutChangeEventArgs&gt; LayoutChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.View/LayoutChangeEventArgs&gt; LayoutChange" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.View+LayoutChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="LayoutDirection">
      <MemberSignature Language="C#" Value="public virtual Android.Views.LayoutDirection LayoutDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.LayoutDirection LayoutDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLayoutDirection", "()I", "GetGetLayoutDirectionHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setLayoutDirection", "(I)V", "GetSetLayoutDirection_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.LayoutDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the resolved layout direction for this view.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="LayoutDirectionInherit">
      <MemberSignature Language="C#" Value="public const Android.Views.LayoutDirection LayoutDirectionInherit = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.LayoutDirection LayoutDirectionInherit = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LAYOUT_DIRECTION_INHERIT")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.LayoutDirection enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.LayoutDirection</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Horizontal layout direction of this view is inherited from its parent.</summary>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="LayoutDirectionLocale">
      <MemberSignature Language="C#" Value="public const Android.Views.LayoutDirection LayoutDirectionLocale = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.LayoutDirection LayoutDirectionLocale = (3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LAYOUT_DIRECTION_LOCALE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.LayoutDirection enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.LayoutDirection</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Horizontal layout direction of this view is from deduced from the default language
 script for the locale.</summary>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="LayoutDirectionLtr">
      <MemberSignature Language="C#" Value="public const Android.Views.LayoutDirection LayoutDirectionLtr = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.LayoutDirection LayoutDirectionLtr = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LAYOUT_DIRECTION_LTR")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.LayoutDirection enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.LayoutDirection</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Horizontal layout direction of this view is from Left to Right.</summary>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="LayoutDirectionRtl">
      <MemberSignature Language="C#" Value="public const Android.Views.LayoutDirection LayoutDirectionRtl = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.LayoutDirection LayoutDirectionRtl = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LAYOUT_DIRECTION_RTL")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.LayoutDirection enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.LayoutDirection</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Horizontal layout direction of this view is from Right to Left.</summary>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="LayoutParameters">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewGroup.LayoutParams LayoutParameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.ViewGroup/LayoutParams LayoutParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLayoutParams", "()Landroid/view/ViewGroup$LayoutParams;", "GetGetLayoutParametersHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setLayoutParams", "(Landroid/view/ViewGroup$LayoutParams;)V", "GetSetLayoutParameters_Landroid_view_ViewGroup_LayoutParams_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewGroup+LayoutParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the LayoutParams associated with this view.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public int Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Left" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLeft", "()I", "GetGetLeftHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setLeft", "(I)V", "GetSetLeft_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Left position of this view relative to its parent.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LeftFadingEdgeStrength">
      <MemberSignature Language="C#" Value="protected virtual float LeftFadingEdgeStrength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 LeftFadingEdgeStrength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLeftFadingEdgeStrength", "()F", "GetGetLeftFadingEdgeStrengthHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the strength, or intensity, of the left faded edge.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LeftPaddingOffset">
      <MemberSignature Language="C#" Value="protected virtual int LeftPaddingOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LeftPaddingOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLeftPaddingOffset", "()I", "GetGetLeftPaddingOffsetHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Amount by which to extend the left fading region.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 2" />
        <altmember cref="P:Android.Views.View.IsPaddingOffsetRequired" />
      </Docs>
    </Member>
    <Member MemberName="LongClick">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.View.LongClickEventArgs&gt; LongClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.View/LongClickEventArgs&gt; LongClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.View+LongClickEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="LongClickable">
      <MemberSignature Language="C#" Value="public virtual bool LongClickable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LongClickable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isLongClickable", "()Z", "GetIsLongClickableHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setLongClickable", "(Z)V", "GetSetLongClickable_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this view reacts to long click events or not.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.LongClickable" />
        <altmember cref="P:Android.Views.View.LongClickable" />
      </Docs>
    </Member>
    <Member MemberName="Matrix">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Matrix Matrix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Matrix Matrix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMatrix", "()Landroid/graphics/Matrix;", "GetGetMatrixHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The transform matrix of this view, which is calculated based on the current
 rotation, scale, and pivot properties.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="P:Android.Views.View.Rotation" />
        <altmember cref="P:Android.Views.View.ScaleX" />
        <altmember cref="P:Android.Views.View.ScaleY" />
        <altmember cref="P:Android.Views.View.PivotX" />
        <altmember cref="P:Android.Views.View.PivotY" />
      </Docs>
    </Member>
    <Member MemberName="Measure">
      <MemberSignature Language="C#" Value="public void Measure (int widthMeasureSpec, int heightMeasureSpec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Measure(int32 widthMeasureSpec, int32 heightMeasureSpec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("measure", "(II)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="widthMeasureSpec" Type="System.Int32" />
        <Parameter Name="heightMeasureSpec" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="widthMeasureSpec">Horizontal space requirements as imposed by the
        parent</param>
        <param name="heightMeasureSpec">Vertical space requirements as imposed by the
        parent</param>
        <summary tool="true">
        </summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.OnMeasure(System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MeasuredHeight">
      <MemberSignature Language="C#" Value="public int MeasuredHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MeasuredHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMeasuredHeight", "()I", "GetGetMeasuredHeightHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Like <c><see cref="P:Android.Views.View.MeasuredHeightAndState" /></c>, but only returns the
 raw width component (that is the result is masked by
 <c><see cref="F:Android.Views.View.MeasuredSizeMask" /></c>).</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MeasuredHeightAndState">
      <MemberSignature Language="C#" Value="public int MeasuredHeightAndState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MeasuredHeightAndState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMeasuredHeightAndState", "()I", "GetGetMeasuredHeightAndStateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the full height measurement information for this view as computed
 by the most recent call to <c><see cref="M:Android.Views.View.Measure(System.Int32, System.Int32)" /></c>.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="MeasuredHeightStateShift">
      <MemberSignature Language="C#" Value="public const int MeasuredHeightStateShift = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MeasuredHeightStateShift = (16)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEASURED_HEIGHT_STATE_SHIFT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>Bit shift of <c><see cref="F:Android.Views.View.MeasuredStateMask" /></c> to get to the height bits
 for functions that combine both width and height into a single int,
 such as <c><see cref="P:Android.Views.View.MeasuredState" /></c> and the childState argument of
 <c><see cref="M:Android.Views.View.ResolveSizeAndState(System.Int32, System.Int32, System.Int32)" /></c>.</summary>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="MeasuredSizeMask">
      <MemberSignature Language="C#" Value="public const int MeasuredSizeMask = 16777215;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MeasuredSizeMask = (16777215)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEASURED_SIZE_MASK")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>16777215</MemberValue>
      <Docs>
        <summary>Bits of <c><see cref="P:Android.Views.View.MeasuredWidthAndState" /></c> and
 <c><see cref="P:Android.Views.View.MeasuredWidthAndState" /></c> that provide the actual measured size.</summary>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="MeasuredState">
      <MemberSignature Language="C#" Value="public int MeasuredState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MeasuredState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMeasuredState", "()I", "GetGetMeasuredStateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return only the state bits of <c><see cref="P:Android.Views.View.MeasuredWidthAndState" /></c>
 and <c><see cref="P:Android.Views.View.MeasuredHeightAndState" /></c>, combined into one integer.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="MeasuredStateMask">
      <MemberSignature Language="C#" Value="public const int MeasuredStateMask = -16777216;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MeasuredStateMask = (-16777216)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEASURED_STATE_MASK")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-16777216</MemberValue>
      <Docs>
        <summary>Bits of <c><see cref="P:Android.Views.View.MeasuredWidthAndState" /></c> and
 <c><see cref="P:Android.Views.View.MeasuredWidthAndState" /></c> that provide the additional state bits.</summary>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="MeasuredStateTooSmall">
      <MemberSignature Language="C#" Value="public const int MeasuredStateTooSmall = 16777216;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MeasuredStateTooSmall = (16777216)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEASURED_STATE_TOO_SMALL")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>16777216</MemberValue>
      <Docs>
        <summary>Bit of <c><see cref="P:Android.Views.View.MeasuredWidthAndState" /></c> and
 <c><see cref="P:Android.Views.View.MeasuredWidthAndState" /></c> that indicates the measured size
 is smaller that the space the view would like to have.</summary>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="MeasuredWidth">
      <MemberSignature Language="C#" Value="public int MeasuredWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MeasuredWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMeasuredWidth", "()I", "GetGetMeasuredWidthHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Like <c><see cref="P:Android.Views.View.MeasuredWidthAndState" /></c>, but only returns the
 raw width component (that is the result is masked by
 <c><see cref="F:Android.Views.View.MeasuredSizeMask" /></c>).</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MeasuredWidthAndState">
      <MemberSignature Language="C#" Value="public int MeasuredWidthAndState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MeasuredWidthAndState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMeasuredWidthAndState", "()I", "GetGetMeasuredWidthAndStateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the full width measurement information for this view as computed
 by the most recent call to <c><see cref="M:Android.Views.View.Measure(System.Int32, System.Int32)" /></c>.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="MergeDrawableStates">
      <MemberSignature Language="C#" Value="protected static int[] MergeDrawableStates (int[] baseState, int[] additionalState);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig int32[] MergeDrawableStates(int32[] baseState, int32[] additionalState) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("mergeDrawableStates", "([I[I)[I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseState" Type="System.Int32[]" />
        <Parameter Name="additionalState" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="baseState">The base state values returned by
 <c><see cref="M:Android.Views.View.OnCreateDrawableState(System.Int32)" /></c>, which will be modified to also hold your
 own additional state values.</param>
        <param name="additionalState">The additional state values you would like
 added to <format type="text/html"><var>baseState</var></format>; this array is not modified.</param>
        <summary>Merge your own state values in <format type="text/html"><var>additionalState</var></format> into the base
 state values <format type="text/html"><var>baseState</var></format> that were returned by
 <c><see cref="M:Android.Views.View.OnCreateDrawableState(System.Int32)" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.OnCreateDrawableState(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MinimumHeight">
      <MemberSignature Language="C#" Value="public virtual int MinimumHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMinimumHeight", "()I", "GetGetMinimumHeightHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the minimum height of the view.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Views.View.SetMinimumHeight(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MinimumWidth">
      <MemberSignature Language="C#" Value="public virtual int MinimumWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMinimumWidth", "()I", "GetGetMinimumWidthHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the minimum width of the view.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Views.View.SetMinimumWidth(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="NestedScrollingEnabled">
      <MemberSignature Language="C#" Value="public virtual bool NestedScrollingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NestedScrollingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isNestedScrollingEnabled", "()Z", "GetIsNestedScrollingEnabledHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setNestedScrollingEnabled", "(Z)V", "GetSetNestedScrollingEnabled_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if nested scrolling is enabled for this view.</summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Views.View.NestedScrollingEnabled" />
        <altmember cref="P:Android.Views.View.NestedScrollingEnabled" />
      </Docs>
    </Member>
    <Member MemberName="NextFocusDownId">
      <MemberSignature Language="C#" Value="public virtual int NextFocusDownId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NextFocusDownId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getNextFocusDownId", "()I", "GetGetNextFocusDownIdHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setNextFocusDownId", "(I)V", "GetSetNextFocusDownId_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the id of the view to use when the next focus is <c><see cref="!:Android.Views.View.FOCUS_DOWN" /></c>.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NextFocusForwardId">
      <MemberSignature Language="C#" Value="public virtual int NextFocusForwardId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NextFocusForwardId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getNextFocusForwardId", "()I", "GetGetNextFocusForwardIdHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setNextFocusForwardId", "(I)V", "GetSetNextFocusForwardId_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the id of the view to use when the next focus is <c><see cref="!:Android.Views.View.FOCUS_FORWARD" /></c>.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="NextFocusLeftId">
      <MemberSignature Language="C#" Value="public virtual int NextFocusLeftId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NextFocusLeftId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getNextFocusLeftId", "()I", "GetGetNextFocusLeftIdHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setNextFocusLeftId", "(I)V", "GetSetNextFocusLeftId_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the id of the view to use when the next focus is <c><see cref="!:Android.Views.View.FOCUS_LEFT" /></c>.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NextFocusRightId">
      <MemberSignature Language="C#" Value="public virtual int NextFocusRightId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NextFocusRightId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getNextFocusRightId", "()I", "GetGetNextFocusRightIdHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setNextFocusRightId", "(I)V", "GetSetNextFocusRightId_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the id of the view to use when the next focus is <c><see cref="!:Android.Views.View.FOCUS_RIGHT" /></c>.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NextFocusUpId">
      <MemberSignature Language="C#" Value="public virtual int NextFocusUpId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NextFocusUpId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getNextFocusUpId", "()I", "GetGetNextFocusUpIdHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setNextFocusUpId", "(I)V", "GetSetNextFocusUpId_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the id of the view to use when the next focus is <c><see cref="!:Android.Views.View.FOCUS_UP" /></c>.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NoId">
      <MemberSignature Language="C#" Value="public const int NoId = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 NoId = (-1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("NO_ID")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>Used to mark a View that has no ID.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OffsetLeftAndRight">
      <MemberSignature Language="C#" Value="public virtual void OffsetLeftAndRight (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OffsetLeftAndRight(int32 offset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("offsetLeftAndRight", "(I)V", "GetOffsetLeftAndRight_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset">the number of pixels to offset the view by
</param>
        <summary>Offset this view's horizontal location by the specified amount of pixels.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OffsetTopAndBottom">
      <MemberSignature Language="C#" Value="public virtual void OffsetTopAndBottom (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OffsetTopAndBottom(int32 offset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("offsetTopAndBottom", "(I)V", "GetOffsetTopAndBottom_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset">the number of pixels to offset the view by
</param>
        <summary>Offset this view's vertical location by the specified number of pixels.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnAnimationEnd">
      <MemberSignature Language="C#" Value="protected virtual void OnAnimationEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAnimationEnd() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onAnimationEnd", "()V", "GetOnAnimationEndHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Invoked by a parent ViewGroup to notify the end of the animation
 currently associated with this view.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.Animation" />
        <altmember cref="P:Android.Views.View.Animation" />
      </Docs>
    </Member>
    <Member MemberName="OnAnimationStart">
      <MemberSignature Language="C#" Value="protected virtual void OnAnimationStart ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAnimationStart() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onAnimationStart", "()V", "GetOnAnimationStartHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Invoked by a parent ViewGroup to notify the start of the animation
 currently associated with this view.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.Animation" />
        <altmember cref="P:Android.Views.View.Animation" />
      </Docs>
    </Member>
    <Member MemberName="OnApplyWindowInsets">
      <MemberSignature Language="C#" Value="public virtual Android.Views.WindowInsets OnApplyWindowInsets (Android.Views.WindowInsets insets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.WindowInsets OnApplyWindowInsets(class Android.Views.WindowInsets insets) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onApplyWindowInsets", "(Landroid/view/WindowInsets;)Landroid/view/WindowInsets;", "GetOnApplyWindowInsets_Landroid_view_WindowInsets_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowInsets</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="insets" Type="Android.Views.WindowInsets" />
      </Parameters>
      <Docs>
        <param name="insets">Insets to apply</param>
        <summary>Called when the view should apply <c><see cref="T:Android.Views.WindowInsets" /></c> according to its internal policy.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="OnAttachedToWindow">
      <MemberSignature Language="C#" Value="protected virtual void OnAttachedToWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAttachedToWindow() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onAttachedToWindow", "()V", "GetOnAttachedToWindowHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This is called when the view is attached to a window.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.OnDetachedFromWindow" />
      </Docs>
    </Member>
    <Member MemberName="OnCancelPendingInputEvents">
      <MemberSignature Language="C#" Value="public virtual void OnCancelPendingInputEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCancelPendingInputEvents() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onCancelPendingInputEvents", "()V", "GetOnCancelPendingInputEventsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called as the result of a call to <c><see cref="M:Android.Views.View.CancelPendingInputEvents" /></c> on this view or
 a parent view.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="OnCheckIsTextEditor">
      <MemberSignature Language="C#" Value="public virtual bool OnCheckIsTextEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnCheckIsTextEditor() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onCheckIsTextEditor", "()Z", "GetOnCheckIsTextEditorHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Check whether the called view is a text editor, in which case it
 would make sense to automatically display a soft input window for
 it.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnConfigurationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnConfigurationChanged (Android.Content.Res.Configuration newConfig);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnConfigurationChanged(class Android.Content.Res.Configuration newConfig) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onConfigurationChanged", "(Landroid/content/res/Configuration;)V", "GetOnConfigurationChanged_Landroid_content_res_Configuration_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newConfig" Type="Android.Content.Res.Configuration" />
      </Parameters>
      <Docs>
        <param name="newConfig">The new resource configuration.
</param>
        <summary>Called when the current configuration of the resources being used
 by the application have changed.</summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateContextMenu">
      <MemberSignature Language="C#" Value="protected virtual void OnCreateContextMenu (Android.Views.IContextMenu menu);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCreateContextMenu(class Android.Views.IContextMenu menu) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onCreateContextMenu", "(Landroid/view/ContextMenu;)V", "GetOnCreateContextMenu_Landroid_view_ContextMenu_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menu" Type="Android.Views.IContextMenu" />
      </Parameters>
      <Docs>
        <param name="menu">the context menu to populate
</param>
        <summary>Views should implement this if the view itself is going to add items to
 the context menu.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateDrawableState">
      <MemberSignature Language="C#" Value="protected virtual int[] OnCreateDrawableState (int extraSpace);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32[] OnCreateDrawableState(int32 extraSpace) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onCreateDrawableState", "(I)[I", "GetOnCreateDrawableState_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extraSpace" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="extraSpace">if non-zero, this is the number of extra entries you
 would like in the returned array in which you can place your own
 states.</param>
        <summary>Generate the new <c><see cref="T:Android.Graphics.Drawables.Drawable" /></c> state for
 this view.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.MergeDrawableStates(System.Int32[], System.Int32[])" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateInputConnection">
      <MemberSignature Language="C#" Value="public virtual Android.Views.InputMethods.IInputConnection OnCreateInputConnection (Android.Views.InputMethods.EditorInfo outAttrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.InputMethods.IInputConnection OnCreateInputConnection(class Android.Views.InputMethods.EditorInfo outAttrs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onCreateInputConnection", "(Landroid/view/inputmethod/EditorInfo;)Landroid/view/inputmethod/InputConnection;", "GetOnCreateInputConnection_Landroid_view_inputmethod_EditorInfo_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.InputMethods.IInputConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outAttrs" Type="Android.Views.InputMethods.EditorInfo" />
      </Parameters>
      <Docs>
        <param name="outAttrs">Fill in with attribute information about the connection.
</param>
        <summary>Create a new InputConnection for an InputMethod to interact
 with the view.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnDetachedFromWindow">
      <MemberSignature Language="C#" Value="protected virtual void OnDetachedFromWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDetachedFromWindow() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onDetachedFromWindow", "()V", "GetOnDetachedFromWindowHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This is called when the view is detached from a window.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.OnAttachedToWindow" />
      </Docs>
    </Member>
    <Member MemberName="OnDisplayHint">
      <MemberSignature Language="C#" Value="protected virtual void OnDisplayHint (int hint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisplayHint(int32 hint) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onDisplayHint", "(I)V", "GetOnDisplayHint_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hint">A hint about whether or not this view is displayed:
 <c><see cref="T:Android.Views.ViewStates.Visible" tool="ReplaceLinkValue" /></c> or <c><see cref="F:Android.Views.ViewStates.Invisible" tool="ReplaceLinkValue" /></c>.
</param>
        <summary>Gives this view a hint about whether is displayed or not.</summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="OnDragEvent">
      <MemberSignature Language="C#" Value="public virtual bool OnDragEvent (Android.Views.DragEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnDragEvent(class Android.Views.DragEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onDragEvent", "(Landroid/view/DragEvent;)Z", "GetOnDragEvent_Landroid_view_DragEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.DragEvent" />
      </Parameters>
      <Docs>
        <param name="e">The <c><see cref="T:Android.Views.DragEvent" /></c> sent by the system.
 The <c><see cref="P:Android.Views.DragEvent.Action" /></c> method returns an action type constant defined
 in DragEvent, indicating the type of drag event represented by this object.</param>
        <summary>Handles drag events sent by the system following a call to
 <c><see cref="M:Android.Views.View.StartDrag(Android.Content.ClipData, .DragShadowBuilder, .DragShadowBuilder, .DragShadowBuilder)" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="OnDraw">
      <MemberSignature Language="C#" Value="protected virtual void OnDraw (Android.Graphics.Canvas canvas);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDraw(class Android.Graphics.Canvas canvas) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onDraw", "(Landroid/graphics/Canvas;)V", "GetOnDraw_Landroid_graphics_Canvas_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
      </Parameters>
      <Docs>
        <param name="canvas">the canvas on which the background will be drawn
</param>
        <summary>Implement this to do your drawing.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnDrawScrollBars">
      <MemberSignature Language="C#" Value="protected void OnDrawScrollBars (Android.Graphics.Canvas canvas);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnDrawScrollBars(class Android.Graphics.Canvas canvas) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onDrawScrollBars", "(Landroid/graphics/Canvas;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
      </Parameters>
      <Docs>
        <param name="canvas">the canvas on which to draw the scrollbars</param>
        <summary tool="true">
        </summary>
        <remarks />
        <since version="Added in API level 7" />
        <altmember cref="M:Android.Views.View.AwakenScrollBars(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnFilterTouchEventForSecurity">
      <MemberSignature Language="C#" Value="public virtual bool OnFilterTouchEventForSecurity (Android.Views.MotionEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnFilterTouchEventForSecurity(class Android.Views.MotionEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onFilterTouchEventForSecurity", "(Landroid/view/MotionEvent;)Z", "GetOnFilterTouchEventForSecurity_Landroid_view_MotionEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">The motion event to be filtered.</param>
        <summary>Filter the touch event to apply security policies.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 9" />
        <altmember cref="P:Android.Views.View.FilterTouchesWhenObscured" />
      </Docs>
    </Member>
    <Member MemberName="OnFinishInflate">
      <MemberSignature Language="C#" Value="protected virtual void OnFinishInflate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFinishInflate() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onFinishInflate", "()V", "GetOnFinishInflateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finalize inflating a view from XML.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnFinishTemporaryDetach">
      <MemberSignature Language="C#" Value="public virtual void OnFinishTemporaryDetach ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnFinishTemporaryDetach() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onFinishTemporaryDetach", "()V", "GetOnFinishTemporaryDetachHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called after <c><see cref="M:Android.Views.View.OnStartTemporaryDetach" /></c> when the container is done
 changing the view.</summary>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnFocusChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnFocusChanged (bool gainFocus, Android.Views.FocusSearchDirection direction, Android.Graphics.Rect previouslyFocusedRect);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFocusChanged(bool gainFocus, valuetype Android.Views.FocusSearchDirection direction, class Android.Graphics.Rect previouslyFocusedRect) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onFocusChanged", "(ZILandroid/graphics/Rect;)V", "GetOnFocusChanged_ZILandroid_graphics_Rect_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gainFocus" Type="System.Boolean" />
        <Parameter Name="direction" Type="Android.Views.FocusSearchDirection">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="previouslyFocusedRect" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="gainFocus">True if the View has focus; false otherwise.</param>
        <param name="direction">The direction focus has moved when requestFocus()
                  is called to give this view focus. Values are
                  <c><see cref="!:Android.Views.View.FOCUS_UP" /></c>, <c><see cref="!:Android.Views.View.FOCUS_DOWN" /></c>, <c><see cref="!:Android.Views.View.FOCUS_LEFT" /></c>,
                  <c><see cref="!:Android.Views.View.FOCUS_RIGHT" /></c>, <c><see cref="!:Android.Views.View.FOCUS_FORWARD" /></c>, or <c><see cref="!:Android.Views.View.FOCUS_BACKWARD" /></c>.
                  It may not always apply, in which case use the default.</param>
        <param name="previouslyFocusedRect">The rectangle, in this view's coordinate
        system, of the previously focused view.  If applicable, this will be
        passed in as finer grained information about where the focus is coming
        from (in addition to direction).  Will be <c>null</c> otherwise.
</param>
        <summary>Called by the view system when the focus state of this view changes.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnFocusChangeListener">
      <MemberSignature Language="C#" Value="public virtual Android.Views.View.IOnFocusChangeListener OnFocusChangeListener { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.View/IOnFocusChangeListener OnFocusChangeListener" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getOnFocusChangeListener", "()Landroid/view/View$OnFocusChangeListener;", "GetGetOnFocusChangeListenerHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setOnFocusChangeListener", "(Landroid/view/View$OnFocusChangeListener;)V", "GetSetOnFocusChangeListener_Landroid_view_View_OnFocusChangeListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View+IOnFocusChangeListener</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the focus-change callback registered for this view.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnGenericMotionEvent">
      <MemberSignature Language="C#" Value="public virtual bool OnGenericMotionEvent (Android.Views.MotionEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnGenericMotionEvent(class Android.Views.MotionEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onGenericMotionEvent", "(Landroid/view/MotionEvent;)Z", "GetOnGenericMotionEvent_Landroid_view_MotionEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">The generic motion event being processed.</param>
        <summary>Implement this method to handle generic motion events.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="OnHoverChanged">
      <MemberSignature Language="C#" Value="public virtual void OnHoverChanged (bool hovered);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnHoverChanged(bool hovered) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onHoverChanged", "(Z)V", "GetOnHoverChanged_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hovered" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="hovered">The current hover state, as returned by <c><see cref="P:Android.Views.View.Hovered" /></c>.</param>
        <summary>Implement this method to handle hover state changes.</summary>
        <remarks />
        <since version="Added in API level 14" />
        <altmember cref="P:Android.Views.View.Hovered" />
        <altmember cref="P:Android.Views.View.Hovered" />
      </Docs>
    </Member>
    <Member MemberName="OnHoverEvent">
      <MemberSignature Language="C#" Value="public virtual bool OnHoverEvent (Android.Views.MotionEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnHoverEvent(class Android.Views.MotionEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onHoverEvent", "(Landroid/view/MotionEvent;)Z", "GetOnHoverEvent_Landroid_view_MotionEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">The motion event that describes the hover.</param>
        <summary>Implement this method to handle hover events.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 14" />
        <altmember cref="P:Android.Views.View.Hovered" />
        <altmember cref="P:Android.Views.View.Hovered" />
        <altmember cref="M:Android.Views.View.OnHoverChanged(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OnInitializeAccessibilityEvent">
      <MemberSignature Language="C#" Value="public virtual void OnInitializeAccessibilityEvent (Android.Views.Accessibility.AccessibilityEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnInitializeAccessibilityEvent(class Android.Views.Accessibility.AccessibilityEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onInitializeAccessibilityEvent", "(Landroid/view/accessibility/AccessibilityEvent;)V", "GetOnInitializeAccessibilityEvent_Landroid_view_accessibility_AccessibilityEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.Accessibility.AccessibilityEvent" />
      </Parameters>
      <Docs>
        <param name="e">The event to initialize.</param>
        <summary>Initializes an <c><see cref="T:Android.Views.Accessibility.AccessibilityEvent" /></c> with information about
 this View which is the event source.</summary>
        <remarks />
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Views.View.SendAccessibilityEvent(Android.Views.Accessibility.EventTypes)" />
        <altmember cref="M:Android.Views.View.DispatchPopulateAccessibilityEvent(Android.Views.Accessibility.AccessibilityEvent)" />
      </Docs>
    </Member>
    <Member MemberName="OnInitializeAccessibilityNodeInfo">
      <MemberSignature Language="C#" Value="public virtual void OnInitializeAccessibilityNodeInfo (Android.Views.Accessibility.AccessibilityNodeInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnInitializeAccessibilityNodeInfo(class Android.Views.Accessibility.AccessibilityNodeInfo info) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onInitializeAccessibilityNodeInfo", "(Landroid/view/accessibility/AccessibilityNodeInfo;)V", "GetOnInitializeAccessibilityNodeInfo_Landroid_view_accessibility_AccessibilityNodeInfo_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="Android.Views.Accessibility.AccessibilityNodeInfo" />
      </Parameters>
      <Docs>
        <param name="info">The instance to initialize.
</param>
        <summary>Initializes an <c><see cref="T:Android.Views.Accessibility.AccessibilityNodeInfo" /></c> with information about this view.</summary>
        <remarks />
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="public virtual bool OnKeyDown (Android.Views.Keycode keyCode, Android.Views.KeyEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnKeyDown(valuetype Android.Views.Keycode keyCode, class Android.Views.KeyEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onKeyDown", "(ILandroid/view/KeyEvent;)Z", "GetOnKeyDown_ILandroid_view_KeyEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode" />
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="keyCode">A key code that represents the button pressed, from
                <c><see cref="T:Android.Views.KeyEvent" /></c>.</param>
        <param name="e">The KeyEvent object that defines the button action.
</param>
        <summary>Default implementation of <c><see cref="!:NoType:android/view/KeyEvent$Callback;Href=../../../reference/android/view/KeyEvent.Callback.html#onKeyDown(int, android.view.KeyEvent)" /></c>: perform press of the view
 when <c><see cref="!:Android.Views.KeyEvent.KEYCODE_DPAD_CENTER" /></c> or <c><see cref="!:Android.Views.KeyEvent.KEYCODE_ENTER" /></c>
 is released, if the view is enabled and clickable.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyLongPress">
      <MemberSignature Language="C#" Value="public virtual bool OnKeyLongPress (Android.Views.Keycode keyCode, Android.Views.KeyEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnKeyLongPress(valuetype Android.Views.Keycode keyCode, class Android.Views.KeyEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onKeyLongPress", "(ILandroid/view/KeyEvent;)Z", "GetOnKeyLongPress_ILandroid_view_KeyEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode" />
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="keyCode">The value in event.getKeyCode().</param>
        <param name="e">Description of the key event.</param>
        <summary>Default implementation of <c><see cref="!:NoType:android/view/KeyEvent$Callback;Href=../../../reference/android/view/KeyEvent.Callback.html#onKeyLongPress(int, android.view.KeyEvent)" /></c>: always returns false (doesn't handle
 the event).</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyMultiple">
      <MemberSignature Language="C#" Value="public virtual bool OnKeyMultiple (Android.Views.Keycode keyCode, int repeatCount, Android.Views.KeyEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnKeyMultiple(valuetype Android.Views.Keycode keyCode, int32 repeatCount, class Android.Views.KeyEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onKeyMultiple", "(IILandroid/view/KeyEvent;)Z", "GetOnKeyMultiple_IILandroid_view_KeyEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode" />
        <Parameter Name="repeatCount" Type="System.Int32" />
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="keyCode">A key code that represents the button pressed, from
                    <c><see cref="T:Android.Views.KeyEvent" /></c>.</param>
        <param name="repeatCount">The number of times the action was made.</param>
        <param name="e">The KeyEvent object that defines the button action.
</param>
        <summary>Default implementation of <c><see cref="!:NoType:android/view/KeyEvent$Callback;Href=../../../reference/android/view/KeyEvent.Callback.html#onKeyMultiple(int, int, android.view.KeyEvent)" /></c>: always returns false (doesn't handle
 the event).</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyPreIme">
      <MemberSignature Language="C#" Value="public virtual bool OnKeyPreIme (Android.Views.Keycode keyCode, Android.Views.KeyEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnKeyPreIme(valuetype Android.Views.Keycode keyCode, class Android.Views.KeyEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onKeyPreIme", "(ILandroid/view/KeyEvent;)Z", "GetOnKeyPreIme_ILandroid_view_KeyEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="keyCode">The value in event.getKeyCode().</param>
        <param name="e">Description of the key event.</param>
        <summary>Handle a key event before it is processed by any input method
 associated with the view hierarchy.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyShortcut">
      <MemberSignature Language="C#" Value="public virtual bool OnKeyShortcut (Android.Views.Keycode keyCode, Android.Views.KeyEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnKeyShortcut(valuetype Android.Views.Keycode keyCode, class Android.Views.KeyEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onKeyShortcut", "(ILandroid/view/KeyEvent;)Z", "GetOnKeyShortcut_ILandroid_view_KeyEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="keyCode">The value in event.getKeyCode().</param>
        <param name="e">Description of the key event.</param>
        <summary>Called on the focused view when a key shortcut event is not handled.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="public virtual bool OnKeyUp (Android.Views.Keycode keyCode, Android.Views.KeyEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnKeyUp(valuetype Android.Views.Keycode keyCode, class Android.Views.KeyEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onKeyUp", "(ILandroid/view/KeyEvent;)Z", "GetOnKeyUp_ILandroid_view_KeyEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode" />
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="keyCode">A key code that represents the button pressed, from
                <c><see cref="T:Android.Views.KeyEvent" /></c>.</param>
        <param name="e">The KeyEvent object that defines the button action.
</param>
        <summary>Default implementation of <c><see cref="!:NoType:android/view/KeyEvent$Callback;Href=../../../reference/android/view/KeyEvent.Callback.html#onKeyUp(int, android.view.KeyEvent)" /></c>: perform clicking of the view
 when <c><see cref="!:Android.Views.KeyEvent.KEYCODE_DPAD_CENTER" /></c> or
 <c><see cref="!:Android.Views.KeyEvent.KEYCODE_ENTER" /></c> is released.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnLayout">
      <MemberSignature Language="C#" Value="protected virtual void OnLayout (bool changed, int left, int top, int right, int bottom);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLayout(bool changed, int32 left, int32 top, int32 right, int32 bottom) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onLayout", "(ZIIII)V", "GetOnLayout_ZIIIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changed" Type="System.Boolean" />
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="changed">This is a new size or position for this view</param>
        <param name="left">Left position, relative to parent</param>
        <param name="top">Top position, relative to parent</param>
        <param name="right">Right position, relative to parent</param>
        <param name="bottom">Bottom position, relative to parent
</param>
        <summary>Called from layout when this view should
 assign a size and position to each of its children.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnMeasure">
      <MemberSignature Language="C#" Value="protected virtual void OnMeasure (int widthMeasureSpec, int heightMeasureSpec);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMeasure(int32 widthMeasureSpec, int32 heightMeasureSpec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onMeasure", "(II)V", "GetOnMeasure_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="widthMeasureSpec" Type="System.Int32" />
        <Parameter Name="heightMeasureSpec" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="widthMeasureSpec">horizontal space requirements as imposed by the parent.
                         The requirements are encoded with
                         <c><see cref="!:NoType:android/view/View$MeasureSpec;Href=../../../reference/android/view/View.MeasureSpec.html" /></c>.</param>
        <param name="heightMeasureSpec">vertical space requirements as imposed by the parent.
                         The requirements are encoded with
                         <c><see cref="!:NoType:android/view/View$MeasureSpec;Href=../../../reference/android/view/View.MeasureSpec.html" /></c>.</param>
        <summary tool="true">
        </summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.MeasuredWidth" />
        <altmember cref="P:Android.Views.View.MeasuredHeight" />
        <altmember cref="M:Android.Views.View.SetMeasuredDimension(System.Int32, System.Int32)" />
        <altmember cref="P:Android.Views.View.SuggestedMinimumHeight" />
        <altmember cref="P:Android.Views.View.SuggestedMinimumWidth" />
      </Docs>
    </Member>
    <Member MemberName="OnOverScrolled">
      <MemberSignature Language="C#" Value="protected virtual void OnOverScrolled (int scrollX, int scrollY, bool clampedX, bool clampedY);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnOverScrolled(int32 scrollX, int32 scrollY, bool clampedX, bool clampedY) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onOverScrolled", "(IIZZ)V", "GetOnOverScrolled_IIZZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollX" Type="System.Int32" />
        <Parameter Name="scrollY" Type="System.Int32" />
        <Parameter Name="clampedX" Type="System.Boolean" />
        <Parameter Name="clampedY" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="scrollX">New X scroll value in pixels</param>
        <param name="scrollY">New Y scroll value in pixels</param>
        <param name="clampedX">True if scrollX was clamped to an over-scroll boundary</param>
        <param name="clampedY">True if scrollY was clamped to an over-scroll boundary
</param>
        <summary>Called by <c><see cref="M:Android.Views.View.OverScrollBy(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" /></c> to
 respond to the results of an over-scroll operation.</summary>
        <remarks />
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="OnPopulateAccessibilityEvent">
      <MemberSignature Language="C#" Value="public virtual void OnPopulateAccessibilityEvent (Android.Views.Accessibility.AccessibilityEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPopulateAccessibilityEvent(class Android.Views.Accessibility.AccessibilityEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onPopulateAccessibilityEvent", "(Landroid/view/accessibility/AccessibilityEvent;)V", "GetOnPopulateAccessibilityEvent_Landroid_view_accessibility_AccessibilityEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.Accessibility.AccessibilityEvent" />
      </Parameters>
      <Docs>
        <param name="e">The accessibility event which to populate.</param>
        <summary>Called from <c><see cref="M:Android.Views.View.DispatchPopulateAccessibilityEvent(Android.Views.Accessibility.AccessibilityEvent)" /></c>
 giving a chance to this View to populate the accessibility event with its
 text content.</summary>
        <remarks />
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Views.View.SendAccessibilityEvent(Android.Views.Accessibility.EventTypes)" />
        <altmember cref="M:Android.Views.View.DispatchPopulateAccessibilityEvent(Android.Views.Accessibility.AccessibilityEvent)" />
      </Docs>
    </Member>
    <Member MemberName="OnRestoreInstanceState">
      <MemberSignature Language="C#" Value="protected virtual void OnRestoreInstanceState (Android.OS.IParcelable state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRestoreInstanceState(class Android.OS.IParcelable state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onRestoreInstanceState", "(Landroid/os/Parcelable;)V", "GetOnRestoreInstanceState_Landroid_os_Parcelable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Android.OS.IParcelable" />
      </Parameters>
      <Docs>
        <param name="state">The frozen state that had previously been returned by
        <c><see cref="M:Android.Views.View.OnSaveInstanceState" /></c>.</param>
        <summary>Hook allowing a view to re-apply a representation of its internal state that had previously
 been generated by <c><see cref="M:Android.Views.View.OnSaveInstanceState" /></c>.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.OnSaveInstanceState" />
      </Docs>
    </Member>
    <Member MemberName="OnRtlPropertiesChanged">
      <MemberSignature Language="C#" Value="public virtual void OnRtlPropertiesChanged (Android.Views.LayoutDirection layoutDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnRtlPropertiesChanged(valuetype Android.Views.LayoutDirection layoutDirection) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onRtlPropertiesChanged", "(I)V", "GetOnRtlPropertiesChanged_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutDirection" Type="Android.Views.LayoutDirection">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="layoutDirection">the direction of the layout</param>
        <summary>Called when any RTL property (layout direction or text direction or text alignment) has
 been changed.</summary>
        <remarks />
        <since version="Added in API level 17" />
        <altmember cref="F:Android.Views.View.LayoutDirectionLtr" />
        <altmember cref="F:Android.Views.View.LayoutDirectionRtl" />
      </Docs>
    </Member>
    <Member MemberName="OnSaveInstanceState">
      <MemberSignature Language="C#" Value="protected virtual Android.OS.IParcelable OnSaveInstanceState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Android.OS.IParcelable OnSaveInstanceState() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onSaveInstanceState", "()Landroid/os/Parcelable;", "GetOnSaveInstanceStateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IParcelable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Hook allowing a view to generate a representation of its internal state
 that can later be used to create a new instance with that same state.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.OnRestoreInstanceState(Android.OS.IParcelable)" />
        <altmember cref="P:Android.Views.View.SaveEnabled" />
      </Docs>
    </Member>
    <Member MemberName="OnScreenStateChanged">
      <MemberSignature Language="C#" Value="public virtual void OnScreenStateChanged (Android.Views.ScreenState screenState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnScreenStateChanged(valuetype Android.Views.ScreenState screenState) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onScreenStateChanged", "(I)V", "GetOnScreenStateChanged_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="screenState" Type="Android.Views.ScreenState">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="screenState">The new state of the screen. Can be either
                    <c><see cref="F:Android.Views.View.ScreenStateOn" /></c> or <c><see cref="F:Android.Views.View.ScreenStateOff" /></c></param>
        <summary>This method is called whenever the state of the screen this view is
 attached to changes.</summary>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="OnScrollChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnScrollChanged (int l, int t, int oldl, int oldt);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnScrollChanged(int32 l, int32 t, int32 oldl, int32 oldt) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onScrollChanged", "(IIII)V", "GetOnScrollChanged_IIIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="System.Int32" />
        <Parameter Name="t" Type="System.Int32" />
        <Parameter Name="oldl" Type="System.Int32" />
        <Parameter Name="oldt" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="l">Current horizontal scroll origin.</param>
        <param name="t">Current vertical scroll origin.</param>
        <param name="oldl">Previous horizontal scroll origin.</param>
        <param name="oldt">Previous vertical scroll origin.
</param>
        <summary>This is called in response to an internal scroll in this view (i.e., the
 view scrolled its own contents).</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnSetAlpha">
      <MemberSignature Language="C#" Value="protected virtual bool OnSetAlpha (int alpha);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnSetAlpha(int32 alpha) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onSetAlpha", "(I)Z", "GetOnSetAlpha_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alpha" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="alpha">The alpha (0..255) to apply to the view's drawing</param>
        <summary>Invoked if there is a Transform that involves alpha.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSizeChanged (int w, int h, int oldw, int oldh);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSizeChanged(int32 w, int32 h, int32 oldw, int32 oldh) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onSizeChanged", "(IIII)V", "GetOnSizeChanged_IIIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Int32" />
        <Parameter Name="h" Type="System.Int32" />
        <Parameter Name="oldw" Type="System.Int32" />
        <Parameter Name="oldh" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="w">Current width of this view.</param>
        <param name="h">Current height of this view.</param>
        <param name="oldw">Old width of this view.</param>
        <param name="oldh">Old height of this view.
</param>
        <summary>This is called during layout when the size of this view has changed.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnStartTemporaryDetach">
      <MemberSignature Language="C#" Value="public virtual void OnStartTemporaryDetach ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnStartTemporaryDetach() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onStartTemporaryDetach", "()V", "GetOnStartTemporaryDetachHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This is called when a container is going to temporarily detach a child, with
 <c><see cref="M:Android.Views.ViewGroup.DetachViewFromParent(Android.Views.View)" /></c>.</summary>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnTouchEvent">
      <MemberSignature Language="C#" Value="public virtual bool OnTouchEvent (Android.Views.MotionEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnTouchEvent(class Android.Views.MotionEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onTouchEvent", "(Landroid/view/MotionEvent;)Z", "GetOnTouchEvent_Landroid_view_MotionEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">The motion event.</param>
        <summary>Implement this method to handle touch screen motion events.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnTrackballEvent">
      <MemberSignature Language="C#" Value="public virtual bool OnTrackballEvent (Android.Views.MotionEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnTrackballEvent(class Android.Views.MotionEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onTrackballEvent", "(Landroid/view/MotionEvent;)Z", "GetOnTrackballEvent_Landroid_view_MotionEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">The motion event.</param>
        <summary>Implement this method to handle trackball motion events.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnVisibilityChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnVisibilityChanged (Android.Views.View changedView, Android.Views.ViewStates visibility);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnVisibilityChanged(class Android.Views.View changedView, valuetype Android.Views.ViewStates visibility) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onVisibilityChanged", "(Landroid/view/View;I)V", "GetOnVisibilityChanged_Landroid_view_View_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changedView" Type="Android.Views.View" />
        <Parameter Name="visibility" Type="Android.Views.ViewStates">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="changedView">The view whose visibility changed. May be
                    <c>this</c> or an ancestor view.</param>
        <param name="visibility">The new visibility, one of <c><see cref="T:Android.Views.ViewStates.Visible" tool="ReplaceLinkValue" /></c>,
                   <c><see cref="F:Android.Views.ViewStates.Invisible" tool="ReplaceLinkValue" /></c> or <c><see cref="F:Android.Views.ViewStates.Gone" tool="ReplaceLinkValue" /></c>.
</param>
        <summary>Called when the visibility of the view or an ancestor of the view has
 changed.</summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="OnWindowFocusChanged">
      <MemberSignature Language="C#" Value="public virtual void OnWindowFocusChanged (bool hasWindowFocus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnWindowFocusChanged(bool hasWindowFocus) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onWindowFocusChanged", "(Z)V", "GetOnWindowFocusChanged_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hasWindowFocus" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="hasWindowFocus">True if the window containing this view now has
        focus, false otherwise.
</param>
        <summary>Called when the window containing this view gains or loses focus.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnWindowSystemUiVisibilityChanged">
      <MemberSignature Language="C#" Value="public virtual void OnWindowSystemUiVisibilityChanged (Android.Views.SystemUiFlags visible);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnWindowSystemUiVisibilityChanged(valuetype Android.Views.SystemUiFlags visible) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onWindowSystemUiVisibilityChanged", "(I)V", "GetOnWindowSystemUiVisibilityChanged_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visible" Type="Android.Views.SystemUiFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="visible">To be added.</param>
        <summary>Override to find out when the window's requested system UI visibility
 has changed, that is the value returned by <c><see cref="P:Android.Views.View.WindowSystemUiVisibility" /></c>.</summary>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="OnWindowVisibilityChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnWindowVisibilityChanged (Android.Views.ViewStates visibility);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWindowVisibilityChanged(valuetype Android.Views.ViewStates visibility) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onWindowVisibilityChanged", "(I)V", "GetOnWindowVisibilityChanged_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visibility" Type="Android.Views.ViewStates">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="visibility">The new visibility of the window.
</param>
        <summary>Called when the window containing has change its visibility
 (between <c><see cref="F:Android.Views.ViewStates.Gone" tool="ReplaceLinkValue" /></c>, <c><see cref="F:Android.Views.ViewStates.Invisible" tool="ReplaceLinkValue" /></c>, and <c><see cref="T:Android.Views.ViewStates.Visible" tool="ReplaceLinkValue" /></c>).</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OutlineProvider">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewOutlineProvider OutlineProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.ViewOutlineProvider OutlineProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getOutlineProvider", "()Landroid/view/ViewOutlineProvider;", "GetGetOutlineProviderHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setOutlineProvider", "(Landroid/view/ViewOutlineProvider;)V", "GetSetOutlineProvider_Landroid_view_ViewOutlineProvider_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewOutlineProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current <c><see cref="T:Android.Views.ViewOutlineProvider" /></c> of the view, which generates the Outline
 that defines the shape of the shadow it casts, and enables outline clipping.</summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Views.View.OutlineProvider" />
        <altmember cref="P:Android.Views.View.ClipToOutline" />
        <altmember cref="P:Android.Views.View.ClipToOutline" />
        <altmember cref="P:Android.Views.View.OutlineProvider" />
      </Docs>
    </Member>
    <Member MemberName="Overlay">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewOverlay Overlay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.ViewOverlay Overlay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getOverlay", "()Landroid/view/ViewOverlay;", "GetGetOverlayHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewOverlay</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the overlay for this view, creating it if it does not yet exist.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 18" />
        <altmember cref="T:Android.Views.ViewOverlay" />
      </Docs>
    </Member>
    <Member MemberName="OverScrollAlways">
      <MemberSignature Language="C#" Value="public const Android.Views.OverScrollMode OverScrollAlways = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.OverScrollMode OverScrollAlways = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("OVER_SCROLL_ALWAYS")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.OverScrollMode enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.OverScrollMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Always allow a user to over-scroll this view, provided it is a
 view that can scroll.</summary>
        <remarks />
        <since version="Added in API level 9" />
        <altmember cref="P:Android.Views.View.OverScrollMode" />
        <altmember cref="P:Android.Views.View.OverScrollMode" />
      </Docs>
    </Member>
    <Member MemberName="OverScrollBy">
      <MemberSignature Language="C#" Value="protected virtual bool OverScrollBy (int deltaX, int deltaY, int scrollX, int scrollY, int scrollRangeX, int scrollRangeY, int maxOverScrollX, int maxOverScrollY, bool isTouchEvent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OverScrollBy(int32 deltaX, int32 deltaY, int32 scrollX, int32 scrollY, int32 scrollRangeX, int32 scrollRangeY, int32 maxOverScrollX, int32 maxOverScrollY, bool isTouchEvent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("overScrollBy", "(IIIIIIIIZ)Z", "GetOverScrollBy_IIIIIIIIZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deltaX" Type="System.Int32" />
        <Parameter Name="deltaY" Type="System.Int32" />
        <Parameter Name="scrollX" Type="System.Int32" />
        <Parameter Name="scrollY" Type="System.Int32" />
        <Parameter Name="scrollRangeX" Type="System.Int32" />
        <Parameter Name="scrollRangeY" Type="System.Int32" />
        <Parameter Name="maxOverScrollX" Type="System.Int32" />
        <Parameter Name="maxOverScrollY" Type="System.Int32" />
        <Parameter Name="isTouchEvent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deltaX">Change in X in pixels</param>
        <param name="deltaY">Change in Y in pixels</param>
        <param name="scrollX">Current X scroll value in pixels before applying deltaX</param>
        <param name="scrollY">Current Y scroll value in pixels before applying deltaY</param>
        <param name="scrollRangeX">Maximum content scroll range along the X axis</param>
        <param name="scrollRangeY">Maximum content scroll range along the Y axis</param>
        <param name="maxOverScrollX">Number of pixels to overscroll by in either direction
          along the X axis.</param>
        <param name="maxOverScrollY">Number of pixels to overscroll by in either direction
          along the Y axis.</param>
        <param name="isTouchEvent">true if this scroll operation is the result of a touch event.</param>
        <summary>Scroll the view with standard behavior for scrolling beyond the normal
 content boundaries.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="OverScrollIfContentScrolls">
      <MemberSignature Language="C#" Value="public const Android.Views.OverScrollMode OverScrollIfContentScrolls = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.OverScrollMode OverScrollIfContentScrolls = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("OVER_SCROLL_IF_CONTENT_SCROLLS")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.OverScrollMode enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.OverScrollMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Allow a user to over-scroll this view only if the content is large
 enough to meaningfully scroll, provided it is a view that can scroll.</summary>
        <remarks />
        <since version="Added in API level 9" />
        <altmember cref="P:Android.Views.View.OverScrollMode" />
        <altmember cref="P:Android.Views.View.OverScrollMode" />
      </Docs>
    </Member>
    <Member MemberName="OverScrollMode">
      <MemberSignature Language="C#" Value="public virtual Android.Views.OverScrollMode OverScrollMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.OverScrollMode OverScrollMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getOverScrollMode", "()I", "GetGetOverScrollModeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setOverScrollMode", "(I)V", "GetSetOverScrollMode_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.OverScrollMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the over-scroll mode for this view.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="OverScrollNever">
      <MemberSignature Language="C#" Value="public const Android.Views.OverScrollMode OverScrollNever = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.OverScrollMode OverScrollNever = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("OVER_SCROLL_NEVER")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.OverScrollMode enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.OverScrollMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Never allow a user to over-scroll this view.</summary>
        <remarks />
        <since version="Added in API level 9" />
        <altmember cref="P:Android.Views.View.OverScrollMode" />
        <altmember cref="P:Android.Views.View.OverScrollMode" />
      </Docs>
    </Member>
    <Member MemberName="PaddingBottom">
      <MemberSignature Language="C#" Value="public virtual int PaddingBottom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PaddingBottom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPaddingBottom", "()I", "GetGetPaddingBottomHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the bottom padding of this view.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PaddingEnd">
      <MemberSignature Language="C#" Value="public virtual int PaddingEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PaddingEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPaddingEnd", "()I", "GetGetPaddingEndHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the end padding of this view depending on its resolved layout direction.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="PaddingLeft">
      <MemberSignature Language="C#" Value="public virtual int PaddingLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PaddingLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPaddingLeft", "()I", "GetGetPaddingLeftHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the left padding of this view.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PaddingRight">
      <MemberSignature Language="C#" Value="public virtual int PaddingRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PaddingRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPaddingRight", "()I", "GetGetPaddingRightHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the right padding of this view.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PaddingStart">
      <MemberSignature Language="C#" Value="public virtual int PaddingStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PaddingStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPaddingStart", "()I", "GetGetPaddingStartHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the start padding of this view depending on its resolved layout direction.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="PaddingTop">
      <MemberSignature Language="C#" Value="public virtual int PaddingTop { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PaddingTop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPaddingTop", "()I", "GetGetPaddingTopHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the top padding of this view.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public Android.Views.IViewParent Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.IViewParent Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getParent", "()Landroid/view/ViewParent;", "GetGetParentHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.IViewParent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the parent of this view.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ParentForAccessibility">
      <MemberSignature Language="C#" Value="public virtual Android.Views.IViewParent ParentForAccessibility { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.IViewParent ParentForAccessibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getParentForAccessibility", "()Landroid/view/ViewParent;", "GetGetParentForAccessibilityHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.IViewParent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the parent for accessibility purposes.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="PerformAccessibilityAction">
      <MemberSignature Language="C#" Value="public virtual bool PerformAccessibilityAction (Android.AccessibilityServices.GlobalAction action, Android.OS.Bundle arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PerformAccessibilityAction(valuetype Android.AccessibilityServices.GlobalAction action, class Android.OS.Bundle arguments) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("performAccessibilityAction", "(ILandroid/os/Bundle;)Z", "GetPerformAccessibilityAction_ILandroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Android.AccessibilityServices.GlobalAction">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="arguments" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="action">The action to perform.</param>
        <param name="arguments">Optional action arguments.</param>
        <summary>Performs the specified accessibility action on the view.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="PerformClick">
      <MemberSignature Language="C#" Value="public virtual bool PerformClick ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PerformClick() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("performClick", "()Z", "GetPerformClickHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Call this view's OnClickListener, if it is defined.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PerformHapticFeedback">
      <MemberSignature Language="C#" Value="public virtual bool PerformHapticFeedback (Android.Views.FeedbackConstants feedbackConstant);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PerformHapticFeedback(valuetype Android.Views.FeedbackConstants feedbackConstant) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("performHapticFeedback", "(I)Z", "GetPerformHapticFeedback_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feedbackConstant" Type="Android.Views.FeedbackConstants">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="feedbackConstant">One of the constants defined in
 <c><see cref="T:Android.Views.HapticFeedbackConstants" /></c></param>
        <summary>BZZZTT!!1!

 </summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="PerformHapticFeedback">
      <MemberSignature Language="C#" Value="public virtual bool PerformHapticFeedback (Android.Views.FeedbackConstants feedbackConstant, Android.Views.FeedbackFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PerformHapticFeedback(valuetype Android.Views.FeedbackConstants feedbackConstant, valuetype Android.Views.FeedbackFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("performHapticFeedback", "(II)Z", "GetPerformHapticFeedback_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feedbackConstant" Type="Android.Views.FeedbackConstants">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="flags" Type="Android.Views.FeedbackFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="feedbackConstant">One of the constants defined in
 <c><see cref="T:Android.Views.HapticFeedbackConstants" /></c></param>
        <param name="flags">Additional flags as per <c><see cref="T:Android.Views.HapticFeedbackConstants" /></c>.
</param>
        <summary>BZZZTT!!1!

 </summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="PerformLongClick">
      <MemberSignature Language="C#" Value="public virtual bool PerformLongClick ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PerformLongClick() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("performLongClick", "()Z", "GetPerformLongClickHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Call this view's OnLongClickListener, if it is defined.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PivotX">
      <MemberSignature Language="C#" Value="public virtual float PivotX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 PivotX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPivotX", "()F", "GetGetPivotXHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setPivotX", "(F)V", "GetSetPivotX_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The x location of the point around which the view is <c><see cref="P:Android.Views.View.Rotation" /></c>
 and <c><see cref="P:Android.Views.View.ScaleX" /></c>.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="P:Android.Views.View.Rotation" />
        <altmember cref="P:Android.Views.View.ScaleX" />
        <altmember cref="P:Android.Views.View.ScaleY" />
        <altmember cref="P:Android.Views.View.PivotY" />
        <altmember cref="P:Android.Views.View.Rotation" />
        <altmember cref="P:Android.Views.View.ScaleX" />
        <altmember cref="P:Android.Views.View.ScaleY" />
        <altmember cref="P:Android.Views.View.PivotY" />
      </Docs>
    </Member>
    <Member MemberName="PivotY">
      <MemberSignature Language="C#" Value="public virtual float PivotY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 PivotY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPivotY", "()F", "GetGetPivotYHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setPivotY", "(F)V", "GetSetPivotY_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The y location of the point around which the view is <c><see cref="P:Android.Views.View.Rotation" /></c>
 and <c><see cref="P:Android.Views.View.ScaleY" /></c>.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="P:Android.Views.View.Rotation" />
        <altmember cref="P:Android.Views.View.ScaleX" />
        <altmember cref="P:Android.Views.View.ScaleY" />
        <altmember cref="P:Android.Views.View.PivotY" />
        <altmember cref="P:Android.Views.View.Rotation" />
        <altmember cref="P:Android.Views.View.ScaleX" />
        <altmember cref="P:Android.Views.View.ScaleY" />
        <altmember cref="P:Android.Views.View.PivotY" />
      </Docs>
    </Member>
    <Member MemberName="PlaySoundEffect">
      <MemberSignature Language="C#" Value="public virtual void PlaySoundEffect (Android.Views.SoundEffects soundConstant);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PlaySoundEffect(valuetype Android.Views.SoundEffects soundConstant) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("playSoundEffect", "(I)V", "GetPlaySoundEffect_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="soundConstant" Type="Android.Views.SoundEffects">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="soundConstant">One of the constants defined in <c><see cref="T:Android.Views.SoundEffectConstants" /></c></param>
        <summary>Play a sound effect for this view.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Post">
      <MemberSignature Language="C#" Value="public virtual bool Post (Java.Lang.IRunnable action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Post(class Java.Lang.IRunnable action) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("post", "(Ljava/lang/Runnable;)Z", "GetPost_Ljava_lang_Runnable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="action">The Runnable that will be executed.</param>
        <summary tool="true">
        </summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.PostDelayed(Java.Lang.IRunnable, System.Int64)" />
        <altmember cref="M:Android.Views.View.RemoveCallbacks(Java.Lang.IRunnable)" />
      </Docs>
    </Member>
    <Member MemberName="Post">
      <MemberSignature Language="C#" Value="public bool Post (Action action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Post(class System.Action action) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="PostDelayed">
      <MemberSignature Language="C#" Value="public virtual bool PostDelayed (Java.Lang.IRunnable action, long delayMillis);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PostDelayed(class Java.Lang.IRunnable action, int64 delayMillis) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("postDelayed", "(Ljava/lang/Runnable;J)Z", "GetPostDelayed_Ljava_lang_Runnable_JHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Java.Lang.IRunnable" />
        <Parameter Name="delayMillis" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="action">The Runnable that will be executed.</param>
        <param name="delayMillis">The delay (in milliseconds) until the Runnable
        will be executed.</param>
        <summary tool="true">
        </summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.Post(Java.Lang.IRunnable)" />
        <altmember cref="M:Android.Views.View.RemoveCallbacks(Java.Lang.IRunnable)" />
      </Docs>
    </Member>
    <Member MemberName="PostDelayed">
      <MemberSignature Language="C#" Value="public bool PostDelayed (Action action, long delayMillis);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool PostDelayed(class System.Action action, int64 delayMillis) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action" />
        <Parameter Name="delayMillis" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <param name="delayMillis">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="PostInvalidate">
      <MemberSignature Language="C#" Value="public virtual void PostInvalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostInvalidate() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("postInvalidate", "()V", "GetPostInvalidateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">
        </summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.Invalidate" />
        <altmember cref="M:Android.Views.View.PostInvalidateDelayed(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="PostInvalidate">
      <MemberSignature Language="C#" Value="public virtual void PostInvalidate (int left, int top, int right, int bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostInvalidate(int32 left, int32 top, int32 right, int32 bottom) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("postInvalidate", "(IIII)V", "GetPostInvalidate_IIIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left">The left coordinate of the rectangle to invalidate.</param>
        <param name="top">The top coordinate of the rectangle to invalidate.</param>
        <param name="right">The right coordinate of the rectangle to invalidate.</param>
        <param name="bottom">The bottom coordinate of the rectangle to invalidate.</param>
        <summary>
        </summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.Invalidate(System.Int32, System.Int32, System.Int32, System.Int32)" />
        <altmember cref="M:Android.Views.View.Invalidate(Android.Graphics.Rect)" />
        <altmember cref="M:Android.Views.View.PostInvalidateDelayed(System.Int64, System.Int32, System.Int32, System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="PostInvalidateDelayed">
      <MemberSignature Language="C#" Value="public virtual void PostInvalidateDelayed (long delayMilliseconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostInvalidateDelayed(int64 delayMilliseconds) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("postInvalidateDelayed", "(J)V", "GetPostInvalidateDelayed_JHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delayMilliseconds" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="delayMilliseconds">the duration in milliseconds to delay the
         invalidation by</param>
        <summary tool="true">
        </summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.Invalidate" />
        <altmember cref="M:Android.Views.View.PostInvalidate" />
      </Docs>
    </Member>
    <Member MemberName="PostInvalidateDelayed">
      <MemberSignature Language="C#" Value="public virtual void PostInvalidateDelayed (long delayMilliseconds, int left, int top, int right, int bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostInvalidateDelayed(int64 delayMilliseconds, int32 left, int32 top, int32 right, int32 bottom) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("postInvalidateDelayed", "(JIIII)V", "GetPostInvalidateDelayed_JIIIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delayMilliseconds" Type="System.Int64" />
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="delayMilliseconds">the duration in milliseconds to delay the
         invalidation by</param>
        <param name="left">The left coordinate of the rectangle to invalidate.</param>
        <param name="top">The top coordinate of the rectangle to invalidate.</param>
        <param name="right">The right coordinate of the rectangle to invalidate.</param>
        <param name="bottom">The bottom coordinate of the rectangle to invalidate.</param>
        <summary>
        </summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.Invalidate(System.Int32, System.Int32, System.Int32, System.Int32)" />
        <altmember cref="M:Android.Views.View.Invalidate(Android.Graphics.Rect)" />
        <altmember cref="M:Android.Views.View.PostInvalidate(System.Int32, System.Int32, System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="PostInvalidateOnAnimation">
      <MemberSignature Language="C#" Value="public virtual void PostInvalidateOnAnimation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostInvalidateOnAnimation() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("postInvalidateOnAnimation", "()V", "GetPostInvalidateOnAnimationHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">
        </summary>
        <remarks />
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Views.View.Invalidate" />
      </Docs>
    </Member>
    <Member MemberName="PostInvalidateOnAnimation">
      <MemberSignature Language="C#" Value="public virtual void PostInvalidateOnAnimation (int left, int top, int right, int bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostInvalidateOnAnimation(int32 left, int32 top, int32 right, int32 bottom) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("postInvalidateOnAnimation", "(IIII)V", "GetPostInvalidateOnAnimation_IIIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left">The left coordinate of the rectangle to invalidate.</param>
        <param name="top">The top coordinate of the rectangle to invalidate.</param>
        <param name="right">The right coordinate of the rectangle to invalidate.</param>
        <param name="bottom">The bottom coordinate of the rectangle to invalidate.</param>
        <summary>
        </summary>
        <remarks />
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Views.View.Invalidate(System.Int32, System.Int32, System.Int32, System.Int32)" />
        <altmember cref="M:Android.Views.View.Invalidate(Android.Graphics.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="PostOnAnimation">
      <MemberSignature Language="C#" Value="public virtual void PostOnAnimation (Java.Lang.IRunnable action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostOnAnimation(class Java.Lang.IRunnable action) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("postOnAnimation", "(Ljava/lang/Runnable;)V", "GetPostOnAnimation_Ljava_lang_Runnable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="action">The Runnable that will be executed.</param>
        <summary tool="true">
        </summary>
        <remarks />
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Views.View.PostOnAnimationDelayed(Java.Lang.IRunnable, System.Int64)" />
        <altmember cref="M:Android.Views.View.RemoveCallbacks(Java.Lang.IRunnable)" />
      </Docs>
    </Member>
    <Member MemberName="PostOnAnimationDelayed">
      <MemberSignature Language="C#" Value="public virtual void PostOnAnimationDelayed (Java.Lang.IRunnable action, long delayMillis);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostOnAnimationDelayed(class Java.Lang.IRunnable action, int64 delayMillis) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("postOnAnimationDelayed", "(Ljava/lang/Runnable;J)V", "GetPostOnAnimationDelayed_Ljava_lang_Runnable_JHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Java.Lang.IRunnable" />
        <Parameter Name="delayMillis" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="action">The Runnable that will be executed.</param>
        <param name="delayMillis">The delay (in milliseconds) until the Runnable
        will be executed.</param>
        <summary tool="true">
        </summary>
        <remarks />
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Views.View.PostOnAnimation(Java.Lang.IRunnable)" />
        <altmember cref="M:Android.Views.View.RemoveCallbacks(Java.Lang.IRunnable)" />
      </Docs>
    </Member>
    <Member MemberName="Pressed">
      <MemberSignature Language="C#" Value="public virtual bool Pressed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Pressed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isPressed", "()Z", "GetIsPressedHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setPressed", "(Z)V", "GetSetPressed_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether the view is currently in pressed state.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.Pressed" />
        <altmember cref="P:Android.Views.View.Clickable" />
        <altmember cref="P:Android.Views.View.Clickable" />
        <altmember cref="P:Android.Views.View.Clickable" />
        <altmember cref="P:Android.Views.View.Clickable" />
      </Docs>
    </Member>
    <Member MemberName="PressedEnabledFocusedSelectedStateSet">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt; PressedEnabledFocusedSelectedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; PressedEnabledFocusedSelectedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PRESSED_ENABLED_FOCUSED_SELECTED_STATE_SET")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is pressed, enabled, focused and selected.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.PressedStateSet" />
        <altmember cref="P:Android.Views.View.EnabledStateSet" />
        <altmember cref="P:Android.Views.View.SelectedStateSet" />
        <altmember cref="P:Android.Views.View.FocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="PressedEnabledFocusedSelectedWindowFocusedStateSet">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt; PressedEnabledFocusedSelectedWindowFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; PressedEnabledFocusedSelectedWindowFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PRESSED_ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is pressed, enabled, focused, selected and its window
 has the focus.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.PressedStateSet" />
        <altmember cref="P:Android.Views.View.EnabledStateSet" />
        <altmember cref="P:Android.Views.View.SelectedStateSet" />
        <altmember cref="P:Android.Views.View.FocusedStateSet" />
        <altmember cref="P:Android.Views.View.WindowFocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="PressedEnabledFocusedStateSet">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt; PressedEnabledFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; PressedEnabledFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PRESSED_ENABLED_FOCUSED_STATE_SET")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is pressed, enabled and focused.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.PressedStateSet" />
        <altmember cref="P:Android.Views.View.EnabledStateSet" />
        <altmember cref="P:Android.Views.View.FocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="PressedEnabledFocusedWindowFocusedStateSet">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt; PressedEnabledFocusedWindowFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; PressedEnabledFocusedWindowFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PRESSED_ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is pressed, enabled, focused and its window has the
 focus.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.PressedStateSet" />
        <altmember cref="P:Android.Views.View.EnabledStateSet" />
        <altmember cref="P:Android.Views.View.FocusedStateSet" />
        <altmember cref="P:Android.Views.View.WindowFocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="PressedEnabledSelectedStateSet">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt; PressedEnabledSelectedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; PressedEnabledSelectedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PRESSED_ENABLED_SELECTED_STATE_SET")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is pressed, enabled and selected.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.PressedStateSet" />
        <altmember cref="P:Android.Views.View.EnabledStateSet" />
        <altmember cref="P:Android.Views.View.SelectedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="PressedEnabledSelectedWindowFocusedStateSet">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt; PressedEnabledSelectedWindowFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; PressedEnabledSelectedWindowFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PRESSED_ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is pressed, enabled, selected and its window has the
 focus.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.PressedStateSet" />
        <altmember cref="P:Android.Views.View.EnabledStateSet" />
        <altmember cref="P:Android.Views.View.SelectedStateSet" />
        <altmember cref="P:Android.Views.View.WindowFocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="PressedEnabledStateSet">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt; PressedEnabledStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; PressedEnabledStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PRESSED_ENABLED_STATE_SET")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is pressed and enabled.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.PressedStateSet" />
        <altmember cref="P:Android.Views.View.EnabledStateSet" />
      </Docs>
    </Member>
    <Member MemberName="PressedEnabledWindowFocusedStateSet">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt; PressedEnabledWindowFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; PressedEnabledWindowFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PRESSED_ENABLED_WINDOW_FOCUSED_STATE_SET")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is pressed, enabled and its window has the focus.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.PressedStateSet" />
        <altmember cref="P:Android.Views.View.EnabledStateSet" />
        <altmember cref="P:Android.Views.View.WindowFocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="PressedFocusedSelectedStateSet">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt; PressedFocusedSelectedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; PressedFocusedSelectedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PRESSED_FOCUSED_SELECTED_STATE_SET")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is pressed, focused and selected.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.PressedStateSet" />
        <altmember cref="P:Android.Views.View.SelectedStateSet" />
        <altmember cref="P:Android.Views.View.FocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="PressedFocusedSelectedWindowFocusedStateSet">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt; PressedFocusedSelectedWindowFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; PressedFocusedSelectedWindowFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PRESSED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is pressed, focused, selected and its window has the focus.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.PressedStateSet" />
        <altmember cref="P:Android.Views.View.FocusedStateSet" />
        <altmember cref="P:Android.Views.View.SelectedStateSet" />
        <altmember cref="P:Android.Views.View.WindowFocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="PressedFocusedStateSet">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt; PressedFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; PressedFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PRESSED_FOCUSED_STATE_SET")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is pressed and focused.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.PressedStateSet" />
        <altmember cref="P:Android.Views.View.FocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="PressedFocusedWindowFocusedStateSet">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt; PressedFocusedWindowFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; PressedFocusedWindowFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PRESSED_FOCUSED_WINDOW_FOCUSED_STATE_SET")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is pressed, focused and its window has the focus.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.PressedStateSet" />
        <altmember cref="P:Android.Views.View.FocusedStateSet" />
        <altmember cref="P:Android.Views.View.WindowFocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="PressedSelectedStateSet">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt; PressedSelectedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; PressedSelectedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PRESSED_SELECTED_STATE_SET")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is pressed and selected.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.PressedStateSet" />
        <altmember cref="P:Android.Views.View.SelectedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="PressedSelectedWindowFocusedStateSet">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt; PressedSelectedWindowFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; PressedSelectedWindowFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PRESSED_SELECTED_WINDOW_FOCUSED_STATE_SET")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is pressed, selected and its window has the focus.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.PressedStateSet" />
        <altmember cref="P:Android.Views.View.SelectedStateSet" />
        <altmember cref="P:Android.Views.View.WindowFocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="PressedStateSet">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt; PressedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; PressedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PRESSED_STATE_SET")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is pressed.</summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="T:Android.Graphics.Drawables.Drawable" />
        <altmember cref="M:Android.Views.View.GetDrawableState" />
      </Docs>
    </Member>
    <Member MemberName="PressedWindowFocusedStateSet">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt; PressedWindowFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; PressedWindowFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PRESSED_WINDOW_FOCUSED_STATE_SET")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is pressed and its window has the focus.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.PressedStateSet" />
        <altmember cref="P:Android.Views.View.WindowFocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="RefreshDrawableState">
      <MemberSignature Language="C#" Value="public virtual void RefreshDrawableState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RefreshDrawableState() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("refreshDrawableState", "()V", "GetRefreshDrawableStateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Call this to force a view to update its drawable state.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.DrawableStateChanged" />
        <altmember cref="M:Android.Views.View.GetDrawableState" />
      </Docs>
    </Member>
    <Member MemberName="RemoveCallbacks">
      <MemberSignature Language="C#" Value="public virtual bool RemoveCallbacks (Java.Lang.IRunnable action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoveCallbacks(class Java.Lang.IRunnable action) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeCallbacks", "(Ljava/lang/Runnable;)Z", "GetRemoveCallbacks_Ljava_lang_Runnable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="action">The Runnable to remove from the message handling queue</param>
        <summary tool="true">
        </summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.Post(Java.Lang.IRunnable)" />
        <altmember cref="M:Android.Views.View.PostDelayed(Java.Lang.IRunnable, System.Int64)" />
        <altmember cref="M:Android.Views.View.PostOnAnimation(Java.Lang.IRunnable)" />
        <altmember cref="M:Android.Views.View.PostOnAnimationDelayed(Java.Lang.IRunnable, System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveCallbacks">
      <MemberSignature Language="C#" Value="public bool RemoveCallbacks (Action action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveCallbacks(class System.Action action) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="RemoveOnAttachStateChangeListener">
      <MemberSignature Language="C#" Value="public virtual void RemoveOnAttachStateChangeListener (Android.Views.View.IOnAttachStateChangeListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveOnAttachStateChangeListener(class Android.Views.View/IOnAttachStateChangeListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeOnAttachStateChangeListener", "(Landroid/view/View$OnAttachStateChangeListener;)V", "GetRemoveOnAttachStateChangeListener_Landroid_view_View_OnAttachStateChangeListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Views.View+IOnAttachStateChangeListener" />
      </Parameters>
      <Docs>
        <param name="listener">Listener to remove</param>
        <summary>Remove a listener for attach state changes.</summary>
        <remarks />
        <since version="Added in API level 12" />
        <altmember cref="M:Android.Views.View.AddOnAttachStateChangeListener(.IOnAttachStateChangeListener)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveOnLayoutChangeListener">
      <MemberSignature Language="C#" Value="public virtual void RemoveOnLayoutChangeListener (Android.Views.View.IOnLayoutChangeListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveOnLayoutChangeListener(class Android.Views.View/IOnLayoutChangeListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeOnLayoutChangeListener", "(Landroid/view/View$OnLayoutChangeListener;)V", "GetRemoveOnLayoutChangeListener_Landroid_view_View_OnLayoutChangeListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Views.View+IOnLayoutChangeListener" />
      </Parameters>
      <Docs>
        <param name="listener">The listener for layout bounds change.
</param>
        <summary>Remove a listener for layout changes.</summary>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="RequestApplyInsets">
      <MemberSignature Language="C#" Value="public virtual void RequestApplyInsets ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestApplyInsets() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requestApplyInsets", "()V", "GetRequestApplyInsetsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ask that a new dispatch of <c><see cref="M:Android.Views.View.OnApplyWindowInsets(Android.Views.WindowInsets)" /></c> be performed.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="RequestFitSystemWindows">
      <MemberSignature Language="C#" Value="public virtual void RequestFitSystemWindows ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestFitSystemWindows() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requestFitSystemWindows", "()V", "GetRequestFitSystemWindowsHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ask that a new dispatch of <c><see cref="M:Android.Views.View.FitSystemWindows(Android.Graphics.Rect)" /></c> be performed.</summary>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="RequestFocus">
      <MemberSignature Language="C#" Value="public bool RequestFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RequestFocus() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requestFocus", "()Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">Call this to try to give focus to a specific view or to one of its
 descendants.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RequestFocus">
      <MemberSignature Language="C#" Value="public bool RequestFocus (Android.Views.FocusSearchDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RequestFocus(valuetype Android.Views.FocusSearchDirection direction) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requestFocus", "(I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="Android.Views.FocusSearchDirection">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="direction">One of FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, and FOCUS_RIGHT</param>
        <summary>Call this to try to give focus to a specific view or to one of its
 descendants and give it a hint about what direction focus is heading.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RequestFocus">
      <MemberSignature Language="C#" Value="public virtual bool RequestFocus (Android.Views.FocusSearchDirection direction, Android.Graphics.Rect previouslyFocusedRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RequestFocus(valuetype Android.Views.FocusSearchDirection direction, class Android.Graphics.Rect previouslyFocusedRect) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requestFocus", "(ILandroid/graphics/Rect;)Z", "GetRequestFocus_ILandroid_graphics_Rect_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="Android.Views.FocusSearchDirection">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="previouslyFocusedRect" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="direction">One of FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, and FOCUS_RIGHT</param>
        <param name="previouslyFocusedRect">The rectangle (in this View's coordinate system)
        to give a finer grained hint about where focus is coming from.  May be null
        if there is no hint.</param>
        <summary>Call this to try to give focus to a specific view or to one of its descendants
 and give it hints about the direction and a specific rectangle that the focus
 is coming from.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RequestFocusFromTouch">
      <MemberSignature Language="C#" Value="public bool RequestFocusFromTouch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RequestFocusFromTouch() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requestFocusFromTouch", "()Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Call this to try to give focus to a specific view or to one of its descendants.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.IsInTouchMode" />
      </Docs>
    </Member>
    <Member MemberName="RequestLayout">
      <MemberSignature Language="C#" Value="public virtual void RequestLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestLayout() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requestLayout", "()V", "GetRequestLayoutHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Call this when something has changed which has invalidated the
 layout of this view.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RequestRectangleOnScreen">
      <MemberSignature Language="C#" Value="public virtual bool RequestRectangleOnScreen (Android.Graphics.Rect rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RequestRectangleOnScreen(class Android.Graphics.Rect rectangle) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requestRectangleOnScreen", "(Landroid/graphics/Rect;)Z", "GetRequestRectangleOnScreen_Landroid_graphics_Rect_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="rectangle">The rectangle.</param>
        <summary>Request that a rectangle of this view be visible on the screen,
 scrolling if necessary just enough.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RequestRectangleOnScreen">
      <MemberSignature Language="C#" Value="public virtual bool RequestRectangleOnScreen (Android.Graphics.Rect rectangle, bool immediate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RequestRectangleOnScreen(class Android.Graphics.Rect rectangle, bool immediate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requestRectangleOnScreen", "(Landroid/graphics/Rect;Z)Z", "GetRequestRectangleOnScreen_Landroid_graphics_Rect_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="Android.Graphics.Rect" />
        <Parameter Name="immediate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rectangle">The rectangle.</param>
        <param name="immediate">True to forbid animated scrolling, false otherwise</param>
        <summary>Request that a rectangle of this view be visible on the screen,
 scrolling if necessary just enough.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RequestUnbufferedDispatch">
      <MemberSignature Language="C#" Value="public void RequestUnbufferedDispatch (Android.Views.MotionEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequestUnbufferedDispatch(class Android.Views.MotionEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requestUnbufferedDispatch", "(Landroid/view/MotionEvent;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>Request unbuffered dispatch of the given stream of MotionEvents to this View.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ResolveSize">
      <MemberSignature Language="C#" Value="public static int ResolveSize (int size, int measureSpec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ResolveSize(int32 size, int32 measureSpec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resolveSize", "(II)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="measureSpec" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="size">To be added.</param>
        <param name="measureSpec">To be added.</param>
        <summary>Version of <c><see cref="M:Android.Views.View.ResolveSizeAndState(System.Int32, System.Int32, System.Int32)" /></c>
 returning only the <c><see cref="F:Android.Views.View.MeasuredSizeMask" /></c> bits of the result.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ResolveSizeAndState">
      <MemberSignature Language="C#" Value="public static int ResolveSizeAndState (int size, int measureSpec, int childMeasuredState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ResolveSizeAndState(int32 size, int32 measureSpec, int32 childMeasuredState) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resolveSizeAndState", "(III)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="measureSpec" Type="System.Int32" />
        <Parameter Name="childMeasuredState" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="size">How big the view wants to be.</param>
        <param name="measureSpec">Constraints imposed by the parent.</param>
        <param name="childMeasuredState">Size information bit mask for the view's
                           children.</param>
        <summary>Utility to reconcile a desired size and state, with constraints imposed
 by a MeasureSpec.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Resources">
      <MemberSignature Language="C#" Value="public virtual Android.Content.Res.Resources Resources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.Res.Resources Resources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getResources", "()Landroid/content/res/Resources;", "GetGetResourcesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.Resources</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the resources associated with this view.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RestoreHierarchyState">
      <MemberSignature Language="C#" Value="public virtual void RestoreHierarchyState (Android.Util.SparseArray container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RestoreHierarchyState(class Android.Util.SparseArray container) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("restoreHierarchyState", "(Landroid/util/SparseArray;)V", "GetRestoreHierarchyState_Landroid_util_SparseArray_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="Android.Util.SparseArray" />
      </Parameters>
      <Docs>
        <param name="container">To be added.</param>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public int Right { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Right" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getRight", "()I", "GetGetRightHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setRight", "(I)V", "GetSetRight_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Right position of this view relative to its parent.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RightFadingEdgeStrength">
      <MemberSignature Language="C#" Value="protected virtual float RightFadingEdgeStrength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 RightFadingEdgeStrength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getRightFadingEdgeStrength", "()F", "GetGetRightFadingEdgeStrengthHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the strength, or intensity, of the right faded edge.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RightPaddingOffset">
      <MemberSignature Language="C#" Value="protected virtual int RightPaddingOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RightPaddingOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getRightPaddingOffset", "()I", "GetGetRightPaddingOffsetHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Amount by which to extend the right fading region.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 2" />
        <altmember cref="P:Android.Views.View.IsPaddingOffsetRequired" />
      </Docs>
    </Member>
    <Member MemberName="RootView">
      <MemberSignature Language="C#" Value="public virtual Android.Views.View RootView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.View RootView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getRootView", "()Landroid/view/View;", "GetGetRootViewHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
        </summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public virtual float Rotation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Rotation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getRotation", "()F", "GetGetRotationHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setRotation", "(F)V", "GetSetRotation_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The degrees that the view is rotated around the pivot point.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="P:Android.Views.View.Rotation" />
        <altmember cref="P:Android.Views.View.PivotX" />
        <altmember cref="P:Android.Views.View.PivotY" />
        <altmember cref="P:Android.Views.View.Rotation" />
        <altmember cref="P:Android.Views.View.PivotX" />
        <altmember cref="P:Android.Views.View.PivotY" />
        <altmember cref="P:Android.Views.View.RotationX" />
        <altmember cref="P:Android.Views.View.RotationY" />
      </Docs>
    </Member>
    <Member MemberName="RotationX">
      <MemberSignature Language="C#" Value="public virtual float RotationX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 RotationX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getRotationX", "()F", "GetGetRotationXHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setRotationX", "(F)V", "GetSetRotationX_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The degrees that the view is rotated around the horizontal axis through the pivot point.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="P:Android.Views.View.PivotX" />
        <altmember cref="P:Android.Views.View.PivotY" />
        <altmember cref="P:Android.Views.View.RotationX" />
        <altmember cref="P:Android.Views.View.RotationX" />
        <altmember cref="P:Android.Views.View.PivotX" />
        <altmember cref="P:Android.Views.View.PivotY" />
        <altmember cref="P:Android.Views.View.Rotation" />
        <altmember cref="P:Android.Views.View.RotationY" />
        <altmember cref="M:Android.Views.View.SetCameraDistance(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="RotationY">
      <MemberSignature Language="C#" Value="public virtual float RotationY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 RotationY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getRotationY", "()F", "GetGetRotationYHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setRotationY", "(F)V", "GetSetRotationY_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The degrees that the view is rotated around the vertical axis through the pivot point.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="P:Android.Views.View.PivotX" />
        <altmember cref="P:Android.Views.View.PivotY" />
        <altmember cref="P:Android.Views.View.RotationY" />
        <altmember cref="P:Android.Views.View.RotationY" />
        <altmember cref="P:Android.Views.View.PivotX" />
        <altmember cref="P:Android.Views.View.PivotY" />
        <altmember cref="P:Android.Views.View.Rotation" />
        <altmember cref="P:Android.Views.View.RotationX" />
        <altmember cref="M:Android.Views.View.SetCameraDistance(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="SaveEnabled">
      <MemberSignature Language="C#" Value="public virtual bool SaveEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isSaveEnabled", "()Z", "GetIsSaveEnabledHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSaveEnabled", "(Z)V", "GetSetSaveEnabled_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this view will save its state (that is,
 whether its <c><see cref="M:Android.Views.View.OnSaveInstanceState" /></c> method will be called).</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.SaveEnabled" />
        <altmember cref="P:Android.Views.View.SaveEnabled" />
        <altmember cref="P:Android.Views.View.Id" />
        <altmember cref="M:Android.Views.View.OnSaveInstanceState" />
      </Docs>
    </Member>
    <Member MemberName="SaveFromParentEnabled">
      <MemberSignature Language="C#" Value="public virtual bool SaveFromParentEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveFromParentEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isSaveFromParentEnabled", "()Z", "GetIsSaveFromParentEnabledHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSaveFromParentEnabled", "(Z)V", "GetSetSaveFromParentEnabled_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether the entire hierarchy under this view will save its
 state when a state saving traversal occurs from its parent.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="P:Android.Views.View.SaveFromParentEnabled" />
        <altmember cref="P:Android.Views.View.SaveFromParentEnabled" />
        <altmember cref="P:Android.Views.View.Id" />
        <altmember cref="M:Android.Views.View.OnSaveInstanceState" />
      </Docs>
    </Member>
    <Member MemberName="SaveHierarchyState">
      <MemberSignature Language="C#" Value="public virtual void SaveHierarchyState (Android.Util.SparseArray container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveHierarchyState(class Android.Util.SparseArray container) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("saveHierarchyState", "(Landroid/util/SparseArray;)V", "GetSaveHierarchyState_Landroid_util_SparseArray_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="Android.Util.SparseArray" />
      </Parameters>
      <Docs>
        <param name="container">To be added.</param>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ScaleX">
      <MemberSignature Language="C#" Value="public virtual float ScaleX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 ScaleX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getScaleX", "()F", "GetGetScaleXHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setScaleX", "(F)V", "GetSetScaleX_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The amount that the view is scaled in x around the pivot point, as a proportion of
 the view's unscaled width.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="P:Android.Views.View.PivotX" />
        <altmember cref="P:Android.Views.View.PivotY" />
        <altmember cref="P:Android.Views.View.PivotX" />
        <altmember cref="P:Android.Views.View.PivotY" />
      </Docs>
    </Member>
    <Member MemberName="ScaleXs">
      <MemberSignature Language="C#" Value="public static Android.Util.Property ScaleXs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Util.Property ScaleXs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SCALE_X")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Util.Property</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A Property wrapper around the <c>scaleX</c> functionality handled by the
 <c><see cref="P:Android.Views.View.ScaleX" /></c> and <c><see cref="P:Android.Views.View.ScaleX" /></c> methods.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="ScaleY">
      <MemberSignature Language="C#" Value="public virtual float ScaleY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 ScaleY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getScaleY", "()F", "GetGetScaleYHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setScaleY", "(F)V", "GetSetScaleY_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The amount that the view is scaled in y around the pivot point, as a proportion of
 the view's unscaled height.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="P:Android.Views.View.PivotX" />
        <altmember cref="P:Android.Views.View.PivotY" />
        <altmember cref="P:Android.Views.View.PivotX" />
        <altmember cref="P:Android.Views.View.PivotY" />
      </Docs>
    </Member>
    <Member MemberName="ScaleYs">
      <MemberSignature Language="C#" Value="public static Android.Util.Property ScaleYs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Util.Property ScaleYs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SCALE_Y")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Util.Property</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A Property wrapper around the <c>scaleY</c> functionality handled by the
 <c><see cref="P:Android.Views.View.ScaleY" /></c> and <c><see cref="P:Android.Views.View.ScaleY" /></c> methods.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="ScheduleDrawable">
      <MemberSignature Language="C#" Value="public virtual void ScheduleDrawable (Android.Graphics.Drawables.Drawable who, Java.Lang.IRunnable what, long when);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScheduleDrawable(class Android.Graphics.Drawables.Drawable who, class Java.Lang.IRunnable what, int64 when) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("scheduleDrawable", "(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;J)V", "GetScheduleDrawable_Landroid_graphics_drawable_Drawable_Ljava_lang_Runnable_JHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="who" Type="Android.Graphics.Drawables.Drawable" />
        <Parameter Name="what" Type="Java.Lang.IRunnable" />
        <Parameter Name="when" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="who">the recipient of the action</param>
        <param name="what">the action to run on the drawable</param>
        <param name="when">the time at which the action must occur. Uses the
        <c><see cref="M:Android.OS.SystemClock.UptimeMillis" /></c> timebase.
</param>
        <summary>Schedules an action on a drawable to occur at a specified time.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ScheduleDrawable">
      <MemberSignature Language="C#" Value="public void ScheduleDrawable (Android.Graphics.Drawables.Drawable who, Action what, long when);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleDrawable(class Android.Graphics.Drawables.Drawable who, class System.Action what, int64 when) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="who" Type="Android.Graphics.Drawables.Drawable" />
        <Parameter Name="what" Type="System.Action" />
        <Parameter Name="when" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="who">To be added.</param>
        <param name="what">To be added.</param>
        <param name="when">To be added.</param>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ScreenStateOff">
      <MemberSignature Language="C#" Value="public const Android.Views.ScreenState ScreenStateOff = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.ScreenState ScreenStateOff = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SCREEN_STATE_OFF")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.ScreenState enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ScreenState</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Indicates that the screen has changed state and is now off.</summary>
        <remarks />
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Views.View.OnScreenStateChanged(Android.Views.ScreenState)" />
      </Docs>
    </Member>
    <Member MemberName="ScreenStateOn">
      <MemberSignature Language="C#" Value="public const Android.Views.ScreenState ScreenStateOn = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.ScreenState ScreenStateOn = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SCREEN_STATE_ON")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.ScreenState enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ScreenState</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Indicates that the screen has changed state and is now on.</summary>
        <remarks />
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Views.View.OnScreenStateChanged(Android.Views.ScreenState)" />
      </Docs>
    </Member>
    <Member MemberName="ScrollAxisHorizontal">
      <MemberSignature Language="C#" Value="public const Android.Views.ScrollAxis ScrollAxisHorizontal = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.ScrollAxis ScrollAxisHorizontal = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SCROLL_AXIS_HORIZONTAL")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.ScrollAxis enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ScrollAxis</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Indicates scrolling along the horizontal axis.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ScrollAxisNone">
      <MemberSignature Language="C#" Value="public const Android.Views.ScrollAxis ScrollAxisNone = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.ScrollAxis ScrollAxisNone = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SCROLL_AXIS_NONE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.ScrollAxis enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ScrollAxis</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Indicates no axis of view scrolling.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ScrollAxisVertical">
      <MemberSignature Language="C#" Value="public const Android.Views.ScrollAxis ScrollAxisVertical = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.ScrollAxis ScrollAxisVertical = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SCROLL_AXIS_VERTICAL")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.ScrollAxis enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ScrollAxis</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Indicates scrolling along the vertical axis.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ScrollBarDefaultDelayBeforeFade">
      <MemberSignature Language="C#" Value="public virtual int ScrollBarDefaultDelayBeforeFade { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScrollBarDefaultDelayBeforeFade" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getScrollBarDefaultDelayBeforeFade", "()I", "GetGetScrollBarDefaultDelayBeforeFadeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setScrollBarDefaultDelayBeforeFade", "(I)V", "GetSetScrollBarDefaultDelayBeforeFade_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the delay before scrollbars fade.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="ScrollBarFadeDuration">
      <MemberSignature Language="C#" Value="public virtual int ScrollBarFadeDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScrollBarFadeDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getScrollBarFadeDuration", "()I", "GetGetScrollBarFadeDurationHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setScrollBarFadeDuration", "(I)V", "GetSetScrollBarFadeDuration_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the scrollbar fade duration.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="ScrollbarFadingEnabled">
      <MemberSignature Language="C#" Value="public virtual bool ScrollbarFadingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScrollbarFadingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isScrollbarFadingEnabled", "()Z", "GetIsScrollbarFadingEnabledHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setScrollbarFadingEnabled", "(Z)V", "GetSetScrollbarFadingEnabled_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if scrollbars will fade when this view is not scrolling</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="ScrollBarSize">
      <MemberSignature Language="C#" Value="public virtual int ScrollBarSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScrollBarSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getScrollBarSize", "()I", "GetGetScrollBarSizeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setScrollBarSize", "(I)V", "GetSetScrollBarSize_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the scrollbar size.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="ScrollBarStyle">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ScrollbarStyles ScrollBarStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.ScrollbarStyles ScrollBarStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getScrollBarStyle", "()I", "GetGetScrollBarStyleHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setScrollBarStyle", "(I)V", "GetSetScrollBarStyle_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ScrollbarStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
        </summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ScrollBy">
      <MemberSignature Language="C#" Value="public virtual void ScrollBy (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScrollBy(int32 x, int32 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("scrollBy", "(II)V", "GetScrollBy_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">the amount of pixels to scroll by horizontally</param>
        <param name="y">the amount of pixels to scroll by vertically
</param>
        <summary>Move the scrolled position of your view.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ScrollTo">
      <MemberSignature Language="C#" Value="public virtual void ScrollTo (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScrollTo(int32 x, int32 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("scrollTo", "(II)V", "GetScrollTo_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">the x position to scroll to</param>
        <param name="y">the y position to scroll to
</param>
        <summary>Set the scrolled position of your view.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ScrollX">
      <MemberSignature Language="C#" Value="public int ScrollX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScrollX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getScrollX", "()I", "GetGetScrollXHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setScrollX", "(I)V", "GetSetScrollX_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the scrolled left position of this view.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ScrollY">
      <MemberSignature Language="C#" Value="public int ScrollY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScrollY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getScrollY", "()I", "GetGetScrollYHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setScrollY", "(I)V", "GetSetScrollY_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the scrolled top position of this view.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public virtual bool Selected { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Selected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isSelected", "()Z", "GetIsSelectedHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSelected", "(Z)V", "GetSetSelected_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the selection state of this view.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SelectedStateSet">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt; SelectedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; SelectedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SELECTED_STATE_SET")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is selected.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Graphics.Drawables.Drawable" />
        <altmember cref="M:Android.Views.View.GetDrawableState" />
      </Docs>
    </Member>
    <Member MemberName="SelectedWindowFocusedStateSet">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt; SelectedWindowFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; SelectedWindowFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SELECTED_WINDOW_FOCUSED_STATE_SET")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is selected and that its window has the focus.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.SelectedStateSet" />
        <altmember cref="P:Android.Views.View.WindowFocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="SendAccessibilityEvent">
      <MemberSignature Language="C#" Value="public virtual void SendAccessibilityEvent (Android.Views.Accessibility.EventTypes eventType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendAccessibilityEvent(valuetype Android.Views.Accessibility.EventTypes eventType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sendAccessibilityEvent", "(I)V", "GetSendAccessibilityEvent_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="Android.Views.Accessibility.EventTypes" />
      </Parameters>
      <Docs>
        <param name="eventType">The type of the event to send, as defined by several types from
 <c><see cref="T:Android.Views.Accessibility.AccessibilityEvent" /></c>, such as
 <c><see cref="F:Android.Views.Accessibility.EventTypes.ViewClicked" tool="ReplaceLinkValue" /></c> or
 <c><see cref="F:Android.Support.V4.View.Accessibility.AccessibilityEventCompat.TypeViewHoverEnter" tool="ReplaceLinkValue" /></c>.</param>
        <summary>Sends an accessibility event of the given type.</summary>
        <remarks />
        <since version="Added in API level 4" />
        <altmember cref="M:Android.Views.View.OnInitializeAccessibilityEvent(Android.Views.Accessibility.AccessibilityEvent)" />
        <altmember cref="M:Android.Views.View.DispatchPopulateAccessibilityEvent(Android.Views.Accessibility.AccessibilityEvent)" />
        <altmember cref="M:Android.Views.IViewParent.RequestSendAccessibilityEvent(Android.Views.View, Android.Views.Accessibility.AccessibilityEvent)" />
      </Docs>
    </Member>
    <Member MemberName="SendAccessibilityEventUnchecked">
      <MemberSignature Language="C#" Value="public virtual void SendAccessibilityEventUnchecked (Android.Views.Accessibility.AccessibilityEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendAccessibilityEventUnchecked(class Android.Views.Accessibility.AccessibilityEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sendAccessibilityEventUnchecked", "(Landroid/view/accessibility/AccessibilityEvent;)V", "GetSendAccessibilityEventUnchecked_Landroid_view_accessibility_AccessibilityEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.Accessibility.AccessibilityEvent" />
      </Parameters>
      <Docs>
        <param name="e">The event to send.</param>
        <summary>This method behaves exactly as <c><see cref="M:Android.Views.View.SendAccessibilityEvent(Android.Views.Accessibility.EventTypes)" /></c> but
 takes as an argument an empty <c><see cref="T:Android.Views.Accessibility.AccessibilityEvent" /></c> and does not
 perform a check whether accessibility is enabled.</summary>
        <remarks />
        <since version="Added in API level 4" />
        <altmember cref="M:Android.Views.View.SendAccessibilityEvent(Android.Views.Accessibility.EventTypes)" />
      </Docs>
    </Member>
    <Member MemberName="SetAccessibilityDelegate">
      <MemberSignature Language="C#" Value="public virtual void SetAccessibilityDelegate (Android.Views.View.AccessibilityDelegate delegate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAccessibilityDelegate(class Android.Views.View/AccessibilityDelegate delegate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAccessibilityDelegate", "(Landroid/view/View$AccessibilityDelegate;)V", "GetSetAccessibilityDelegate_Landroid_view_View_AccessibilityDelegate_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegate" Type="Android.Views.View+AccessibilityDelegate" />
      </Parameters>
      <Docs>
        <param name="delegate">The delegate instance.</param>
        <summary>Sets a delegate for implementing accessibility support via composition as
 opposed to inheritance.</summary>
        <remarks />
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetBackgroundColor">
      <MemberSignature Language="C#" Value="public virtual void SetBackgroundColor (Android.Graphics.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBackgroundColor(valuetype Android.Graphics.Color color) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setBackgroundColor", "(I)V", "GetSetBackgroundColor_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="Android.Graphics.Color" />
      </Parameters>
      <Docs>
        <param name="color">the color of the background
</param>
        <summary>Sets the background color for this view.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetBackgroundDrawable">
      <MemberSignature Language="C#" Value="public virtual void SetBackgroundDrawable (Android.Graphics.Drawables.Drawable background);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBackgroundDrawable(class Android.Graphics.Drawables.Drawable background) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setBackgroundDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetBackgroundDrawable_Landroid_graphics_drawable_Drawable_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="background">To be added.</param>
        <summary>
        </summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetBackgroundResource">
      <MemberSignature Language="C#" Value="public virtual void SetBackgroundResource (int resid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBackgroundResource(int32 resid) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setBackgroundResource", "(I)V", "GetSetBackgroundResource_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resid">The identifier of the resource.</param>
        <summary>Set the background to a given resource.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetCameraDistance">
      <MemberSignature Language="C#" Value="public virtual void SetCameraDistance (float distance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCameraDistance(float32 distance) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setCameraDistance", "(F)V", "GetSetCameraDistance_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="distance" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="distance">The distance in "depth pixels", if negative the opposite
        value is used</param>
        <summary tool="true">
          <example>
            <code lang="java">
 float scale = context.getResources().getDisplayMetrics().density;
 view.setCameraDistance(distance * scale);
 </code>
          </example>
        </summary>
        <remarks />
        <since version="Added in API level 12" />
        <altmember cref="P:Android.Views.View.RotationX" />
        <altmember cref="P:Android.Views.View.RotationY" />
      </Docs>
    </Member>
    <Member MemberName="SetFadingEdgeLength">
      <MemberSignature Language="C#" Value="public virtual void SetFadingEdgeLength (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFadingEdgeLength(int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setFadingEdgeLength", "(I)V", "GetSetFadingEdgeLength_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">The size in pixels of the faded edge used to indicate that more
        content in this view is visible.
</param>
        <summary>Set the size of the faded edge used to indicate that more content in this
 view is available.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetFitsSystemWindows">
      <MemberSignature Language="C#" Value="public virtual void SetFitsSystemWindows (bool fitSystemWindows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFitsSystemWindows(bool fitSystemWindows) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setFitsSystemWindows", "(Z)V", "GetSetFitsSystemWindows_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fitSystemWindows" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fitSystemWindows">If true, then the default implementation of
 <c><see cref="M:Android.Views.View.FitSystemWindows(Android.Graphics.Rect)" /></c> will be executed.</param>
        <summary>Sets whether or not this view should account for system screen decorations
 such as the status bar and inset its content; that is, controlling whether
 the default implementation of <c><see cref="M:Android.Views.View.FitSystemWindows(Android.Graphics.Rect)" /></c> will be
 executed.</summary>
        <remarks />
        <since version="Added in API level 14" />
        <altmember cref="P:Android.Views.View.FitsSystemWindows" />
        <altmember cref="M:Android.Views.View.FitSystemWindows(Android.Graphics.Rect)" />
        <altmember cref="P:Android.Views.View.SystemUiVisibility" />
      </Docs>
    </Member>
    <Member MemberName="SetLayerPaint">
      <MemberSignature Language="C#" Value="public virtual void SetLayerPaint (Android.Graphics.Paint paint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLayerPaint(class Android.Graphics.Paint paint) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLayerPaint", "(Landroid/graphics/Paint;)V", "GetSetLayerPaint_Landroid_graphics_Paint_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paint" Type="Android.Graphics.Paint" />
      </Parameters>
      <Docs>
        <param name="paint">The paint used to compose the layer. This argument is optional
        and can be null. It is ignored when the layer type is
        <c><see cref="!:Android.Views.View.LAYER_TYPE_NONE" /></c></param>
        <summary>Updates the <c><see cref="T:Android.Graphics.Paint" /></c> object used with the current layer (used only if the current
 layer type is not set to <c><see cref="!:Android.Views.View.LAYER_TYPE_NONE" /></c>).</summary>
        <remarks />
        <since version="Added in API level 17" />
        <altmember cref="M:Android.Views.View.SetLayerType(Android.Views.LayerType, Android.Graphics.Paint)" />
      </Docs>
    </Member>
    <Member MemberName="SetLayerType">
      <MemberSignature Language="C#" Value="public virtual void SetLayerType (Android.Views.LayerType layerType, Android.Graphics.Paint paint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLayerType(valuetype Android.Views.LayerType layerType, class Android.Graphics.Paint paint) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLayerType", "(ILandroid/graphics/Paint;)V", "GetSetLayerType_ILandroid_graphics_Paint_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layerType" Type="Android.Views.LayerType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="paint" Type="Android.Graphics.Paint" />
      </Parameters>
      <Docs>
        <param name="layerType">The type of layer to use with this view, must be one of
        <c><see cref="!:Android.Views.View.LAYER_TYPE_NONE" /></c>, <c><see cref="!:Android.Views.View.LAYER_TYPE_SOFTWARE" /></c> or
        <c><see cref="!:Android.Views.View.LAYER_TYPE_HARDWARE" /></c></param>
        <param name="paint">The paint used to compose the layer. This argument is optional
        and can be null. It is ignored when the layer type is
        <c><see cref="!:Android.Views.View.LAYER_TYPE_NONE" /></c></param>
        <summary tool="true">
          <list type="bullet">
            <item>
              <term>
                <c>
                  <see cref="P:Android.Graphics.Paint.Alpha" />
                </c>
              </term>
            </item>
            <item>
              <term>
                <c>
                  <see cref="P:Android.Graphics.Paint.Xfermode" />
                </c>
              </term>
            </item>
            <item>
              <term>
                <c>
                  <see cref="P:Android.Graphics.Paint.ColorFilter" />
                </c>
              </term>
            </item>
          </list>
        </summary>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="P:Android.Views.View.LayerType" />
        <altmember cref="P:Android.Views.View.Alpha" />
      </Docs>
    </Member>
    <Member MemberName="SetMeasuredDimension">
      <MemberSignature Language="C#" Value="protected void SetMeasuredDimension (int measuredWidth, int measuredHeight);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetMeasuredDimension(int32 measuredWidth, int32 measuredHeight) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setMeasuredDimension", "(II)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="measuredWidth" Type="System.Int32" />
        <Parameter Name="measuredHeight" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="measuredWidth">The measured width of this view.  May be a complex
 bit mask as defined by <c><see cref="F:Android.Views.View.MeasuredSizeMask" /></c> and
 <c><see cref="F:Android.Views.View.MeasuredStateTooSmall" /></c>.</param>
        <param name="measuredHeight">The measured height of this view.  May be a complex
 bit mask as defined by <c><see cref="F:Android.Views.View.MeasuredSizeMask" /></c> and
 <c><see cref="F:Android.Views.View.MeasuredStateTooSmall" /></c>.
</param>
        <summary tool="true">
        </summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetMinimumHeight">
      <MemberSignature Language="C#" Value="public virtual void SetMinimumHeight (int minHeight);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMinimumHeight(int32 minHeight) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setMinimumHeight", "(I)V", "GetSetMinimumHeight_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minHeight" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minHeight">The minimum height the view will try to be.</param>
        <summary>Sets the minimum height of the view.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.MinimumHeight" />
      </Docs>
    </Member>
    <Member MemberName="SetMinimumWidth">
      <MemberSignature Language="C#" Value="public virtual void SetMinimumWidth (int minWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMinimumWidth(int32 minWidth) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setMinimumWidth", "(I)V", "GetSetMinimumWidth_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minWidth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minWidth">The minimum width the view will try to be.</param>
        <summary>Sets the minimum width of the view.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.MinimumWidth" />
      </Docs>
    </Member>
    <Member MemberName="SetOnApplyWindowInsetsListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnApplyWindowInsetsListener (Android.Views.View.IOnApplyWindowInsetsListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnApplyWindowInsetsListener(class Android.Views.View/IOnApplyWindowInsetsListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnApplyWindowInsetsListener", "(Landroid/view/View$OnApplyWindowInsetsListener;)V", "GetSetOnApplyWindowInsetsListener_Landroid_view_View_OnApplyWindowInsetsListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Views.View+IOnApplyWindowInsetsListener" />
      </Parameters>
      <Docs>
        <param name="listener">Listener to set</param>
        <summary>Set an <c><see cref="!:NoType:android/view/View$OnApplyWindowInsetsListener;Href=../../../reference/android/view/View.OnApplyWindowInsetsListener.html" /></c> to take over the policy for applying
 window insets to this view.</summary>
        <remarks />
        <altmember cref="M:Android.Views.View.OnApplyWindowInsets(Android.Views.WindowInsets)" />
      </Docs>
    </Member>
    <Member MemberName="SetOnClickListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnClickListener (Android.Views.View.IOnClickListener l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnClickListener(class Android.Views.View/IOnClickListener l) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnClickListener", "(Landroid/view/View$OnClickListener;)V", "GetSetOnClickListener_Landroid_view_View_OnClickListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Android.Views.View+IOnClickListener" />
      </Parameters>
      <Docs>
        <param name="l">The callback that will run</param>
        <summary>Register a callback to be invoked when this view is clicked.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.Clickable" />
      </Docs>
    </Member>
    <Member MemberName="SetOnCreateContextMenuListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnCreateContextMenuListener (Android.Views.View.IOnCreateContextMenuListener l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnCreateContextMenuListener(class Android.Views.View/IOnCreateContextMenuListener l) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnCreateContextMenuListener", "(Landroid/view/View$OnCreateContextMenuListener;)V", "GetSetOnCreateContextMenuListener_Landroid_view_View_OnCreateContextMenuListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Android.Views.View+IOnCreateContextMenuListener" />
      </Parameters>
      <Docs>
        <param name="l">The callback that will run

</param>
        <summary>Register a callback to be invoked when the context menu for this view is
 being built.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetOnDragListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnDragListener (Android.Views.View.IOnDragListener l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnDragListener(class Android.Views.View/IOnDragListener l) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnDragListener", "(Landroid/view/View$OnDragListener;)V", "GetSetOnDragListener_Landroid_view_View_OnDragListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Android.Views.View+IOnDragListener" />
      </Parameters>
      <Docs>
        <param name="l">An implementation of <c><see cref="!:NoType:android/view/View$OnDragListener;Href=../../../reference/android/view/View.OnDragListener.html" /></c>.
</param>
        <summary>Register a drag event listener callback object for this View.</summary>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetOnGenericMotionListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnGenericMotionListener (Android.Views.View.IOnGenericMotionListener l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnGenericMotionListener(class Android.Views.View/IOnGenericMotionListener l) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnGenericMotionListener", "(Landroid/view/View$OnGenericMotionListener;)V", "GetSetOnGenericMotionListener_Landroid_view_View_OnGenericMotionListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Android.Views.View+IOnGenericMotionListener" />
      </Parameters>
      <Docs>
        <param name="l">the generic motion listener to attach to this view
</param>
        <summary>Register a callback to be invoked when a generic motion event is sent to this view.</summary>
        <remarks />
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="SetOnHoverListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnHoverListener (Android.Views.View.IOnHoverListener l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnHoverListener(class Android.Views.View/IOnHoverListener l) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnHoverListener", "(Landroid/view/View$OnHoverListener;)V", "GetSetOnHoverListener_Landroid_view_View_OnHoverListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Android.Views.View+IOnHoverListener" />
      </Parameters>
      <Docs>
        <param name="l">the hover listener to attach to this view
</param>
        <summary>Register a callback to be invoked when a hover event is sent to this view.</summary>
        <remarks />
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetOnKeyListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnKeyListener (Android.Views.View.IOnKeyListener l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnKeyListener(class Android.Views.View/IOnKeyListener l) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnKeyListener", "(Landroid/view/View$OnKeyListener;)V", "GetSetOnKeyListener_Landroid_view_View_OnKeyListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Android.Views.View+IOnKeyListener" />
      </Parameters>
      <Docs>
        <param name="l">the key listener to attach to this view
</param>
        <summary>Register a callback to be invoked when a hardware key is pressed in this view.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetOnLongClickListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnLongClickListener (Android.Views.View.IOnLongClickListener l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnLongClickListener(class Android.Views.View/IOnLongClickListener l) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnLongClickListener", "(Landroid/view/View$OnLongClickListener;)V", "GetSetOnLongClickListener_Landroid_view_View_OnLongClickListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Android.Views.View+IOnLongClickListener" />
      </Parameters>
      <Docs>
        <param name="l">The callback that will run</param>
        <summary>Register a callback to be invoked when this view is clicked and held.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.LongClickable" />
      </Docs>
    </Member>
    <Member MemberName="SetOnSystemUiVisibilityChangeListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnSystemUiVisibilityChangeListener (Android.Views.View.IOnSystemUiVisibilityChangeListener l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnSystemUiVisibilityChangeListener(class Android.Views.View/IOnSystemUiVisibilityChangeListener l) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnSystemUiVisibilityChangeListener", "(Landroid/view/View$OnSystemUiVisibilityChangeListener;)V", "GetSetOnSystemUiVisibilityChangeListener_Landroid_view_View_OnSystemUiVisibilityChangeListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Android.Views.View+IOnSystemUiVisibilityChangeListener" />
      </Parameters>
      <Docs>
        <param name="l">The <c><see cref="!:NoType:android/view/View$OnSystemUiVisibilityChangeListener;Href=../../../reference/android/view/View.OnSystemUiVisibilityChangeListener.html" /></c> to receive callbacks.
</param>
        <summary>Set a listener to receive callbacks when the visibility of the system bar changes.</summary>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetOnTouchListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnTouchListener (Android.Views.View.IOnTouchListener l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnTouchListener(class Android.Views.View/IOnTouchListener l) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnTouchListener", "(Landroid/view/View$OnTouchListener;)V", "GetSetOnTouchListener_Landroid_view_View_OnTouchListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Android.Views.View+IOnTouchListener" />
      </Parameters>
      <Docs>
        <param name="l">the touch listener to attach to this view
</param>
        <summary>Register a callback to be invoked when a touch event is sent to this view.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetPadding">
      <MemberSignature Language="C#" Value="public virtual void SetPadding (int left, int top, int right, int bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPadding(int32 left, int32 top, int32 right, int32 bottom) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPadding", "(IIII)V", "GetSetPadding_IIIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left">the left padding in pixels</param>
        <param name="top">the top padding in pixels</param>
        <param name="right">the right padding in pixels</param>
        <param name="bottom">the bottom padding in pixels
</param>
        <summary>Sets the padding.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetPaddingRelative">
      <MemberSignature Language="C#" Value="public virtual void SetPaddingRelative (int start, int top, int end, int bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPaddingRelative(int32 start, int32 top, int32 end, int32 bottom) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPaddingRelative", "(IIII)V", "GetSetPaddingRelative_IIIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">the start padding in pixels</param>
        <param name="top">the top padding in pixels</param>
        <param name="end">the end padding in pixels</param>
        <param name="bottom">the bottom padding in pixels
</param>
        <summary>Sets the relative padding.</summary>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="SetScrollContainer">
      <MemberSignature Language="C#" Value="public virtual void SetScrollContainer (bool isScrollContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetScrollContainer(bool isScrollContainer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setScrollContainer", "(Z)V", "GetSetScrollContainer_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isScrollContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isScrollContainer">To be added.</param>
        <summary>Change whether this view is one of the set of scrollable containers in
 its window.</summary>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetTag">
      <MemberSignature Language="C#" Value="public virtual void SetTag (int key, Java.Lang.Object tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTag(int32 key, class Java.Lang.Object tag) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTag", "(ILjava/lang/Object;)V", "GetSetTag_ILjava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Int32" />
        <Parameter Name="tag" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="key">The key identifying the tag</param>
        <param name="tag">An Object to tag the view with</param>
        <summary>Sets a tag associated with this view and a key.</summary>
        <remarks />
        <since version="Added in API level 4" />
        <exception cref="T:Java.Lang.IllegalArgumentException">If they specified key is not valid</exception>
        <altmember cref="P:Android.Views.View.Tag" />
        <altmember cref="M:Android.Views.View.GetTag(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SetWillNotCacheDrawing">
      <MemberSignature Language="C#" Value="public virtual void SetWillNotCacheDrawing (bool willNotCacheDrawing);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetWillNotCacheDrawing(bool willNotCacheDrawing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setWillNotCacheDrawing", "(Z)V", "GetSetWillNotCacheDrawing_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="willNotCacheDrawing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="willNotCacheDrawing">true if this view does not cache its
        drawing, false otherwise
</param>
        <summary>When a View's drawing cache is enabled, drawing is redirected to an
 offscreen bitmap.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetWillNotDraw">
      <MemberSignature Language="C#" Value="public virtual void SetWillNotDraw (bool willNotDraw);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetWillNotDraw(bool willNotDraw) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setWillNotDraw", "(Z)V", "GetSetWillNotDraw_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="willNotDraw" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="willNotDraw">whether or not this View draw on its own
</param>
        <summary>If this view doesn't do any drawing on its own, set this flag to
 allow further optimizations.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetX">
      <MemberSignature Language="C#" Value="public virtual void SetX (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetX(float32 x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setX", "(F)V", "GetSetX_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">The visual x position of this view, in pixels.
</param>
        <summary>Sets the visual x position of this view, in pixels.</summary>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetY">
      <MemberSignature Language="C#" Value="public virtual void SetY (float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetY(float32 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setY", "(F)V", "GetSetY_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="y">The visual y position of this view, in pixels.
</param>
        <summary>Sets the visual y position of this view, in pixels.</summary>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetZ">
      <MemberSignature Language="C#" Value="public virtual void SetZ (float z);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetZ(float32 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setZ", "(F)V", "GetSetZ_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="z" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="z">The visual z position of this view, in pixels.
</param>
        <summary>Sets the visual z position of this view, in pixels.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ShowContextMenu">
      <MemberSignature Language="C#" Value="public virtual bool ShowContextMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShowContextMenu() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("showContextMenu", "()Z", "GetShowContextMenuHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bring up the context menu for this view.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SolidColor">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Color SolidColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Graphics.Color SolidColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSolidColor", "()I", "GetGetSolidColorHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Override this if your view is known to always be drawn on top of a solid color background,
 and needs to draw fading edges.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.VerticalFadingEdgeEnabled" />
        <altmember cref="P:Android.Views.View.HorizontalFadingEdgeEnabled" />
      </Docs>
    </Member>
    <Member MemberName="SoundEffectsEnabled">
      <MemberSignature Language="C#" Value="public virtual bool SoundEffectsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SoundEffectsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isSoundEffectsEnabled", "()Z", "GetIsSoundEffectsEnabledHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSoundEffectsEnabled", "(Z)V", "GetSetSoundEffectsEnabled_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.SoundEffectsEnabled" />
        <altmember cref="M:Android.Views.View.PlaySoundEffect(Android.Views.SoundEffects)" />
        <altmember cref="P:Android.Views.View.SoundEffectsEnabled" />
        <altmember cref="M:Android.Views.View.PlaySoundEffect(Android.Views.SoundEffects)" />
      </Docs>
    </Member>
    <Member MemberName="StartActionMode">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ActionMode StartActionMode (Android.Views.ActionMode.ICallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ActionMode StartActionMode(class Android.Views.ActionMode/ICallback callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startActionMode", "(Landroid/view/ActionMode$Callback;)Landroid/view/ActionMode;", "GetStartActionMode_Landroid_view_ActionMode_Callback_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ActionMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Views.ActionMode+ICallback" />
      </Parameters>
      <Docs>
        <param name="callback">Callback that will control the lifecycle of the action mode</param>
        <summary>Start an action mode with the default type <c><see cref="!:Android.Views.ActionMode.TYPE_PRIMARY" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="T:Android.Views.ActionMode" />
        <altmember cref="M:Android.Views.View.StartActionMode(.ICallback, Android.Views.ActionModeType)" />
      </Docs>
    </Member>
    <Member MemberName="StartAnimation">
      <MemberSignature Language="C#" Value="public virtual void StartAnimation (Android.Views.Animations.Animation animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartAnimation(class Android.Views.Animations.Animation animation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startAnimation", "(Landroid/view/animation/Animation;)V", "GetStartAnimation_Landroid_view_animation_Animation_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="animation" Type="Android.Views.Animations.Animation" />
      </Parameters>
      <Docs>
        <param name="animation">the animation to start now
</param>
        <summary>Start the specified animation now.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StartDrag">
      <MemberSignature Language="C#" Value="public bool StartDrag (Android.Content.ClipData data, Android.Views.View.DragShadowBuilder shadowBuilder, Java.Lang.Object myLocalState, int flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool StartDrag(class Android.Content.ClipData data, class Android.Views.View/DragShadowBuilder shadowBuilder, class Java.Lang.Object myLocalState, int32 flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startDrag", "(Landroid/content/ClipData;Landroid/view/View$DragShadowBuilder;Ljava/lang/Object;I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Android.Content.ClipData" />
        <Parameter Name="shadowBuilder" Type="Android.Views.View+DragShadowBuilder" />
        <Parameter Name="myLocalState" Type="Java.Lang.Object" />
        <Parameter Name="flags" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">A <c><see cref="T:Android.Content.ClipData" /></c> object pointing to the data to be
 transferred by the drag and drop operation.</param>
        <param name="shadowBuilder">A <c><see cref="!:NoType:android/view/View$DragShadowBuilder;Href=../../../reference/android/view/View.DragShadowBuilder.html" /></c> object for building the
 drag shadow.</param>
        <param name="myLocalState">An <c><see cref="T:Java.Lang.Object" /></c> containing local data about the drag and
 drop operation. This Object is put into every DragEvent object sent by the system during the
 current drag.
 <para tool="javadoc-to-mdoc">
 myLocalState is a lightweight mechanism for the sending information from the dragged View
 to the target Views. For example, it can contain flags that differentiate between a
 a copy operation and a move operation.
 </para></param>
        <param name="flags">Flags that control the drag and drop operation. No flags are currently defined,
 so the parameter should be set to 0.</param>
        <summary>Starts a drag and drop operation.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="StartNestedScroll">
      <MemberSignature Language="C#" Value="public virtual bool StartNestedScroll (Android.Views.ScrollAxis axes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool StartNestedScroll(valuetype Android.Views.ScrollAxis axes) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startNestedScroll", "(I)Z", "GetStartNestedScroll_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="axes" Type="Android.Views.ScrollAxis">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="axes">Flags consisting of a combination of <c><see cref="F:Android.Views.View.ScrollAxisHorizontal" /></c> and/or
             <c><see cref="F:Android.Views.View.ScrollAxisVertical" /></c>.</param>
        <summary>Begin a nestable scroll operation along the given axes.</summary>
        <returns>To be added.</returns>
        <remarks />
        <altmember cref="M:Android.Views.View.StopNestedScroll" />
        <altmember cref="M:Android.Views.View.DispatchNestedPreScroll(System.Int32, System.Int32, System.Int32, System.Int32)" />
        <altmember cref="M:Android.Views.View.DispatchNestedScroll(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StateListAnimator">
      <MemberSignature Language="C#" Value="public virtual Android.Animation.StateListAnimator StateListAnimator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Animation.StateListAnimator StateListAnimator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getStateListAnimator", "()Landroid/animation/StateListAnimator;", "GetGetStateListAnimatorHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setStateListAnimator", "(Landroid/animation/StateListAnimator;)V", "GetSetStateListAnimator_Landroid_animation_StateListAnimator_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.StateListAnimator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current StateListAnimator if exists.</summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="P:Android.Views.View.StateListAnimator" />
      </Docs>
    </Member>
    <Member MemberName="StopNestedScroll">
      <MemberSignature Language="C#" Value="public virtual void StopNestedScroll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopNestedScroll() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("stopNestedScroll", "()V", "GetStopNestedScrollHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stop a nested scroll in progress.</summary>
        <remarks />
        <altmember cref="M:Android.Views.View.StartNestedScroll(Android.Views.ScrollAxis)" />
      </Docs>
    </Member>
    <Member MemberName="SuggestedMinimumHeight">
      <MemberSignature Language="C#" Value="protected virtual int SuggestedMinimumHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SuggestedMinimumHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSuggestedMinimumHeight", "()I", "GetGetSuggestedMinimumHeightHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the suggested minimum height that the view should use.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SuggestedMinimumWidth">
      <MemberSignature Language="C#" Value="protected virtual int SuggestedMinimumWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SuggestedMinimumWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSuggestedMinimumWidth", "()I", "GetGetSuggestedMinimumWidthHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the suggested minimum width that the view should use.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SystemUiFlagFullscreen">
      <MemberSignature Language="C#" Value="public const Android.Views.SystemUiFlags SystemUiFlagFullscreen = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.SystemUiFlags SystemUiFlagFullscreen = (4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYSTEM_UI_FLAG_FULLSCREEN")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.SystemUiFlags enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.SystemUiFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Flag for <c><see cref="P:Android.Views.View.SystemUiVisibility" /></c>: View has requested to go
 into the normal fullscreen mode so that its content can take over the screen
 while still allowing the user to interact with the application.</summary>
        <remarks />
        <since version="Added in API level 16" />
        <altmember cref="P:Android.Views.View.SystemUiVisibility" />
      </Docs>
    </Member>
    <Member MemberName="SystemUiFlagHideNavigation">
      <MemberSignature Language="C#" Value="public const Android.Views.SystemUiFlags SystemUiFlagHideNavigation = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.SystemUiFlags SystemUiFlagHideNavigation = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYSTEM_UI_FLAG_HIDE_NAVIGATION")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.SystemUiFlags enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.SystemUiFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Flag for <c><see cref="P:Android.Views.View.SystemUiVisibility" /></c>: View has requested that the
 system navigation be temporarily hidden.</summary>
        <remarks />
        <since version="Added in API level 14" />
        <altmember cref="P:Android.Views.View.SystemUiVisibility" />
      </Docs>
    </Member>
    <Member MemberName="SystemUiFlagImmersive">
      <MemberSignature Language="C#" Value="public const Android.Views.SystemUiFlags SystemUiFlagImmersive = 2048;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.SystemUiFlags SystemUiFlagImmersive = (2048)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYSTEM_UI_FLAG_IMMERSIVE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.SystemUiFlags enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.SystemUiFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2048</MemberValue>
      <Docs>
        <summary>Flag for <c><see cref="P:Android.Views.View.SystemUiVisibility" /></c>: View would like to remain interactive when
 hiding the navigation bar with <c><see cref="F:Android.Views.View.SystemUiFlagHideNavigation" /></c>.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SystemUiFlagImmersiveSticky">
      <MemberSignature Language="C#" Value="public const Android.Views.SystemUiFlags SystemUiFlagImmersiveSticky = 4096;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.SystemUiFlags SystemUiFlagImmersiveSticky = (4096)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYSTEM_UI_FLAG_IMMERSIVE_STICKY")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.SystemUiFlags enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.SystemUiFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary>Flag for <c><see cref="P:Android.Views.View.SystemUiVisibility" /></c>: View would like to remain interactive when
 hiding the status bar with <c><see cref="F:Android.Views.View.SystemUiFlagFullscreen" /></c> and/or hiding the navigation
 bar with <c><see cref="F:Android.Views.View.SystemUiFlagHideNavigation" /></c>.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SystemUiFlagLayoutFullscreen">
      <MemberSignature Language="C#" Value="public const Android.Views.SystemUiFlags SystemUiFlagLayoutFullscreen = 1024;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.SystemUiFlags SystemUiFlagLayoutFullscreen = (1024)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.SystemUiFlags enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.SystemUiFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1024</MemberValue>
      <Docs>
        <summary>Flag for <c><see cref="P:Android.Views.View.SystemUiVisibility" /></c>: View would like its window
 to be laid out as if it has requested
 <c><see cref="F:Android.Views.View.SystemUiFlagFullscreen" /></c>, even if it currently hasn't.</summary>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SystemUiFlagLayoutHideNavigation">
      <MemberSignature Language="C#" Value="public const Android.Views.SystemUiFlags SystemUiFlagLayoutHideNavigation = 512;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.SystemUiFlags SystemUiFlagLayoutHideNavigation = (512)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.SystemUiFlags enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.SystemUiFlags</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary>Flag for <c><see cref="P:Android.Views.View.SystemUiVisibility" /></c>: View would like its window
 to be laid out as if it has requested
 <c><see cref="F:Android.Views.View.SystemUiFlagHideNavigation" /></c>, even if it currently hasn't.</summary>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SystemUiFlagLayoutStable">
      <MemberSignature Language="C#" Value="public const Android.Views.SystemUiFlags SystemUiFlagLayoutStable = 256;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.SystemUiFlags SystemUiFlagLayoutStable = (256)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYSTEM_UI_FLAG_LAYOUT_STABLE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.SystemUiFlags enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.SystemUiFlags</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary>Flag for <c><see cref="P:Android.Views.View.SystemUiVisibility" /></c>: When using other layout
 flags, we would like a stable view of the content insets given to
 <c><see cref="M:Android.Views.View.FitSystemWindows(Android.Graphics.Rect)" /></c>.</summary>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SystemUiFlagLowProfile">
      <MemberSignature Language="C#" Value="public const Android.Views.SystemUiFlags SystemUiFlagLowProfile = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.SystemUiFlags SystemUiFlagLowProfile = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYSTEM_UI_FLAG_LOW_PROFILE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.SystemUiFlags enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.SystemUiFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Flag for <c><see cref="P:Android.Views.View.SystemUiVisibility" /></c>: View has requested the
 system UI to enter an unobtrusive "low profile" mode.</summary>
        <remarks />
        <since version="Added in API level 14" />
        <altmember cref="P:Android.Views.View.SystemUiVisibility" />
      </Docs>
    </Member>
    <Member MemberName="SystemUiFlagVisible">
      <MemberSignature Language="C#" Value="public const Android.Views.SystemUiFlags SystemUiFlagVisible = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.SystemUiFlags SystemUiFlagVisible = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYSTEM_UI_FLAG_VISIBLE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.SystemUiFlags enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.SystemUiFlags</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Special constant for <c><see cref="P:Android.Views.View.SystemUiVisibility" /></c>: View has
 requested the system UI (status bar) to be visible (the default).</summary>
        <remarks />
        <since version="Added in API level 14" />
        <altmember cref="P:Android.Views.View.SystemUiVisibility" />
      </Docs>
    </Member>
    <Member MemberName="SystemUiLayoutFlags">
      <MemberSignature Language="C#" Value="public const Android.Views.SystemUiFlags SystemUiLayoutFlags = 1536;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.SystemUiFlags SystemUiLayoutFlags = (1536)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYSTEM_UI_LAYOUT_FLAGS")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.SystemUiFlags enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.SystemUiFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1536</MemberValue>
      <Docs>
        <summary>Flags that can impact the layout in relation to system UI.</summary>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SystemUiVisibility">
      <MemberSignature Language="C#" Value="public virtual Android.Views.StatusBarVisibility SystemUiVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.StatusBarVisibility SystemUiVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSystemUiVisibility", "()I", "GetGetSystemUiVisibilityHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSystemUiVisibility", "(I)V", "GetSetSystemUiVisibility_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.StatusBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the last <c><see cref="P:Android.Views.View.SystemUiVisibility" /></c> that this view has requested.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SystemUiVisibilityChange">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.View.SystemUiVisibilityChangeEventArgs&gt; SystemUiVisibilityChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.View/SystemUiVisibilityChangeEventArgs&gt; SystemUiVisibilityChange" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.View+SystemUiVisibilityChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.Object Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTag", "()Ljava/lang/Object;", "GetGetTagHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTag", "(Ljava/lang/Object;)V", "GetSetTag_Ljava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns this view's tag.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.Tag" />
        <altmember cref="M:Android.Views.View.GetTag(System.Int32)" />
        <altmember cref="P:Android.Views.View.Tag" />
        <altmember cref="M:Android.Views.View.SetTag(System.Int32, Java.Lang.Object)" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignment">
      <MemberSignature Language="C#" Value="public virtual Android.Views.TextAlignment TextAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.TextAlignment TextAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTextAlignment", "()I", "GetGetTextAlignmentHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTextAlignment", "(I)V", "GetSetTextAlignment_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.TextAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the resolved text alignment.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentCenter">
      <MemberSignature Language="C#" Value="public const Android.Views.TextAlignment TextAlignmentCenter = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.TextAlignment TextAlignmentCenter = (4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TEXT_ALIGNMENT_CENTER")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextAlignment enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.TextAlignment</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Center the paragraph, e.g.</summary>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentGravity">
      <MemberSignature Language="C#" Value="public const Android.Views.TextAlignment TextAlignmentGravity = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.TextAlignment TextAlignmentGravity = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TEXT_ALIGNMENT_GRAVITY")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextAlignment enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.TextAlignment</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Default for the root view.</summary>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentInherit">
      <MemberSignature Language="C#" Value="public const Android.Views.TextAlignment TextAlignmentInherit = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.TextAlignment TextAlignmentInherit = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TEXT_ALIGNMENT_INHERIT")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextAlignment enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.TextAlignment</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Default text alignment.</summary>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentResolvedDefault">
      <MemberSignature Language="C#" Value="public const int TextAlignmentResolvedDefault = 131072;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 TextAlignmentResolvedDefault = (131072)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TEXT_ALIGNMENT_RESOLVED_DEFAULT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>131072</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentTextEnd">
      <MemberSignature Language="C#" Value="public const Android.Views.TextAlignment TextAlignmentTextEnd = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.TextAlignment TextAlignmentTextEnd = (3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TEXT_ALIGNMENT_TEXT_END")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextAlignment enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.TextAlignment</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Align to the end of the paragraph, e.g.</summary>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentTextStart">
      <MemberSignature Language="C#" Value="public const Android.Views.TextAlignment TextAlignmentTextStart = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.TextAlignment TextAlignmentTextStart = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TEXT_ALIGNMENT_TEXT_START")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextAlignment enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.TextAlignment</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Align to the start of the paragraph, e.g.</summary>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentViewEnd">
      <MemberSignature Language="C#" Value="public const Android.Views.TextAlignment TextAlignmentViewEnd = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.TextAlignment TextAlignmentViewEnd = (6)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TEXT_ALIGNMENT_VIEW_END")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextAlignment enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.TextAlignment</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>Align to the end of the view, which is ALIGN_RIGHT if the view’s resolved
 layoutDirection is LTR, and ALIGN_LEFT otherwise.</summary>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentViewStart">
      <MemberSignature Language="C#" Value="public const Android.Views.TextAlignment TextAlignmentViewStart = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.TextAlignment TextAlignmentViewStart = (5)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TEXT_ALIGNMENT_VIEW_START")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextAlignment enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.TextAlignment</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>Align to the start of the view, which is ALIGN_LEFT if the view’s resolved
 layoutDirection is LTR, and ALIGN_RIGHT otherwise.</summary>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="TextDirection">
      <MemberSignature Language="C#" Value="public virtual Android.Views.TextDirection TextDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.TextDirection TextDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTextDirection", "()I", "GetGetTextDirectionHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTextDirection", "(I)V", "GetSetTextDirection_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.TextDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the resolved text direction.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="TextDirectionAnyRtl">
      <MemberSignature Language="C#" Value="public const Android.Views.TextDirection TextDirectionAnyRtl = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.TextDirection TextDirectionAnyRtl = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TEXT_DIRECTION_ANY_RTL")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextDirection enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.TextDirection</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Text direction is using "any-RTL" algorithm.</summary>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="TextDirectionFirstStrong">
      <MemberSignature Language="C#" Value="public const Android.Views.TextDirection TextDirectionFirstStrong = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.TextDirection TextDirectionFirstStrong = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TEXT_DIRECTION_FIRST_STRONG")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextDirection enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.TextDirection</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Text direction is using "first strong algorithm".</summary>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="TextDirectionInherit">
      <MemberSignature Language="C#" Value="public const Android.Views.TextDirection TextDirectionInherit = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.TextDirection TextDirectionInherit = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TEXT_DIRECTION_INHERIT")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextDirection enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.TextDirection</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Text direction is inherited through <c><see cref="T:Android.Views.ViewGroup" /></c></summary>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="TextDirectionLocale">
      <MemberSignature Language="C#" Value="public const Android.Views.TextDirection TextDirectionLocale = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.TextDirection TextDirectionLocale = (5)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TEXT_DIRECTION_LOCALE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextDirection enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.TextDirection</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>Text direction is coming from the system Locale.</summary>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="TextDirectionLtr">
      <MemberSignature Language="C#" Value="public const Android.Views.TextDirection TextDirectionLtr = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.TextDirection TextDirectionLtr = (3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TEXT_DIRECTION_LTR")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextDirection enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.TextDirection</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Text direction is forced to LTR.</summary>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="TextDirectionRtl">
      <MemberSignature Language="C#" Value="public const Android.Views.TextDirection TextDirectionRtl = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.TextDirection TextDirectionRtl = (4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TEXT_DIRECTION_RTL")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextDirection enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.TextDirection</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Text direction is forced to RTL.</summary>
        <remarks />
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public int Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Top" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTop", "()I", "GetGetTopHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTop", "(I)V", "GetSetTop_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Top position of this view relative to its parent.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TopFadingEdgeStrength">
      <MemberSignature Language="C#" Value="protected virtual float TopFadingEdgeStrength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 TopFadingEdgeStrength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTopFadingEdgeStrength", "()F", "GetGetTopFadingEdgeStrengthHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the strength, or intensity, of the top faded edge.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TopPaddingOffset">
      <MemberSignature Language="C#" Value="protected virtual int TopPaddingOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TopPaddingOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTopPaddingOffset", "()I", "GetGetTopPaddingOffsetHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Amount by which to extend the top fading region.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 2" />
        <altmember cref="P:Android.Views.View.IsPaddingOffsetRequired" />
      </Docs>
    </Member>
    <Member MemberName="Touch">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.View.TouchEventArgs&gt; Touch;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.View/TouchEventArgs&gt; Touch" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.View+TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Touchables">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Views.View&gt; Touchables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Views.View&gt; Touchables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTouchables", "()Ljava/util/ArrayList;", "GetGetTouchablesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Views.View&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Find and return all touchable views that are descendants of this view,
 possibly including this view if it is touchable itself.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TouchDelegate">
      <MemberSignature Language="C#" Value="public virtual Android.Views.TouchDelegate TouchDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.TouchDelegate TouchDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTouchDelegate", "()Landroid/view/TouchDelegate;", "GetGetTouchDelegateHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTouchDelegate", "(Landroid/view/TouchDelegate;)V", "GetSetTouchDelegate_Landroid_view_TouchDelegate_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.TouchDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the TouchDelegate for this View.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TransitionName">
      <MemberSignature Language="C#" Value="public string TransitionName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransitionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTransitionName", "()Ljava/lang/String;", "GetGetTransitionNameHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTransitionName", "(Ljava/lang/String;)V", "GetSetTransitionName_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the name of the View to be used to identify Views in Transitions.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="TranslationX">
      <MemberSignature Language="C#" Value="public virtual float TranslationX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 TranslationX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTranslationX", "()F", "GetGetTranslationXHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTranslationX", "(F)V", "GetSetTranslationX_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The horizontal location of this view relative to its <c><see cref="P:Android.Views.View.Left" /></c> position.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="TranslationY">
      <MemberSignature Language="C#" Value="public virtual float TranslationY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 TranslationY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTranslationY", "()F", "GetGetTranslationYHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTranslationY", "(F)V", "GetSetTranslationY_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The vertical location of this view relative to its <c><see cref="P:Android.Views.View.Top" /></c> position.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="TranslationZ">
      <MemberSignature Language="C#" Value="public virtual float TranslationZ { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 TranslationZ" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTranslationZ", "()F", "GetGetTranslationZHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTranslationZ", "(F)V", "GetSetTranslationZ_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The depth location of this view relative to its <c><see cref="P:Android.Views.View.Elevation" /></c>.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="UnscheduleDrawable">
      <MemberSignature Language="C#" Value="public virtual void UnscheduleDrawable (Android.Graphics.Drawables.Drawable who);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnscheduleDrawable(class Android.Graphics.Drawables.Drawable who) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unscheduleDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetUnscheduleDrawable_Landroid_graphics_drawable_Drawable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="who" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="who">The Drawable to unschedule.</param>
        <summary tool="true">Unschedule any events associated with the given Drawable.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.DrawableStateChanged" />
      </Docs>
    </Member>
    <Member MemberName="UnscheduleDrawable">
      <MemberSignature Language="C#" Value="public virtual void UnscheduleDrawable (Android.Graphics.Drawables.Drawable who, Java.Lang.IRunnable what);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnscheduleDrawable(class Android.Graphics.Drawables.Drawable who, class Java.Lang.IRunnable what) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unscheduleDrawable", "(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;)V", "GetUnscheduleDrawable_Landroid_graphics_drawable_Drawable_Ljava_lang_Runnable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="who" Type="Android.Graphics.Drawables.Drawable" />
        <Parameter Name="what" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="who">the recipient of the action</param>
        <param name="what">the action to cancel
</param>
        <summary>Cancels a scheduled action on a drawable.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="UnscheduleDrawable">
      <MemberSignature Language="C#" Value="public void UnscheduleDrawable (Android.Graphics.Drawables.Drawable who, Action what);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnscheduleDrawable(class Android.Graphics.Drawables.Drawable who, class System.Action what) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="who" Type="Android.Graphics.Drawables.Drawable" />
        <Parameter Name="what" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="who">To be added.</param>
        <param name="what">To be added.</param>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="VerifyDrawable">
      <MemberSignature Language="C#" Value="protected virtual bool VerifyDrawable (Android.Graphics.Drawables.Drawable who);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool VerifyDrawable(class Android.Graphics.Drawables.Drawable who) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("verifyDrawable", "(Landroid/graphics/drawable/Drawable;)Z", "GetVerifyDrawable_Landroid_graphics_drawable_Drawable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="who" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="who">The Drawable to verify.  Return true if it is one you are
            displaying, else return the result of calling through to the
            super class.</param>
        <summary>If your view subclass is displaying its own Drawable objects, it should
 override this function and return true for any Drawable it is
 displaying.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.UnscheduleDrawable(Android.Graphics.Drawables.Drawable)" />
        <altmember cref="M:Android.Views.View.DrawableStateChanged" />
      </Docs>
    </Member>
    <Member MemberName="VerticalFadingEdgeEnabled">
      <MemberSignature Language="C#" Value="public virtual bool VerticalFadingEdgeEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VerticalFadingEdgeEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isVerticalFadingEdgeEnabled", "()Z", "GetIsVerticalFadingEdgeEnabledHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setVerticalFadingEdgeEnabled", "(Z)V", "GetSetVerticalFadingEdgeEnabled_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
        </summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.VerticalFadingEdgeEnabled" />
        <altmember cref="P:Android.Views.View.VerticalFadingEdgeEnabled" />
      </Docs>
    </Member>
    <Member MemberName="VerticalFadingEdgeLength">
      <MemberSignature Language="C#" Value="public virtual int VerticalFadingEdgeLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VerticalFadingEdgeLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getVerticalFadingEdgeLength", "()I", "GetGetVerticalFadingEdgeLengthHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the size of the vertical faded edges used to indicate that more
 content in this view is visible.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarEnabled">
      <MemberSignature Language="C#" Value="public virtual bool VerticalScrollBarEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VerticalScrollBarEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isVerticalScrollBarEnabled", "()Z", "GetIsVerticalScrollBarEnabledHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setVerticalScrollBarEnabled", "(Z)V", "GetSetVerticalScrollBarEnabled_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
        </summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.VerticalScrollBarEnabled" />
        <altmember cref="P:Android.Views.View.VerticalScrollBarEnabled" />
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollbarPosition">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ScrollbarPosition VerticalScrollbarPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.ScrollbarPosition VerticalScrollbarPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getVerticalScrollbarPosition", "()I", "GetGetVerticalScrollbarPositionHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setVerticalScrollbarPosition", "(I)V", "GetSetVerticalScrollbarPosition_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ScrollbarPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 11" />
        <altmember cref="P:Android.Views.View.VerticalScrollbarPosition" />
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollbarWidth">
      <MemberSignature Language="C#" Value="public virtual int VerticalScrollbarWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VerticalScrollbarWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getVerticalScrollbarWidth", "()I", "GetGetVerticalScrollbarWidthHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the width of the vertical scrollbar.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ViewAttachedToWindow">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.View.ViewAttachedToWindowEventArgs&gt; ViewAttachedToWindow;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.View/ViewAttachedToWindowEventArgs&gt; ViewAttachedToWindow" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.View+ViewAttachedToWindowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ViewDetachedFromWindow">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.View.ViewDetachedFromWindowEventArgs&gt; ViewDetachedFromWindow;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.View/ViewDetachedFromWindowEventArgs&gt; ViewDetachedFromWindow" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.View+ViewDetachedFromWindowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ViewLogTag">
      <MemberSignature Language="C#" Value="protected const string ViewLogTag;" />
      <MemberSignature Language="ILAsm" Value=".field family static literal string ViewLogTag" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("VIEW_LOG_TAG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The logging tag used by this class with android.util.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ViewTreeObserver">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewTreeObserver ViewTreeObserver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.ViewTreeObserver ViewTreeObserver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getViewTreeObserver", "()Landroid/view/ViewTreeObserver;", "GetGetViewTreeObserverHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewTreeObserver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the ViewTreeObserver for this view's hierarchy.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Visibility">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewStates Visibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.ViewStates Visibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getVisibility", "()I", "GetGetVisibilityHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setVisibility", "(I)V", "GetSetVisibility_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the visibility status for this view.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public int Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getWidth", "()I", "GetGetWidthHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the width of the your view.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WillNotCacheDrawing">
      <MemberSignature Language="C#" Value="public virtual bool WillNotCacheDrawing ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WillNotCacheDrawing() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("willNotCacheDrawing", "()Z", "GetWillNotCacheDrawingHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns whether or not this View can cache its drawing or not.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WillNotDraw">
      <MemberSignature Language="C#" Value="public virtual bool WillNotDraw ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WillNotDraw() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("willNotDraw", "()Z", "GetWillNotDrawHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns whether or not this View draws on its own.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WindowAttachCount">
      <MemberSignature Language="C#" Value="protected virtual int WindowAttachCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WindowAttachCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getWindowAttachCount", "()I", "GetGetWindowAttachCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WindowFocusedStateSet">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt; WindowFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; WindowFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("WINDOW_FOCUSED_STATE_SET")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view's window has focus.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Graphics.Drawables.Drawable" />
        <altmember cref="M:Android.Views.View.GetDrawableState" />
      </Docs>
    </Member>
    <Member MemberName="WindowId">
      <MemberSignature Language="C#" Value="public virtual Android.Views.WindowId WindowId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.WindowId WindowId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getWindowId", "()Landroid/view/WindowId;", "GetGetWindowIdHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowId</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the <c><see cref="T:Android.Views.WindowId" /></c> for the window this view is
 currently attached to.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="WindowSystemUiVisibility">
      <MemberSignature Language="C#" Value="public virtual Android.Views.SystemUiFlags WindowSystemUiVisibility { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.SystemUiFlags WindowSystemUiVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getWindowSystemUiVisibility", "()I", "GetGetWindowSystemUiVisibilityHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.SystemUiFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current system UI visibility that is currently set for
 the entire window.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="WindowToken">
      <MemberSignature Language="C#" Value="public virtual Android.OS.IBinder WindowToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.OS.IBinder WindowToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getWindowToken", "()Landroid/os/IBinder;", "GetGetWindowTokenHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IBinder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve a unique token identifying the window this view is attached to.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WindowVisibility">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewStates WindowVisibility { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.ViewStates WindowVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getWindowVisibility", "()I", "GetGetWindowVisibilityHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current visibility of the window this view is attached to
 (either <c><see cref="F:Android.Views.ViewStates.Gone" tool="ReplaceLinkValue" /></c>, <c><see cref="F:Android.Views.ViewStates.Invisible" tool="ReplaceLinkValue" /></c>, or <c><see cref="T:Android.Views.ViewStates.Visible" tool="ReplaceLinkValue" /></c>).</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public static Android.Util.Property X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Util.Property X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("X")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Util.Property</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A Property wrapper around the <c>x</c> functionality handled by the
 <c><see cref="M:Android.Views.View.SetX(System.Single)" /></c> and <c><see cref="M:Android.Views.View.GetX" /></c> methods.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public static Android.Util.Property Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Util.Property Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("Y")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Util.Property</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A Property wrapper around the <c>y</c> functionality handled by the
 <c><see cref="M:Android.Views.View.SetY(System.Single)" /></c> and <c><see cref="M:Android.Views.View.GetY" /></c> methods.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="Z">
      <MemberSignature Language="C#" Value="public static Android.Util.Property Z { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Util.Property Z" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("Z")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Util.Property</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A Property wrapper around the <c>z</c> functionality handled by the
 <c><see cref="M:Android.Views.View.SetZ(System.Single)" /></c> and <c><see cref="M:Android.Views.View.GetZ" /></c> methods.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
