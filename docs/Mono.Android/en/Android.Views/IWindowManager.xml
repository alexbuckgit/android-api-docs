<Type Name="IWindowManager" FullName="Android.Views.IWindowManager">
  <TypeSignature Language="C#" Value="public interface IWindowManager : Android.Views.IViewManager, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWindowManager implements class Android.Runtime.IJavaObject, class Android.Views.IViewManager, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Views.IViewManager</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/view/WindowManager", "", "Android.Views.IWindowManagerInvoker")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>The interface that apps use to talk to the window manager.</summary>
    <remarks />
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="DefaultDisplay">
      <MemberSignature Language="C#" Value="public Android.Views.Display DefaultDisplay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.Display DefaultDisplay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDefaultDisplay", "()Landroid/view/Display;", "GetGetDefaultDisplayHandler:Android.Views.IWindowManagerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Display</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the <c><see cref="T:Android.Views.Display" /></c> upon which this <c><see cref="T:Android.Views.IWindowManager" /></c> instance
 will create new windows.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RemoveViewImmediate">
      <MemberSignature Language="C#" Value="public void RemoveViewImmediate (Android.Views.View view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveViewImmediate(class Android.Views.View view) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeViewImmediate", "(Landroid/view/View;)V", "GetRemoveViewImmediate_Landroid_view_View_Handler:Android.Views.IWindowManagerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="view">The view to be removed.
</param>
        <summary>Special variation of <c><see cref="M:Android.Views.IViewManager.RemoveView(Android.Views.View)" /></c> that immediately invokes
 the given view hierarchy's <c><see cref="M:Android.Views.View.OnDetachedFromWindow" /></c> methods before returning.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
