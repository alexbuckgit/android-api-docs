<Type Name="ViewOutlineProvider" FullName="Android.Views.ViewOutlineProvider">
  <TypeSignature Language="C#" Value="public abstract class ViewOutlineProvider : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ViewOutlineProvider extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/view/ViewOutlineProvider", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="21">
    <summary>Interface by which a View builds its <c><see cref="T:Android.Graphics.Outline" /></c>, used for shadow casting and clipping.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Interface by which a View builds its <c><see cref="T:Android.Graphics.Outline" /></c>, used for shadow casting and clipping.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/view/ViewOutlineProvider.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ViewOutlineProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewOutlineProvider.html#ViewOutlineProvider()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ViewOutlineProvider (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T}(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Background">
      <MemberSignature Language="C#" Value="public static Android.Views.ViewOutlineProvider Background { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Views.ViewOutlineProvider Background" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("BACKGROUND")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewOutlineProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Default outline provider for Views, which queries the Outline from the View's background,
 or generates a 0 alpha, rectangular Outline the size of the View if a background
 isn't present.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Default outline provider for Views, which queries the Outline from the View's background,
 or generates a 0 alpha, rectangular Outline the size of the View if a background
 isn't present.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewOutlineProvider.html#BACKGROUND" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.Graphics.Drawables.Drawable.GetOutline(Android.Graphics.Outline)" />
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public static Android.Views.ViewOutlineProvider Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Views.ViewOutlineProvider Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("BOUNDS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewOutlineProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Maintains the outline of the View to match its rectangular bounds,
 at <c>1.0f</c> alpha.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Maintains the outline of the View to match its rectangular bounds,
 at <c>1.0f</c> alpha.

 This can be used to enable Views that are opaque but lacking a background cast a shadow.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewOutlineProvider.html#BOUNDS" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutline">
      <MemberSignature Language="C#" Value="public abstract void GetOutline (Android.Views.View view, Android.Graphics.Outline outline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetOutline(class Android.Views.View view, class Android.Graphics.Outline outline) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getOutline", "(Landroid/view/View;Landroid/graphics/Outline;)V", "GetGetOutline_Landroid_view_View_Landroid_graphics_Outline_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="outline" Type="Android.Graphics.Outline" />
      </Parameters>
      <Docs>
        <param name="view">The view building the outline.</param>
        <param name="outline">The empty outline to be populated.
</param>
        <summary>Called to get the provider to populate the Outline.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called to get the provider to populate the Outline.

 This method will be called by a View when its owned Drawables are invalidated, when the
 View's size changes, or if <c><see cref="M:Android.Views.View.InvalidateOutline" /></c> is called
 explicitly.

 The input outline is empty and has an alpha of <c>1.0f</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewOutlineProvider.html#getOutline(android.view.View, android.graphics.Outline)" target="_blank">[Android Documentation]</a>
              <since version="Added in API level 21" />
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddedBounds">
      <MemberSignature Language="C#" Value="public static Android.Views.ViewOutlineProvider PaddedBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Views.ViewOutlineProvider PaddedBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PADDED_BOUNDS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewOutlineProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Maintains the outline of the View to match its rectangular padded bounds,
 at <c>1.0f</c> alpha.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Maintains the outline of the View to match its rectangular padded bounds,
 at <c>1.0f</c> alpha.

 This can be used to enable Views that are opaque but lacking a background cast a shadow.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewOutlineProvider.html#PADDED_BOUNDS" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
