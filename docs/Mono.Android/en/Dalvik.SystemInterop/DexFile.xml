<Type Name="DexFile" FullName="Dalvik.SystemInterop.DexFile">
  <TypeSignature Language="C#" Value="public sealed class DexFile : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DexFile extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("dalvik/system/DexFile", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Manipulates DEX files.</summary>
    <remarks />
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DexFile (Java.IO.File file);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.IO.File file) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/File;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="file" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="file">To be added.</param>
        <summary>Opens a DEX file from a given File object.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs, such as the file not being found or
             access rights missing for opening it
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DexFile (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">To be added.</param>
        <summary>Opens a DEX file from a given filename.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs, such as the file not being found or
             access rights missing for opening it
</exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("close", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes the DEX file.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs during closing the file, which
             normally should not happen
</exception>
      </Docs>
    </Member>
    <Member MemberName="Entries">
      <MemberSignature Language="C#" Value="public Java.Util.IEnumeration Entries ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Util.IEnumeration Entries() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("entries", "()Ljava/util/Enumeration;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.IEnumeration</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enumerate the names of the classes in this DEX file.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsDexOptNeeded">
      <MemberSignature Language="C#" Value="public static bool IsDexOptNeeded (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDexOptNeeded(string fileName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isDexOptNeeded", "(Ljava/lang/String;)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">the absolute path to the apk/jar file to examine.</param>
        <summary>Returns true if the VM believes that the apk/jar file is out of date
 and should be passed through "dexopt" again.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.FileNotFoundException">if fileName is not readable,
         not a file, or not present.</exception>
        <exception cref="T:Java.IO.IOException">if fileName is not a valid apk/jar file or
         if problems occur while parsing it.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if fileName is null.
</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadClass">
      <MemberSignature Language="C#" Value="public Java.Lang.Class LoadClass (string name, Java.Lang.ClassLoader loader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Class LoadClass(string name, class Java.Lang.ClassLoader loader) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("loadClass", "(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="loader" Type="Java.Lang.ClassLoader" />
      </Parameters>
      <Docs>
        <param name="name">the class name, which should look like "java/lang/String"</param>
        <param name="loader">the class loader that tries to load the class (in most cases
            the caller of the method</param>
        <summary>Loads a class.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LoadDex">
      <MemberSignature Language="C#" Value="public static Dalvik.SystemInterop.DexFile LoadDex (string sourcePathName, string outputPathName, int flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Dalvik.SystemInterop.DexFile LoadDex(string sourcePathName, string outputPathName, int32 flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("loadDex", "(Ljava/lang/String;Ljava/lang/String;I)Ldalvik/system/DexFile;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Dalvik.SystemInterop.DexFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourcePathName" Type="System.String" />
        <Parameter Name="outputPathName" Type="System.String" />
        <Parameter Name="flags" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourcePathName">Jar or APK file with "classes.dex".  (May expand this to include
  "raw DEX" in the future.)</param>
        <param name="outputPathName">File that will hold the optimized form of the DEX data.</param>
        <param name="flags">Enable optional features.  (Currently none defined.)</param>
        <summary>Open a DEX file, specifying the file in which the optimized DEX
 data should be written.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 3" />
        <exception cref="T:Java.IO.IOException">If unable to open the source or output file.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getName", "()Ljava/lang/String;", "GetGetNameHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the (already opened) DEX file.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
