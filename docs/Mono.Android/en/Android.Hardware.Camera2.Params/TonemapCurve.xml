<Type Name="TonemapCurve" FullName="Android.Hardware.Camera2.Params.TonemapCurve">
  <TypeSignature Language="C#" Value="public sealed class TonemapCurve : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TonemapCurve extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/hardware/camera2/params/TonemapCurve", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Immutable class for describing a <c>2 x M x 3</c> tonemap curve of floats.</summary>
    <remarks><para tool="javadoc-to-mdoc">Immutable class for describing a <c>2 x M x 3</c> tonemap curve of floats.

 </para><para tool="javadoc-to-mdoc">This defines red, green, and blue curves that the <c><see cref="T:Android.Hardware.Camera2.CameraDevice" /></c> will
 use as the tonemapping/contrast/gamma curve when <c><see cref="P:Android.Hardware.Camera2.CaptureRequest.TonemapMode" /></c> is
 set to <c><see cref="!:Android.Hardware.Camera2.CameraMetadata.TONEMAP_MODE_CONTRAST_CURVE" /></c>.</para><para tool="javadoc-to-mdoc">The total number of points <c>(Pin, Pout)</c> for each color channel can be no more than
 <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.TonemapMaxCurvePoints" /></c>.</para><para tool="javadoc-to-mdoc">The coordinate system for each point is within the inclusive range
 [<c><see cref="F:Android.Hardware.Camera2.Params.TonemapCurve.LevelBlack" /></c>, <c><see cref="F:Android.Hardware.Camera2.Params.TonemapCurve.LevelWhite" /></c>].</para><format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><format type="text/html"><a href="http://developer.android.com/reference/../">ERROR(/CaptureRequest#TONEMAP_CURVE_BLUE)</a></format></c></term></item><item><term><c><format type="text/html"><a href="http://developer.android.com/reference/../">ERROR(/CaptureRequest#TONEMAP_CURVE_GREEN)</a></format></c></term></item><item><term><c><format type="text/html"><a href="http://developer.android.com/reference/../">ERROR(/CaptureRequest#TONEMAP_CURVE_RED)</a></format></c></term></item><item><term><c><see cref="!:Android.Hardware.Camera2.CameraMetadata.TONEMAP_MODE_CONTRAST_CURVE" /></c></term></item><item><term><c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.TonemapMaxCurvePoints" /></c></term></item></list><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/hardware/camera2/params/TonemapCurve.html" target="_blank">[Android Documentation]</a></format></para></remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TonemapCurve (float[] red, float[] green, float[] blue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32[] red, float32[] green, float32[] blue) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "([F[F[F)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="red" Type="System.Single[]" />
        <Parameter Name="green" Type="System.Single[]" />
        <Parameter Name="blue" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="red">To be added.</param>
        <param name="green">To be added.</param>
        <param name="blue">To be added.</param>
        <summary>Create a new immutable TonemapCurve instance.</summary>
        <remarks><para tool="javadoc-to-mdoc">Create a new immutable TonemapCurve instance.

 </para><para tool="javadoc-to-mdoc">Values are stored as a contiguous array of <c>(Pin, Pout)</c> points.</para><para tool="javadoc-to-mdoc">All parameters may have independent length but should have at most
 <c><see cref="P:Android.Hardware.Camera2.CameraCharacteristics.TonemapMaxCurvePoints" /></c> * <c><see cref="F:Android.Hardware.Camera2.Params.TonemapCurve.PointSize" /></c> elements and
 at least 2 * <c><see cref="F:Android.Hardware.Camera2.Params.TonemapCurve.PointSize" /></c> elements.</para><para tool="javadoc-to-mdoc">All sub-elements must be in the inclusive range of
 [<c><see cref="F:Android.Hardware.Camera2.Params.TonemapCurve.LevelBlack" /></c>, <c><see cref="F:Android.Hardware.Camera2.Params.TonemapCurve.LevelWhite" /></c>].</para><para tool="javadoc-to-mdoc">This constructor copies the array contents and does not retain ownership of the array.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/hardware/camera2/params/TonemapCurve.html#TonemapCurve(float[], float[], float[])" target="_blank">[Android Documentation]</a></format></para></remarks>
        <exception cref="T:Java.Lang.IllegalArgumentException">if any of input array length is invalid,
            or if any of the elements in the array are not in the range of
            [<c><see cref="F:Android.Hardware.Camera2.Params.TonemapCurve.LevelBlack" /></c>, <c><see cref="F:Android.Hardware.Camera2.Params.TonemapCurve.LevelWhite" /></c>]</exception>
        <exception cref="T:Java.Lang.NullPointerException">if any of the parameters are <c>null</c></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyColorCurve">
      <MemberSignature Language="C#" Value="public void CopyColorCurve (Android.Graphics.Color colorChannel, float[] destination, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyColorCurve(valuetype Android.Graphics.Color colorChannel, float32[] destination, int32 offset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyColorCurve", "(I[FI)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorChannel" Type="Android.Graphics.Color" />
        <Parameter Name="destination" Type="System.Single[]" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="colorChannel">To be added.</param>
        <param name="destination">an array big enough to hold at least <c><see cref="M:Android.Hardware.Camera2.Params.TonemapCurve.GetPointCount(Android.Graphics.Color)" /></c><c>*</c><c><see cref="F:Android.Hardware.Camera2.Params.TonemapCurve.PointSize" /></c> elements after the <c>offset</c></param>
        <param name="offset">a non-negative offset into the array</param>
        <summary>Copy the color curve for a single color channel from this tonemap curve into the destination.</summary>
        <remarks><para tool="javadoc-to-mdoc">Copy the color curve for a single color channel from this tonemap curve into the destination.

 </para><para tool="javadoc-to-mdoc"><!--The output is encoded the same as in the constructor  -->
 Values are stored as packed <c>(Pin, Pout</c>) points, and there are a total of
 <c><see cref="M:Android.Hardware.Camera2.Params.TonemapCurve.GetPointCount(Android.Graphics.Color)" /></c> points for that respective channel.</para><para tool="javadoc-to-mdoc">All returned coordinates are between the range of
 [<c><see cref="F:Android.Hardware.Camera2.Params.TonemapCurve.LevelBlack" /></c>, <c><see cref="F:Android.Hardware.Camera2.Params.TonemapCurve.LevelWhite" /></c>].</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/hardware/camera2/params/TonemapCurve.html#copyColorCurve(int, float[], int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <exception cref="T:Java.Lang.NullPointerException">If <c>destination</c> was <c>null</c></exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">If offset was negative</exception>
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">If there's not enough room to write the elements at the specified destination and
          offset.</exception>
        <altmember cref="F:Android.Hardware.Camera2.Params.TonemapCurve.LevelBlack" />
        <altmember cref="F:Android.Hardware.Camera2.Params.TonemapCurve.LevelWhite" />
      </Docs>
    </Member>
    <Member MemberName="GetPoint">
      <MemberSignature Language="C#" Value="public Android.Graphics.PointF GetPoint (Android.Graphics.Color colorChannel, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Graphics.PointF GetPoint(valuetype Android.Graphics.Color colorChannel, int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPoint", "(II)Landroid/graphics/PointF;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.PointF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorChannel" Type="Android.Graphics.Color" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="colorChannel"><c><see cref="!:Android.Hardware.Camera2.Params.TonemapCurve.CHANNEL_RED" /></c>, <c><see cref="!:Android.Hardware.Camera2.Params.TonemapCurve.CHANNEL_GREEN" /></c>, or <c><see cref="!:Android.Hardware.Camera2.Params.TonemapCurve.CHANNEL_BLUE" /></c></param>
        <param name="index">at least 0 but no greater than <c>getPointCount(colorChannel)</c></param>
        <summary>Get the point for a color channel at a specified index.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Get the point for a color channel at a specified index.

 </para><para tool="javadoc-to-mdoc">The index must be at least 0 but no greater than <c><see cref="M:Android.Hardware.Camera2.Params.TonemapCurve.GetPointCount(Android.Graphics.Color)" /></c> for
 that <c>colorChannel</c>.</para><para tool="javadoc-to-mdoc">All returned coordinates in the point are between the range of
 [<c><see cref="F:Android.Hardware.Camera2.Params.TonemapCurve.LevelBlack" /></c>, <c><see cref="F:Android.Hardware.Camera2.Params.TonemapCurve.LevelWhite" /></c>].</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/hardware/camera2/params/TonemapCurve.html#getPoint(int, int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>colorChannel</c> or <c>index</c> was out of range</exception>
        <altmember cref="F:Android.Hardware.Camera2.Params.TonemapCurve.LevelBlack" />
        <altmember cref="F:Android.Hardware.Camera2.Params.TonemapCurve.LevelWhite" />
      </Docs>
    </Member>
    <Member MemberName="GetPointCount">
      <MemberSignature Language="C#" Value="public int GetPointCount (Android.Graphics.Color colorChannel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetPointCount(valuetype Android.Graphics.Color colorChannel) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPointCount", "(I)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorChannel" Type="Android.Graphics.Color" />
      </Parameters>
      <Docs>
        <param name="colorChannel">one of <c><see cref="!:Android.Hardware.Camera2.Params.TonemapCurve.CHANNEL_RED" /></c>, <c><see cref="!:Android.Hardware.Camera2.Params.TonemapCurve.CHANNEL_GREEN" /></c>, <c><see cref="!:Android.Hardware.Camera2.Params.TonemapCurve.CHANNEL_BLUE" /></c></param>
        <summary>Get the number of points stored in this tonemap curve for the specified color channel.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Get the number of points stored in this tonemap curve for the specified color channel.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/hardware/camera2/params/TonemapCurve.html#getPointCount(int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>colorChannel</c> was out of range
</exception>
      </Docs>
    </Member>
    <Member MemberName="LevelBlack">
      <MemberSignature Language="C#" Value="public const float LevelBlack = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 LevelBlack = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LEVEL_BLACK")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Lower bound tonemap value corresponding to pure black for a single color channel.</summary>
        <remarks><para tool="javadoc-to-mdoc">Lower bound tonemap value corresponding to pure black for a single color channel.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/hardware/camera2/params/TonemapCurve.html#LEVEL_BLACK" target="_blank">[Android Documentation]</a></format></para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LevelWhite">
      <MemberSignature Language="C#" Value="public const float LevelWhite = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 LevelWhite = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LEVEL_WHITE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Upper bound tonemap value corresponding to a pure white for a single color channel.</summary>
        <remarks><para tool="javadoc-to-mdoc">Upper bound tonemap value corresponding to a pure white for a single color channel.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/hardware/camera2/params/TonemapCurve.html#LEVEL_WHITE" target="_blank">[Android Documentation]</a></format></para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PointSize">
      <MemberSignature Language="C#" Value="public const int PointSize = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 PointSize = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("POINT_SIZE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Number of elements in a <c>(Pin, Pout)</c> point;
</summary>
        <remarks><para tool="javadoc-to-mdoc">Number of elements in a <c>(Pin, Pout)</c> point;
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/hardware/camera2/params/TonemapCurve.html#POINT_SIZE" target="_blank">[Android Documentation]</a></format></para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
