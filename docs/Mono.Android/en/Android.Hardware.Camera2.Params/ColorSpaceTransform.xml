<Type Name="ColorSpaceTransform" FullName="Android.Hardware.Camera2.Params.ColorSpaceTransform">
  <TypeSignature Language="C#" Value="public sealed class ColorSpaceTransform : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ColorSpaceTransform extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/hardware/camera2/params/ColorSpaceTransform", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="21">
    <summary>Immutable class for describing a 3x3 matrix of <c><see cref="T:Android.Util.Rational" /></c> values in row-major order.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Immutable class for describing a 3x3 matrix of <c><see cref="T:Android.Util.Rational" /></c> values in row-major order.

 </para>
      <para tool="javadoc-to-mdoc">This matrix maps a transform from one color space to another. For the particular color space
 source and target, see the appropriate camera metadata documentation for the key that provides
 this value.<format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="T:Android.Hardware.Camera2.CameraMetadata" /></c></term></item></list></para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/hardware/camera2/params/ColorSpaceTransform.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColorSpaceTransform (Android.Util.Rational[] elements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Util.Rational[] elements) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "([Landroid/util/Rational;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="elements" Type="Android.Util.Rational[]" />
      </Parameters>
      <Docs>
        <param name="elements">To be added.</param>
        <summary>Create a new immutable <c><see cref="T:Android.Hardware.Camera2.Params.ColorSpaceTransform" /></c> instance from a <c><see cref="T:Android.Util.Rational" /></c> array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new immutable <c><see cref="T:Android.Hardware.Camera2.Params.ColorSpaceTransform" /></c> instance from a <c><see cref="T:Android.Util.Rational" /></c> array.

 </para>
          <para tool="javadoc-to-mdoc">The elements must be stored in a row-major order.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/params/ColorSpaceTransform.html#ColorSpaceTransform(android.util.Rational[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the count of <c>elements</c> is not <c>9</c></exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>elements</c> or any sub-element is <c>null</c></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColorSpaceTransform (int[] elements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32[] elements) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "([I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="elements" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="elements">To be added.</param>
        <summary>Create a new immutable <c><see cref="T:Android.Hardware.Camera2.Params.ColorSpaceTransform" /></c> instance from an <c>int</c> array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new immutable <c><see cref="T:Android.Hardware.Camera2.Params.ColorSpaceTransform" /></c> instance from an <c>int</c> array.

 </para>
          <para tool="javadoc-to-mdoc">The elements must be stored in a row-major order. Each rational is stored
 contiguously as a <c>(numerator, denominator)</c> pair.</para>
          <para tool="javadoc-to-mdoc">In particular:<sample external-id="995373E5666A232314F0C96CA3BE3FE7" />

 where <c>Nij</c> and <c>Dij</c> is the numerator and denominator for row <c>i</c> and
 column <c>j</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/params/ColorSpaceTransform.html#ColorSpaceTransform(int[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the count of <c>elements</c> is not <c>18</c></exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>elements</c> is <c>null</c></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyElements">
      <MemberSignature Language="C#" Value="public void CopyElements (Android.Util.Rational[] destination, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyElements(class Android.Util.Rational[] destination, int32 offset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyElements", "([Landroid/util/Rational;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="Android.Util.Rational[]" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination">an array big enough to hold at least <c>9</c> elements after the
          <c>offset</c></param>
        <param name="offset">a non-negative offset into the array</param>
        <summary>Copy the <c><see cref="T:Android.Util.Rational" /></c> elements in row-major order from this matrix into the destination.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy the <c><see cref="T:Android.Util.Rational" /></c> elements in row-major order from this matrix into the destination.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/params/ColorSpaceTransform.html#copyElements(android.util.Rational[], int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="T:Java.Lang.NullPointerException">If <c>destination</c> was <c>null</c></exception>
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">If there's not enough room to write the elements at the specified destination and
          offset.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyElements">
      <MemberSignature Language="C#" Value="public void CopyElements (int[] destination, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyElements(int32[] destination, int32 offset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyElements", "([II)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Int32[]" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination">an array big enough to hold at least <c>18</c> elements after the
          <c>offset</c></param>
        <param name="offset">a non-negative offset into the array</param>
        <summary>Copy the <c><see cref="T:Android.Util.Rational" /></c> elements in row-major order from this matrix into the destination.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy the <c><see cref="T:Android.Util.Rational" /></c> elements in row-major order from this matrix into the destination.

 </para>
          <para tool="javadoc-to-mdoc">Each element is stored as a contiguous rational packed as a
 <c>(numerator, denominator)</c> pair of ints, identical to the
 <c><see cref="C:Android.Hardware.Camera2.Params.ColorSpaceTransform(System.Int32[])" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/params/ColorSpaceTransform.html#copyElements(int[], int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="T:Java.Lang.NullPointerException">If <c>destination</c> was <c>null</c></exception>
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">If there's not enough room to write the elements at the specified destination and
          offset.</exception>
        <altmember cref="C:Android.Hardware.Camera2.Params.ColorSpaceTransform(System.Int32[])" />
      </Docs>
    </Member>
    <Member MemberName="GetElement">
      <MemberSignature Language="C#" Value="public Android.Util.Rational GetElement (int column, int row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Util.Rational GetElement(int32 column, int32 row) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getElement", "(II)Landroid/util/Rational;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Util.Rational</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Int32" />
        <Parameter Name="row" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="column">To be added.</param>
        <param name="row">To be added.</param>
        <summary>Get an element of this matrix by its row and column.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Get an element of this matrix by its row and column.

 </para>
          <para tool="javadoc-to-mdoc">The rows must be within the range [0, 3),
 and the column must be within the range [0, 3).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/camera2/params/ColorSpaceTransform.html#getElement(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalArgumentException">if column or row was out of range
</exception>
        <since version="Added in API level 21" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>