<Namespace Name="Org.Apache.Http.Conn">
  <Docs>
    <summary>
The lowest layer of connection handling is comprised of
<c><see cref="T:Org.Apache.Http.Conn.IOperatedClientConnection" /></c>
and
<c><see cref="T:Org.Apache.Http.Conn.IClientConnectionOperator" /></c>.</summary>
    <remarks>
    The client-side connection management and handling API
at the heart of what is referred to as <format type="text/html"><i>HttpConn</i></format>.
This component provides interfaces and implementations for
opening and managing connections.

<para tool="javadoc-to-mdoc">
The lowest layer of connection handling is comprised of
<c><see cref="T:Org.Apache.Http.Conn.IOperatedClientConnection" /></c>
and
<c><see cref="T:Org.Apache.Http.Conn.IClientConnectionOperator" /></c>.
The connection interface extends the core
<c><see cref="T:Org.Apache.Http.IHttpClientConnection" /></c>
by operations to set and update a socket.
An operator encapsulates the logic to open and layer sockets,
typically using a <c><see cref="T:Org.Apache.Http.Conn.Schemes.ISocketFactory" /></c>.
The socket factory for a protocol
<c><see cref="T:Org.Apache.Http.Conn.Schemes.Scheme" /></c>
such as "http" or "https" can be looked up in a
<c><see cref="T:Org.Apache.Http.Conn.Schemes.SchemeRegistry" /></c>.
Applications without a need for sophisticated connection management
can use this layer directly.
</para><para tool="javadoc-to-mdoc">
On top of that lies the connection management layer. A
<c><see cref="T:Org.Apache.Http.Conn.IClientConnectionManager" /></c>
internally manages operated connections, but hands out instances of
<c><see cref="T:Org.Apache.Http.Conn.IManagedClientConnection" /></c>.
This interface abstracts from the underlying socket operations and
provides convenient methods for opening and updating sockets in order
to establish a <c><see cref="T:Org.Apache.Http.Conn.Routing.HttpRoute" /></c>.
The operator is encapsulated by the connection manager and called
automatically.

<format type="text/html"><br /></format>

Connections obtained from a manager have to be returned after use.
This can be <c><see cref="T:Org.Apache.Http.Conn.IConnectionReleaseTrigger" /></c>
on various levels, either by releasing the
<c><see cref="T:Org.Apache.Http.Conn.IManagedClientConnection" /></c>
directly, or by calling a method on an
<c><see cref="T:Org.Apache.Http.Conn.BasicManagedEntity" /></c>
received from the connection, or by closing the
<c><see cref="T:Org.Apache.Http.Conn.EofSensorInputStream" /></c>
from which that entity is being read.

Connection managers will try to keep returned connections alive in
order to re-use them for subsequent requests along the same route.
The managed connection interface and all triggers for connection release
provide methods to enable or disable this behavior.
</para></remarks>
  </Docs>
</Namespace>
