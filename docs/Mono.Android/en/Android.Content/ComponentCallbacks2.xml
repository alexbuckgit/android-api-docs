<Type Name="ComponentCallbacks2" FullName="Android.Content.ComponentCallbacks2">
  <TypeSignature Language="C#" Value="public abstract class ComponentCallbacks2" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ComponentCallbacks2 extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/content/ComponentCallbacks2")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="14">
    <summary>Extended <c><see cref="T:Android.Content.IComponentCallbacks" /></c> interface with a new callback for
 finer-grained memory management.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Extended <c><see cref="T:Android.Content.IComponentCallbacks" /></c> interface with a new callback for
 finer-grained memory management. This interface is available in all application components
 (<c><see cref="T:Android.App.Activity" /></c>, <c><see cref="T:Android.App.Service" /></c>,
 <c><see cref="T:Android.Content.ContentProvider" /></c>, and <c><see cref="T:Android.App.Application" /></c>).

 </para>
      <para tool="javadoc-to-mdoc">You should implement <c><see cref="!:Android.Content.ComponentCallbacks2.onTrimMemory(int)" /></c> to incrementally release memory based on current
 system constraints. Using this callback to release your resources helps provide a more
 responsive system overall, but also directly benefits the user experience for
 your app by allowing the system to keep your process alive longer. That is,
 if you <i>don't</i> trim your resources based on memory levels defined by this callback,
 the system is more likely to kill your process while it is cached in the least-recently used
 (LRU) list, thus requiring your app to restart and restore all state when the user returns to it.

 </para>
      <para tool="javadoc-to-mdoc">The values provided by <c><see cref="!:Android.Content.ComponentCallbacks2.onTrimMemory(int)" /></c> do not represent a single linear progression of
 memory limits, but provide you different types of clues about memory availability:</para>
      <list type="bullet">
        <item>
          <term>When your app is running:
  <list type="number" /></term>
        </item>
        <item>
          <term>
            <c>
              <see cref="F:Android.Content.ComponentCallbacks2.TrimMemoryRunningModerate" />
            </c>
            <format type="text/html">
              <br />
            </format>The device is beginning to run low on memory.
 Your app is running and not killable.
  </term>
        </item>
        <item>
          <term>
            <c>
              <see cref="F:Android.Content.ComponentCallbacks2.TrimMemoryRunningLow" />
            </c>
            <format type="text/html">
              <br />
            </format>The device is running much lower on memory.
 Your app is running and not killable, but please release unused resources to improve system
 performance (which directly impacts your app's performance).
  </term>
        </item>
        <item>
          <term>
            <c>
              <see cref="F:Android.Content.ComponentCallbacks2.TrimMemoryRunningCritical" />
            </c>
            <format type="text/html">
              <br />
            </format>The device is running extremely low on memory.
 Your app is not yet considered a killable process, but the system will begin killing
 background processes if apps do not release resources, so you should release non-critical
 resources now to prevent performance degradation.
  </term>
        </item>
        <item>
          <term>When your app's visibility changes:
  <list type="number" /></term>
        </item>
        <item>
          <term>
            <c>
              <see cref="F:Android.Content.ComponentCallbacks2.TrimMemoryUiHidden" />
            </c>
            <format type="text/html">
              <br />
            </format>Your app's UI is no longer visible, so this is a good
 time to release large resources that are used only by your UI.
  </term>
        </item>
        <item>
          <term>When your app's process resides in the background LRU list:
  <list type="number" /></term>
        </item>
        <item>
          <term>
            <c>
              <see cref="F:Android.Content.ComponentCallbacks2.TrimMemoryBackground" />
            </c>
            <format type="text/html">
              <br />
            </format>The system is running low on memory and your process is
 near the beginning of the LRU list. Although your app process is not at a high risk of being
 killed, the system may already be killing processes in the LRU list, so you should release
 resources that are easy to recover so your process will remain in the list and resume
 quickly when the user returns to your app.
  </term>
        </item>
        <item>
          <term>
            <c>
              <see cref="F:Android.Content.ComponentCallbacks2.TrimMemoryModerate" />
            </c>
            <format type="text/html">
              <br />
            </format>The system is running low on memory and your process is
 near the middle of the LRU list. If the system becomes further constrained for memory, there's a
 chance your process will be killed.
  </term>
        </item>
        <item>
          <term>
            <c>
              <see cref="F:Android.Content.ComponentCallbacks2.TrimMemoryComplete" />
            </c>
            <format type="text/html">
              <br />
            </format>The system is running low on memory and your process is
 one of the first to be killed if the system does not recover memory now. You should release
 absolutely everything that's not critical to resuming your app state.
   To support API levels lower than 14, you can use the <c><see cref="M:Android.Content.IComponentCallbacks.OnLowMemory" /></c> method as a
 fallback that's roughly equivalent to the <c><see cref="F:Android.Content.ComponentCallbacks2.TrimMemoryComplete" /></c> level.
  </term>
        </item>
      </list>
      <para tool="javadoc-to-mdoc" />
      <para tool="javadoc-to-mdoc">
        <i>Note:</i> When the system begins
 killing processes in the LRU list, although it primarily works bottom-up, it does give some
 consideration to which processes are consuming more memory and will thus provide more gains in
 memory if killed. So the less memory you consume while in the LRU list overall, the better
 your chances are to remain in the list and be able to quickly resume.</para>
      <para tool="javadoc-to-mdoc">More information about the different stages of a process lifecycle (such as what it means
 to be placed in the background LRU list) is provided in the <format type="text/html"><a href="http://developer.android.com/reference/../guide/components/processes-and-threads.html#Lifecycle">Processes and Threads</a></format>
 document.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/content/ComponentCallbacks2.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 14" />
  </Docs>
  <Members>
    <Member MemberName="TrimMemoryBackground">
      <MemberSignature Language="C#" Value="public const Android.Content.TrimMemory TrimMemoryBackground = 40;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.TrimMemory TrimMemoryBackground = (40)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TRIM_MEMORY_BACKGROUND")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Content.TrimMemory enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.TrimMemory</ReturnType>
      </ReturnValue>
      <MemberValue>40</MemberValue>
      <Docs>
        <summary>Level for <c><see cref="!:Android.Content.ComponentCallbacks2.onTrimMemory(int)" /></c>: the process has gone on to the
 LRU list.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Level for <c><see cref="!:Android.Content.ComponentCallbacks2.onTrimMemory(int)" /></c>: the process has gone on to the
 LRU list.  This is a good opportunity to clean up resources that can
 efficiently and quickly be re-built if the user returns to the app.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ComponentCallbacks2.html#TRIM_MEMORY_BACKGROUND" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="TrimMemoryComplete">
      <MemberSignature Language="C#" Value="public const Android.Content.TrimMemory TrimMemoryComplete = 80;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.TrimMemory TrimMemoryComplete = (80)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TRIM_MEMORY_COMPLETE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Content.TrimMemory enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.TrimMemory</ReturnType>
      </ReturnValue>
      <MemberValue>80</MemberValue>
      <Docs>
        <summary>Level for <c><see cref="!:Android.Content.ComponentCallbacks2.onTrimMemory(int)" /></c>: the process is nearing the end
 of the background LRU list, and if more memory isn't found soon it will
 be killed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Level for <c><see cref="!:Android.Content.ComponentCallbacks2.onTrimMemory(int)" /></c>: the process is nearing the end
 of the background LRU list, and if more memory isn't found soon it will
 be killed.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ComponentCallbacks2.html#TRIM_MEMORY_COMPLETE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="TrimMemoryModerate">
      <MemberSignature Language="C#" Value="public const Android.Content.TrimMemory TrimMemoryModerate = 60;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.TrimMemory TrimMemoryModerate = (60)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TRIM_MEMORY_MODERATE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Content.TrimMemory enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.TrimMemory</ReturnType>
      </ReturnValue>
      <MemberValue>60</MemberValue>
      <Docs>
        <summary>Level for <c><see cref="!:Android.Content.ComponentCallbacks2.onTrimMemory(int)" /></c>: the process is around the middle
 of the background LRU list; freeing memory can help the system keep
 other processes running later in the list for better overall performance.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Level for <c><see cref="!:Android.Content.ComponentCallbacks2.onTrimMemory(int)" /></c>: the process is around the middle
 of the background LRU list; freeing memory can help the system keep
 other processes running later in the list for better overall performance.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ComponentCallbacks2.html#TRIM_MEMORY_MODERATE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="TrimMemoryRunningCritical">
      <MemberSignature Language="C#" Value="public const Android.Content.TrimMemory TrimMemoryRunningCritical = 15;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.TrimMemory TrimMemoryRunningCritical = (15)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TRIM_MEMORY_RUNNING_CRITICAL")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Content.TrimMemory enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.TrimMemory</ReturnType>
      </ReturnValue>
      <MemberValue>15</MemberValue>
      <Docs>
        <summary>Level for <c><see cref="!:Android.Content.ComponentCallbacks2.onTrimMemory(int)" /></c>: the process is not an expendable
 background process, but the device is running extremely low on memory
 and is about to not be able to keep any background processes running.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Level for <c><see cref="!:Android.Content.ComponentCallbacks2.onTrimMemory(int)" /></c>: the process is not an expendable
 background process, but the device is running extremely low on memory
 and is about to not be able to keep any background processes running.
 Your running process should free up as many non-critical resources as it
 can to allow that memory to be used elsewhere.  The next thing that
 will happen after this is <c><see cref="M:Android.Content.IComponentCallbacks.OnLowMemory" /></c> called to report that
 nothing at all can be kept in the background, a situation that can start
 to notably impact the user.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ComponentCallbacks2.html#TRIM_MEMORY_RUNNING_CRITICAL" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="TrimMemoryRunningLow">
      <MemberSignature Language="C#" Value="public const Android.Content.TrimMemory TrimMemoryRunningLow = 10;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.TrimMemory TrimMemoryRunningLow = (10)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TRIM_MEMORY_RUNNING_LOW")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Content.TrimMemory enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.TrimMemory</ReturnType>
      </ReturnValue>
      <MemberValue>10</MemberValue>
      <Docs>
        <summary>Level for <c><see cref="!:Android.Content.ComponentCallbacks2.onTrimMemory(int)" /></c>: the process is not an expendable
 background process, but the device is running low on memory.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Level for <c><see cref="!:Android.Content.ComponentCallbacks2.onTrimMemory(int)" /></c>: the process is not an expendable
 background process, but the device is running low on memory.
 Your running process should free up unneeded resources to allow that
 memory to be used elsewhere.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ComponentCallbacks2.html#TRIM_MEMORY_RUNNING_LOW" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="TrimMemoryRunningModerate">
      <MemberSignature Language="C#" Value="public const Android.Content.TrimMemory TrimMemoryRunningModerate = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.TrimMemory TrimMemoryRunningModerate = (5)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TRIM_MEMORY_RUNNING_MODERATE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Content.TrimMemory enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.TrimMemory</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>Level for <c><see cref="!:Android.Content.ComponentCallbacks2.onTrimMemory(int)" /></c>: the process is not an expendable
 background process, but the device is running moderately low on memory.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Level for <c><see cref="!:Android.Content.ComponentCallbacks2.onTrimMemory(int)" /></c>: the process is not an expendable
 background process, but the device is running moderately low on memory.
 Your running process may want to release some unneeded resources for
 use elsewhere.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ComponentCallbacks2.html#TRIM_MEMORY_RUNNING_MODERATE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="TrimMemoryUiHidden">
      <MemberSignature Language="C#" Value="public const Android.Content.TrimMemory TrimMemoryUiHidden = 20;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.TrimMemory TrimMemoryUiHidden = (20)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TRIM_MEMORY_UI_HIDDEN")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Content.TrimMemory enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.TrimMemory</ReturnType>
      </ReturnValue>
      <MemberValue>20</MemberValue>
      <Docs>
        <summary>Level for <c><see cref="!:Android.Content.ComponentCallbacks2.onTrimMemory(int)" /></c>: the process had been showing
 a user interface, and is no longer doing so.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Level for <c><see cref="!:Android.Content.ComponentCallbacks2.onTrimMemory(int)" /></c>: the process had been showing
 a user interface, and is no longer doing so.  Large allocations with
 the UI should be released at this point to allow memory to be better
 managed.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/content/ComponentCallbacks2.html#TRIM_MEMORY_UI_HIDDEN" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
  </Members>
</Type>