<Type Name="ContentResolver" FullName="Android.Content.ContentResolver">
  <TypeSignature Language="C#" Value="public abstract class ContentResolver : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ContentResolver extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/content/ContentResolver", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This class provides applications access to the content model.</summary>
    <remarks />
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentResolver (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>
        </summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ContentResolver (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AcquireContentProviderClient">
      <MemberSignature Language="C#" Value="public Android.Content.ContentProviderClient AcquireContentProviderClient (Android.Net.Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Content.ContentProviderClient AcquireContentProviderClient(class Android.Net.Uri uri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("acquireContentProviderClient", "(Landroid/net/Uri;)Landroid/content/ContentProviderClient;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ContentProviderClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">specifies which provider should be acquired</param>
        <summary>Returns a <c><see cref="T:Android.Content.ContentProviderClient" /></c> that is associated with the <c><see cref="T:Android.Content.ContentProvider" /></c>
 that services the content at uri, starting the provider if necessary.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="AcquireContentProviderClient">
      <MemberSignature Language="C#" Value="public Android.Content.ContentProviderClient AcquireContentProviderClient (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Content.ContentProviderClient AcquireContentProviderClient(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("acquireContentProviderClient", "(Ljava/lang/String;)Landroid/content/ContentProviderClient;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ContentProviderClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">specifies which provider should be acquired</param>
        <summary>Returns a <c><see cref="T:Android.Content.ContentProviderClient" /></c> that is associated with the <c><see cref="T:Android.Content.ContentProvider" /></c>
 with the authority of name, starting the provider if necessary.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="AcquireUnstableContentProviderClient">
      <MemberSignature Language="C#" Value="public Android.Content.ContentProviderClient AcquireUnstableContentProviderClient (Android.Net.Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Content.ContentProviderClient AcquireUnstableContentProviderClient(class Android.Net.Uri uri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("acquireUnstableContentProviderClient", "(Landroid/net/Uri;)Landroid/content/ContentProviderClient;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ContentProviderClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <summary>Like <c><see cref="M:Android.Content.ContentResolver.AcquireContentProviderClient(Android.Net.Uri)" /></c>, but for use when you do
 not trust the stability of the target content provider.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="AcquireUnstableContentProviderClient">
      <MemberSignature Language="C#" Value="public Android.Content.ContentProviderClient AcquireUnstableContentProviderClient (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Content.ContentProviderClient AcquireUnstableContentProviderClient(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("acquireUnstableContentProviderClient", "(Ljava/lang/String;)Landroid/content/ContentProviderClient;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ContentProviderClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>Like <c><see cref="M:Android.Content.ContentResolver.AcquireContentProviderClient(System.String)" /></c>, but for use when you do
 not trust the stability of the target content provider.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="AddPeriodicSync">
      <MemberSignature Language="C#" Value="public static void AddPeriodicSync (Android.Accounts.Account account, string authority, Android.OS.Bundle extras, long pollFrequency);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPeriodicSync(class Android.Accounts.Account account, string authority, class Android.OS.Bundle extras, int64 pollFrequency) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addPeriodicSync", "(Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;J)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="account" Type="Android.Accounts.Account" />
        <Parameter Name="authority" Type="System.String" />
        <Parameter Name="extras" Type="Android.OS.Bundle" />
        <Parameter Name="pollFrequency" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="account">the account to specify in the sync</param>
        <param name="authority">the provider to specify in the sync request</param>
        <param name="extras">extra parameters to go along with the sync request</param>
        <param name="pollFrequency">how frequently the sync should be performed, in seconds.</param>
        <summary>Specifies that a sync should be requested with the specified the account, authority,
 and extras at the given frequency.</summary>
        <remarks />
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if an illegal extra was set or if any of the parameters
 are null.
</exception>
      </Docs>
    </Member>
    <Member MemberName="AddStatusChangeListener">
      <MemberSignature Language="C#" Value="public static Java.Lang.Object AddStatusChangeListener (Android.Content.SyncObserverType mask, Android.Content.ISyncStatusObserver callback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Object AddStatusChangeListener(valuetype Android.Content.SyncObserverType mask, class Android.Content.ISyncStatusObserver callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addStatusChangeListener", "(ILandroid/content/SyncStatusObserver;)Ljava/lang/Object;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mask" Type="Android.Content.SyncObserverType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="callback" Type="Android.Content.ISyncStatusObserver" />
      </Parameters>
      <Docs>
        <param name="mask">the status change types that will cause the callback to be invoked</param>
        <param name="callback">observer to be invoked when the status changes</param>
        <summary>Request notifications when the different aspects of the SyncManager change.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="AnyCursorItemType">
      <MemberSignature Language="C#" Value="public const string AnyCursorItemType;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string AnyCursorItemType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ANY_CURSOR_ITEM_TYPE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This is the Android platform's generic MIME type to match any MIME
 type of the form "<c><see cref="F:Android.Content.ContentResolver.CursorItemBaseType" /></c>/<c>SUB_TYPE</c>".</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ApplyBatch">
      <MemberSignature Language="C#" Value="public virtual Android.Content.ContentProviderResult[] ApplyBatch (string authority, System.Collections.Generic.IList&lt;Android.Content.ContentProviderOperation&gt; operations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.ContentProviderResult[] ApplyBatch(string authority, class System.Collections.Generic.IList`1&lt;class Android.Content.ContentProviderOperation&gt; operations) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("applyBatch", "(Ljava/lang/String;Ljava/util/ArrayList;)[Landroid/content/ContentProviderResult;", "GetApplyBatch_Ljava_lang_String_Ljava_util_ArrayList_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ContentProviderResult[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authority" Type="System.String" />
        <Parameter Name="operations" Type="System.Collections.Generic.IList&lt;Android.Content.ContentProviderOperation&gt;" />
      </Parameters>
      <Docs>
        <param name="authority">To be added.</param>
        <param name="operations">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="BulkInsert">
      <MemberSignature Language="C#" Value="public int BulkInsert (Android.Net.Uri url, Android.Content.ContentValues[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 BulkInsert(class Android.Net.Uri url, class Android.Content.ContentValues[] values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("bulkInsert", "(Landroid/net/Uri;[Landroid/content/ContentValues;)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Android.Net.Uri" />
        <Parameter Name="values" Type="Android.Content.ContentValues[]" />
      </Parameters>
      <Docs>
        <param name="url">The URL of the table to insert into.</param>
        <param name="values">The initial values for the newly inserted rows. The key is the column name for
               the field. Passing null will create an empty row.</param>
        <summary>Inserts multiple rows into a table at the given URL.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public Android.OS.Bundle Call (Android.Net.Uri uri, string method, string arg, Android.OS.Bundle extras);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.OS.Bundle Call(class Android.Net.Uri uri, string method, string arg, class Android.OS.Bundle extras) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("call", "(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;Landroid/os/Bundle;)Landroid/os/Bundle;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Bundle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="arg" Type="System.String" />
        <Parameter Name="extras" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <param name="method">provider-defined method name to call.  Opaque to
   framework, but must be non-null.</param>
        <param name="arg">provider-defined String argument.  May be null.</param>
        <param name="extras">provider-defined Bundle argument.  May be null.</param>
        <summary>Call a provider-defined method.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
        <exception cref="T:Java.Lang.NullPointerException">if uri or method is null</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if uri is not known
</exception>
      </Docs>
    </Member>
    <Member MemberName="CancelSync">
      <MemberSignature Language="C#" Value="public static void CancelSync (Android.Content.SyncRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CancelSync(class Android.Content.SyncRequest request) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("cancelSync", "(Landroid/content/SyncRequest;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Android.Content.SyncRequest" />
      </Parameters>
      <Docs>
        <param name="request">SyncRequest object containing information about sync to cancel.
</param>
        <summary tool="true">Remove the specified sync.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CancelSync">
      <MemberSignature Language="C#" Value="public virtual void CancelSync (Android.Net.Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelSync(class Android.Net.Uri uri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("cancelSync", "(Landroid/net/Uri;)V", "GetCancelSync_Landroid_net_Uri_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">the uri of the provider to sync or null to sync all providers.</param>
        <summary>Cancel any active or pending syncs that match the Uri.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CancelSync">
      <MemberSignature Language="C#" Value="public static void CancelSync (Android.Accounts.Account account, string authority);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CancelSync(class Android.Accounts.Account account, string authority) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("cancelSync", "(Landroid/accounts/Account;Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="account" Type="Android.Accounts.Account" />
        <Parameter Name="authority" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="account">filters the syncs that match by this account</param>
        <param name="authority">filters the syncs that match by this authority
</param>
        <summary>Cancel any active or pending syncs that match account and authority.</summary>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="Canonicalize">
      <MemberSignature Language="C#" Value="public Android.Net.Uri Canonicalize (Android.Net.Uri url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Net.Uri Canonicalize(class Android.Net.Uri url) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("canonicalize", "(Landroid/net/Uri;)Landroid/net/Uri;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="url">The <c><see cref="T:Android.Net.Uri" /></c> that is to be transformed to a canonical
 representation.  Like all resolver calls, the input can be either
 a non-canonical or canonical Uri.</param>
        <summary>Transform the given <format type="text/html"><var>url</var></format> to a canonical representation of
 its referenced resource, which can be used across devices, persisted,
 backed up and restored, etc.</summary>
        <returns>To be added.</returns>
        <remarks />
        <altmember cref="M:Android.Content.ContentResolver.Uncanonicalize(Android.Net.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="CurrentSync">
      <MemberSignature Language="C#" Value="public static Android.Content.SyncInfo CurrentSync { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Content.SyncInfo CurrentSync" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCurrentSync", "()Landroid/content/SyncInfo;", "GetGetCurrentSyncHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.SyncInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If a sync is active returns the information about it, otherwise returns null.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="CurrentSyncs">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;Android.Content.SyncInfo&gt; CurrentSyncs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;class Android.Content.SyncInfo&gt; CurrentSyncs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCurrentSyncs", "()Ljava/util/List;", "GetGetCurrentSyncsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.SyncInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a list with information about all the active syncs.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CursorDirBaseType">
      <MemberSignature Language="C#" Value="public const string CursorDirBaseType;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string CursorDirBaseType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CURSOR_DIR_BASE_TYPE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This is the Android platform's base MIME type for a content: URI
 containing a Cursor of zero or more items.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CursorItemBaseType">
      <MemberSignature Language="C#" Value="public const string CursorItemBaseType;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string CursorItemBaseType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CURSOR_ITEM_BASE_TYPE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This is the Android platform's base MIME type for a content: URI
 containing a Cursor of a single item.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete (Android.Net.Uri url, string where, string[] selectionArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete(class Android.Net.Uri url, string where, string[] selectionArgs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("delete", "(Landroid/net/Uri;Ljava/lang/String;[Ljava/lang/String;)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Android.Net.Uri" />
        <Parameter Name="where" Type="System.String" />
        <Parameter Name="selectionArgs" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="url">The URL of the row to delete.</param>
        <param name="where">A filter to apply to rows before deleting, formatted as an SQL WHERE clause
                    (excluding the WHERE itself).</param>
        <param name="selectionArgs">To be added.</param>
        <summary>Deletes row(s) specified by a content URI.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ExtraSize">
      <MemberSignature Language="C#" Value="public const string ExtraSize;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraSize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_SIZE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An extra <c><see cref="T:Android.Graphics.Point" /></c> describing the optimal size for a requested image
 resource, in pixels.</summary>
        <remarks />
        <altmember cref="M:Android.Content.ContentResolver.OpenTypedAssetFileDescriptor(Android.Net.Uri, System.String, System.String)" />
        <altmember cref="M:Android.Content.ContentResolver.OpenTypedAssetFileDescriptor(Android.Net.Uri, System.String, System.String, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetIsSyncable">
      <MemberSignature Language="C#" Value="public static int GetIsSyncable (Android.Accounts.Account account, string authority);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetIsSyncable(class Android.Accounts.Account account, string authority) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getIsSyncable", "(Landroid/accounts/Account;Ljava/lang/String;)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="account" Type="Android.Accounts.Account" />
        <Parameter Name="authority" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="account">To be added.</param>
        <param name="authority">To be added.</param>
        <summary>Check if this account/provider is syncable.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="GetPeriodicSyncs">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;Android.Content.PeriodicSync&gt; GetPeriodicSyncs (Android.Accounts.Account account, string authority);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class Android.Content.PeriodicSync&gt; GetPeriodicSyncs(class Android.Accounts.Account account, string authority) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPeriodicSyncs", "(Landroid/accounts/Account;Ljava/lang/String;)Ljava/util/List;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PeriodicSync&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="account" Type="Android.Accounts.Account" />
        <Parameter Name="authority" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="account">the account whose periodic syncs we are querying</param>
        <param name="authority">the provider whose periodic syncs we are querying</param>
        <summary>Get the list of information about the periodic syncs for the given account and authority.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetStreamTypes">
      <MemberSignature Language="C#" Value="public virtual string[] GetStreamTypes (Android.Net.Uri url, string mimeTypeFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetStreamTypes(class Android.Net.Uri url, string mimeTypeFilter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getStreamTypes", "(Landroid/net/Uri;Ljava/lang/String;)[Ljava/lang/String;", "GetGetStreamTypes_Landroid_net_Uri_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Android.Net.Uri" />
        <Parameter Name="mimeTypeFilter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">A Uri identifying content (either a list or specific type),
 using the content:// scheme.</param>
        <param name="mimeTypeFilter">The desired MIME type.  This may be a pattern,
 such as *&amp;#47;*, to query for all available MIME types that match the
 pattern.</param>
        <summary>Query for the possible MIME types for the representations the given
 content URL can be returned when opened as as stream with
 <c><see cref="M:Android.Content.ContentResolver.OpenTypedAssetFileDescriptor(Android.Net.Uri, System.String, System.String)" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetSyncAdapterTypes">
      <MemberSignature Language="C#" Value="public static Android.Content.SyncAdapterType[] GetSyncAdapterTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Content.SyncAdapterType[] GetSyncAdapterTypes() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getSyncAdapterTypes", "()[Landroid/content/SyncAdapterType;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.SyncAdapterType[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Get information about the SyncAdapters that are known to the system.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="GetSyncAutomatically">
      <MemberSignature Language="C#" Value="public static bool GetSyncAutomatically (Android.Accounts.Account account, string authority);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetSyncAutomatically(class Android.Accounts.Account account, string authority) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getSyncAutomatically", "(Landroid/accounts/Account;Ljava/lang/String;)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="account" Type="Android.Accounts.Account" />
        <Parameter Name="authority" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="account">the account whose setting we are querying</param>
        <param name="authority">the provider whose setting we are querying</param>
        <summary>Check if the provider should be synced when a network tickle is received
 </summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public string GetType (Android.Net.Uri url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetType(class Android.Net.Uri url) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getType", "(Landroid/net/Uri;)Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="url">A Uri identifying content (either a list or specific type),
 using the content:// scheme.</param>
        <summary>Return the MIME type of the given content URL.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public Android.Net.Uri Insert (Android.Net.Uri url, Android.Content.ContentValues values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Net.Uri Insert(class Android.Net.Uri url, class Android.Content.ContentValues values) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("insert", "(Landroid/net/Uri;Landroid/content/ContentValues;)Landroid/net/Uri;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Android.Net.Uri" />
        <Parameter Name="values" Type="Android.Content.ContentValues" />
      </Parameters>
      <Docs>
        <param name="url">The URL of the table to insert into.</param>
        <param name="values">The initial values for the newly inserted row. The key is the column name for
               the field. Passing an empty ContentValues will create an empty row.</param>
        <summary>Inserts a row into a table at the given URL.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsSyncActive">
      <MemberSignature Language="C#" Value="public static bool IsSyncActive (Android.Accounts.Account account, string authority);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSyncActive(class Android.Accounts.Account account, string authority) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isSyncActive", "(Landroid/accounts/Account;Ljava/lang/String;)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="account" Type="Android.Accounts.Account" />
        <Parameter Name="authority" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="account">the account whose setting we are querying</param>
        <param name="authority">the provider whose behavior is being queried</param>
        <summary>Returns true if there is currently a sync operation for the given account or authority
 actively being processed.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="IsSyncPending">
      <MemberSignature Language="C#" Value="public static bool IsSyncPending (Android.Accounts.Account account, string authority);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSyncPending(class Android.Accounts.Account account, string authority) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isSyncPending", "(Landroid/accounts/Account;Ljava/lang/String;)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="account" Type="Android.Accounts.Account" />
        <Parameter Name="authority" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="account">the account whose setting we are querying</param>
        <param name="authority">the provider whose behavior is being queried</param>
        <summary>Return true if the pending status is true of any matching authorities.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="MasterSyncAutomatically">
      <MemberSignature Language="C#" Value="public static bool MasterSyncAutomatically { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool MasterSyncAutomatically" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMasterSyncAutomatically", "()Z", "GetGetMasterSyncAutomaticallyHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setMasterSyncAutomatically", "(Z)V", "GetSetMasterSyncAutomatically_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the master auto-sync setting that applies to all the providers and accounts.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="NotifyChange">
      <MemberSignature Language="C#" Value="public virtual void NotifyChange (Android.Net.Uri uri, Android.Database.ContentObserver observer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyChange(class Android.Net.Uri uri, class Android.Database.ContentObserver observer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("notifyChange", "(Landroid/net/Uri;Landroid/database/ContentObserver;)V", "GetNotifyChange_Landroid_net_Uri_Landroid_database_ContentObserver_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="observer" Type="Android.Database.ContentObserver" />
      </Parameters>
      <Docs>
        <param name="uri">The uri of the content that was changed.</param>
        <param name="observer">The observer that originated the change, may be <c>null.
 The observer that originated the change will only receive the notification if it
 has requested to receive self-change notifications by implementing
 <c><see cref="M:Android.Database.ContentObserver.DeliverSelfNotifications" /></c> to return true.
</c></param>
        <summary tool="true">Notify registered observers that a row was updated and attempt to sync changes
 to the network.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NotifyChange">
      <MemberSignature Language="C#" Value="public virtual void NotifyChange (Android.Net.Uri uri, Android.Database.ContentObserver observer, bool syncToNetwork);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyChange(class Android.Net.Uri uri, class Android.Database.ContentObserver observer, bool syncToNetwork) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("notifyChange", "(Landroid/net/Uri;Landroid/database/ContentObserver;Z)V", "GetNotifyChange_Landroid_net_Uri_Landroid_database_ContentObserver_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="observer" Type="Android.Database.ContentObserver" />
        <Parameter Name="syncToNetwork" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="uri">The uri of the content that was changed.</param>
        <param name="observer">The observer that originated the change, may be <c>null.
 The observer that originated the change will only receive the notification if it
 has requested to receive self-change notifications by implementing
 <c><see cref="M:Android.Database.ContentObserver.DeliverSelfNotifications" /></c> to return true.</c></param>
        <param name="syncToNetwork">If true, attempt to sync the change to the network.</param>
        <summary>Notify registered observers that a row was updated.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.ContentResolver.RequestSync(Android.Accounts.Account, System.String, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="OpenAssetFileDescriptor">
      <MemberSignature Language="C#" Value="public Android.Content.Res.AssetFileDescriptor OpenAssetFileDescriptor (Android.Net.Uri uri, string mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Content.Res.AssetFileDescriptor OpenAssetFileDescriptor(class Android.Net.Uri uri, string mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("openAssetFileDescriptor", "(Landroid/net/Uri;Ljava/lang/String;)Landroid/content/res/AssetFileDescriptor;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.AssetFileDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="mode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">The desired URI to open.</param>
        <param name="mode">The file mode to use, as per <c><see cref="M:Android.Content.ContentProvider.OpenAssetFile(Android.Net.Uri, System.String)" /></c>.</param>
        <summary>Open a raw file descriptor to access data under a URI.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 3" />
        <exception cref="T:Java.IO.FileNotFoundException">Throws FileNotFoundException of no
 file exists under the URI or the mode is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenAssetFileDescriptor">
      <MemberSignature Language="C#" Value="public Android.Content.Res.AssetFileDescriptor OpenAssetFileDescriptor (Android.Net.Uri uri, string mode, Android.OS.CancellationSignal cancellationSignal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Content.Res.AssetFileDescriptor OpenAssetFileDescriptor(class Android.Net.Uri uri, string mode, class Android.OS.CancellationSignal cancellationSignal) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("openAssetFileDescriptor", "(Landroid/net/Uri;Ljava/lang/String;Landroid/os/CancellationSignal;)Landroid/content/res/AssetFileDescriptor;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.AssetFileDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="mode" Type="System.String" />
        <Parameter Name="cancellationSignal" Type="Android.OS.CancellationSignal" />
      </Parameters>
      <Docs>
        <param name="uri">The desired URI to open.</param>
        <param name="mode">The file mode to use, as per <c><see cref="M:Android.Content.ContentProvider.OpenAssetFile(Android.Net.Uri, System.String)" /></c>.</param>
        <param name="cancellationSignal">A signal to cancel the operation in progress, or null if
            none. If the operation is canceled, then
            <c><see cref="T:Android.OS.OperationCanceledException" /></c> will be thrown.</param>
        <summary>Open a raw file descriptor to access data under a URI.</summary>
        <returns>To be added.</returns>
        <remarks />
        <exception cref="T:Java.IO.FileNotFoundException">Throws FileNotFoundException of no
 file exists under the URI or the mode is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenFileDescriptor">
      <MemberSignature Language="C#" Value="public Android.OS.ParcelFileDescriptor OpenFileDescriptor (Android.Net.Uri uri, string mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.OS.ParcelFileDescriptor OpenFileDescriptor(class Android.Net.Uri uri, string mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("openFileDescriptor", "(Landroid/net/Uri;Ljava/lang/String;)Landroid/os/ParcelFileDescriptor;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.ParcelFileDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="mode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">The desired URI to open.</param>
        <param name="mode">The file mode to use, as per <c><see cref="M:Android.Content.ContentProvider.OpenFile(Android.Net.Uri, System.String)" /></c>.</param>
        <summary>Open a raw file descriptor to access data under a URI.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.FileNotFoundException">Throws FileNotFoundException if no
 file exists under the URI or the mode is invalid.</exception>
        <altmember cref="M:Android.Content.ContentResolver.OpenAssetFileDescriptor(Android.Net.Uri, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="OpenFileDescriptor">
      <MemberSignature Language="C#" Value="public Android.OS.ParcelFileDescriptor OpenFileDescriptor (Android.Net.Uri uri, string mode, Android.OS.CancellationSignal cancellationSignal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.OS.ParcelFileDescriptor OpenFileDescriptor(class Android.Net.Uri uri, string mode, class Android.OS.CancellationSignal cancellationSignal) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("openFileDescriptor", "(Landroid/net/Uri;Ljava/lang/String;Landroid/os/CancellationSignal;)Landroid/os/ParcelFileDescriptor;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.ParcelFileDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="mode" Type="System.String" />
        <Parameter Name="cancellationSignal" Type="Android.OS.CancellationSignal" />
      </Parameters>
      <Docs>
        <param name="uri">The desired URI to open.</param>
        <param name="mode">The file mode to use, as per <c><see cref="M:Android.Content.ContentProvider.OpenFile(Android.Net.Uri, System.String)" /></c>.</param>
        <param name="cancellationSignal">A signal to cancel the operation in progress,
         or null if none. If the operation is canceled, then
         <c><see cref="T:Android.OS.OperationCanceledException" /></c> will be thrown.</param>
        <summary>Open a raw file descriptor to access data under a URI.</summary>
        <returns>To be added.</returns>
        <remarks />
        <exception cref="T:Java.IO.FileNotFoundException">Throws FileNotFoundException if no
 file exists under the URI or the mode is invalid.</exception>
        <altmember cref="M:Android.Content.ContentResolver.OpenAssetFileDescriptor(Android.Net.Uri, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="OpenInputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenInputStream (Android.Net.Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenInputStream(class Android.Net.Uri uri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("openInputStream", "(Landroid/net/Uri;)Ljava/io/InputStream;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">The desired URI.</param>
        <summary>Open a stream on to the content associated with a content URI.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.FileNotFoundException">if the provided URI could not be opened.</exception>
        <altmember cref="M:Android.Content.ContentResolver.OpenAssetFileDescriptor(Android.Net.Uri, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="OpenOutputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenOutputStream (Android.Net.Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenOutputStream(class Android.Net.Uri uri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("openOutputStream", "(Landroid/net/Uri;)Ljava/io/OutputStream;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <summary>Synonym for <c><see cref="M:Android.Content.ContentResolver.OpenOutputStream(Android.Net.Uri, System.String)" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.FileNotFoundException">if the provided URI could not be opened.
</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenOutputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenOutputStream (Android.Net.Uri uri, string mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenOutputStream(class Android.Net.Uri uri, string mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("openOutputStream", "(Landroid/net/Uri;Ljava/lang/String;)Ljava/io/OutputStream;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="mode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">The desired URI.</param>
        <param name="mode">May be "w", "wa", "rw", or "rwt".</param>
        <summary>Open a stream on to the content associated with a content URI.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 3" />
        <exception cref="T:Java.IO.FileNotFoundException">if the provided URI could not be opened.</exception>
        <altmember cref="M:Android.Content.ContentResolver.OpenAssetFileDescriptor(Android.Net.Uri, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="OpenTypedAssetFileDescriptor">
      <MemberSignature Language="C#" Value="public Android.Content.Res.AssetFileDescriptor OpenTypedAssetFileDescriptor (Android.Net.Uri uri, string mimeType, Android.OS.Bundle opts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Content.Res.AssetFileDescriptor OpenTypedAssetFileDescriptor(class Android.Net.Uri uri, string mimeType, class Android.OS.Bundle opts) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("openTypedAssetFileDescriptor", "(Landroid/net/Uri;Ljava/lang/String;Landroid/os/Bundle;)Landroid/content/res/AssetFileDescriptor;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.AssetFileDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="mimeType" Type="System.String" />
        <Parameter Name="opts" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="uri">The desired URI to open.</param>
        <param name="mimeType">The desired MIME type of the returned data.  This can
 be a pattern such as *&amp;#47;*, which will allow the content provider to
 select a type, though there is no way for you to determine what type
 it is returning.</param>
        <param name="opts">Additional provider-dependent options.</param>
        <summary>Open a raw file descriptor to access (potentially type transformed)
 data from a "content:" URI.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 11" />
        <exception cref="T:Java.IO.FileNotFoundException">Throws FileNotFoundException of no
 data of the desired type exists under the URI.
</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenTypedAssetFileDescriptor">
      <MemberSignature Language="C#" Value="public Android.Content.Res.AssetFileDescriptor OpenTypedAssetFileDescriptor (Android.Net.Uri uri, string mimeType, Android.OS.Bundle opts, Android.OS.CancellationSignal cancellationSignal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Content.Res.AssetFileDescriptor OpenTypedAssetFileDescriptor(class Android.Net.Uri uri, string mimeType, class Android.OS.Bundle opts, class Android.OS.CancellationSignal cancellationSignal) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("openTypedAssetFileDescriptor", "(Landroid/net/Uri;Ljava/lang/String;Landroid/os/Bundle;Landroid/os/CancellationSignal;)Landroid/content/res/AssetFileDescriptor;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.AssetFileDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="mimeType" Type="System.String" />
        <Parameter Name="opts" Type="Android.OS.Bundle" />
        <Parameter Name="cancellationSignal" Type="Android.OS.CancellationSignal" />
      </Parameters>
      <Docs>
        <param name="uri">The desired URI to open.</param>
        <param name="mimeType">The desired MIME type of the returned data.  This can
 be a pattern such as *&amp;#47;*, which will allow the content provider to
 select a type, though there is no way for you to determine what type
 it is returning.</param>
        <param name="opts">Additional provider-dependent options.</param>
        <param name="cancellationSignal">A signal to cancel the operation in progress,
         or null if none. If the operation is canceled, then
         <c><see cref="T:Android.OS.OperationCanceledException" /></c> will be thrown.</param>
        <summary>Open a raw file descriptor to access (potentially type transformed)
 data from a "content:" URI.</summary>
        <returns>To be added.</returns>
        <remarks />
        <exception cref="T:Java.IO.FileNotFoundException">Throws FileNotFoundException of no
 data of the desired type exists under the URI.
</exception>
      </Docs>
    </Member>
    <Member MemberName="OutgoingPersistedUriPermissions">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Content.UriPermission&gt; OutgoingPersistedUriPermissions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Content.UriPermission&gt; OutgoingPersistedUriPermissions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getOutgoingPersistedUriPermissions", "()Ljava/util/List;", "GetGetOutgoingPersistedUriPermissionsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.UriPermission&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return list of all persisted URI permission grants that are hosted by the
 calling app.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="PersistedUriPermissions">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Content.UriPermission&gt; PersistedUriPermissions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Content.UriPermission&gt; PersistedUriPermissions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPersistedUriPermissions", "()Ljava/util/List;", "GetGetPersistedUriPermissionsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.UriPermission&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return list of all URI permission grants that have been persisted by the
 calling app.</summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="M:Android.Content.ContentResolver.TakePersistableUriPermission(Android.Net.Uri, Android.Content.ActivityFlags)" />
        <altmember cref="M:Android.Content.ContentResolver.ReleasePersistableUriPermission(Android.Net.Uri, Android.Content.ActivityFlags)" />
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public Android.Database.ICursor Query (Android.Net.Uri uri, string[] projection, string selection, string[] selectionArgs, string sortOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Database.ICursor Query(class Android.Net.Uri uri, string[] projection, string selection, string[] selectionArgs, string sortOrder) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("query", "(Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.ICursor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="projection" Type="System.String[]" />
        <Parameter Name="selection" Type="System.String" />
        <Parameter Name="selectionArgs" Type="System.String[]" />
        <Parameter Name="sortOrder" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">The URI, using the content:// scheme, for the content to
         retrieve.</param>
        <param name="projection">A list of which columns to return. Passing null will
         return all columns, which is inefficient.</param>
        <param name="selection">A filter declaring which rows to return, formatted as an
         SQL WHERE clause (excluding the WHERE itself). Passing null will
         return all rows for the given URI.</param>
        <param name="selectionArgs">You may include ?s in selection, which will be
         replaced by the values from selectionArgs, in the order that they
         appear in the selection. The values will be bound as Strings.</param>
        <param name="sortOrder">How to order the rows, formatted as an SQL ORDER BY
         clause (excluding the ORDER BY itself). Passing null will use the
         default sort order, which may be unordered.</param>
        <summary>Query the given URI, returning a <c><see cref="T:Android.Database.ICursor" /></c> over the result set.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Database.ICursor" />
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public Android.Database.ICursor Query (Android.Net.Uri uri, string[] projection, string selection, string[] selectionArgs, string sortOrder, Android.OS.CancellationSignal cancellationSignal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Database.ICursor Query(class Android.Net.Uri uri, string[] projection, string selection, string[] selectionArgs, string sortOrder, class Android.OS.CancellationSignal cancellationSignal) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("query", "(Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Landroid/os/CancellationSignal;)Landroid/database/Cursor;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Database.ICursor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="projection" Type="System.String[]" />
        <Parameter Name="selection" Type="System.String" />
        <Parameter Name="selectionArgs" Type="System.String[]" />
        <Parameter Name="sortOrder" Type="System.String" />
        <Parameter Name="cancellationSignal" Type="Android.OS.CancellationSignal" />
      </Parameters>
      <Docs>
        <param name="uri">The URI, using the content:// scheme, for the content to
         retrieve.</param>
        <param name="projection">A list of which columns to return. Passing null will
         return all columns, which is inefficient.</param>
        <param name="selection">A filter declaring which rows to return, formatted as an
         SQL WHERE clause (excluding the WHERE itself). Passing null will
         return all rows for the given URI.</param>
        <param name="selectionArgs">You may include ?s in selection, which will be
         replaced by the values from selectionArgs, in the order that they
         appear in the selection. The values will be bound as Strings.</param>
        <param name="sortOrder">How to order the rows, formatted as an SQL ORDER BY
         clause (excluding the ORDER BY itself). Passing null will use the
         default sort order, which may be unordered.</param>
        <param name="cancellationSignal">A signal to cancel the operation in progress, or null if none.
 If the operation is canceled, then <c><see cref="T:Android.OS.OperationCanceledException" /></c> will be thrown
 when the query is executed.</param>
        <summary>Query the given URI, returning a <c><see cref="T:Android.Database.ICursor" /></c> over the result set
 with optional support for cancellation.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 16" />
        <altmember cref="T:Android.Database.ICursor" />
      </Docs>
    </Member>
    <Member MemberName="RegisterContentObserver">
      <MemberSignature Language="C#" Value="public void RegisterContentObserver (Android.Net.Uri uri, bool notifyForDescendents, Android.Database.ContentObserver observer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterContentObserver(class Android.Net.Uri uri, bool notifyForDescendents, class Android.Database.ContentObserver observer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerContentObserver", "(Landroid/net/Uri;ZLandroid/database/ContentObserver;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="notifyForDescendents" Type="System.Boolean" />
        <Parameter Name="observer" Type="Android.Database.ContentObserver" />
      </Parameters>
      <Docs>
        <param name="uri">The URI to watch for changes. This can be a specific row URI, or a base URI
 for a whole class of content.</param>
        <param name="notifyForDescendents">When false, the observer will be notified whenever a
 change occurs to the exact URI specified by <c>uri</c> or to one of the
 URI's ancestors in the path hierarchy.  When true, the observer will also be notified
 whenever a change occurs to the URI's descendants in the path hierarchy.</param>
        <param name="observer">The object that receives callbacks when changes occur.</param>
        <summary>Register an observer class that gets callbacks when data identified by a
 given content URI changes.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.ContentResolver.UnregisterContentObserver(Android.Database.ContentObserver)" />
      </Docs>
    </Member>
    <Member MemberName="ReleasePersistableUriPermission">
      <MemberSignature Language="C#" Value="public virtual void ReleasePersistableUriPermission (Android.Net.Uri uri, Android.Content.ActivityFlags modeFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleasePersistableUriPermission(class Android.Net.Uri uri, valuetype Android.Content.ActivityFlags modeFlags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("releasePersistableUriPermission", "(Landroid/net/Uri;I)V", "GetReleasePersistableUriPermission_Landroid_net_Uri_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="modeFlags" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <param name="modeFlags">To be added.</param>
        <summary>Relinquish a persisted URI permission grant.</summary>
        <remarks />
        <altmember cref="P:Android.Content.ContentResolver.PersistedUriPermissions" />
      </Docs>
    </Member>
    <Member MemberName="RemovePeriodicSync">
      <MemberSignature Language="C#" Value="public static void RemovePeriodicSync (Android.Accounts.Account account, string authority, Android.OS.Bundle extras);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePeriodicSync(class Android.Accounts.Account account, string authority, class Android.OS.Bundle extras) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removePeriodicSync", "(Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="account" Type="Android.Accounts.Account" />
        <Parameter Name="authority" Type="System.String" />
        <Parameter Name="extras" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="account">the account of the periodic sync to remove</param>
        <param name="authority">the provider of the periodic sync to remove</param>
        <param name="extras">the extras of the periodic sync to remove
</param>
        <summary>Remove a periodic sync.</summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="RemoveStatusChangeListener">
      <MemberSignature Language="C#" Value="public static void RemoveStatusChangeListener (Java.Lang.Object handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStatusChangeListener(class Java.Lang.Object handle) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeStatusChangeListener", "(Ljava/lang/Object;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="handle">the handle that was returned by <c><see cref="M:Android.Content.ContentResolver.AddStatusChangeListener(Android.Content.SyncObserverType, Android.Content.ISyncStatusObserver)" /></c></param>
        <summary>Remove a previously registered status change listener.</summary>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="RequestSync">
      <MemberSignature Language="C#" Value="public static void RequestSync (Android.Content.SyncRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RequestSync(class Android.Content.SyncRequest request) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requestSync", "(Landroid/content/SyncRequest;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Android.Content.SyncRequest" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <summary tool="true">Register a sync with the SyncManager.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="RequestSync">
      <MemberSignature Language="C#" Value="public static void RequestSync (Android.Accounts.Account account, string authority, Android.OS.Bundle extras);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RequestSync(class Android.Accounts.Account account, string authority, class Android.OS.Bundle extras) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requestSync", "(Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="account" Type="Android.Accounts.Account" />
        <Parameter Name="authority" Type="System.String" />
        <Parameter Name="extras" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="account">which account should be synced</param>
        <param name="authority">which authority should be synced</param>
        <param name="extras">any extras to pass to the SyncAdapter.
</param>
        <summary>Start an asynchronous sync operation.</summary>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="SchemeAndroidResource">
      <MemberSignature Language="C#" Value="public const string SchemeAndroidResource;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SchemeAndroidResource" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SCHEME_ANDROID_RESOURCE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SchemeContent">
      <MemberSignature Language="C#" Value="public const string SchemeContent;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SchemeContent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SCHEME_CONTENT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SchemeFile">
      <MemberSignature Language="C#" Value="public const string SchemeFile;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SchemeFile" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SCHEME_FILE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetIsSyncable">
      <MemberSignature Language="C#" Value="public static void SetIsSyncable (Android.Accounts.Account account, string authority, int syncable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsSyncable(class Android.Accounts.Account account, string authority, int32 syncable) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setIsSyncable", "(Landroid/accounts/Account;Ljava/lang/String;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="account" Type="Android.Accounts.Account" />
        <Parameter Name="authority" Type="System.String" />
        <Parameter Name="syncable" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="account">To be added.</param>
        <param name="authority">To be added.</param>
        <param name="syncable">&gt;0 denotes syncable, 0 means not syncable, &lt;0 means unknown
</param>
        <summary>Set whether this account/provider is syncable.</summary>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="SetSyncAutomatically">
      <MemberSignature Language="C#" Value="public static void SetSyncAutomatically (Android.Accounts.Account account, string authority, bool sync);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetSyncAutomatically(class Android.Accounts.Account account, string authority, bool sync) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSyncAutomatically", "(Landroid/accounts/Account;Ljava/lang/String;Z)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="account" Type="Android.Accounts.Account" />
        <Parameter Name="authority" Type="System.String" />
        <Parameter Name="sync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="account">the account whose setting we are querying</param>
        <param name="authority">the provider whose behavior is being controlled</param>
        <param name="sync">true if the provider should be synced when tickles are received for it
</param>
        <summary>Set whether or not the provider is synced when it receives a network tickle.</summary>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="StartSync">
      <MemberSignature Language="C#" Value="public virtual void StartSync (Android.Net.Uri uri, Android.OS.Bundle extras);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartSync(class Android.Net.Uri uri, class Android.OS.Bundle extras) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startSync", "(Landroid/net/Uri;Landroid/os/Bundle;)V", "GetStartSync_Landroid_net_Uri_Landroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="extras" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="uri">the uri of the provider to sync or null to sync all providers.</param>
        <param name="extras">any extras to pass to the SyncAdapter.</param>
        <summary>Start an asynchronous sync operation.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SyncExtrasAccount">
      <MemberSignature Language="C#" Value="public const string SyncExtrasAccount;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SyncExtrasAccount" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYNC_EXTRAS_ACCOUNT")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SyncExtrasDiscardLocalDeletions">
      <MemberSignature Language="C#" Value="public const string SyncExtrasDiscardLocalDeletions;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SyncExtrasDiscardLocalDeletions" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYNC_EXTRAS_DISCARD_LOCAL_DELETIONS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates that the sync adapter should not proceed with the delete operations,
 if it determines that there are too many.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SyncExtrasDoNotRetry">
      <MemberSignature Language="C#" Value="public const string SyncExtrasDoNotRetry;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SyncExtrasDoNotRetry" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYNC_EXTRAS_DO_NOT_RETRY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If this extra is set to true then the request will not be retried if it fails.</summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SyncExtrasExpedited">
      <MemberSignature Language="C#" Value="public const string SyncExtrasExpedited;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SyncExtrasExpedited" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYNC_EXTRAS_EXPEDITED")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If this extra is set to true, the sync request will be scheduled
 at the front of the sync request queue and without any delay
</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SyncExtrasForce">
      <MemberSignature Language="C#" Value="public const string SyncExtrasForce;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SyncExtrasForce" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYNC_EXTRAS_FORCE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SyncExtrasIgnoreBackoff">
      <MemberSignature Language="C#" Value="public const string SyncExtrasIgnoreBackoff;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SyncExtrasIgnoreBackoff" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYNC_EXTRAS_IGNORE_BACKOFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If this extra is set to true then any backoffs for the initial attempt (e.g. due to retries)
 are ignored by the sync scheduler.</summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SyncExtrasIgnoreSettings">
      <MemberSignature Language="C#" Value="public const string SyncExtrasIgnoreSettings;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SyncExtrasIgnoreSettings" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYNC_EXTRAS_IGNORE_SETTINGS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If this extra is set to true then the sync settings (like getSyncAutomatically())
 are ignored by the sync scheduler.</summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SyncExtrasInitialize">
      <MemberSignature Language="C#" Value="public const string SyncExtrasInitialize;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SyncExtrasInitialize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYNC_EXTRAS_INITIALIZE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Set by the SyncManager to request that the SyncAdapter initialize itself for
 the given account/authority pair.</summary>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="SyncExtrasManual">
      <MemberSignature Language="C#" Value="public const string SyncExtrasManual;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SyncExtrasManual" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYNC_EXTRAS_MANUAL")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Setting this extra is the equivalent of setting both <c><see cref="F:Android.Content.ContentResolver.SyncExtrasIgnoreSettings" /></c>
 and <c><see cref="F:Android.Content.ContentResolver.SyncExtrasIgnoreBackoff" /></c></summary>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="SyncExtrasOverrideTooManyDeletions">
      <MemberSignature Language="C#" Value="public const string SyncExtrasOverrideTooManyDeletions;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SyncExtrasOverrideTooManyDeletions" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYNC_EXTRAS_OVERRIDE_TOO_MANY_DELETIONS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates that the sync adapter should proceed with the delete operations,
 even if it determines that there are too many.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SyncExtrasUpload">
      <MemberSignature Language="C#" Value="public const string SyncExtrasUpload;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SyncExtrasUpload" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYNC_EXTRAS_UPLOAD")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates that this sync is intended to only upload local changes to the server.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SyncObserverTypeActive">
      <MemberSignature Language="C#" Value="public const Android.Content.SyncObserverType SyncObserverTypeActive = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.SyncObserverType SyncObserverTypeActive = (4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYNC_OBSERVER_TYPE_ACTIVE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Content.SyncObserverType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.SyncObserverType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
        </summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SyncObserverTypePending">
      <MemberSignature Language="C#" Value="public const Android.Content.SyncObserverType SyncObserverTypePending = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.SyncObserverType SyncObserverTypePending = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYNC_OBSERVER_TYPE_PENDING")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Content.SyncObserverType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.SyncObserverType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
        </summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SyncObserverTypeSettings">
      <MemberSignature Language="C#" Value="public const Android.Content.SyncObserverType SyncObserverTypeSettings = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Content.SyncObserverType SyncObserverTypeSettings = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SYNC_OBSERVER_TYPE_SETTINGS")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Content.SyncObserverType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.SyncObserverType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
        </summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="TakePersistableUriPermission">
      <MemberSignature Language="C#" Value="public virtual void TakePersistableUriPermission (Android.Net.Uri uri, Android.Content.ActivityFlags modeFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TakePersistableUriPermission(class Android.Net.Uri uri, valuetype Android.Content.ActivityFlags modeFlags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("takePersistableUriPermission", "(Landroid/net/Uri;I)V", "GetTakePersistableUriPermission_Landroid_net_Uri_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="modeFlags" Type="Android.Content.ActivityFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <param name="modeFlags">To be added.</param>
        <summary>Take a persistable URI permission grant that has been offered.</summary>
        <remarks />
        <altmember cref="P:Android.Content.ContentResolver.PersistedUriPermissions" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Uncanonicalize">
      <MemberSignature Language="C#" Value="public Android.Net.Uri Uncanonicalize (Android.Net.Uri url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Net.Uri Uncanonicalize(class Android.Net.Uri url) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("uncanonicalize", "(Landroid/net/Uri;)Landroid/net/Uri;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="url">The canonical <c><see cref="T:Android.Net.Uri" /></c> that is to be convered back to its
 non-canonical form.</param>
        <summary>Given a canonical Uri previously generated by <c><see cref="M:Android.Content.ContentResolver.Canonicalize(Android.Net.Uri)" /></c>, convert
 it to its local non-canonical form.</summary>
        <returns>To be added.</returns>
        <remarks />
        <altmember cref="M:Android.Content.ContentResolver.Canonicalize(Android.Net.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterContentObserver">
      <MemberSignature Language="C#" Value="public void UnregisterContentObserver (Android.Database.ContentObserver observer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterContentObserver(class Android.Database.ContentObserver observer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unregisterContentObserver", "(Landroid/database/ContentObserver;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="Android.Database.ContentObserver" />
      </Parameters>
      <Docs>
        <param name="observer">The previously registered observer that is no longer needed.</param>
        <summary>Unregisters a change observer.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.ContentResolver.RegisterContentObserver(Android.Net.Uri, System.Boolean, System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (Android.Net.Uri uri, Android.Content.ContentValues values, string where, string[] selectionArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class Android.Net.Uri uri, class Android.Content.ContentValues values, string where, string[] selectionArgs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("update", "(Landroid/net/Uri;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="values" Type="Android.Content.ContentValues" />
        <Parameter Name="where" Type="System.String" />
        <Parameter Name="selectionArgs" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="uri">The URI to modify.</param>
        <param name="values">The new field values. The key is the column name for the field.
                     A null value will remove an existing field value.</param>
        <param name="where">A filter to apply to rows before updating, formatted as an SQL WHERE clause
                    (excluding the WHERE itself).</param>
        <param name="selectionArgs">To be added.</param>
        <summary>Update row(s) in a content URI.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if uri or values are null
</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateSyncExtrasBundle">
      <MemberSignature Language="C#" Value="public static void ValidateSyncExtrasBundle (Android.OS.Bundle extras);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ValidateSyncExtrasBundle(class Android.OS.Bundle extras) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("validateSyncExtrasBundle", "(Landroid/os/Bundle;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extras" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="extras">the Bundle to check
</param>
        <summary tool="true">Check that only values of the following types are in the Bundle:
 <list type="bullet"><item><term>Integer</term></item><item><term>Long</term></item><item><term>Boolean</term></item><item><term>Float</term></item><item><term>Double</term></item><item><term>String</term></item><item><term>Account</term></item><item><term>null</term></item></list></summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
