<Type Name="ClipboardManager" FullName="Android.Content.ClipboardManager">
  <TypeSignature Language="C#" Value="public class ClipboardManager : Android.Text.ClipboardManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClipboardManager extends Android.Text.ClipboardManager" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Text.ClipboardManager</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/content/ClipboardManager", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface to the clipboard service, for placing and retrieving text in
 the global clipboard.</summary>
    <remarks><para tool="javadoc-to-mdoc">Interface to the clipboard service, for placing and retrieving text in
 the global clipboard.

 </para><para tool="javadoc-to-mdoc">
 You do not instantiate this class directly; instead, retrieve it through
 <c><see cref="M:Android.Content.Context.GetSystemService(System.String)" /></c>.

 </para><para tool="javadoc-to-mdoc">
 The ClipboardManager API itself is very simple: it consists of methods
 to atomically get and set the current primary clipboard data.  That data
 is expressed as a <c><see cref="T:Android.Content.ClipData" /></c> object, which defines the protocol
 for data exchange between applications.

 <format type="text/html"><h3>Developer Guides</h3></format></para><para tool="javadoc-to-mdoc">For more information about using the clipboard framework, read the
 <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/clipboard/copy-paste.html">Copy and Paste</a></format>
 developer guide.</para><format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="M:Android.Content.Context.GetSystemService(System.String)" /></c></term></item></list><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/content/ClipboardManager.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 11" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ClipboardManager (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPrimaryClipChangedListener">
      <MemberSignature Language="C#" Value="public virtual void AddPrimaryClipChangedListener (Android.Content.ClipboardManager.IOnPrimaryClipChangedListener what);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddPrimaryClipChangedListener(class Android.Content.ClipboardManager/IOnPrimaryClipChangedListener what) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addPrimaryClipChangedListener", "(Landroid/content/ClipboardManager$OnPrimaryClipChangedListener;)V", "GetAddPrimaryClipChangedListener_Landroid_content_ClipboardManager_OnPrimaryClipChangedListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="what" Type="Android.Content.ClipboardManager+IOnPrimaryClipChangedListener" />
      </Parameters>
      <Docs>
        <param name="what">To be added.</param>
        <summary></summary>
        <remarks><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/content/ClipboardManager.html#addPrimaryClipChangedListener(android.content.ClipboardManager.OnPrimaryClipChangedListener)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="HasPrimaryClip">
      <MemberSignature Language="C#" Value="public virtual bool HasPrimaryClip { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPrimaryClip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("hasPrimaryClip", "()Z", "GetHasPrimaryClipHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if there is currently a primary clip on the clipboard.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns true if there is currently a primary clip on the clipboard.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/content/ClipboardManager.html#hasPrimaryClip()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="HasText">
      <MemberSignature Language="C#" Value="public override bool HasText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("hasText", "()Z", "GetHasTextHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if the clipboard contains text; false otherwise.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns true if the clipboard contains text; false otherwise.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/content/ClipboardManager.html#hasText()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="PrimaryClip">
      <MemberSignature Language="C#" Value="public virtual Android.Content.ClipData PrimaryClip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.ClipData PrimaryClip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPrimaryClip", "()Landroid/content/ClipData;", "GetGetPrimaryClipHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setPrimaryClip", "(Landroid/content/ClipData;)V", "GetSetPrimaryClip_Landroid_content_ClipData_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ClipData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current primary clip on the clipboard.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/android/content/ClipboardManager.html#getPrimaryClip()" target="_blank">[Android Documentation]</a><br /></format>Returns the current primary clip on the clipboard.
</para><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/android/content/ClipboardManager.html#setPrimaryClip(android.content.ClipData)" target="_blank">[Android Documentation]</a><br /></format>Sets the current primary clip on the clipboard.  This is the clip that
 is involved in normal cut and paste operations.</para></remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="PrimaryClipChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PrimaryClipChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PrimaryClipChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryClipDescription">
      <MemberSignature Language="C#" Value="public virtual Android.Content.ClipDescription PrimaryClipDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.ClipDescription PrimaryClipDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPrimaryClipDescription", "()Landroid/content/ClipDescription;", "GetGetPrimaryClipDescriptionHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ClipDescription</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a description of the current primary clip on the clipboard
 but not a copy of its data.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns a description of the current primary clip on the clipboard
 but not a copy of its data.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/content/ClipboardManager.html#getPrimaryClipDescription()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="RemovePrimaryClipChangedListener">
      <MemberSignature Language="C#" Value="public virtual void RemovePrimaryClipChangedListener (Android.Content.ClipboardManager.IOnPrimaryClipChangedListener what);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemovePrimaryClipChangedListener(class Android.Content.ClipboardManager/IOnPrimaryClipChangedListener what) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removePrimaryClipChangedListener", "(Landroid/content/ClipboardManager$OnPrimaryClipChangedListener;)V", "GetRemovePrimaryClipChangedListener_Landroid_content_ClipboardManager_OnPrimaryClipChangedListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="what" Type="Android.Content.ClipboardManager+IOnPrimaryClipChangedListener" />
      </Parameters>
      <Docs>
        <param name="what">To be added.</param>
        <summary></summary>
        <remarks><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/content/ClipboardManager.html#removePrimaryClipChangedListener(android.content.ClipboardManager.OnPrimaryClipChangedListener)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="TextFormatted">
      <MemberSignature Language="C#" Value="public override Java.Lang.ICharSequence TextFormatted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ICharSequence TextFormatted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getText", "()Ljava/lang/CharSequence;", "GetGetTextHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setText", "(Ljava/lang/CharSequence;)V", "GetSetText_Ljava_lang_CharSequence_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the text on the clipboard.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/android/content/ClipboardManager.html#getText()" target="_blank">[Android Documentation]</a><br /></format>Returns the text on the clipboard.  It will eventually be possible
 to store types other than text too, in which case this will return
 null if the type cannot be coerced to text.
</para><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/android/content/ClipboardManager.html#setText(java.lang.CharSequence)" target="_blank">[Android Documentation]</a><br /></format>Sets the contents of the clipboard to the specified text.
</para></remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
