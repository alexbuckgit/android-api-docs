<Type Name="SipManager" FullName="Android.Net.Sip.SipManager">
  <TypeSignature Language="C#" Value="public class SipManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SipManager extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/net/sip/SipManager", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="9">
    <summary>Provides APIs for SIP tasks, such as initiating SIP connections, and provides access to related
 SIP services.</summary>
    <remarks />
    <since version="Added in API level 9" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SipManager (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close (string localProfileUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close(string localProfileUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("close", "(Ljava/lang/String;)V", "GetClose_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localProfileUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localProfileUri">the URI of the profile to close</param>
        <summary>Closes the specified profile to not make/receive calls.</summary>
        <remarks />
        <since version="Added in API level 9" />
        <exception cref="T:Android.Net.Sip.SipException">if calling the SIP service results in an error
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSipSession">
      <MemberSignature Language="C#" Value="public virtual Android.Net.Sip.SipSession CreateSipSession (Android.Net.Sip.SipProfile localProfile, Android.Net.Sip.SipSession.Listener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Net.Sip.SipSession CreateSipSession(class Android.Net.Sip.SipProfile localProfile, class Android.Net.Sip.SipSession/Listener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createSipSession", "(Landroid/net/sip/SipProfile;Landroid/net/sip/SipSession$Listener;)Landroid/net/sip/SipSession;", "GetCreateSipSession_Landroid_net_sip_SipProfile_Landroid_net_sip_SipSession_Listener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Sip.SipSession</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localProfile" Type="Android.Net.Sip.SipProfile" />
        <Parameter Name="listener" Type="Android.Net.Sip.SipSession+Listener" />
      </Parameters>
      <Docs>
        <param name="localProfile">the SIP profile the session is associated with</param>
        <param name="listener">to listen to SIP session events
</param>
        <summary>Creates a <c><see cref="T:Android.Net.Sip.SipSession" /></c> with the specified profile.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 9" />
        <exception cref="T:Android.Net.Sip.SipException" />
      </Docs>
    </Member>
    <Member MemberName="ExtraCallId">
      <MemberSignature Language="C#" Value="public const string ExtraCallId;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraCallId" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_CALL_ID")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Key to retrieve the call ID from an incoming call intent.</summary>
        <remarks />
        <since version="Added in API level 9" />
        <altmember cref="M:Android.Net.Sip.SipManager.Open(Android.Net.Sip.SipProfile, Android.App.PendingIntent, Android.App.PendingIntent)" />
      </Docs>
    </Member>
    <Member MemberName="ExtraOfferSd">
      <MemberSignature Language="C#" Value="public const string ExtraOfferSd;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraOfferSd" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_OFFER_SD")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Key to retrieve the offered session description from an incoming call
 intent.</summary>
        <remarks />
        <since version="Added in API level 9" />
        <altmember cref="M:Android.Net.Sip.SipManager.Open(Android.Net.Sip.SipProfile, Android.App.PendingIntent, Android.App.PendingIntent)" />
      </Docs>
    </Member>
    <Member MemberName="GetCallId">
      <MemberSignature Language="C#" Value="public static string GetCallId (Android.Content.Intent incomingCallIntent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetCallId(class Android.Content.Intent incomingCallIntent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getCallId", "(Landroid/content/Intent;)Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="incomingCallIntent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="incomingCallIntent">the incoming call broadcast intent</param>
        <summary>Gets the call ID from the specified incoming call broadcast intent.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="GetOfferSessionDescription">
      <MemberSignature Language="C#" Value="public static string GetOfferSessionDescription (Android.Content.Intent incomingCallIntent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetOfferSessionDescription(class Android.Content.Intent incomingCallIntent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getOfferSessionDescription", "(Landroid/content/Intent;)Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="incomingCallIntent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="incomingCallIntent">the incoming call broadcast intent</param>
        <summary>Gets the offer session description from the specified incoming call
 broadcast intent.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="GetSessionFor">
      <MemberSignature Language="C#" Value="public virtual Android.Net.Sip.SipSession GetSessionFor (Android.Content.Intent incomingCallIntent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Net.Sip.SipSession GetSessionFor(class Android.Content.Intent incomingCallIntent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getSessionFor", "(Landroid/content/Intent;)Landroid/net/sip/SipSession;", "GetGetSessionFor_Landroid_content_Intent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Sip.SipSession</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="incomingCallIntent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="incomingCallIntent">the incoming call broadcast intent</param>
        <summary>Gets the <c><see cref="T:Android.Net.Sip.SipSession" /></c> that handles the incoming call.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 9" />
        <exception cref="T:Android.Net.Sip.SipException" />
      </Docs>
    </Member>
    <Member MemberName="IncomingCallResultCode">
      <MemberSignature Language="C#" Value="public const int IncomingCallResultCode = 101;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 IncomingCallResultCode = (101)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("INCOMING_CALL_RESULT_CODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>101</MemberValue>
      <Docs>
        <summary>The result code to be sent back with the incoming call
 <c><see cref="T:Android.App.PendingIntent" /></c>.</summary>
        <remarks />
        <since version="Added in API level 9" />
        <altmember cref="M:Android.Net.Sip.SipManager.Open(Android.Net.Sip.SipProfile, Android.App.PendingIntent, Android.App.PendingIntent)" />
      </Docs>
    </Member>
    <Member MemberName="IsApiSupported">
      <MemberSignature Language="C#" Value="public static bool IsApiSupported (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsApiSupported(class Android.Content.Context context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isApiSupported", "(Landroid/content/Context;)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>Returns true if the SIP API is supported by the system.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="IsIncomingCallIntent">
      <MemberSignature Language="C#" Value="public static bool IsIncomingCallIntent (Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsIncomingCallIntent(class Android.Content.Intent intent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isIncomingCallIntent", "(Landroid/content/Intent;)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="intent">the intent in question</param>
        <summary>Checks if the intent is an incoming call broadcast intent.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="IsOpened">
      <MemberSignature Language="C#" Value="public virtual bool IsOpened (string localProfileUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsOpened(string localProfileUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isOpened", "(Ljava/lang/String;)Z", "GetIsOpened_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localProfileUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localProfileUri">the URI of the profile in question</param>
        <summary>Checks if the specified profile is opened in the SIP service for
 making and/or receiving calls.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 9" />
        <exception cref="T:Android.Net.Sip.SipException">if calling the SIP service results in an error
</exception>
      </Docs>
    </Member>
    <Member MemberName="IsRegistered">
      <MemberSignature Language="C#" Value="public virtual bool IsRegistered (string localProfileUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsRegistered(string localProfileUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isRegistered", "(Ljava/lang/String;)Z", "GetIsRegistered_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localProfileUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localProfileUri">the URI of the profile in question</param>
        <summary>Checks if the SIP service has successfully registered the profile to the
 SIP provider (specified in the profile) for receiving calls.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 9" />
        <exception cref="T:Android.Net.Sip.SipException">if calling the SIP service results in an error
</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSipWifiOnly">
      <MemberSignature Language="C#" Value="public static bool IsSipWifiOnly (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSipWifiOnly(class Android.Content.Context context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isSipWifiOnly", "(Landroid/content/Context;)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>Returns true if SIP is only available on WIFI.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="IsVoipSupported">
      <MemberSignature Language="C#" Value="public static bool IsVoipSupported (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsVoipSupported(class Android.Content.Context context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isVoipSupported", "(Landroid/content/Context;)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>Returns true if the system supports SIP-based VOIP API.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="MakeAudioCall">
      <MemberSignature Language="C#" Value="public virtual Android.Net.Sip.SipAudioCall MakeAudioCall (Android.Net.Sip.SipProfile localProfile, Android.Net.Sip.SipProfile peerProfile, Android.Net.Sip.SipAudioCall.Listener listener, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Net.Sip.SipAudioCall MakeAudioCall(class Android.Net.Sip.SipProfile localProfile, class Android.Net.Sip.SipProfile peerProfile, class Android.Net.Sip.SipAudioCall/Listener listener, int32 timeout) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("makeAudioCall", "(Landroid/net/sip/SipProfile;Landroid/net/sip/SipProfile;Landroid/net/sip/SipAudioCall$Listener;I)Landroid/net/sip/SipAudioCall;", "GetMakeAudioCall_Landroid_net_sip_SipProfile_Landroid_net_sip_SipProfile_Landroid_net_sip_SipAudioCall_Listener_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Sip.SipAudioCall</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localProfile" Type="Android.Net.Sip.SipProfile" />
        <Parameter Name="peerProfile" Type="Android.Net.Sip.SipProfile" />
        <Parameter Name="listener" Type="Android.Net.Sip.SipAudioCall+Listener" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="localProfile">the SIP profile to make the call from</param>
        <param name="peerProfile">the SIP profile to make the call to</param>
        <param name="listener">to listen to the call events from <c><see cref="T:Android.Net.Sip.SipAudioCall" /></c>;
      can be null</param>
        <param name="timeout">the timeout value in seconds. Default value (defined by
        SIP protocol) is used if <c>timeout</c> is zero or negative.</param>
        <summary>Creates a <c><see cref="T:Android.Net.Sip.SipAudioCall" /></c> to make a call.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 9" />
        <exception cref="T:Android.Net.Sip.SipException">if calling the SIP service results in an error or
      VOIP API is not supported by the device</exception>
        <altmember cref="M:Android.Net.Sip.SipManager.IsVoipSupported(Android.Content.Context)" />
      </Docs>
    </Member>
    <Member MemberName="MakeAudioCall">
      <MemberSignature Language="C#" Value="public virtual Android.Net.Sip.SipAudioCall MakeAudioCall (string localProfileUri, string peerProfileUri, Android.Net.Sip.SipAudioCall.Listener listener, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Net.Sip.SipAudioCall MakeAudioCall(string localProfileUri, string peerProfileUri, class Android.Net.Sip.SipAudioCall/Listener listener, int32 timeout) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("makeAudioCall", "(Ljava/lang/String;Ljava/lang/String;Landroid/net/sip/SipAudioCall$Listener;I)Landroid/net/sip/SipAudioCall;", "GetMakeAudioCall_Ljava_lang_String_Ljava_lang_String_Landroid_net_sip_SipAudioCall_Listener_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Sip.SipAudioCall</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localProfileUri" Type="System.String" />
        <Parameter Name="peerProfileUri" Type="System.String" />
        <Parameter Name="listener" Type="Android.Net.Sip.SipAudioCall+Listener" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="localProfileUri">URI of the SIP profile to make the call from</param>
        <param name="peerProfileUri">URI of the SIP profile to make the call to</param>
        <param name="listener">to listen to the call events from <c><see cref="T:Android.Net.Sip.SipAudioCall" /></c>;
      can be null</param>
        <param name="timeout">the timeout value in seconds. Default value (defined by
        SIP protocol) is used if <c>timeout</c> is zero or negative.</param>
        <summary>Creates a <c><see cref="T:Android.Net.Sip.SipAudioCall" /></c> to make an audio call.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 9" />
        <exception cref="T:Android.Net.Sip.SipException">if calling the SIP service results in an error or
      VOIP API is not supported by the device</exception>
        <altmember cref="M:Android.Net.Sip.SipManager.IsVoipSupported(Android.Content.Context)" />
      </Docs>
    </Member>
    <Member MemberName="NewInstance">
      <MemberSignature Language="C#" Value="public static Android.Net.Sip.SipManager NewInstance (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Net.Sip.SipManager NewInstance(class Android.Content.Context context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newInstance", "(Landroid/content/Context;)Landroid/net/sip/SipManager;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Sip.SipManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">application context for creating the manager object</param>
        <summary>Creates a manager instance.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public virtual void Open (Android.Net.Sip.SipProfile localProfile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Open(class Android.Net.Sip.SipProfile localProfile) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("open", "(Landroid/net/sip/SipProfile;)V", "GetOpen_Landroid_net_sip_SipProfile_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localProfile" Type="Android.Net.Sip.SipProfile" />
      </Parameters>
      <Docs>
        <param name="localProfile">the SIP profile to make calls from</param>
        <summary tool="true">Opens the profile for making generic SIP calls.</summary>
        <remarks />
        <since version="Added in API level 9" />
        <exception cref="T:Android.Net.Sip.SipException">if the profile contains incorrect settings or
      calling the SIP service results in an error
</exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public virtual void Open (Android.Net.Sip.SipProfile localProfile, Android.App.PendingIntent incomingCallPendingIntent, Android.Net.Sip.ISipRegistrationListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Open(class Android.Net.Sip.SipProfile localProfile, class Android.App.PendingIntent incomingCallPendingIntent, class Android.Net.Sip.ISipRegistrationListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("open", "(Landroid/net/sip/SipProfile;Landroid/app/PendingIntent;Landroid/net/sip/SipRegistrationListener;)V", "GetOpen_Landroid_net_sip_SipProfile_Landroid_app_PendingIntent_Landroid_net_sip_SipRegistrationListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localProfile" Type="Android.Net.Sip.SipProfile" />
        <Parameter Name="incomingCallPendingIntent" Type="Android.App.PendingIntent" />
        <Parameter Name="listener" Type="Android.Net.Sip.ISipRegistrationListener" />
      </Parameters>
      <Docs>
        <param name="localProfile">the SIP profile to receive incoming calls for</param>
        <param name="incomingCallPendingIntent">When an incoming call is received, the
      SIP service will call
      <c><see cref="M:Android.App.PendingIntent.Send(Android.Content.Context, Android.App.Result, Android.App.Result)" /></c> to send back the
      intent to the caller with <c><see cref="F:Android.Net.Sip.SipManager.IncomingCallResultCode" /></c> as the
      result code and the intent to fill in the call ID and session
      description information. It cannot be null.</param>
        <param name="listener">to listen to registration events; can be null</param>
        <summary>Opens the profile for making calls and/or receiving generic SIP calls.</summary>
        <remarks />
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>incomingCallPendingIntent</c> is null</exception>
        <exception cref="T:Android.Net.Sip.SipException">if the profile contains incorrect settings or
      calling the SIP service results in an error</exception>
        <altmember cref="M:Android.Net.Sip.SipManager.GetCallId(Android.Content.Intent)" />
        <altmember cref="M:Android.Net.Sip.SipManager.GetOfferSessionDescription(Android.Content.Intent)" />
        <altmember cref="M:Android.Net.Sip.SipManager.TakeAudioCall(Android.Content.Intent, .Listener)" />
        <altmember cref="M:Android.Net.Sip.SipManager.IsIncomingCallIntent(Android.Content.Intent)" />
        <altmember cref="M:Android.Net.Sip.SipManager.GetCallId(Android.Content.Intent)" />
        <altmember cref="M:Android.Net.Sip.SipManager.GetOfferSessionDescription(Android.Content.Intent)" />
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public virtual void Register (Android.Net.Sip.SipProfile localProfile, int expiryTime, Android.Net.Sip.ISipRegistrationListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Register(class Android.Net.Sip.SipProfile localProfile, int32 expiryTime, class Android.Net.Sip.ISipRegistrationListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("register", "(Landroid/net/sip/SipProfile;ILandroid/net/sip/SipRegistrationListener;)V", "GetRegister_Landroid_net_sip_SipProfile_ILandroid_net_sip_SipRegistrationListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localProfile" Type="Android.Net.Sip.SipProfile" />
        <Parameter Name="expiryTime" Type="System.Int32" />
        <Parameter Name="listener" Type="Android.Net.Sip.ISipRegistrationListener" />
      </Parameters>
      <Docs>
        <param name="localProfile">the SIP profile to register with</param>
        <param name="expiryTime">registration expiration time (in seconds)</param>
        <param name="listener">to listen to the registration events</param>
        <summary>Manually registers the profile to the corresponding SIP provider for
 receiving calls.</summary>
        <remarks />
        <since version="Added in API level 9" />
        <exception cref="T:Android.Net.Sip.SipException">if calling the SIP service results in an error
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetRegistrationListener">
      <MemberSignature Language="C#" Value="public virtual void SetRegistrationListener (string localProfileUri, Android.Net.Sip.ISipRegistrationListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRegistrationListener(string localProfileUri, class Android.Net.Sip.ISipRegistrationListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setRegistrationListener", "(Ljava/lang/String;Landroid/net/sip/SipRegistrationListener;)V", "GetSetRegistrationListener_Ljava_lang_String_Landroid_net_sip_SipRegistrationListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localProfileUri" Type="System.String" />
        <Parameter Name="listener" Type="Android.Net.Sip.ISipRegistrationListener" />
      </Parameters>
      <Docs>
        <param name="localProfileUri">the URI of the profile</param>
        <param name="listener">to listen to registration events; can be null</param>
        <summary>Sets the listener to listen to registration events.</summary>
        <remarks />
        <since version="Added in API level 9" />
        <exception cref="T:Android.Net.Sip.SipException">if calling the SIP service results in an error
</exception>
      </Docs>
    </Member>
    <Member MemberName="TakeAudioCall">
      <MemberSignature Language="C#" Value="public virtual Android.Net.Sip.SipAudioCall TakeAudioCall (Android.Content.Intent incomingCallIntent, Android.Net.Sip.SipAudioCall.Listener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Net.Sip.SipAudioCall TakeAudioCall(class Android.Content.Intent incomingCallIntent, class Android.Net.Sip.SipAudioCall/Listener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("takeAudioCall", "(Landroid/content/Intent;Landroid/net/sip/SipAudioCall$Listener;)Landroid/net/sip/SipAudioCall;", "GetTakeAudioCall_Landroid_content_Intent_Landroid_net_sip_SipAudioCall_Listener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Sip.SipAudioCall</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="incomingCallIntent" Type="Android.Content.Intent" />
        <Parameter Name="listener" Type="Android.Net.Sip.SipAudioCall+Listener" />
      </Parameters>
      <Docs>
        <param name="incomingCallIntent">the incoming call broadcast intent</param>
        <param name="listener">to listen to the call events from <c><see cref="T:Android.Net.Sip.SipAudioCall" /></c>;
      can be null</param>
        <summary>Creates a <c><see cref="T:Android.Net.Sip.SipAudioCall" /></c> to take an incoming call.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 9" />
        <exception cref="T:Android.Net.Sip.SipException">if calling the SIP service results in an error
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public virtual void Unregister (Android.Net.Sip.SipProfile localProfile, Android.Net.Sip.ISipRegistrationListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unregister(class Android.Net.Sip.SipProfile localProfile, class Android.Net.Sip.ISipRegistrationListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unregister", "(Landroid/net/sip/SipProfile;Landroid/net/sip/SipRegistrationListener;)V", "GetUnregister_Landroid_net_sip_SipProfile_Landroid_net_sip_SipRegistrationListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localProfile" Type="Android.Net.Sip.SipProfile" />
        <Parameter Name="listener" Type="Android.Net.Sip.ISipRegistrationListener" />
      </Parameters>
      <Docs>
        <param name="localProfile">the SIP profile to register with</param>
        <param name="listener">to listen to the registration events</param>
        <summary>Manually unregisters the profile from the corresponding SIP provider for
 stop receiving further calls.</summary>
        <remarks />
        <since version="Added in API level 9" />
        <exception cref="T:Android.Net.Sip.SipException">if calling the SIP service results in an error
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
