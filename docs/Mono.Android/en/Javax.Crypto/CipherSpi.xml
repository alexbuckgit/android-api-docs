<Type Name="CipherSpi" FullName="Javax.Crypto.CipherSpi">
  <TypeSignature Language="C#" Value="public abstract class CipherSpi : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CipherSpi extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Javax.Crypto.CipherSpi" />
  <TypeSignature Language="F#" Value="type CipherSpi = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("javax/crypto/CipherSpi", ApiSince=1, DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This class defines the <format type="text/html"><i>Service Provider Interface</i></format> (<format type="text/html"><b>SPI</b></format>) for
 cryptographic ciphers.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/javax/crypto/CipherSpi" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CipherSpi ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Creates a new <c>CipherSpi</c> instance.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CipherSpi (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Javax.Crypto.CipherSpi : nativeint * Android.Runtime.JniHandleOwnership -&gt; Javax.Crypto.CipherSpi" Usage="new Javax.Crypto.CipherSpi (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineDoFinal">
      <MemberSignature Language="C#" Value="protected virtual int EngineDoFinal (Java.Nio.ByteBuffer input, Java.Nio.ByteBuffer output);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 EngineDoFinal(class Java.Nio.ByteBuffer input, class Java.Nio.ByteBuffer output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineDoFinal(Java.Nio.ByteBuffer,Java.Nio.ByteBuffer)" />
      <MemberSignature Language="F#" Value="abstract member EngineDoFinal : Java.Nio.ByteBuffer * Java.Nio.ByteBuffer -&gt; int&#xA;override this.EngineDoFinal : Java.Nio.ByteBuffer * Java.Nio.ByteBuffer -&gt; int" Usage="cipherSpi.EngineDoFinal (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineDoFinal", "(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I", "GetEngineDoFinal_Ljava_nio_ByteBuffer_Ljava_nio_ByteBuffer_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="output" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="input">the input buffer.</param>
        <param name="output">the output buffer.</param>
        <summary>Finishes a multi-part transformation (encryption or decryption).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.ShortBufferException">if the size of the <c>output</c> buffer is too small.</exception>
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the size of the resulting bytes is not a multiple of the
             cipher block size.</exception>
        <exception cref="T:Javax.Crypto.BadPaddingException">if the padding of the data does not match the padding scheme.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the input buffer and the output buffer are the same
             object.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineDoFinal">
      <MemberSignature Language="C#" Value="protected abstract byte[] EngineDoFinal (byte[] input, int inputOffset, int inputLen);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] EngineDoFinal(unsigned int8[] input, int32 inputOffset, int32 inputLen) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineDoFinal(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member EngineDoFinal : byte[] * int * int -&gt; byte[]" Usage="cipherSpi.EngineDoFinal (input, inputOffset, inputLen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineDoFinal", "([BII)[B", "GetEngineDoFinal_arrayBIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputLen" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">the input buffer.</param>
        <param name="inputOffset">the offset in the input buffer.</param>
        <param name="inputLen">the length of the input.</param>
        <summary>Finishes a multi-part transformation (encryption or decryption).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the size of the resulting bytes is not a multiple of the
             cipher block size.</exception>
        <exception cref="T:Javax.Crypto.BadPaddingException">if the padding of the data does not match the padding scheme.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineDoFinal">
      <MemberSignature Language="C#" Value="protected abstract int EngineDoFinal (byte[] input, int inputOffset, int inputLen, byte[] output, int outputOffset);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 EngineDoFinal(unsigned int8[] input, int32 inputOffset, int32 inputLen, unsigned int8[] output, int32 outputOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineDoFinal(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member EngineDoFinal : byte[] * int * int * byte[] * int -&gt; int" Usage="cipherSpi.EngineDoFinal (input, inputOffset, inputLen, output, outputOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineDoFinal", "([BII[BI)I", "GetEngineDoFinal_arrayBIIarrayBIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputLen" Type="System.Int32" />
        <Parameter Name="output" Type="System.Byte[]" />
        <Parameter Name="outputOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">the input buffer.</param>
        <param name="inputOffset">the offset in the input buffer.</param>
        <param name="inputLen">the length of the input.</param>
        <param name="output">the output buffer for the transformed bytes.</param>
        <param name="outputOffset">the offset in the output buffer.</param>
        <summary>Finishes a multi-part transformation (encryption or decryption).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.ShortBufferException">if the size of the <c>output</c> buffer is too small.</exception>
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the size of the resulting bytes is not a multiple of the
             cipher block size.</exception>
        <exception cref="T:Javax.Crypto.BadPaddingException">if the padding of the data does not match the padding scheme.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineGetBlockSize">
      <MemberSignature Language="C#" Value="protected abstract int EngineGetBlockSize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 EngineGetBlockSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineGetBlockSize" />
      <MemberSignature Language="F#" Value="abstract member EngineGetBlockSize : unit -&gt; int" Usage="cipherSpi.EngineGetBlockSize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineGetBlockSize", "()I", "GetEngineGetBlockSizeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the block size of this cipher (in bytes)</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EngineGetIV">
      <MemberSignature Language="C#" Value="protected abstract byte[] EngineGetIV ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] EngineGetIV() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineGetIV" />
      <MemberSignature Language="F#" Value="abstract member EngineGetIV : unit -&gt; byte[]" Usage="cipherSpi.EngineGetIV " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineGetIV", "()[B", "GetEngineGetIVHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the Initialization Vector (IV) that was used to initialize this
 cipher or <c>null</c> if none was used.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EngineGetKeySize">
      <MemberSignature Language="C#" Value="protected virtual int EngineGetKeySize (Java.Security.IKey key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 EngineGetKeySize(class Java.Security.IKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineGetKeySize(Java.Security.IKey)" />
      <MemberSignature Language="F#" Value="abstract member EngineGetKeySize : Java.Security.IKey -&gt; int&#xA;override this.EngineGetKeySize : Java.Security.IKey -&gt; int" Usage="cipherSpi.EngineGetKeySize key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineGetKeySize", "(Ljava/security/Key;)I", "GetEngineGetKeySize_Ljava_security_Key_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Security.IKey" />
      </Parameters>
      <Docs>
        <param name="key">the key to get the size for.</param>
        <summary>Returns the size of a specified key object in bits.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the size of the key cannot be determined by this
             implementation.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineGetOutputSize">
      <MemberSignature Language="C#" Value="protected abstract int EngineGetOutputSize (int inputLen);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 EngineGetOutputSize(int32 inputLen) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineGetOutputSize(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member EngineGetOutputSize : int -&gt; int" Usage="cipherSpi.EngineGetOutputSize inputLen" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineGetOutputSize", "(I)I", "GetEngineGetOutputSize_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputLen" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputLen">the length of the input (in bytes).</param>
        <summary>Returns the size for a buffer (in bytes), that the next call to <c>update</c> of <c>doFinal</c> would return, taking into account any buffered
 data from previous <c>update</c> calls and padding.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EngineGetParameters">
      <MemberSignature Language="C#" Value="protected abstract Java.Security.AlgorithmParameters EngineGetParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Security.AlgorithmParameters EngineGetParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineGetParameters" />
      <MemberSignature Language="F#" Value="abstract member EngineGetParameters : unit -&gt; Java.Security.AlgorithmParameters" Usage="cipherSpi.EngineGetParameters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineGetParameters", "()Ljava/security/AlgorithmParameters;", "GetEngineGetParametersHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.AlgorithmParameters</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the parameters that where used to create this cipher instance.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EngineInit">
      <MemberSignature Language="C#" Value="protected abstract void EngineInit (int opmode, Java.Security.IKey key, Java.Security.SecureRandom random);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EngineInit(int32 opmode, class Java.Security.IKey key, class Java.Security.SecureRandom random) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineInit(System.Int32,Java.Security.IKey,Java.Security.SecureRandom)" />
      <MemberSignature Language="F#" Value="abstract member EngineInit : int * Java.Security.IKey * Java.Security.SecureRandom -&gt; unit" Usage="cipherSpi.EngineInit (opmode, key, random)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineInit", "(ILjava/security/Key;Ljava/security/SecureRandom;)V", "GetEngineInit_ILjava_security_Key_Ljava_security_SecureRandom_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opmode" Type="System.Int32" />
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="random" Type="Java.Security.SecureRandom" />
      </Parameters>
      <Docs>
        <param name="opmode">the operation this cipher instance should be initialized for
            (one of: <c>ENCRYPT_MODE</c>, <c>DECRYPT_MODE</c>, <c>WRAP_MODE</c> or <c>UNWRAP_MODE</c>).</param>
        <param name="key">the input key for the operation.</param>
        <param name="random">the source of randomness to use.</param>
        <summary>Initializes this cipher instance with the specified key and a source of
 randomness.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key cannot be used to initialize this cipher
             instance.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineInit">
      <MemberSignature Language="C#" Value="protected abstract void EngineInit (int opmode, Java.Security.IKey key, Java.Security.AlgorithmParameters params, Java.Security.SecureRandom random);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EngineInit(int32 opmode, class Java.Security.IKey key, class Java.Security.AlgorithmParameters params, class Java.Security.SecureRandom random) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineInit(System.Int32,Java.Security.IKey,Java.Security.AlgorithmParameters,Java.Security.SecureRandom)" />
      <MemberSignature Language="F#" Value="abstract member EngineInit : int * Java.Security.IKey * Java.Security.AlgorithmParameters * Java.Security.SecureRandom -&gt; unit" Usage="cipherSpi.EngineInit (opmode, key, params, random)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineInit", "(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V", "GetEngineInit_ILjava_security_Key_Ljava_security_AlgorithmParameters_Ljava_security_SecureRandom_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opmode" Type="System.Int32" />
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="params" Type="Java.Security.AlgorithmParameters" />
        <Parameter Name="random" Type="Java.Security.SecureRandom" />
      </Parameters>
      <Docs>
        <param name="opmode">the operation this cipher instance should be initialized for
            (one of: <c>ENCRYPT_MODE</c>, <c>DECRYPT_MODE</c>, <c>WRAP_MODE</c> or <c>UNWRAP_MODE</c>).</param>
        <param name="key">the input key for the operation.</param>
        <param name="params">the algorithm parameters.</param>
        <param name="random">the source of randomness to use.</param>
        <summary>Initializes this cipher instance with the specified key, algorithm
 parameters and a source of randomness.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key cannot be used to initialize this cipher
             instance.</exception>
        <exception cref="T:Java.Security.InvalidAlgorithmParameterException">if the specified parameters are inappropriate for this
             cipher.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineInit">
      <MemberSignature Language="C#" Value="protected abstract void EngineInit (int opmode, Java.Security.IKey key, Java.Security.Spec.IAlgorithmParameterSpec params, Java.Security.SecureRandom random);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EngineInit(int32 opmode, class Java.Security.IKey key, class Java.Security.Spec.IAlgorithmParameterSpec params, class Java.Security.SecureRandom random) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineInit(System.Int32,Java.Security.IKey,Java.Security.Spec.IAlgorithmParameterSpec,Java.Security.SecureRandom)" />
      <MemberSignature Language="F#" Value="abstract member EngineInit : int * Java.Security.IKey * Java.Security.Spec.IAlgorithmParameterSpec * Java.Security.SecureRandom -&gt; unit" Usage="cipherSpi.EngineInit (opmode, key, params, random)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineInit", "(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V", "GetEngineInit_ILjava_security_Key_Ljava_security_spec_AlgorithmParameterSpec_Ljava_security_SecureRandom_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opmode" Type="System.Int32" />
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="params" Type="Java.Security.Spec.IAlgorithmParameterSpec" />
        <Parameter Name="random" Type="Java.Security.SecureRandom" />
      </Parameters>
      <Docs>
        <param name="opmode">the operation this cipher instance should be initialized for
            (one of: <c>ENCRYPT_MODE</c>, <c>DECRYPT_MODE</c>, <c>WRAP_MODE</c> or <c>UNWRAP_MODE</c>).</param>
        <param name="key">the input key for the operation.</param>
        <param name="params">the algorithm parameters.</param>
        <param name="random">the source of randomness to use.</param>
        <summary>Initializes this cipher instance with the specified key, algorithm
 parameters and a source of randomness.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key cannot be used to initialize this cipher
             instance.</exception>
        <exception cref="T:Java.Security.InvalidAlgorithmParameterException">it the specified parameters are inappropriate for this
             cipher.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineSetMode">
      <MemberSignature Language="C#" Value="protected abstract void EngineSetMode (string mode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EngineSetMode(string mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineSetMode(System.String)" />
      <MemberSignature Language="F#" Value="abstract member EngineSetMode : string -&gt; unit" Usage="cipherSpi.EngineSetMode mode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineSetMode", "(Ljava/lang/String;)V", "GetEngineSetMode_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mode">the name of the cipher mode.</param>
        <summary>Sets the mode for this cipher.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if the specified cipher mode is not supported by this
             provider.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineSetPadding">
      <MemberSignature Language="C#" Value="protected abstract void EngineSetPadding (string padding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EngineSetPadding(string padding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineSetPadding(System.String)" />
      <MemberSignature Language="F#" Value="abstract member EngineSetPadding : string -&gt; unit" Usage="cipherSpi.EngineSetPadding padding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineSetPadding", "(Ljava/lang/String;)V", "GetEngineSetPadding_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="padding" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="padding">the name of the padding method.</param>
        <summary>Sets the padding method for this cipher.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.NoSuchPaddingException">if the specified padding method is not supported by this
             cipher.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineUnwrap">
      <MemberSignature Language="C#" Value="protected virtual Java.Security.IKey EngineUnwrap (byte[] wrappedKey, string wrappedKeyAlgorithm, int wrappedKeyType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Security.IKey EngineUnwrap(unsigned int8[] wrappedKey, string wrappedKeyAlgorithm, int32 wrappedKeyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineUnwrap(System.Byte[],System.String,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member EngineUnwrap : byte[] * string * int -&gt; Java.Security.IKey&#xA;override this.EngineUnwrap : byte[] * string * int -&gt; Java.Security.IKey" Usage="cipherSpi.EngineUnwrap (wrappedKey, wrappedKeyAlgorithm, wrappedKeyType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineUnwrap", "([BLjava/lang/String;I)Ljava/security/Key;", "GetEngineUnwrap_arrayBLjava_lang_String_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.IKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wrappedKey" Type="System.Byte[]" />
        <Parameter Name="wrappedKeyAlgorithm" Type="System.String" />
        <Parameter Name="wrappedKeyType" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="wrappedKey">the wrapped key to unwrap.</param>
        <param name="wrappedKeyAlgorithm">the algorithm for the wrapped key.</param>
        <param name="wrappedKeyType">the type of the wrapped key (one of: <c>SECRET_KEY</c>,
            <c>PRIVATE_KEY</c> or <c>PUBLIC_KEY</c>)</param>
        <summary>Unwraps a key using this cipher instance.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the <c>wrappedKey</c> cannot be unwrapped to a key of
             type <c>wrappedKeyType</c> for the <c>wrappedKeyAlgorithm</c>.</exception>
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if no provider can be found that can create a key of type
             <c>wrappedKeyType</c> for the <c>wrappedKeyAlgorithm</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineUpdate">
      <MemberSignature Language="C#" Value="protected virtual int EngineUpdate (Java.Nio.ByteBuffer input, Java.Nio.ByteBuffer output);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 EngineUpdate(class Java.Nio.ByteBuffer input, class Java.Nio.ByteBuffer output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineUpdate(Java.Nio.ByteBuffer,Java.Nio.ByteBuffer)" />
      <MemberSignature Language="F#" Value="abstract member EngineUpdate : Java.Nio.ByteBuffer * Java.Nio.ByteBuffer -&gt; int&#xA;override this.EngineUpdate : Java.Nio.ByteBuffer * Java.Nio.ByteBuffer -&gt; int" Usage="cipherSpi.EngineUpdate (input, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineUpdate", "(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I", "GetEngineUpdate_Ljava_nio_ByteBuffer_Ljava_nio_ByteBuffer_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="output" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="input">the input buffer to transform.</param>
        <param name="output">the output buffer to store the result within.</param>
        <summary>Continues a multi-part transformation (encryption or decryption).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.ShortBufferException">if the size of the <c>output</c> buffer is too small.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineUpdate">
      <MemberSignature Language="C#" Value="protected abstract byte[] EngineUpdate (byte[] input, int inputOffset, int inputLen);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] EngineUpdate(unsigned int8[] input, int32 inputOffset, int32 inputLen) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineUpdate(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member EngineUpdate : byte[] * int * int -&gt; byte[]" Usage="cipherSpi.EngineUpdate (input, inputOffset, inputLen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineUpdate", "([BII)[B", "GetEngineUpdate_arrayBIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputLen" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">the input bytes to transform.</param>
        <param name="inputOffset">the offset in the input to start.</param>
        <param name="inputLen">the length of the input to transform.</param>
        <summary>Continues a multi-part transformation (encryption or decryption).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the input is null, or if <c>inputOffset</c> and <c>inputLen</c> do not specify a valid chunk in the input buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineUpdate">
      <MemberSignature Language="C#" Value="protected abstract int EngineUpdate (byte[] input, int inputOffset, int inputLen, byte[] output, int outputOffset);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 EngineUpdate(unsigned int8[] input, int32 inputOffset, int32 inputLen, unsigned int8[] output, int32 outputOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineUpdate(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member EngineUpdate : byte[] * int * int * byte[] * int -&gt; int" Usage="cipherSpi.EngineUpdate (input, inputOffset, inputLen, output, outputOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineUpdate", "([BII[BI)I", "GetEngineUpdate_arrayBIIarrayBIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputLen" Type="System.Int32" />
        <Parameter Name="output" Type="System.Byte[]" />
        <Parameter Name="outputOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">the input bytes to transform.</param>
        <param name="inputOffset">the offset in the input to start.</param>
        <param name="inputLen">the length of the input to transform.</param>
        <param name="output">the output buffer.</param>
        <param name="outputOffset">the offset in the output buffer.</param>
        <summary>Continues a multi-part transformation (encryption or decryption).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.ShortBufferException">if the size of the <c>output</c> buffer is too small.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineUpdateAAD">
      <MemberSignature Language="C#" Value="protected virtual void EngineUpdateAAD (Java.Nio.ByteBuffer src);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EngineUpdateAAD(class Java.Nio.ByteBuffer src) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineUpdateAAD(Java.Nio.ByteBuffer)" />
      <MemberSignature Language="F#" Value="abstract member EngineUpdateAAD : Java.Nio.ByteBuffer -&gt; unit&#xA;override this.EngineUpdateAAD : Java.Nio.ByteBuffer -&gt; unit" Usage="cipherSpi.EngineUpdateAAD src" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineUpdateAAD", "(Ljava/nio/ByteBuffer;)V", "GetEngineUpdateAAD_Ljava_nio_ByteBuffer_Handler", ApiSince=19)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="src">To be added.</param>
        <summary>Continues a multi-part transformation (encryption or decryption).</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineUpdateAAD">
      <MemberSignature Language="C#" Value="protected virtual void EngineUpdateAAD (byte[] src, int offset, int len);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EngineUpdateAAD(unsigned int8[] src, int32 offset, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineUpdateAAD(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member EngineUpdateAAD : byte[] * int * int -&gt; unit&#xA;override this.EngineUpdateAAD : byte[] * int * int -&gt; unit" Usage="cipherSpi.EngineUpdateAAD (src, offset, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineUpdateAAD", "([BII)V", "GetEngineUpdateAAD_arrayBIIHandler", ApiSince=19)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="src">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="len">To be added.</param>
        <summary>Continues a multi-part transformation (encryption or decryption) with
 Authenticated Additional Data (AAD).</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>input</c> is <c>null</c>, or if <c>inputOffset</c> and
             <c>inputLen</c> do not specify a valid chunk in the input
             buffer.</exception>
        <exception cref="T:Java.Lang.UnsupportedOperationException">if the cipher does not support AEAD</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineWrap">
      <MemberSignature Language="C#" Value="protected virtual byte[] EngineWrap (Java.Security.IKey key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] EngineWrap(class Java.Security.IKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.CipherSpi.EngineWrap(Java.Security.IKey)" />
      <MemberSignature Language="F#" Value="abstract member EngineWrap : Java.Security.IKey -&gt; byte[]&#xA;override this.EngineWrap : Java.Security.IKey -&gt; byte[]" Usage="cipherSpi.EngineWrap key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineWrap", "(Ljava/security/Key;)[B", "GetEngineWrap_Ljava_security_Key_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Security.IKey" />
      </Parameters>
      <Docs>
        <param name="key">the key to wrap.</param>
        <summary>Wraps a key using this cipher instance.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the size of the resulting bytes is not a multiple of the
             cipher block size.</exception>
        <exception cref="T:Java.Security.InvalidKeyException">if this cipher instance cannot wrap this key.
</exception>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Javax.Crypto.CipherSpi.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Javax.Crypto.CipherSpi.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Javax.Crypto.CipherSpi.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Javax.Crypto.CipherSpi.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Javax.Crypto.CipherSpi.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Javax.Crypto.CipherSpi.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
