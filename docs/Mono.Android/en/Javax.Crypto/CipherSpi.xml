<Type Name="CipherSpi" FullName="Javax.Crypto.CipherSpi">
  <TypeSignature Language="C#" Value="public abstract class CipherSpi : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CipherSpi extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("javax/crypto/CipherSpi", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This class defines the <format type="text/html"><i>Service Provider Interface</i></format> (<format type="text/html"><b>SPI</b></format>) for
 cryptographic ciphers.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">This class defines the <format type="text/html"><i>Service Provider Interface</i></format> (<format type="text/html"><b>SPI</b></format>) for
 cryptographic ciphers.
 </para>
      <para tool="javadoc-to-mdoc">
 Implementers of cryptographic ciphers must implement all the abstract methods
 for every cipher they implement. <c>CipherSpi</c> instances are created
 along with ciphers when the <c><see cref="M:Javax.Crypto.Cipher.GetInstance(System.String)" /></c> method is called. A
 <c>Cipher</c> is referenced by a <format type="text/html"><i>transformation</i></format>, which is a string
 that describes the operation (or set of operations), always consisting of the
 cipher's name and optionally followed by a mode and a padding, in the form:
 <list type="bullet"><item><term>"algorithm"</term></item>or
 <item><term>"algorithm/mode/padding"</term></item></list>
 The following behavior should be implemented for obtaining <c>Cipher</c>
 instances.
 </para>
      <para tool="javadoc-to-mdoc">
 When one of the <c><see cref="M:Javax.Crypto.Cipher.GetInstance(System.String)" /></c> factory methods is called with a
 <format type="text/html"><i>transformation</i></format> that is only an <format type="text/html"><i>algorithm</i></format>, check if the provider
 defines a <c>CipherSpi</c> for "algorithm", if so: return it, otherwise
 throw a <c><see cref="T:Java.Security.NoSuchAlgorithmException" /></c>.
 </para>
      <para tool="javadoc-to-mdoc">
 The following rules apply when a <format type="text/html"><i>transformation</i></format> is of the form
 "algorithm/mode/padding":
 <list type="bullet">
 1. The Provider has a <c>CipherSpi</c> subclass registered for
 "algorithm/mode/padding": return it, otherwise go to step 2.
 </list><list type="bullet">
 2. The Provider has a <c>CipherSpi</c> subclass registered for
 "algorithm/mode": instantiate it, call
 <c><see cref="M:Javax.Crypto.CipherSpi.EngineSetPadding(System.String)" /></c> for the
 padding name and return it, otherwise go to step 3.
 </list><list type="bullet">
 3. The Provider has a <c>CipherSpi</c> subclass registered for
 "algorithm//padding": instantiate it, call
 <c><see cref="M:Javax.Crypto.CipherSpi.EngineSetMode(System.String)" /></c> for the mode
 name and return it, otherwise go to step 4.
 </list><list type="bullet">
 4. The Provider has a <c>CipherSpi</c> subclass registered for "algorithm":
 instantiate it, call <c><see cref="M:Javax.Crypto.CipherSpi.EngineSetMode(System.String)" /></c> for the mode name , call
 <c><see cref="M:Javax.Crypto.CipherSpi.EngineSetPadding(System.String)" /></c> for the
 padding name and return it, otherwise throw a
 <c><see cref="T:Java.Security.NoSuchAlgorithmException" /></c>.
 </list></para>
      <format type="text/html">
        <h5 class="jd-tagtitle">See Also</h5>
      </format>
      <list type="bullet">
        <item>
          <term>
            <c>
              <see cref="T:Javax.Crypto.Cipher" />
            </c>
          </term>
        </item>
      </list>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/javax/crypto/CipherSpi.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CipherSpi ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Creates a new <c>CipherSpi</c> instance.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new <c>CipherSpi</c> instance.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/CipherSpi.html#CipherSpi()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CipherSpi (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineDoFinal">
      <MemberSignature Language="C#" Value="protected virtual int EngineDoFinal (Java.Nio.ByteBuffer input, Java.Nio.ByteBuffer output);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 EngineDoFinal(class Java.Nio.ByteBuffer input, class Java.Nio.ByteBuffer output) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineDoFinal", "(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I", "GetEngineDoFinal_Ljava_nio_ByteBuffer_Ljava_nio_ByteBuffer_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="output" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="input">the input buffer.</param>
        <param name="output">the output buffer.</param>
        <summary>Finishes a multi-part transformation (encryption or decryption).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Finishes a multi-part transformation (encryption or decryption).
 </para>
          <para tool="javadoc-to-mdoc">
 Processes the <c>input.remaining()</c> bytes in <c>input</c> buffer at
 <c>input.position()</c>, and any bytes that have been buffered in
 previous <c>update</c> calls. The transformed bytes are placed into
 <c>output</c> buffer.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/CipherSpi.html#engineDoFinal(java.nio.ByteBuffer, java.nio.ByteBuffer)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.ShortBufferException">if the size of the <c>output</c> buffer is too small.</exception>
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the size of the resulting bytes is not a multiple of the
             cipher block size.</exception>
        <exception cref="T:Javax.Crypto.BadPaddingException">if the padding of the data does not match the padding scheme.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the input buffer and the output buffer are the same
             object.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineDoFinal">
      <MemberSignature Language="C#" Value="protected abstract byte[] EngineDoFinal (byte[] input, int inputOffset, int inputLen);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] EngineDoFinal(unsigned int8[] input, int32 inputOffset, int32 inputLen) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineDoFinal", "([BII)[B", "GetEngineDoFinal_arrayBIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputLen" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">the input buffer.</param>
        <param name="inputOffset">the offset in the input buffer.</param>
        <param name="inputLen">the length of the input.</param>
        <summary>Finishes a multi-part transformation (encryption or decryption).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Finishes a multi-part transformation (encryption or decryption).
 </para>
          <para tool="javadoc-to-mdoc">
 Processes the <c>inputLen</c> bytes in <c>input</c> buffer at <c>inputOffset</c>, and any bytes that have been buffered in previous <c>update</c> calls.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/CipherSpi.html#engineDoFinal(byte[], int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the size of the resulting bytes is not a multiple of the
             cipher block size.</exception>
        <exception cref="T:Javax.Crypto.BadPaddingException">if the padding of the data does not match the padding scheme.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineDoFinal">
      <MemberSignature Language="C#" Value="protected abstract int EngineDoFinal (byte[] input, int inputOffset, int inputLen, byte[] output, int outputOffset);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 EngineDoFinal(unsigned int8[] input, int32 inputOffset, int32 inputLen, unsigned int8[] output, int32 outputOffset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineDoFinal", "([BII[BI)I", "GetEngineDoFinal_arrayBIIarrayBIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputLen" Type="System.Int32" />
        <Parameter Name="output" Type="System.Byte[]" />
        <Parameter Name="outputOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">the input buffer.</param>
        <param name="inputOffset">the offset in the input buffer.</param>
        <param name="inputLen">the length of the input.</param>
        <param name="output">the output buffer for the transformed bytes.</param>
        <param name="outputOffset">the offset in the output buffer.</param>
        <summary>Finishes a multi-part transformation (encryption or decryption).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Finishes a multi-part transformation (encryption or decryption).
 </para>
          <para tool="javadoc-to-mdoc">
 Processes the <c>inputLen</c> bytes in <c>input</c> buffer at
 <c>inputOffset</c>, and any bytes that have been buffered in previous
 <c>update</c> calls.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/CipherSpi.html#engineDoFinal(byte[], int, int, byte[], int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.ShortBufferException">if the size of the <c>output</c> buffer is too small.</exception>
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the size of the resulting bytes is not a multiple of the
             cipher block size.</exception>
        <exception cref="T:Javax.Crypto.BadPaddingException">if the padding of the data does not match the padding scheme.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineGetBlockSize">
      <MemberSignature Language="C#" Value="protected abstract int EngineGetBlockSize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 EngineGetBlockSize() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineGetBlockSize", "()I", "GetEngineGetBlockSizeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the block size of this cipher (in bytes)</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the block size of this cipher (in bytes)</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/CipherSpi.html#engineGetBlockSize()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EngineGetIV">
      <MemberSignature Language="C#" Value="protected abstract byte[] EngineGetIV ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] EngineGetIV() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineGetIV", "()[B", "GetEngineGetIVHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the Initialization Vector (IV) that was used to initialize this
 cipher or <c>null</c> if none was used.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the Initialization Vector (IV) that was used to initialize this
 cipher or <c>null</c> if none was used.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/CipherSpi.html#engineGetIV()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EngineGetKeySize">
      <MemberSignature Language="C#" Value="protected virtual int EngineGetKeySize (Java.Security.IKey key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 EngineGetKeySize(class Java.Security.IKey key) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineGetKeySize", "(Ljava/security/Key;)I", "GetEngineGetKeySize_Ljava_security_Key_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Security.IKey" />
      </Parameters>
      <Docs>
        <param name="key">the key to get the size for.</param>
        <summary>Returns the size of a specified key object in bits.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the size of a specified key object in bits. This method has been
 added to this class (for backwards compatibility, it cannot be abstract).
 If this method is not overridden, it throws an <c>UnsupportedOperationException</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/CipherSpi.html#engineGetKeySize(java.security.Key)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the size of the key cannot be determined by this
             implementation.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineGetOutputSize">
      <MemberSignature Language="C#" Value="protected abstract int EngineGetOutputSize (int inputLen);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 EngineGetOutputSize(int32 inputLen) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineGetOutputSize", "(I)I", "GetEngineGetOutputSize_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputLen" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputLen">the length of the input (in bytes).</param>
        <summary>Returns the size for a buffer (in bytes), that the next call to <c>update</c> of <c>doFinal</c> would return, taking into account any buffered
 data from previous <c>update</c> calls and padding.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the size for a buffer (in bytes), that the next call to <c>update</c> of <c>doFinal</c> would return, taking into account any buffered
 data from previous <c>update</c> calls and padding.
 </para>
          <para tool="javadoc-to-mdoc">
 The actual output length of the next call to <c>update</c> or <c>doFinal</c> may be smaller than the length returned by this method.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/CipherSpi.html#engineGetOutputSize(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EngineGetParameters">
      <MemberSignature Language="C#" Value="protected abstract Java.Security.AlgorithmParameters EngineGetParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Security.AlgorithmParameters EngineGetParameters() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineGetParameters", "()Ljava/security/AlgorithmParameters;", "GetEngineGetParametersHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.AlgorithmParameters</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the parameters that where used to create this cipher instance.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the parameters that where used to create this cipher instance.
 </para>
          <para tool="javadoc-to-mdoc">
 These may be a the same parameters that were used to create this cipher
 instance, or may be a combination of default and random parameters,
 depending on the underlying cipher implementation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/CipherSpi.html#engineGetParameters()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EngineInit">
      <MemberSignature Language="C#" Value="protected abstract void EngineInit (int opmode, Java.Security.IKey key, Java.Security.SecureRandom random);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EngineInit(int32 opmode, class Java.Security.IKey key, class Java.Security.SecureRandom random) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineInit", "(ILjava/security/Key;Ljava/security/SecureRandom;)V", "GetEngineInit_ILjava_security_Key_Ljava_security_SecureRandom_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opmode" Type="System.Int32" />
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="random" Type="Java.Security.SecureRandom" />
      </Parameters>
      <Docs>
        <param name="opmode">the operation this cipher instance should be initialized for
            (one of: <c>ENCRYPT_MODE</c>, <c>DECRYPT_MODE</c>, <c>WRAP_MODE</c> or <c>UNWRAP_MODE</c>).</param>
        <param name="key">the input key for the operation.</param>
        <param name="random">the source of randomness to use.</param>
        <summary>Initializes this cipher instance with the specified key and a source of
 randomness.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Initializes this cipher instance with the specified key and a source of
 randomness.
 </para>
          <para tool="javadoc-to-mdoc">
 The cipher will be initialized for the specified operation (one of:
 encryption, decryption, key wrapping or key unwrapping) depending on
 <c>opmode</c>.
 </para>
          <para tool="javadoc-to-mdoc">
 If this cipher instance needs any algorithm parameters or random values
 that the specified key cannot provide, the underlying implementation of
 this cipher is supposed to generate the required parameters (using its
 provider or random values). Random values will be generated using <c>random</c>;
 </para>
          <para tool="javadoc-to-mdoc">
 When a cipher instance is initialized by a call to any of the <c>init</c> methods, the state of the instance is overridden, means it is
 equivalent to creating a new instance and calling it <c>init</c> method.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/CipherSpi.html#engineInit(int, java.security.Key, java.security.SecureRandom)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key cannot be used to initialize this cipher
             instance.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineInit">
      <MemberSignature Language="C#" Value="protected abstract void EngineInit (int opmode, Java.Security.IKey key, Java.Security.AlgorithmParameters params, Java.Security.SecureRandom random);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EngineInit(int32 opmode, class Java.Security.IKey key, class Java.Security.AlgorithmParameters params, class Java.Security.SecureRandom random) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineInit", "(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V", "GetEngineInit_ILjava_security_Key_Ljava_security_AlgorithmParameters_Ljava_security_SecureRandom_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opmode" Type="System.Int32" />
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="params" Type="Java.Security.AlgorithmParameters" />
        <Parameter Name="random" Type="Java.Security.SecureRandom" />
      </Parameters>
      <Docs>
        <param name="opmode">the operation this cipher instance should be initialized for
            (one of: <c>ENCRYPT_MODE</c>, <c>DECRYPT_MODE</c>, <c>WRAP_MODE</c> or <c>UNWRAP_MODE</c>).</param>
        <param name="key">the input key for the operation.</param>
        <param name="params">the algorithm parameters.</param>
        <param name="random">the source of randomness to use.</param>
        <summary>Initializes this cipher instance with the specified key, algorithm
 parameters and a source of randomness.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Initializes this cipher instance with the specified key, algorithm
 parameters and a source of randomness.
 </para>
          <para tool="javadoc-to-mdoc">
 The cipher will be initialized for the specified operation (one of:
 encryption, decryption, key wrapping or key unwrapping) depending on
 <c>opmode</c>.
 </para>
          <para tool="javadoc-to-mdoc">
 If this cipher instance needs any algorithm parameters and <c>params</c>
 is <c>null</c>, the underlying implementation of this cipher is supposed
 to generate the required parameters (using its provider or random
 values). Random values are generated using <c>random</c>.
 </para>
          <para tool="javadoc-to-mdoc">
 When a cipher instance is initialized by a call to any of the <c>init</c> methods, the state of the instance is overridden, means it is
 equivalent to creating a new instance and calling it <c>init</c> method.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/CipherSpi.html#engineInit(int, java.security.Key, java.security.AlgorithmParameters, java.security.SecureRandom)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key cannot be used to initialize this cipher
             instance.</exception>
        <exception cref="T:Java.Security.InvalidAlgorithmParameterException">if the specified parameters are inappropriate for this
             cipher.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineInit">
      <MemberSignature Language="C#" Value="protected abstract void EngineInit (int opmode, Java.Security.IKey key, Java.Security.Spec.IAlgorithmParameterSpec params, Java.Security.SecureRandom random);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EngineInit(int32 opmode, class Java.Security.IKey key, class Java.Security.Spec.IAlgorithmParameterSpec params, class Java.Security.SecureRandom random) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineInit", "(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V", "GetEngineInit_ILjava_security_Key_Ljava_security_spec_AlgorithmParameterSpec_Ljava_security_SecureRandom_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opmode" Type="System.Int32" />
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="params" Type="Java.Security.Spec.IAlgorithmParameterSpec" />
        <Parameter Name="random" Type="Java.Security.SecureRandom" />
      </Parameters>
      <Docs>
        <param name="opmode">the operation this cipher instance should be initialized for
            (one of: <c>ENCRYPT_MODE</c>, <c>DECRYPT_MODE</c>, <c>WRAP_MODE</c> or <c>UNWRAP_MODE</c>).</param>
        <param name="key">the input key for the operation.</param>
        <param name="params">the algorithm parameters.</param>
        <param name="random">the source of randomness to use.</param>
        <summary>Initializes this cipher instance with the specified key, algorithm
 parameters and a source of randomness.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Initializes this cipher instance with the specified key, algorithm
 parameters and a source of randomness.
 </para>
          <para tool="javadoc-to-mdoc">
 The cipher will be initialized for the specified operation (one of:
 encryption, decryption, key wrapping or key unwrapping) depending on
 <c>opmode</c>.
 </para>
          <para tool="javadoc-to-mdoc">
 If this cipher instance needs any algorithm parameters and <c>params</c>
 is <c>null</c>, the underlying implementation of this cipher is supposed
 to generate the required parameters (using its provider or random
 values). Random values are generated using <c>random</c>.
 </para>
          <para tool="javadoc-to-mdoc">
 When a cipher instance is initialized by a call to any of the <c>init</c> methods, the state of the instance is overridden, means it is
 equivalent to creating a new instance and calling it <c>init</c> method.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/CipherSpi.html#engineInit(int, java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key cannot be used to initialize this cipher
             instance.</exception>
        <exception cref="T:Java.Security.InvalidAlgorithmParameterException">it the specified parameters are inappropriate for this
             cipher.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineSetMode">
      <MemberSignature Language="C#" Value="protected abstract void EngineSetMode (string mode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EngineSetMode(string mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineSetMode", "(Ljava/lang/String;)V", "GetEngineSetMode_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mode">the name of the cipher mode.</param>
        <summary>Sets the mode for this cipher.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the mode for this cipher.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/CipherSpi.html#engineSetMode(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if the specified cipher mode is not supported by this
             provider.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineSetPadding">
      <MemberSignature Language="C#" Value="protected abstract void EngineSetPadding (string padding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EngineSetPadding(string padding) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineSetPadding", "(Ljava/lang/String;)V", "GetEngineSetPadding_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="padding" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="padding">the name of the padding method.</param>
        <summary>Sets the padding method for this cipher.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the padding method for this cipher.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/CipherSpi.html#engineSetPadding(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.NoSuchPaddingException">if the specified padding method is not supported by this
             cipher.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineUnwrap">
      <MemberSignature Language="C#" Value="protected virtual Java.Security.IKey EngineUnwrap (byte[] wrappedKey, string wrappedKeyAlgorithm, int wrappedKeyType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Security.IKey EngineUnwrap(unsigned int8[] wrappedKey, string wrappedKeyAlgorithm, int32 wrappedKeyType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineUnwrap", "([BLjava/lang/String;I)Ljava/security/Key;", "GetEngineUnwrap_arrayBLjava_lang_String_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.IKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wrappedKey" Type="System.Byte[]" />
        <Parameter Name="wrappedKeyAlgorithm" Type="System.String" />
        <Parameter Name="wrappedKeyType" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="wrappedKey">the wrapped key to unwrap.</param>
        <param name="wrappedKeyAlgorithm">the algorithm for the wrapped key.</param>
        <param name="wrappedKeyType">the type of the wrapped key (one of: <c>SECRET_KEY</c>,
            <c>PRIVATE_KEY</c> or <c>PUBLIC_KEY</c>)</param>
        <summary>Unwraps a key using this cipher instance.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Unwraps a key using this cipher instance.
 </para>
          <para tool="javadoc-to-mdoc">
 This method has been added to this class (for backwards compatibility, it
 cannot be abstract). If this method is not overridden, it throws an
 <c>UnsupportedOperationException</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/CipherSpi.html#engineUnwrap(byte[], java.lang.String, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the <c>wrappedKey</c> cannot be unwrapped to a key of
             type <c>wrappedKeyType</c> for the <c>wrappedKeyAlgorithm</c>.</exception>
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if no provider can be found that can create a key of type
             <c>wrappedKeyType</c> for the <c>wrappedKeyAlgorithm</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineUpdate">
      <MemberSignature Language="C#" Value="protected virtual int EngineUpdate (Java.Nio.ByteBuffer input, Java.Nio.ByteBuffer output);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 EngineUpdate(class Java.Nio.ByteBuffer input, class Java.Nio.ByteBuffer output) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineUpdate", "(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I", "GetEngineUpdate_Ljava_nio_ByteBuffer_Ljava_nio_ByteBuffer_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="output" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="input">the input buffer to transform.</param>
        <param name="output">the output buffer to store the result within.</param>
        <summary>Continues a multi-part transformation (encryption or decryption).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Continues a multi-part transformation (encryption or decryption). The
 <c>input.remaining()</c> bytes starting at <c>input.position()</c> are
 transformed and stored in the <c>output</c> buffer.
 </para>
          <para tool="javadoc-to-mdoc">
 If the <c>output.remaining()</c> is too small to hold the transformed
 bytes a <c>ShortBufferException</c> is thrown. Use
 <c><see cref="M:Javax.Crypto.Cipher.GetOutputSize(System.Int32)" /></c> to check for the size of the
 output buffer.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/CipherSpi.html#engineUpdate(java.nio.ByteBuffer, java.nio.ByteBuffer)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.ShortBufferException">if the size of the <c>output</c> buffer is too small.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineUpdate">
      <MemberSignature Language="C#" Value="protected abstract byte[] EngineUpdate (byte[] input, int inputOffset, int inputLen);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] EngineUpdate(unsigned int8[] input, int32 inputOffset, int32 inputLen) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineUpdate", "([BII)[B", "GetEngineUpdate_arrayBIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputLen" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">the input bytes to transform.</param>
        <param name="inputOffset">the offset in the input to start.</param>
        <param name="inputLen">the length of the input to transform.</param>
        <summary>Continues a multi-part transformation (encryption or decryption).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Continues a multi-part transformation (encryption or decryption). The
 transformed bytes are returned.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/CipherSpi.html#engineUpdate(byte[], int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the input is null, or if <c>inputOffset</c> and <c>inputLen</c> do not specify a valid chunk in the input buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineUpdate">
      <MemberSignature Language="C#" Value="protected abstract int EngineUpdate (byte[] input, int inputOffset, int inputLen, byte[] output, int outputOffset);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 EngineUpdate(unsigned int8[] input, int32 inputOffset, int32 inputLen, unsigned int8[] output, int32 outputOffset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineUpdate", "([BII[BI)I", "GetEngineUpdate_arrayBIIarrayBIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputLen" Type="System.Int32" />
        <Parameter Name="output" Type="System.Byte[]" />
        <Parameter Name="outputOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">the input bytes to transform.</param>
        <param name="inputOffset">the offset in the input to start.</param>
        <param name="inputLen">the length of the input to transform.</param>
        <param name="output">the output buffer.</param>
        <param name="outputOffset">the offset in the output buffer.</param>
        <summary>Continues a multi-part transformation (encryption or decryption).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Continues a multi-part transformation (encryption or decryption). The
 transformed bytes are stored in the <c>output</c> buffer.
 </para>
          <para tool="javadoc-to-mdoc">
 If the size of the <c>output</c> buffer is too small to hold the result,
 a <c>ShortBufferException</c> is thrown. Use
 <c><see cref="M:Javax.Crypto.Cipher.GetOutputSize(System.Int32)" /></c> to check for the size of the
 output buffer.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/CipherSpi.html#engineUpdate(byte[], int, int, byte[], int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.ShortBufferException">if the size of the <c>output</c> buffer is too small.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineUpdateAAD">
      <MemberSignature Language="C#" Value="protected virtual void EngineUpdateAAD (Java.Nio.ByteBuffer p0);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EngineUpdateAAD(class Java.Nio.ByteBuffer p0) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineUpdateAAD", "(Ljava/nio/ByteBuffer;)V", "GetEngineUpdateAAD_Ljava_nio_ByteBuffer_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="p0">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineUpdateAAD">
      <MemberSignature Language="C#" Value="protected virtual void EngineUpdateAAD (byte[] p0, int p1, int p2);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EngineUpdateAAD(unsigned int8[] p0, int32 p1, int32 p2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineUpdateAAD", "([BII)V", "GetEngineUpdateAAD_arrayBIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Byte[]" />
        <Parameter Name="p1" Type="System.Int32" />
        <Parameter Name="p2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="p0">To be added.</param>
        <param name="p1">To be added.</param>
        <param name="p2">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineWrap">
      <MemberSignature Language="C#" Value="protected virtual byte[] EngineWrap (Java.Security.IKey key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] EngineWrap(class Java.Security.IKey key) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineWrap", "(Ljava/security/Key;)[B", "GetEngineWrap_Ljava_security_Key_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Security.IKey" />
      </Parameters>
      <Docs>
        <param name="key">the key to wrap.</param>
        <summary>Wraps a key using this cipher instance.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Wraps a key using this cipher instance. This method has been added to
 this class (for backwards compatibility, it cannot be abstract). If this
 method is not overridden, it throws an <c>UnsupportedOperationException</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/CipherSpi.html#engineWrap(java.security.Key)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the size of the resulting bytes is not a multiple of the
             cipher block size.</exception>
        <exception cref="T:Java.Security.InvalidKeyException">if this cipher instance cannot wrap this key.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
