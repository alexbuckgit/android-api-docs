<Type Name="SecretKeyFactorySpi" FullName="Javax.Crypto.SecretKeyFactorySpi">
  <TypeSignature Language="C#" Value="public abstract class SecretKeyFactorySpi : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecretKeyFactorySpi extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("javax/crypto/SecretKeyFactorySpi", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>The <format type="text/html"><i>Service Provider Interface</i></format> (<format type="text/html"><b>SPI</b></format>) definition for the <c>SecretKeyFactory</c> class.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">The <format type="text/html"><i>Service Provider Interface</i></format> (<format type="text/html"><b>SPI</b></format>) definition for the <c>SecretKeyFactory</c> class.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/javax/crypto/SecretKeyFactorySpi.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecretKeyFactorySpi ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Creates a new <c>SecretKeyFactorySpi</c> instance.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new <c>SecretKeyFactorySpi</c> instance.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/SecretKeyFactorySpi.html#SecretKeyFactorySpi()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecretKeyFactorySpi (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineGenerateSecret">
      <MemberSignature Language="C#" Value="protected abstract Javax.Crypto.ISecretKey EngineGenerateSecret (Java.Security.Spec.IKeySpec keySpec);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Javax.Crypto.ISecretKey EngineGenerateSecret(class Java.Security.Spec.IKeySpec keySpec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineGenerateSecret", "(Ljava/security/spec/KeySpec;)Ljavax/crypto/SecretKey;", "GetEngineGenerateSecret_Ljava_security_spec_KeySpec_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.ISecretKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keySpec" Type="Java.Security.Spec.IKeySpec" />
      </Parameters>
      <Docs>
        <param name="keySpec">the key specification.</param>
        <summary>Generate a secret key from the specified key specification.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Generate a secret key from the specified key specification.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/SecretKeyFactorySpi.html#engineGenerateSecret(java.security.spec.KeySpec)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.Spec.InvalidKeySpecException">if the specified key specification cannot be used to generate
             a secret key.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineGetKeySpec">
      <MemberSignature Language="C#" Value="protected abstract Java.Security.Spec.IKeySpec EngineGetKeySpec (Javax.Crypto.ISecretKey key, Java.Lang.Class keySpec);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Security.Spec.IKeySpec EngineGetKeySpec(class Javax.Crypto.ISecretKey key, class Java.Lang.Class keySpec) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineGetKeySpec", "(Ljavax/crypto/SecretKey;Ljava/lang/Class;)Ljava/security/spec/KeySpec;", "GetEngineGetKeySpec_Ljavax_crypto_SecretKey_Ljava_lang_Class_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Spec.IKeySpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Javax.Crypto.ISecretKey" />
        <Parameter Name="keySpec" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="key">the secret key to get the specification from.</param>
        <param name="keySpec">the target key specification class.</param>
        <summary>Returns the key specification of the specified secret key.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the key specification of the specified secret key.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/SecretKeyFactorySpi.html#engineGetKeySpec(javax.crypto.SecretKey, java.lang.Class)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.Spec.InvalidKeySpecException">if the specified secret key cannot be transformed into the
             requested key specification.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineTranslateKey">
      <MemberSignature Language="C#" Value="protected abstract Javax.Crypto.ISecretKey EngineTranslateKey (Javax.Crypto.ISecretKey key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Javax.Crypto.ISecretKey EngineTranslateKey(class Javax.Crypto.ISecretKey key) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineTranslateKey", "(Ljavax/crypto/SecretKey;)Ljavax/crypto/SecretKey;", "GetEngineTranslateKey_Ljavax_crypto_SecretKey_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.ISecretKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Javax.Crypto.ISecretKey" />
      </Parameters>
      <Docs>
        <param name="key">the secret key to translate.</param>
        <summary>Translates the specified secret key into an instance of the corresponding
 key from the provider of this key factory.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Translates the specified secret key into an instance of the corresponding
 key from the provider of this key factory.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/SecretKeyFactorySpi.html#engineTranslateKey(javax.crypto.SecretKey)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key cannot be translated using this key
             factory.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>