<Type Name="ExemptionMechanism" FullName="Javax.Crypto.ExemptionMechanism">
  <TypeSignature Language="C#" Value="public class ExemptionMechanism : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExemptionMechanism extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("javax/crypto/ExemptionMechanism", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This class implements the functionality of an exemption mechanism such as
 <format type="text/html"><i>key recovery</i></format>, <format type="text/html"><i>key weakening</i></format>, or <format type="text/html"><i>key escrow</i></format>.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">This class implements the functionality of an exemption mechanism such as
 <format type="text/html"><i>key recovery</i></format>, <format type="text/html"><i>key weakening</i></format>, or <format type="text/html"><i>key escrow</i></format>.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/javax/crypto/ExemptionMechanism.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExemptionMechanism (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExemptionMechanism (Javax.Crypto.ExemptionMechanismSpi exmechSpi, Java.Security.Provider provider, string mechanism);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Javax.Crypto.ExemptionMechanismSpi exmechSpi, class Java.Security.Provider provider, string mechanism) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljavax/crypto/ExemptionMechanismSpi;Ljava/security/Provider;Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="exmechSpi" Type="Javax.Crypto.ExemptionMechanismSpi" />
        <Parameter Name="provider" Type="Java.Security.Provider" />
        <Parameter Name="mechanism" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="exmechSpi">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="mechanism">To be added.</param>
        <summary>Creates a <c>ExemptionMechanism</c> instance.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a <c>ExemptionMechanism</c> instance.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/ExemptionMechanism.html#ExemptionMechanism(javax.crypto.ExemptionMechanismSpi, java.security.Provider, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GenExemptionBlob">
      <MemberSignature Language="C#" Value="public byte[] GenExemptionBlob ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GenExemptionBlob() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("genExemptionBlob", "()[B", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Generates the result key blob for this exemption mechanism.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Generates the result key blob for this exemption mechanism.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/ExemptionMechanism.html#genExemptionBlob()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this <c>ExemptionMechanism</c> instance is not
             initialized.</exception>
        <exception cref="T:Javax.Crypto.ExemptionMechanismException">if error(s) occur during generation.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GenExemptionBlob">
      <MemberSignature Language="C#" Value="public int GenExemptionBlob (byte[] output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GenExemptionBlob(unsigned int8[] output) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("genExemptionBlob", "([B)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="output">the output buffer for the result key blob.</param>
        <summary>Generates the result key blob for this exemption mechanism and stores it
 into the <c>output</c> buffer.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Generates the result key blob for this exemption mechanism and stores it
 into the <c>output</c> buffer.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/ExemptionMechanism.html#genExemptionBlob(byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this <c>ExemptionMechanism</c> instance is not
             initialized.</exception>
        <exception cref="T:Javax.Crypto.ShortBufferException">if the provided buffer is too small for the result key blob.</exception>
        <exception cref="T:Javax.Crypto.ExemptionMechanismException">if error(s) occur during generation.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GenExemptionBlob">
      <MemberSignature Language="C#" Value="public int GenExemptionBlob (byte[] output, int outputOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GenExemptionBlob(unsigned int8[] output, int32 outputOffset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("genExemptionBlob", "([BI)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Byte[]" />
        <Parameter Name="outputOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="output">the output buffer for the result key blob.</param>
        <param name="outputOffset">the offset in the output buffer to start.</param>
        <summary>Generates the result key blob for this exemption mechanism and stores it
 into the <c>output</c> buffer at offset <c>outputOffset</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Generates the result key blob for this exemption mechanism and stores it
 into the <c>output</c> buffer at offset <c>outputOffset</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/ExemptionMechanism.html#genExemptionBlob(byte[], int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this <c>ExemptionMechanism</c> instance is not
             initialized.</exception>
        <exception cref="T:Javax.Crypto.ShortBufferException">if the provided buffer is too small for the result key blob.</exception>
        <exception cref="T:Javax.Crypto.ExemptionMechanismException">if error(s) occur during generation.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Javax.Crypto.ExemptionMechanism GetInstance (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Crypto.ExemptionMechanism GetInstance(string algorithm) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInstance", "(Ljava/lang/String;)Ljavax/crypto/ExemptionMechanism;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.ExemptionMechanism</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">the name of the requested exemption mechanism.</param>
        <summary tool="true">Returns a new <c>ExemptionMechanism</c> instance that provides the
 specified exemption mechanism algorithm.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>ExemptionMechanism</c> instance that provides the
 specified exemption mechanism algorithm.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/ExemptionMechanism.html#getInstance(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if the specified algorithm is not available by any provider.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the algorithm parameter is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Javax.Crypto.ExemptionMechanism GetInstance (string algorithm, Java.Security.Provider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Crypto.ExemptionMechanism GetInstance(string algorithm, class Java.Security.Provider provider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/ExemptionMechanism;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.ExemptionMechanism</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="provider" Type="Java.Security.Provider" />
      </Parameters>
      <Docs>
        <param name="algorithm">the name of the requested exemption mechanism.</param>
        <param name="provider">the provider that is providing the algorithm.</param>
        <summary>Returns a new <c>ExemptionMechanism</c> instance that provides the
 specified exemption mechanism algorithm from the specified provider.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>ExemptionMechanism</c> instance that provides the
 specified exemption mechanism algorithm from the specified provider.
 The <c>provider</c> supplied does not have to be registered.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/ExemptionMechanism.html#getInstance(java.lang.String, java.security.Provider)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if the specified algorithm is not provided by the specified
             provider.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the algorithm parameter is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the provider parameter is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Javax.Crypto.ExemptionMechanism GetInstance (string algorithm, string provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Crypto.ExemptionMechanism GetInstance(string algorithm, string provider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/lang/String;)Ljavax/crypto/ExemptionMechanism;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.ExemptionMechanism</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="provider" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">the name of the requested exemption mechanism.</param>
        <param name="provider">the name of the provider that is providing the algorithm.</param>
        <summary>Returns a new <c>ExemptionMechansm</c> instance that provides the
 specified exemption mechanism algorithm from the specified provider.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>ExemptionMechansm</c> instance that provides the
 specified exemption mechanism algorithm from the specified provider.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/ExemptionMechanism.html#getInstance(java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if the specified algorithm is not provided by the specified
             provider.</exception>
        <exception cref="T:Java.Security.NoSuchProviderException">if the specified provider is not available.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the algorithm parameter is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the provider parameter is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetOutputSize">
      <MemberSignature Language="C#" Value="public int GetOutputSize (int inputLen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetOutputSize(int32 inputLen) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getOutputSize", "(I)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputLen" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputLen">the specified input length (in bytes).</param>
        <summary>Returns the size in bytes for the output buffer needed to hold the output
 of the next <c><see cref="M:Javax.Crypto.ExemptionMechanism.GenExemptionBlob" /></c> call, given the specified <c>inputLen</c> (in bytes).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the size in bytes for the output buffer needed to hold the output
 of the next <c><see cref="M:Javax.Crypto.ExemptionMechanism.GenExemptionBlob" /></c> call, given the specified <c>inputLen</c> (in bytes).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/ExemptionMechanism.html#getOutputSize(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this <c>ExemptionMechanism</c> instance is not
             initialized.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (Java.Security.IKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Init(class Java.Security.IKey key) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("init", "(Ljava/security/Key;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Security.IKey" />
      </Parameters>
      <Docs>
        <param name="key">the key to initialize this instance with.</param>
        <summary tool="true">Initializes this <c>ExemptionMechanism</c> instance with the
 specified key.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Initializes this <c>ExemptionMechanism</c> instance with the
 specified key.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/ExemptionMechanism.html#init(java.security.Key)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the key cannot be used to initialize this mechanism.</exception>
        <exception cref="T:Javax.Crypto.ExemptionMechanismException">if error(s) occur during initialization.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (Java.Security.IKey key, Java.Security.AlgorithmParameters param);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Init(class Java.Security.IKey key, class Java.Security.AlgorithmParameters param) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("init", "(Ljava/security/Key;Ljava/security/AlgorithmParameters;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="param" Type="Java.Security.AlgorithmParameters" />
      </Parameters>
      <Docs>
        <param name="key">the key to initialize this instance with.</param>
        <param name="param">the parameters for this exemption mechanism algorithm.</param>
        <summary>Initializes this <c>ExemptionMechanism</c> instance with the
 specified key and algorithm parameters.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Initializes this <c>ExemptionMechanism</c> instance with the
 specified key and algorithm parameters.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/ExemptionMechanism.html#init(java.security.Key, java.security.AlgorithmParameters)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the key cannot be used to initialize this mechanism.</exception>
        <exception cref="T:Java.Security.InvalidAlgorithmParameterException">if the parameters cannot be used to initialize this
             mechanism.</exception>
        <exception cref="T:Javax.Crypto.ExemptionMechanismException">if error(s) occur during initialization.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (Java.Security.IKey key, Java.Security.Spec.IAlgorithmParameterSpec param);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Init(class Java.Security.IKey key, class Java.Security.Spec.IAlgorithmParameterSpec param) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("init", "(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="param" Type="Java.Security.Spec.IAlgorithmParameterSpec" />
      </Parameters>
      <Docs>
        <param name="key">the key to initialize this instance with.</param>
        <param name="param">the parameters for this exemption mechanism algorithm.</param>
        <summary>Initializes this <c>ExemptionMechanism</c> instance with the
 specified key and algorithm parameters.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Initializes this <c>ExemptionMechanism</c> instance with the
 specified key and algorithm parameters.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/ExemptionMechanism.html#init(java.security.Key, java.security.spec.AlgorithmParameterSpec)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the key cannot be used to initialize this mechanism.</exception>
        <exception cref="T:Java.Security.InvalidAlgorithmParameterException">the the parameters cannot be used to initialize this
             mechanism.</exception>
        <exception cref="T:Javax.Crypto.ExemptionMechanismException">if error(s) occur during initialization.
</exception>
      </Docs>
    </Member>
    <Member MemberName="IsCryptoAllowed">
      <MemberSignature Language="C#" Value="public bool IsCryptoAllowed (Java.Security.IKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsCryptoAllowed(class Java.Security.IKey key) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isCryptoAllowed", "(Ljava/security/Key;)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Security.IKey" />
      </Parameters>
      <Docs>
        <param name="key">the key to verify.</param>
        <summary>Returns whether the result blob for this <c>ExemptionMechanism</c>
 instance has been generated successfully and that the specified key is
 the same as the one that was used to initialize and generate.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns whether the result blob for this <c>ExemptionMechanism</c>
 instance has been generated successfully and that the specified key is
 the same as the one that was used to initialize and generate.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/ExemptionMechanism.html#isCryptoAllowed(java.security.Key)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.ExemptionMechanismException">if an error occurs while determining whether the result blob
             has been generated successfully.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getName", "()Ljava/lang/String;", "GetGetNameHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the name of this <c>ExemptionMechanism</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the name of this <c>ExemptionMechanism</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/ExemptionMechanism.html#getName()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public Java.Security.Provider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Security.Provider Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getProvider", "()Ljava/security/Provider;", "GetGetProviderHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Provider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the provider of this <c>ExemptionMechanism</c> instance.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the provider of this <c>ExemptionMechanism</c> instance.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/ExemptionMechanism.html#getProvider()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
