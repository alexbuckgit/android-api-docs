<Type Name="ExemptionMechanismSpi" FullName="Javax.Crypto.ExemptionMechanismSpi">
  <TypeSignature Language="C#" Value="public abstract class ExemptionMechanismSpi : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExemptionMechanismSpi extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("javax/crypto/ExemptionMechanismSpi", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>The <format type="text/html"><i>Service Provider Interface</i></format> (<format type="text/html"><b>SPI</b></format>) definition for the <c>ExemptionMechanism</c> class.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">The <format type="text/html"><i>Service Provider Interface</i></format> (<format type="text/html"><b>SPI</b></format>) definition for the <c>ExemptionMechanism</c> class.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/javax/crypto/ExemptionMechanismSpi.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExemptionMechanismSpi ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Creates a new <c>ExemptionMechanismSpi</c> instance.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new <c>ExemptionMechanismSpi</c> instance.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/ExemptionMechanismSpi.html#ExemptionMechanismSpi()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExemptionMechanismSpi (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineGenExemptionBlob">
      <MemberSignature Language="C#" Value="protected abstract byte[] EngineGenExemptionBlob ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] EngineGenExemptionBlob() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineGenExemptionBlob", "()[B", "GetEngineGenExemptionBlobHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Generates the result key blob for this exemption mechanism.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Generates the result key blob for this exemption mechanism.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/ExemptionMechanismSpi.html#engineGenExemptionBlob()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.ExemptionMechanismException">if error(s) occur during generation.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineGenExemptionBlob">
      <MemberSignature Language="C#" Value="protected abstract int EngineGenExemptionBlob (byte[] output, int outputOffset);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 EngineGenExemptionBlob(unsigned int8[] output, int32 outputOffset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineGenExemptionBlob", "([BI)I", "GetEngineGenExemptionBlob_arrayBIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Byte[]" />
        <Parameter Name="outputOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="output">the output buffer for the result key blob.</param>
        <param name="outputOffset">the offset in the output buffer to start.</param>
        <summary>Generates the result key blob for this exemption mechanism and stores it
 into the <c>output</c> buffer at offset <c>outputOffset</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Generates the result key blob for this exemption mechanism and stores it
 into the <c>output</c> buffer at offset <c>outputOffset</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/ExemptionMechanismSpi.html#engineGenExemptionBlob(byte[], int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.ShortBufferException">if the provided buffer is too small for the result key blob.</exception>
        <exception cref="T:Javax.Crypto.ExemptionMechanismException">if error(s) occur during generation.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineGetOutputSize">
      <MemberSignature Language="C#" Value="protected abstract int EngineGetOutputSize (int inputLen);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 EngineGetOutputSize(int32 inputLen) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineGetOutputSize", "(I)I", "GetEngineGetOutputSize_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputLen" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputLen">the specified input length (in bytes).</param>
        <summary>Returns the size in bytes for the output buffer needed to hold the output
 of the next <c><see cref="M:Javax.Crypto.ExemptionMechanismSpi.EngineGenExemptionBlob" /></c> call, given the specified
 <c>inputLen</c> (in bytes).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the size in bytes for the output buffer needed to hold the output
 of the next <c><see cref="M:Javax.Crypto.ExemptionMechanismSpi.EngineGenExemptionBlob" /></c> call, given the specified
 <c>inputLen</c> (in bytes).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/ExemptionMechanismSpi.html#engineGetOutputSize(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EngineInit">
      <MemberSignature Language="C#" Value="protected abstract void EngineInit (Java.Security.IKey key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EngineInit(class Java.Security.IKey key) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineInit", "(Ljava/security/Key;)V", "GetEngineInit_Ljava_security_Key_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Security.IKey" />
      </Parameters>
      <Docs>
        <param name="key">the key to initialize this instance with.</param>
        <summary tool="true">Initializes this <c>ExemptionMechanism</c> instance with the specified
 key.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Initializes this <c>ExemptionMechanism</c> instance with the specified
 key.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/ExemptionMechanismSpi.html#engineInit(java.security.Key)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the key cannot be used to initialize this mechanism.</exception>
        <exception cref="T:Javax.Crypto.ExemptionMechanismException">if error(s) occur during initialization.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineInit">
      <MemberSignature Language="C#" Value="protected abstract void EngineInit (Java.Security.IKey key, Java.Security.AlgorithmParameters params);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EngineInit(class Java.Security.IKey key, class Java.Security.AlgorithmParameters params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineInit", "(Ljava/security/Key;Ljava/security/AlgorithmParameters;)V", "GetEngineInit_Ljava_security_Key_Ljava_security_AlgorithmParameters_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="params" Type="Java.Security.AlgorithmParameters" />
      </Parameters>
      <Docs>
        <param name="key">the key to initialize this instance with.</param>
        <param name="params">the parameters for this exemption mechanism algorithm.</param>
        <summary>Initializes this <c>ExemptionMechanism</c> instance with the specified
 key and algorithm parameters.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Initializes this <c>ExemptionMechanism</c> instance with the specified
 key and algorithm parameters.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/ExemptionMechanismSpi.html#engineInit(java.security.Key, java.security.AlgorithmParameters)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the key cannot be used to initialize this mechanism.</exception>
        <exception cref="T:Java.Security.InvalidAlgorithmParameterException">if the parameters cannot be used to initialize this
             mechanism.</exception>
        <exception cref="T:Javax.Crypto.ExemptionMechanismException">if error(s) occur during initialization.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineInit">
      <MemberSignature Language="C#" Value="protected abstract void EngineInit (Java.Security.IKey key, Java.Security.Spec.IAlgorithmParameterSpec params);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EngineInit(class Java.Security.IKey key, class Java.Security.Spec.IAlgorithmParameterSpec params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineInit", "(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V", "GetEngineInit_Ljava_security_Key_Ljava_security_spec_AlgorithmParameterSpec_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="params" Type="Java.Security.Spec.IAlgorithmParameterSpec" />
      </Parameters>
      <Docs>
        <param name="key">the key to initialize this instance with.</param>
        <param name="params">the parameters for this exemption mechanism algorithm.</param>
        <summary>Initializes this <c>ExemptionMechanism</c> instance with the specified
 key and algorithm parameters.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Initializes this <c>ExemptionMechanism</c> instance with the specified
 key and algorithm parameters.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/ExemptionMechanismSpi.html#engineInit(java.security.Key, java.security.spec.AlgorithmParameterSpec)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the key cannot be used to initialize this mechanism.</exception>
        <exception cref="T:Java.Security.InvalidAlgorithmParameterException">the the parameters cannot be used to initialize this
             mechanism.</exception>
        <exception cref="T:Javax.Crypto.ExemptionMechanismException">if error(s) occur during initialization.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>