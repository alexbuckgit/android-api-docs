<Type Name="Cipher" FullName="Javax.Crypto.Cipher">
  <TypeSignature Language="C#" Value="public class Cipher : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Cipher extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("javax/crypto/Cipher", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This class provides access to implementations of cryptographic ciphers for
 encryption and decryption.</summary>
    <remarks />
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Cipher (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Cipher (Javax.Crypto.CipherSpi cipherSpi, Java.Security.Provider provider, string transformation);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Javax.Crypto.CipherSpi cipherSpi, class Java.Security.Provider provider, string transformation) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljavax/crypto/CipherSpi;Ljava/security/Provider;Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="cipherSpi" Type="Javax.Crypto.CipherSpi" />
        <Parameter Name="provider" Type="Java.Security.Provider" />
        <Parameter Name="transformation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cipherSpi">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="transformation">To be added.</param>
        <summary>Creates a new Cipher instance.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if either cipherSpi is <c>null</c> or provider is <c>null</c> and <c>cipherSpi</c> is a <c>NullCipherSpi</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Algorithm">
      <MemberSignature Language="C#" Value="public string Algorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Algorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAlgorithm", "()Ljava/lang/String;", "GetGetAlgorithmHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the name of the algorithm of this cipher instance.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BlockSize">
      <MemberSignature Language="C#" Value="public int BlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getBlockSize", "()I", "GetGetBlockSizeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns this ciphers block size (in bytes).</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DecryptMode">
      <MemberSignature Language="C#" Value="public const Javax.Crypto.CipherMode DecryptMode = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Javax.Crypto.CipherMode DecryptMode = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DECRYPT_MODE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Javax.Crypto.CipherMode enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.CipherMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Constant for decryption operation mode.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DoFinal">
      <MemberSignature Language="C#" Value="public byte[] DoFinal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DoFinal() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("doFinal", "()[B", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finishes a multi-part transformation (encryption or decryption).</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the size of the resulting bytes is not a multiple of the
             cipher block size.</exception>
        <exception cref="T:Javax.Crypto.BadPaddingException">if the padding of the data does not match the padding scheme.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DoFinal">
      <MemberSignature Language="C#" Value="public byte[] DoFinal (byte[] input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DoFinal(unsigned int8[] input) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("doFinal", "([B)[B", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="input">the input buffer.</param>
        <summary>Finishes a multi-part transformation (encryption or decryption).</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the size of the resulting bytes is not a multiple of the
             cipher block size.</exception>
        <exception cref="T:Javax.Crypto.BadPaddingException">if the padding of the data does not match the padding scheme.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DoFinal">
      <MemberSignature Language="C#" Value="public int DoFinal (Java.Nio.ByteBuffer input, Java.Nio.ByteBuffer output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 DoFinal(class Java.Nio.ByteBuffer input, class Java.Nio.ByteBuffer output) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("doFinal", "(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="output" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="input">the input buffer.</param>
        <param name="output">the output buffer.</param>
        <summary>Finishes a multi-part transformation (encryption or decryption).</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.ShortBufferException">if the size of the <c>output</c> buffer is too small.</exception>
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the size of the resulting bytes is not a multiple of the
             cipher block size.</exception>
        <exception cref="T:Javax.Crypto.BadPaddingException">if the padding of the data does not match the padding scheme.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the input buffer and the output buffer are the same
             object.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DoFinal">
      <MemberSignature Language="C#" Value="public int DoFinal (byte[] output, int outputOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 DoFinal(unsigned int8[] output, int32 outputOffset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("doFinal", "([BI)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Byte[]" />
        <Parameter Name="outputOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="output">the output buffer.</param>
        <param name="outputOffset">the offset in the output buffer.</param>
        <summary>Finishes a multi-part transformation (encryption or decryption).</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the size of the resulting bytes is not a multiple of the
             cipher block size.</exception>
        <exception cref="T:Javax.Crypto.ShortBufferException">if the size of the <c>output</c> buffer is too small.</exception>
        <exception cref="T:Javax.Crypto.BadPaddingException">if the padding of the data does not match the padding scheme.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DoFinal">
      <MemberSignature Language="C#" Value="public byte[] DoFinal (byte[] input, int inputOffset, int inputLen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DoFinal(unsigned int8[] input, int32 inputOffset, int32 inputLen) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("doFinal", "([BII)[B", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputLen" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">the input buffer.</param>
        <param name="inputOffset">the offset in the input buffer.</param>
        <param name="inputLen">the length of the input</param>
        <summary>Finishes a multi-part transformation (encryption or decryption).</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the size of the resulting bytes is not a multiple of the
             cipher block size.</exception>
        <exception cref="T:Javax.Crypto.BadPaddingException">if the padding of the data does not match the padding scheme.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>inputOffset</c> and <c>inputLen</c> do not specify an
             valid chunk in the input buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DoFinal">
      <MemberSignature Language="C#" Value="public int DoFinal (byte[] input, int inputOffset, int inputLen, byte[] output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 DoFinal(unsigned int8[] input, int32 inputOffset, int32 inputLen, unsigned int8[] output) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("doFinal", "([BII[B)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputLen" Type="System.Int32" />
        <Parameter Name="output" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="input">the input buffer.</param>
        <param name="inputOffset">the offset in the input buffer.</param>
        <param name="inputLen">the length of the input.</param>
        <param name="output">the output buffer for the transformed bytes.</param>
        <summary>Finishes a multi-part transformation (encryption or decryption).</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.ShortBufferException">if the size of the <c>output</c> buffer is too small.</exception>
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the size of the resulting bytes is not a multiple of the
             cipher block size.</exception>
        <exception cref="T:Javax.Crypto.BadPaddingException">if the padding of the data does not match the padding scheme.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>inputOffset</c> and <c>inputLen</c> do not specify an
             valid chunk in the input buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DoFinal">
      <MemberSignature Language="C#" Value="public int DoFinal (byte[] input, int inputOffset, int inputLen, byte[] output, int outputOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 DoFinal(unsigned int8[] input, int32 inputOffset, int32 inputLen, unsigned int8[] output, int32 outputOffset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("doFinal", "([BII[BI)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputLen" Type="System.Int32" />
        <Parameter Name="output" Type="System.Byte[]" />
        <Parameter Name="outputOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">the input buffer.</param>
        <param name="inputOffset">the offset in the input buffer.</param>
        <param name="inputLen">the length of the input.</param>
        <param name="output">the output buffer for the transformed bytes.</param>
        <param name="outputOffset">the offset in the output buffer.</param>
        <summary>Finishes a multi-part transformation (encryption or decryption).</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.ShortBufferException">if the size of the <c>output</c> buffer is too small.</exception>
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the size of the resulting bytes is not a multiple of the
             cipher block size.</exception>
        <exception cref="T:Javax.Crypto.BadPaddingException">if the padding of the data does not match the padding scheme.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>inputOffset</c> and <c>inputLen</c> do not specify an
             valid chunk in the input buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptMode">
      <MemberSignature Language="C#" Value="public const Javax.Crypto.CipherMode EncryptMode = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Javax.Crypto.CipherMode EncryptMode = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ENCRYPT_MODE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Javax.Crypto.CipherMode enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.CipherMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Constant for encryption operation mode.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ExemptionMechanism">
      <MemberSignature Language="C#" Value="public Javax.Crypto.ExemptionMechanism ExemptionMechanism { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Javax.Crypto.ExemptionMechanism ExemptionMechanism" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getExemptionMechanism", "()Ljavax/crypto/ExemptionMechanism;", "GetGetExemptionMechanismHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.ExemptionMechanism</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the exemption mechanism associated with this cipher.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Javax.Crypto.Cipher GetInstance (string transformation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Crypto.Cipher GetInstance(string transformation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInstance", "(Ljava/lang/String;)Ljavax/crypto/Cipher;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.Cipher</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transformation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="transformation">the name of the transformation to create a cipher for.</param>
        <summary tool="true">Creates a new Cipher for the specified transformation.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if no installed provider can provide the
             <format type="text/html"><i>transformation</i></format>, or it is <c>null</c>, empty or in an
             invalid format.</exception>
        <exception cref="T:Javax.Crypto.NoSuchPaddingException">if no installed provider can provide the padding scheme in
             the <format type="text/html"><i>transformation</i></format>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Javax.Crypto.Cipher GetInstance (string transformation, Java.Security.Provider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Crypto.Cipher GetInstance(string transformation, class Java.Security.Provider provider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/Cipher;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.Cipher</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transformation" Type="System.String" />
        <Parameter Name="provider" Type="Java.Security.Provider" />
      </Parameters>
      <Docs>
        <param name="transformation">the name of the transformation to create a cipher for.</param>
        <param name="provider">the provider to ask for the transformation.</param>
        <summary>Creates a new cipher for the specified transformation.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if the specified provider can not provide the
             <format type="text/html"><i>transformation</i></format>, or it is <c>null</c>, empty or in an
             invalid format.</exception>
        <exception cref="T:Javax.Crypto.NoSuchPaddingException">if the requested padding scheme in the <format type="text/html"><i>transformation</i></format>
             is not available.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the provider is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Javax.Crypto.Cipher GetInstance (string transformation, string provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Crypto.Cipher GetInstance(string transformation, string provider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/lang/String;)Ljavax/crypto/Cipher;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.Cipher</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transformation" Type="System.String" />
        <Parameter Name="provider" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="transformation">the name of the transformation to create a cipher for.</param>
        <param name="provider">the name of the provider to ask for the transformation.</param>
        <summary>Creates a new cipher for the specified transformation provided by the
 specified provider.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if the specified provider can not provide the
             <format type="text/html"><i>transformation</i></format>, or it is <c>null</c>, empty or in an
             invalid format.</exception>
        <exception cref="T:Java.Security.NoSuchProviderException">if no provider with the specified name can be found.</exception>
        <exception cref="T:Javax.Crypto.NoSuchPaddingException">if the requested padding scheme in the <format type="text/html"><i>transformation</i></format>
             is not available.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the specified provider is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIV">
      <MemberSignature Language="C#" Value="public byte[] GetIV ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetIV() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getIV", "()[B", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the <format type="text/html"><i>initialization vector</i></format> for this cipher instance.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxAllowedKeyLength">
      <MemberSignature Language="C#" Value="public static int GetMaxAllowedKeyLength (string transformation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetMaxAllowedKeyLength(string transformation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getMaxAllowedKeyLength", "(Ljava/lang/String;)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transformation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="transformation">the transformation name.</param>
        <summary>Returns the maximum key length for the specified transformation.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if no provider for the specified <c>transformation</c> can
             be found.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>transformation</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetMaxAllowedParameterSpec">
      <MemberSignature Language="C#" Value="public static Java.Security.Spec.IAlgorithmParameterSpec GetMaxAllowedParameterSpec (string transformation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Security.Spec.IAlgorithmParameterSpec GetMaxAllowedParameterSpec(string transformation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getMaxAllowedParameterSpec", "(Ljava/lang/String;)Ljava/security/spec/AlgorithmParameterSpec;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Spec.IAlgorithmParameterSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transformation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="transformation">the transformation name.</param>
        <summary>Returns the maximum cipher parameter value for the specified
 transformation.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if no provider for the specified <c>transformation</c> can
             be found.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>transformation</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetOutputSize">
      <MemberSignature Language="C#" Value="public int GetOutputSize (int inputLen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetOutputSize(int32 inputLen) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getOutputSize", "(I)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputLen" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputLen">the number of bytes of the input.</param>
        <summary>Returns the length in bytes an output buffer needs to be when this cipher
 is updated with <c>inputLen</c> bytes.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is in an invalid state.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (Javax.Crypto.CipherMode opmode, Java.Security.Cert.Certificate certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Init(valuetype Javax.Crypto.CipherMode opmode, class Java.Security.Cert.Certificate certificate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("init", "(ILjava/security/cert/Certificate;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opmode" Type="Javax.Crypto.CipherMode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="certificate" Type="Java.Security.Cert.Certificate" />
      </Parameters>
      <Docs>
        <param name="opmode">the operation this cipher instance should be initialized for
            (one of: <c>ENCRYPT_MODE</c>, <c>DECRYPT_MODE</c>, <c>WRAP_MODE</c> or <c>UNWRAP_MODE</c>).</param>
        <param name="certificate">the certificate.</param>
        <summary>Initializes this cipher instance with the public key from the specified
 certificate.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the public key in the certificate can not be used to
             initialize this cipher instance.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (Javax.Crypto.CipherMode opmode, Java.Security.IKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Init(valuetype Javax.Crypto.CipherMode opmode, class Java.Security.IKey key) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("init", "(ILjava/security/Key;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opmode" Type="Javax.Crypto.CipherMode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="key" Type="Java.Security.IKey" />
      </Parameters>
      <Docs>
        <param name="opmode">the operation this cipher instance should be initialized for
            (one of: <c>ENCRYPT_MODE</c>, <c>DECRYPT_MODE</c>, <c>WRAP_MODE</c> or <c>UNWRAP_MODE</c>).</param>
        <param name="key">the input key for the operation.</param>
        <summary>Initializes this cipher instance with the specified key.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key can not be used to initialize this
             cipher instance.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (Javax.Crypto.CipherMode opmode, Java.Security.Cert.Certificate certificate, Java.Security.SecureRandom random);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Init(valuetype Javax.Crypto.CipherMode opmode, class Java.Security.Cert.Certificate certificate, class Java.Security.SecureRandom random) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("init", "(ILjava/security/cert/Certificate;Ljava/security/SecureRandom;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opmode" Type="Javax.Crypto.CipherMode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="certificate" Type="Java.Security.Cert.Certificate" />
        <Parameter Name="random" Type="Java.Security.SecureRandom" />
      </Parameters>
      <Docs>
        <param name="opmode">the operation this cipher instance should be initialized for
            (one of: <c>ENCRYPT_MODE</c>, <c>DECRYPT_MODE</c>, <c>WRAP_MODE</c> or <c>UNWRAP_MODE</c>).</param>
        <param name="certificate">the certificate.</param>
        <param name="random">the source of randomness to be used.</param>
        <summary>Initializes this cipher instance with the public key from the specified
 certificate and a source of randomness.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the public key in the certificate can not be used to
             initialize this cipher instance.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (Javax.Crypto.CipherMode opmode, Java.Security.IKey key, Java.Security.AlgorithmParameters params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Init(valuetype Javax.Crypto.CipherMode opmode, class Java.Security.IKey key, class Java.Security.AlgorithmParameters params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("init", "(ILjava/security/Key;Ljava/security/AlgorithmParameters;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opmode" Type="Javax.Crypto.CipherMode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="params" Type="Java.Security.AlgorithmParameters" />
      </Parameters>
      <Docs>
        <param name="opmode">the operation this cipher instance should be initialized for
            (one of: <c>ENCRYPT_MODE</c>, <c>DECRYPT_MODE</c>, <c>WRAP_MODE</c> or <c>UNWRAP_MODE</c>).</param>
        <param name="key">the input key for the operation.</param>
        <param name="params">the algorithm parameters.</param>
        <summary>Initializes this cipher instance with the specified key and algorithm
 parameters.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key can not be used to initialize this
             cipher instance.</exception>
        <exception cref="T:Java.Security.InvalidAlgorithmParameterException">it the specified parameters are inappropriate for this
             cipher.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (Javax.Crypto.CipherMode opmode, Java.Security.IKey key, Java.Security.SecureRandom random);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Init(valuetype Javax.Crypto.CipherMode opmode, class Java.Security.IKey key, class Java.Security.SecureRandom random) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("init", "(ILjava/security/Key;Ljava/security/SecureRandom;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opmode" Type="Javax.Crypto.CipherMode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="random" Type="Java.Security.SecureRandom" />
      </Parameters>
      <Docs>
        <param name="opmode">the operation this cipher instance should be initialized for
            (one of: <c>ENCRYPT_MODE</c>, <c>DECRYPT_MODE</c>, <c>WRAP_MODE</c> or <c>UNWRAP_MODE</c>).</param>
        <param name="key">the input key for the operation.</param>
        <param name="random">the source of randomness to use.</param>
        <summary>Initializes this cipher instance with the specified key and a source of
 randomness.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key can not be used to initialize this
             cipher instance.</exception>
        <exception cref="T:Java.Security.InvalidParameterException">if the specified opmode is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (Javax.Crypto.CipherMode opmode, Java.Security.IKey key, Java.Security.Spec.IAlgorithmParameterSpec params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Init(valuetype Javax.Crypto.CipherMode opmode, class Java.Security.IKey key, class Java.Security.Spec.IAlgorithmParameterSpec params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("init", "(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opmode" Type="Javax.Crypto.CipherMode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="params" Type="Java.Security.Spec.IAlgorithmParameterSpec" />
      </Parameters>
      <Docs>
        <param name="opmode">the operation this cipher instance should be initialized for
            (one of: <c>ENCRYPT_MODE</c>, <c>DECRYPT_MODE</c>, <c>WRAP_MODE</c> or <c>UNWRAP_MODE</c>).</param>
        <param name="key">the input key for the operation.</param>
        <param name="params">the algorithm parameters.</param>
        <summary>Initializes this cipher instance with the specified key and algorithm
 parameters.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key can not be used to initialize this
             cipher instance.</exception>
        <exception cref="T:Java.Security.InvalidAlgorithmParameterException">it the specified parameters are inappropriate for this
             cipher.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (Javax.Crypto.CipherMode opmode, Java.Security.IKey key, Java.Security.AlgorithmParameters params, Java.Security.SecureRandom random);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Init(valuetype Javax.Crypto.CipherMode opmode, class Java.Security.IKey key, class Java.Security.AlgorithmParameters params, class Java.Security.SecureRandom random) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("init", "(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opmode" Type="Javax.Crypto.CipherMode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="params" Type="Java.Security.AlgorithmParameters" />
        <Parameter Name="random" Type="Java.Security.SecureRandom" />
      </Parameters>
      <Docs>
        <param name="opmode">the operation this cipher instance should be initialized for
            (one of: <c>ENCRYPT_MODE</c>, <c>DECRYPT_MODE</c>, <c>WRAP_MODE</c> or <c>UNWRAP_MODE</c>).</param>
        <param name="key">the input key for the operation.</param>
        <param name="params">the algorithm parameters.</param>
        <param name="random">the source of randomness to use.</param>
        <summary>Initializes this cipher instance with the specified key, algorithm
 parameters and a source of randomness.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key can not be used to initialize this
             cipher instance.</exception>
        <exception cref="T:Java.Security.InvalidAlgorithmParameterException">if the specified parameters are inappropriate for this
             cipher.</exception>
        <exception cref="T:Java.Security.InvalidParameterException">if the specified <c>opmode</c> is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (Javax.Crypto.CipherMode opmode, Java.Security.IKey key, Java.Security.Spec.IAlgorithmParameterSpec params, Java.Security.SecureRandom random);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Init(valuetype Javax.Crypto.CipherMode opmode, class Java.Security.IKey key, class Java.Security.Spec.IAlgorithmParameterSpec params, class Java.Security.SecureRandom random) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("init", "(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opmode" Type="Javax.Crypto.CipherMode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="params" Type="Java.Security.Spec.IAlgorithmParameterSpec" />
        <Parameter Name="random" Type="Java.Security.SecureRandom" />
      </Parameters>
      <Docs>
        <param name="opmode">the operation this cipher instance should be initialized for
            (one of: <c>ENCRYPT_MODE</c>, <c>DECRYPT_MODE</c>, <c>WRAP_MODE</c> or <c>UNWRAP_MODE</c>).</param>
        <param name="key">the input key for the operation.</param>
        <param name="params">the algorithm parameters.</param>
        <param name="random">the source of randomness to use.</param>
        <summary>Initializes this cipher instance with the specified key, algorithm
 parameters and a source of randomness.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key can not be used to initialize this
             cipher instance.</exception>
        <exception cref="T:Java.Security.InvalidAlgorithmParameterException">it the specified parameters are inappropriate for this
             cipher.</exception>
        <exception cref="T:Java.Security.InvalidParameterException">if the specified <c>opmode</c> is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public Java.Security.AlgorithmParameters Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Security.AlgorithmParameters Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getParameters", "()Ljava/security/AlgorithmParameters;", "GetGetParametersHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.AlgorithmParameters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the parameters that where used to create this cipher instance.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PrivateKey">
      <MemberSignature Language="C#" Value="public const Javax.Crypto.KeyType PrivateKey = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Javax.Crypto.KeyType PrivateKey = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PRIVATE_KEY")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Javax.Crypto.KeyType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.KeyType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Constant indicating that the key to be unwrapped is a private key.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public Java.Security.Provider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Security.Provider Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getProvider", "()Ljava/security/Provider;", "GetGetProviderHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Provider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the provider of this cipher instance.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PublicKey">
      <MemberSignature Language="C#" Value="public const Javax.Crypto.KeyType PublicKey = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Javax.Crypto.KeyType PublicKey = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PUBLIC_KEY")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Javax.Crypto.KeyType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.KeyType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Constant indicating that the key to be unwrapped is a public key.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SecretKey">
      <MemberSignature Language="C#" Value="public const Javax.Crypto.KeyType SecretKey = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Javax.Crypto.KeyType SecretKey = (3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SECRET_KEY")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Javax.Crypto.KeyType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.KeyType</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Constant indicating that the key to be unwrapped is a secret key.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Unwrap">
      <MemberSignature Language="C#" Value="public Java.Security.IKey Unwrap (byte[] wrappedKey, string wrappedKeyAlgorithm, Javax.Crypto.KeyType wrappedKeyType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Security.IKey Unwrap(unsigned int8[] wrappedKey, string wrappedKeyAlgorithm, valuetype Javax.Crypto.KeyType wrappedKeyType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unwrap", "([BLjava/lang/String;I)Ljava/security/Key;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.IKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wrappedKey" Type="System.Byte[]" />
        <Parameter Name="wrappedKeyAlgorithm" Type="System.String" />
        <Parameter Name="wrappedKeyType" Type="Javax.Crypto.KeyType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="wrappedKey">the wrapped key to unwrap.</param>
        <param name="wrappedKeyAlgorithm">the algorithm for the wrapped key.</param>
        <param name="wrappedKeyType">the type of the wrapped key (one of: <c>SECRET_KEY
            <c>, <c>PRIVATE_KEY</c> or <c>PUBLIC_KEY</c>)</c></c></param>
        <summary>Unwraps a key using this cipher instance.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the <c>wrappedKey</c> can not be unwrapped to a key of
             type <c>wrappedKeyType</c> for the <c>wrappedKeyAlgorithm</c>.</exception>
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if no provider can be found that can create a key of type
             <c>wrappedKeyType</c> for the <c>wrappedKeyAlgorithm</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for unwrapping.
</exception>
      </Docs>
    </Member>
    <Member MemberName="UnwrapMode">
      <MemberSignature Language="C#" Value="public const Javax.Crypto.CipherMode UnwrapMode = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Javax.Crypto.CipherMode UnwrapMode = (4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("UNWRAP_MODE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Javax.Crypto.CipherMode enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.CipherMode</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Constant for key unwrapping operation mode.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public byte[] Update (byte[] input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Update(unsigned int8[] input) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("update", "([B)[B", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="input">the input bytes to transform.</param>
        <summary>Continues a multi-part transformation (encryption or decryption).</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the input is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (Java.Nio.ByteBuffer input, Java.Nio.ByteBuffer output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class Java.Nio.ByteBuffer input, class Java.Nio.ByteBuffer output) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("update", "(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="output" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="input">the input buffer to transform.</param>
        <param name="output">the output buffer to store the result within.</param>
        <summary>Continues a multi-part transformation (encryption or decryption).</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.ShortBufferException">if the size of the <c>output</c> buffer is too small.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the input buffer and the output buffer are the identical
             object.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public byte[] Update (byte[] input, int inputOffset, int inputLen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Update(unsigned int8[] input, int32 inputOffset, int32 inputLen) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("update", "([BII)[B", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputLen" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">the input bytes to transform.</param>
        <param name="inputOffset">the offset in the input to start.</param>
        <param name="inputLen">the length of the input to transform.</param>
        <summary>Continues a multi-part transformation (encryption or decryption).</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>input</c> is <c>null</c>, or if <c>inputOffset</c> and
             <c>inputLen</c> do not specify a valid chunk in the input
             buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (byte[] input, int inputOffset, int inputLen, byte[] output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(unsigned int8[] input, int32 inputOffset, int32 inputLen, unsigned int8[] output) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("update", "([BII[B)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputLen" Type="System.Int32" />
        <Parameter Name="output" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="input">the input bytes to transform.</param>
        <param name="inputOffset">the offset in the input to start.</param>
        <param name="inputLen">the length of the input to transform.</param>
        <param name="output">the output buffer.</param>
        <summary>Continues a multi-part transformation (encryption or decryption).</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.ShortBufferException">if the size of the <c>output</c> buffer is too small.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the input is <c>null</c>, the output is <c>null</c>, or
             if <c>inputOffset</c> and <c>inputLen</c> do not specify a
             valid chunk in the input buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (byte[] input, int inputOffset, int inputLen, byte[] output, int outputOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(unsigned int8[] input, int32 inputOffset, int32 inputLen, unsigned int8[] output, int32 outputOffset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("update", "([BII[BI)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputLen" Type="System.Int32" />
        <Parameter Name="output" Type="System.Byte[]" />
        <Parameter Name="outputOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">the input bytes to transform.</param>
        <param name="inputOffset">the offset in the input to start.</param>
        <param name="inputLen">the length of the input to transform.</param>
        <param name="output">the output buffer.</param>
        <param name="outputOffset">the offset in the output buffer.</param>
        <summary>Continues a multi-part transformation (encryption or decryption).</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.ShortBufferException">if the size of the <c>output</c> buffer is too small.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the input is <c>null</c>, the output is <c>null</c>, or
             if <c>inputOffset</c> and <c>inputLen</c> do not specify a
             valid chunk in the input buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAAD">
      <MemberSignature Language="C#" Value="public void UpdateAAD (Java.Nio.ByteBuffer input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateAAD(class Java.Nio.ByteBuffer input) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("updateAAD", "(Ljava/nio/ByteBuffer;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="input">buffer of AAD to be used</param>
        <summary>Continues a multi-part transformation (encryption or decryption) with
 Authenticated Additional Data (AAD).</summary>
        <remarks />
        <since version="Added in API level 19" />
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.</exception>
        <exception cref="T:Java.Lang.UnsupportedOperationException">if the cipher does not support AEAD</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAAD">
      <MemberSignature Language="C#" Value="public void UpdateAAD (byte[] input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateAAD(unsigned int8[] input) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("updateAAD", "([B)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="input">bytes of AAD to use with the cipher</param>
        <summary>Continues a multi-part transformation (encryption or decryption) with
 Authenticated Additional Data (AAD).</summary>
        <remarks />
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>input</c> is <c>null</c></exception>
        <exception cref="T:Java.Lang.UnsupportedOperationException">if the cipher does not support AEAD</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAAD">
      <MemberSignature Language="C#" Value="public void UpdateAAD (byte[] input, int inputOffset, int inputLen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateAAD(unsigned int8[] input, int32 inputOffset, int32 inputLen) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("updateAAD", "([BII)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Byte[]" />
        <Parameter Name="p1" Type="System.Int32" />
        <Parameter Name="p2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">bytes of AAD to use with the cipher</param>
        <param name="inputOffset">offset within bytes of additional data to add to cipher</param>
        <param name="inputLen">length of bytes of additional data to add to cipher</param>
        <summary>Continues a multi-part transformation (encryption or decryption) with
 Authenticated Additional Data (AAD).</summary>
        <remarks />
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>input</c> is <c>null</c>, or if <c>inputOffset</c> and
             <c>inputLen</c> do not specify a valid chunk in the input
             buffer.</exception>
        <exception cref="T:Java.Lang.UnsupportedOperationException">if the cipher does not support AEAD</exception>
      </Docs>
    </Member>
    <Member MemberName="Wrap">
      <MemberSignature Language="C#" Value="public byte[] Wrap (Java.Security.IKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Wrap(class Java.Security.IKey key) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("wrap", "(Ljava/security/Key;)[B", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Security.IKey" />
      </Parameters>
      <Docs>
        <param name="key">the key to wrap.</param>
        <summary>Wraps a key using this cipher instance.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the size of the resulting bytes is not a multiple of the
             cipher block size.</exception>
        <exception cref="T:Java.Security.InvalidKeyException">if this cipher instance can not wrap this key.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for wrapping.
</exception>
      </Docs>
    </Member>
    <Member MemberName="WrapMode">
      <MemberSignature Language="C#" Value="public const Javax.Crypto.CipherMode WrapMode = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Javax.Crypto.CipherMode WrapMode = (3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("WRAP_MODE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Javax.Crypto.CipherMode enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.CipherMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Constant for key wrapping operation mode.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
