<Type Name="Cipher" FullName="Javax.Crypto.Cipher">
  <TypeSignature Language="C#" Value="public class Cipher : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Cipher extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("javax/crypto/Cipher", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This class provides access to implementations of cryptographic ciphers for
 encryption and decryption.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">This class provides access to implementations of cryptographic ciphers for
 encryption and decryption. Cipher classes can not be instantiated directly,
 one has to call the Cipher's <c>getInstance</c> method with the name of a
 requested transformation, optionally with a provider. A transformation
 specifies an operation (or a set of operations) as a string in the form:
 <list type="bullet"><item><term><format type="text/html"><i>"algorithm/mode/padding"</i></format></term></item> or
 <item><term><format type="text/html"><i>"algorithm"</i></format></term></item></list><format type="text/html"><i>algorithm</i></format> is the name of a cryptographic algorithm, <format type="text/html"><i>mode</i></format> is the
 name of a feedback mode and <format type="text/html"><i>padding</i></format> is the name of a padding scheme.
 If <format type="text/html"><i>mode</i></format> and/or <format type="text/html"><i>padding</i></format> values are omitted, provider specific
 default values will be used.
 </para>
      <para tool="javadoc-to-mdoc">
 A valid transformation would be:
 <list type="bullet"><c>Cipher c = Cipher.getInstance("AES/CBC/PKCS5Padding");</c></list>
 When a block cipher is requested in in stream cipher mode, the number of bits
 to be processed at a time can be optionally specified by appending it to the
 mode name. e.g. <format type="text/html"><i>"AES/CFB8/NoPadding"</i></format>. If no number is specified, a
 provider specific default value is used.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/javax/crypto/Cipher.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Cipher (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Cipher (Javax.Crypto.CipherSpi cipherSpi, Java.Security.Provider provider, string transformation);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Javax.Crypto.CipherSpi cipherSpi, class Java.Security.Provider provider, string transformation) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljavax/crypto/CipherSpi;Ljava/security/Provider;Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="cipherSpi" Type="Javax.Crypto.CipherSpi" />
        <Parameter Name="provider" Type="Java.Security.Provider" />
        <Parameter Name="transformation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cipherSpi">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="transformation">To be added.</param>
        <summary>Creates a new Cipher instance.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new Cipher instance.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#Cipher(javax.crypto.CipherSpi, java.security.Provider, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if either cipherSpi is <c>null</c> or provider is <c>null</c> and <c>cipherSpi</c> is a <c>NullCipherSpi</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Algorithm">
      <MemberSignature Language="C#" Value="public string Algorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Algorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAlgorithm", "()Ljava/lang/String;", "GetGetAlgorithmHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the name of the algorithm of this cipher instance.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the name of the algorithm of this cipher instance.
 </para>
          <para tool="javadoc-to-mdoc">
 This is the name of the <format type="text/html"><i>transformation</i></format> argument used in the
 <c>getInstance</c> call creating this object.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#getAlgorithm()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BlockSize">
      <MemberSignature Language="C#" Value="public int BlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getBlockSize", "()I", "GetGetBlockSizeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns this ciphers block size (in bytes).</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns this ciphers block size (in bytes).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#getBlockSize()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DecryptMode">
      <MemberSignature Language="C#" Value="public const Javax.Crypto.CipherMode DecryptMode = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Javax.Crypto.CipherMode DecryptMode = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DECRYPT_MODE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Javax.Crypto.CipherMode enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.CipherMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Constant for decryption operation mode.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constant for decryption operation mode.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#DECRYPT_MODE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DoFinal">
      <MemberSignature Language="C#" Value="public byte[] DoFinal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DoFinal() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("doFinal", "()[B", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finishes a multi-part transformation (encryption or decryption).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Finishes a multi-part transformation (encryption or decryption).
 </para>
          <para tool="javadoc-to-mdoc">
 Processes any bytes that may have been buffered in previous <c>update</c> calls.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#doFinal()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the size of the resulting bytes is not a multiple of the
             cipher block size.</exception>
        <exception cref="T:Javax.Crypto.BadPaddingException">if the padding of the data does not match the padding scheme.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DoFinal">
      <MemberSignature Language="C#" Value="public byte[] DoFinal (byte[] input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DoFinal(unsigned int8[] input) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("doFinal", "([B)[B", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="input">the input buffer.</param>
        <summary>Finishes a multi-part transformation (encryption or decryption).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Finishes a multi-part transformation (encryption or decryption).
 </para>
          <para tool="javadoc-to-mdoc">
 Processes the bytes in <c>input</c> buffer, and any bytes that have been
 buffered in previous <c>update</c> calls.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#doFinal(byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the size of the resulting bytes is not a multiple of the
             cipher block size.</exception>
        <exception cref="T:Javax.Crypto.BadPaddingException">if the padding of the data does not match the padding scheme.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DoFinal">
      <MemberSignature Language="C#" Value="public int DoFinal (Java.Nio.ByteBuffer input, Java.Nio.ByteBuffer output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 DoFinal(class Java.Nio.ByteBuffer input, class Java.Nio.ByteBuffer output) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("doFinal", "(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="output" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="input">the input buffer.</param>
        <param name="output">the output buffer.</param>
        <summary>Finishes a multi-part transformation (encryption or decryption).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Finishes a multi-part transformation (encryption or decryption).
 </para>
          <para tool="javadoc-to-mdoc">
 Processes the <c>input.remaining()</c> bytes in <c>input</c> buffer at
 <c>input.position()</c>, and any bytes that have been buffered in
 previous <c>update</c> calls. The transformed bytes are placed into
 <c>output</c> buffer.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#doFinal(java.nio.ByteBuffer, java.nio.ByteBuffer)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.ShortBufferException">if the size of the <c>output</c> buffer is too small.</exception>
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the size of the resulting bytes is not a multiple of the
             cipher block size.</exception>
        <exception cref="T:Javax.Crypto.BadPaddingException">if the padding of the data does not match the padding scheme.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the input buffer and the output buffer are the same
             object.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DoFinal">
      <MemberSignature Language="C#" Value="public int DoFinal (byte[] output, int outputOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 DoFinal(unsigned int8[] output, int32 outputOffset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("doFinal", "([BI)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Byte[]" />
        <Parameter Name="outputOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="output">the output buffer.</param>
        <param name="outputOffset">the offset in the output buffer.</param>
        <summary>Finishes a multi-part transformation (encryption or decryption).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Finishes a multi-part transformation (encryption or decryption).
 </para>
          <para tool="javadoc-to-mdoc">
 Processes any bytes that may have been buffered in previous <c>update</c> calls.
 </para>
          <para tool="javadoc-to-mdoc">
 The final transformed bytes are stored in the <c>output</c> buffer.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#doFinal(byte[], int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the size of the resulting bytes is not a multiple of the
             cipher block size.</exception>
        <exception cref="T:Javax.Crypto.ShortBufferException">if the size of the <c>output</c> buffer is too small.</exception>
        <exception cref="T:Javax.Crypto.BadPaddingException">if the padding of the data does not match the padding scheme.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DoFinal">
      <MemberSignature Language="C#" Value="public byte[] DoFinal (byte[] input, int inputOffset, int inputLen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] DoFinal(unsigned int8[] input, int32 inputOffset, int32 inputLen) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("doFinal", "([BII)[B", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputLen" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">the input buffer.</param>
        <param name="inputOffset">the offset in the input buffer.</param>
        <param name="inputLen">the length of the input</param>
        <summary>Finishes a multi-part transformation (encryption or decryption).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Finishes a multi-part transformation (encryption or decryption).
 </para>
          <para tool="javadoc-to-mdoc">
 Processes the <c>inputLen</c> bytes in <c>input</c> buffer at <c>inputOffset</c>, and any bytes that have been buffered in previous <c>update</c> calls.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#doFinal(byte[], int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the size of the resulting bytes is not a multiple of the
             cipher block size.</exception>
        <exception cref="T:Javax.Crypto.BadPaddingException">if the padding of the data does not match the padding scheme.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>inputOffset</c> and <c>inputLen</c> do not specify an
             valid chunk in the input buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DoFinal">
      <MemberSignature Language="C#" Value="public int DoFinal (byte[] input, int inputOffset, int inputLen, byte[] output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 DoFinal(unsigned int8[] input, int32 inputOffset, int32 inputLen, unsigned int8[] output) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("doFinal", "([BII[B)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputLen" Type="System.Int32" />
        <Parameter Name="output" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="input">the input buffer.</param>
        <param name="inputOffset">the offset in the input buffer.</param>
        <param name="inputLen">the length of the input.</param>
        <param name="output">the output buffer for the transformed bytes.</param>
        <summary>Finishes a multi-part transformation (encryption or decryption).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Finishes a multi-part transformation (encryption or decryption).
 </para>
          <para tool="javadoc-to-mdoc">
 Processes the <c>inputLen</c> bytes in <c>input</c> buffer at <c>inputOffset</c>, and any bytes that have been buffered in previous <c>update</c> calls.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#doFinal(byte[], int, int, byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.ShortBufferException">if the size of the <c>output</c> buffer is too small.</exception>
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the size of the resulting bytes is not a multiple of the
             cipher block size.</exception>
        <exception cref="T:Javax.Crypto.BadPaddingException">if the padding of the data does not match the padding scheme.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>inputOffset</c> and <c>inputLen</c> do not specify an
             valid chunk in the input buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DoFinal">
      <MemberSignature Language="C#" Value="public int DoFinal (byte[] input, int inputOffset, int inputLen, byte[] output, int outputOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 DoFinal(unsigned int8[] input, int32 inputOffset, int32 inputLen, unsigned int8[] output, int32 outputOffset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("doFinal", "([BII[BI)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputLen" Type="System.Int32" />
        <Parameter Name="output" Type="System.Byte[]" />
        <Parameter Name="outputOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">the input buffer.</param>
        <param name="inputOffset">the offset in the input buffer.</param>
        <param name="inputLen">the length of the input.</param>
        <param name="output">the output buffer for the transformed bytes.</param>
        <param name="outputOffset">the offset in the output buffer.</param>
        <summary>Finishes a multi-part transformation (encryption or decryption).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Finishes a multi-part transformation (encryption or decryption).
 </para>
          <para tool="javadoc-to-mdoc">
 Processes the <c>inputLen</c> bytes in <c>input</c> buffer at <c>inputOffset</c>, and any bytes that have been buffered in previous <c>update</c> calls.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#doFinal(byte[], int, int, byte[], int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.ShortBufferException">if the size of the <c>output</c> buffer is too small.</exception>
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the size of the resulting bytes is not a multiple of the
             cipher block size.</exception>
        <exception cref="T:Javax.Crypto.BadPaddingException">if the padding of the data does not match the padding scheme.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>inputOffset</c> and <c>inputLen</c> do not specify an
             valid chunk in the input buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptMode">
      <MemberSignature Language="C#" Value="public const Javax.Crypto.CipherMode EncryptMode = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Javax.Crypto.CipherMode EncryptMode = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ENCRYPT_MODE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Javax.Crypto.CipherMode enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.CipherMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Constant for encryption operation mode.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constant for encryption operation mode.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#ENCRYPT_MODE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ExemptionMechanism">
      <MemberSignature Language="C#" Value="public Javax.Crypto.ExemptionMechanism ExemptionMechanism { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Javax.Crypto.ExemptionMechanism ExemptionMechanism" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getExemptionMechanism", "()Ljavax/crypto/ExemptionMechanism;", "GetGetExemptionMechanismHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.ExemptionMechanism</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the exemption mechanism associated with this cipher.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the exemption mechanism associated with this cipher.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#getExemptionMechanism()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Javax.Crypto.Cipher GetInstance (string transformation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Crypto.Cipher GetInstance(string transformation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInstance", "(Ljava/lang/String;)Ljavax/crypto/Cipher;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.Cipher</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transformation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="transformation">the name of the transformation to create a cipher for.</param>
        <summary>Creates a new Cipher for the specified transformation.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new Cipher for the specified transformation. The installed
 providers are searched in order for an implementation of the specified
 transformation. The first found provider providing the transformation is
 used to create the cipher. If no provider is found an exception is
 thrown.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#getInstance(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if no installed provider can provide the
             <format type="text/html"><i>transformation</i></format>, or it is <c>null</c>, empty or in an
             invalid format.</exception>
        <exception cref="T:Javax.Crypto.NoSuchPaddingException">if no installed provider can provide the padding scheme in
             the <format type="text/html"><i>transformation</i></format>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Javax.Crypto.Cipher GetInstance (string transformation, Java.Security.Provider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Crypto.Cipher GetInstance(string transformation, class Java.Security.Provider provider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/Cipher;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.Cipher</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transformation" Type="System.String" />
        <Parameter Name="provider" Type="Java.Security.Provider" />
      </Parameters>
      <Docs>
        <param name="transformation">the name of the transformation to create a cipher for.</param>
        <param name="provider">the provider to ask for the transformation.</param>
        <summary>Creates a new cipher for the specified transformation.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new cipher for the specified transformation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#getInstance(java.lang.String, java.security.Provider)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if the specified provider can not provide the
             <format type="text/html"><i>transformation</i></format>, or it is <c>null</c>, empty or in an
             invalid format.</exception>
        <exception cref="T:Javax.Crypto.NoSuchPaddingException">if the requested padding scheme in the <format type="text/html"><i>transformation</i></format>
             is not available.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the provider is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Javax.Crypto.Cipher GetInstance (string transformation, string provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Crypto.Cipher GetInstance(string transformation, string provider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/lang/String;)Ljavax/crypto/Cipher;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.Cipher</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transformation" Type="System.String" />
        <Parameter Name="provider" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="transformation">the name of the transformation to create a cipher for.</param>
        <param name="provider">the name of the provider to ask for the transformation.</param>
        <summary>Creates a new cipher for the specified transformation provided by the
 specified provider.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new cipher for the specified transformation provided by the
 specified provider.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#getInstance(java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if the specified provider can not provide the
             <format type="text/html"><i>transformation</i></format>, or it is <c>null</c>, empty or in an
             invalid format.</exception>
        <exception cref="T:Java.Security.NoSuchProviderException">if no provider with the specified name can be found.</exception>
        <exception cref="T:Javax.Crypto.NoSuchPaddingException">if the requested padding scheme in the <format type="text/html"><i>transformation</i></format>
             is not available.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the specified provider is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetIV">
      <MemberSignature Language="C#" Value="public byte[] GetIV ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetIV() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getIV", "()[B", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the <format type="text/html"><i>initialization vector</i></format> for this cipher instance.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the <format type="text/html"><i>initialization vector</i></format> for this cipher instance.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#getIV()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxAllowedKeyLength">
      <MemberSignature Language="C#" Value="public static int GetMaxAllowedKeyLength (string transformation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetMaxAllowedKeyLength(string transformation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getMaxAllowedKeyLength", "(Ljava/lang/String;)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transformation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="transformation">the transformation name.</param>
        <summary>Returns the maximum key length for the specified transformation.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the maximum key length for the specified transformation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#getMaxAllowedKeyLength(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if no provider for the specified <c>transformation</c> can
             be found.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>transformation</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetMaxAllowedParameterSpec">
      <MemberSignature Language="C#" Value="public static Java.Security.Spec.IAlgorithmParameterSpec GetMaxAllowedParameterSpec (string transformation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Security.Spec.IAlgorithmParameterSpec GetMaxAllowedParameterSpec(string transformation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getMaxAllowedParameterSpec", "(Ljava/lang/String;)Ljava/security/spec/AlgorithmParameterSpec;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Spec.IAlgorithmParameterSpec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transformation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="transformation">the transformation name.</param>
        <summary>Returns the maximum cipher parameter value for the specified
 transformation.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the maximum cipher parameter value for the specified
 transformation. If there is no maximum limit, <c>null</c> is returned.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#getMaxAllowedParameterSpec(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if no provider for the specified <c>transformation</c> can
             be found.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>transformation</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetOutputSize">
      <MemberSignature Language="C#" Value="public int GetOutputSize (int inputLen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetOutputSize(int32 inputLen) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getOutputSize", "(I)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputLen" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputLen">the number of bytes of the input.</param>
        <summary>Returns the length in bytes an output buffer needs to be when this cipher
 is updated with <c>inputLen</c> bytes.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the length in bytes an output buffer needs to be when this cipher
 is updated with <c>inputLen</c> bytes.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#getOutputSize(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is in an invalid state.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (Javax.Crypto.CipherMode opmode, Java.Security.Cert.Certificate certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Init(valuetype Javax.Crypto.CipherMode opmode, class Java.Security.Cert.Certificate certificate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("init", "(ILjava/security/cert/Certificate;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opmode" Type="Javax.Crypto.CipherMode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="certificate" Type="Java.Security.Cert.Certificate" />
      </Parameters>
      <Docs>
        <param name="opmode">the operation this cipher instance should be initialized for
            (one of: <c>ENCRYPT_MODE</c>, <c>DECRYPT_MODE</c>, <c>WRAP_MODE</c> or <c>UNWRAP_MODE</c>).</param>
        <param name="certificate">the certificate.</param>
        <summary>Initializes this cipher instance with the public key from the specified
 certificate.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Initializes this cipher instance with the public key from the specified
 certificate.
 </para>
          <para tool="javadoc-to-mdoc">
 The cipher will be initialized for the specified operation (one of:
 encryption, decryption, key wrapping or key unwrapping) depending on
 <c>opmode</c>.
 </para>
          <para tool="javadoc-to-mdoc">
 It the type of the certificate is X.509 and the certificate has a <format type="text/html"><i>key
 usage</i></format> extension field marked as critical, the specified <c>opmode</c> has the be enabled for this key, otherwise an <c>InvalidKeyException</c> is thrown.
 </para>
          <para tool="javadoc-to-mdoc">
 If this cipher instance needs any algorithm parameters that the key in
 the certificate can not provide, the underlying implementation of this
 cipher is supposed to generate the required parameters (using its
 provider or random values).
 </para>
          <para tool="javadoc-to-mdoc">
 When a cipher instance is initialized by a call to any of the <c>init</c> methods, the state of the instance is overridden, means it is
 equivalent to creating a new instance and calling it <c>init</c> method.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#init(int, java.security.cert.Certificate)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the public key in the certificate can not be used to
             initialize this cipher instance.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (Javax.Crypto.CipherMode opmode, Java.Security.IKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Init(valuetype Javax.Crypto.CipherMode opmode, class Java.Security.IKey key) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("init", "(ILjava/security/Key;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opmode" Type="Javax.Crypto.CipherMode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="key" Type="Java.Security.IKey" />
      </Parameters>
      <Docs>
        <param name="opmode">the operation this cipher instance should be initialized for
            (one of: <c>ENCRYPT_MODE</c>, <c>DECRYPT_MODE</c>, <c>WRAP_MODE</c> or <c>UNWRAP_MODE</c>).</param>
        <param name="key">the input key for the operation.</param>
        <summary>Initializes this cipher instance with the specified key.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Initializes this cipher instance with the specified key.
 </para>
          <para tool="javadoc-to-mdoc">
 The cipher is initialized for the specified operational mode (one of:
 encryption, decryption, key wrapping or key unwrapping) depending on
 <c>opmode</c>.
 </para>
          <para tool="javadoc-to-mdoc">
 If this cipher instance needs any algorithm parameters or random values
 that the specified key can not provide, the underlying implementation of
 this cipher is supposed to generate the required parameters (using its
 provider or random values).
 </para>
          <para tool="javadoc-to-mdoc">
 When a cipher instance is initialized by a call to any of the <c>init</c> methods, the state of the instance is overridden, meaning that it
 is equivalent to creating a new instance and calling its <c>init</c>
 method.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#init(int, java.security.Key)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key can not be used to initialize this
             cipher instance.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (Javax.Crypto.CipherMode opmode, Java.Security.Cert.Certificate certificate, Java.Security.SecureRandom random);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Init(valuetype Javax.Crypto.CipherMode opmode, class Java.Security.Cert.Certificate certificate, class Java.Security.SecureRandom random) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("init", "(ILjava/security/cert/Certificate;Ljava/security/SecureRandom;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opmode" Type="Javax.Crypto.CipherMode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="certificate" Type="Java.Security.Cert.Certificate" />
        <Parameter Name="random" Type="Java.Security.SecureRandom" />
      </Parameters>
      <Docs>
        <param name="opmode">the operation this cipher instance should be initialized for
            (one of: <c>ENCRYPT_MODE</c>, <c>DECRYPT_MODE</c>, <c>WRAP_MODE</c> or <c>UNWRAP_MODE</c>).</param>
        <param name="certificate">the certificate.</param>
        <param name="random">the source of randomness to be used.</param>
        <summary>Initializes this cipher instance with the public key from the specified
 certificate and a source of randomness.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Initializes this cipher instance with the public key from the specified
 certificate and a source of randomness.
 </para>
          <para tool="javadoc-to-mdoc">
 The cipher will be initialized for the specified operation (one of:
 encryption, decryption, key wrapping or key unwrapping) depending on
 <c>opmode</c>.
 </para>
          <para tool="javadoc-to-mdoc">
 It the type of the certificate is X.509 and the certificate has a <format type="text/html"><i>key
 usage</i></format> extension field marked as critical, the specified <c>opmode</c> has the be enabled for this key, otherwise an <c>InvalidKeyException</c> is thrown.
 </para>
          <para tool="javadoc-to-mdoc">
 If this cipher instance needs any algorithm parameters that the key in
 the certificate can not provide, the underlying implementation of this
 cipher is supposed to generate the required parameters (using its
 provider or random values). Random values are generated using <c>random</c>.
 </para>
          <para tool="javadoc-to-mdoc">
 When a cipher instance is initialized by a call to any of the <c>init</c> methods, the state of the instance is overridden, means it is
 equivalent to creating a new instance and calling it <c>init</c> method.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#init(int, java.security.cert.Certificate, java.security.SecureRandom)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the public key in the certificate can not be used to
             initialize this cipher instance.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (Javax.Crypto.CipherMode opmode, Java.Security.IKey key, Java.Security.AlgorithmParameters params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Init(valuetype Javax.Crypto.CipherMode opmode, class Java.Security.IKey key, class Java.Security.AlgorithmParameters params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("init", "(ILjava/security/Key;Ljava/security/AlgorithmParameters;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opmode" Type="Javax.Crypto.CipherMode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="params" Type="Java.Security.AlgorithmParameters" />
      </Parameters>
      <Docs>
        <param name="opmode">the operation this cipher instance should be initialized for
            (one of: <c>ENCRYPT_MODE</c>, <c>DECRYPT_MODE</c>, <c>WRAP_MODE</c> or <c>UNWRAP_MODE</c>).</param>
        <param name="key">the input key for the operation.</param>
        <param name="params">the algorithm parameters.</param>
        <summary>Initializes this cipher instance with the specified key and algorithm
 parameters.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Initializes this cipher instance with the specified key and algorithm
 parameters.
 </para>
          <para tool="javadoc-to-mdoc">
 The cipher is initialized for the specified operation (one of:
 encryption, decryption, key wrapping or key unwrapping) depending on
 <c>opmode</c>.
 </para>
          <para tool="javadoc-to-mdoc">
 If this cipher instance needs any algorithm parameters and <c>params</c>
 is <c>null</c>, the underlying implementation of this cipher is supposed
 to generate the required parameters (using its provider or random
 values).
 </para>
          <para tool="javadoc-to-mdoc">
 When a cipher instance is initialized by a call to any of the <c>init</c> methods, the state of the instance is overridden, meaning that it
 is equivalent to creating a new instance and calling it <c>init</c>
 method.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#init(int, java.security.Key, java.security.AlgorithmParameters)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key can not be used to initialize this
             cipher instance.</exception>
        <exception cref="T:Java.Security.InvalidAlgorithmParameterException">it the specified parameters are inappropriate for this
             cipher.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (Javax.Crypto.CipherMode opmode, Java.Security.IKey key, Java.Security.SecureRandom random);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Init(valuetype Javax.Crypto.CipherMode opmode, class Java.Security.IKey key, class Java.Security.SecureRandom random) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("init", "(ILjava/security/Key;Ljava/security/SecureRandom;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opmode" Type="Javax.Crypto.CipherMode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="random" Type="Java.Security.SecureRandom" />
      </Parameters>
      <Docs>
        <param name="opmode">the operation this cipher instance should be initialized for
            (one of: <c>ENCRYPT_MODE</c>, <c>DECRYPT_MODE</c>, <c>WRAP_MODE</c> or <c>UNWRAP_MODE</c>).</param>
        <param name="key">the input key for the operation.</param>
        <param name="random">the source of randomness to use.</param>
        <summary>Initializes this cipher instance with the specified key and a source of
 randomness.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Initializes this cipher instance with the specified key and a source of
 randomness.
 </para>
          <para tool="javadoc-to-mdoc">
 The cipher is initialized for the specified operational mode (one of:
 encryption, decryption, key wrapping or key unwrapping) depending on
 <c>opmode</c>.
 </para>
          <para tool="javadoc-to-mdoc">
 If this cipher instance needs any algorithm parameters or random values
 that the specified key can not provide, the underlying implementation of
 this cipher is supposed to generate the required parameters (using its
 provider or random values). Random values are generated using <c>random</c>;
 </para>
          <para tool="javadoc-to-mdoc">
 When a cipher instance is initialized by a call to any of the <c>init</c> methods, the state of the instance is overridden, means it is
 equivalent to creating a new instance and calling it <c>init</c> method.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#init(int, java.security.Key, java.security.SecureRandom)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key can not be used to initialize this
             cipher instance.</exception>
        <exception cref="T:Java.Security.InvalidParameterException">if the specified opmode is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (Javax.Crypto.CipherMode opmode, Java.Security.IKey key, Java.Security.Spec.IAlgorithmParameterSpec params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Init(valuetype Javax.Crypto.CipherMode opmode, class Java.Security.IKey key, class Java.Security.Spec.IAlgorithmParameterSpec params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("init", "(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opmode" Type="Javax.Crypto.CipherMode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="params" Type="Java.Security.Spec.IAlgorithmParameterSpec" />
      </Parameters>
      <Docs>
        <param name="opmode">the operation this cipher instance should be initialized for
            (one of: <c>ENCRYPT_MODE</c>, <c>DECRYPT_MODE</c>, <c>WRAP_MODE</c> or <c>UNWRAP_MODE</c>).</param>
        <param name="key">the input key for the operation.</param>
        <param name="params">the algorithm parameters.</param>
        <summary>Initializes this cipher instance with the specified key and algorithm
 parameters.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Initializes this cipher instance with the specified key and algorithm
 parameters.
 </para>
          <para tool="javadoc-to-mdoc">
 The cipher is initialized for the specified operational mode (one of:
 encryption, decryption, key wrapping or key unwrapping).
 </para>
          <para tool="javadoc-to-mdoc">
 If this cipher instance needs any algorithm parameters and <c>params</c>
 is <c>null</c>, the underlying implementation of this cipher is supposed
 to generate the required parameters (using its provider or random
 values).
 </para>
          <para tool="javadoc-to-mdoc">
 When a cipher instance is initialized by a call to any of the <c>init</c> methods, the state of the instance is overridden, means it is
 equivalent to creating a new instance and calling it <c>init</c> method.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#init(int, java.security.Key, java.security.spec.AlgorithmParameterSpec)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key can not be used to initialize this
             cipher instance.</exception>
        <exception cref="T:Java.Security.InvalidAlgorithmParameterException">it the specified parameters are inappropriate for this
             cipher.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (Javax.Crypto.CipherMode opmode, Java.Security.IKey key, Java.Security.AlgorithmParameters params, Java.Security.SecureRandom random);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Init(valuetype Javax.Crypto.CipherMode opmode, class Java.Security.IKey key, class Java.Security.AlgorithmParameters params, class Java.Security.SecureRandom random) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("init", "(ILjava/security/Key;Ljava/security/AlgorithmParameters;Ljava/security/SecureRandom;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opmode" Type="Javax.Crypto.CipherMode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="params" Type="Java.Security.AlgorithmParameters" />
        <Parameter Name="random" Type="Java.Security.SecureRandom" />
      </Parameters>
      <Docs>
        <param name="opmode">the operation this cipher instance should be initialized for
            (one of: <c>ENCRYPT_MODE</c>, <c>DECRYPT_MODE</c>, <c>WRAP_MODE</c> or <c>UNWRAP_MODE</c>).</param>
        <param name="key">the input key for the operation.</param>
        <param name="params">the algorithm parameters.</param>
        <param name="random">the source of randomness to use.</param>
        <summary>Initializes this cipher instance with the specified key, algorithm
 parameters and a source of randomness.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Initializes this cipher instance with the specified key, algorithm
 parameters and a source of randomness.
 </para>
          <para tool="javadoc-to-mdoc">
 The cipher will be initialized for the specified operation (one of:
 encryption, decryption, key wrapping or key unwrapping) depending on
 <c>opmode</c>.
 </para>
          <para tool="javadoc-to-mdoc">
 If this cipher instance needs any algorithm parameters and <c>params</c>
 is <c>null</c>, the underlying implementation of this cipher is supposed
 to generate the required parameters (using its provider or random
 values). Random values are generated using <c>random</c>.
 </para>
          <para tool="javadoc-to-mdoc">
 When a cipher instance is initialized by a call to any of the <c>init</c> methods, the state of the instance is overridden, means it is
 equivalent to creating a new instance and calling it <c>init</c> method.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#init(int, java.security.Key, java.security.AlgorithmParameters, java.security.SecureRandom)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key can not be used to initialize this
             cipher instance.</exception>
        <exception cref="T:Java.Security.InvalidAlgorithmParameterException">if the specified parameters are inappropriate for this
             cipher.</exception>
        <exception cref="T:Java.Security.InvalidParameterException">if the specified <c>opmode</c> is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (Javax.Crypto.CipherMode opmode, Java.Security.IKey key, Java.Security.Spec.IAlgorithmParameterSpec params, Java.Security.SecureRandom random);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Init(valuetype Javax.Crypto.CipherMode opmode, class Java.Security.IKey key, class Java.Security.Spec.IAlgorithmParameterSpec params, class Java.Security.SecureRandom random) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("init", "(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opmode" Type="Javax.Crypto.CipherMode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="params" Type="Java.Security.Spec.IAlgorithmParameterSpec" />
        <Parameter Name="random" Type="Java.Security.SecureRandom" />
      </Parameters>
      <Docs>
        <param name="opmode">the operation this cipher instance should be initialized for
            (one of: <c>ENCRYPT_MODE</c>, <c>DECRYPT_MODE</c>, <c>WRAP_MODE</c> or <c>UNWRAP_MODE</c>).</param>
        <param name="key">the input key for the operation.</param>
        <param name="params">the algorithm parameters.</param>
        <param name="random">the source of randomness to use.</param>
        <summary>Initializes this cipher instance with the specified key, algorithm
 parameters and a source of randomness.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Initializes this cipher instance with the specified key, algorithm
 parameters and a source of randomness.
 </para>
          <para tool="javadoc-to-mdoc">
 The cipher is initialized for the specified operational mode (one of:
 encryption, decryption, key wrapping or key unwrapping) depending on
 <c>opmode</c>.
 </para>
          <para tool="javadoc-to-mdoc">
 If this cipher instance needs any algorithm parameters and <c>params</c>
 is <c>null</c>, the underlying implementation of this cipher is supposed
 to generate the required parameters (using its provider or random
 values). Random values are generated using <c>random</c>;
 </para>
          <para tool="javadoc-to-mdoc">
 When a cipher instance is initialized by a call to any of the <c>init</c> methods, the state of the instance is overridden, meaning that it
 is equivalent to creating a new instance and calling it <c>init</c>
 method.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#init(int, java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key can not be used to initialize this
             cipher instance.</exception>
        <exception cref="T:Java.Security.InvalidAlgorithmParameterException">it the specified parameters are inappropriate for this
             cipher.</exception>
        <exception cref="T:Java.Security.InvalidParameterException">if the specified <c>opmode</c> is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public Java.Security.AlgorithmParameters Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Security.AlgorithmParameters Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getParameters", "()Ljava/security/AlgorithmParameters;", "GetGetParametersHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.AlgorithmParameters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the parameters that where used to create this cipher instance.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the parameters that where used to create this cipher instance.
 </para>
          <para tool="javadoc-to-mdoc">
 These may be a the same parameters that were used to create this cipher
 instance, or may be a combination of default and random parameters,
 depending on the underlying cipher implementation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#getParameters()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PrivateKey">
      <MemberSignature Language="C#" Value="public const Javax.Crypto.KeyType PrivateKey = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Javax.Crypto.KeyType PrivateKey = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PRIVATE_KEY")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Javax.Crypto.KeyType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.KeyType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Constant indicating that the key to be unwrapped is a private key.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constant indicating that the key to be unwrapped is a private key.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#PRIVATE_KEY" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public Java.Security.Provider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Security.Provider Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getProvider", "()Ljava/security/Provider;", "GetGetProviderHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Provider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the provider of this cipher instance.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the provider of this cipher instance.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#getProvider()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PublicKey">
      <MemberSignature Language="C#" Value="public const Javax.Crypto.KeyType PublicKey = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Javax.Crypto.KeyType PublicKey = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PUBLIC_KEY")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Javax.Crypto.KeyType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.KeyType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Constant indicating that the key to be unwrapped is a public key.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constant indicating that the key to be unwrapped is a public key.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#PUBLIC_KEY" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SecretKey">
      <MemberSignature Language="C#" Value="public const Javax.Crypto.KeyType SecretKey = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Javax.Crypto.KeyType SecretKey = (3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SECRET_KEY")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Javax.Crypto.KeyType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.KeyType</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Constant indicating that the key to be unwrapped is a secret key.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constant indicating that the key to be unwrapped is a secret key.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#SECRET_KEY" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unwrap">
      <MemberSignature Language="C#" Value="public Java.Security.IKey Unwrap (byte[] wrappedKey, string wrappedKeyAlgorithm, Javax.Crypto.KeyType wrappedKeyType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Security.IKey Unwrap(unsigned int8[] wrappedKey, string wrappedKeyAlgorithm, valuetype Javax.Crypto.KeyType wrappedKeyType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unwrap", "([BLjava/lang/String;I)Ljava/security/Key;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.IKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wrappedKey" Type="System.Byte[]" />
        <Parameter Name="wrappedKeyAlgorithm" Type="System.String" />
        <Parameter Name="wrappedKeyType" Type="Javax.Crypto.KeyType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="wrappedKey">the wrapped key to unwrap.</param>
        <param name="wrappedKeyAlgorithm">the algorithm for the wrapped key.</param>
        <param name="wrappedKeyType">the type of the wrapped key (one of: <c>SECRET_KEY
            <c>, <c>PRIVATE_KEY</c> or <c>PUBLIC_KEY</c>)</c></c></param>
        <summary>Unwraps a key using this cipher instance.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Unwraps a key using this cipher instance.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#unwrap(byte[], java.lang.String, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the <c>wrappedKey</c> can not be unwrapped to a key of
             type <c>wrappedKeyType</c> for the <c>wrappedKeyAlgorithm</c>.</exception>
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if no provider can be found that can create a key of type
             <c>wrappedKeyType</c> for the <c>wrappedKeyAlgorithm</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for unwrapping.
</exception>
      </Docs>
    </Member>
    <Member MemberName="UnwrapMode">
      <MemberSignature Language="C#" Value="public const Javax.Crypto.CipherMode UnwrapMode = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Javax.Crypto.CipherMode UnwrapMode = (4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("UNWRAP_MODE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Javax.Crypto.CipherMode enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.CipherMode</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Constant for key unwrapping operation mode.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constant for key unwrapping operation mode.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#UNWRAP_MODE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public byte[] Update (byte[] input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Update(unsigned int8[] input) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("update", "([B)[B", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="input">the input bytes to transform.</param>
        <summary>Continues a multi-part transformation (encryption or decryption).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Continues a multi-part transformation (encryption or decryption). The
 transformed bytes are returned.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#update(byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the input is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (Java.Nio.ByteBuffer input, Java.Nio.ByteBuffer output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class Java.Nio.ByteBuffer input, class Java.Nio.ByteBuffer output) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("update", "(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="output" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="input">the input buffer to transform.</param>
        <param name="output">the output buffer to store the result within.</param>
        <summary>Continues a multi-part transformation (encryption or decryption).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Continues a multi-part transformation (encryption or decryption). The
 <c>input.remaining()</c> bytes starting at <c>input.position()</c> are
 transformed and stored in the <c>output</c> buffer.
 </para>
          <para tool="javadoc-to-mdoc">
 If the <c>output.remaining()</c> is too small to hold the transformed
 bytes a <c>ShortBufferException</c> is thrown. Use
 <c><see cref="M:Javax.Crypto.Cipher.GetOutputSize(System.Int32)" /></c> to check for the size of the
 output buffer.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#update(java.nio.ByteBuffer, java.nio.ByteBuffer)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.ShortBufferException">if the size of the <c>output</c> buffer is too small.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the input buffer and the output buffer are the identical
             object.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public byte[] Update (byte[] input, int inputOffset, int inputLen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Update(unsigned int8[] input, int32 inputOffset, int32 inputLen) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("update", "([BII)[B", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputLen" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">the input bytes to transform.</param>
        <param name="inputOffset">the offset in the input to start.</param>
        <param name="inputLen">the length of the input to transform.</param>
        <summary>Continues a multi-part transformation (encryption or decryption).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Continues a multi-part transformation (encryption or decryption). The
 transformed bytes are returned.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#update(byte[], int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the input is <c>null</c>, or if <c>inputOffset</c> and
             <c>inputLen</c> do not specify a valid chunk in the input
             buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (byte[] input, int inputOffset, int inputLen, byte[] output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(unsigned int8[] input, int32 inputOffset, int32 inputLen, unsigned int8[] output) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("update", "([BII[B)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputLen" Type="System.Int32" />
        <Parameter Name="output" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="input">the input bytes to transform.</param>
        <param name="inputOffset">the offset in the input to start.</param>
        <param name="inputLen">the length of the input to transform.</param>
        <param name="output">the output buffer.</param>
        <summary>Continues a multi-part transformation (encryption or decryption).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Continues a multi-part transformation (encryption or decryption). The
 transformed bytes are stored in the <c>output</c> buffer.
 </para>
          <para tool="javadoc-to-mdoc">
 If the size of the <c>output</c> buffer is too small to hold the result,
 a <c>ShortBufferException</c> is thrown. Use
 <c><see cref="M:Javax.Crypto.Cipher.GetOutputSize(System.Int32)" /></c> to check for the size of the
 output buffer.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#update(byte[], int, int, byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.ShortBufferException">if the size of the <c>output</c> buffer is too small.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the input is <c>null</c>, the output is <c>null</c>, or
             if <c>inputOffset</c> and <c>inputLen</c> do not specify a
             valid chunk in the input buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (byte[] input, int inputOffset, int inputLen, byte[] output, int outputOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(unsigned int8[] input, int32 inputOffset, int32 inputLen, unsigned int8[] output, int32 outputOffset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("update", "([BII[BI)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputLen" Type="System.Int32" />
        <Parameter Name="output" Type="System.Byte[]" />
        <Parameter Name="outputOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input">the input bytes to transform.</param>
        <param name="inputOffset">the offset in the input to start.</param>
        <param name="inputLen">the length of the input to transform.</param>
        <param name="output">the output buffer.</param>
        <param name="outputOffset">the offset in the output buffer.</param>
        <summary>Continues a multi-part transformation (encryption or decryption).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Continues a multi-part transformation (encryption or decryption). The
 transformed bytes are stored in the <c>output</c> buffer.
 </para>
          <para tool="javadoc-to-mdoc">
 If the size of the <c>output</c> buffer is too small to hold the result,
 a <c>ShortBufferException</c> is thrown. Use
 <c><see cref="M:Javax.Crypto.Cipher.GetOutputSize(System.Int32)" /></c> to check for the size of the
 output buffer.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#update(byte[], int, int, byte[], int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.ShortBufferException">if the size of the <c>output</c> buffer is too small.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for encryption or
             decryption.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the input is <c>null</c>, the output is <c>null</c>, or
             if <c>inputOffset</c> and <c>inputLen</c> do not specify a
             valid chunk in the input buffer.
</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAAD">
      <MemberSignature Language="C#" Value="public void UpdateAAD (Java.Nio.ByteBuffer p0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateAAD(class Java.Nio.ByteBuffer p0) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("updateAAD", "(Ljava/nio/ByteBuffer;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="p0">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateAAD">
      <MemberSignature Language="C#" Value="public void UpdateAAD (byte[] p0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateAAD(unsigned int8[] p0) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("updateAAD", "([B)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="p0">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateAAD">
      <MemberSignature Language="C#" Value="public void UpdateAAD (byte[] p0, int p1, int p2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateAAD(unsigned int8[] p0, int32 p1, int32 p2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("updateAAD", "([BII)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Byte[]" />
        <Parameter Name="p1" Type="System.Int32" />
        <Parameter Name="p2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="p0">To be added.</param>
        <param name="p1">To be added.</param>
        <param name="p2">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Wrap">
      <MemberSignature Language="C#" Value="public byte[] Wrap (Java.Security.IKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Wrap(class Java.Security.IKey key) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("wrap", "(Ljava/security/Key;)[B", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Security.IKey" />
      </Parameters>
      <Docs>
        <param name="key">the key to wrap.</param>
        <summary>Wraps a key using this cipher instance.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Wraps a key using this cipher instance.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#wrap(java.security.Key)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the size of the resulting bytes is not a multiple of the
             cipher block size.</exception>
        <exception cref="T:Java.Security.InvalidKeyException">if this cipher instance can not wrap this key.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this cipher instance is not initialized for wrapping.
</exception>
      </Docs>
    </Member>
    <Member MemberName="WrapMode">
      <MemberSignature Language="C#" Value="public const Javax.Crypto.CipherMode WrapMode = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Javax.Crypto.CipherMode WrapMode = (3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("WRAP_MODE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Javax.Crypto.CipherMode enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.CipherMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Constant for key wrapping operation mode.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constant for key wrapping operation mode.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/Cipher.html#WRAP_MODE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
