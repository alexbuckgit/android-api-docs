<Type Name="SealedObject" FullName="Javax.Crypto.SealedObject">
  <TypeSignature Language="C#" Value="public class SealedObject : Java.Lang.Object, IDisposable, Java.IO.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SealedObject extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.IO.ISerializable, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Java.IO.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("javax/crypto/SealedObject", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A <c>SealedObject</c> is a wrapper around a <c>serializable</c> object
 instance and encrypts it using a cryptographic cipher.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">A <c>SealedObject</c> is a wrapper around a <c>serializable</c> object
 instance and encrypts it using a cryptographic cipher.

 </para>
      <para tool="javadoc-to-mdoc">Since a <c>SealedObject</c> instance is serializable it can
 either be stored or transmitted over an insecure channel.

 </para>
      <para tool="javadoc-to-mdoc">The wrapped object can later be decrypted (unsealed) using the corresponding
 key and then be deserialized to retrieve the original object. The sealed
 object itself keeps track of the cipher and corresponding parameters.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/javax/crypto/SealedObject.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SealedObject (Javax.Crypto.SealedObject so);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Javax.Crypto.SealedObject so) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljavax/crypto/SealedObject;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="so" Type="Javax.Crypto.SealedObject" />
      </Parameters>
      <Docs>
        <param name="so">To be added.</param>
        <summary>Creates a new <c>SealedObject</c> instance by copying the data from
 the specified object.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new <c>SealedObject</c> instance by copying the data from
 the specified object.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/SealedObject.html#SealedObject(javax.crypto.SealedObject)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SealedObject (Java.IO.ISerializable object, Javax.Crypto.Cipher c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.IO.ISerializable object, class Javax.Crypto.Cipher c) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/Serializable;Ljavax/crypto/Cipher;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="object" Type="Java.IO.ISerializable" />
        <Parameter Name="c" Type="Javax.Crypto.Cipher" />
      </Parameters>
      <Docs>
        <param name="object">To be added.</param>
        <param name="c">To be added.</param>
        <summary>Creates a new <c>SealedObject</c> instance wrapping the specified object
 and sealing it using the specified cipher.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new <c>SealedObject</c> instance wrapping the specified object
 and sealing it using the specified cipher.
 </para>
          <para tool="javadoc-to-mdoc">
 The cipher must be fully initialized.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/SealedObject.html#SealedObject(java.io.Serializable, javax.crypto.Cipher)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if the serialization fails.</exception>
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the specified cipher is a block cipher and the length of
             the serialized data is not a multiple of the ciphers block
             size.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the cipher is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SealedObject (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Algorithm">
      <MemberSignature Language="C#" Value="public string Algorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Algorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAlgorithm", "()Ljava/lang/String;", "GetGetAlgorithmHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the algorithm this object was sealed with.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the algorithm this object was sealed with.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/SealedObject.html#getAlgorithm()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EncodedParams">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IList&lt;byte&gt; EncodedParams { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;unsigned int8&gt; EncodedParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("encodedParams")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The cipher's <c><see cref="T:Java.Security.AlgorithmParameters" /></c> in encoded format.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">The cipher's <c><see cref="T:Java.Security.AlgorithmParameters" /></c> in encoded format.
 Equivalent to <c>cipher.getParameters().getEncoded()</c>,
 or null if the cipher did not use any parameters.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/SealedObject.html#encodedParams" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public Java.Lang.Object GetObject (Java.Security.IKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Object GetObject(class Java.Security.IKey key) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getObject", "(Ljava/security/Key;)Ljava/lang/Object;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Security.IKey" />
      </Parameters>
      <Docs>
        <param name="key">the key to decrypt the data with.</param>
        <summary tool="true">Returns the wrapped object, decrypting it using the specified
 cipher.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the wrapped object, decrypting it using the specified key.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/SealedObject.html#getObject(java.security.Key)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if deserialization fails.</exception>
        <exception cref="T:Java.Lang.ClassNotFoundException">if deserialization fails.</exception>
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if the algorithm to decrypt the data is not available.</exception>
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key cannot be used to decrypt the data.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public Java.Lang.Object GetObject (Javax.Crypto.Cipher c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Object GetObject(class Javax.Crypto.Cipher c) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getObject", "(Ljavax/crypto/Cipher;)Ljava/lang/Object;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Javax.Crypto.Cipher" />
      </Parameters>
      <Docs>
        <param name="c">the cipher to decrypt the data.</param>
        <summary>Returns the wrapped object, decrypting it using the specified
 cipher.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the wrapped object, decrypting it using the specified
 cipher.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/SealedObject.html#getObject(javax.crypto.Cipher)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if deserialization fails.</exception>
        <exception cref="T:Java.Lang.ClassNotFoundException">if deserialization fails.</exception>
        <exception cref="T:Javax.Crypto.IllegalBlockSizeException">if the specified cipher is a block cipher and the length of
             the serialized data is not a multiple of the ciphers block
             size.</exception>
        <exception cref="T:Javax.Crypto.BadPaddingException">if the padding of the data does not match the padding scheme.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public Java.Lang.Object GetObject (Java.Security.IKey key, string provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Object GetObject(class Java.Security.IKey key, string provider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getObject", "(Ljava/security/Key;Ljava/lang/String;)Ljava/lang/Object;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="provider" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">the key to decrypt the data.</param>
        <param name="provider">the name of the provider that provides the cipher algorithm.</param>
        <summary>Returns the wrapped object, decrypting it using the specified key.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the wrapped object, decrypting it using the specified key. The
 specified provider is used to retrieve the cipher algorithm.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/SealedObject.html#getObject(java.security.Key, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if deserialization fails.</exception>
        <exception cref="T:Java.Lang.ClassNotFoundException">if deserialization fails.</exception>
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if the algorithm used to decrypt the data is not available.</exception>
        <exception cref="T:Java.Security.NoSuchProviderException">if the specified provider is not available.</exception>
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key cannot be used to decrypt the data.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>