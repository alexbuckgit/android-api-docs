<Type Name="KeyAgreementSpi" FullName="Javax.Crypto.KeyAgreementSpi">
  <TypeSignature Language="C#" Value="public abstract class KeyAgreementSpi : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit KeyAgreementSpi extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Javax.Crypto.KeyAgreementSpi" />
  <TypeSignature Language="F#" Value="type KeyAgreementSpi = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("javax/crypto/KeyAgreementSpi", ApiSince=1, DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>The <format type="text/html"><i>Service Provider Interface</i></format> (<format type="text/html"><b>SPI</b></format>) definition for the
 <c>KeyAgreement</c> class.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/javax/crypto/KeyAgreementSpi" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyAgreementSpi ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.KeyAgreementSpi.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Creates a new <c>KeyAgreementSpi</c> instance.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyAgreementSpi (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.KeyAgreementSpi.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Javax.Crypto.KeyAgreementSpi : nativeint * Android.Runtime.JniHandleOwnership -&gt; Javax.Crypto.KeyAgreementSpi" Usage="new Javax.Crypto.KeyAgreementSpi (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EngineDoPhase">
      <MemberSignature Language="C#" Value="protected abstract Java.Security.IKey EngineDoPhase (Java.Security.IKey key, bool lastPhase);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Security.IKey EngineDoPhase(class Java.Security.IKey key, bool lastPhase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.KeyAgreementSpi.EngineDoPhase(Java.Security.IKey,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member EngineDoPhase : Java.Security.IKey * bool -&gt; Java.Security.IKey" Usage="keyAgreementSpi.EngineDoPhase (key, lastPhase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineDoPhase", "(Ljava/security/Key;Z)Ljava/security/Key;", "GetEngineDoPhase_Ljava_security_Key_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.IKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="lastPhase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">the key received from the other party for this phase.</param>
        <param name="lastPhase">set to <c>true</c> if this is the last phase of this key
            agreement.</param>
        <summary>Does the next (or the last) phase of the key agreement, using the
 specified key.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key cannot be used in this key agreement or
             this phase,</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this instance has not been initialized.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineGenerateSecret">
      <MemberSignature Language="C#" Value="protected abstract byte[] EngineGenerateSecret ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance unsigned int8[] EngineGenerateSecret() cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.KeyAgreementSpi.EngineGenerateSecret" />
      <MemberSignature Language="F#" Value="abstract member EngineGenerateSecret : unit -&gt; byte[]" Usage="keyAgreementSpi.EngineGenerateSecret " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineGenerateSecret", "()[B", "GetEngineGenerateSecretHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Generates the shared secret.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this key agreement is not complete.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineGenerateSecret">
      <MemberSignature Language="C#" Value="protected abstract Javax.Crypto.ISecretKey EngineGenerateSecret (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Javax.Crypto.ISecretKey EngineGenerateSecret(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.KeyAgreementSpi.EngineGenerateSecret(System.String)" />
      <MemberSignature Language="F#" Value="abstract member EngineGenerateSecret : string -&gt; Javax.Crypto.ISecretKey" Usage="keyAgreementSpi.EngineGenerateSecret algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineGenerateSecret", "(Ljava/lang/String;)Ljavax/crypto/SecretKey;", "GetEngineGenerateSecret_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.ISecretKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">the algorithm to for the <c>SecretKey</c></param>
        <summary>Generates the shared secret.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this key agreement is not complete.</exception>
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if the specified algorithm for the secret key does not
             exists.</exception>
        <exception cref="T:Java.Security.InvalidKeyException">if a <c>SecretKey</c> with the specified algorithm cannot be
             created using the generated shared secret.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineGenerateSecret">
      <MemberSignature Language="C#" Value="protected abstract int EngineGenerateSecret (byte[] sharedSecret, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 EngineGenerateSecret(unsigned int8[] sharedSecret, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.KeyAgreementSpi.EngineGenerateSecret(System.Byte[],System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member EngineGenerateSecret : byte[] * int -&gt; int" Usage="keyAgreementSpi.EngineGenerateSecret (sharedSecret, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineGenerateSecret", "([BI)I", "GetEngineGenerateSecret_arrayBIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sharedSecret" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sharedSecret">the buffer to store the shared secret.</param>
        <param name="offset">the offset in the buffer.</param>
        <summary>Generates the shared secret and stores it into the buffer <c>sharedSecred</c> at <c>offset</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this key agreement is not complete.</exception>
        <exception cref="T:Javax.Crypto.ShortBufferException">if the specified buffer is too small for the shared secret.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineInit">
      <MemberSignature Language="C#" Value="protected abstract void EngineInit (Java.Security.IKey key, Java.Security.SecureRandom random);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EngineInit(class Java.Security.IKey key, class Java.Security.SecureRandom random) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.KeyAgreementSpi.EngineInit(Java.Security.IKey,Java.Security.SecureRandom)" />
      <MemberSignature Language="F#" Value="abstract member EngineInit : Java.Security.IKey * Java.Security.SecureRandom -&gt; unit" Usage="keyAgreementSpi.EngineInit (key, random)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineInit", "(Ljava/security/Key;Ljava/security/SecureRandom;)V", "GetEngineInit_Ljava_security_Key_Ljava_security_SecureRandom_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="random" Type="Java.Security.SecureRandom" />
      </Parameters>
      <Docs>
        <param name="key">the key to initialize this key agreement.</param>
        <param name="random">the source for any randomness needed.</param>
        <summary tool="true">Initializes this <c>KeyAgreementSpi</c> with the specified key and the
 specified randomness source.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key cannot be used to initialize this key
             agreement.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EngineInit">
      <MemberSignature Language="C#" Value="protected abstract void EngineInit (Java.Security.IKey key, Java.Security.Spec.IAlgorithmParameterSpec params, Java.Security.SecureRandom random);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EngineInit(class Java.Security.IKey key, class Java.Security.Spec.IAlgorithmParameterSpec params, class Java.Security.SecureRandom random) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Crypto.KeyAgreementSpi.EngineInit(Java.Security.IKey,Java.Security.Spec.IAlgorithmParameterSpec,Java.Security.SecureRandom)" />
      <MemberSignature Language="F#" Value="abstract member EngineInit : Java.Security.IKey * Java.Security.Spec.IAlgorithmParameterSpec * Java.Security.SecureRandom -&gt; unit" Usage="keyAgreementSpi.EngineInit (key, params, random)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("engineInit", "(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V", "GetEngineInit_Ljava_security_Key_Ljava_security_spec_AlgorithmParameterSpec_Ljava_security_SecureRandom_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="params" Type="Java.Security.Spec.IAlgorithmParameterSpec" />
        <Parameter Name="random" Type="Java.Security.SecureRandom" />
      </Parameters>
      <Docs>
        <param name="key">the key to initialize this key agreement.</param>
        <param name="params">the parameters for this key agreement algorithm.</param>
        <param name="random">the source for any randomness needed.</param>
        <summary>Initializes this <c>KeyAgreementSpi</c> with the specified key,
 algorithm parameters and randomness source.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key cannot be used to initialize this key
             agreement.</exception>
        <exception cref="T:Java.Security.InvalidAlgorithmParameterException">if the specified parameters are invalid for this key
             agreement algorithm.
</exception>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Javax.Crypto.KeyAgreementSpi.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Javax.Crypto.KeyAgreementSpi.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Javax.Crypto.KeyAgreementSpi.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Javax.Crypto.KeyAgreementSpi.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Javax.Crypto.KeyAgreementSpi.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Javax.Crypto.KeyAgreementSpi.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
