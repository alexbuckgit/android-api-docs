<Type Name="KeyAgreement" FullName="Javax.Crypto.KeyAgreement">
  <TypeSignature Language="C#" Value="public class KeyAgreement : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyAgreement extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("javax/crypto/KeyAgreement", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This class provides the functionality for a key exchange protocol.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">This class provides the functionality for a key exchange protocol. This
 enables two or more parties to agree on a secret key for symmetric
 cryptography.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/javax/crypto/KeyAgreement.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyAgreement (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyAgreement (Javax.Crypto.KeyAgreementSpi keyAgreeSpi, Java.Security.Provider provider, string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Javax.Crypto.KeyAgreementSpi keyAgreeSpi, class Java.Security.Provider provider, string algorithm) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljavax/crypto/KeyAgreementSpi;Ljava/security/Provider;Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="keyAgreeSpi" Type="Javax.Crypto.KeyAgreementSpi" />
        <Parameter Name="provider" Type="Java.Security.Provider" />
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyAgreeSpi">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="algorithm">To be added.</param>
        <summary>Creates a new <c>KeyAgreement</c> instance.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new <c>KeyAgreement</c> instance.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/KeyAgreement.html#KeyAgreement(javax.crypto.KeyAgreementSpi, java.security.Provider, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Algorithm">
      <MemberSignature Language="C#" Value="public string Algorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Algorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAlgorithm", "()Ljava/lang/String;", "GetGetAlgorithmHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the name of the key agreement algorithm.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the name of the key agreement algorithm.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/KeyAgreement.html#getAlgorithm()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DoPhase">
      <MemberSignature Language="C#" Value="public Java.Security.IKey DoPhase (Java.Security.IKey key, bool lastPhase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Security.IKey DoPhase(class Java.Security.IKey key, bool lastPhase) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("doPhase", "(Ljava/security/Key;Z)Ljava/security/Key;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.IKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="lastPhase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">the key received from the other party for this phase.</param>
        <param name="lastPhase">set to <c>true</c> if this is the last phase of this key
            agreement.</param>
        <summary>Does the next (or the last) phase of the key agreement, using the
 specified key.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Does the next (or the last) phase of the key agreement, using the
 specified key.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/KeyAgreement.html#doPhase(java.security.Key, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key cannot be used in this key agreement or
             this phase,</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this instance has not been initialized.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateSecret">
      <MemberSignature Language="C#" Value="public byte[] GenerateSecret ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GenerateSecret() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("generateSecret", "()[B", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Generates the shared secret.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Generates the shared secret.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/KeyAgreement.html#generateSecret()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this key agreement is not complete.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateSecret">
      <MemberSignature Language="C#" Value="public Javax.Crypto.ISecretKey GenerateSecret (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Javax.Crypto.ISecretKey GenerateSecret(string algorithm) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("generateSecret", "(Ljava/lang/String;)Ljavax/crypto/SecretKey;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.ISecretKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">the algorithm to for the <c>SecretKey</c></param>
        <summary>Generates the shared secret.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Generates the shared secret.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/KeyAgreement.html#generateSecret(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this key agreement is not complete.</exception>
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if the specified algorithm for the secret key does not
             exists.</exception>
        <exception cref="T:Java.Security.InvalidKeyException">if a <c>SecretKey</c> with the specified algorithm cannot be
             created using the generated shared secret.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateSecret">
      <MemberSignature Language="C#" Value="public int GenerateSecret (byte[] sharedSecret, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GenerateSecret(unsigned int8[] sharedSecret, int32 offset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("generateSecret", "([BI)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sharedSecret" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sharedSecret">the buffer to store the shared secret.</param>
        <param name="offset">the offset in the buffer.</param>
        <summary>Generates the shared secret and stores it into the buffer <c>sharedSecred</c> at <c>offset</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Generates the shared secret and stores it into the buffer <c>sharedSecred</c> at <c>offset</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/KeyAgreement.html#generateSecret(byte[], int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this key agreement is not complete.</exception>
        <exception cref="T:Javax.Crypto.ShortBufferException">if the specified buffer is too small for the shared secret.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Javax.Crypto.KeyAgreement GetInstance (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Crypto.KeyAgreement GetInstance(string algorithm) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInstance", "(Ljava/lang/String;)Ljavax/crypto/KeyAgreement;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.KeyAgreement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">the name of the key agreement algorithm to create.</param>
        <summary tool="true">Creates a new <c>KeyAgreement</c> for the specified algorithm.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new <c>KeyAgreement</c> for the specified algorithm.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/KeyAgreement.html#getInstance(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if no installed provider can provide the requested algorithm.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the specified algorithm is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Javax.Crypto.KeyAgreement GetInstance (string algorithm, Java.Security.Provider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Crypto.KeyAgreement GetInstance(string algorithm, class Java.Security.Provider provider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/KeyAgreement;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.KeyAgreement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="provider" Type="Java.Security.Provider" />
      </Parameters>
      <Docs>
        <param name="algorithm">the name of the key agreement algorithm to create.</param>
        <param name="provider">the provider that provides the requested algorithm.</param>
        <summary>Create a new <c>KeyAgreement</c> for the specified algorithm from the
 specified provider.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new <c>KeyAgreement</c> for the specified algorithm from the
 specified provider. The <c>provider</c> supplied does not have to be
 registered.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/KeyAgreement.html#getInstance(java.lang.String, java.security.Provider)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if the specified provider cannot provide the requested
             algorithm.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the specified provider is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the specified algorithm name is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Javax.Crypto.KeyAgreement GetInstance (string algorithm, string provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Crypto.KeyAgreement GetInstance(string algorithm, string provider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/lang/String;)Ljavax/crypto/KeyAgreement;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Crypto.KeyAgreement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="provider" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">the name of the key agreement algorithm to create.</param>
        <param name="provider">the name of the provider that provides the requested
            algorithm.</param>
        <summary>Creates a new <c>KeyAgreement</c> for the specified algorithm from the
 specified provider.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new <c>KeyAgreement</c> for the specified algorithm from the
 specified provider.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/KeyAgreement.html#getInstance(java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if the specified provider cannot provide the requested
             algorithm.</exception>
        <exception cref="T:Java.Security.NoSuchProviderException">if the specified provider does not exist.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the specified provider name is <c>null</c> or empty.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (Java.Security.IKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Init(class Java.Security.IKey key) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("init", "(Ljava/security/Key;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Security.IKey" />
      </Parameters>
      <Docs>
        <param name="key">the key to initialize this key agreement.</param>
        <summary tool="true">Initializes this <c>KeyAgreement</c> with the specified key.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Initializes this <c>KeyAgreement</c> with the specified key.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/KeyAgreement.html#init(java.security.Key)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key cannot be used to
             initialize this key agreement.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (Java.Security.IKey key, Java.Security.SecureRandom random);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Init(class Java.Security.IKey key, class Java.Security.SecureRandom random) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("init", "(Ljava/security/Key;Ljava/security/SecureRandom;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="random" Type="Java.Security.SecureRandom" />
      </Parameters>
      <Docs>
        <param name="key">the key to initialize this key agreement.</param>
        <param name="random">the source for any randomness needed.</param>
        <summary>Initializes this <c>KeyAgreement</c> with the specified key and the
 specified randomness source.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Initializes this <c>KeyAgreement</c> with the specified key and the
 specified randomness source.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/KeyAgreement.html#init(java.security.Key, java.security.SecureRandom)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key cannot be used to initialize this key
             agreement.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (Java.Security.IKey key, Java.Security.Spec.IAlgorithmParameterSpec params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Init(class Java.Security.IKey key, class Java.Security.Spec.IAlgorithmParameterSpec params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("init", "(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="params" Type="Java.Security.Spec.IAlgorithmParameterSpec" />
      </Parameters>
      <Docs>
        <param name="key">the key to initialize this key agreement.</param>
        <param name="params">the parameters for this key agreement algorithm.</param>
        <summary>Initializes this <c>KeyAgreement</c> with the specified key and the
 algorithm parameters.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Initializes this <c>KeyAgreement</c> with the specified key and the
 algorithm parameters.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/KeyAgreement.html#init(java.security.Key, java.security.spec.AlgorithmParameterSpec)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key cannot be used to initialize this key
             agreement.</exception>
        <exception cref="T:Java.Security.InvalidAlgorithmParameterException">if the specified parameters are invalid for this key
             agreement algorithm.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (Java.Security.IKey key, Java.Security.Spec.IAlgorithmParameterSpec params, Java.Security.SecureRandom random);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Init(class Java.Security.IKey key, class Java.Security.Spec.IAlgorithmParameterSpec params, class Java.Security.SecureRandom random) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("init", "(Ljava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Java.Security.IKey" />
        <Parameter Name="params" Type="Java.Security.Spec.IAlgorithmParameterSpec" />
        <Parameter Name="random" Type="Java.Security.SecureRandom" />
      </Parameters>
      <Docs>
        <param name="key">the key to initialize this key agreement.</param>
        <param name="params">the parameters for this key agreement algorithm.</param>
        <param name="random">the source for any randomness needed.</param>
        <summary>Initializes this <c>KeyAgreement</c> with the specified key, algorithm
 parameters and randomness source.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Initializes this <c>KeyAgreement</c> with the specified key, algorithm
 parameters and randomness source.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/KeyAgreement.html#init(java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidKeyException">if the specified key cannot be used to initialize this key
             agreement.</exception>
        <exception cref="T:Java.Security.InvalidAlgorithmParameterException">if the specified parameters are invalid for this key
             agreement algorithm.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public Java.Security.Provider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Security.Provider Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getProvider", "()Ljava/security/Provider;", "GetGetProviderHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Provider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the provider for this <c>KeyAgreement</c> instance.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the provider for this <c>KeyAgreement</c> instance.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/crypto/KeyAgreement.html#getProvider()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
