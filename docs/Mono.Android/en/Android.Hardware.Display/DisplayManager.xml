<Type Name="DisplayManager" FullName="Android.Hardware.Display.DisplayManager">
  <TypeSignature Language="C#" Value="public sealed class DisplayManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DisplayManager extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/hardware/display/DisplayManager", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Manages the properties of attached displays.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Manages the properties of attached displays.
 </para>
      <para tool="javadoc-to-mdoc">
 Get an instance of this class by calling
 <c><see cref="M:Android.Content.Context.GetSystemService(System.String)" /></c> with the argument
 <c><see cref="F:Android.Content.Context.DisplayService" /></c>.
 </para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/hardware/display/DisplayManager.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 17" />
  </Docs>
  <Members>
    <Member MemberName="DisplayCategoryPresentation">
      <MemberSignature Language="C#" Value="public const string DisplayCategoryPresentation;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DisplayCategoryPresentation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DISPLAY_CATEGORY_PRESENTATION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Display category: Presentation displays.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Display category: Presentation displays.
 </para>
          <para tool="javadoc-to-mdoc">
 This category can be used to identify secondary displays that are suitable for
 use as presentation displays.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/display/DisplayManager.html#DISPLAY_CATEGORY_PRESENTATION" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="T:Android.App.Presentation" />
        <altmember cref="M:Android.Hardware.Display.DisplayManager.GetDisplays(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDisplay">
      <MemberSignature Language="C#" Value="public Android.Views.Display GetDisplay (int displayId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Views.Display GetDisplay(int32 displayId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDisplay", "(I)Landroid/view/Display;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Display</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="displayId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="displayId">The logical display id.</param>
        <summary>Gets information about a logical display.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets information about a logical display.

 The display metrics may be adjusted to provide compatibility
 for legacy applications.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/display/DisplayManager.html#getDisplay(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="GetDisplays">
      <MemberSignature Language="C#" Value="public Android.Views.Display[] GetDisplays ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Views.Display[] GetDisplays() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDisplays", "()[Landroid/view/Display;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Display[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets all currently valid logical displays.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets all currently valid logical displays.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/display/DisplayManager.html#getDisplays()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="GetDisplays">
      <MemberSignature Language="C#" Value="public Android.Views.Display[] GetDisplays (string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Views.Display[] GetDisplays(string category) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDisplays", "(Ljava/lang/String;)[Landroid/view/Display;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Display[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="category">The requested display category or null to return all displays.</param>
        <summary>Gets all currently valid logical displays of the specified category.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets all currently valid logical displays of the specified category.
 </para>
          <para tool="javadoc-to-mdoc">
 When there are multiple displays in a category the returned displays are sorted
 of preference.  For example, if the requested category is
 <c><see cref="F:Android.Hardware.Display.DisplayManager.DisplayCategoryPresentation" /></c> and there are multiple presentation displays
 then the displays are sorted so that the first display in the returned array
 is the most preferred presentation display.  The application may simply
 use the first display or allow the user to choose.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/display/DisplayManager.html#getDisplays(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="F:Android.Hardware.Display.DisplayManager.DisplayCategoryPresentation" />
      </Docs>
    </Member>
    <Member MemberName="RegisterDisplayListener">
      <MemberSignature Language="C#" Value="public void RegisterDisplayListener (Android.Hardware.Display.DisplayManager.IDisplayListener listener, Android.OS.Handler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterDisplayListener(class Android.Hardware.Display.DisplayManager/IDisplayListener listener, class Android.OS.Handler handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerDisplayListener", "(Landroid/hardware/display/DisplayManager$DisplayListener;Landroid/os/Handler;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Hardware.Display.DisplayManager+IDisplayListener" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="listener">The listener to register.</param>
        <param name="handler">The handler on which the listener should be invoked, or null
 if the listener should be invoked on the calling thread's looper.</param>
        <summary>Registers an display listener to receive notifications about when
 displays are added, removed or changed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Registers an display listener to receive notifications about when
 displays are added, removed or changed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/display/DisplayManager.html#registerDisplayListener(android.hardware.display.DisplayManager.DisplayListener, android.os.Handler)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="M:Android.Hardware.Display.DisplayManager.UnregisterDisplayListener(Android.Hardware.Display.DisplayManager.IDisplayListener)" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterDisplayListener">
      <MemberSignature Language="C#" Value="public void UnregisterDisplayListener (Android.Hardware.Display.DisplayManager.IDisplayListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterDisplayListener(class Android.Hardware.Display.DisplayManager/IDisplayListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unregisterDisplayListener", "(Landroid/hardware/display/DisplayManager$DisplayListener;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Hardware.Display.DisplayManager+IDisplayListener" />
      </Parameters>
      <Docs>
        <param name="listener">The listener to unregister.</param>
        <summary>Unregisters an input device listener.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Unregisters an input device listener.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/hardware/display/DisplayManager.html#unregisterDisplayListener(android.hardware.display.DisplayManager.DisplayListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="M:Android.Hardware.Display.DisplayManager.RegisterDisplayListener(Android.Hardware.Display.DisplayManager.IDisplayListener, Android.OS.Handler)" />
      </Docs>
    </Member>
  </Members>
</Type>
