<Type Name="PdfRenderer" FullName="Android.Graphics.Pdf.PdfRenderer">
  <TypeSignature Language="C#" Value="public sealed class PdfRenderer : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PdfRenderer extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/graphics/pdf/PdfRenderer", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="21">
    <summary tool="true">
 This class enables rendering a PDF document.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">
        <sample external-id="B464287C9F9D925593E020513E5CD3F2" />
        <format type="text/html">
          <h3>Print preview and print output</h3>
        </format>
        <list type="bullet">
          <item>
            <term>
 Respect the property whether the document would like to be scaled for printing
 as per <c><see cref="M:Android.Graphics.Pdf.PdfRenderer.ShouldScaleForPrinting" /></c>.
 </term>
          </item>
          <item>
            <term>
 When scaling a document for printing the aspect ratio should be preserved.
 </term>
          </item>
          <item>
            <term>
 Do not inset the content with any margins from the <c><see cref="T:Android.Print.PrintAttributes" /></c>
 as the application is responsible to render it such that the margins are respected.
 </term>
          </item>
          <item>
            <term>
 If document page size is greater than the printed media size the content should
 be anchored to the upper left corner of the page for left-to-right locales and
 top right corner for right-to-left locales.
 </term>
          </item>
        </list>
      </para>
      <para tool="javadoc-to-mdoc">
 This class enables rendering a PDF document. This class is not thread safe.
 </para>
      <para tool="javadoc-to-mdoc">
 If you want to render a PDF, you create a renderer and for every page you want
 to render, you open the page, render it, and close the page. After you are done
 with rendering, you close the renderer. After the renderer is closed it should not
 be used anymore. Note that the pages are rendered one by one, i.e. you can have
 only a single page opened at any given time.
 </para>
      <para tool="javadoc-to-mdoc">
 A typical use of the APIs to render a PDF looks like this:
 </para>
      <para tool="javadoc-to-mdoc">
 If you are using this class to rasterize a PDF for printing or show a print
 preview, it is recommended that you respect the following contract in order
 to provide a consistent user experience when seeing a preview and printing,
 i.e. the user sees a preview that is the same as the printout.
 <format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="M:Android.Graphics.Pdf.PdfRenderer.Close" /></c></term></item></list></para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/graphics/pdf/PdfRenderer.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PdfRenderer (Android.OS.ParcelFileDescriptor input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.OS.ParcelFileDescriptor input) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/os/ParcelFileDescriptor;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="input" Type="Android.OS.ParcelFileDescriptor" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>Creates a new instance.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new instance.
 </para>
          <para tool="javadoc-to-mdoc">
            <i>Note:</i> The provided file descriptor must be <i>seekable</i>,
 i.e. its data being randomly accessed, e.g. pointing to a file.
 </para>
          <para tool="javadoc-to-mdoc">
            <i>Note:</i> This class takes ownership of the passed in file descriptor
 and is responsible for closing it when the renderer is closed.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/pdf/PdfRenderer.html#PdfRenderer(android.os.ParcelFileDescriptor)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("close", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes this renderer.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Closes this renderer. You should not use this instance
 after this method is called.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/pdf/PdfRenderer.html#close()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenPage">
      <MemberSignature Language="C#" Value="public Android.Graphics.Pdf.PdfRenderer.Page OpenPage (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Graphics.Pdf.PdfRenderer/Page OpenPage(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("openPage", "(I)Landroid/graphics/pdf/PdfRenderer$Page;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Pdf.PdfRenderer+Page</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The page index.</param>
        <summary>Opens a page for rendering.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Opens a page for rendering.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/pdf/PdfRenderer.html#openPage(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public int PageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPageCount", "()I", "GetGetPageCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of pages in the document.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the number of pages in the document.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/pdf/PdfRenderer.html#getPageCount()" target="_blank">[Android Documentation]</a>
              <since version="Added in API level 21" />
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldScaleForPrinting">
      <MemberSignature Language="C#" Value="public bool ShouldScaleForPrinting ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldScaleForPrinting() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("shouldScaleForPrinting", "()Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets whether the document prefers to be scaled for printing.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets whether the document prefers to be scaled for printing.
 You should take this info account if the document is rendered
 for printing and the target media size differs from the page
 size.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/graphics/pdf/PdfRenderer.html#shouldScaleForPrinting()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>