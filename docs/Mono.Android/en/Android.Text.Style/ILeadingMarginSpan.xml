<Type Name="ILeadingMarginSpan" FullName="Android.Text.Style.ILeadingMarginSpan">
  <TypeSignature Language="C#" Value="public interface ILeadingMarginSpan : Android.Text.Style.IParagraphStyle, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ILeadingMarginSpan implements class Android.Runtime.IJavaObject, class Android.Text.Style.IParagraphStyle, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Text.Style.IParagraphStyle</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/text/style/LeadingMarginSpan", "", "Android.Text.Style.ILeadingMarginSpanInvoker")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A paragraph style affecting the leading margin.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">A paragraph style affecting the leading margin. There can be multiple leading
 margin spans on a single paragraph; they will be rendered in order, each
 adding its margin to the ones before it. The leading margin is on the right
 for lines in a right-to-left paragraph.
 </para>
      <para tool="javadoc-to-mdoc">
 LeadingMarginSpans should be attached from the first character to the last
 character of a single paragraph.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/text/style/LeadingMarginSpan.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="DrawLeadingMargin">
      <MemberSignature Language="C#" Value="public void DrawLeadingMargin (Android.Graphics.Canvas c, Android.Graphics.Paint p, int x, int dir, int top, int baseline, int bottom, Java.Lang.ICharSequence text, int start, int end, bool first, Android.Text.Layout layout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawLeadingMargin(class Android.Graphics.Canvas c, class Android.Graphics.Paint p, int32 x, int32 dir, int32 top, int32 baseline, int32 bottom, class Java.Lang.ICharSequence text, int32 start, int32 end, bool first, class Android.Text.Layout layout) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("drawLeadingMargin", "(Landroid/graphics/Canvas;Landroid/graphics/Paint;IIIIILjava/lang/CharSequence;IIZLandroid/text/Layout;)V", "GetDrawLeadingMargin_Landroid_graphics_Canvas_Landroid_graphics_Paint_IIIIILjava_lang_CharSequence_IIZLandroid_text_Layout_Handler:Android.Text.Style.ILeadingMarginSpanInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Android.Graphics.Canvas" />
        <Parameter Name="p" Type="Android.Graphics.Paint" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="dir" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="baseline" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="first" Type="System.Boolean" />
        <Parameter Name="layout" Type="Android.Text.Layout" />
      </Parameters>
      <Docs>
        <param name="c">the canvas</param>
        <param name="p">the paint. The this should be left unchanged on exit.</param>
        <param name="x">the current position of the margin</param>
        <param name="dir">the base direction of the paragraph; if negative, the margin
 is to the right of the text, otherwise it is to the left.</param>
        <param name="top">the top of the line</param>
        <param name="baseline">the baseline of the line</param>
        <param name="bottom">the bottom of the line</param>
        <param name="text">the text</param>
        <param name="start">the start of the line</param>
        <param name="end">the end of the line</param>
        <param name="first">true if this is the first line of its paragraph</param>
        <param name="layout">the layout containing this line
</param>
        <summary>Renders the leading margin.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Renders the leading margin.  This is called before the margin has been
 adjusted by the value returned by <c><see cref="M:Android.Text.Style.ILeadingMarginSpan.GetLeadingMargin(System.Boolean)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/style/LeadingMarginSpan.html#drawLeadingMargin(android.graphics.Canvas, android.graphics.Paint, int, int, int, int, int, java.lang.CharSequence, int, int, boolean, android.text.Layout)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLeadingMargin">
      <MemberSignature Language="C#" Value="public int GetLeadingMargin (bool first);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetLeadingMargin(bool first) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getLeadingMargin", "(Z)I", "GetGetLeadingMargin_ZHandler:Android.Text.Style.ILeadingMarginSpanInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="first">true if the request is for the first line of a paragraph,
 false for subsequent lines</param>
        <summary>Returns the amount by which to adjust the leading margin.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the amount by which to adjust the leading margin. Positive values
 move away from the leading edge of the paragraph, negative values move
 towards it.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/style/LeadingMarginSpan.html#getLeadingMargin(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>