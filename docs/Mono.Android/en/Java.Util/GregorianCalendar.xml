<Type Name="GregorianCalendar" FullName="Java.Util.GregorianCalendar">
  <TypeSignature Language="C#" Value="public class GregorianCalendar : Java.Util.Calendar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GregorianCalendar extends Java.Util.Calendar" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Util.Calendar</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/util/GregorianCalendar", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><c>GregorianCalendar</c> is a concrete subclass of <c><see cref="T:Java.Util.Calendar" /></c>
 and provides the standard calendar used by most of the world.</summary>
    <remarks><para tool="javadoc-to-mdoc"><c>GregorianCalendar</c> is a concrete subclass of <c><see cref="T:Java.Util.Calendar" /></c>
 and provides the standard calendar used by most of the world.

 </para><para tool="javadoc-to-mdoc">
 The standard (Gregorian) calendar has 2 eras, BC and AD.

 </para><para tool="javadoc-to-mdoc">
 This implementation handles a single discontinuity, which corresponds by
 default to the date the Gregorian calendar was instituted (October 15, 1582
 in some countries, later in others). The cutover date may be changed by the
 caller by calling <c>setGregorianChange()</c>.

 </para><para tool="javadoc-to-mdoc">
 Historically, in those countries which adopted the Gregorian calendar first,
 October 4, 1582 was thus followed by October 15, 1582. This calendar models
 this correctly. Before the Gregorian cutover, <c>GregorianCalendar</c>
 implements the Julian calendar. The only difference between the Gregorian and
 the Julian calendar is the leap year rule. The Julian calendar specifies leap
 years every four years, whereas the Gregorian calendar omits century years
 which are not divisible by 400.

 </para><para tool="javadoc-to-mdoc"><c>GregorianCalendar</c> implements <i>proleptic</i> Gregorian
 and Julian calendars. That is, dates are computed by extrapolating the
 current rules indefinitely far backward and forward in time. As a result,
 <c>GregorianCalendar</c> may be used for all years to generate
 meaningful and consistent results. However, dates obtained using
 <c>GregorianCalendar</c> are historically accurate only from March 1,
 4 AD onward, when modern Julian calendar rules were adopted. Before this
 date, leap year rules were applied irregularly, and before 45 BC the Julian
 calendar did not even exist.

 </para><para tool="javadoc-to-mdoc">
 Prior to the institution of the Gregorian calendar, New Year's Day was March
 25. To avoid confusion, this calendar always uses January 1. A manual
 adjustment may be made if desired for dates that are prior to the Gregorian
 changeover and which fall between January 1 and March 24.

 </para><para tool="javadoc-to-mdoc">
 Values calculated for the <c>WEEK_OF_YEAR</c> field range from 1 to
 53. Week 1 for a year is the earliest seven day period starting on
 <c>getFirstDayOfWeek()</c> that contains at least
 <c>getMinimalDaysInFirstWeek()</c> days from that year. It thus
 depends on the values of <c>getMinimalDaysInFirstWeek()</c>,
 <c>getFirstDayOfWeek()</c>, and the day of the week of January 1.
 Weeks between week 1 of one year and week 1 of the following year are
 numbered sequentially from 2 to 52 or 53 (as needed).

 </para><para tool="javadoc-to-mdoc">
 For example, January 1, 1998 was a Thursday. If
 <c>getFirstDayOfWeek()</c> is <c>MONDAY</c> and
 <c>getMinimalDaysInFirstWeek()</c> is 4 (these are the values
 reflecting ISO 8601 and many national standards), then week 1 of 1998 starts
 on December 29, 1997, and ends on January 4, 1998. If, however,
 <c>getFirstDayOfWeek()</c> is <c>SUNDAY</c>, then week 1 of
 1998 starts on January 4, 1998, and ends on January 10, 1998; the first three
 days of 1998 then are part of week 53 of 1997.

 </para><para tool="javadoc-to-mdoc">
 Values calculated for the <c>WEEK_OF_MONTH</c> field range from 0 or
 1 to 4 or 5. Week 1 of a month (the days with <c>WEEK_OF_MONTH =
 1</c>)
 is the earliest set of at least <c>getMinimalDaysInFirstWeek()</c>
 contiguous days in that month, ending on the day before
 <c>getFirstDayOfWeek()</c>. Unlike week 1 of a year, week 1 of a
 month may be shorter than 7 days, need not start on
 <c>getFirstDayOfWeek()</c>, and will not include days of the
 previous month. Days of a month before week 1 have a
 <c>WEEK_OF_MONTH</c> of 0.

 </para><para tool="javadoc-to-mdoc">
 For example, if <c>getFirstDayOfWeek()</c> is <c>SUNDAY</c>
 and <c>getMinimalDaysInFirstWeek()</c> is 4, then the first week of
 January 1998 is Sunday, January 4 through Saturday, January 10. These days
 have a <c>WEEK_OF_MONTH</c> of 1. Thursday, January 1 through
 Saturday, January 3 have a <c>WEEK_OF_MONTH</c> of 0. If
 <c>getMinimalDaysInFirstWeek()</c> is changed to 3, then January 1
 through January 3 have a <c>WEEK_OF_MONTH</c> of 1.

 </para><para tool="javadoc-to-mdoc"><i>Example:</i><format type="text/html"><blockquote><example><code lang="java">
 // get the supported ids for GMT-08:00 (Pacific Standard Time)
 String[] ids = TimeZone.getAvailableIDs(-8 * 60 * 60 * 1000);
 // if no ids were returned, something is wrong. get out.
 if (ids.length == 0)
     System.exit(0);

  // begin output
 System.out.println("Current Time");

 // create a Pacific Standard Time time zone
 SimpleTimeZone pdt = new SimpleTimeZone(-8 * 60 * 60 * 1000, ids[0]);

 // set up rules for daylight savings time
 pdt.setStartRule(Calendar.APRIL, 1, Calendar.SUNDAY, 2 * 60 * 60 * 1000);
 pdt.setEndRule(Calendar.OCTOBER, -1, Calendar.SUNDAY, 2 * 60 * 60 * 1000);

 // create a GregorianCalendar with the Pacific Daylight time zone
 // and the current date and time
 Calendar calendar = new GregorianCalendar(pdt);
 Date trialTime = new Date();
 calendar.setTime(trialTime);

 // print out a bunch of interesting things
 System.out.println("ERA: " + calendar.get(Calendar.ERA));
 System.out.println("YEAR: " + calendar.get(Calendar.YEAR));
 System.out.println("MONTH: " + calendar.get(Calendar.MONTH));
 System.out.println("WEEK_OF_YEAR: " + calendar.get(Calendar.WEEK_OF_YEAR));
 System.out.println("WEEK_OF_MONTH: " + calendar.get(Calendar.WEEK_OF_MONTH));
 System.out.println("DATE: " + calendar.get(Calendar.DATE));
 System.out.println("DAY_OF_MONTH: " + calendar.get(Calendar.DAY_OF_MONTH));
 System.out.println("DAY_OF_YEAR: " + calendar.get(Calendar.DAY_OF_YEAR));
 System.out.println("DAY_OF_WEEK: " + calendar.get(Calendar.DAY_OF_WEEK));
 System.out.println("DAY_OF_WEEK_IN_MONTH: "
                    + calendar.get(Calendar.DAY_OF_WEEK_IN_MONTH));
 System.out.println("AM_PM: " + calendar.get(Calendar.AM_PM));
 System.out.println("HOUR: " + calendar.get(Calendar.HOUR));
 System.out.println("HOUR_OF_DAY: " + calendar.get(Calendar.HOUR_OF_DAY));
 System.out.println("MINUTE: " + calendar.get(Calendar.MINUTE));
 System.out.println("SECOND: " + calendar.get(Calendar.SECOND));
 System.out.println("MILLISECOND: " + calendar.get(Calendar.MILLISECOND));
 System.out.println("ZONE_OFFSET: "
                    + (calendar.get(Calendar.ZONE_OFFSET)/(60*60*1000)));
 System.out.println("DST_OFFSET: "
                    + (calendar.get(Calendar.DST_OFFSET)/(60*60*1000)));

 System.out.println("Current Time, with hour reset to 3");
 calendar.clear(Calendar.HOUR_OF_DAY); // so doesn't override
 calendar.set(Calendar.HOUR, 3);
 System.out.println("ERA: " + calendar.get(Calendar.ERA));
 System.out.println("YEAR: " + calendar.get(Calendar.YEAR));
 System.out.println("MONTH: " + calendar.get(Calendar.MONTH));
 System.out.println("WEEK_OF_YEAR: " + calendar.get(Calendar.WEEK_OF_YEAR));
 System.out.println("WEEK_OF_MONTH: " + calendar.get(Calendar.WEEK_OF_MONTH));
 System.out.println("DATE: " + calendar.get(Calendar.DATE));
 System.out.println("DAY_OF_MONTH: " + calendar.get(Calendar.DAY_OF_MONTH));
 System.out.println("DAY_OF_YEAR: " + calendar.get(Calendar.DAY_OF_YEAR));
 System.out.println("DAY_OF_WEEK: " + calendar.get(Calendar.DAY_OF_WEEK));
 System.out.println("DAY_OF_WEEK_IN_MONTH: "
                    + calendar.get(Calendar.DAY_OF_WEEK_IN_MONTH));
 System.out.println("AM_PM: " + calendar.get(Calendar.AM_PM));
 System.out.println("HOUR: " + calendar.get(Calendar.HOUR));
 System.out.println("HOUR_OF_DAY: " + calendar.get(Calendar.HOUR_OF_DAY));
 System.out.println("MINUTE: " + calendar.get(Calendar.MINUTE));
 System.out.println("SECOND: " + calendar.get(Calendar.SECOND));
 System.out.println("MILLISECOND: " + calendar.get(Calendar.MILLISECOND));
 System.out.println("ZONE_OFFSET: "
        + (calendar.get(Calendar.ZONE_OFFSET)/(60*60*1000))); // in hours
 System.out.println("DST_OFFSET: "
        + (calendar.get(Calendar.DST_OFFSET)/(60*60*1000))); // in hours
 </code></example></blockquote></format></para><format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="T:Java.Util.Calendar" /></c></term></item><item><term><c><see cref="T:Java.Util.TimeZone" /></c></term></item></list><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/GregorianCalendar.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GregorianCalendar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Constructs a new <c>GregorianCalendar</c> initialized to the current date and
 time with the default <c>Locale</c> and <c>TimeZone</c>.</summary>
        <remarks><para tool="javadoc-to-mdoc">Constructs a new <c>GregorianCalendar</c> initialized to the current date and
 time with the default <c>Locale</c> and <c>TimeZone</c>.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/GregorianCalendar.html#GregorianCalendar()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GregorianCalendar (Java.Util.Locale locale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Util.Locale locale) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/util/Locale;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="locale" Type="Java.Util.Locale" />
      </Parameters>
      <Docs>
        <param name="locale">To be added.</param>
        <summary>Constructs a new <c>GregorianCalendar</c> initialized to the current date and
 time and using the specified <c>Locale</c> and the default <c>TimeZone</c>.</summary>
        <remarks><para tool="javadoc-to-mdoc">Constructs a new <c>GregorianCalendar</c> initialized to the current date and
 time and using the specified <c>Locale</c> and the default <c>TimeZone</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/GregorianCalendar.html#GregorianCalendar(java.util.Locale)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GregorianCalendar (Java.Util.TimeZone timezone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Util.TimeZone timezone) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/util/TimeZone;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="timezone" Type="Java.Util.TimeZone" />
      </Parameters>
      <Docs>
        <param name="timezone">To be added.</param>
        <summary>Constructs a new <c>GregorianCalendar</c> initialized to the current date and
 time and using the specified <c>TimeZone</c> and the default <c>Locale</c>.</summary>
        <remarks><para tool="javadoc-to-mdoc">Constructs a new <c>GregorianCalendar</c> initialized to the current date and
 time and using the specified <c>TimeZone</c> and the default <c>Locale</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/GregorianCalendar.html#GregorianCalendar(java.util.TimeZone)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GregorianCalendar (Java.Util.TimeZone timezone, Java.Util.Locale locale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Util.TimeZone timezone, class Java.Util.Locale locale) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/util/TimeZone;Ljava/util/Locale;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="timezone" Type="Java.Util.TimeZone" />
        <Parameter Name="locale" Type="Java.Util.Locale" />
      </Parameters>
      <Docs>
        <param name="timezone">To be added.</param>
        <param name="locale">To be added.</param>
        <summary>Constructs a new <c>GregorianCalendar</c> initialized to the current date and
 time and using the specified <c>TimeZone</c> and <c>Locale</c>.</summary>
        <remarks><para tool="javadoc-to-mdoc">Constructs a new <c>GregorianCalendar</c> initialized to the current date and
 time and using the specified <c>TimeZone</c> and <c>Locale</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/GregorianCalendar.html#GregorianCalendar(java.util.TimeZone, java.util.Locale)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected GregorianCalendar (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GregorianCalendar (int year, int month, int day);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(III)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">To be added.</param>
        <param name="month">To be added.</param>
        <param name="day">To be added.</param>
        <summary>Constructs a new <c>GregorianCalendar</c> initialized to midnight in the default
 <c>TimeZone</c> and <c>Locale</c> on the specified date.</summary>
        <remarks><para tool="javadoc-to-mdoc">Constructs a new <c>GregorianCalendar</c> initialized to midnight in the default
 <c>TimeZone</c> and <c>Locale</c> on the specified date.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/GregorianCalendar.html#GregorianCalendar(int, int, int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GregorianCalendar (int year, int month, int day, int hour, int minute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(IIIII)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">To be added.</param>
        <param name="month">To be added.</param>
        <param name="day">To be added.</param>
        <param name="hour">To be added.</param>
        <param name="minute">To be added.</param>
        <summary>Constructs a new <c>GregorianCalendar</c> initialized to the specified date and
 time in the default <c>TimeZone</c> and <c>Locale</c>.</summary>
        <remarks><para tool="javadoc-to-mdoc">Constructs a new <c>GregorianCalendar</c> initialized to the specified date and
 time in the default <c>TimeZone</c> and <c>Locale</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/GregorianCalendar.html#GregorianCalendar(int, int, int, int, int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GregorianCalendar (int year, int month, int day, int hour, int minute, int second);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(IIIIII)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">To be added.</param>
        <param name="month">To be added.</param>
        <param name="day">To be added.</param>
        <param name="hour">To be added.</param>
        <param name="minute">To be added.</param>
        <param name="second">To be added.</param>
        <summary>Constructs a new <c>GregorianCalendar</c> initialized to the specified date and
 time in the default <c>TimeZone</c> and <c>Locale</c>.</summary>
        <remarks><para tool="javadoc-to-mdoc">Constructs a new <c>GregorianCalendar</c> initialized to the specified date and
 time in the default <c>TimeZone</c> and <c>Locale</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/GregorianCalendar.html#GregorianCalendar(int, int, int, int, int, int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Ad">
      <MemberSignature Language="C#" Value="public const int Ad = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 Ad = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("AD")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Value for the AD era.</summary>
        <remarks><para tool="javadoc-to-mdoc">Value for the AD era.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/GregorianCalendar.html#AD" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public override void Add (Java.Util.CalendarField field, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Add(valuetype Java.Util.CalendarField field, int32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("add", "(II)V", "GetAdd_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="Java.Util.CalendarField">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="field">the <c>Calendar</c> field to modify.</param>
        <param name="value">the amount to add to the field.</param>
        <summary>Adds the specified amount to a <c>Calendar</c> field.</summary>
        <remarks><para tool="javadoc-to-mdoc">Adds the specified amount to a <c>Calendar</c> field.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/GregorianCalendar.html#add(int, int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the specified field is DST_OFFSET or ZONE_OFFSET.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Bc">
      <MemberSignature Language="C#" Value="public const int Bc = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 Bc = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("BC")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Value for the BC era.</summary>
        <remarks><para tool="javadoc-to-mdoc">Value for the BC era.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/GregorianCalendar.html#BC" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ComputeFields">
      <MemberSignature Language="C#" Value="protected override void ComputeFields ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ComputeFields() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("computeFields", "()V", "GetComputeFieldsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Computes the <c>Calendar</c> fields from <c>time</c>.</summary>
        <remarks><para tool="javadoc-to-mdoc">Computes the <c>Calendar</c> fields from <c>time</c>.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/GregorianCalendar.html#computeFields()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ComputeTime">
      <MemberSignature Language="C#" Value="protected override void ComputeTime ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ComputeTime() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("computeTime", "()V", "GetComputeTimeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Computes <c>time</c> from the Calendar fields.</summary>
        <remarks><para tool="javadoc-to-mdoc">Computes <c>time</c> from the Calendar fields.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/GregorianCalendar.html#computeTime()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetGreatestMinimum">
      <MemberSignature Language="C#" Value="public override int GetGreatestMinimum (Java.Util.CalendarField field);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetGreatestMinimum(valuetype Java.Util.CalendarField field) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getGreatestMinimum", "(I)I", "GetGetGreatestMinimum_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="Java.Util.CalendarField">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="field">the field.</param>
        <summary>Gets the greatest minimum value of the specified field.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Gets the greatest minimum value of the specified field. For the gregorian
 calendar, this value is the same as <c>getMinimum()</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/GregorianCalendar.html#getGreatestMinimum(int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLeastMaximum">
      <MemberSignature Language="C#" Value="public override int GetLeastMaximum (Java.Util.CalendarField field);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLeastMaximum(valuetype Java.Util.CalendarField field) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getLeastMaximum", "(I)I", "GetGetLeastMaximum_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="Java.Util.CalendarField">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="field">the field.</param>
        <summary>Gets the smallest maximum value of the specified field.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Gets the smallest maximum value of the specified field. For example, 28
 for the day of month field.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/GregorianCalendar.html#getLeastMaximum(int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetMaximum">
      <MemberSignature Language="C#" Value="public override int GetMaximum (Java.Util.CalendarField field);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaximum(valuetype Java.Util.CalendarField field) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getMaximum", "(I)I", "GetGetMaximum_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="Java.Util.CalendarField">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="field">the field.</param>
        <summary>Gets the greatest maximum value of the specified field.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Gets the greatest maximum value of the specified field. For example, 31
 for the day of month field.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/GregorianCalendar.html#getMaximum(int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetMinimum">
      <MemberSignature Language="C#" Value="public override int GetMinimum (Java.Util.CalendarField field);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMinimum(valuetype Java.Util.CalendarField field) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getMinimum", "(I)I", "GetGetMinimum_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="Java.Util.CalendarField">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="field">the field.</param>
        <summary>Gets the smallest minimum value of the specified field.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Gets the smallest minimum value of the specified field.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/GregorianCalendar.html#getMinimum(int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GregorianChange">
      <MemberSignature Language="C#" Value="public Java.Util.Date GregorianChange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.Date GregorianChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getGregorianChange", "()Ljava/util/Date;", "GetGetGregorianChangeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setGregorianChange", "(Ljava/util/Date;)V", "GetSetGregorianChange_Ljava_util_Date_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Date</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the gregorian change date of this calendar.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/java/util/GregorianCalendar.html#getGregorianChange()" target="_blank">[Android Documentation]</a><br /></format>Returns the gregorian change date of this calendar. This is the date on
 which the gregorian calendar came into effect.</para><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/java/util/GregorianCalendar.html#setGregorianChange(java.util.Date)" target="_blank">[Android Documentation]</a><br /></format>Sets the gregorian change date of this calendar.
</para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public virtual bool IsLeapYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLeapYear(int32 year) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isLeapYear", "(I)Z", "GetIsLeapYear_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">To be added.</param>
        <summary>Returns true if <c>year</c> is a leap year.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns true if <c>year</c> is a leap year.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/GregorianCalendar.html#isLeapYear(int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsWeekDateSupported">
      <MemberSignature Language="C#" Value="public override bool IsWeekDateSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWeekDateSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isWeekDateSupported", "()Z", "GetIsWeekDateSupportedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Roll">
      <MemberSignature Language="C#" Value="public override void Roll (Java.Util.CalendarField field, bool increment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Roll(valuetype Java.Util.CalendarField field, bool increment) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("roll", "(IZ)V", "GetRoll_IZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="Java.Util.CalendarField">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="increment" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="field">the field to roll.</param>
        <param name="increment"><c>true</c> to increment the field, <c>false</c> to
            decrement.</param>
        <summary>Increments or decrements the specified field and wraps the value of the
 field when it goes beyond the maximum or minimum value for the current
 date.</summary>
        <remarks><para tool="javadoc-to-mdoc">Increments or decrements the specified field and wraps the value of the
 field when it goes beyond the maximum or minimum value for the current
 date. Other fields will be adjusted as required to maintain a consistent
 date. For example, March 31 will roll to April 30 when rolling the month
 field.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/util/GregorianCalendar.html#roll(int, boolean)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if an invalid field is specified.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
