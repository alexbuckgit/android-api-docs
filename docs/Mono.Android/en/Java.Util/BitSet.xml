<Type Name="BitSet" FullName="Java.Util.BitSet">
  <TypeSignature Language="C#" Value="public class BitSet : Java.Lang.Object, IDisposable, Java.IO.ISerializable, Java.Lang.ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BitSet extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.IO.ISerializable, class Java.Lang.ICloneable, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Java.IO.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/util/BitSet", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>The <c>BitSet</c> class implements a
 .</summary>
    <remarks />
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitSet ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Creates a new <c>BitSet</c> with size equal to 64 bits.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitSet (int bitCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 bitCount) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="nbits" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bitCount">To be added.</param>
        <summary>Creates a new <c>BitSet</c> with size equal to <c>bitCount</c>, rounded up to
 a multiple of 64.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NegativeArraySizeException">if <c>bitCount </c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BitSet (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public virtual void And (Java.Util.BitSet bs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void And(class Java.Util.BitSet bs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("and", "(Ljava/util/BitSet;)V", "GetAnd_Ljava_util_BitSet_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bs" Type="Java.Util.BitSet" />
      </Parameters>
      <Docs>
        <param name="bs">To be added.</param>
        <summary>Logically ands the bits of this <c>BitSet</c> with <c>bs</c>.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AndNot">
      <MemberSignature Language="C#" Value="public virtual void AndNot (Java.Util.BitSet bs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AndNot(class Java.Util.BitSet bs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("andNot", "(Ljava/util/BitSet;)V", "GetAndNot_Ljava_util_BitSet_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bs" Type="Java.Util.BitSet" />
      </Parameters>
      <Docs>
        <param name="bs">To be added.</param>
        <summary>Clears all bits in this <c>BitSet</c> which are also set in <c>bs</c>.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Cardinality">
      <MemberSignature Language="C#" Value="public virtual int Cardinality ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Cardinality() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("cardinality", "()I", "GetCardinalityHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the number of bits that are <c>true</c> in this <c>BitSet</c>.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clear", "()V", "GetClearHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">Clears all the bits in this <c>BitSet</c>.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clear", "(I)V", "GetClear_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>Clears the bit at index <c>index</c>.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>index </c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear (int fromIndex, int toIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear(int32 fromIndex, int32 toIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clear", "(II)V", "GetClear_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos1" Type="System.Int32" />
        <Parameter Name="pos2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fromIndex">To be added.</param>
        <param name="toIndex">To be added.</param>
        <summary>Clears the range of bits <c>[fromIndex, toIndex)</c>.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>fromIndex</c> or <c>toIndex</c> is negative, or if
             <c>toIndex</c> is smaller than <c>fromIndex</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object Clone() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clone", "()Ljava/lang/Object;", "GetCloneHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates and returns a copy of this <c>Object</c>.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Flip">
      <MemberSignature Language="C#" Value="public virtual void Flip (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flip(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("flip", "(I)V", "GetFlip_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary tool="true">Flips the bit at index <c>index</c>.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>index </c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Flip">
      <MemberSignature Language="C#" Value="public virtual void Flip (int fromIndex, int toIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flip(int32 fromIndex, int32 toIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("flip", "(II)V", "GetFlip_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos1" Type="System.Int32" />
        <Parameter Name="pos2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fromIndex">To be added.</param>
        <param name="toIndex">To be added.</param>
        <summary>Flips the range of bits <c>[fromIndex, toIndex)</c>.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>fromIndex</c> or <c>toIndex</c> is negative, or if
             <c>toIndex</c> is smaller than <c>fromIndex</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual bool Get (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Get(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("get", "(I)Z", "GetGet_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary tool="true">Returns the bit at index <c>index</c>.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>index </c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Java.Util.BitSet Get (int fromIndex, int toIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.BitSet Get(int32 fromIndex, int32 toIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("get", "(II)Ljava/util/BitSet;", "GetGet_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.BitSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos1" Type="System.Int32" />
        <Parameter Name="pos2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fromIndex">To be added.</param>
        <param name="toIndex">To be added.</param>
        <summary>Returns a new <c>BitSet</c> containing the
 range of bits <c>[fromIndex, toIndex)</c>, shifted down so that the bit
 at <c>fromIndex</c> is at bit 0 in the new <c>BitSet</c>.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>fromIndex</c> or <c>toIndex</c> is negative, or if
             <c>toIndex</c> is smaller than <c>fromIndex</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Intersects">
      <MemberSignature Language="C#" Value="public virtual bool Intersects (Java.Util.BitSet bs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Intersects(class Java.Util.BitSet bs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("intersects", "(Ljava/util/BitSet;)Z", "GetIntersects_Ljava_util_BitSet_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bs" Type="Java.Util.BitSet" />
      </Parameters>
      <Docs>
        <param name="bs">To be added.</param>
        <summary>Returns true if <c>this.and(bs)</c> is non-empty, but may be faster than computing that.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public virtual bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isEmpty", "()Z", "GetIsEmptyHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if all the bits in this <c>BitSet</c> are set to false, false otherwise.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public virtual int Length ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Length() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("length", "()I", "GetLengthHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the number of bits up to and including the highest bit set.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NextClearBit">
      <MemberSignature Language="C#" Value="public virtual int NextClearBit (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 NextClearBit(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("nextClearBit", "(I)I", "GetNextClearBit_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>Returns the index of the first bit that is clear on or after <c>index</c>.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>index </c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="NextSetBit">
      <MemberSignature Language="C#" Value="public virtual int NextSetBit (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 NextSetBit(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("nextSetBit", "(I)I", "GetNextSetBit_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>Returns the index of the first bit that is set on or after <c>index</c>, or -1
 if no higher bits are set.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>index </c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public virtual void Or (Java.Util.BitSet bs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Or(class Java.Util.BitSet bs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("or", "(Ljava/util/BitSet;)V", "GetOr_Ljava_util_BitSet_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bs" Type="Java.Util.BitSet" />
      </Parameters>
      <Docs>
        <param name="bs">To be added.</param>
        <summary>Logically ors the bits of this <c>BitSet</c> with <c>bs</c>.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PreviousClearBit">
      <MemberSignature Language="C#" Value="public virtual int PreviousClearBit (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 PreviousClearBit(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("previousClearBit", "(I)I", "GetPreviousClearBit_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>Returns the index of the first bit that is clear on or before <c>index</c>, or -1 if
 no lower bits are clear or <c>index == -1</c>.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 19" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>index </c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="PreviousSetBit">
      <MemberSignature Language="C#" Value="public virtual int PreviousSetBit (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 PreviousSetBit(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("previousSetBit", "(I)I", "GetPreviousSetBit_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>Returns the index of the first bit that is set on or before <c>index</c>, or -1 if
 no lower bits are set or <c>index == -1</c>.</summary>
        <returns>To be added.</returns>
        <remarks />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>index </c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public virtual void Set (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("set", "(I)V", "GetSet_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary tool="true">Sets the bit at index <c>index</c> to true.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>index </c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public virtual void Set (int index, bool state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(int32 index, bool state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("set", "(IZ)V", "GetSet_IZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="System.Int32" />
        <Parameter Name="val" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="state">To be added.</param>
        <summary>Sets the bit at index <c>index</c> to <c>state</c>.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>index </c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public virtual void Set (int fromIndex, int toIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(int32 fromIndex, int32 toIndex) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("set", "(II)V", "GetSet_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos1" Type="System.Int32" />
        <Parameter Name="pos2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fromIndex">To be added.</param>
        <param name="toIndex">To be added.</param>
        <summary>Sets the range of bits <c>[fromIndex, toIndex)</c>.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>fromIndex</c> or <c>toIndex</c> is negative, or if
             <c>toIndex</c> is smaller than <c>fromIndex</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public virtual void Set (int fromIndex, int toIndex, bool state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(int32 fromIndex, int32 toIndex, bool state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("set", "(IIZ)V", "GetSet_IIZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos1" Type="System.Int32" />
        <Parameter Name="pos2" Type="System.Int32" />
        <Parameter Name="val" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fromIndex">To be added.</param>
        <param name="toIndex">To be added.</param>
        <param name="state">To be added.</param>
        <summary>Sets the range of bits <c>[fromIndex, toIndex)</c> to <c>state</c>.</summary>
        <remarks />
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>fromIndex</c> or <c>toIndex</c> is negative, or if
             <c>toIndex</c> is smaller than <c>fromIndex</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public virtual int Size ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Size() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("size", "()I", "GetSizeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the capacity in bits of the array implementing this <c>BitSet</c>.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ToByteArray">
      <MemberSignature Language="C#" Value="public virtual byte[] ToByteArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] ToByteArray() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("toByteArray", "()[B", "GetToByteArrayHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a new <c>byte[]</c> containing a little-endian representation the bits of
 this <c>BitSet</c>, suitable for passing to <c>valueOf</c> to reconstruct
 this <c>BitSet</c>.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ToLongArray">
      <MemberSignature Language="C#" Value="public virtual long[] ToLongArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64[] ToLongArray() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("toLongArray", "()[J", "GetToLongArrayHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a new <c>long[]</c> containing a little-endian representation of the bits of
 this <c>BitSet</c>, suitable for passing to <c>valueOf</c> to reconstruct
 this <c>BitSet</c>.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ValueOf">
      <MemberSignature Language="C#" Value="public static Java.Util.BitSet ValueOf (Java.Nio.ByteBuffer byteBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.BitSet ValueOf(class Java.Nio.ByteBuffer byteBuffer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("valueOf", "(Ljava/nio/ByteBuffer;)Ljava/util/BitSet;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.BitSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="byteBuffer">To be added.</param>
        <summary tool="true">Returns a <c>BitSet</c> corresponding to <c>byteBuffer</c>, interpreted as a little-endian
 sequence of bits.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ValueOf">
      <MemberSignature Language="C#" Value="public static Java.Util.BitSet ValueOf (Java.Nio.LongBuffer longBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.BitSet ValueOf(class Java.Nio.LongBuffer longBuffer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("valueOf", "(Ljava/nio/LongBuffer;)Ljava/util/BitSet;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.BitSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="Java.Nio.LongBuffer" />
      </Parameters>
      <Docs>
        <param name="longBuffer">To be added.</param>
        <summary>Returns a <c>BitSet</c> corresponding to <c>longBuffer</c>, interpreted as a little-endian
 sequence of bits.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ValueOf">
      <MemberSignature Language="C#" Value="public static Java.Util.BitSet ValueOf (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.BitSet ValueOf(unsigned int8[] bytes) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("valueOf", "([B)Ljava/util/BitSet;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.BitSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <summary>Equivalent to <c>BitSet.valueOf(ByteBuffer.wrap(bytes))</c>.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ValueOf">
      <MemberSignature Language="C#" Value="public static Java.Util.BitSet ValueOf (long[] longs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.BitSet ValueOf(int64[] longs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("valueOf", "([J)Ljava/util/BitSet;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.BitSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Int64[]" />
      </Parameters>
      <Docs>
        <param name="longs">To be added.</param>
        <summary>Equivalent to <c>BitSet.valueOf(LongBuffer.wrap(longs))</c>, but likely to be faster.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Xor">
      <MemberSignature Language="C#" Value="public virtual void Xor (Java.Util.BitSet bs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Xor(class Java.Util.BitSet bs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("xor", "(Ljava/util/BitSet;)V", "GetXor_Ljava_util_BitSet_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bs" Type="Java.Util.BitSet" />
      </Parameters>
      <Docs>
        <param name="bs">To be added.</param>
        <summary>Logically xors the bits of this <c>BitSet</c> with <c>bs</c>.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
