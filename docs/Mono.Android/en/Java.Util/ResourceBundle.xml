<Type Name="ResourceBundle" FullName="Java.Util.ResourceBundle">
  <TypeSignature Language="C#" Value="public abstract class ResourceBundle : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ResourceBundle extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/util/ResourceBundle", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>
      <c>ResourceBundle</c> is an abstract class which is the superclass of classes which
 provide <c>Locale</c>-specific resources.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">
        <c>ResourceBundle</c> is an abstract class which is the superclass of classes which
 provide <c>Locale</c>-specific resources. A bundle contains a number of named
 resources, where the names are <c>Strings</c>. A bundle may have a parent bundle,
 and when a resource is not found in a bundle, the parent bundle is searched for
 the resource. If the fallback mechanism reaches the base bundle and still
 can't find the resource it throws a <c>MissingResourceException</c>.

 <list type="bullet"><item><term>All bundles for the same group of resources share a common base bundle.
 This base bundle acts as the root and is the last fallback in case none of
 its children was able to respond to a request.</term></item><item><term>The first level contains changes between different languages. Only the
 differences between a language and the language of the base bundle need to be
 handled by a language-specific <c>ResourceBundle</c>.</term></item><item><term>The second level contains changes between different countries that use
 the same language. Only the differences between a country and the country of
 the language bundle need to be handled by a country-specific <c>ResourceBundle</c>.
 </term></item><item><term>The third level contains changes that don't have a geographic reason
 (e.g. changes that where made at some point in time like <c>PREEURO</c> where the
 currency of come countries changed. The country bundle would return the
 current currency (Euro) and the <c>PREEURO</c> variant bundle would return the old
 currency (e.g. DM for Germany).</term></item></list><i>Examples</i><list type="bullet"><item><term>BaseName (base bundle)
 </term></item><item><term>BaseName_de (german language bundle)
 </term></item><item><term>BaseName_fr (french language bundle)
 </term></item><item><term>BaseName_de_DE (bundle with Germany specific resources in german)
 </term></item><item><term>BaseName_de_CH (bundle with Switzerland specific resources in german)
 </term></item><item><term>BaseName_fr_CH (bundle with Switzerland specific resources in french)
 </term></item><item><term>BaseName_de_DE_PREEURO (bundle with Germany specific resources in german of
 the time before the Euro)
 </term></item><item><term>BaseName_fr_FR_PREEURO (bundle with France specific resources in french of
 the time before the Euro)
 </term></item></list>

 It's also possible to create variants for languages or countries. This can be
 done by just skipping the country or language abbreviation:
 BaseName_us__POSIX or BaseName__DE_PREEURO. But it's not allowed to
 circumvent both language and country: BaseName___VARIANT is illegal.</para>
      <format type="text/html">
        <h5 class="jd-tagtitle">See Also</h5>
      </format>
      <list type="bullet">
        <item>
          <term>
            <c>
              <see cref="T:Java.Util.Properties" />
            </c>
          </term>
        </item>
        <item>
          <term>
            <c>
              <see cref="T:Java.Util.PropertyResourceBundle" />
            </c>
          </term>
        </item>
        <item>
          <term>
            <c>
              <see cref="T:Java.Util.ListResourceBundle" />
            </c>
          </term>
        </item>
      </list>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/java/util/ResourceBundle.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceBundle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Constructs a new instance of this class.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new instance of this class.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/ResourceBundle.html#ResourceBundle()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ResourceBundle (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearCache">
      <MemberSignature Language="C#" Value="public static void ClearCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearCache() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearCache", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/ResourceBundle.html#clearCache()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="ClearCache">
      <MemberSignature Language="C#" Value="public static void ClearCache (Java.Lang.ClassLoader loader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearCache(class Java.Lang.ClassLoader loader) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearCache", "(Ljava/lang/ClassLoader;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="Java.Lang.ClassLoader" />
      </Parameters>
      <Docs>
        <param name="loader">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/ResourceBundle.html#clearCache(java.lang.ClassLoader)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("containsKey", "(Ljava/lang/String;)Z", "GetContainsKey_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/ResourceBundle.html#containsKey(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="GetBundle">
      <MemberSignature Language="C#" Value="public static Java.Util.ResourceBundle GetBundle (string bundleName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.ResourceBundle GetBundle(string bundleName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getBundle", "(Ljava/lang/String;)Ljava/util/ResourceBundle;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.ResourceBundle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bundleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="bundleName">the name of the <c>ResourceBundle</c>.</param>
        <summary tool="true">Finds the named resource bundle for the specified <c>Locale</c> and <c>ClassLoader</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Finds the named resource bundle for the default <c>Locale</c> and the caller's
 <c>ClassLoader</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/ResourceBundle.html#getBundle(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.MissingResourceException">if the <c>ResourceBundle</c> cannot be found.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBundle">
      <MemberSignature Language="C#" Value="public static Java.Util.ResourceBundle GetBundle (string bundleName, Java.Util.Locale locale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.ResourceBundle GetBundle(string bundleName, class Java.Util.Locale locale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getBundle", "(Ljava/lang/String;Ljava/util/Locale;)Ljava/util/ResourceBundle;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.ResourceBundle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bundleName" Type="System.String" />
        <Parameter Name="locale" Type="Java.Util.Locale" />
      </Parameters>
      <Docs>
        <param name="bundleName">the name of the <c>ResourceBundle</c>.</param>
        <param name="locale">the <c>Locale</c>.</param>
        <summary>Finds the named <c>ResourceBundle</c> for the specified <c>Locale</c> and the caller
 <c>ClassLoader</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Finds the named <c>ResourceBundle</c> for the specified <c>Locale</c> and the caller
 <c>ClassLoader</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/ResourceBundle.html#getBundle(java.lang.String, java.util.Locale)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.MissingResourceException">if the resource bundle cannot be found.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBundle">
      <MemberSignature Language="C#" Value="public static Java.Util.ResourceBundle GetBundle (string baseName, Java.Util.ResourceBundle.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.ResourceBundle GetBundle(string baseName, class Java.Util.ResourceBundle/Control control) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getBundle", "(Ljava/lang/String;Ljava/util/ResourceBundle$Control;)Ljava/util/ResourceBundle;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.ResourceBundle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.String" />
        <Parameter Name="p1" Type="Java.Util.ResourceBundle+Control" />
      </Parameters>
      <Docs>
        <param name="baseName">the base name of a resource bundle</param>
        <param name="control">the control that control the access sequence</param>
        <summary>Finds the named resource bundle for the specified base name and control.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Finds the named resource bundle for the specified base name and control.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/ResourceBundle.html#getBundle(java.lang.String, java.util.ResourceBundle.Control)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="GetBundle">
      <MemberSignature Language="C#" Value="public static Java.Util.ResourceBundle GetBundle (string bundleName, Java.Util.Locale locale, Java.Lang.ClassLoader loader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.ResourceBundle GetBundle(string bundleName, class Java.Util.Locale locale, class Java.Lang.ClassLoader loader) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getBundle", "(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/ClassLoader;)Ljava/util/ResourceBundle;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.ResourceBundle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bundleName" Type="System.String" />
        <Parameter Name="locale" Type="Java.Util.Locale" />
        <Parameter Name="loader" Type="Java.Lang.ClassLoader" />
      </Parameters>
      <Docs>
        <param name="bundleName">the name of the <c>ResourceBundle</c>.</param>
        <param name="locale">the <c>Locale</c>.</param>
        <param name="loader">the <c>ClassLoader</c> to use.</param>
        <summary>Finds the named resource bundle for the specified <c>Locale</c> and <c>ClassLoader</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Finds the named resource bundle for the specified <c>Locale</c> and <c>ClassLoader</c>.

 The passed base name and <c>Locale</c> are used to create resource bundle names.
 The first name is created by concatenating the base name with the result
 of <c><see cref="M:Java.Util.Locale.ToString" /></c>. From this name all parent bundle names are
 derived. Then the same thing is done for the default <c>Locale</c>. This results
 in a list of possible bundle names.

 <i>Example</i> For the basename "BaseName", the <c>Locale</c> of the
 German part of Switzerland (de_CH) and the default <c>Locale</c> en_US the list
 would look something like this:

 <list type="number"><item><term>BaseName_de_CH</term></item><item><term>BaseName_de</term></item><item><term>Basename_en_US</term></item><item><term>Basename_en</term></item><item><term>BaseName</term></item></list>

 This list also shows the order in which the bundles will be searched for a requested
 resource in the German part of Switzerland (de_CH).

 As a first step, this method tries to instantiate
 a <c>ResourceBundle</c> with the names provided.
 If such a class can be instantiated and initialized, it is returned and
 all the parent bundles are instantiated too. If no such class can be
 found this method tries to load a <c>.properties</c> file with the names by
 replacing dots in the base name with a slash and by appending
 "<c>.properties</c>" at the end of the string. If such a resource can be found
 by calling <c><see cref="M:Java.Lang.ClassLoader.GetResource(System.String)" /></c> it is used to
 initialize a <c><see cref="T:Java.Util.PropertyResourceBundle" /></c>. If this succeeds, it will
 also load the parents of this <c>ResourceBundle</c>.

 For compatibility with older code, the bundle name isn't required to be
 a fully qualified class name. It's also possible to directly pass
 the path to a properties file (without a file extension).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/ResourceBundle.html#getBundle(java.lang.String, java.util.Locale, java.lang.ClassLoader)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.MissingResourceException">if the <c>ResourceBundle</c> cannot be found.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBundle">
      <MemberSignature Language="C#" Value="public static Java.Util.ResourceBundle GetBundle (string baseName, Java.Util.Locale targetLocale, Java.Util.ResourceBundle.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.ResourceBundle GetBundle(string baseName, class Java.Util.Locale targetLocale, class Java.Util.ResourceBundle/Control control) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getBundle", "(Ljava/lang/String;Ljava/util/Locale;Ljava/util/ResourceBundle$Control;)Ljava/util/ResourceBundle;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.ResourceBundle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.String" />
        <Parameter Name="p1" Type="Java.Util.Locale" />
        <Parameter Name="p2" Type="Java.Util.ResourceBundle+Control" />
      </Parameters>
      <Docs>
        <param name="baseName">the base name of a resource bundle</param>
        <param name="targetLocale">the target locale of the resource bundle</param>
        <param name="control">the control that control the access sequence</param>
        <summary>Finds the named resource bundle for the specified base name and control.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Finds the named resource bundle for the specified base name and control.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/ResourceBundle.html#getBundle(java.lang.String, java.util.Locale, java.util.ResourceBundle.Control)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="GetBundle">
      <MemberSignature Language="C#" Value="public static Java.Util.ResourceBundle GetBundle (string baseName, Java.Util.Locale targetLocale, Java.Lang.ClassLoader loader, Java.Util.ResourceBundle.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.ResourceBundle GetBundle(string baseName, class Java.Util.Locale targetLocale, class Java.Lang.ClassLoader loader, class Java.Util.ResourceBundle/Control control) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getBundle", "(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/ClassLoader;Ljava/util/ResourceBundle$Control;)Ljava/util/ResourceBundle;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.ResourceBundle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.String" />
        <Parameter Name="p1" Type="Java.Util.Locale" />
        <Parameter Name="p2" Type="Java.Lang.ClassLoader" />
        <Parameter Name="p3" Type="Java.Util.ResourceBundle+Control" />
      </Parameters>
      <Docs>
        <param name="baseName">the base name of a resource bundle</param>
        <param name="targetLocale">the target locale of the resource bundle</param>
        <param name="loader">the class loader to load resource</param>
        <param name="control">the control that control the access sequence</param>
        <summary>Finds the named resource bundle for the specified base name and control.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Finds the named resource bundle for the specified base name and control.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/ResourceBundle.html#getBundle(java.lang.String, java.util.Locale, java.lang.ClassLoader, java.util.ResourceBundle.Control)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public Java.Lang.Object GetObject (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Object GetObject(string key) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getObject", "(Ljava/lang/String;)Ljava/lang/Object;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">the name of the resource.</param>
        <summary>Returns the named resource from this <c>ResourceBundle</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the named resource from this <c>ResourceBundle</c>. If the resource
 cannot be found in this bundle, it falls back to the parent bundle (if
 it's not null) by calling the <c><see cref="M:Java.Util.ResourceBundle.HandleGetObject(System.String)" /></c> method. If the resource still
 can't be found it throws a <c>MissingResourceException</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/ResourceBundle.html#getObject(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.MissingResourceException">if the resource is not found.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public string GetString (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetString(string key) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getString", "(Ljava/lang/String;)Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">the name of the resource.</param>
        <summary>Returns the named string resource from this <c>ResourceBundle</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the named string resource from this <c>ResourceBundle</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/ResourceBundle.html#getString(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.MissingResourceException">if the resource is not found.</exception>
        <exception cref="T:Java.Lang.ClassCastException">if the resource found is not a string.</exception>
        <altmember cref="M:Java.Util.ResourceBundle.GetObject(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetStringArray">
      <MemberSignature Language="C#" Value="public string[] GetStringArray (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetStringArray(string key) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getStringArray", "(Ljava/lang/String;)[Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">the name of the resource.</param>
        <summary>Returns the named resource from this <c>ResourceBundle</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the named resource from this <c>ResourceBundle</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/ResourceBundle.html#getStringArray(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.MissingResourceException">if the resource is not found.</exception>
        <exception cref="T:Java.Lang.ClassCastException">if the resource found is not an array of strings.</exception>
        <altmember cref="M:Java.Util.ResourceBundle.GetObject(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HandleGetObject">
      <MemberSignature Language="C#" Value="public abstract Java.Lang.Object HandleGetObject (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object HandleGetObject(string key) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("handleGetObject", "(Ljava/lang/String;)Ljava/lang/Object;", "GetHandleGetObject_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">the name of the resource.</param>
        <summary>Returns the named resource from this <c>ResourceBundle</c>, or null if the
 resource is not found.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the named resource from this <c>ResourceBundle</c>, or null if the
 resource is not found.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/ResourceBundle.html#handleGetObject(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HandleKeySet">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.ICollection&lt;string&gt; HandleKeySet ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.ICollection`1&lt;string&gt; HandleKeySet() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("handleKeySet", "()Ljava/util/Set;", "GetHandleKeySetHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/ResourceBundle.html#handleKeySet()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public abstract Java.Util.IEnumeration Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.IEnumeration Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getKeys", "()Ljava/util/Enumeration;", "GetGetKeysHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.IEnumeration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the names of the resources contained in this <c>ResourceBundle</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the names of the resources contained in this <c>ResourceBundle</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/ResourceBundle.html#getKeys()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="KeySet">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.ICollection&lt;string&gt; KeySet ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.ICollection`1&lt;string&gt; KeySet() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("keySet", "()Ljava/util/Set;", "GetKeySetHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/ResourceBundle.html#keySet()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="Locale">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Locale Locale { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.Locale Locale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLocale", "()Ljava/util/Locale;", "GetGetLocaleHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Locale</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <c>Locale</c> of this <c>ResourceBundle</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the <c>Locale</c> of this <c>ResourceBundle</c>. In case a bundle was not
 found for the requested <c>Locale</c>, this will return the actual <c>Locale</c> of
 this resource bundle that was found after doing a fallback.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/ResourceBundle.html#getLocale()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="protected Java.Util.ResourceBundle Parent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.ResourceBundle Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parent")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.ResourceBundle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The parent of this <c>ResourceBundle</c> that is used if this bundle doesn't
 include the requested resource.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">The parent of this <c>ResourceBundle</c> that is used if this bundle doesn't
 include the requested resource.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/ResourceBundle.html#parent" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetParent">
      <MemberSignature Language="C#" Value="protected virtual void SetParent (Java.Util.ResourceBundle bundle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetParent(class Java.Util.ResourceBundle bundle) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setParent", "(Ljava/util/ResourceBundle;)V", "GetSetParent_Ljava_util_ResourceBundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bundle" Type="Java.Util.ResourceBundle" />
      </Parameters>
      <Docs>
        <param name="bundle">the parent <c>ResourceBundle</c>.
</param>
        <summary>Sets the parent resource bundle of this <c>ResourceBundle</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the parent resource bundle of this <c>ResourceBundle</c>. The parent is
 searched for resources which are not found in this <c>ResourceBundle</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/ResourceBundle.html#setParent(java.util.ResourceBundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>