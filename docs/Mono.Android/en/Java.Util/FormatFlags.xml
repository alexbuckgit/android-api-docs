<Type Name="FormatFlags" FullName="Java.Util.FormatFlags">
  <TypeSignature Language="C#" Value="public enum FormatFlags" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed FormatFlags extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Enumerates values returned by  several types and taken as a parameter of the <see cref="F:Java.Util.IFormattable.FormatTo" /> member.</summary>
    <remarks />
  </Docs>
  <Members>
    <Member MemberName="Alternate">
      <MemberSignature Language="C#" Value="Alternate" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.Util.FormatFlags Alternate = int32(4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Util.FormatFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Denotes the output is to be formatted in an alternate form. The definition
 of the alternate form is determined by the <c>Formattable</c>.

 This flag corresponds to <c>'#' ('#')</c> in the format specifier.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="LeftJustify">
      <MemberSignature Language="C#" Value="LeftJustify" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.Util.FormatFlags LeftJustify = int32(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Util.FormatFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Denotes the output is to be left-justified. In order to fill the minimum
 width requirement, spaces(' ') will be appended at the end of the
 specified output element. If no such flag is set, the output is
 right-justified.

 The flag corresponds to '-' ('-') in the format specifier.
</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Uppercase">
      <MemberSignature Language="C#" Value="Uppercase" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.Util.FormatFlags Uppercase = int32(2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Util.FormatFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Denotes the output is to be converted to upper case in the way the locale
 parameter of Formatter.formatTo() requires. The output has the same
 effect as <c>String.toUpperCase(java.util.Locale)</c>.

 This flag corresponds to <c>'^' ('^')</c> in the format specifier.
</para>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>
