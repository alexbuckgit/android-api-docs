<Type Name="LinkedHashMap" FullName="Java.Util.LinkedHashMap">
  <TypeSignature Language="C#" Value="public class LinkedHashMap : Java.Util.HashMap, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinkedHashMap extends Java.Util.HashMap implements class Android.Runtime.IJavaObject, class Java.Util.IMap, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Util.HashMap</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/util/LinkedHashMap", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>LinkedHashMap is an implementation of <c><see cref="T:Java.Util.IMap" /></c> that guarantees iteration order.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">LinkedHashMap is an implementation of <c><see cref="T:Java.Util.IMap" /></c> that guarantees iteration order.
 All optional operations are supported.

 </para>
      <para tool="javadoc-to-mdoc">All elements are permitted as keys or values, including null.

 </para>
      <para tool="javadoc-to-mdoc">Entries are kept in a doubly-linked list. The iteration order is, by default, the
 order in which keys were inserted. Reinserting an already-present key doesn't change the
 order. If the three argument constructor is used, and <c>accessOrder</c> is specified as
 <c>true</c>, the iteration will be in the order that entries were accessed.
 The access order is affected by <c>put</c>, <c>get</c>, and <c>putAll</c> operations,
 but not by operations on the collection views.

 </para>
      <para tool="javadoc-to-mdoc">Note: the implementation of <c>LinkedHashMap</c> is not synchronized.
 If one thread of several threads accessing an instance modifies the map
 structurally, access to the map needs to be synchronized. For
 insertion-ordered instances a structural modification is an operation that
 removes or adds an entry. Access-ordered instances also are structurally
 modified by <c>put</c>, <c>get</c>, and <c>putAll</c> since these methods
 change the order of the entries. Changes in the value of an entry are not structural changes.

 </para>
      <para tool="javadoc-to-mdoc">The <c>Iterator</c> created by calling the <c>iterator</c> method
 may throw a <c>ConcurrentModificationException</c> if the map is structurally
 changed while an iterator is used to iterate over the elements. Only the
 <c>remove</c> method that is provided by the iterator allows for removal of
 elements during iteration. It is not possible to guarantee that this
 mechanism works in all cases of unsynchronized concurrent modification. It
 should only be used for debugging purposes.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/java/util/LinkedHashMap.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinkedHashMap ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Constructs a new empty <c>LinkedHashMap</c> instance.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new empty <c>LinkedHashMap</c> instance.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/LinkedHashMap.html#LinkedHashMap()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinkedHashMap (System.Collections.IDictionary map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary map) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/util/Map;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="map" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="map">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinkedHashMap (int initialCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCapacity) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="initialCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="initialCapacity">To be added.</param>
        <summary>Constructs a new <c>LinkedHashMap</c> instance with the specified
 capacity.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>LinkedHashMap</c> instance with the specified
 capacity.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/LinkedHashMap.html#LinkedHashMap(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">when the capacity is less than zero.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinkedHashMap (int initialCapacity, float loadFactor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCapacity, float32 loadFactor) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(IF)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="initialCapacity" Type="System.Int32" />
        <Parameter Name="loadFactor" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="initialCapacity">To be added.</param>
        <param name="loadFactor">To be added.</param>
        <summary>Constructs a new <c>LinkedHashMap</c> instance with the specified
 capacity and load factor.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>LinkedHashMap</c> instance with the specified
 capacity and load factor.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/LinkedHashMap.html#LinkedHashMap(int, float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">when the capacity is less than zero or the load factor is
             less or equal to zero.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LinkedHashMap (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinkedHashMap (int initialCapacity, float loadFactor, bool accessOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCapacity, float32 loadFactor, bool accessOrder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(IFZ)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="initialCapacity" Type="System.Int32" />
        <Parameter Name="loadFactor" Type="System.Single" />
        <Parameter Name="accessOrder" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="initialCapacity">To be added.</param>
        <param name="loadFactor">To be added.</param>
        <param name="accessOrder">To be added.</param>
        <summary>Constructs a new <c>LinkedHashMap</c> instance with the specified
 capacity, load factor and a flag specifying the ordering behavior.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>LinkedHashMap</c> instance with the specified
 capacity, load factor and a flag specifying the ordering behavior.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/LinkedHashMap.html#LinkedHashMap(int, float, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">when the capacity is less than zero or the load factor is
             less or equal to zero.
</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveEldestEntry">
      <MemberSignature Language="C#" Value="protected virtual bool RemoveEldestEntry (Java.Util.IMapEntry eldest);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool RemoveEldestEntry(class Java.Util.IMapEntry eldest) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeEldestEntry", "(Ljava/util/Map$Entry;)Z", "GetRemoveEldestEntry_Ljava_util_Map_Entry_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eldest" Type="Java.Util.IMapEntry" />
      </Parameters>
      <Docs>
        <param name="eldest">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
