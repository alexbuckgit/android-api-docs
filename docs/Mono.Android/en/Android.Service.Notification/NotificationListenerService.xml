<Type Name="NotificationListenerService" FullName="Android.Service.Notification.NotificationListenerService">
  <TypeSignature Language="C#" Value="public abstract class NotificationListenerService : Android.App.Service" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit NotificationListenerService extends Android.App.Service" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.App.Service</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/service/notification/NotificationListenerService", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A service that receives calls from the system when new notifications are
 posted or removed, or their ranking changed.</summary>
    <remarks><para tool="javadoc-to-mdoc">A service that receives calls from the system when new notifications are
 posted or removed, or their ranking changed.
 <example><code lang="xml">
 &lt;service android:name=".NotificationListener"
          android:label="&amp;#64;string/service_name"
          android:permission="android.permission.BIND_NOTIFICATION_LISTENER_SERVICE"&gt;
     &lt;intent-filter&gt;
         &lt;action android:name="android.service.notification.NotificationListenerService" /&gt;
     &lt;/intent-filter&gt;
 &lt;/service&gt;</code></example></para><para tool="javadoc-to-mdoc">To extend this class, you must declare the service in your manifest file with
 the <c><see cref="!:NoType:android/Manifest$permission;Href=../../../../reference/android/Manifest.permission.html#BIND_NOTIFICATION_LISTENER_SERVICE" /></c> permission
 and include an intent filter with the <c><see cref="F:Android.Service.Notification.NotificationListenerService.ServiceInterface" /></c> action. For example:</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/service/notification/NotificationListenerService.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 18" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NotificationListenerService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary></summary>
        <remarks><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/service/notification/NotificationListenerService.html#NotificationListenerService()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NotificationListenerService (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAllNotifications">
      <MemberSignature Language="C#" Value="public void CancelAllNotifications ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelAllNotifications() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("cancelAllNotifications", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inform the notification manager about dismissal of all notifications.</summary>
        <remarks><para tool="javadoc-to-mdoc">Inform the notification manager about dismissal of all notifications.
 </para><para tool="javadoc-to-mdoc">
 Use this if your listener has a user interface that allows the user to dismiss all
 notifications, similar to the behavior of Android's status bar and notification panel.
 It should be called after the user invokes the "dismiss all" function of your UI;
 upon being informed, the notification manager will actually remove all active notifications
 and you will get multiple <c><see cref="M:Android.Service.Notification.NotificationListenerService.OnNotificationRemoved(Android.Service.Notification.StatusBarNotification)" /></c> callbacks.

 
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/service/notification/NotificationListenerService.html#cancelAllNotifications()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 18" />
        <altmember cref="M:Android.Service.Notification.NotificationListenerService.CancelNotification(System.String, System.String, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CancelNotification">
      <MemberSignature Language="C#" Value="public void CancelNotification (string pkg, string tag, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelNotification(string pkg, string tag, int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("cancelNotification", "(Ljava/lang/String;Ljava/lang/String;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pkg" Type="System.String" />
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pkg">Package of the notifying app.</param>
        <param name="tag">Tag of the notification as specified by the notifying app in
     <c><see cref="M:Android.App.NotificationManager.Notify(System.String, System.Int32, System.Int32)" /></c>.</param>
        <param name="id">ID of the notification as specified by the notifying app in
     <c><see cref="M:Android.App.NotificationManager.Notify(System.String, System.Int32, System.Int32)" /></c>.
 <para tool="javadoc-to-mdoc" /></param>
        <summary>Inform the notification manager about dismissal of a single notification.</summary>
        <remarks><para tool="javadoc-to-mdoc">Inform the notification manager about dismissal of a single notification.
 </para><para tool="javadoc-to-mdoc">
 Use this if your listener has a user interface that allows the user to dismiss individual
 notifications, similar to the behavior of Android's status bar and notification panel.
 It should be called after the user dismisses a single notification using your UI;
 upon being informed, the notification manager will actually remove the notification
 and you will get an <c><see cref="M:Android.Service.Notification.NotificationListenerService.OnNotificationRemoved(Android.Service.Notification.StatusBarNotification)" /></c> callback.
 </para><para tool="javadoc-to-mdoc"><format type="text/html"><b>Note:</b></format> If your listener allows the user to fire a notification's
 <c><see cref="P:Android.App.Notification.ContentIntent" /></c> by tapping/clicking/etc., you should call
 this method at that time <format type="text/html"><i>if</i></format> the Notification in question has the
 <c><see cref="!:Android.App.Notification.FLAG_AUTO_CANCEL" /></c> flag set.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/service/notification/NotificationListenerService.html#cancelNotification(java.lang.String, java.lang.String, int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="GetActiveNotifications">
      <MemberSignature Language="C#" Value="public virtual Android.Service.Notification.StatusBarNotification[] GetActiveNotifications ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Service.Notification.StatusBarNotification[] GetActiveNotifications() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getActiveNotifications", "()[Landroid/service/notification/StatusBarNotification;", "GetGetActiveNotificationsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Service.Notification.StatusBarNotification[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Request the list of outstanding notifications (that is, those that are visible to the
 current user).</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Request the list of outstanding notifications (that is, those that are visible to the
 current user). Useful when you don't know what's already been posted.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/service/notification/NotificationListenerService.html#getActiveNotifications()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="OnBind">
      <MemberSignature Language="C#" Value="public override Android.OS.IBinder OnBind (Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.OS.IBinder OnBind(class Android.Content.Intent intent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onBind", "(Landroid/content/Intent;)Landroid/os/IBinder;", "GetOnBind_Landroid_content_Intent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IBinder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="intent">The Intent that was used to bind to this service,
 as given to <c><see cref="M:Android.Content.Context.BindService(Android.Content.Intent, Android.Content.IServiceConnection, Android.Content.IServiceConnection)" /></c>.  Note that any extras that were included with
 the Intent at that point will <i>not</i> be seen here.</param>
        <summary>Return the communication channel to the service.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Return the communication channel to the service.  May return null if 
 clients can not bind to the service.  The returned
 <c><see cref="T:Android.OS.BinderConsts" /></c> is usually for a complex interface
 that has been <format type="text/html"><a href="http://developer.android.com/reference/../guide/components/aidl.html">described using
 aidl</a></format>.
 
 </para><para tool="javadoc-to-mdoc"><i>Note that unlike other application components, calls on to the
 IBinder interface returned here may not happen on the main thread
 of the process</i>.  More information about the main thread can be found in
 <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/fundamentals/processes-and-threads.html">Processes and
 Threads</a></format>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/service/notification/NotificationListenerService.html#onBind(android.content.Intent)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="OnNotificationPosted">
      <MemberSignature Language="C#" Value="public abstract void OnNotificationPosted (Android.Service.Notification.StatusBarNotification sbn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnNotificationPosted(class Android.Service.Notification.StatusBarNotification sbn) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onNotificationPosted", "(Landroid/service/notification/StatusBarNotification;)V", "GetOnNotificationPosted_Landroid_service_notification_StatusBarNotification_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sbn" Type="Android.Service.Notification.StatusBarNotification" />
      </Parameters>
      <Docs>
        <param name="sbn">A data structure encapsulating the original <c><see cref="T:Android.App.Notification" /></c>
            object as well as its identifying information (tag and id) and source
            (package name).
</param>
        <summary>Implement this method to learn about new notifications as they are posted by apps.</summary>
        <remarks><para tool="javadoc-to-mdoc">Implement this method to learn about new notifications as they are posted by apps.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/service/notification/NotificationListenerService.html#onNotificationPosted(android.service.notification.StatusBarNotification)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="OnNotificationRemoved">
      <MemberSignature Language="C#" Value="public abstract void OnNotificationRemoved (Android.Service.Notification.StatusBarNotification sbn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnNotificationRemoved(class Android.Service.Notification.StatusBarNotification sbn) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onNotificationRemoved", "(Landroid/service/notification/StatusBarNotification;)V", "GetOnNotificationRemoved_Landroid_service_notification_StatusBarNotification_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sbn" Type="Android.Service.Notification.StatusBarNotification" />
      </Parameters>
      <Docs>
        <param name="sbn">A data structure encapsulating at least the original information (tag and id)
            and source (package name) used to post the <c><see cref="T:Android.App.Notification" /></c> that
            was just removed.
</param>
        <summary>Implement this method to learn when notifications are removed.</summary>
        <remarks><para tool="javadoc-to-mdoc">Implement this method to learn when notifications are removed.
 </para><para tool="javadoc-to-mdoc">
 This might occur because the user has dismissed the notification using system UI (or another
 notification listener) or because the app has withdrawn the notification.
 </para><para tool="javadoc-to-mdoc">
 NOTE: The <c><see cref="T:Android.Service.Notification.StatusBarNotification" /></c> object you receive will be "light"; that is, the
 result from <c><see cref="P:Android.Service.Notification.StatusBarNotification.Notification" /></c> may be missing some heavyweight
 fields such as <c><see cref="P:Android.App.Notification.ContentView" /></c> and
 <c><see cref="P:Android.App.Notification.LargeIcon" /></c>. However, all other fields on
 <c><see cref="T:Android.Service.Notification.StatusBarNotification" /></c>, sufficient to match this call with a prior call to
 <c><see cref="M:Android.Service.Notification.NotificationListenerService.OnNotificationPosted(Android.Service.Notification.StatusBarNotification)" /></c>, will be intact.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/service/notification/NotificationListenerService.html#onNotificationRemoved(android.service.notification.StatusBarNotification)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="ServiceInterface">
      <MemberSignature Language="C#" Value="public const string ServiceInterface;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ServiceInterface" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SERVICE_INTERFACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <c><see cref="T:Android.Content.Intent" /></c> that must be declared as handled by the service.</summary>
        <remarks><para tool="javadoc-to-mdoc">The <c><see cref="T:Android.Content.Intent" /></c> that must be declared as handled by the service.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/service/notification/NotificationListenerService.html#SERVICE_INTERFACE" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
