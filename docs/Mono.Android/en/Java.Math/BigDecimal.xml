<Type Name="BigDecimal" FullName="Java.Math.BigDecimal">
  <TypeSignature Language="C#" Value="public class BigDecimal : Java.Lang.Number, IDisposable, Java.Lang.IComparable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BigDecimal extends Java.Lang.Number implements class Android.Runtime.IJavaObject, class Java.Lang.IComparable, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Number</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Java.Lang.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/math/BigDecimal", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>An immutable arbitrary-precision signed decimal.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">An immutable arbitrary-precision signed decimal.

 </para>
      <para tool="javadoc-to-mdoc">A value is represented by an arbitrary-precision "unscaled value" and a signed 32-bit "scale",
 combined thus: <c>unscaled * 10<format type="text/html"><sup>-scale</sup></format></c>. See <c><see cref="M:Java.Math.BigDecimal.UnscaledValue" /></c> and <c><see cref="M:Java.Math.BigDecimal.Scale" /></c>.

 </para>
      <para tool="javadoc-to-mdoc">Most operations allow you to supply a <c><see cref="T:Java.Math.MathContext" /></c> to specify a desired rounding mode.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/java/math/BigDecimal.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigDecimal (Java.Math.BigInteger val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Math.BigInteger val) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/math/BigInteger;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="val" Type="Java.Math.BigInteger" />
      </Parameters>
      <Docs>
        <param name="val">To be added.</param>
        <summary>Constructs a new <c>BigDecimal</c> instance from the given big integer
 <c>val</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>BigDecimal</c> instance from the given big integer
 <c>val</c>. The scale of the result is <c>0</c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#BigDecimal(java.math.BigInteger)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigDecimal (char[] in);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char[] in) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "([C)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="in" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="in">To be added.</param>
        <summary>Constructs a new <c>BigDecimal</c> instance from a string representation
 given as a character array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>BigDecimal</c> instance from a string representation
 given as a character array.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#BigDecimal(char[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NumberFormatException">if <c>in</c> does not contain a valid string representation
             of a big decimal.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigDecimal (double val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 val) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(D)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="val" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="val">To be added.</param>
        <summary>Constructs a new <c>BigDecimal</c> instance from the 64bit double
 <c>val</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>BigDecimal</c> instance from the 64bit double
 <c>val</c>. The constructed big decimal is equivalent to the given
 double. For example, <c>new BigDecimal(0.1)</c> is equal to <c>0.1000000000000000055511151231257827021181583404541015625</c>. This happens
 as <c>0.1</c> cannot be represented exactly in binary.
 </para>
          <para tool="javadoc-to-mdoc">
 To generate a big decimal instance which is equivalent to <c>0.1</c> use
 the <c>BigDecimal(String)</c> constructor.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#BigDecimal(double)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NumberFormatException">if <c>val</c> is infinity or not a number.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigDecimal (int val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 val) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="val" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="val">To be added.</param>
        <summary>Constructs a new <c>BigDecimal</c> instance from the given int
 <c>val</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>BigDecimal</c> instance from the given int
 <c>val</c>. The scale of the result is 0.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#BigDecimal(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigDecimal (long val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 val) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(J)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="val" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="val">To be added.</param>
        <summary>Constructs a new <c>BigDecimal</c> instance from the given long <c>val</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>BigDecimal</c> instance from the given long <c>val</c>. The scale of the result is <c>0</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#BigDecimal(long)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigDecimal (string val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string val) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="val" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="val">To be added.</param>
        <summary>Constructs a new <c>BigDecimal</c> instance from a string
 representation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>BigDecimal</c> instance from a string
 representation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#BigDecimal(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NumberFormatException">if <c>val</c> does not contain a valid string representation
             of a big decimal.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigDecimal (Java.Math.BigInteger val, Java.Math.MathContext mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Math.BigInteger val, class Java.Math.MathContext mc) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/math/BigInteger;Ljava/math/MathContext;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="val" Type="Java.Math.BigInteger" />
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="val">To be added.</param>
        <param name="mc">To be added.</param>
        <summary>Constructs a new <c>BigDecimal</c> instance from the given big integer
 <c>val</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>BigDecimal</c> instance from the given big integer
 <c>val</c>. The scale of the result is <c>0</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#BigDecimal(java.math.BigInteger, java.math.MathContext)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ArithmeticException">if <c>mc.precision &gt; 0</c> and <c>mc.roundingMode ==
             UNNECESSARY</c> and the new big decimal cannot be represented
             within the given precision without rounding.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigDecimal (Java.Math.BigInteger unscaledVal, int scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Math.BigInteger unscaledVal, int32 scale) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/math/BigInteger;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="unscaledVal" Type="Java.Math.BigInteger" />
        <Parameter Name="scale" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="unscaledVal">To be added.</param>
        <param name="scale">To be added.</param>
        <summary>Constructs a new <c>BigDecimal</c> instance from a given unscaled value
 <c>unscaledVal</c> and a given scale.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>BigDecimal</c> instance from a given unscaled value
 <c>unscaledVal</c> and a given scale. The value of this instance is
 <c>unscaledVal * 10<format type="text/html"><sup>-scale</sup></format></c>).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#BigDecimal(java.math.BigInteger, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>unscaledVal == null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigDecimal (char[] in, Java.Math.MathContext mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char[] in, class Java.Math.MathContext mc) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "([CLjava/math/MathContext;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="in" Type="System.Char[]" />
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="in">To be added.</param>
        <param name="mc">To be added.</param>
        <summary>Constructs a new <c>BigDecimal</c> instance from a string representation
 given as a character array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>BigDecimal</c> instance from a string representation
 given as a character array. The result is rounded according to the
 specified math context.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#BigDecimal(char[], java.math.MathContext)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NumberFormatException">if <c>in</c> does not contain a valid string representation
             of a big decimal.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>mc.precision &gt; 0</c> and <c>mc.roundingMode ==
             UNNECESSARY</c> and the new big decimal cannot be represented
             within the given precision without rounding.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigDecimal (double val, Java.Math.MathContext mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 val, class Java.Math.MathContext mc) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(DLjava/math/MathContext;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="val" Type="System.Double" />
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="val">To be added.</param>
        <param name="mc">To be added.</param>
        <summary>Constructs a new <c>BigDecimal</c> instance from the 64bit double
 <c>val</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>BigDecimal</c> instance from the 64bit double
 <c>val</c>. The constructed big decimal is equivalent to the given
 double. For example, <c>new BigDecimal(0.1)</c> is equal to <c>0.1000000000000000055511151231257827021181583404541015625</c>. This happens
 as <c>0.1</c> cannot be represented exactly in binary.
 </para>
          <para tool="javadoc-to-mdoc">
 To generate a big decimal instance which is equivalent to <c>0.1</c> use
 the <c>BigDecimal(String)</c> constructor.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#BigDecimal(double, java.math.MathContext)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NumberFormatException">if <c>val</c> is infinity or not a number.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>mc.precision &gt; 0</c> and <c>mc.roundingMode ==
             UNNECESSARY</c> and the new big decimal cannot be represented
             within the given precision without rounding.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigDecimal (int val, Java.Math.MathContext mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 val, class Java.Math.MathContext mc) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(ILjava/math/MathContext;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="val" Type="System.Int32" />
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="val">To be added.</param>
        <param name="mc">To be added.</param>
        <summary>Constructs a new <c>BigDecimal</c> instance from the given int <c>val</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>BigDecimal</c> instance from the given int <c>val</c>. The scale of the result is <c>0</c>. The result is rounded
 according to the specified math context.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#BigDecimal(int, java.math.MathContext)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ArithmeticException">if <c>mc.precision &gt; 0</c> and <c>c.roundingMode ==
             UNNECESSARY</c> and the new big decimal cannot be represented
             within the given precision without rounding.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigDecimal (long val, Java.Math.MathContext mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 val, class Java.Math.MathContext mc) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(JLjava/math/MathContext;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="val" Type="System.Int64" />
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="val">To be added.</param>
        <param name="mc">To be added.</param>
        <summary>Constructs a new <c>BigDecimal</c> instance from the given long <c>val</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>BigDecimal</c> instance from the given long <c>val</c>. The scale of the result is <c>0</c>. The result is rounded
 according to the specified math context.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#BigDecimal(long, java.math.MathContext)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ArithmeticException">if <c>mc.precision &gt; 0</c> and <c>mc.roundingMode ==
             UNNECESSARY</c> and the new big decimal cannot be represented
             within the given precision without rounding.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BigDecimal (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigDecimal (string val, Java.Math.MathContext mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string val, class Java.Math.MathContext mc) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;Ljava/math/MathContext;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="val" Type="System.String" />
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="val">To be added.</param>
        <param name="mc">To be added.</param>
        <summary>Constructs a new <c>BigDecimal</c> instance from a string
 representation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>BigDecimal</c> instance from a string
 representation. The result is rounded according to the specified math
 context.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#BigDecimal(java.lang.String, java.math.MathContext)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NumberFormatException">if <c>val</c> does not contain a valid string representation
             of a big decimal.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>mc.precision &gt; 0</c> and <c>mc.roundingMode ==
             UNNECESSARY</c> and the new big decimal cannot be represented
             within the given precision without rounding.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigDecimal (Java.Math.BigInteger unscaledVal, int scale, Java.Math.MathContext mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Math.BigInteger unscaledVal, int32 scale, class Java.Math.MathContext mc) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/math/BigInteger;ILjava/math/MathContext;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="unscaledVal" Type="Java.Math.BigInteger" />
        <Parameter Name="scale" Type="System.Int32" />
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="unscaledVal">To be added.</param>
        <param name="scale">To be added.</param>
        <param name="mc">To be added.</param>
        <summary>Constructs a new <c>BigDecimal</c> instance from a given unscaled value
 <c>unscaledVal</c> and a given scale.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>BigDecimal</c> instance from a given unscaled value
 <c>unscaledVal</c> and a given scale. The value of this instance is
 {@code unscaledVal * 10<format type="text/html"><sup>-scale</sup></format>). The result is rounded according
 to the specified math context.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#BigDecimal(java.math.BigInteger, int, java.math.MathContext)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ArithmeticException">if <c>mc.precision &gt; 0</c> and <c>mc.roundingMode ==
             UNNECESSARY</c> and the new big decimal cannot be represented
             within the given precision without rounding.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>unscaledVal == null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigDecimal (char[] in, int offset, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char[] in, int32 offset, int32 len) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "([CII)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="in" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="in">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="len">To be added.</param>
        <summary>Constructs a new <c>BigDecimal</c> instance from a string representation
 given as a character array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>BigDecimal</c> instance from a string representation
 given as a character array.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#BigDecimal(char[], int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NumberFormatException">if <c>offset = in.length</c>, or if <c>in</c> does not
             contain a valid string representation of a big decimal.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigDecimal (char[] in, int offset, int len, Java.Math.MathContext mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char[] in, int32 offset, int32 len, class Java.Math.MathContext mc) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "([CIILjava/math/MathContext;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="in" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="in">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="len">To be added.</param>
        <param name="mc">To be added.</param>
        <summary>Constructs a new <c>BigDecimal</c> instance from a string representation
 given as a character array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>BigDecimal</c> instance from a string representation
 given as a character array.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#BigDecimal(char[], int, int, java.math.MathContext)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NumberFormatException">if <c>offset = in.length</c>, or if <c>in</c> does not
             contain a valid string representation of a big decimal.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>mc.precision &gt; 0</c> and <c>mc.roundingMode ==
             UNNECESSARY</c> and the new big decimal cannot be represented
             within the given precision without rounding.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal Abs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Abs() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("abs", "()Ljava/math/BigDecimal;", "GetAbsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a new <c>BigDecimal</c> whose value is the absolute value of
 <c>this</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>BigDecimal</c> whose value is the absolute value of
 <c>this</c>. The scale of the result is the same as the scale of this.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#abs()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal Abs (Java.Math.MathContext mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Abs(class Java.Math.MathContext mc) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("abs", "(Ljava/math/MathContext;)Ljava/math/BigDecimal;", "GetAbs_Ljava_math_MathContext_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="mc">rounding mode and precision for the result of this operation.</param>
        <summary>Returns a new <c>BigDecimal</c> whose value is the absolute value of
 <c>this</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>BigDecimal</c> whose value is the absolute value of
 <c>this</c>. The result is rounded according to the passed context
 <c>mc</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#abs(java.math.MathContext)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal Add (Java.Math.BigDecimal augend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Add(class Java.Math.BigDecimal augend) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("add", "(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;", "GetAdd_Ljava_math_BigDecimal_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="augend" Type="Java.Math.BigDecimal" />
      </Parameters>
      <Docs>
        <param name="augend">value to be added to <c>this</c>.</param>
        <summary>Returns a new <c>BigDecimal</c> whose value is <c>this + augend</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>BigDecimal</c> whose value is <c>this + augend</c>.
 The scale of the result is the maximum of the scales of the two
 arguments.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#add(java.math.BigDecimal)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>augend == null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal Add (Java.Math.BigDecimal augend, Java.Math.MathContext mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Add(class Java.Math.BigDecimal augend, class Java.Math.MathContext mc) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("add", "(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;", "GetAdd_Ljava_math_BigDecimal_Ljava_math_MathContext_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="augend" Type="Java.Math.BigDecimal" />
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="augend">value to be added to <c>this</c>.</param>
        <param name="mc">rounding mode and precision for the result of this operation.</param>
        <summary>Returns a new <c>BigDecimal</c> whose value is <c>this + augend</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>BigDecimal</c> whose value is <c>this + augend</c>.
 The result is rounded according to the passed context <c>mc</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#add(java.math.BigDecimal, java.math.MathContext)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>augend == null</c> or <c>mc == null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ByteValueExact">
      <MemberSignature Language="C#" Value="public virtual sbyte ByteValueExact ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int8 ByteValueExact() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("byteValueExact", "()B", "GetByteValueExactHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns this <c>BigDecimal</c> as a byte value if it has no fractional
 part and if its value fits to the byte range ([-128.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns this <c>BigDecimal</c> as a byte value if it has no fractional
 part and if its value fits to the byte range ([-128..127]). If these
 conditions are not met, an <c>ArithmeticException</c> is thrown.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#byteValueExact()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ArithmeticException">if rounding is necessary or the number doesn't fit in a byte.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public virtual int CompareTo (Java.Math.BigDecimal val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(class Java.Math.BigDecimal val) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("compareTo", "(Ljava/math/BigDecimal;)I", "GetCompareTo_Ljava_math_BigDecimal_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val" Type="Java.Math.BigDecimal" />
      </Parameters>
      <Docs>
        <param name="val">value to be compared with <c>this</c>.</param>
        <summary>Compares this <c>BigDecimal</c> with <c>val</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Compares this <c>BigDecimal</c> with <c>val</c>. Returns one of the
 three values <c>1</c>, <c>0</c>, or <c>-1</c>. The method behaves as
 if <c>this.subtract(val)</c> is computed. If this difference is &gt; 0 then
 1 is returned, if the difference is </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#compareTo(java.math.BigDecimal)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>val == null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal Divide (Java.Math.BigDecimal divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Divide(class Java.Math.BigDecimal divisor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("divide", "(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;", "GetDivide_Ljava_math_BigDecimal_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="divisor" Type="Java.Math.BigDecimal" />
      </Parameters>
      <Docs>
        <param name="divisor">value by which <c>this</c> is divided.</param>
        <summary>Returns a new <c>BigDecimal</c> whose value is <c>this / divisor</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>BigDecimal</c> whose value is <c>this / divisor</c>.
 The scale of the result is the difference of the scales of <c>this</c>
 and <c>divisor</c>. If the exact result requires more digits, then the
 scale is adjusted accordingly. For example, <c>1/128 = 0.0078125</c>
 which has a scale of <c>7</c> and precision <c>5</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#divide(java.math.BigDecimal)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>divisor == null</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>divisor == 0</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if the result cannot be represented exactly.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal Divide (Java.Math.BigDecimal divisor, Java.Math.MathContext mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Divide(class Java.Math.BigDecimal divisor, class Java.Math.MathContext mc) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("divide", "(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;", "GetDivide_Ljava_math_BigDecimal_Ljava_math_MathContext_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="divisor" Type="Java.Math.BigDecimal" />
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="divisor">value by which <c>this</c> is divided.</param>
        <param name="mc">rounding mode and precision for the result of this operation.</param>
        <summary>Returns a new <c>BigDecimal</c> whose value is <c>this / divisor</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>BigDecimal</c> whose value is <c>this / divisor</c>.
 The result is rounded according to the passed context <c>mc</c>. If the
 passed math context specifies precision <c>0</c>, then this call is
 equivalent to <c>this.divide(divisor)</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#divide(java.math.BigDecimal, java.math.MathContext)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>divisor == null</c> or <c>mc == null</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>divisor == 0</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>mc.getRoundingMode() == UNNECESSARY</c> and rounding
             is necessary according <c>mc.getPrecision()</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal Divide (Java.Math.BigDecimal divisor, Java.Math.RoundingMode roundingMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Divide(class Java.Math.BigDecimal divisor, class Java.Math.RoundingMode roundingMode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("divide", "(Ljava/math/BigDecimal;Ljava/math/RoundingMode;)Ljava/math/BigDecimal;", "GetDivide_Ljava_math_BigDecimal_Ljava_math_RoundingMode_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="divisor" Type="Java.Math.BigDecimal" />
        <Parameter Name="roundingMode" Type="Java.Math.RoundingMode" />
      </Parameters>
      <Docs>
        <param name="divisor">value by which <c>this</c> is divided.</param>
        <param name="roundingMode">rounding mode to be used to round the result.</param>
        <summary>Returns a new <c>BigDecimal</c> whose value is <c>this / divisor</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>BigDecimal</c> whose value is <c>this / divisor</c>.
 The scale of the result is the scale of <c>this</c>. If rounding is
 required to meet the specified scale, then the specified rounding mode
 <c>roundingMode</c> is applied.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#divide(java.math.BigDecimal, java.math.RoundingMode)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>divisor == null</c> or <c>roundingMode == null</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>divisor == 0</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>roundingMode == RoundingMode.UNNECESSARY</c> and
             rounding is necessary according to the scale of this.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal Divide (Java.Math.BigDecimal divisor, Java.Math.RoundOptions roundingMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Divide(class Java.Math.BigDecimal divisor, valuetype Java.Math.RoundOptions roundingMode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("divide", "(Ljava/math/BigDecimal;I)Ljava/math/BigDecimal;", "GetDivide_Ljava_math_BigDecimal_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="divisor" Type="Java.Math.BigDecimal" />
        <Parameter Name="roundingMode" Type="Java.Math.RoundOptions" />
      </Parameters>
      <Docs>
        <param name="divisor">value by which <c>this</c> is divided.</param>
        <param name="roundingMode">rounding mode to be used to round the result.</param>
        <summary>Returns a new <c>BigDecimal</c> whose value is <c>this / divisor</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>BigDecimal</c> whose value is <c>this / divisor</c>.
 The scale of the result is the scale of <c>this</c>. If rounding is
 required to meet the specified scale, then the specified rounding mode
 <c>roundingMode</c> is applied.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#divide(java.math.BigDecimal, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>divisor == null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>roundingMode</c> is not a valid rounding mode.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>divisor == 0</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>roundingMode == ROUND_UNNECESSARY</c> and rounding is
             necessary according to the scale of this.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal Divide (Java.Math.BigDecimal divisor, int scale, Java.Math.RoundingMode roundingMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Divide(class Java.Math.BigDecimal divisor, int32 scale, class Java.Math.RoundingMode roundingMode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("divide", "(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;", "GetDivide_Ljava_math_BigDecimal_ILjava_math_RoundingMode_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="divisor" Type="Java.Math.BigDecimal" />
        <Parameter Name="scale" Type="System.Int32" />
        <Parameter Name="roundingMode" Type="Java.Math.RoundingMode" />
      </Parameters>
      <Docs>
        <param name="divisor">value by which <c>this</c> is divided.</param>
        <param name="scale">the scale of the result returned.</param>
        <param name="roundingMode">rounding mode to be used to round the result.</param>
        <summary>Returns a new <c>BigDecimal</c> whose value is <c>this / divisor</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>BigDecimal</c> whose value is <c>this / divisor</c>.
 As scale of the result the parameter <c>scale</c> is used. If rounding
 is required to meet the specified scale, then the specified rounding mode
 <c>roundingMode</c> is applied.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#divide(java.math.BigDecimal, int, java.math.RoundingMode)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>divisor == null</c> or <c>roundingMode == null</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>divisor == 0</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>roundingMode == RoundingMode.UNNECESSAR</c>Y and
             rounding is necessary according to the given scale and given
             precision.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal Divide (Java.Math.BigDecimal divisor, int scale, Java.Math.RoundOptions roundingMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Divide(class Java.Math.BigDecimal divisor, int32 scale, valuetype Java.Math.RoundOptions roundingMode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("divide", "(Ljava/math/BigDecimal;II)Ljava/math/BigDecimal;", "GetDivide_Ljava_math_BigDecimal_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="divisor" Type="Java.Math.BigDecimal" />
        <Parameter Name="scale" Type="System.Int32" />
        <Parameter Name="roundingMode" Type="Java.Math.RoundOptions" />
      </Parameters>
      <Docs>
        <param name="divisor">value by which <c>this</c> is divided.</param>
        <param name="scale">the scale of the result returned.</param>
        <param name="roundingMode">rounding mode to be used to round the result.</param>
        <summary>Returns a new <c>BigDecimal</c> whose value is <c>this / divisor</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>BigDecimal</c> whose value is <c>this / divisor</c>.
 As scale of the result the parameter <c>scale</c> is used. If rounding
 is required to meet the specified scale, then the specified rounding mode
 <c>roundingMode</c> is applied.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#divide(java.math.BigDecimal, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>divisor == null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>roundingMode</c> is not a valid rounding mode.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>divisor == 0</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>roundingMode == ROUND_UNNECESSARY</c> and rounding is
             necessary according to the given scale.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DivideAndRemainder">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal[] DivideAndRemainder (Java.Math.BigDecimal divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal[] DivideAndRemainder(class Java.Math.BigDecimal divisor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("divideAndRemainder", "(Ljava/math/BigDecimal;)[Ljava/math/BigDecimal;", "GetDivideAndRemainder_Ljava_math_BigDecimal_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="divisor" Type="Java.Math.BigDecimal" />
      </Parameters>
      <Docs>
        <param name="divisor">value by which <c>this</c> is divided.</param>
        <summary>Returns a <c>BigDecimal</c> array which contains the integral part of
 <c>this / divisor</c> at index 0 and the remainder <c>this %
 divisor</c> at index 1.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c>BigDecimal</c> array which contains the integral part of
 <c>this / divisor</c> at index 0 and the remainder <c>this %
 divisor</c> at index 1. The quotient is rounded down towards zero to the
 next integer.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#divideAndRemainder(java.math.BigDecimal)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>divisor == null</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>divisor == 0</c>.</exception>
        <altmember cref="M:Java.Math.BigDecimal.DivideToIntegralValue(Java.Math.BigDecimal)" />
        <altmember cref="M:Java.Math.BigDecimal.Remainder(Java.Math.BigDecimal)" />
      </Docs>
    </Member>
    <Member MemberName="DivideAndRemainder">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal[] DivideAndRemainder (Java.Math.BigDecimal divisor, Java.Math.MathContext mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal[] DivideAndRemainder(class Java.Math.BigDecimal divisor, class Java.Math.MathContext mc) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("divideAndRemainder", "(Ljava/math/BigDecimal;Ljava/math/MathContext;)[Ljava/math/BigDecimal;", "GetDivideAndRemainder_Ljava_math_BigDecimal_Ljava_math_MathContext_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="divisor" Type="Java.Math.BigDecimal" />
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="divisor">value by which <c>this</c> is divided.</param>
        <param name="mc">math context which determines the maximal precision of the
            result.</param>
        <summary>Returns a <c>BigDecimal</c> array which contains the integral part of
 <c>this / divisor</c> at index 0 and the remainder <c>this %
 divisor</c> at index 1.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c>BigDecimal</c> array which contains the integral part of
 <c>this / divisor</c> at index 0 and the remainder <c>this %
 divisor</c> at index 1. The quotient is rounded down towards zero to the
 next integer. The rounding mode passed with the parameter <c>mc</c> is
 not considered. But if the precision of <c>mc &gt; 0</c> and the integral
 part requires more digits, then an <c>ArithmeticException</c> is thrown.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#divideAndRemainder(java.math.BigDecimal, java.math.MathContext)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>divisor == null</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>divisor == 0</c>.</exception>
        <altmember cref="M:Java.Math.BigDecimal.DivideToIntegralValue(Java.Math.BigDecimal)" />
        <altmember cref="M:Java.Math.BigDecimal.Remainder(Java.Math.BigDecimal)" />
      </Docs>
    </Member>
    <Member MemberName="DivideToIntegralValue">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal DivideToIntegralValue (Java.Math.BigDecimal divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal DivideToIntegralValue(class Java.Math.BigDecimal divisor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("divideToIntegralValue", "(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;", "GetDivideToIntegralValue_Ljava_math_BigDecimal_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="divisor" Type="Java.Math.BigDecimal" />
      </Parameters>
      <Docs>
        <param name="divisor">value by which <c>this</c> is divided.</param>
        <summary>Returns a new <c>BigDecimal</c> whose value is the integral part of
 <c>this / divisor</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>BigDecimal</c> whose value is the integral part of
 <c>this / divisor</c>. The quotient is rounded down towards zero to the
 next integer. For example, <c>0.5/0.2 = 2</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#divideToIntegralValue(java.math.BigDecimal)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>divisor == null</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>divisor == 0</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DivideToIntegralValue">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal DivideToIntegralValue (Java.Math.BigDecimal divisor, Java.Math.MathContext mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal DivideToIntegralValue(class Java.Math.BigDecimal divisor, class Java.Math.MathContext mc) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("divideToIntegralValue", "(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;", "GetDivideToIntegralValue_Ljava_math_BigDecimal_Ljava_math_MathContext_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="divisor" Type="Java.Math.BigDecimal" />
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="divisor">value by which <c>this</c> is divided.</param>
        <param name="mc">math context which determines the maximal precision of the
            result.</param>
        <summary>Returns a new <c>BigDecimal</c> whose value is the integral part of
 <c>this / divisor</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>BigDecimal</c> whose value is the integral part of
 <c>this / divisor</c>. The quotient is rounded down towards zero to the
 next integer. The rounding mode passed with the parameter <c>mc</c> is
 not considered. But if the precision of <c>mc &gt; 0</c> and the integral
 part requires more digits, then an <c>ArithmeticException</c> is thrown.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#divideToIntegralValue(java.math.BigDecimal, java.math.MathContext)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>divisor == null</c> or <c>mc == null</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>divisor == 0</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>mc.getPrecision() &gt; 0</c> and the result requires more
             digits to be represented.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DoubleValue">
      <MemberSignature Language="C#" Value="public override double DoubleValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 DoubleValue() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("doubleValue", "()D", "GetDoubleValueHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns this <c>BigDecimal</c> as a double value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns this <c>BigDecimal</c> as a double value. If <c>this</c> is too
 big to be represented as an float, then <c>Double.POSITIVE_INFINITY</c>
 or <c>Double.NEGATIVE_INFINITY</c> is returned.
 </para>
          <para tool="javadoc-to-mdoc">
 Note, that if the unscaled value has more than 53 significant digits,
 then this decimal cannot be represented exactly in a double variable. In
 this case the result is rounded.
 </para>
          <para tool="javadoc-to-mdoc">
 For example, if the instance <c>x1 = new BigDecimal("0.1")</c> cannot be
 represented exactly as a double, and thus <c>x1.equals(new
 BigDecimal(x1.doubleValue())</c> returns <c>false</c> for this case.
 </para>
          <para tool="javadoc-to-mdoc">
 Similarly, if the instance <c>new BigDecimal(9007199254740993L)</c> is
 converted to a double, the result is <c>9.007199254740992E15</c>.
 </para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#doubleValue()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FloatValue">
      <MemberSignature Language="C#" Value="public override float FloatValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 FloatValue() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("floatValue", "()F", "GetFloatValueHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns this <c>BigDecimal</c> as a float value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns this <c>BigDecimal</c> as a float value. If <c>this</c> is too
 big to be represented as an float, then <c>Float.POSITIVE_INFINITY</c>
 or <c>Float.NEGATIVE_INFINITY</c> is returned.
 </para>
          <para tool="javadoc-to-mdoc">
 Note, that if the unscaled value has more than 24 significant digits,
 then this decimal cannot be represented exactly in a float variable. In
 this case the result is rounded.
 </para>
          <para tool="javadoc-to-mdoc">
 For example, if the instance <c>x1 = new BigDecimal("0.1")</c> cannot be
 represented exactly as a float, and thus <c>x1.equals(new
 BigDecimal(x1.floatValue())</c> returns <c>false</c> for this case.
 </para>
          <para tool="javadoc-to-mdoc">
 Similarly, if the instance <c>new BigDecimal(16777217)</c> is converted
 to a float, the result is <c>1.6777216E</c>7.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#floatValue()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IntValue">
      <MemberSignature Language="C#" Value="public override int IntValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 IntValue() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("intValue", "()I", "GetIntValueHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns this <c>BigDecimal</c> as an int value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns this <c>BigDecimal</c> as an int value. Any fractional part is
 discarded. If the integral part of <c>this</c> is too big to be
 represented as an int, then <c>this % 2<format type="text/html"><sup>32</sup></format></c> is returned.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#intValue()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IntValueExact">
      <MemberSignature Language="C#" Value="public virtual int IntValueExact ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IntValueExact() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("intValueExact", "()I", "GetIntValueExactHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns this <c>BigDecimal</c> as a int value if it has no fractional
 part and if its value fits to the int range ([-2<format type="text/html"><sup>31</sup></format>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns this <c>BigDecimal</c> as a int value if it has no fractional
 part and if its value fits to the int range ([-2<format type="text/html"><sup>31</sup></format>..2<format type="text/html"><sup>31</sup></format>-1]). If
 these conditions are not met, an <c>ArithmeticException</c> is thrown.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#intValueExact()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ArithmeticException">if rounding is necessary or the number doesn't fit in an int.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Java.Lang.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (Java.Lang.Object another);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 Java.Lang.IComparable.CompareTo(class Java.Lang.Object another) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="another" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="another">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LongValue">
      <MemberSignature Language="C#" Value="public override long LongValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 LongValue() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("longValue", "()J", "GetLongValueHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns this <c>BigDecimal</c> as an long value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns this <c>BigDecimal</c> as an long value. Any fractional part is
 discarded. If the integral part of <c>this</c> is too big to be
 represented as an long, then <c>this % 2<format type="text/html"><sup>64</sup></format></c> is returned.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#longValue()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LongValueExact">
      <MemberSignature Language="C#" Value="public virtual long LongValueExact ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 LongValueExact() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("longValueExact", "()J", "GetLongValueExactHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns this <c>BigDecimal</c> as a long value if it has no fractional
 part and if its value fits to the int range ([-2<format type="text/html"><sup>63</sup></format>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns this <c>BigDecimal</c> as a long value if it has no fractional
 part and if its value fits to the int range ([-2<format type="text/html"><sup>63</sup></format>..2<format type="text/html"><sup>63</sup></format>-1]). If
 these conditions are not met, an <c>ArithmeticException</c> is thrown.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#longValueExact()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ArithmeticException">if rounding is necessary or the number doesn't fit in a long.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal Max (Java.Math.BigDecimal val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Max(class Java.Math.BigDecimal val) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("max", "(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;", "GetMax_Ljava_math_BigDecimal_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val" Type="Java.Math.BigDecimal" />
      </Parameters>
      <Docs>
        <param name="val">value to be used to compute the maximum with this.</param>
        <summary>Returns the maximum of this <c>BigDecimal</c> and <c>val</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the maximum of this <c>BigDecimal</c> and <c>val</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#max(java.math.BigDecimal)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>val == null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal Min (Java.Math.BigDecimal val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Min(class Java.Math.BigDecimal val) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("min", "(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;", "GetMin_Ljava_math_BigDecimal_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val" Type="Java.Math.BigDecimal" />
      </Parameters>
      <Docs>
        <param name="val">value to be used to compute the minimum with this.</param>
        <summary>Returns the minimum of this <c>BigDecimal</c> and <c>val</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the minimum of this <c>BigDecimal</c> and <c>val</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#min(java.math.BigDecimal)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>val == null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="MovePointLeft">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal MovePointLeft (int n);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal MovePointLeft(int32 n) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("movePointLeft", "(I)Ljava/math/BigDecimal;", "GetMovePointLeft_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="n">To be added.</param>
        <summary>Returns a new <c>BigDecimal</c> instance where the decimal point has
 been moved <c>n</c> places to the left.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>BigDecimal</c> instance where the decimal point has
 been moved <c>n</c> places to the left. If <c>n </c> then the
 decimal point is moved <c>-n</c> places to the right.

 </para>
          <para tool="javadoc-to-mdoc">The result is obtained by changing its scale. If the scale of the result
 becomes negative, then its precision is increased such that the scale is
 zero.

 </para>
          <para tool="javadoc-to-mdoc">Note, that <c>movePointLeft(0)</c> returns a result which is
 mathematically equivalent, but which has <c>scale &gt;= 0</c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#movePointLeft(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MovePointRight">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal MovePointRight (int n);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal MovePointRight(int32 n) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("movePointRight", "(I)Ljava/math/BigDecimal;", "GetMovePointRight_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="n">To be added.</param>
        <summary>Returns a new <c>BigDecimal</c> instance where the decimal point has
 been moved <c>n</c> places to the right.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>BigDecimal</c> instance where the decimal point has
 been moved <c>n</c> places to the right. If <c>n </c> then the
 decimal point is moved <c>-n</c> places to the left.

 </para>
          <para tool="javadoc-to-mdoc">The result is obtained by changing its scale. If the scale of the result
 becomes negative, then its precision is increased such that the scale is
 zero.

 </para>
          <para tool="javadoc-to-mdoc">Note, that <c>movePointRight(0)</c> returns a result which is
 mathematically equivalent, but which has scale &gt;= 0.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#movePointRight(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal Multiply (Java.Math.BigDecimal multiplicand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Multiply(class Java.Math.BigDecimal multiplicand) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("multiply", "(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;", "GetMultiply_Ljava_math_BigDecimal_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multiplicand" Type="Java.Math.BigDecimal" />
      </Parameters>
      <Docs>
        <param name="multiplicand">value to be multiplied with <c>this</c>.</param>
        <summary>Returns a new <c>BigDecimal</c> whose value is <c>this *
 multiplicand</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>BigDecimal</c> whose value is <c>this *
 multiplicand</c>. The scale of the result is the sum of the scales of the
 two arguments.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#multiply(java.math.BigDecimal)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>multiplicand == null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal Multiply (Java.Math.BigDecimal multiplicand, Java.Math.MathContext mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Multiply(class Java.Math.BigDecimal multiplicand, class Java.Math.MathContext mc) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("multiply", "(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;", "GetMultiply_Ljava_math_BigDecimal_Ljava_math_MathContext_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multiplicand" Type="Java.Math.BigDecimal" />
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="multiplicand">value to be multiplied with <c>this</c>.</param>
        <param name="mc">rounding mode and precision for the result of this operation.</param>
        <summary>Returns a new <c>BigDecimal</c> whose value is <c>this *
 multiplicand</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>BigDecimal</c> whose value is <c>this *
 multiplicand</c>. The result is rounded according to the passed context
 <c>mc</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#multiply(java.math.BigDecimal, java.math.MathContext)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>multiplicand == null</c> or <c>mc == null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal Negate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Negate() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("negate", "()Ljava/math/BigDecimal;", "GetNegateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a new <c>BigDecimal</c> whose value is the <c>-this</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>BigDecimal</c> whose value is the <c>-this</c>. The
 scale of the result is the same as the scale of this.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#negate()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal Negate (Java.Math.MathContext mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Negate(class Java.Math.MathContext mc) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("negate", "(Ljava/math/MathContext;)Ljava/math/BigDecimal;", "GetNegate_Ljava_math_MathContext_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="mc">rounding mode and precision for the result of this operation.</param>
        <summary>Returns a new <c>BigDecimal</c> whose value is the <c>-this</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>BigDecimal</c> whose value is the <c>-this</c>. The
 result is rounded according to the passed context <c>mc</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#negate(java.math.MathContext)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="One">
      <MemberSignature Language="C#" Value="public static Java.Math.BigDecimal One { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Math.BigDecimal One" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ONE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The constant one as a <c>BigDecimal</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">The constant one as a <c>BigDecimal</c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#ONE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Plus">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal Plus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Plus() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("plus", "()Ljava/math/BigDecimal;", "GetPlusHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a new <c>BigDecimal</c> whose value is <c>+this</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>BigDecimal</c> whose value is <c>+this</c>. The scale
 of the result is the same as the scale of this.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#plus()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Plus">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal Plus (Java.Math.MathContext mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Plus(class Java.Math.MathContext mc) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("plus", "(Ljava/math/MathContext;)Ljava/math/BigDecimal;", "GetPlus_Ljava_math_MathContext_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="mc">rounding mode and precision for the result of this operation.</param>
        <summary>Returns a new <c>BigDecimal</c> whose value is <c>+this</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>BigDecimal</c> whose value is <c>+this</c>. The result
 is rounded according to the passed context <c>mc</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#plus(java.math.MathContext)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Pow">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal Pow (int n);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Pow(int32 n) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("pow", "(I)Ljava/math/BigDecimal;", "GetPow_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="n">To be added.</param>
        <summary>Returns a new <c>BigDecimal</c> whose value is <c>this<format type="text/html"><sup>n</sup></format></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>BigDecimal</c> whose value is <c>this<format type="text/html"><sup>n</sup></format></c>. The
 scale of the result is <c>n * this.scale()</c>.

 </para>
          <para tool="javadoc-to-mdoc">
            <c>x.pow(0)</c> returns <c>1</c>, even if <c>x == 0</c>.

 </para>
          <para tool="javadoc-to-mdoc">Implementation Note: The implementation is based on the ANSI standard
 X3.274-1996 algorithm.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#pow(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ArithmeticException">if <c>n </c> or <c>n &gt; 999999999</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Pow">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal Pow (int n, Java.Math.MathContext mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Pow(int32 n, class Java.Math.MathContext mc) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("pow", "(ILjava/math/MathContext;)Ljava/math/BigDecimal;", "GetPow_ILjava_math_MathContext_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="n">To be added.</param>
        <param name="mc">rounding mode and precision for the result of this operation.</param>
        <summary>Returns a new <c>BigDecimal</c> whose value is <c>this<format type="text/html"><sup>n</sup></format></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>BigDecimal</c> whose value is <c>this<format type="text/html"><sup>n</sup></format></c>. The
 result is rounded according to the passed context <c>mc</c>.

 </para>
          <para tool="javadoc-to-mdoc">Implementation Note: The implementation is based on the ANSI standard
 X3.274-1996 algorithm.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#pow(int, java.math.MathContext)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ArithmeticException">if <c>n </c> or <c>n &gt; 999999999</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Precision">
      <MemberSignature Language="C#" Value="public virtual int Precision ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Precision() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("precision", "()I", "GetPrecisionHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the precision of this <c>BigDecimal</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the precision of this <c>BigDecimal</c>. The precision is the
 number of decimal digits used to represent this decimal. It is equivalent
 to the number of digits of the unscaled value. The precision of <c>0</c>
 is <c>1</c> (independent of the scale).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#precision()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Remainder">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal Remainder (Java.Math.BigDecimal divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Remainder(class Java.Math.BigDecimal divisor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("remainder", "(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;", "GetRemainder_Ljava_math_BigDecimal_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="divisor" Type="Java.Math.BigDecimal" />
      </Parameters>
      <Docs>
        <param name="divisor">value by which <c>this</c> is divided.</param>
        <summary>Returns a new <c>BigDecimal</c> whose value is <c>this % divisor</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>BigDecimal</c> whose value is <c>this % divisor</c>.
 </para>
          <para tool="javadoc-to-mdoc">
 The remainder is defined as <c>this -
 this.divideToIntegralValue(divisor) * divisor</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#remainder(java.math.BigDecimal)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>divisor == null</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>divisor == 0</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Remainder">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal Remainder (Java.Math.BigDecimal divisor, Java.Math.MathContext mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Remainder(class Java.Math.BigDecimal divisor, class Java.Math.MathContext mc) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("remainder", "(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;", "GetRemainder_Ljava_math_BigDecimal_Ljava_math_MathContext_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="divisor" Type="Java.Math.BigDecimal" />
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="divisor">value by which <c>this</c> is divided.</param>
        <param name="mc">rounding mode and precision to be used.</param>
        <summary>Returns a new <c>BigDecimal</c> whose value is <c>this % divisor</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>BigDecimal</c> whose value is <c>this % divisor</c>.
 </para>
          <para tool="javadoc-to-mdoc">
 The remainder is defined as <c>this -
 this.divideToIntegralValue(divisor) * divisor</c>.
 </para>
          <para tool="javadoc-to-mdoc">
 The specified rounding mode <c>mc</c> is used for the division only.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#remainder(java.math.BigDecimal, java.math.MathContext)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>divisor == null</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>divisor == 0</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>mc.getPrecision() &gt; 0</c> and the result of <c>this.divideToIntegralValue(divisor, mc)</c> requires more digits
             to be represented.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal Round (Java.Math.MathContext mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Round(class Java.Math.MathContext mc) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("round", "(Ljava/math/MathContext;)Ljava/math/BigDecimal;", "GetRound_Ljava_math_MathContext_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="mc">rounding mode and precision for the result of this operation.</param>
        <summary>Returns a new <c>BigDecimal</c> whose value is <c>this</c>, rounded
 according to the passed context <c>mc</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>BigDecimal</c> whose value is <c>this</c>, rounded
 according to the passed context <c>mc</c>.
 </para>
          <para tool="javadoc-to-mdoc">
 If <c>mc.precision = 0</c>, then no rounding is performed.
 </para>
          <para tool="javadoc-to-mdoc">
 If <c>mc.precision &gt; 0</c> and <c>mc.roundingMode == UNNECESSARY</c>,
 then an <c>ArithmeticException</c> is thrown if the result cannot be
 represented exactly within the given precision.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#round(java.math.MathContext)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ArithmeticException">if <c>mc.precision &gt; 0</c> and <c>mc.roundingMode ==
             UNNECESSARY</c> and this cannot be represented within the given
             precision.
</exception>
      </Docs>
    </Member>
    <Member MemberName="RoundCeiling">
      <MemberSignature Language="C#" Value="public const Java.Math.RoundOptions RoundCeiling = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.Math.RoundOptions RoundCeiling = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ROUND_CEILING")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Java.Math.RoundOptions enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.RoundOptions</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Rounding mode to round towards positive infinity.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Rounding mode to round towards positive infinity. For positive values
 this rounding mode behaves as <c><see cref="F:Java.Math.BigDecimal.RoundUp" /></c>, for negative values as
 <c><see cref="F:Java.Math.BigDecimal.RoundDown" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#ROUND_CEILING" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Java.Math.RoundingMode.Ceiling" />
      </Docs>
    </Member>
    <Member MemberName="RoundDown">
      <MemberSignature Language="C#" Value="public const Java.Math.RoundOptions RoundDown = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.Math.RoundOptions RoundDown = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ROUND_DOWN")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Java.Math.RoundOptions enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.RoundOptions</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Rounding mode where the values are rounded towards zero.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Rounding mode where the values are rounded towards zero.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#ROUND_DOWN" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Java.Math.RoundingMode.Down" />
      </Docs>
    </Member>
    <Member MemberName="RoundFloor">
      <MemberSignature Language="C#" Value="public const Java.Math.RoundOptions RoundFloor = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.Math.RoundOptions RoundFloor = (3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ROUND_FLOOR")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Java.Math.RoundOptions enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.RoundOptions</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Rounding mode to round towards negative infinity.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Rounding mode to round towards negative infinity. For positive values
 this rounding mode behaves as <c><see cref="F:Java.Math.BigDecimal.RoundDown" /></c>, for negative values as
 <c><see cref="F:Java.Math.BigDecimal.RoundUp" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#ROUND_FLOOR" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Java.Math.RoundingMode.Floor" />
      </Docs>
    </Member>
    <Member MemberName="RoundHalfDown">
      <MemberSignature Language="C#" Value="public const Java.Math.RoundOptions RoundHalfDown = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.Math.RoundOptions RoundHalfDown = (5)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ROUND_HALF_DOWN")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Java.Math.RoundOptions enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.RoundOptions</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>Rounding mode where values are rounded towards the nearest neighbor.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Rounding mode where values are rounded towards the nearest neighbor.
 Ties are broken by rounding down.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#ROUND_HALF_DOWN" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Java.Math.RoundingMode.HalfDown" />
      </Docs>
    </Member>
    <Member MemberName="RoundHalfEven">
      <MemberSignature Language="C#" Value="public const Java.Math.RoundOptions RoundHalfEven = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.Math.RoundOptions RoundHalfEven = (6)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ROUND_HALF_EVEN")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Java.Math.RoundOptions enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.RoundOptions</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>Rounding mode where values are rounded towards the nearest neighbor.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Rounding mode where values are rounded towards the nearest neighbor.
 Ties are broken by rounding to the even neighbor.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#ROUND_HALF_EVEN" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Java.Math.RoundingMode.HalfEven" />
      </Docs>
    </Member>
    <Member MemberName="RoundHalfUp">
      <MemberSignature Language="C#" Value="public const Java.Math.RoundOptions RoundHalfUp = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.Math.RoundOptions RoundHalfUp = (4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ROUND_HALF_UP")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Java.Math.RoundOptions enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.RoundOptions</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Rounding mode where values are rounded towards the nearest neighbor.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Rounding mode where values are rounded towards the nearest neighbor.
 Ties are broken by rounding up.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#ROUND_HALF_UP" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Java.Math.RoundingMode.HalfUp" />
      </Docs>
    </Member>
    <Member MemberName="RoundUnnecessary">
      <MemberSignature Language="C#" Value="public const Java.Math.RoundOptions RoundUnnecessary = 7;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.Math.RoundOptions RoundUnnecessary = (7)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ROUND_UNNECESSARY")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Java.Math.RoundOptions enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.RoundOptions</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>Rounding mode where the rounding operations throws an <c>ArithmeticException</c> for the case that rounding is necessary, i.e. for
 the case that the value cannot be represented exactly.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Rounding mode where the rounding operations throws an <c>ArithmeticException</c> for the case that rounding is necessary, i.e. for
 the case that the value cannot be represented exactly.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#ROUND_UNNECESSARY" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Java.Math.RoundingMode.Unnecessary" />
      </Docs>
    </Member>
    <Member MemberName="RoundUp">
      <MemberSignature Language="C#" Value="public const Java.Math.RoundOptions RoundUp = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.Math.RoundOptions RoundUp = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ROUND_UP")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Java.Math.RoundOptions enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.RoundOptions</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Rounding mode where positive values are rounded towards positive infinity
 and negative values towards negative infinity.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Rounding mode where positive values are rounded towards positive infinity
 and negative values towards negative infinity.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#ROUND_UP" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Java.Math.RoundingMode.Up" />
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public virtual int Scale ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Scale() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("scale", "()I", "GetScaleHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the scale of this <c>BigDecimal</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the scale of this <c>BigDecimal</c>. The scale is the number of
 digits behind the decimal point. The value of this <c>BigDecimal</c> is
 the <c>unsignedValue * 10<format type="text/html"><sup>-scale</sup></format></c>. If the scale is negative,
 then this <c>BigDecimal</c> represents a big integer.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#scale()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ScaleByPowerOfTen">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal ScaleByPowerOfTen (int n);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal ScaleByPowerOfTen(int32 n) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("scaleByPowerOfTen", "(I)Ljava/math/BigDecimal;", "GetScaleByPowerOfTen_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="n">To be added.</param>
        <summary>Returns a new <c>BigDecimal</c> whose value is <c>this * 10<format type="text/html"><sup>n</sup></format></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>BigDecimal</c> whose value is <c>this * 10<format type="text/html"><sup>n</sup></format></c>.
 The scale of the result is <c>this.scale()</c> - <c>n</c>.
 The precision of the result is the precision of <c>this</c>.

 </para>
          <para tool="javadoc-to-mdoc">This method has the same effect as <c><see cref="M:Java.Math.BigDecimal.MovePointRight(System.Int32)" /></c>, except that
 the precision is not changed.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#scaleByPowerOfTen(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetScale">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal SetScale (int newScale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal SetScale(int32 newScale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setScale", "(I)Ljava/math/BigDecimal;", "GetSetScale_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newScale" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="newScale">scale of the result returned.</param>
        <summary>Returns a new <c>BigDecimal</c> instance with the specified scale.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>BigDecimal</c> instance with the specified scale. If
 the new scale is greater than the old scale, then additional zeros are
 added to the unscaled value. If the new scale is smaller than the old
 scale, then trailing zeros are removed. If the trailing digits are not
 zeros then an ArithmeticException is thrown.
 </para>
          <para tool="javadoc-to-mdoc">
 If no exception is thrown, then the following equation holds: <c>x.setScale(s).compareTo(x) == 0</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#setScale(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ArithmeticException">if rounding would be necessary.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetScale">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal SetScale (int newScale, Java.Math.RoundingMode roundingMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal SetScale(int32 newScale, class Java.Math.RoundingMode roundingMode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setScale", "(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;", "GetSetScale_ILjava_math_RoundingMode_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newScale" Type="System.Int32" />
        <Parameter Name="roundingMode" Type="Java.Math.RoundingMode" />
      </Parameters>
      <Docs>
        <param name="newScale">scale of the result returned.</param>
        <param name="roundingMode">rounding mode to be used to round the result.</param>
        <summary>Returns a new <c>BigDecimal</c> instance with the specified scale.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>BigDecimal</c> instance with the specified scale.
 </para>
          <para tool="javadoc-to-mdoc">
 If the new scale is greater than the old scale, then additional zeros are
 added to the unscaled value. In this case no rounding is necessary.
 </para>
          <para tool="javadoc-to-mdoc">
 If the new scale is smaller than the old scale, then trailing digits are
 removed. If these trailing digits are not zero, then the remaining
 unscaled value has to be rounded. For this rounding operation the
 specified rounding mode is used.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#setScale(int, java.math.RoundingMode)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>roundingMode == null</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>roundingMode == ROUND_UNNECESSARY</c> and rounding is
             necessary according to the given scale.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetScale">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal SetScale (int newScale, Java.Math.RoundOptions roundingMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal SetScale(int32 newScale, valuetype Java.Math.RoundOptions roundingMode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setScale", "(II)Ljava/math/BigDecimal;", "GetSetScale_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newScale" Type="System.Int32" />
        <Parameter Name="roundingMode" Type="Java.Math.RoundOptions" />
      </Parameters>
      <Docs>
        <param name="newScale">scale of the result returned.</param>
        <param name="roundingMode">rounding mode to be used to round the result.</param>
        <summary>Returns a new <c>BigDecimal</c> instance with the specified scale.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>BigDecimal</c> instance with the specified scale.
 </para>
          <para tool="javadoc-to-mdoc">
 If the new scale is greater than the old scale, then additional zeros are
 added to the unscaled value. In this case no rounding is necessary.
 </para>
          <para tool="javadoc-to-mdoc">
 If the new scale is smaller than the old scale, then trailing digits are
 removed. If these trailing digits are not zero, then the remaining
 unscaled value has to be rounded. For this rounding operation the
 specified rounding mode is used.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#setScale(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>roundingMode</c> is not a valid rounding mode.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>roundingMode == ROUND_UNNECESSARY</c> and rounding is
             necessary according to the given scale.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ShortValueExact">
      <MemberSignature Language="C#" Value="public virtual short ShortValueExact ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int16 ShortValueExact() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("shortValueExact", "()S", "GetShortValueExactHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns this <c>BigDecimal</c> as a short value if it has no fractional
 part and if its value fits to the short range ([-2<format type="text/html"><sup>15</sup></format>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns this <c>BigDecimal</c> as a short value if it has no fractional
 part and if its value fits to the short range ([-2<format type="text/html"><sup>15</sup></format>..2<format type="text/html"><sup>15</sup></format>-1]). If
 these conditions are not met, an <c>ArithmeticException</c> is thrown.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#shortValueExact()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ArithmeticException">if rounding is necessary of the number doesn't fit in a short.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Signum">
      <MemberSignature Language="C#" Value="public virtual int Signum ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Signum() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("signum", "()I", "GetSignumHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the sign of this <c>BigDecimal</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the sign of this <c>BigDecimal</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#signum()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StripTrailingZeros">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal StripTrailingZeros ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal StripTrailingZeros() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("stripTrailingZeros", "()Ljava/math/BigDecimal;", "GetStripTrailingZerosHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a new <c>BigDecimal</c> instance with the same value as <c>this</c> but with a unscaled value where the trailing zeros have been
 removed.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>BigDecimal</c> instance with the same value as <c>this</c> but with a unscaled value where the trailing zeros have been
 removed. If the unscaled value of <c>this</c> has n trailing zeros, then
 the scale and the precision of the result has been reduced by n.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#stripTrailingZeros()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal Subtract (Java.Math.BigDecimal subtrahend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Subtract(class Java.Math.BigDecimal subtrahend) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("subtract", "(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;", "GetSubtract_Ljava_math_BigDecimal_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subtrahend" Type="Java.Math.BigDecimal" />
      </Parameters>
      <Docs>
        <param name="subtrahend">value to be subtracted from <c>this</c>.</param>
        <summary>Returns a new <c>BigDecimal</c> whose value is <c>this - subtrahend</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>BigDecimal</c> whose value is <c>this - subtrahend</c>.
 The scale of the result is the maximum of the scales of the two arguments.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#subtract(java.math.BigDecimal)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>subtrahend == null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal Subtract (Java.Math.BigDecimal subtrahend, Java.Math.MathContext mc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Subtract(class Java.Math.BigDecimal subtrahend, class Java.Math.MathContext mc) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("subtract", "(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;", "GetSubtract_Ljava_math_BigDecimal_Ljava_math_MathContext_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subtrahend" Type="Java.Math.BigDecimal" />
        <Parameter Name="mc" Type="Java.Math.MathContext" />
      </Parameters>
      <Docs>
        <param name="subtrahend">value to be subtracted from <c>this</c>.</param>
        <param name="mc">rounding mode and precision for the result of this operation.</param>
        <summary>Returns a new <c>BigDecimal</c> whose value is <c>this - subtrahend</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>BigDecimal</c> whose value is <c>this - subtrahend</c>.
 The result is rounded according to the passed context <c>mc</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#subtract(java.math.BigDecimal, java.math.MathContext)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>subtrahend == null</c> or <c>mc == null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Ten">
      <MemberSignature Language="C#" Value="public static Java.Math.BigDecimal Ten { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Math.BigDecimal Ten" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TEN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The constant ten as a <c>BigDecimal</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">The constant ten as a <c>BigDecimal</c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#TEN" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToBigInteger">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigInteger ToBigInteger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigInteger ToBigInteger() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("toBigInteger", "()Ljava/math/BigInteger;", "GetToBigIntegerHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns this <c>BigDecimal</c> as a big integer instance.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns this <c>BigDecimal</c> as a big integer instance. A fractional
 part is discarded.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#toBigInteger()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ToBigIntegerExact">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigInteger ToBigIntegerExact ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigInteger ToBigIntegerExact() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("toBigIntegerExact", "()Ljava/math/BigInteger;", "GetToBigIntegerExactHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns this <c>BigDecimal</c> as a big integer instance if it has no
 fractional part.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns this <c>BigDecimal</c> as a big integer instance if it has no
 fractional part. If this <c>BigDecimal</c> has a fractional part, i.e.
 if rounding would be necessary, an <c>ArithmeticException</c> is thrown.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#toBigIntegerExact()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ArithmeticException">if rounding is necessary.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ToEngineeringString">
      <MemberSignature Language="C#" Value="public virtual string ToEngineeringString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToEngineeringString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("toEngineeringString", "()Ljava/lang/String;", "GetToEngineeringStringHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a string representation of this <c>BigDecimal</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a string representation of this <c>BigDecimal</c>. This
 representation always prints all significant digits of this value.
 </para>
          <para tool="javadoc-to-mdoc">
 If the scale is negative or if <c>scale - precision &gt;= 6</c> then
 engineering notation is used. Engineering notation is similar to the
 scientific notation except that the exponent is made to be a multiple of
 3 such that the integer part is &gt;= 1 and </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#toEngineeringString()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ToPlainString">
      <MemberSignature Language="C#" Value="public virtual string ToPlainString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToPlainString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("toPlainString", "()Ljava/lang/String;", "GetToPlainStringHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a string representation of this <c>BigDecimal</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a string representation of this <c>BigDecimal</c>. No scientific
 notation is used. This methods adds zeros where necessary.
 </para>
          <para tool="javadoc-to-mdoc">
 If this string representation is used to create a new instance, this
 instance is generally not identical to <c>this</c> as the precision
 changes.
 </para>
          <para tool="javadoc-to-mdoc">
            <c>x.equals(new BigDecimal(x.toPlainString())</c> usually returns
 <c>false</c>.
 </para>
          <para tool="javadoc-to-mdoc">
            <c>x.compareTo(new BigDecimal(x.toPlainString())</c> returns <c>0</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#toPlainString()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Ulp">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigDecimal Ulp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigDecimal Ulp() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ulp", "()Ljava/math/BigDecimal;", "GetUlpHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the unit in the last place (ULP) of this <c>BigDecimal</c>
 instance.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the unit in the last place (ULP) of this <c>BigDecimal</c>
 instance. An ULP is the distance to the nearest big decimal with the same
 precision.

 </para>
          <para tool="javadoc-to-mdoc">The amount of a rounding error in the evaluation of a floating-point
 operation is often expressed in ULPs. An error of 1 ULP is often seen as
 a tolerable error.

 </para>
          <para tool="javadoc-to-mdoc">For class <c>BigDecimal</c>, the ULP of a number is simply 10<format type="text/html"><sup>-scale</sup></format>.
 For example, <c>new BigDecimal(0.1).ulp()</c> returns <c>1E-55</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#ulp()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="UnscaledValue">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigInteger UnscaledValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigInteger UnscaledValue() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unscaledValue", "()Ljava/math/BigInteger;", "GetUnscaledValueHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the unscaled value (mantissa) of this <c>BigDecimal</c> instance
 as a <c>BigInteger</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the unscaled value (mantissa) of this <c>BigDecimal</c> instance
 as a <c>BigInteger</c>. The unscaled value can be computed as
 <c>this * 10<format type="text/html"><sup>scale</sup></format></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#unscaledValue()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ValueOf">
      <MemberSignature Language="C#" Value="public static Java.Math.BigDecimal ValueOf (double val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Math.BigDecimal ValueOf(float64 val) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("valueOf", "(D)Ljava/math/BigDecimal;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="val">double value to be converted to a <c>BigDecimal</c>.</param>
        <summary>Returns a new <c>BigDecimal</c> instance whose value is equal to <c>val</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>BigDecimal</c> instance whose value is equal to <c>val</c>. The new decimal is constructed as if the <c>BigDecimal(String)</c>
 constructor is called with an argument which is equal to <c>Double.toString(val)</c>. For example, <c>valueOf("0.1")</c> is converted to
 (unscaled=1, scale=1), although the double <c>0.1</c> cannot be
 represented exactly as a double value. In contrast to that, a new <c>BigDecimal(0.1)</c> instance has the value <c>0.1000000000000000055511151231257827021181583404541015625</c> with an
 unscaled value <c>1000000000000000055511151231257827021181583404541015625</c>
 and the scale <c>55</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#valueOf(double)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NumberFormatException">if <c>val</c> is infinite or <c>val</c> is not a number
</exception>
      </Docs>
    </Member>
    <Member MemberName="ValueOf">
      <MemberSignature Language="C#" Value="public static Java.Math.BigDecimal ValueOf (long unscaledVal);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Math.BigDecimal ValueOf(int64 unscaledVal) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("valueOf", "(J)Ljava/math/BigDecimal;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unscaledVal" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="unscaledVal">value to be converted to a <c>BigDecimal</c>.</param>
        <summary>Returns a new <c>BigDecimal</c> instance whose value is equal to <c>unscaledVal</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>BigDecimal</c> instance whose value is equal to <c>unscaledVal</c>. The scale of the result is <c>0</c>, and its unscaled
 value is <c>unscaledVal</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#valueOf(long)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ValueOf">
      <MemberSignature Language="C#" Value="public static Java.Math.BigDecimal ValueOf (long unscaledVal, int scale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Math.BigDecimal ValueOf(int64 unscaledVal, int32 scale) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("valueOf", "(JI)Ljava/math/BigDecimal;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unscaledVal" Type="System.Int64" />
        <Parameter Name="scale" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="unscaledVal">To be added.</param>
        <param name="scale">To be added.</param>
        <summary>Returns a new <c>BigDecimal</c> instance whose value is equal to <c>unscaledVal * 10<format type="text/html"><sup>-scale</sup></format></c>).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new <c>BigDecimal</c> instance whose value is equal to <c>unscaledVal * 10<format type="text/html"><sup>-scale</sup></format></c>). The scale of the result is <c>scale</c>, and its unscaled value is <c>unscaledVal</c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#valueOf(long, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static Java.Math.BigDecimal Zero { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Math.BigDecimal Zero" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ZERO")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigDecimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The constant zero as a <c>BigDecimal</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">The constant zero as a <c>BigDecimal</c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigDecimal.html#ZERO" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
