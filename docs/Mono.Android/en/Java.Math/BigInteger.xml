<Type Name="BigInteger" FullName="Java.Math.BigInteger">
  <TypeSignature Language="C#" Value="public class BigInteger : Java.Lang.Number, IDisposable, Java.Lang.IComparable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BigInteger extends Java.Lang.Number implements class Android.Runtime.IJavaObject, class Java.Lang.IComparable, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Number</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Java.Lang.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/math/BigInteger", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>An immutable arbitrary-precision signed integer.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">An immutable arbitrary-precision signed integer.

 <format type="text/html"><h3>Fast Cryptography</h3></format>
 This implementation is efficient for operations traditionally used in
 cryptography, such as the generation of large prime numbers and computation
 of the modular inverse.

 <format type="text/html"><h3>Slow Two's Complement Bitwise Operations</h3></format>
 This API includes operations for bitwise operations in two's complement
 representation. Two's complement is not the internal representation used by
 this implementation, so such methods may be inefficient. Use <c><see cref="T:Java.Util.BitSet" /></c> for high-performance bitwise operations on
 arbitrarily-large sequences of bits.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/java/math/BigInteger.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "([B)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="val" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>Constructs a new <c>BigInteger</c> from the given two's complement
 representation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>BigInteger</c> from the given two's complement
 representation. The most significant byte is the entry at index 0. The
 most significant bit of this entry determines the sign of the new <c>BigInteger</c> instance. The array must be nonempty.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#BigInteger(byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>value == null</c>.</exception>
        <exception cref="T:Java.Lang.NumberFormatException">if the length of <c>value</c> is zero.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="val" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>Constructs a new <c>BigInteger</c> by parsing <c>value</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>BigInteger</c> by parsing <c>value</c>. The string
 representation consists of an optional plus or minus sign followed by a
 non-empty sequence of decimal digits. Digits are interpreted as if by
 <c>Character.digit(char,10)</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#BigInteger(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>value == null</c>.</exception>
        <exception cref="T:Java.Lang.NumberFormatException">if <c>value</c> is not a valid
     representation of a <c>BigInteger</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (int numBits, Java.Util.Random random);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 numBits, class Java.Util.Random random) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(ILjava/util/Random;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="numBits" Type="System.Int32" />
        <Parameter Name="rnd" Type="Java.Util.Random" />
      </Parameters>
      <Docs>
        <param name="numBits">To be added.</param>
        <param name="random">To be added.</param>
        <summary>Constructs a random non-negative <c>BigInteger</c> instance in the range
 <c>[0, pow(2, numBits)-1]</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a random non-negative <c>BigInteger</c> instance in the range
 <c>[0, pow(2, numBits)-1]</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#BigInteger(int, java.util.Random)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>numBits</c></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (int signum, byte[] magnitude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 signum, unsigned int8[] magnitude) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(I[B)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="signum" Type="System.Int32" />
        <Parameter Name="magnitude" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="signum">To be added.</param>
        <param name="magnitude">To be added.</param>
        <summary>Constructs a new <c>BigInteger</c> instance with the given sign and
 magnitude.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>BigInteger</c> instance with the given sign and
 magnitude.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#BigInteger(int, byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>magnitude == null</c>.</exception>
        <exception cref="T:Java.Lang.NumberFormatException">if the sign is not one of -1, 0, 1 or if
     the sign is zero and the magnitude contains non-zero entries.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BigInteger (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (string value, int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value, int32 radix) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="val" Type="System.String" />
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="radix">To be added.</param>
        <summary>Constructs a new <c>BigInteger</c> instance by parsing <c>value</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>BigInteger</c> instance by parsing <c>value</c>.
 The string representation consists of an optional plus or minus sign
 followed by a non-empty sequence of digits in the specified radix. Digits
 are interpreted as if by <c>Character.digit(char, radix)</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#BigInteger(java.lang.String, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>value == null</c>.</exception>
        <exception cref="T:Java.Lang.NumberFormatException">if <c>value</c> is not a valid
     representation of a <c>BigInteger</c> or if <c>radix </c> or <c>radix &gt; Character.MAX_RADIX</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (int bitLength, int certainty, Java.Util.Random random);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 bitLength, int32 certainty, class Java.Util.Random random) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(IILjava/util/Random;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="bitLength" Type="System.Int32" />
        <Parameter Name="certainty" Type="System.Int32" />
        <Parameter Name="rnd" Type="Java.Util.Random" />
      </Parameters>
      <Docs>
        <param name="bitLength">To be added.</param>
        <param name="certainty">To be added.</param>
        <param name="random">To be added.</param>
        <summary>Constructs a random <c>BigInteger</c> instance in the range <c>[0,
 pow(2, bitLength)-1]</c> which is probably prime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a random <c>BigInteger</c> instance in the range <c>[0,
 pow(2, bitLength)-1]</c> which is probably prime. The probability that the
 returned <c>BigInteger</c> is prime is greater than
 <c>1 - 1/2<format type="text/html"><sup>certainty</sup></format>)</c>.

 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Note:</b>
            </format> the <c>Random</c> argument is ignored if
 <c>bitLength &gt;= 16</c>, where this implementation will use OpenSSL's
 <c>BN_generate_prime_ex</c> as a source of cryptographically strong pseudo-random numbers.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#BigInteger(int, int, java.util.Random)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ArithmeticException">if <c>bitLength </c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigInteger Abs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigInteger Abs() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("abs", "()Ljava/math/BigInteger;", "GetAbsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a <c>BigInteger</c> whose value is the absolute value of <c>this</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c>BigInteger</c> whose value is the absolute value of <c>this</c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#abs()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigInteger Add (Java.Math.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigInteger Add(class Java.Math.BigInteger value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("add", "(Ljava/math/BigInteger;)Ljava/math/BigInteger;", "GetAdd_Ljava_math_BigInteger_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val" Type="Java.Math.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>Returns a <c>BigInteger</c> whose value is <c>this + value</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c>BigInteger</c> whose value is <c>this + value</c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#add(java.math.BigInteger)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigInteger And (Java.Math.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigInteger And(class Java.Math.BigInteger value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("and", "(Ljava/math/BigInteger;)Ljava/math/BigInteger;", "GetAnd_Ljava_math_BigInteger_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val" Type="Java.Math.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value">value to be and'ed with <c>this</c>.</param>
        <summary>Returns a <c>BigInteger</c> whose value is <c>this &amp; value</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c>BigInteger</c> whose value is <c>this &amp; value</c>.

 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Implementation Note:</b>
            </format> Usage of this method is not recommended
 as the current implementation is not efficient.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#and(java.math.BigInteger)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>value == null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="AndNot">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigInteger AndNot (Java.Math.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigInteger AndNot(class Java.Math.BigInteger value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("andNot", "(Ljava/math/BigInteger;)Ljava/math/BigInteger;", "GetAndNot_Ljava_math_BigInteger_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val" Type="Java.Math.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value">value to be not'ed and then and'ed with <c>this</c>.</param>
        <summary>Returns a <c>BigInteger</c> whose value is <c>this &amp; ~value</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c>BigInteger</c> whose value is <c>this &amp; ~value</c>.
 Evaluating <c>x.andNot(value)</c> returns the same result as <c>x.and(value.not())</c>.

 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Implementation Note:</b>
            </format> Usage of this method is not recommended
 as the current implementation is not efficient.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#andNot(java.math.BigInteger)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>value == null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="BitCount">
      <MemberSignature Language="C#" Value="public virtual int BitCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 BitCount() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("bitCount", "()I", "GetBitCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the number of bits in the two's complement representation of
 <c>this</c> which differ from the sign bit.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the number of bits in the two's complement representation of
 <c>this</c> which differ from the sign bit. If <c>this</c> is negative,
 the result is equivalent to the number of bits set in the two's
 complement representation of <c>-this - 1</c>.

 </para>
          <para tool="javadoc-to-mdoc">Use <c>bitLength(0)</c> to find the length of the binary value in
 bits.

 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Implementation Note:</b>
            </format> Usage of this method is not recommended as
 the current implementation is not efficient.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#bitCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BitLength">
      <MemberSignature Language="C#" Value="public virtual int BitLength ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 BitLength() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("bitLength", "()I", "GetBitLengthHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the length of the value's two's complement representation without
 leading zeros for positive numbers / without leading ones for negative
 values.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the length of the value's two's complement representation without
 leading zeros for positive numbers / without leading ones for negative
 values.

 </para>
          <para tool="javadoc-to-mdoc">The two's complement representation of <c>this</c> will be at least
 <c>bitLength() + 1</c> bits long.

 </para>
          <para tool="javadoc-to-mdoc">The value will fit into an <c>int</c> if <c>bitLength() </c> or
 into a <c>long</c> if <c>bitLength() </c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#bitLength()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ClearBit">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigInteger ClearBit (int n);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigInteger ClearBit(int32 n) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearBit", "(I)Ljava/math/BigInteger;", "GetClearBit_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="n">position where the bit in <c>this</c> has to be cleared.</param>
        <summary>Returns a <c>BigInteger</c> which has the same binary representation
 as <c>this</c> but with the bit at position n cleared.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c>BigInteger</c> which has the same binary representation
 as <c>this</c> but with the bit at position n cleared. The result is
 equivalent to <c>this &amp; ~pow(2, n)</c>.

 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Implementation Note:</b>
            </format> Usage of this method is not recommended as
 the current implementation is not efficient.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#clearBit(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ArithmeticException">if <c>n </c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public virtual int CompareTo (Java.Math.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(class Java.Math.BigInteger value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("compareTo", "(Ljava/math/BigInteger;)I", "GetCompareTo_Ljava_math_BigInteger_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val" Type="Java.Math.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value">value to be compared with <c>this</c>.</param>
        <summary>Compares this <c>BigInteger</c> with <c>value</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Compares this <c>BigInteger</c> with <c>value</c>. Returns <c>-1</c>
 if <c>this </c>, <c>0</c> if <c>this == value</c> and <c>1</c>
 if <c>this &gt; value</c>, .</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#compareTo(java.math.BigInteger)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>value == null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigInteger Divide (Java.Math.BigInteger divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigInteger Divide(class Java.Math.BigInteger divisor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("divide", "(Ljava/math/BigInteger;)Ljava/math/BigInteger;", "GetDivide_Ljava_math_BigInteger_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="divisor" Type="Java.Math.BigInteger" />
      </Parameters>
      <Docs>
        <param name="divisor">value by which <c>this</c> is divided.</param>
        <summary>Returns a <c>BigInteger</c> whose value is <c>this / divisor</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c>BigInteger</c> whose value is <c>this / divisor</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#divide(java.math.BigInteger)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>divisor == null</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>divisor == 0</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DivideAndRemainder">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigInteger[] DivideAndRemainder (Java.Math.BigInteger divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigInteger[] DivideAndRemainder(class Java.Math.BigInteger divisor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("divideAndRemainder", "(Ljava/math/BigInteger;)[Ljava/math/BigInteger;", "GetDivideAndRemainder_Ljava_math_BigInteger_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="divisor" Type="Java.Math.BigInteger" />
      </Parameters>
      <Docs>
        <param name="divisor">value by which <c>this</c> is divided.</param>
        <summary>Returns a two element <c>BigInteger</c> array containing
 <c>this / divisor</c> at index 0 and <c>this % divisor</c> at index 1.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a two element <c>BigInteger</c> array containing
 <c>this / divisor</c> at index 0 and <c>this % divisor</c> at index 1.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#divideAndRemainder(java.math.BigInteger)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>divisor == null</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>divisor == 0</c>.</exception>
        <altmember cref="M:Java.Math.BigInteger.Divide(Java.Math.BigInteger)" />
        <altmember cref="M:Java.Math.BigInteger.Remainder(Java.Math.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="DoubleValue">
      <MemberSignature Language="C#" Value="public override double DoubleValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 DoubleValue() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("doubleValue", "()D", "GetDoubleValueHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns this <c>BigInteger</c> as a double.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns this <c>BigInteger</c> as a double. If <c>this</c> is too big
 to be represented as a double, then <c>Double.POSITIVE_INFINITY</c> or
 <c>Double.NEGATIVE_INFINITY</c> is returned. Note that not all integers
 in the range <c>[-Double.MAX_VALUE, Double.MAX_VALUE]</c> can be exactly
 represented as a double.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#doubleValue()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FlipBit">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigInteger FlipBit (int n);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigInteger FlipBit(int32 n) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("flipBit", "(I)Ljava/math/BigInteger;", "GetFlipBit_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="n">position where the bit in <c>this</c> has to be flipped.</param>
        <summary>Returns a <c>BigInteger</c> which has the same binary representation
 as <c>this</c> but with the bit at position n flipped.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c>BigInteger</c> which has the same binary representation
 as <c>this</c> but with the bit at position n flipped. The result is
 equivalent to <c>this ^ pow(2, n)</c>.

 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Implementation Note:</b>
            </format> Usage of this method is not recommended as
 the current implementation is not efficient.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#flipBit(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ArithmeticException">if <c>n </c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="FloatValue">
      <MemberSignature Language="C#" Value="public override float FloatValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 FloatValue() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("floatValue", "()F", "GetFloatValueHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns this <c>BigInteger</c> as a float.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns this <c>BigInteger</c> as a float. If <c>this</c> is too big to
 be represented as a float, then <c>Float.POSITIVE_INFINITY</c> or
 <c>Float.NEGATIVE_INFINITY</c> is returned. Note that not all integers
 in the range <c>[-Float.MAX_VALUE, Float.MAX_VALUE]</c> can be exactly
 represented as a float.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#floatValue()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Gcd">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigInteger Gcd (Java.Math.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigInteger Gcd(class Java.Math.BigInteger value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("gcd", "(Ljava/math/BigInteger;)Ljava/math/BigInteger;", "GetGcd_Ljava_math_BigInteger_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val" Type="Java.Math.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value">value with which the greatest common divisor is computed.</param>
        <summary>Returns a <c>BigInteger</c> whose value is greatest common divisor
 of <c>this</c> and <c>value</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c>BigInteger</c> whose value is greatest common divisor
 of <c>this</c> and <c>value</c>. If <c>this == 0</c> and <c>value == 0</c> then zero is returned, otherwise the result is positive.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#gcd(java.math.BigInteger)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>value == null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="IntValue">
      <MemberSignature Language="C#" Value="public override int IntValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 IntValue() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("intValue", "()I", "GetIntValueHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns this <c>BigInteger</c> as an int value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns this <c>BigInteger</c> as an int value. If <c>this</c> is too
 big to be represented as an int, then <c>this % (1 </c> is
 returned.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#intValue()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsProbablePrime">
      <MemberSignature Language="C#" Value="public virtual bool IsProbablePrime (int certainty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsProbablePrime(int32 certainty) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isProbablePrime", "(I)Z", "GetIsProbablePrime_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certainty" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="certainty">tolerated primality uncertainty.</param>
        <summary>Tests whether this <c>BigInteger</c> is probably prime.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Tests whether this <c>BigInteger</c> is probably prime. If <c>true</c>
 is returned, then this is prime with a probability greater than
 <c>1 - 1/2<format type="text/html"><sup>certainty</sup></format>)</c>. If <c>false</c> is returned, then this
 is definitely composite. If the argument <c>certainty</c> &lt;= 0, then
 this method returns true.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#isProbablePrime(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Java.Lang.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (Java.Lang.Object another);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 Java.Lang.IComparable.CompareTo(class Java.Lang.Object another) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="another" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="another">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LongValue">
      <MemberSignature Language="C#" Value="public override long LongValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 LongValue() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("longValue", "()J", "GetLongValueHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns this <c>BigInteger</c> as a long value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns this <c>BigInteger</c> as a long value. If <c>this</c> is too
 big to be represented as a long, then <c>this % pow(2, 64)</c> is
 returned.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#longValue()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LowestSetBit">
      <MemberSignature Language="C#" Value="public virtual int LowestSetBit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LowestSetBit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLowestSetBit", "()I", "GetGetLowestSetBitHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the position of the lowest set bit in the two's complement
 representation of this <c>BigInteger</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the position of the lowest set bit in the two's complement
 representation of this <c>BigInteger</c>. If all bits are zero (this==0)
 then -1 is returned as result.

 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Implementation Note:</b>
            </format> Usage of this method is not recommended as
 the current implementation is not efficient.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#getLowestSetBit()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigInteger Max (Java.Math.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigInteger Max(class Java.Math.BigInteger value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("max", "(Ljava/math/BigInteger;)Ljava/math/BigInteger;", "GetMax_Ljava_math_BigInteger_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val" Type="Java.Math.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value">value to be used to compute the maximum with <c>this</c></param>
        <summary>Returns the maximum of this <c>BigInteger</c> and <c>value</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the maximum of this <c>BigInteger</c> and <c>value</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#max(java.math.BigInteger)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>value == null</c></exception>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigInteger Min (Java.Math.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigInteger Min(class Java.Math.BigInteger value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("min", "(Ljava/math/BigInteger;)Ljava/math/BigInteger;", "GetMin_Ljava_math_BigInteger_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val" Type="Java.Math.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value">value to be used to compute the minimum with <c>this</c>.</param>
        <summary>Returns the minimum of this <c>BigInteger</c> and <c>value</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the minimum of this <c>BigInteger</c> and <c>value</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#min(java.math.BigInteger)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>value == null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Mod">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigInteger Mod (Java.Math.BigInteger m);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigInteger Mod(class Java.Math.BigInteger m) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("mod", "(Ljava/math/BigInteger;)Ljava/math/BigInteger;", "GetMod_Ljava_math_BigInteger_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="Java.Math.BigInteger" />
      </Parameters>
      <Docs>
        <param name="m">the modulus.</param>
        <summary>Returns a <c>BigInteger</c> whose value is <c>this mod m</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c>BigInteger</c> whose value is <c>this mod m</c>. The
 modulus <c>m</c> must be positive. The result is guaranteed to be in the
 interval <c>[0, m)</c> (0 inclusive, m exclusive). The behavior of this
 function is not equivalent to the behavior of the % operator defined for
 the built-in <c>int</c>'s.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#mod(java.math.BigInteger)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>m == null</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>m </c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ModInverse">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigInteger ModInverse (Java.Math.BigInteger m);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigInteger ModInverse(class Java.Math.BigInteger m) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("modInverse", "(Ljava/math/BigInteger;)Ljava/math/BigInteger;", "GetModInverse_Ljava_math_BigInteger_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="Java.Math.BigInteger" />
      </Parameters>
      <Docs>
        <param name="m">the modulus.</param>
        <summary>Returns a <c>BigInteger</c> whose value is <c>1/this mod m</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c>BigInteger</c> whose value is <c>1/this mod m</c>. The
 modulus <c>m</c> must be positive. The result is guaranteed to be in the
 interval <c>[0, m)</c> (0 inclusive, m exclusive). If <c>this</c> is
 not relatively prime to m, then an exception is thrown.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#modInverse(java.math.BigInteger)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>m == null</c></exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>m </c> if <c>this</c> is not
     relatively prime to <c>m</c></exception>
      </Docs>
    </Member>
    <Member MemberName="ModPow">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigInteger ModPow (Java.Math.BigInteger exponent, Java.Math.BigInteger modulus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigInteger ModPow(class Java.Math.BigInteger exponent, class Java.Math.BigInteger modulus) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("modPow", "(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;", "GetModPow_Ljava_math_BigInteger_Ljava_math_BigInteger_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exponent" Type="Java.Math.BigInteger" />
        <Parameter Name="m" Type="Java.Math.BigInteger" />
      </Parameters>
      <Docs>
        <param name="exponent">the exponent.</param>
        <param name="modulus">To be added.</param>
        <param name="m">the modulus.</param>
        <summary>Returns a <c>BigInteger</c> whose value is <c>pow(this, exponent) mod modulus</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c>BigInteger</c> whose value is <c>pow(this, exponent) mod modulus</c>. The modulus must be positive. The
 result is guaranteed to be in the interval <c>[0, modulus)</c>.
 If the exponent is negative, then
 <c>pow(this.modInverse(modulus), -exponent) mod modulus</c> is computed.
 The inverse of this only exists if <c>this</c> is relatively prime to the modulus,
 otherwise an exception is thrown.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#modPow(java.math.BigInteger, java.math.BigInteger)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>modulus == null</c> or <c>exponent == null</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>modulus </c> or if <c>exponent </c> and
     not relatively prime to <c>modulus</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigInteger Multiply (Java.Math.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigInteger Multiply(class Java.Math.BigInteger value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("multiply", "(Ljava/math/BigInteger;)Ljava/math/BigInteger;", "GetMultiply_Ljava_math_BigInteger_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val" Type="Java.Math.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>Returns a <c>BigInteger</c> whose value is <c>this * value</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c>BigInteger</c> whose value is <c>this * value</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#multiply(java.math.BigInteger)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>value == null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigInteger Negate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigInteger Negate() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("negate", "()Ljava/math/BigInteger;", "GetNegateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a <c>BigInteger</c> whose value is the <c>-this</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c>BigInteger</c> whose value is the <c>-this</c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#negate()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NextProbablePrime">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigInteger NextProbablePrime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigInteger NextProbablePrime() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("nextProbablePrime", "()Ljava/math/BigInteger;", "GetNextProbablePrimeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the smallest integer x &gt; <c>this</c> which is probably prime as
 a <c>BigInteger</c> instance.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the smallest integer x &gt; <c>this</c> which is probably prime as
 a <c>BigInteger</c> instance. The probability that the returned <c>BigInteger</c> is prime is greater than <c>1 - 1/2<format type="text/html"><sup>100</sup></format></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#nextProbablePrime()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ArithmeticException">if <c>this </c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Not">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigInteger Not ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigInteger Not() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("not", "()Ljava/math/BigInteger;", "GetNotHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a <c>BigInteger</c> whose value is <c>~this</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c>BigInteger</c> whose value is <c>~this</c>. The result
 of this operation is <c>-this-1</c>.

 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Implementation Note:</b>
            </format> Usage of this method is not recommended as
 the current implementation is not efficient.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#not()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="One">
      <MemberSignature Language="C#" Value="public static Java.Math.BigInteger One { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Math.BigInteger One" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ONE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <c>BigInteger</c> constant 1.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">The <c>BigInteger</c> constant 1. </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#ONE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigInteger Or (Java.Math.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigInteger Or(class Java.Math.BigInteger value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("or", "(Ljava/math/BigInteger;)Ljava/math/BigInteger;", "GetOr_Ljava_math_BigInteger_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val" Type="Java.Math.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value">value to be or'ed with <c>this</c>.</param>
        <summary>Returns a <c>BigInteger</c> whose value is <c>this | value</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c>BigInteger</c> whose value is <c>this | value</c>.

 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Implementation Note:</b>
            </format> Usage of this method is not recommended as
 the current implementation is not efficient.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#or(java.math.BigInteger)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>value == null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Pow">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigInteger Pow (int exp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigInteger Pow(int32 exp) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("pow", "(I)Ljava/math/BigInteger;", "GetPow_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exp" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="exp">To be added.</param>
        <summary>Returns a <c>BigInteger</c> whose value is <c>pow(this, exp)</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c>BigInteger</c> whose value is <c>pow(this, exp)</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#pow(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ArithmeticException">if <c>exp </c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ProbablePrime">
      <MemberSignature Language="C#" Value="public static Java.Math.BigInteger ProbablePrime (int bitLength, Java.Util.Random random);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Math.BigInteger ProbablePrime(int32 bitLength, class Java.Util.Random random) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("probablePrime", "(ILjava/util/Random;)Ljava/math/BigInteger;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitLength" Type="System.Int32" />
        <Parameter Name="rnd" Type="Java.Util.Random" />
      </Parameters>
      <Docs>
        <param name="bitLength">length of the new <c>BigInteger</c> in bits.</param>
        <param name="random">To be added.</param>
        <summary>Returns a random positive <c>BigInteger</c> instance in the range <c>[0, pow(2, bitLength)-1]</c> which is probably prime.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a random positive <c>BigInteger</c> instance in the range <c>[0, pow(2, bitLength)-1]</c> which is probably prime. The probability that
 the returned <c>BigInteger</c> is prime is greater than <c>1 - 1/2<format type="text/html"><sup>100</sup></format>)</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#probablePrime(int, java.util.Random)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>bitLength </c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Remainder">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigInteger Remainder (Java.Math.BigInteger divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigInteger Remainder(class Java.Math.BigInteger divisor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("remainder", "(Ljava/math/BigInteger;)Ljava/math/BigInteger;", "GetRemainder_Ljava_math_BigInteger_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="divisor" Type="Java.Math.BigInteger" />
      </Parameters>
      <Docs>
        <param name="divisor">value by which <c>this</c> is divided.</param>
        <summary>Returns a <c>BigInteger</c> whose value is <c>this % divisor</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c>BigInteger</c> whose value is <c>this % divisor</c>.
 Regarding signs this methods has the same behavior as the % operator on
 ints: the sign of the remainder is the same as the sign of this.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#remainder(java.math.BigInteger)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>divisor == null</c>.</exception>
        <exception cref="T:Java.Lang.ArithmeticException">if <c>divisor == 0</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetBit">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigInteger SetBit (int n);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigInteger SetBit(int32 n) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setBit", "(I)Ljava/math/BigInteger;", "GetSetBit_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="n">position where the bit in <c>this</c> has to be set.</param>
        <summary>Returns a <c>BigInteger</c> which has the same binary representation
 as <c>this</c> but with the bit at position n set.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c>BigInteger</c> which has the same binary representation
 as <c>this</c> but with the bit at position n set. The result is
 equivalent to <c>this | pow(2, n)</c>.

 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Implementation Note:</b>
            </format> Usage of this method is not recommended as
 the current implementation is not efficient.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#setBit(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ArithmeticException">if <c>n </c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ShiftLeft">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigInteger ShiftLeft (int n);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigInteger ShiftLeft(int32 n) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("shiftLeft", "(I)Ljava/math/BigInteger;", "GetShiftLeft_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="n">shift distance.</param>
        <summary>Returns a <c>BigInteger</c> whose value is <c>this </c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c>BigInteger</c> whose value is <c>this </c>. The
 result is equivalent to <c>this * pow(2, n)</c> if n &gt;= 0. The shift
 distance may be negative which means that <c>this</c> is shifted right.
 The result then corresponds to <c>floor(this / pow(2, -n))</c>.

 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Implementation Note:</b>
            </format> Usage of this method on negative values is
 not recommended as the current implementation is not efficient.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#shiftLeft(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ShiftRight">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigInteger ShiftRight (int n);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigInteger ShiftRight(int32 n) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("shiftRight", "(I)Ljava/math/BigInteger;", "GetShiftRight_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="n">shift distance</param>
        <summary>Returns a <c>BigInteger</c> whose value is <c>this &gt;&gt; n</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c>BigInteger</c> whose value is <c>this &gt;&gt; n</c>. For
 negative arguments, the result is also negative. The shift distance may
 be negative which means that <c>this</c> is shifted left.

 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Implementation Note:</b>
            </format> Usage of this method on negative values is
 not recommended as the current implementation is not efficient.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#shiftRight(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Signum">
      <MemberSignature Language="C#" Value="public virtual int Signum ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Signum() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("signum", "()I", "GetSignumHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the sign of this <c>BigInteger</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the sign of this <c>BigInteger</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#signum()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigInteger Subtract (Java.Math.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigInteger Subtract(class Java.Math.BigInteger value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("subtract", "(Ljava/math/BigInteger;)Ljava/math/BigInteger;", "GetSubtract_Ljava_math_BigInteger_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val" Type="Java.Math.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>Returns a <c>BigInteger</c> whose value is <c>this - value</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c>BigInteger</c> whose value is <c>this - value</c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#subtract(java.math.BigInteger)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Ten">
      <MemberSignature Language="C#" Value="public static Java.Math.BigInteger Ten { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Math.BigInteger Ten" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TEN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <c>BigInteger</c> constant 10.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">The <c>BigInteger</c> constant 10. </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#TEN" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TestBit">
      <MemberSignature Language="C#" Value="public virtual bool TestBit (int n);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TestBit(int32 n) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("testBit", "(I)Z", "GetTestBit_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="n">position where the bit in <c>this</c> has to be inspected.</param>
        <summary>Tests whether the bit at position n in <c>this</c> is set.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Tests whether the bit at position n in <c>this</c> is set. The result is
 equivalent to <c>this &amp; pow(2, n) != 0</c>.

 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Implementation Note:</b>
            </format> Usage of this method is not recommended as
 the current implementation is not efficient.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#testBit(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ArithmeticException">if <c>n </c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToByteArray">
      <MemberSignature Language="C#" Value="public virtual byte[] ToByteArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] ToByteArray() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("toByteArray", "()[B", "GetToByteArrayHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the two's complement representation of this <c>BigInteger</c> in
 a byte array.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the two's complement representation of this <c>BigInteger</c> in
 a byte array.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#toByteArray()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public virtual string ToString (int radix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(int32 radix) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("toString", "(I)Ljava/lang/String;", "GetToString_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="radix" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="radix">base to be used for the string representation.
</param>
        <summary>Returns a string containing a string representation of this <c>BigInteger</c> with base radix.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a string containing a string representation of this <c>BigInteger</c> with base radix. If <c>radix </c> or
 <c>radix &gt; Character.MAX_RADIX</c> then a decimal representation is
 returned. The characters of the string representation are generated with
 method <c>Character.forDigit</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#toString(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ValueOf">
      <MemberSignature Language="C#" Value="public static Java.Math.BigInteger ValueOf (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Math.BigInteger ValueOf(int64 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("valueOf", "(J)Ljava/math/BigInteger;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>Returns a <c>BigInteger</c> whose value is equal to <c>value</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c>BigInteger</c> whose value is equal to <c>value</c>. </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#valueOf(long)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Xor">
      <MemberSignature Language="C#" Value="public virtual Java.Math.BigInteger Xor (Java.Math.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Math.BigInteger Xor(class Java.Math.BigInteger value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("xor", "(Ljava/math/BigInteger;)Ljava/math/BigInteger;", "GetXor_Ljava_math_BigInteger_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val" Type="Java.Math.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value">value to be xor'ed with <c>this</c></param>
        <summary>Returns a <c>BigInteger</c> whose value is <c>this ^ value</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a <c>BigInteger</c> whose value is <c>this ^ value</c>.

 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Implementation Note:</b>
            </format> Usage of this method is not recommended as
 the current implementation is not efficient.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#xor(java.math.BigInteger)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>value == null</c></exception>
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static Java.Math.BigInteger Zero { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Math.BigInteger Zero" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ZERO")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.BigInteger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <c>BigInteger</c> constant 0.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">The <c>BigInteger</c> constant 0. </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/math/BigInteger.html#ZERO" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>