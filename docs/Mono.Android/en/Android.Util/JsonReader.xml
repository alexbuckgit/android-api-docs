<Type Name="JsonReader" FullName="Android.Util.JsonReader">
  <TypeSignature Language="C#" Value="public sealed class JsonReader : Java.Lang.Object, IDisposable, Java.IO.ICloseable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit JsonReader extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.IO.ICloseable, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Java.IO.ICloseable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/util/JsonReader", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="11">
    <summary>Reads a JSON ()
 encoded value as a stream of tokens.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Reads a JSON ()
 encoded value as a stream of tokens. This stream includes both literal
 values (strings, numbers, booleans, and nulls) as well as the begin and
 end delimiters of objects and arrays. The tokens are traversed in
 depth-first order, the same order that they appear in the JSON document.
 Within JSON objects, name/value pairs are represented by a single token.

 <format type="text/html"><h3>Parsing JSON</h3></format>
 To create a recursive descent parser for your own JSON streams, first create
 an entry point method that creates a <c>JsonReader</c>.

 </para>
      <para tool="javadoc-to-mdoc">Next, create handler methods for each structure in your JSON text. You'll
 need a method for each object type and for each array type.
 <list type="bullet"><item><term>Within <i>array handling</i> methods, first call <c><see cref="M:Android.Util.JsonReader.BeginArray" /></c> to consume the array's opening bracket. Then create a
       while loop that accumulates values, terminating when <c><see cref="P:Android.Util.JsonReader.HasNext" /></c>
       is false. Finally, read the array's closing bracket by calling <c><see cref="M:Android.Util.JsonReader.EndArray" /></c>.
   </term></item><item><term>Within <i>object handling</i> methods, first call <c><see cref="M:Android.Util.JsonReader.BeginObject" /></c> to consume the object's opening brace. Then create a
       while loop that assigns values to local variables based on their name.
       This loop should terminate when <c><see cref="P:Android.Util.JsonReader.HasNext" /></c> is false. Finally,
       read the object's closing brace by calling <c><see cref="M:Android.Util.JsonReader.EndObject" /></c>.
 </term></item></list></para>
      <para tool="javadoc-to-mdoc">When a nested object or array is encountered, delegate to the
 corresponding handler method.

 </para>
      <para tool="javadoc-to-mdoc">When an unknown name is encountered, strict parsers should fail with an
 exception. Lenient parsers should call <c><see cref="M:Android.Util.JsonReader.SkipValue" /></c> to recursively
 skip the value's nested tokens, which may otherwise conflict.

 </para>
      <para tool="javadoc-to-mdoc">If a value may be null, you should first check using <c><see cref="M:Android.Util.JsonReader.Peek" /></c>.
 Null literals can be consumed using either <c><see cref="M:Android.Util.JsonReader.NextNull" /></c> or <c><see cref="M:Android.Util.JsonReader.SkipValue" /></c>.

 <format type="text/html"><h3>Example</h3></format>
 Suppose we'd like to parse a stream of messages such as the following: <example><code lang="java">[
   {
     "id": 912345678901,
     "text": "How do I read JSON on Android?",
     "geo": null,
     "user": {
       "name": "android_newb",
       "followers_count": 41
      
   },
   {
     "id": 912345678902,
     "text": "@android_newb just use android.util.JsonReader!",
     "geo": [50.454722, -104.606667],
     "user": {
       "name": "jesse",
       "followers_count": 2
     }
   }
 ]}</code></example>
 This code implements the parser for the above structure: <example><code lang="java">public List readJsonStream(InputStream in) throws IOException {
     JsonReader reader = new JsonReader(new InputStreamReader(in, "UTF-8"));
     try {
       return readMessagesArray(reader);
      finally {
       reader.close();
     }
   }

   public List readMessagesArray(JsonReader reader) throws IOException {
     List messages = new ArrayList();

     reader.beginArray();
     while (reader.hasNext()) {
       messages.add(readMessage(reader));
     }
     reader.endArray();
     return messages;
   }

   public Message readMessage(JsonReader reader) throws IOException {
     long id = -1;
     String text = null;
     User user = null;
     List geo = null;

     reader.beginObject();
     while (reader.hasNext()) {
       String name = reader.nextName();
       if (name.equals("id")) {
         id = reader.nextLong();
       } else if (name.equals("text")) {
         text = reader.nextString();
       } else if (name.equals("geo") &amp;&amp; reader.peek() != JsonToken.NULL) {
         geo = readDoublesArray(reader);
       } else if (name.equals("user")) {
         user = readUser(reader);
       } else {
         reader.skipValue();
       }
     }
     reader.endObject();
     return new Message(id, text, user, geo);
   }

   public List readDoublesArray(JsonReader reader) throws IOException {
     List doubles = new ArrayList();

     reader.beginArray();
     while (reader.hasNext()) {
       doubles.add(reader.nextDouble());
     }
     reader.endArray();
     return doubles;
   }

   public User readUser(JsonReader reader) throws IOException {
     String username = null;
     int followersCount = -1;

     reader.beginObject();
     while (reader.hasNext()) {
       String name = reader.nextName();
       if (name.equals("name")) {
         username = reader.nextString();
       } else if (name.equals("followers_count")) {
         followersCount = reader.nextInt();
       } else {
         reader.skipValue();
       }
     }
     reader.endObject();
     return new User(username, followersCount);
   }}</code></example><format type="text/html"><h3>Number Handling</h3></format>
 This reader permits numeric values to be read as strings and string values to
 be read as numbers. For example, both elements of the JSON array <c>[1, "1"]</c> may be read using either <c><see cref="M:Android.Util.JsonReader.NextInt" /></c> or <c><see cref="M:Android.Util.JsonReader.NextString" /></c>.
 This behavior is intended to prevent lossy numeric conversions: double is
 JavaScript's only numeric type and very large values like <c>9007199254740993</c> cannot be represented exactly on that platform. To minimize
 precision loss, extremely large values should be written and read as strings
 in JSON.

 </para>
      <para tool="javadoc-to-mdoc">Each <c>JsonReader</c> may be used to read a single JSON stream. Instances
 of this class are not thread safe.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/util/JsonReader.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 11" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonReader (Java.IO.Reader in);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.IO.Reader in) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/Reader;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="in" Type="Java.IO.Reader" />
      </Parameters>
      <Docs>
        <param name="in">To be added.</param>
        <summary>Creates a new instance that reads a JSON-encoded stream from <c>in</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new instance that reads a JSON-encoded stream from <c>in</c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/util/JsonReader.html#JsonReader(java.io.Reader)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="BeginArray">
      <MemberSignature Language="C#" Value="public void BeginArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginArray() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("beginArray", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Consumes the next token from the JSON stream and asserts that it is the
 beginning of a new array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Consumes the next token from the JSON stream and asserts that it is the
 beginning of a new array.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/util/JsonReader.html#beginArray()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="BeginArrayAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task BeginArrayAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task BeginArrayAsync() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginObject">
      <MemberSignature Language="C#" Value="public void BeginObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginObject() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("beginObject", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Consumes the next token from the JSON stream and asserts that it is the
 beginning of a new object.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Consumes the next token from the JSON stream and asserts that it is the
 beginning of a new object.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/util/JsonReader.html#beginObject()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="BeginObjectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task BeginObjectAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task BeginObjectAsync() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("close", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes this JSON reader and the underlying <c><see cref="T:Java.IO.Reader" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Closes this JSON reader and the underlying <c><see cref="T:Java.IO.Reader" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/util/JsonReader.html#close()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="EndArray">
      <MemberSignature Language="C#" Value="public void EndArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndArray() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("endArray", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Consumes the next token from the JSON stream and asserts that it is the
 end of the current array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Consumes the next token from the JSON stream and asserts that it is the
 end of the current array.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/util/JsonReader.html#endArray()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="EndArrayAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task EndArrayAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task EndArrayAsync() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndObject">
      <MemberSignature Language="C#" Value="public void EndObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndObject() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("endObject", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Consumes the next token from the JSON stream and asserts that it is the
 end of the current array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Consumes the next token from the JSON stream and asserts that it is the
 end of the current array.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/util/JsonReader.html#endObject()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="EndObjectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task EndObjectAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task EndObjectAsync() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasNext">
      <MemberSignature Language="C#" Value="public bool HasNext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasNext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("hasNext", "()Z", "GetHasNextHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if the current array or object has another element.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns true if the current array or object has another element.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/util/JsonReader.html#hasNext()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Lenient">
      <MemberSignature Language="C#" Value="public bool Lenient { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Lenient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isLenient", "()Z", "GetIsLenientHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setLenient", "(Z)V", "GetSetLenient_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this parser is liberal in what it accepts.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/util/JsonReader.html#isLenient()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns true if this parser is liberal in what it accepts.
</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/util/JsonReader.html#setLenient(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Configure this parser to be  be liberal in what it accepts. By default,
 this parser is strict and only accepts JSON as specified by . Setting the
 parser to lenient causes it to ignore the following syntax errors:

 <list type="bullet"><item><term>End of line comments starting with <c>//</c> or <c>#</c> and
       ending with a newline character.
   </term></item><item><term>C-style comments starting with <c>/*</c> and ending with
       <c>*</c><c>/</c>. Such comments may not be nested.
   </term></item><item><term>Names that are unquoted or <c>'single quoted'</c>.
   </term></item><item><term>Strings that are unquoted or <c>'single quoted'</c>.
   </term></item><item><term>Array elements separated by <c>;</c> instead of <c>,</c>.
   </term></item><item><term>Unnecessary array separators. These are interpreted as if null
       was the omitted value.
   </term></item><item><term>Names and values separated by <c>=</c> or <c>=&gt;</c> instead of
       <c>:</c>.
   </term></item><item><term>Name/value pairs separated by <c>;</c> instead of <c>,</c>.
 </term></item></list></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="NextBoolean">
      <MemberSignature Language="C#" Value="public bool NextBoolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool NextBoolean() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("nextBoolean", "()Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the <c><see cref="P:Android.Util.JsonToken.Boolean" /></c> value of the next token,
 consuming it.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the <c><see cref="P:Android.Util.JsonToken.Boolean" /></c> value of the next token,
 consuming it.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/util/JsonReader.html#nextBoolean()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
        <exception cref="T:Java.Lang.IllegalStateException">if the next token is not a boolean or if
     this reader is closed.
</exception>
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="NextBooleanAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; NextBooleanAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; NextBooleanAsync() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextDouble">
      <MemberSignature Language="C#" Value="public double NextDouble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 NextDouble() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("nextDouble", "()D", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the <c><see cref="P:Android.Util.JsonToken.Number" /></c> value of the next token,
 consuming it.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the <c><see cref="P:Android.Util.JsonToken.Number" /></c> value of the next token,
 consuming it. If the next token is a string, this method will attempt to
 parse it as a double using <c><see cref="M:Java.Lang.Double.ParseDouble(System.String)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/util/JsonReader.html#nextDouble()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
        <exception cref="T:Java.Lang.IllegalStateException">if the next token is not a literal value.
</exception>
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="NextDoubleAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;double&gt; NextDoubleAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;float64&gt; NextDoubleAsync() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextInt">
      <MemberSignature Language="C#" Value="public int NextInt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 NextInt() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("nextInt", "()I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the <c><see cref="P:Android.Util.JsonToken.Number" /></c> value of the next token,
 consuming it.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the <c><see cref="P:Android.Util.JsonToken.Number" /></c> value of the next token,
 consuming it. If the next token is a string, this method will attempt to
 parse it as an int. If the next token's numeric value cannot be exactly
 represented by a Java <c>int</c>, this method throws.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/util/JsonReader.html#nextInt()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
        <exception cref="T:Java.Lang.IllegalStateException">if the next token is not a literal value.</exception>
        <exception cref="T:Java.Lang.NumberFormatException">if the next literal value cannot be parsed
     as a number, or exactly represented as an int.
</exception>
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="NextIntAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; NextIntAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; NextIntAsync() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextLong">
      <MemberSignature Language="C#" Value="public long NextLong ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 NextLong() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("nextLong", "()J", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the <c><see cref="P:Android.Util.JsonToken.Number" /></c> value of the next token,
 consuming it.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the <c><see cref="P:Android.Util.JsonToken.Number" /></c> value of the next token,
 consuming it. If the next token is a string, this method will attempt to
 parse it as a long. If the next token's numeric value cannot be exactly
 represented by a Java <c>long</c>, this method throws.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/util/JsonReader.html#nextLong()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
        <exception cref="T:Java.Lang.IllegalStateException">if the next token is not a literal value.</exception>
        <exception cref="T:Java.Lang.NumberFormatException">if the next literal value cannot be parsed
     as a number, or exactly represented as a long.
</exception>
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="NextLongAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;long&gt; NextLongAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int64&gt; NextLongAsync() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextName">
      <MemberSignature Language="C#" Value="public string NextName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string NextName() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("nextName", "()Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the next token, a <c><see cref="P:Android.Util.JsonToken.Name" /></c>, and
 consumes it.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the next token, a <c><see cref="P:Android.Util.JsonToken.Name" /></c>, and
 consumes it.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/util/JsonReader.html#nextName()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
        <exception cref="T:Java.IO.IOException">if the next token in the stream is not a property
     name.
</exception>
      </Docs>
    </Member>
    <Member MemberName="NextNameAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; NextNameAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; NextNameAsync() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextNull">
      <MemberSignature Language="C#" Value="public void NextNull ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void NextNull() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("nextNull", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Consumes the next token from the JSON stream and asserts that it is a
 literal null.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Consumes the next token from the JSON stream and asserts that it is a
 literal null.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/util/JsonReader.html#nextNull()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
        <exception cref="T:Java.Lang.IllegalStateException">if the next token is not null or if this
     reader is closed.
</exception>
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="NextNullAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task NextNullAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task NextNullAsync() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextString">
      <MemberSignature Language="C#" Value="public string NextString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string NextString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("nextString", "()Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the <c><see cref="P:Android.Util.JsonToken.String" /></c> value of the next token,
 consuming it.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the <c><see cref="P:Android.Util.JsonToken.String" /></c> value of the next token,
 consuming it. If the next token is a number, this method will return its
 string form.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/util/JsonReader.html#nextString()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
        <exception cref="T:Java.Lang.IllegalStateException">if the next token is not a string or if
     this reader is closed.
</exception>
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="NextStringAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; NextStringAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; NextStringAsync() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public Android.Util.JsonToken Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Util.JsonToken Peek() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("peek", "()Landroid/util/JsonToken;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Util.JsonToken</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the type of the next token without consuming it.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the type of the next token without consuming it.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/util/JsonReader.html#peek()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="PeekAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Android.Util.JsonToken&gt; PeekAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Android.Util.JsonToken&gt; PeekAsync() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Android.Util.JsonToken&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipValue">
      <MemberSignature Language="C#" Value="public void SkipValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipValue() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("skipValue", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Skips the next value recursively.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Skips the next value recursively. If it is an object or array, all nested
 elements are skipped. This method is intended for use when the JSON token
 stream contains unrecognized or unhandled values.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/util/JsonReader.html#skipValue()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="SkipValueAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SkipValueAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SkipValueAsync() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>