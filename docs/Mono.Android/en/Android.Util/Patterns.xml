<Type Name="Patterns" FullName="Android.Util.Patterns">
  <TypeSignature Language="C#" Value="public class Patterns : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Patterns extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/util/Patterns", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="8">
    <summary>Commonly used regular expression patterns.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Commonly used regular expression patterns.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/util/Patterns.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Patterns (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConcatGroups">
      <MemberSignature Language="C#" Value="public static string ConcatGroups (Java.Util.Regex.Matcher matcher);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConcatGroups(class Java.Util.Regex.Matcher matcher) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("concatGroups", "(Ljava/util/regex/Matcher;)Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matcher" Type="Java.Util.Regex.Matcher" />
      </Parameters>
      <Docs>
        <param name="matcher">The Matcher object from which grouped text will
                      be extracted</param>
        <summary>Convenience method to take all of the non-null matching groups in a
  regex Matcher and return them as a concatenated string.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Convenience method to take all of the non-null matching groups in a
  regex Matcher and return them as a concatenated string.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/util/Patterns.html#concatGroups(java.util.regex.Matcher)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DigitsAndPlusOnly">
      <MemberSignature Language="C#" Value="public static string DigitsAndPlusOnly (Java.Util.Regex.Matcher matcher);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DigitsAndPlusOnly(class Java.Util.Regex.Matcher matcher) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("digitsAndPlusOnly", "(Ljava/util/regex/Matcher;)Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matcher" Type="Java.Util.Regex.Matcher" />
      </Parameters>
      <Docs>
        <param name="matcher">The Matcher object from which digits and plus will
                     be extracted</param>
        <summary>Convenience method to return only the digits and plus signs
 in the matching string.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Convenience method to return only the digits and plus signs
 in the matching string.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/util/Patterns.html#digitsAndPlusOnly(java.util.regex.Matcher)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DomainName">
      <MemberSignature Language="C#" Value="public static Java.Util.Regex.Pattern DomainName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Util.Regex.Pattern DomainName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DOMAIN_NAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Regex.Pattern</ReturnType>
      </ReturnValue>
      <Docs>
        <summary></summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/util/Patterns.html#DOMAIN_NAME" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="EmailAddress">
      <MemberSignature Language="C#" Value="public static Java.Util.Regex.Pattern EmailAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Util.Regex.Pattern EmailAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EMAIL_ADDRESS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Regex.Pattern</ReturnType>
      </ReturnValue>
      <Docs>
        <summary></summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/util/Patterns.html#EMAIL_ADDRESS" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GoodIriChar">
      <MemberSignature Language="C#" Value="public const string GoodIriChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string GoodIriChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("GOOD_IRI_CHAR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Good characters for Internationalized Resource Identifiers (IRI).</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Good characters for Internationalized Resource Identifiers (IRI).
 This comprises most common used Unicode characters allowed in IRI
 as detailed in RFC 3987.
 Specifically, those two byte Unicode characters are not included.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/util/Patterns.html#GOOD_IRI_CHAR" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="IpAddress">
      <MemberSignature Language="C#" Value="public static Java.Util.Regex.Pattern IpAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Util.Regex.Pattern IpAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("IP_ADDRESS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Regex.Pattern</ReturnType>
      </ReturnValue>
      <Docs>
        <summary></summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/util/Patterns.html#IP_ADDRESS" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="Phone">
      <MemberSignature Language="C#" Value="public static Java.Util.Regex.Pattern Phone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Util.Regex.Pattern Phone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PHONE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Regex.Pattern</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This pattern is intended for searching for things that look like they
 might be phone numbers in arbitrary text, not for validating whether
 something is in fact a phone number.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This pattern is intended for searching for things that look like they
 might be phone numbers in arbitrary text, not for validating whether
 something is in fact a phone number.  It will miss many things that
 are legitimate phone numbers.

 </para>
          <para tool="javadoc-to-mdoc"> The pattern matches the following:
 <list type="bullet"><item><term>Optionally, a + sign followed immediately by one or more digits. Spaces, dots, or dashes
 may follow.
 </term></item><item><term>Optionally, sets of digits in parentheses, separated by spaces, dots, or dashes.
 </term></item><item><term>A string starting and ending with a digit, containing digits, spaces, dots, and/or dashes.
 </term></item></list></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/util/Patterns.html#PHONE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TopLevelDomain">
      <MemberSignature Language="C#" Value="public static Java.Util.Regex.Pattern TopLevelDomain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Util.Regex.Pattern TopLevelDomain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TOP_LEVEL_DOMAIN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Regex.Pattern</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Regular expression pattern to match all IANA top-level domains.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Regular expression pattern to match all IANA top-level domains.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/util/Patterns.html#TOP_LEVEL_DOMAIN" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="TopLevelDomainStr">
      <MemberSignature Language="C#" Value="public const string TopLevelDomainStr;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string TopLevelDomainStr" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TOP_LEVEL_DOMAIN_STR")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Regular expression to match all IANA top-level domains.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Regular expression to match all IANA top-level domains.
  List accurate as of 2011/07/18.  List taken from:
  http://data.iana.org/TLD/tlds-alpha-by-domain.txt
  This pattern is auto-generated by frameworks/ex/common/tools/make-iana-tld-pattern.py</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/util/Patterns.html#TOP_LEVEL_DOMAIN_STR" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="TopLevelDomainStrForWebUrl">
      <MemberSignature Language="C#" Value="public const string TopLevelDomainStrForWebUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string TopLevelDomainStrForWebUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TOP_LEVEL_DOMAIN_STR_FOR_WEB_URL")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Regular expression to match all IANA top-level domains for WEB_URL.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Regular expression to match all IANA top-level domains for WEB_URL.
  List accurate as of 2011/07/18.  List taken from:
  http://data.iana.org/TLD/tlds-alpha-by-domain.txt
  This pattern is auto-generated by frameworks/ex/common/tools/make-iana-tld-pattern.py</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/util/Patterns.html#TOP_LEVEL_DOMAIN_STR_FOR_WEB_URL" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="WebUrl">
      <MemberSignature Language="C#" Value="public static Java.Util.Regex.Pattern WebUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Util.Regex.Pattern WebUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("WEB_URL")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Regex.Pattern</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Regular expression pattern to match most part of RFC 3987
  Internationalized URLs, aka IRIs.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Regular expression pattern to match most part of RFC 3987
  Internationalized URLs, aka IRIs.  Commonly used Unicode characters are
  added.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/util/Patterns.html#WEB_URL" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
  </Members>
</Type>
