<Type Name="Transition" FullName="Android.Transitions.Transition">
  <TypeSignature Language="C#" Value="public abstract class Transition : Java.Lang.Object, IDisposable, Java.Lang.ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Transition extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Lang.ICloneable, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Java.Lang.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/transition/Transition", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="19">
    <summary>A Transition holds information about animations that will be run on its
 targets during a scene change.</summary>
    <remarks />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Transition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Constructs a Transition object with no target objects.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Transition (Android.Content.Context context, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>Perform inflation from XML and apply a class-specific base style from a
 theme attribute or style resource.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Transition (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AddListener">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition AddListener (Android.Transitions.Transition.ITransitionListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Transitions.Transition AddListener(class Android.Transitions.Transition/ITransitionListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addListener", "(Landroid/transition/Transition$TransitionListener;)Landroid/transition/Transition;", "GetAddListener_Landroid_transition_Transition_TransitionListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Transitions.Transition+ITransitionListener" />
      </Parameters>
      <Docs>
        <param name="listener">the listener to be added to the current set of listeners
 for this animation.</param>
        <summary>Adds a listener to the set of listeners that are sent events through the
 life of an animation, such as start, repeat, and end.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AddTarget">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition AddTarget (Android.Views.View target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Transitions.Transition AddTarget(class Android.Views.View target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addTarget", "(Landroid/view/View;)Landroid/transition/Transition;", "GetAddTarget_Landroid_view_View_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="target">A View on which the Transition will act, must be non-null.</param>
        <summary tool="true">Sets the target view instances that this Transition is interested in
 animating.</summary>
        <returns>To be added.</returns>
        <remarks />
        <altmember cref="M:Android.Transitions.Transition.AddTarget(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AddTarget">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition AddTarget (Java.Lang.Class targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Transitions.Transition AddTarget(class Java.Lang.Class targetType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addTarget", "(Ljava/lang/Class;)Landroid/transition/Transition;", "GetAddTarget_Ljava_lang_Class_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetType" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="targetType">The type to include when running this transition.</param>
        <summary>Adds the Class of a target view that this Transition is interested in
 animating.</summary>
        <returns>To be added.</returns>
        <remarks />
        <altmember cref="M:Android.Transitions.Transition.AddTarget(System.Int32)" />
        <altmember cref="M:Android.Transitions.Transition.AddTarget(Android.Views.View)" />
        <altmember cref="M:Android.Transitions.Transition.ExcludeTarget(Java.Lang.Class, System.Boolean)" />
        <altmember cref="M:Android.Transitions.Transition.ExcludeChildren(Java.Lang.Class, System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="AddTarget">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition AddTarget (int targetId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Transitions.Transition AddTarget(int32 targetId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addTarget", "(I)Landroid/transition/Transition;", "GetAddTarget_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="targetId">The id of a target view, must be a positive number.</param>
        <summary>Adds the id of a target view that this Transition is interested in
 animating.</summary>
        <returns>To be added.</returns>
        <remarks />
        <altmember cref="P:Android.Views.View.Id" />
      </Docs>
    </Member>
    <Member MemberName="AddTarget">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition AddTarget (string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Transitions.Transition AddTarget(string targetName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addTarget", "(Ljava/lang/String;)Landroid/transition/Transition;", "GetAddTarget_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetName">The transitionName of a target view, must be non-null.</param>
        <summary>Adds the transitionName of a target view that this Transition is interested in
 animating.</summary>
        <returns>To be added.</returns>
        <remarks />
        <altmember cref="P:Android.Views.View.TransitionName" />
      </Docs>
    </Member>
    <Member MemberName="CanRemoveViews">
      <MemberSignature Language="C#" Value="public virtual bool CanRemoveViews ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRemoveViews() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("canRemoveViews", "()Z", "GetCanRemoveViewsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CaptureEndValues">
      <MemberSignature Language="C#" Value="public abstract void CaptureEndValues (Android.Transitions.TransitionValues transitionValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CaptureEndValues(class Android.Transitions.TransitionValues transitionValues) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("captureEndValues", "(Landroid/transition/TransitionValues;)V", "GetCaptureEndValues_Landroid_transition_TransitionValues_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transitionValues" Type="Android.Transitions.TransitionValues" />
      </Parameters>
      <Docs>
        <param name="transitionValues">The holder for any values that the Transition
 wishes to store. Values are stored in the <c>values</c> field
 of this TransitionValues object and are keyed from
 a String value. For example, to store a view's rotation value,
 a transition might call
 <c>transitionValues.values.put("appname:transitionname:rotation",
 view.getRotation())</c>. The target view will already be stored in
 the transitionValues structure when this method is called.</param>
        <summary>Captures the values in the end scene for the properties that this
 transition monitors.</summary>
        <remarks />
        <altmember cref="M:Android.Transitions.Transition.CaptureStartValues(Android.Transitions.TransitionValues)" />
        <altmember cref="M:Android.Transitions.Transition.CreateAnimator(Android.Views.ViewGroup, Android.Transitions.TransitionValues, Android.Transitions.TransitionValues)" />
      </Docs>
    </Member>
    <Member MemberName="CaptureStartValues">
      <MemberSignature Language="C#" Value="public abstract void CaptureStartValues (Android.Transitions.TransitionValues transitionValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CaptureStartValues(class Android.Transitions.TransitionValues transitionValues) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("captureStartValues", "(Landroid/transition/TransitionValues;)V", "GetCaptureStartValues_Landroid_transition_TransitionValues_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transitionValues" Type="Android.Transitions.TransitionValues" />
      </Parameters>
      <Docs>
        <param name="transitionValues">The holder for any values that the Transition
 wishes to store. Values are stored in the <c>values</c> field
 of this TransitionValues object and are keyed from
 a String value. For example, to store a view's rotation value,
 a transition might call
 <c>transitionValues.values.put("appname:transitionname:rotation",
 view.getRotation())</c>. The target view will already be stored in
 the transitionValues structure when this method is called.</param>
        <summary>Captures the values in the start scene for the properties that this
 transition monitors.</summary>
        <remarks />
        <altmember cref="M:Android.Transitions.Transition.CaptureEndValues(Android.Transitions.TransitionValues)" />
        <altmember cref="M:Android.Transitions.Transition.CreateAnimator(Android.Views.ViewGroup, Android.Transitions.TransitionValues, Android.Transitions.TransitionValues)" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Transitions.Transition Clone() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clone", "()Landroid/transition/Transition;", "GetCloneHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates and returns a copy of this <c>Object</c>.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CreateAnimator">
      <MemberSignature Language="C#" Value="public virtual Android.Animation.Animator CreateAnimator (Android.Views.ViewGroup sceneRoot, Android.Transitions.TransitionValues startValues, Android.Transitions.TransitionValues endValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Animation.Animator CreateAnimator(class Android.Views.ViewGroup sceneRoot, class Android.Transitions.TransitionValues startValues, class Android.Transitions.TransitionValues endValues) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createAnimator", "(Landroid/view/ViewGroup;Landroid/transition/TransitionValues;Landroid/transition/TransitionValues;)Landroid/animation/Animator;", "GetCreateAnimator_Landroid_view_ViewGroup_Landroid_transition_TransitionValues_Landroid_transition_TransitionValues_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.Animator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sceneRoot" Type="Android.Views.ViewGroup" />
        <Parameter Name="startValues" Type="Android.Transitions.TransitionValues" />
        <Parameter Name="endValues" Type="Android.Transitions.TransitionValues" />
      </Parameters>
      <Docs>
        <param name="sceneRoot">The root of the transition hierarchy.</param>
        <param name="startValues">The values for a specific target in the start scene.</param>
        <param name="endValues">The values for the target in the end scene.</param>
        <summary>This method creates an animation that will be run for this transition
 given the information in the startValues and endValues structures captured
 earlier for the start and end scenes.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public virtual long Duration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDuration", "()J", "GetGetDurationHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the duration set on this transition.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Epicenter">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Rect Epicenter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Rect Epicenter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getEpicenter", "()Landroid/graphics/Rect;", "GetGetEpicenterHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the epicenter as specified by the
 <c><see cref="!:NoType:android/transition/Transition$EpicenterCallback;Href=../../../reference/android/transition/Transition.EpicenterCallback.html" /></c> or null if no callback exists.</summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="M:Android.Transitions.Transition.SetEpicenterCallback(.EpicenterCallback)" />
      </Docs>
    </Member>
    <Member MemberName="ExcludeChildren">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition ExcludeChildren (Android.Views.View target, bool exclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Transitions.Transition ExcludeChildren(class Android.Views.View target, bool exclude) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("excludeChildren", "(Landroid/view/View;Z)Landroid/transition/Transition;", "GetExcludeChildren_Landroid_view_View_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Android.Views.View" />
        <Parameter Name="exclude" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="target">The target to ignore when running this transition.</param>
        <param name="exclude">Whether to add the target to or remove the target from the
 current list of excluded targets.</param>
        <summary tool="true">Whether to add the children of given target to the list of target children
 to exclude from this transition.</summary>
        <returns>To be added.</returns>
        <remarks />
        <altmember cref="M:Android.Transitions.Transition.ExcludeTarget(Android.Views.View, System.Boolean)" />
        <altmember cref="M:Android.Transitions.Transition.ExcludeChildren(System.Int32, System.Boolean)" />
        <altmember cref="M:Android.Transitions.Transition.ExcludeChildren(Java.Lang.Class, System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="ExcludeChildren">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition ExcludeChildren (Java.Lang.Class type, bool exclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Transitions.Transition ExcludeChildren(class Java.Lang.Class type, bool exclude) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("excludeChildren", "(Ljava/lang/Class;Z)Landroid/transition/Transition;", "GetExcludeChildren_Ljava_lang_Class_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Java.Lang.Class" />
        <Parameter Name="exclude" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">The type to ignore when running this transition.</param>
        <param name="exclude">Whether to add the target type to or remove it from the
 current list of excluded target types.</param>
        <summary>Whether to add the given type to the list of types whose children should
 be excluded from this transition.</summary>
        <returns>To be added.</returns>
        <remarks />
        <altmember cref="M:Android.Transitions.Transition.ExcludeTarget(Java.Lang.Class, System.Boolean)" />
        <altmember cref="M:Android.Transitions.Transition.ExcludeChildren(System.Int32, System.Boolean)" />
        <altmember cref="M:Android.Transitions.Transition.ExcludeChildren(Android.Views.View, System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="ExcludeChildren">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition ExcludeChildren (int targetId, bool exclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Transitions.Transition ExcludeChildren(int32 targetId, bool exclude) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("excludeChildren", "(IZ)Landroid/transition/Transition;", "GetExcludeChildren_IZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetId" Type="System.Int32" />
        <Parameter Name="exclude" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetId">The id of a target whose children should be ignored when running
 this transition.</param>
        <param name="exclude">Whether to add the target to or remove the target from the
 current list of excluded-child targets.</param>
        <summary>Whether to add the children of the given id to the list of targets to exclude
 from this transition.</summary>
        <returns>To be added.</returns>
        <remarks />
        <altmember cref="M:Android.Transitions.Transition.ExcludeTarget(System.Int32, System.Boolean)" />
        <altmember cref="M:Android.Transitions.Transition.ExcludeChildren(Android.Views.View, System.Boolean)" />
        <altmember cref="M:Android.Transitions.Transition.ExcludeChildren(Java.Lang.Class, System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="ExcludeTarget">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition ExcludeTarget (Android.Views.View target, bool exclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Transitions.Transition ExcludeTarget(class Android.Views.View target, bool exclude) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("excludeTarget", "(Landroid/view/View;Z)Landroid/transition/Transition;", "GetExcludeTarget_Landroid_view_View_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Android.Views.View" />
        <Parameter Name="exclude" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="target">The target to ignore when running this transition.</param>
        <param name="exclude">Whether to add the target to or remove the target from the
 current list of excluded targets.</param>
        <summary tool="true">Whether to add the given target to the list of targets to exclude from this
 transition.</summary>
        <returns>To be added.</returns>
        <remarks />
        <altmember cref="M:Android.Transitions.Transition.ExcludeChildren(Android.Views.View, System.Boolean)" />
        <altmember cref="M:Android.Transitions.Transition.ExcludeTarget(System.Int32, System.Boolean)" />
        <altmember cref="M:Android.Transitions.Transition.ExcludeTarget(Java.Lang.Class, System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="ExcludeTarget">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition ExcludeTarget (Java.Lang.Class type, bool exclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Transitions.Transition ExcludeTarget(class Java.Lang.Class type, bool exclude) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("excludeTarget", "(Ljava/lang/Class;Z)Landroid/transition/Transition;", "GetExcludeTarget_Ljava_lang_Class_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Java.Lang.Class" />
        <Parameter Name="exclude" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">The type to ignore when running this transition.</param>
        <param name="exclude">Whether to add the target type to or remove it from the
 current list of excluded target types.</param>
        <summary>Whether to add the given type to the list of types to exclude from this
 transition.</summary>
        <returns>To be added.</returns>
        <remarks />
        <altmember cref="M:Android.Transitions.Transition.ExcludeChildren(Java.Lang.Class, System.Boolean)" />
        <altmember cref="M:Android.Transitions.Transition.ExcludeTarget(System.Int32, System.Boolean)" />
        <altmember cref="M:Android.Transitions.Transition.ExcludeTarget(Android.Views.View, System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="ExcludeTarget">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition ExcludeTarget (int targetId, bool exclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Transitions.Transition ExcludeTarget(int32 targetId, bool exclude) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("excludeTarget", "(IZ)Landroid/transition/Transition;", "GetExcludeTarget_IZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetId" Type="System.Int32" />
        <Parameter Name="exclude" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetId">The id of a target to ignore when running this transition.</param>
        <param name="exclude">Whether to add the target to or remove the target from the
 current list of excluded targets.</param>
        <summary>Whether to add the given id to the list of target ids to exclude from this
 transition.</summary>
        <returns>To be added.</returns>
        <remarks />
        <altmember cref="M:Android.Transitions.Transition.ExcludeChildren(System.Int32, System.Boolean)" />
        <altmember cref="M:Android.Transitions.Transition.ExcludeTarget(Android.Views.View, System.Boolean)" />
        <altmember cref="M:Android.Transitions.Transition.ExcludeTarget(Java.Lang.Class, System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="ExcludeTarget">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition ExcludeTarget (string targetName, bool exclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Transitions.Transition ExcludeTarget(string targetName, bool exclude) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("excludeTarget", "(Ljava/lang/String;Z)Landroid/transition/Transition;", "GetExcludeTarget_Ljava_lang_String_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetName" Type="System.String" />
        <Parameter Name="exclude" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetName">The name of a target to ignore when running this transition.</param>
        <param name="exclude">Whether to add the target to or remove the target from the
 current list of excluded targets.</param>
        <summary>Whether to add the given transitionName to the list of target transitionNames to exclude
 from this transition.</summary>
        <returns>To be added.</returns>
        <remarks />
        <altmember cref="M:Android.Transitions.Transition.ExcludeTarget(Android.Views.View, System.Boolean)" />
        <altmember cref="M:Android.Transitions.Transition.ExcludeTarget(System.Int32, System.Boolean)" />
        <altmember cref="M:Android.Transitions.Transition.ExcludeTarget(Java.Lang.Class, System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetEpicenterCallback">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition.EpicenterCallback GetEpicenterCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Transitions.Transition/EpicenterCallback GetEpicenterCallback() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getEpicenterCallback", "()Landroid/transition/Transition$EpicenterCallback;", "GetGetEpicenterCallbackHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition+EpicenterCallback</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the callback used to find the epicenter of the Transition.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetTransitionProperties">
      <MemberSignature Language="C#" Value="public virtual string[] GetTransitionProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetTransitionProperties() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getTransitionProperties", "()[Ljava/lang/String;", "GetGetTransitionPropertiesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the set of property names used stored in the <c><see cref="T:Android.Transitions.TransitionValues" /></c>
 object passed into <c><see cref="M:Android.Transitions.Transition.CaptureStartValues(Android.Transitions.TransitionValues)" /></c> that
 this transition cares about for the purposes of canceling overlapping animations.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetTransitionValues">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.TransitionValues GetTransitionValues (Android.Views.View view, bool start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Transitions.TransitionValues GetTransitionValues(class Android.Views.View view, bool start) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getTransitionValues", "(Landroid/view/View;Z)Landroid/transition/TransitionValues;", "GetGetTransitionValues_Landroid_view_View_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.TransitionValues</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="start" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <param name="start">To be added.</param>
        <summary>This method can be called by transitions to get the TransitionValues for
 any particular view during the transition-playing process.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Interpolator">
      <MemberSignature Language="C#" Value="public virtual Android.Animation.ITimeInterpolator Interpolator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Animation.ITimeInterpolator Interpolator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getInterpolator", "()Landroid/animation/TimeInterpolator;", "GetGetInterpolatorHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.ITimeInterpolator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the interpolator set on this transition.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="MatchId">
      <MemberSignature Language="C#" Value="public const Android.Transitions.MatchTarget MatchId = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Transitions.MatchTarget MatchId = (3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MATCH_ID")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Transitions.MatchTarget enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.MatchTarget</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>With <c><see cref="!:Android.Transitions.Transition.setMatchOrder(int...)" /></c>, chooses to match by
 <c><see cref="P:Android.Views.View.Id" /></c>.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="MatchInstance">
      <MemberSignature Language="C#" Value="public const Android.Transitions.MatchTarget MatchInstance = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Transitions.MatchTarget MatchInstance = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MATCH_INSTANCE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Transitions.MatchTarget enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.MatchTarget</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>With <c><see cref="!:Android.Transitions.Transition.setMatchOrder(int...)" /></c>, chooses to match by View instance.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="MatchItemId">
      <MemberSignature Language="C#" Value="public const Android.Transitions.MatchTarget MatchItemId = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Transitions.MatchTarget MatchItemId = (4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MATCH_ITEM_ID")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Transitions.MatchTarget enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.MatchTarget</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>With <c><see cref="!:Android.Transitions.Transition.setMatchOrder(int...)" /></c>, chooses to match by the <c><see cref="T:Android.Widget.Adapter" /></c>
 item id.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="MatchName">
      <MemberSignature Language="C#" Value="public const Android.Transitions.MatchTarget MatchName = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Transitions.MatchTarget MatchName = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MATCH_NAME")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Transitions.MatchTarget enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.MatchTarget</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>With <c><see cref="!:Android.Transitions.Transition.setMatchOrder(int...)" /></c>, chooses to match by
 <c><see cref="P:Android.Views.View.TransitionName" /></c>.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getName", "()Ljava/lang/String;", "GetGetNameHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the name of this Transition.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="PathMotion">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.PathMotion PathMotion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Transitions.PathMotion PathMotion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPathMotion", "()Landroid/transition/PathMotion;", "GetGetPathMotionHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setPathMotion", "(Landroid/transition/PathMotion;)V", "GetSetPathMotion_Landroid_transition_PathMotion_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.PathMotion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the algorithm object used to interpolate along two dimensions.</summary>
        <value>To be added.</value>
        <remarks />
        <altmember cref="T:Android.Transitions.ArcMotion" />
        <altmember cref="T:Android.Transitions.PatternPathMotion" />
        <altmember cref="T:Android.Transitions.PathMotion" />
        <altmember cref="T:Android.Transitions.ArcMotion" />
        <altmember cref="T:Android.Transitions.PatternPathMotion" />
        <altmember cref="T:Android.Transitions.PathMotion" />
      </Docs>
    </Member>
    <Member MemberName="Propagation">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.TransitionPropagation Propagation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Transitions.TransitionPropagation Propagation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPropagation", "()Landroid/transition/TransitionPropagation;", "GetGetPropagationHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setPropagation", "(Landroid/transition/TransitionPropagation;)V", "GetSetPropagation_Landroid_transition_TransitionPropagation_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.TransitionPropagation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the <c><see cref="T:Android.Transitions.TransitionPropagation" /></c> used to calculate Animator start
 delays.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="RemoveListener">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition RemoveListener (Android.Transitions.Transition.ITransitionListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Transitions.Transition RemoveListener(class Android.Transitions.Transition/ITransitionListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeListener", "(Landroid/transition/Transition$TransitionListener;)Landroid/transition/Transition;", "GetRemoveListener_Landroid_transition_Transition_TransitionListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Transitions.Transition+ITransitionListener" />
      </Parameters>
      <Docs>
        <param name="listener">the listener to be removed from the current set of
 listeners for this transition.</param>
        <summary>Removes a listener from the set listening to this animation.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="RemoveTarget">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition RemoveTarget (Android.Views.View target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Transitions.Transition RemoveTarget(class Android.Views.View target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeTarget", "(Landroid/view/View;)Landroid/transition/Transition;", "GetRemoveTarget_Landroid_view_View_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="target">The target view, must be non-null.</param>
        <summary tool="true">Removes the given target from the list of targets that this Transition
 is interested in animating.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="RemoveTarget">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition RemoveTarget (Java.Lang.Class target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Transitions.Transition RemoveTarget(class Java.Lang.Class target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeTarget", "(Ljava/lang/Class;)Landroid/transition/Transition;", "GetRemoveTarget_Ljava_lang_Class_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="target">The type of the target view, must be non-null.</param>
        <summary>Removes the given target from the list of targets that this Transition
 is interested in animating.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="RemoveTarget">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition RemoveTarget (int targetId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Transitions.Transition RemoveTarget(int32 targetId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeTarget", "(I)Landroid/transition/Transition;", "GetRemoveTarget_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="targetId">The id of a target view, must be a positive number.</param>
        <summary>Removes the given targetId from the list of ids that this Transition
 is interested in animating.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="RemoveTarget">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition RemoveTarget (string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Transitions.Transition RemoveTarget(string targetName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeTarget", "(Ljava/lang/String;)Landroid/transition/Transition;", "GetRemoveTarget_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetName">The transitionName of a target view, must not be null.</param>
        <summary>Removes the given targetName from the list of transitionNames that this Transition
 is interested in animating.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetDuration">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition SetDuration (long duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Transitions.Transition SetDuration(int64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDuration", "(J)Landroid/transition/Transition;", "GetSetDuration_JHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="duration" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="duration">The length of the animation, in milliseconds.</param>
        <summary>Sets the duration of this transition.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetEpicenterCallback">
      <MemberSignature Language="C#" Value="public virtual void SetEpicenterCallback (Android.Transitions.Transition.EpicenterCallback epicenterCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEpicenterCallback(class Android.Transitions.Transition/EpicenterCallback epicenterCallback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setEpicenterCallback", "(Landroid/transition/Transition$EpicenterCallback;)V", "GetSetEpicenterCallback_Landroid_transition_Transition_EpicenterCallback_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="epicenterCallback" Type="Android.Transitions.Transition+EpicenterCallback" />
      </Parameters>
      <Docs>
        <param name="epicenterCallback">The callback to use to find the epicenter of the Transition.
</param>
        <summary>Sets the callback to use to find the epicenter of a Transition.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetInterpolator">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition SetInterpolator (Android.Animation.ITimeInterpolator interpolator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Transitions.Transition SetInterpolator(class Android.Animation.ITimeInterpolator interpolator) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setInterpolator", "(Landroid/animation/TimeInterpolator;)Landroid/transition/Transition;", "GetSetInterpolator_Landroid_animation_TimeInterpolator_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interpolator" Type="Android.Animation.ITimeInterpolator" />
      </Parameters>
      <Docs>
        <param name="interpolator">The time interpolator used by the transition</param>
        <summary>Sets the interpolator of this transition.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetMatchOrder">
      <MemberSignature Language="C#" Value="public virtual void SetMatchOrder (int[] matches);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMatchOrder(int32[] matches) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setMatchOrder", "([I)V", "GetSetMatchOrder_arrayIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matches" Type="System.Int32[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="matches">To be added.</param>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetStartDelay">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition SetStartDelay (long startDelay);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Transitions.Transition SetStartDelay(int64 startDelay) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setStartDelay", "(J)Landroid/transition/Transition;", "GetSetStartDelay_JHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDelay" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="startDelay">The length of the delay, in milliseconds.</param>
        <summary>Sets the startDelay of this transition.</summary>
        <returns>To be added.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="StartDelay">
      <MemberSignature Language="C#" Value="public virtual long StartDelay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 StartDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getStartDelay", "()J", "GetGetStartDelayHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the startDelay set on this transition.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="TargetIds">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Java.Lang.Integer&gt; TargetIds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Java.Lang.Integer&gt; TargetIds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTargetIds", "()Ljava/util/List;", "GetGetTargetIdsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Java.Lang.Integer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the list of target IDs that this transition limits itself to
 tracking and animating.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="TargetNames">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; TargetNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; TargetNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTargetNames", "()Ljava/util/List;", "GetGetTargetNamesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the list of target transitionNames that this transition limits itself to
 tracking and animating.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Targets">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Views.View&gt; Targets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Views.View&gt; Targets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTargets", "()Ljava/util/List;", "GetGetTargetsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Views.View&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the list of target views that this transition limits itself to
 tracking and animating.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="TargetTypes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Java.Lang.Class&gt; TargetTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Java.Lang.Class&gt; TargetTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTargetTypes", "()Ljava/util/List;", "GetGetTargetTypesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Java.Lang.Class&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the list of target transitionNames that this transition limits itself to
 tracking and animating.</summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
