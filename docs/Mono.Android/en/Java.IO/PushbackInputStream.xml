<Type Name="PushbackInputStream" FullName="Java.IO.PushbackInputStream">
  <TypeSignature Language="C#" Value="public class PushbackInputStream : Java.IO.FilterInputStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PushbackInputStream extends Java.IO.FilterInputStream" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.IO.FilterInputStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/io/PushbackInputStream", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Wraps an existing <c><see cref="T:Java.IO.InputStream" /></c> and adds functionality to "push back"
 bytes that have been read, so that they can be read again.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Wraps an existing <c><see cref="T:Java.IO.InputStream" /></c> and adds functionality to "push back"
 bytes that have been read, so that they can be read again. Parsers may find
 this useful. The number of bytes which may be pushed back can be specified
 during construction. If the buffer of pushed back bytes is empty, bytes are
 read from the underlying input stream.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/java/io/PushbackInputStream.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PushbackInputStream (System.IO.Stream in);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream in) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/InputStream;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="in" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="in">To be added.</param>
        <summary>Constructs a new <c>PushbackInputStream</c> with the specified input
 stream as source.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>PushbackInputStream</c> with the specified input
 stream as source. The size of the pushback buffer is set to the default
 value of 1 byte.

 </para>
          <para tool="javadoc-to-mdoc">
            <i>Warning:</i> passing a null source creates an invalid
 <c>PushbackInputStream</c>. All read operations on such a stream will
 fail.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/PushbackInputStream.html#PushbackInputStream(java.io.InputStream)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PushbackInputStream (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T}(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PushbackInputStream (System.IO.Stream in, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream in, int32 size) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/InputStream;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="in" Type="System.IO.Stream" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="in">To be added.</param>
        <param name="size">To be added.</param>
        <summary>Constructs a new <c>PushbackInputStream</c> with <c>in</c> as source
 input stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>PushbackInputStream</c> with <c>in</c> as source
 input stream. The size of the pushback buffer is set to <c>size</c>.

 </para>
          <para tool="javadoc-to-mdoc">
            <i>Warning:</i> passing a null source creates an invalid
 <c>PushbackInputStream</c>. All read operations on such a stream will
 fail.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/PushbackInputStream.html#PushbackInputStream(java.io.InputStream, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>size</c> is negative.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Buf">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IList&lt;byte&gt; Buf { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;unsigned int8&gt; Buf" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("buf")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The buffer that contains pushed-back bytes.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">The buffer that contains pushed-back bytes.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/PushbackInputStream.html#buf" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Pos">
      <MemberSignature Language="C#" Value="protected int Pos { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Pos" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("pos")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The current position within <c>buf</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">The current position within <c>buf</c>. A value equal to
 <c>buf.length</c> indicates that no bytes are available. A value of 0
 indicates that the buffer is full.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/PushbackInputStream.html#pos" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unread">
      <MemberSignature Language="C#" Value="public virtual void Unread (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unread(unsigned int8[] buffer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unread", "([B)V", "GetUnread_arrayBHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer">the buffer containing the bytes to push back to this stream.</param>
        <summary>Pushes all the bytes in <c>buffer</c> back to this stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Pushes all the bytes in <c>buffer</c> back to this stream. The bytes are
 pushed back in such a way that the next byte read from this stream is
 buffer[0], then buffer[1] and so on.
 </para>
          <para tool="javadoc-to-mdoc">
 If this stream's internal pushback buffer cannot store the entire
 contents of <c>buffer</c>, an <c>IOException</c> is thrown. Parts of
 <c>buffer</c> may have already been copied to the pushback buffer when
 the exception is thrown.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/PushbackInputStream.html#unread(byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if the free space in the internal pushback buffer is not
             sufficient to store the contents of <c>buffer</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Unread">
      <MemberSignature Language="C#" Value="public virtual void Unread (int oneByte);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unread(int32 oneByte) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unread", "(I)V", "GetUnread_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oneByte" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="oneByte">the byte to push back to this stream.</param>
        <summary>Pushes the specified byte <c>oneByte</c> back to this stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Pushes the specified byte <c>oneByte</c> back to this stream. Only the
 least significant byte of the integer <c>oneByte</c> is pushed back.
 This is done in such a way that the next byte read from this stream is
 <c>(byte) oneByte</c>.
 </para>
          <para tool="javadoc-to-mdoc">
 If this stream's internal pushback buffer cannot store the byte, an
 <c>IOException</c> is thrown.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/PushbackInputStream.html#unread(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if this stream is closed or the internal pushback buffer is
             full.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Unread">
      <MemberSignature Language="C#" Value="public virtual void Unread (byte[] buffer, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unread(unsigned int8[] buffer, int32 offset, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unread", "([BII)V", "GetUnread_arrayBIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">the buffer containing the bytes to push back to this stream.</param>
        <param name="offset">the index of the first byte in <c>buffer</c> to push back.</param>
        <param name="length">the number of bytes to push back.</param>
        <summary>Pushes a subset of the bytes in <c>buffer</c> back to this stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Pushes a subset of the bytes in <c>buffer</c> back to this stream. The
 subset is defined by the start position <c>offset</c> within
 <c>buffer</c> and the number of bytes specified by <c>length</c>. The
 bytes are pushed back in such a way that the next byte read from this
 stream is <c>buffer[offset]</c>, then <c>buffer[1]</c> and so on.
 </para>
          <para tool="javadoc-to-mdoc">
 If this stream's internal pushback buffer cannot store the selected
 subset of <c>buffer</c>, an <c>IOException</c> is thrown. Parts of
 <c>buffer</c> may have already been copied to the pushback buffer when
 the exception is thrown.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/PushbackInputStream.html#unread(byte[], int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>offset </c> or <c>length </c>, or if
             <c>offset + length</c> is greater than the length of
             <c>buffer</c>.</exception>
        <exception cref="T:Java.IO.IOException">if the free space in the internal pushback buffer is not
             sufficient to store the selected contents of <c>buffer</c>.
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
