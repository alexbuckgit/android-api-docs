<Type Name="ObjectOutputStream" FullName="Java.IO.ObjectOutputStream">
  <TypeSignature Language="C#" Value="public class ObjectOutputStream : Java.IO.OutputStream, IDisposable, Java.IO.IObjectOutput" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectOutputStream extends Java.IO.OutputStream implements class Android.Runtime.IJavaObject, class Java.IO.IDataOutput, class Java.IO.IObjectOutput, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.IO.OutputStream</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Java.IO.IObjectOutput</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/io/ObjectOutputStream", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary tool="true">A specialized <c><see cref="T:Java.IO.OutputStream" /></c> that is able to write (serialize) Java
 objects as well as primitive data types (int, byte, char etc.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">A specialized <c><see cref="T:Java.IO.OutputStream" /></c> that is able to write (serialize) Java
 objects as well as primitive data types (int, byte, char etc.). The data can
 later be loaded using an ObjectInputStream.</para>
      <format type="text/html">
        <h5 class="jd-tagtitle">See Also</h5>
      </format>
      <list type="bullet">
        <item>
          <term>
            <c>
              <see cref="T:Java.IO.ObjectInputStream" />
            </c>
          </term>
        </item>
        <item>
          <term>
            <c>
              <see cref="T:Java.IO.IObjectOutput" />
            </c>
          </term>
        </item>
        <item>
          <term>
            <c>
              <see cref="T:Java.IO.ISerializable" />
            </c>
          </term>
        </item>
        <item>
          <term>
            <c>
              <see cref="T:Java.IO.IExternalizable" />
            </c>
          </term>
        </item>
      </list>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/java/io/ObjectOutputStream.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ObjectOutputStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Constructs a new <c>ObjectOutputStream</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>ObjectOutputStream</c>. This default constructor can
 be used by subclasses that do not want to use the public constructor if
 it allocates unneeded data.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/ObjectOutputStream.html#ObjectOutputStream()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs when creating this stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectOutputStream (System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream output) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/OutputStream;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="output">To be added.</param>
        <summary>Constructs a new ObjectOutputStream that writes to the OutputStream
 <c>output</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new ObjectOutputStream that writes to the OutputStream
 <c>output</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/ObjectOutputStream.html#ObjectOutputStream(java.io.OutputStream)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while writing the object stream
             header
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ObjectOutputStream (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnnotateClass">
      <MemberSignature Language="C#" Value="protected virtual void AnnotateClass (Java.Lang.Class aClass);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AnnotateClass(class Java.Lang.Class aClass) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("annotateClass", "(Ljava/lang/Class;)V", "GetAnnotateClass_Ljava_lang_Class_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aClass" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="aClass">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnnotateProxyClass">
      <MemberSignature Language="C#" Value="protected virtual void AnnotateProxyClass (Java.Lang.Class aClass);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AnnotateProxyClass(class Java.Lang.Class aClass) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("annotateProxyClass", "(Ljava/lang/Class;)V", "GetAnnotateProxyClass_Ljava_lang_Class_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aClass" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="aClass">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultWriteObject">
      <MemberSignature Language="C#" Value="public virtual void DefaultWriteObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DefaultWriteObject() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("defaultWriteObject", "()V", "GetDefaultWriteObjectHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Default method to write objects to this stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Default method to write objects to this stream. Serializable fields
 defined in the object's class and superclasses are written to the output
 stream.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/ObjectOutputStream.html#defaultWriteObject()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while writing to the target stream.</exception>
        <exception cref="T:Java.IO.NotActiveException">if this method is not called from <c>writeObject()</c>.</exception>
        <altmember cref="M:Java.IO.ObjectInputStream.DefaultReadObject" />
      </Docs>
    </Member>
    <Member MemberName="Drain">
      <MemberSignature Language="C#" Value="protected virtual void Drain ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Drain() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("drain", "()V", "GetDrainHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Writes buffered data to the target stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Writes buffered data to the target stream. This is similar to <c>flush</c> but the flush is not propagated to the target stream.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/ObjectOutputStream.html#drain()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while writing to the target stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EnableReplaceObject">
      <MemberSignature Language="C#" Value="protected virtual bool EnableReplaceObject (bool enable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool EnableReplaceObject(bool enable) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("enableReplaceObject", "(Z)Z", "GetEnableReplaceObject_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enable">
          <c>true</c> to enable object replacement; <c>false</c> to
            disable it.</param>
        <summary>Enables object replacement for this stream.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Enables object replacement for this stream. By default this is not
 enabled. Only trusted subclasses (loaded with system class loader) are
 allowed to change this status.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/ObjectOutputStream.html#enableReplaceObject(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.IO.ObjectOutputStream.ReplaceObject(Java.Lang.Object)" />
        <altmember cref="M:Java.IO.ObjectInputStream.EnableResolveObject(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PutFields">
      <MemberSignature Language="C#" Value="public virtual Java.IO.ObjectOutputStream.PutField PutFields ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.IO.ObjectOutputStream/PutField PutFields() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("putFields", "()Ljava/io/ObjectOutputStream$PutField;", "GetPutFieldsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.ObjectOutputStream+PutField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets this stream's <c>PutField</c> object.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets this stream's <c>PutField</c> object. This object provides access
 to the persistent fields that are eventually written to the output
 stream. It is used to transfer the values from the fields of the object
 that is currently being written to the persistent fields.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/ObjectOutputStream.html#putFields()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs.</exception>
        <exception cref="T:Java.IO.NotActiveException">if this method is not called from <c>writeObject()</c>.</exception>
        <altmember cref="M:Java.IO.ObjectInputStream.DefaultReadObject" />
      </Docs>
    </Member>
    <Member MemberName="ReplaceObject">
      <MemberSignature Language="C#" Value="protected virtual Java.Lang.Object ReplaceObject (Java.Lang.Object object);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Lang.Object ReplaceObject(class Java.Lang.Object object) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("replaceObject", "(Ljava/lang/Object;)Ljava/lang/Object;", "GetReplaceObject_Ljava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="object" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="object">the original object for which a replacement may be defined.</param>
        <summary>Allows trusted subclasses to substitute the specified original <c>object</c> with a new object.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Allows trusted subclasses to substitute the specified original <c>object</c> with a new object. Object substitution has to be activated first
 with calling <c>enableReplaceObject(true)</c>. This implementation just
 returns <c>object</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/ObjectOutputStream.html#replaceObject(java.lang.Object)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if any I/O error occurs while creating the replacement
             object.</exception>
        <altmember cref="M:Java.IO.ObjectOutputStream.EnableReplaceObject(System.Boolean)" />
        <altmember cref="M:Java.IO.ObjectInputStream.EnableResolveObject(System.Boolean)" />
        <altmember cref="M:Java.IO.ObjectInputStream.ResolveObject(Java.Lang.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("reset", "()V", "GetResetHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resets the state of this stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Resets the state of this stream. A marker is written to the stream, so
 that the corresponding input stream will also perform a reset at the same
 point. Objects previously written are no longer remembered, so they will
 be written again (instead of a cyclical reference) if found in the object
 graph.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/ObjectOutputStream.html#reset()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if <c>reset()</c> is called during the serialization of an
             object.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseProtocolVersion">
      <MemberSignature Language="C#" Value="public virtual void UseProtocolVersion (Java.IO.ObjectStreamProtocol version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UseProtocolVersion(valuetype Java.IO.ObjectStreamProtocol version) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("useProtocolVersion", "(I)V", "GetUseProtocolVersion_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="Java.IO.ObjectStreamProtocol">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="version">the protocol version to be used. Use a <c>PROTOCOL_VERSION_x</c> constant from <c>java.io.ObjectStreamConstants</c>.</param>
        <summary>Sets the specified protocol version to be used by this stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the specified protocol version to be used by this stream.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/ObjectOutputStream.html#useProtocolVersion(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if an invalid <c>version</c> is specified.</exception>
        <exception cref="T:Java.IO.IOException">if an I/O error occurs.</exception>
        <altmember cref="F:Java.IO.ObjectStreamConstants.ProtocolVersion1" />
        <altmember cref="F:Java.IO.ObjectStreamConstants.ProtocolVersion2" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(int32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("write", "(I)V", "GetWrite_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">the byte to write.</param>
        <summary>Writes a single byte to the target stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Writes a single byte to the target stream. Only the least significant
 byte of the integer <c>value</c> is written to the stream. Blocks until
 the byte is actually written.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/ObjectOutputStream.html#write(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while writing to the target stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBoolean">
      <MemberSignature Language="C#" Value="public virtual void WriteBoolean (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBoolean(bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeBoolean", "(Z)V", "GetWriteBoolean_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">the boolean value to write to the target stream.</param>
        <summary>Writes a boolean to the target stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Writes a boolean to the target stream.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/ObjectOutputStream.html#writeBoolean(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while writing to the target stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public virtual void WriteByte (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteByte(int32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeByte", "(I)V", "GetWriteByte_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">the byte to write to the target stream.</param>
        <summary>Writes a byte (8 bit) to the target stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Writes a byte (8 bit) to the target stream.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/ObjectOutputStream.html#writeByte(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while writing to the target stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBytes">
      <MemberSignature Language="C#" Value="public virtual void WriteBytes (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBytes(string value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeBytes", "(Ljava/lang/String;)V", "GetWriteBytes_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">the string to write to the target stream.</param>
        <summary>Writes the string <c>value</c> as a sequence of bytes to the target
 stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Writes the string <c>value</c> as a sequence of bytes to the target
 stream. Only the least significant byte of each character in the string
 is written.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/ObjectOutputStream.html#writeBytes(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while writing to the target stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteChar">
      <MemberSignature Language="C#" Value="public virtual void WriteChar (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteChar(int32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeChar", "(I)V", "GetWriteChar_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">the character to write to the target stream.</param>
        <summary>Writes a character (16 bit) to the target stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Writes a character (16 bit) to the target stream.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/ObjectOutputStream.html#writeChar(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while writing to the target stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteChars">
      <MemberSignature Language="C#" Value="public virtual void WriteChars (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteChars(string value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeChars", "(Ljava/lang/String;)V", "GetWriteChars_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">the string to write to the target stream.</param>
        <summary>Writes the string <c>value</c> as a sequence of characters to the target
 stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Writes the string <c>value</c> as a sequence of characters to the target
 stream.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/ObjectOutputStream.html#writeChars(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while writing to the target stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteClassDescriptor">
      <MemberSignature Language="C#" Value="protected virtual void WriteClassDescriptor (Java.IO.ObjectStreamClass classDesc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteClassDescriptor(class Java.IO.ObjectStreamClass classDesc) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeClassDescriptor", "(Ljava/io/ObjectStreamClass;)V", "GetWriteClassDescriptor_Ljava_io_ObjectStreamClass_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classDesc" Type="Java.IO.ObjectStreamClass" />
      </Parameters>
      <Docs>
        <param name="classDesc">the class descriptor to write to the target stream.</param>
        <summary>Writes a class descriptor to the target stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Writes a class descriptor to the target stream.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/ObjectOutputStream.html#writeClassDescriptor(java.io.ObjectStreamClass)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while writing to the target stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteDouble">
      <MemberSignature Language="C#" Value="public virtual void WriteDouble (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteDouble(float64 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeDouble", "(D)V", "GetWriteDouble_DHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">the double to write to the target stream.</param>
        <summary>Writes a double (64 bit) to the target stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Writes a double (64 bit) to the target stream.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/ObjectOutputStream.html#writeDouble(double)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while writing to the target stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFields">
      <MemberSignature Language="C#" Value="public virtual void WriteFields ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteFields() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeFields", "()V", "GetWriteFieldsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Writes the fields of the object currently being written to the target
 stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Writes the fields of the object currently being written to the target
 stream. The field values are buffered in the currently active <c>PutField</c> object, which can be accessed by calling <c>putFields()</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/ObjectOutputStream.html#writeFields()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while writing to the target stream.</exception>
        <exception cref="T:Java.IO.NotActiveException">if there are no fields to write to the target stream.</exception>
        <altmember cref="M:Java.IO.ObjectOutputStream.PutFields" />
      </Docs>
    </Member>
    <Member MemberName="WriteFloat">
      <MemberSignature Language="C#" Value="public virtual void WriteFloat (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteFloat(float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeFloat", "(F)V", "GetWriteFloat_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">the float to write to the target stream.</param>
        <summary>Writes a float (32 bit) to the target stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Writes a float (32 bit) to the target stream.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/ObjectOutputStream.html#writeFloat(float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while writing to the target stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteInt">
      <MemberSignature Language="C#" Value="public virtual void WriteInt (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteInt(int32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeInt", "(I)V", "GetWriteInt_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">the integer to write to the target stream.</param>
        <summary>Writes an integer (32 bit) to the target stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Writes an integer (32 bit) to the target stream.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/ObjectOutputStream.html#writeInt(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while writing to the target stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLong">
      <MemberSignature Language="C#" Value="public virtual void WriteLong (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteLong(int64 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeLong", "(J)V", "GetWriteLong_JHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">the long to write to the target stream.</param>
        <summary>Writes a long (64 bit) to the target stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Writes a long (64 bit) to the target stream.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/ObjectOutputStream.html#writeLong(long)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while writing to the target stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteObject">
      <MemberSignature Language="C#" Value="public void WriteObject (Java.Lang.Object object);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteObject(class Java.Lang.Object object) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeObject", "(Ljava/lang/Object;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="object" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="object">the object to write to the target stream.</param>
        <summary>Writes an object to the target stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Writes an object to the target stream.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/ObjectOutputStream.html#writeObject(java.lang.Object)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while writing to the target stream.</exception>
        <altmember cref="M:Java.IO.ObjectInputStream.ReadObject" />
      </Docs>
    </Member>
    <Member MemberName="WriteObjectOverride">
      <MemberSignature Language="C#" Value="protected virtual void WriteObjectOverride (Java.Lang.Object object);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteObjectOverride(class Java.Lang.Object object) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeObjectOverride", "(Ljava/lang/Object;)V", "GetWriteObjectOverride_Ljava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="object" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="object">the object to write to the target stream.</param>
        <summary>Method to be overridden by subclasses to write <c>object</c> to the
 target stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Method to be overridden by subclasses to write <c>object</c> to the
 target stream.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/ObjectOutputStream.html#writeObjectOverride(java.lang.Object)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while writing to the target stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteShort">
      <MemberSignature Language="C#" Value="public virtual void WriteShort (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteShort(int32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeShort", "(I)V", "GetWriteShort_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">the short to write to the target stream.</param>
        <summary>Writes a short (16 bit) to the target stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Writes a short (16 bit) to the target stream.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/ObjectOutputStream.html#writeShort(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while writing to the target stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStreamHeader">
      <MemberSignature Language="C#" Value="protected virtual void WriteStreamHeader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteStreamHeader() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeStreamHeader", "()V", "GetWriteStreamHeaderHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Writes the <c><see cref="T:Java.IO.ObjectOutputStream" /></c> header to the target stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Writes the <c><see cref="T:Java.IO.ObjectOutputStream" /></c> header to the target stream.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/ObjectOutputStream.html#writeStreamHeader()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while writing to the target stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteUnshared">
      <MemberSignature Language="C#" Value="public virtual void WriteUnshared (Java.Lang.Object object);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteUnshared(class Java.Lang.Object object) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeUnshared", "(Ljava/lang/Object;)V", "GetWriteUnshared_Ljava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="object" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="object">the object to write to the target stream.</param>
        <summary>Writes an unshared object to the target stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Writes an unshared object to the target stream. This method is identical
 to <c>writeObject</c>, except that it always writes a new object to the
 stream versus the use of back-referencing for identical objects by
 <c>writeObject</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/ObjectOutputStream.html#writeUnshared(java.lang.Object)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while writing to the target stream.</exception>
        <altmember cref="M:Java.IO.ObjectInputStream.ReadUnshared" />
      </Docs>
    </Member>
    <Member MemberName="WriteUTF">
      <MemberSignature Language="C#" Value="public virtual void WriteUTF (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteUTF(string value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeUTF", "(Ljava/lang/String;)V", "GetWriteUTF_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">the string to write to the target stream.</param>
        <summary>Writes a string encoded with <c><see cref="T:Java.IO.IDataInput" /></c> to the
 target stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Writes a string encoded with <c><see cref="T:Java.IO.IDataInput" /></c> to the
 target stream.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/ObjectOutputStream.html#writeUTF(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while writing to the target stream.
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
