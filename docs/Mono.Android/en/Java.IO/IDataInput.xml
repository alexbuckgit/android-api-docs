<Type Name="IDataInput" FullName="Java.IO.IDataInput">
  <TypeSignature Language="C#" Value="public interface IDataInput : Android.Runtime.IJavaObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataInput implements class Android.Runtime.IJavaObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/io/DataInput", "", "Java.IO.IDataInputInvoker")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Defines an interface for classes that are able to read big-endian typed data from some
 source.</summary>
    <remarks><para tool="javadoc-to-mdoc">Defines an interface for classes that are able to read big-endian typed data from some
 source. Typically, this data has been written by a class which implements
 <c><see cref="T:Java.IO.IDataOutput" /></c>. Types that can be read include byte, 16-bit short, 32-bit
 int, 32-bit float, 64-bit long, 64-bit double, byte strings, and MUTF-8
 strings.

 <format type="text/html"><h3>MUTF-8 (Modified UTF-8) Encoding</h3></format></para><para tool="javadoc-to-mdoc">
 When encoding strings as UTF, implementations of <c>DataInput</c> and
 <c>DataOutput</c> use a slightly modified form of UTF-8, hereafter referred
 to as MUTF-8. This form is identical to standard UTF-8, except:
 <list type="bullet"><item><term>Only the one-, two-, and three-byte encodings are used.</term></item><item><term>Code points in the range <c>U+10000</c> &amp;hellip;
 <c>U+10ffff</c> are encoded as a surrogate pair, each of which is
 represented as a three-byte encoded value.</term></item><item><term>The code point <c>U+0000</c> is encoded in two-byte form.</term></item></list></para><para tool="javadoc-to-mdoc">
 Please refer to  for
 further information about character encoding. MUTF-8 is actually closer to
 the (relatively less well-known) encoding  than to UTF-8 per se.<format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="T:Java.IO.DataInputStream" /></c></term></item><item><term><c><see cref="T:Java.IO.RandomAccessFile" /></c></term></item></list></para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/DataInput.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="ReadBoolean">
      <MemberSignature Language="C#" Value="public bool ReadBoolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadBoolean() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readBoolean", "()Z", "GetReadBooleanHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a boolean.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Reads a boolean.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/DataInput.html#readBoolean()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
         request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while reading.</exception>
        <altmember cref="M:Java.IO.IDataOutput.WriteBoolean(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public sbyte ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int8 ReadByte() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readByte", "()B", "GetReadByteHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads an 8-bit byte value.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Reads an 8-bit byte value.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/DataInput.html#readByte()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
         request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while reading.</exception>
        <altmember cref="M:Java.IO.IDataOutput.WriteByte(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadChar">
      <MemberSignature Language="C#" Value="public char ReadChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char ReadChar() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readChar", "()C", "GetReadCharHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a big-endian 16-bit character value.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Reads a big-endian 16-bit character value.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/DataInput.html#readChar()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
         request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while reading.</exception>
        <altmember cref="M:Java.IO.IDataOutput.WriteChar(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadDouble">
      <MemberSignature Language="C#" Value="public double ReadDouble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ReadDouble() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readDouble", "()D", "GetReadDoubleHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a big-endian 64-bit double value.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Reads a big-endian 64-bit double value.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/DataInput.html#readDouble()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
         request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while reading.</exception>
        <altmember cref="M:Java.IO.IDataOutput.WriteDouble(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="ReadFloat">
      <MemberSignature Language="C#" Value="public float ReadFloat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 ReadFloat() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readFloat", "()F", "GetReadFloatHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a big-endian 32-bit float value.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Reads a big-endian 32-bit float value.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/DataInput.html#readFloat()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
         request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while reading.</exception>
        <altmember cref="M:Java.IO.IDataOutput.WriteFloat(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="ReadFully">
      <MemberSignature Language="C#" Value="public void ReadFully (byte[] dst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadFully(unsigned int8[] dst) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readFully", "([B)V", "GetReadFully_arrayBHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="dst">To be added.</param>
        <summary>Equivalent to <c>readFully(dst, 0, dst.length);</c>.</summary>
        <remarks><para tool="javadoc-to-mdoc">Equivalent to <c>readFully(dst, 0, dst.length);</c>.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/DataInput.html#readFully(byte[])" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="ReadFully">
      <MemberSignature Language="C#" Value="public void ReadFully (byte[] dst, int offset, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadFully(unsigned int8[] dst, int32 offset, int32 byteCount) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readFully", "([BII)V", "GetReadFully_arrayBIIHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dst">the byte array into which the data is read.</param>
        <param name="offset">the offset in <c>dst</c> at which to store the bytes.</param>
        <param name="byteCount">the number of bytes to read.</param>
        <summary>Reads <c>byteCount</c> bytes from this stream and stores them in the byte
 array <c>dst</c> starting at <c>offset</c>.</summary>
        <remarks><para tool="javadoc-to-mdoc">Reads <c>byteCount</c> bytes from this stream and stores them in the byte
 array <c>dst</c> starting at <c>offset</c>. If <c>byteCount</c> is zero, then this
 method returns without reading any bytes. Otherwise, this method blocks until
 <c>byteCount</c> bytes have been read. If insufficient bytes are available,
 <c>EOFException</c> is thrown. If an I/O error occurs, <c>IOException</c> is
 thrown. When an exception is thrown, some bytes may have been consumed from the stream
 and written into the array.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/DataInput.html#readFully(byte[], int, int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the source stream is reached before enough
             bytes have been read.</exception>
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>offset </c> or <c>byteCount </c>, or
             <c>offset + byteCount &gt; dst.length</c>.</exception>
        <exception cref="T:Java.IO.IOException">if a problem occurs while reading from this stream.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>dst</c> is null.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadInt">
      <MemberSignature Language="C#" Value="public int ReadInt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadInt() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readInt", "()I", "GetReadIntHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a big-endian 32-bit integer value.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Reads a big-endian 32-bit integer value.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/DataInput.html#readInt()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
         request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while reading.</exception>
        <altmember cref="M:Java.IO.IDataOutput.WriteInt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadLine() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readLine", "()Ljava/lang/String;", "GetReadLineHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a string containing the next line of text available from this
 stream.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns a string containing the next line of text available from this
 stream. A line is made of zero or more characters followed by <c>'\n'</c>, <c>'\r'</c>, <c>"\r\n"</c> or the end of the stream. The string
 does not include the newline sequence.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/DataInput.html#readLine()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
         request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while reading.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLong">
      <MemberSignature Language="C#" Value="public long ReadLong ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 ReadLong() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readLong", "()J", "GetReadLongHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a big-endian 64-bit long value.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Reads a big-endian 64-bit long value.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/DataInput.html#readLong()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
         request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while reading.</exception>
        <altmember cref="M:Java.IO.IDataOutput.WriteLong(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="ReadShort">
      <MemberSignature Language="C#" Value="public short ReadShort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int16 ReadShort() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readShort", "()S", "GetReadShortHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a big-endian 16-bit short value.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Reads a big-endian 16-bit short value.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/DataInput.html#readShort()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
         request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while reading.</exception>
        <altmember cref="M:Java.IO.IDataOutput.WriteShort(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadUnsignedByte">
      <MemberSignature Language="C#" Value="public int ReadUnsignedByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadUnsignedByte() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readUnsignedByte", "()I", "GetReadUnsignedByteHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads an unsigned 8-bit byte value and returns it as an int.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Reads an unsigned 8-bit byte value and returns it as an int.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/DataInput.html#readUnsignedByte()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
         request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while reading.</exception>
        <altmember cref="M:Java.IO.IDataOutput.WriteByte(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadUnsignedShort">
      <MemberSignature Language="C#" Value="public int ReadUnsignedShort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadUnsignedShort() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readUnsignedShort", "()I", "GetReadUnsignedShortHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a big-endian 16-bit unsigned short value and returns it as an int.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Reads a big-endian 16-bit unsigned short value and returns it as an int.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/DataInput.html#readUnsignedShort()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
         request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while reading.</exception>
        <altmember cref="M:Java.IO.IDataOutput.WriteShort(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadUTF">
      <MemberSignature Language="C#" Value="public string ReadUTF ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadUTF() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readUTF", "()Ljava/lang/String;", "GetReadUTFHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a string encoded with <c><see cref="T:Java.IO.IDataInput" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Reads a string encoded with <c><see cref="T:Java.IO.IDataInput" /></c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/DataInput.html#readUTF()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
         request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while reading.</exception>
        <altmember cref="M:Java.IO.IDataOutput.WriteUTF(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SkipBytes">
      <MemberSignature Language="C#" Value="public int SkipBytes (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SkipBytes(int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("skipBytes", "(I)I", "GetSkipBytes_IHandler:Java.IO.IDataInputInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">the number of bytes to skip.</param>
        <summary>Skips <c>count</c> number of bytes.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Skips <c>count</c> number of bytes. This method will not throw an
 <c><see cref="T:Java.IO.EOFException" /></c> if the end of the input is reached before
 <c>count</c> bytes where skipped.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/DataInput.html#skipBytes(int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if a problem occurs during skipping.
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
