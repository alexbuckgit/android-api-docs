<Type Name="InputStreamReader" FullName="Java.IO.InputStreamReader">
  <TypeSignature Language="C#" Value="public class InputStreamReader : Java.IO.Reader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InputStreamReader extends Java.IO.Reader" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.IO.Reader</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/io/InputStreamReader", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A class for turning a byte stream into a character stream.</summary>
    <remarks><para tool="javadoc-to-mdoc">A class for turning a byte stream into a character stream. Data read from the
 source input stream is converted into characters by either a default or a
 provided character converter. The default encoding is taken from the
 "file.encoding" system property. <c>InputStreamReader</c> contains a buffer
 of bytes read from the source stream and converts these into characters as
 needed. The buffer size is 8K.</para><format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="T:Java.IO.OutputStreamWriter" /></c></term></item></list><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/InputStreamReader.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InputStreamReader (System.IO.Stream in);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream in) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/InputStream;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="in" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="in">To be added.</param>
        <summary>Constructs a new <c>InputStreamReader</c> on the <c><see cref="T:Java.IO.InputStream" /></c><c>in</c>.</summary>
        <remarks><para tool="javadoc-to-mdoc">Constructs a new <c>InputStreamReader</c> on the <c><see cref="T:Java.IO.InputStream" /></c><c>in</c>. This constructor sets the character converter to the encoding
 specified in the "file.encoding" property and falls back to ISO 8859_1
 (ISO-Latin-1) if the property doesn't exist.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/InputStreamReader.html#InputStreamReader(java.io.InputStream)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InputStreamReader (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InputStreamReader (System.IO.Stream in, Java.Nio.Charset.Charset charset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream in, class Java.Nio.Charset.Charset charset) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="in" Type="System.IO.Stream" />
        <Parameter Name="charset" Type="Java.Nio.Charset.Charset" />
      </Parameters>
      <Docs>
        <param name="in">To be added.</param>
        <param name="charset">To be added.</param>
        <summary>Constructs a new InputStreamReader on the InputStream <c>in</c> and
 Charset <c>charset</c>.</summary>
        <remarks><para tool="javadoc-to-mdoc">Constructs a new InputStreamReader on the InputStream <c>in</c> and
 Charset <c>charset</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/InputStreamReader.html#InputStreamReader(java.io.InputStream, java.nio.charset.Charset)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InputStreamReader (System.IO.Stream in, Java.Nio.Charset.CharsetDecoder dec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream in, class Java.Nio.Charset.CharsetDecoder dec) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/InputStream;Ljava/nio/charset/CharsetDecoder;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="in" Type="System.IO.Stream" />
        <Parameter Name="dec" Type="Java.Nio.Charset.CharsetDecoder" />
      </Parameters>
      <Docs>
        <param name="in">To be added.</param>
        <param name="dec">To be added.</param>
        <summary>Constructs a new InputStreamReader on the InputStream <c>in</c> and
 CharsetDecoder <c>dec</c>.</summary>
        <remarks><para tool="javadoc-to-mdoc">Constructs a new InputStreamReader on the InputStream <c>in</c> and
 CharsetDecoder <c>dec</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/InputStreamReader.html#InputStreamReader(java.io.InputStream, java.nio.charset.CharsetDecoder)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InputStreamReader (System.IO.Stream in, string charsetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream in, string charsetName) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/InputStream;Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="in" Type="System.IO.Stream" />
        <Parameter Name="enc" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="in">To be added.</param>
        <param name="charsetName">To be added.</param>
        <summary>Constructs a new InputStreamReader on the InputStream <c>in</c>.</summary>
        <remarks><para tool="javadoc-to-mdoc">Constructs a new InputStreamReader on the InputStream <c>in</c>. The
 character converter that is used to decode bytes into characters is
 identified by name by <c>charsetName</c>. If the encoding cannot be found, an
 UnsupportedEncodingException error is thrown.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/InputStreamReader.html#InputStreamReader(java.io.InputStream, java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>charsetName</c> is <c>null</c>.</exception>
        <exception cref="T:Java.IO.UnsupportedEncodingException">if the encoding specified by <c>charsetName</c> cannot be found.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("close", "()V", "GetCloseHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes this reader.</summary>
        <remarks><para tool="javadoc-to-mdoc">Closes this reader. This implementation closes the source InputStream and
 releases all local storage.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/InputStreamReader.html#close()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs attempting to close this reader.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public virtual string Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getEncoding", "()Ljava/lang/String;", "GetGetEncodingHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the canonical name of the encoding used by this writer to convert characters to
 bytes, or null if this writer has been closed.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns the canonical name of the encoding used by this writer to convert characters to
 bytes, or null if this writer has been closed. Most callers should probably keep
 track of the String or Charset they passed in; this method may not return the same
 name.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/InputStreamReader.html#getEncoding()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (char[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(char[] buffer, int32 offset, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("read", "([CII)I", "GetRead_arrayCIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buf" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="offset">the initial position in <c>buf</c> to store the characters
            read from this reader.</param>
        <param name="count">To be added.</param>
        <param name="length">the maximum number of characters to read.</param>
        <summary>Reads up to <c>count</c> characters from this reader and stores them
 at position <c>offset</c> in the character array <c>buffer</c>.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Reads up to <c>count</c> characters from this reader and stores them
 at position <c>offset</c> in the character array <c>buffer</c>. Returns
 the number of characters actually read or -1 if the end of the reader has
 been reached. The bytes are either obtained from converting bytes in this
 reader's buffer or by first filling the buffer from the source
 InputStream and then reading from the buffer.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/InputStreamReader.html#read(char[], int, int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IndexOutOfBoundsException">if <c>offset  buffer.length</c>.</exception>
        <exception cref="T:Java.IO.IOException">if this reader is closed or some other I/O error occurs.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
