<Type Name="ObjectInputStream" FullName="Java.IO.ObjectInputStream">
  <TypeSignature Language="C#" Value="public class ObjectInputStream : Java.IO.InputStream, IDisposable, Java.IO.IObjectInput" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectInputStream extends Java.IO.InputStream implements class Android.Runtime.IJavaObject, class Java.IO.IDataInput, class Java.IO.IObjectInput, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.IO.InputStream</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Java.IO.IObjectInput</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/io/ObjectInputStream", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A specialized <c><see cref="T:Java.IO.InputStream" /></c> that is able to read (deserialize) Java
 objects as well as primitive data types (int, byte, char etc.</summary>
    <remarks><para tool="javadoc-to-mdoc">A specialized <c><see cref="T:Java.IO.InputStream" /></c> that is able to read (deserialize) Java
 objects as well as primitive data types (int, byte, char etc.). The data has
 typically been saved using an ObjectOutputStream.</para><format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="T:Java.IO.ObjectOutputStream" /></c></term></item><item><term><c><see cref="T:Java.IO.IObjectInput" /></c></term></item><item><term><c><see cref="T:Java.IO.ISerializable" /></c></term></item><item><term><c><see cref="T:Java.IO.IExternalizable" /></c></term></item></list><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/ObjectInputStream.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ObjectInputStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Constructs a new ObjectInputStream.</summary>
        <remarks><para tool="javadoc-to-mdoc">Constructs a new ObjectInputStream. This default constructor can be used
 by subclasses that do not want to use the public constructor if it
 allocates unneeded data.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/ObjectInputStream.html#ObjectInputStream()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs when creating this stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectInputStream (System.IO.Stream input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream input) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/InputStream;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="input" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>Constructs a new ObjectInputStream that reads from the InputStream
 <c>input</c>.</summary>
        <remarks><para tool="javadoc-to-mdoc">Constructs a new ObjectInputStream that reads from the InputStream
 <c>input</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/ObjectInputStream.html#ObjectInputStream(java.io.InputStream)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while reading the stream header.</exception>
        <exception cref="T:Java.IO.StreamCorruptedException">if the source stream does not contain serialized objects that
             can be read.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ObjectInputStream (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultReadObject">
      <MemberSignature Language="C#" Value="public virtual void DefaultReadObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DefaultReadObject() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("defaultReadObject", "()V", "GetDefaultReadObjectHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Default method to read objects from this stream.</summary>
        <remarks><para tool="javadoc-to-mdoc">Default method to read objects from this stream. Serializable fields
 defined in the object's class and superclasses are read from the source
 stream.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/ObjectInputStream.html#defaultReadObject()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassNotFoundException">if the object's class cannot be found.</exception>
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while reading the object data.</exception>
        <exception cref="T:Java.IO.NotActiveException">if this method is not called from <c>readObject()</c>.</exception>
        <altmember cref="M:Java.IO.ObjectOutputStream.DefaultWriteObject" />
      </Docs>
    </Member>
    <Member MemberName="EnableResolveObject">
      <MemberSignature Language="C#" Value="protected virtual bool EnableResolveObject (bool enable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool EnableResolveObject(bool enable) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("enableResolveObject", "(Z)Z", "GetEnableResolveObject_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enable"><c>true</c> to enable object replacement; <c>false</c> to
            disable it.</param>
        <summary>Enables object replacement for this stream.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Enables object replacement for this stream. By default this is not
 enabled. Only trusted subclasses (loaded with system class loader) are
 allowed to change this status.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/ObjectInputStream.html#enableResolveObject(boolean)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.IO.ObjectInputStream.ResolveObject(Java.Lang.Object)" />
        <altmember cref="M:Java.IO.ObjectOutputStream.EnableReplaceObject(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("read", "()I", "GetReadHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a single byte from the source stream and returns it as an integer
 in the range from 0 to 255.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Reads a single byte from the source stream and returns it as an integer
 in the range from 0 to 255. Returns -1 if the end of the source stream
 has been reached. Blocks if no input is available.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/ObjectInputStream.html#read()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from this stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadBoolean">
      <MemberSignature Language="C#" Value="public virtual bool ReadBoolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadBoolean() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readBoolean", "()Z", "GetReadBooleanHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a boolean from the source stream.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Reads a boolean from the source stream.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/ObjectInputStream.html#readBoolean()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
             request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public virtual sbyte ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int8 ReadByte() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readByte", "()B", "GetReadByteHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a byte (8 bit) from the source stream.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Reads a byte (8 bit) from the source stream.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/ObjectInputStream.html#readByte()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
             request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadChar">
      <MemberSignature Language="C#" Value="public virtual char ReadChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char ReadChar() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readChar", "()C", "GetReadCharHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a character (16 bit) from the source stream.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Reads a character (16 bit) from the source stream.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/ObjectInputStream.html#readChar()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
             request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadClassDescriptor">
      <MemberSignature Language="C#" Value="protected virtual Java.IO.ObjectStreamClass ReadClassDescriptor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.IO.ObjectStreamClass ReadClassDescriptor() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readClassDescriptor", "()Ljava/io/ObjectStreamClass;", "GetReadClassDescriptorHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.ObjectStreamClass</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a class descriptor from the source stream.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Reads a class descriptor from the source stream.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/ObjectInputStream.html#readClassDescriptor()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassNotFoundException">if a class for one of the objects cannot be found.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadDouble">
      <MemberSignature Language="C#" Value="public virtual double ReadDouble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ReadDouble() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readDouble", "()D", "GetReadDoubleHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a double (64 bit) from the source stream.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Reads a double (64 bit) from the source stream.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/ObjectInputStream.html#readDouble()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
             request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadFields">
      <MemberSignature Language="C#" Value="public virtual Java.IO.ObjectInputStream.GetField ReadFields ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.IO.ObjectInputStream/GetField ReadFields() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readFields", "()Ljava/io/ObjectInputStream$GetField;", "GetReadFieldsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.ObjectInputStream+GetField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads the persistent fields of the object that is currently being read
 from the source stream.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Reads the persistent fields of the object that is currently being read
 from the source stream. The values read are stored in a GetField object
 that provides access to the persistent fields. This GetField object is
 then returned.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/ObjectInputStream.html#readFields()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassNotFoundException">if the class of an object being deserialized can not be
             found.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from this stream.</exception>
        <exception cref="T:Java.IO.NotActiveException">if this stream is currently not reading an object.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadFloat">
      <MemberSignature Language="C#" Value="public virtual float ReadFloat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 ReadFloat() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readFloat", "()F", "GetReadFloatHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a float (32 bit) from the source stream.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Reads a float (32 bit) from the source stream.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/ObjectInputStream.html#readFloat()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
             request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadFully">
      <MemberSignature Language="C#" Value="public virtual void ReadFully (byte[] dst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadFully(unsigned int8[] dst) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readFully", "([B)V", "GetReadFully_arrayBHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="dst">the array in which to store the bytes read.</param>
        <summary>Reads bytes from the source stream into the byte array <c>dst</c>.</summary>
        <remarks><para tool="javadoc-to-mdoc">Reads bytes from the source stream into the byte array <c>dst</c>.
 This method will block until <c>dst.length</c> bytes have been read.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/ObjectInputStream.html#readFully(byte[])" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
             request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadFully">
      <MemberSignature Language="C#" Value="public virtual void ReadFully (byte[] dst, int offset, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadFully(unsigned int8[] dst, int32 offset, int32 byteCount) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readFully", "([BII)V", "GetReadFully_arrayBIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dst">the byte array in which to store the bytes read.</param>
        <param name="offset">the initial position in <c>dst</c> to store the bytes
            read from the source stream.</param>
        <param name="byteCount">the number of bytes to read.</param>
        <summary>Reads <c>byteCount</c> bytes from the source stream into the byte array <c>dst</c>.</summary>
        <remarks><para tool="javadoc-to-mdoc">Reads <c>byteCount</c> bytes from the source stream into the byte array <c>dst</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/ObjectInputStream.html#readFully(byte[], int, int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
             request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadInt">
      <MemberSignature Language="C#" Value="public virtual int ReadInt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadInt() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readInt", "()I", "GetReadIntHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads an integer (32 bit) from the source stream.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Reads an integer (32 bit) from the source stream.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/ObjectInputStream.html#readInt()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
             request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public virtual string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadLine() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readLine", "()Ljava/lang/String;", "GetReadLineHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads the next line from the source stream.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Reads the next line from the source stream. Lines are terminated by
 <c>'\r'</c>, <c>'\n'</c>, <c>"\r\n"</c> or an <c>EOF</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/ObjectInputStream.html#readLine()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLong">
      <MemberSignature Language="C#" Value="public virtual long ReadLong ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 ReadLong() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readLong", "()J", "GetReadLongHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a long (64 bit) from the source stream.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Reads a long (64 bit) from the source stream.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/ObjectInputStream.html#readLong()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
             request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public Java.Lang.Object ReadObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object ReadObject() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readObject", "()Ljava/lang/Object;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads the next object from the source stream.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Reads the next object from the source stream.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/ObjectInputStream.html#readObject()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassNotFoundException">if the class of one of the objects in the object graph cannot
             be found.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.</exception>
        <exception cref="T:Java.IO.OptionalDataException">if primitive data types were found instead of an object.</exception>
        <altmember cref="M:Java.IO.ObjectOutputStream.WriteObject(Java.Lang.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ReadObjectOverride">
      <MemberSignature Language="C#" Value="protected virtual Java.Lang.Object ReadObjectOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Lang.Object ReadObjectOverride() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readObjectOverride", "()Ljava/lang/Object;", "GetReadObjectOverrideHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Method to be overridden by subclasses to read the next object from the
 source stream.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Method to be overridden by subclasses to read the next object from the
 source stream.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/ObjectInputStream.html#readObjectOverride()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassNotFoundException">if the class of one of the objects in the object graph cannot
             be found.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.</exception>
        <exception cref="T:Java.IO.OptionalDataException">if primitive data types were found instead of an object.</exception>
        <altmember cref="M:Java.IO.ObjectOutputStream.WriteObjectOverride(Java.Lang.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ReadShort">
      <MemberSignature Language="C#" Value="public virtual short ReadShort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int16 ReadShort() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readShort", "()S", "GetReadShortHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a short (16 bit) from the source stream.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Reads a short (16 bit) from the source stream.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/ObjectInputStream.html#readShort()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadStreamHeader">
      <MemberSignature Language="C#" Value="protected virtual void ReadStreamHeader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ReadStreamHeader() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readStreamHeader", "()V", "GetReadStreamHeaderHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads and validates the ObjectInputStream header from the source stream.</summary>
        <remarks><para tool="javadoc-to-mdoc">Reads and validates the ObjectInputStream header from the source stream.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/ObjectInputStream.html#readStreamHeader()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.</exception>
        <exception cref="T:Java.IO.StreamCorruptedException">if the source stream does not contain readable serialized
             objects.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadUnshared">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object ReadUnshared ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object ReadUnshared() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readUnshared", "()Ljava/lang/Object;", "GetReadUnsharedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads the next unshared object from the source stream.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Reads the next unshared object from the source stream.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/ObjectInputStream.html#readUnshared()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassNotFoundException">if the class of one of the objects in the object graph cannot
             be found.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.</exception>
        <altmember cref="M:Java.IO.ObjectOutputStream.WriteUnshared(Java.Lang.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ReadUnsignedByte">
      <MemberSignature Language="C#" Value="public virtual int ReadUnsignedByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadUnsignedByte() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readUnsignedByte", "()I", "GetReadUnsignedByteHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads an unsigned byte (8 bit) from the source stream.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Reads an unsigned byte (8 bit) from the source stream.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/ObjectInputStream.html#readUnsignedByte()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
             request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadUnsignedShort">
      <MemberSignature Language="C#" Value="public virtual int ReadUnsignedShort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadUnsignedShort() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readUnsignedShort", "()I", "GetReadUnsignedShortHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads an unsigned short (16 bit) from the source stream.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Reads an unsigned short (16 bit) from the source stream.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/ObjectInputStream.html#readUnsignedShort()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
             request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadUTF">
      <MemberSignature Language="C#" Value="public virtual string ReadUTF ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadUTF() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readUTF", "()Ljava/lang/String;", "GetReadUTFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a string encoded in <c><see cref="T:Java.IO.IDataInput" /></c> from the
 source stream.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Reads a string encoded in <c><see cref="T:Java.IO.IDataInput" /></c> from the
 source stream.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/ObjectInputStream.html#readUTF()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
             request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterValidation">
      <MemberSignature Language="C#" Value="public virtual void RegisterValidation (Java.IO.IObjectInputValidation object, int priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterValidation(class Java.IO.IObjectInputValidation object, int32 priority) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerValidation", "(Ljava/io/ObjectInputValidation;I)V", "GetRegisterValidation_Ljava_io_ObjectInputValidation_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="object" Type="Java.IO.IObjectInputValidation" />
        <Parameter Name="priority" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="object">an object that can validate itself by receiving a callback.</param>
        <param name="priority">the validator's priority.</param>
        <summary>Registers a callback for post-deserialization validation of objects.</summary>
        <remarks><para tool="javadoc-to-mdoc">Registers a callback for post-deserialization validation of objects. It
 allows to perform additional consistency checks before the <c>readObject()</c> method of this class returns its result to the caller. This
 method can only be called from within the <c>readObject()</c> method of
 a class that implements "special" deserialization rules. It can be called
 multiple times. Validation callbacks are then done in order of decreasing
 priority, defined by <c>priority</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/ObjectInputStream.html#registerValidation(java.io.ObjectInputValidation, int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.InvalidObjectException">if <c>object</c> is <c>null</c>.</exception>
        <exception cref="T:Java.IO.NotActiveException">if this stream is currently not reading objects. In that
             case, calling this method is not allowed.</exception>
        <altmember cref="M:Java.IO.IObjectInputValidation.ValidateObject" />
      </Docs>
    </Member>
    <Member MemberName="ResolveClass">
      <MemberSignature Language="C#" Value="protected virtual Java.Lang.Class ResolveClass (Java.IO.ObjectStreamClass osClass);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Lang.Class ResolveClass(class Java.IO.ObjectStreamClass osClass) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resolveClass", "(Ljava/io/ObjectStreamClass;)Ljava/lang/Class;", "GetResolveClass_Ljava_io_ObjectStreamClass_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="osClass" Type="Java.IO.ObjectStreamClass" />
      </Parameters>
      <Docs>
        <param name="osClass">an ObjectStreamClass read from the source stream.</param>
        <summary>Loads the Java class corresponding to the class descriptor <c>osClass</c> that has just been read from the source stream.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Loads the Java class corresponding to the class descriptor <c>osClass</c> that has just been read from the source stream.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/ObjectInputStream.html#resolveClass(java.io.ObjectStreamClass)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassNotFoundException">if the class for an object cannot be found.</exception>
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while creating the class.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveObject">
      <MemberSignature Language="C#" Value="protected virtual Java.Lang.Object ResolveObject (Java.Lang.Object object);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Lang.Object ResolveObject(class Java.Lang.Object object) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resolveObject", "(Ljava/lang/Object;)Ljava/lang/Object;", "GetResolveObject_Ljava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="object" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="object">the original object for which a replacement may be defined.</param>
        <summary>Allows trusted subclasses to substitute the specified original <c>object</c> with a new object.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Allows trusted subclasses to substitute the specified original <c>object</c> with a new object. Object substitution has to be activated first
 with calling <c>enableResolveObject(true)</c>. This implementation just
 returns <c>object</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/ObjectInputStream.html#resolveObject(java.lang.Object)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if any I/O error occurs while creating the replacement
             object.</exception>
        <altmember cref="M:Java.IO.ObjectInputStream.EnableResolveObject(System.Boolean)" />
        <altmember cref="M:Java.IO.ObjectOutputStream.EnableReplaceObject(System.Boolean)" />
        <altmember cref="M:Java.IO.ObjectOutputStream.ReplaceObject(Java.Lang.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ResolveProxyClass">
      <MemberSignature Language="C#" Value="protected virtual Java.Lang.Class ResolveProxyClass (string[] interfaceNames);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Lang.Class ResolveProxyClass(string[] interfaceNames) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resolveProxyClass", "([Ljava/lang/String;)Ljava/lang/Class;", "GetResolveProxyClass_arrayLjava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interfaceNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="interfaceNames">the interfaces used to create the proxy class.</param>
        <summary>Creates the proxy class that implements the interfaces specified in
 <c>interfaceNames</c>.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Creates the proxy class that implements the interfaces specified in
 <c>interfaceNames</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/ObjectInputStream.html#resolveProxyClass(java.lang.String[])" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassNotFoundException">if the proxy class or any of the specified interfaces cannot
             be created.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.</exception>
      </Docs>
    </Member>
    <Member MemberName="SkipBytes">
      <MemberSignature Language="C#" Value="public virtual int SkipBytes (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SkipBytes(int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("skipBytes", "(I)I", "GetSkipBytes_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">the number of bytes to skip.</param>
        <summary>Skips <c>length</c> bytes on the source stream.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Skips <c>length</c> bytes on the source stream. This method should not
 be used to skip bytes at any arbitrary position, just when reading
 primitive data types (int, char etc).</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/io/ObjectInputStream.html#skipBytes(int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while skipping bytes on the source stream.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the source stream is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
