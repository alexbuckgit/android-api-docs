<Type Name="ObjectInputStream" FullName="Java.IO.ObjectInputStream">
  <TypeSignature Language="C#" Value="public class ObjectInputStream : Java.IO.InputStream, IDisposable, Java.IO.IObjectInput" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectInputStream extends Java.IO.InputStream implements class Android.Runtime.IJavaObject, class Java.IO.IDataInput, class Java.IO.IObjectInput, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.IO.ObjectInputStream" />
  <TypeSignature Language="F#" Value="type ObjectInputStream = class&#xA;    inherit InputStream&#xA;    interface IObjectInput&#xA;    interface IDataInput&#xA;    interface IJavaObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.IO.InputStream</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.IO.IDataInput</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.IO.IObjectInput</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/io/ObjectInputStream", ApiSince=1, DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary tool="true">A specialized <c><see cref="T:Java.IO.InputStream" /></c> that is able to read (deserialize) Java
 objects as well as primitive data types (int, byte, char etc.</summary>
    <remarks>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ObjectInputStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Constructs a new ObjectInputStream.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs when creating this stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectInputStream (System.IO.Stream in);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream in) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.#ctor(System.IO.Stream)" />
      <MemberSignature Language="F#" Value="new Java.IO.ObjectInputStream : System.IO.Stream -&gt; Java.IO.ObjectInputStream" Usage="new Java.IO.ObjectInputStream in" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/InputStream;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="in" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="in">To be added.</param>
        <summary>Constructs a new ObjectInputStream that reads from the InputStream
 <c>input</c>.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while reading the stream header.</exception>
        <exception cref="T:Java.IO.StreamCorruptedException">if the source stream does not contain serialized objects that
             can be read.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ObjectInputStream (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.IO.ObjectInputStream : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.IO.ObjectInputStream" Usage="new Java.IO.ObjectInputStream (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultReadObject">
      <MemberSignature Language="C#" Value="public virtual void DefaultReadObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DefaultReadObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.DefaultReadObject" />
      <MemberSignature Language="F#" Value="abstract member DefaultReadObject : unit -&gt; unit&#xA;override this.DefaultReadObject : unit -&gt; unit" Usage="objectInputStream.DefaultReadObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("defaultReadObject", "()V", "GetDefaultReadObjectHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Default method to read objects from this stream.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassNotFoundException">if the object's class cannot be found.</exception>
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while reading the object data.</exception>
        <exception cref="T:Java.IO.NotActiveException">if this method is not called from <c>readObject()</c>.</exception>
        <altmember cref="M:Java.IO.ObjectOutputStream.DefaultWriteObject" />
      </Docs>
    </Member>
    <Member MemberName="EnableResolveObject">
      <MemberSignature Language="C#" Value="protected virtual bool EnableResolveObject (bool enable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool EnableResolveObject(bool enable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.EnableResolveObject(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member EnableResolveObject : bool -&gt; bool&#xA;override this.EnableResolveObject : bool -&gt; bool" Usage="objectInputStream.EnableResolveObject enable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("enableResolveObject", "(Z)Z", "GetEnableResolveObject_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enable">
          <c>true</c> to enable object replacement; <c>false</c> to
            disable it.</param>
        <summary>Enables object replacement for this stream.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.IO.ObjectInputStream.ResolveObject(Java.Lang.Object)" />
        <altmember cref="M:Java.IO.ObjectOutputStream.EnableReplaceObject(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.IO.ObjectInputStream.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.IO.ObjectInputStream.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.Read" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; int" Usage="objectInputStream.Read " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.IObjectInput.Read</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("read", "()I", "GetReadHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a single byte from the source stream and returns it as an integer
 in the range from 0 to 255.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from this stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadBoolean">
      <MemberSignature Language="C#" Value="public virtual bool ReadBoolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadBoolean() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadBoolean" />
      <MemberSignature Language="F#" Value="abstract member ReadBoolean : unit -&gt; bool&#xA;override this.ReadBoolean : unit -&gt; bool" Usage="objectInputStream.ReadBoolean " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.IDataInput.ReadBoolean</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readBoolean", "()Z", "GetReadBooleanHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a boolean from the source stream.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
             request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public virtual sbyte ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int8 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadByte" />
      <MemberSignature Language="F#" Value="abstract member ReadByte : unit -&gt; sbyte&#xA;override this.ReadByte : unit -&gt; sbyte" Usage="objectInputStream.ReadByte " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.IDataInput.ReadByte</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readByte", "()B", "GetReadByteHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a byte (8 bit) from the source stream.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
             request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadChar">
      <MemberSignature Language="C#" Value="public virtual char ReadChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char ReadChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadChar" />
      <MemberSignature Language="F#" Value="abstract member ReadChar : unit -&gt; char&#xA;override this.ReadChar : unit -&gt; char" Usage="objectInputStream.ReadChar " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.IDataInput.ReadChar</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readChar", "()C", "GetReadCharHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a character (16 bit) from the source stream.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
             request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadClassDescriptor">
      <MemberSignature Language="C#" Value="protected virtual Java.IO.ObjectStreamClass ReadClassDescriptor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.IO.ObjectStreamClass ReadClassDescriptor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadClassDescriptor" />
      <MemberSignature Language="F#" Value="abstract member ReadClassDescriptor : unit -&gt; Java.IO.ObjectStreamClass&#xA;override this.ReadClassDescriptor : unit -&gt; Java.IO.ObjectStreamClass" Usage="objectInputStream.ReadClassDescriptor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readClassDescriptor", "()Ljava/io/ObjectStreamClass;", "GetReadClassDescriptorHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.ObjectStreamClass</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a class descriptor from the source stream.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassNotFoundException">if a class for one of the objects cannot be found.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadDouble">
      <MemberSignature Language="C#" Value="public virtual double ReadDouble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ReadDouble() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadDouble" />
      <MemberSignature Language="F#" Value="abstract member ReadDouble : unit -&gt; double&#xA;override this.ReadDouble : unit -&gt; double" Usage="objectInputStream.ReadDouble " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.IDataInput.ReadDouble</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readDouble", "()D", "GetReadDoubleHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a double (64 bit) from the source stream.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
             request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadFields">
      <MemberSignature Language="C#" Value="public virtual Java.IO.ObjectInputStream.GetField ReadFields ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.IO.ObjectInputStream/GetField ReadFields() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadFields" />
      <MemberSignature Language="F#" Value="abstract member ReadFields : unit -&gt; Java.IO.ObjectInputStream.GetField&#xA;override this.ReadFields : unit -&gt; Java.IO.ObjectInputStream.GetField" Usage="objectInputStream.ReadFields " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readFields", "()Ljava/io/ObjectInputStream$GetField;", "GetReadFieldsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.ObjectInputStream+GetField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads the persistent fields of the object that is currently being read
 from the source stream.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassNotFoundException">if the class of an object being deserialized can not be
             found.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from this stream.</exception>
        <exception cref="T:Java.IO.NotActiveException">if this stream is currently not reading an object.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadFloat">
      <MemberSignature Language="C#" Value="public virtual float ReadFloat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 ReadFloat() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadFloat" />
      <MemberSignature Language="F#" Value="abstract member ReadFloat : unit -&gt; single&#xA;override this.ReadFloat : unit -&gt; single" Usage="objectInputStream.ReadFloat " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.IDataInput.ReadFloat</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readFloat", "()F", "GetReadFloatHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a float (32 bit) from the source stream.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
             request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadFully">
      <MemberSignature Language="C#" Value="public virtual void ReadFully (byte[] buf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadFully(unsigned int8[] buf) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadFully(System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member ReadFully : byte[] -&gt; unit&#xA;override this.ReadFully : byte[] -&gt; unit" Usage="objectInputStream.ReadFully buf" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.IDataInput.ReadFully(System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readFully", "([B)V", "GetReadFully_arrayBHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buf" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buf">To be added.</param>
        <summary>Reads bytes from the source stream into the byte array <c>dst</c>.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
             request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadFully">
      <MemberSignature Language="C#" Value="public virtual void ReadFully (byte[] buf, int off, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadFully(unsigned int8[] buf, int32 off, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadFully(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member ReadFully : byte[] * int * int -&gt; unit&#xA;override this.ReadFully : byte[] * int * int -&gt; unit" Usage="objectInputStream.ReadFully (buf, off, len)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.IDataInput.ReadFully(System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readFully", "([BII)V", "GetReadFully_arrayBIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buf" Type="System.Byte[]" />
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buf">To be added.</param>
        <param name="off">To be added.</param>
        <param name="len">To be added.</param>
        <summary>Reads <c>byteCount</c> bytes from the source stream into the byte array <c>dst</c>.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
             request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadInt">
      <MemberSignature Language="C#" Value="public virtual int ReadInt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadInt() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadInt" />
      <MemberSignature Language="F#" Value="abstract member ReadInt : unit -&gt; int&#xA;override this.ReadInt : unit -&gt; int" Usage="objectInputStream.ReadInt " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.IDataInput.ReadInt</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readInt", "()I", "GetReadIntHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads an integer (32 bit) from the source stream.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
             request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public virtual string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadLine" />
      <MemberSignature Language="F#" Value="abstract member ReadLine : unit -&gt; string&#xA;override this.ReadLine : unit -&gt; string" Usage="objectInputStream.ReadLine " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.IDataInput.ReadLine</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readLine", "()Ljava/lang/String;", "GetReadLineHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads the next line from the source stream.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLong">
      <MemberSignature Language="C#" Value="public virtual long ReadLong ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 ReadLong() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadLong" />
      <MemberSignature Language="F#" Value="abstract member ReadLong : unit -&gt; int64&#xA;override this.ReadLong : unit -&gt; int64" Usage="objectInputStream.ReadLong " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.IDataInput.ReadLong</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readLong", "()J", "GetReadLongHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a long (64 bit) from the source stream.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
             request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadObject">
      <MemberSignature Language="C#" Value="public Java.Lang.Object ReadObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object ReadObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadObject" />
      <MemberSignature Language="F#" Value="abstract member ReadObject : unit -&gt; Java.Lang.Object&#xA;override this.ReadObject : unit -&gt; Java.Lang.Object" Usage="objectInputStream.ReadObject " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.IObjectInput.ReadObject</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readObject", "()Ljava/lang/Object;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads the next object from the source stream.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassNotFoundException">if the class of one of the objects in the object graph cannot
             be found.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.</exception>
        <exception cref="T:Java.IO.OptionalDataException">if primitive data types were found instead of an object.</exception>
        <altmember cref="M:Java.IO.ObjectOutputStream.WriteObject(Java.Lang.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ReadObjectOverride">
      <MemberSignature Language="C#" Value="protected virtual Java.Lang.Object ReadObjectOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Lang.Object ReadObjectOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadObjectOverride" />
      <MemberSignature Language="F#" Value="abstract member ReadObjectOverride : unit -&gt; Java.Lang.Object&#xA;override this.ReadObjectOverride : unit -&gt; Java.Lang.Object" Usage="objectInputStream.ReadObjectOverride " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readObjectOverride", "()Ljava/lang/Object;", "GetReadObjectOverrideHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Method to be overridden by subclasses to read the next object from the
 source stream.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassNotFoundException">if the class of one of the objects in the object graph cannot
             be found.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.</exception>
        <exception cref="T:Java.IO.OptionalDataException">if primitive data types were found instead of an object.</exception>
        <altmember cref="M:Java.IO.ObjectOutputStream.WriteObjectOverride(Java.Lang.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ReadShort">
      <MemberSignature Language="C#" Value="public virtual short ReadShort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int16 ReadShort() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadShort" />
      <MemberSignature Language="F#" Value="abstract member ReadShort : unit -&gt; int16&#xA;override this.ReadShort : unit -&gt; int16" Usage="objectInputStream.ReadShort " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.IDataInput.ReadShort</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readShort", "()S", "GetReadShortHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a short (16 bit) from the source stream.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadStreamHeader">
      <MemberSignature Language="C#" Value="protected virtual void ReadStreamHeader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ReadStreamHeader() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadStreamHeader" />
      <MemberSignature Language="F#" Value="abstract member ReadStreamHeader : unit -&gt; unit&#xA;override this.ReadStreamHeader : unit -&gt; unit" Usage="objectInputStream.ReadStreamHeader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readStreamHeader", "()V", "GetReadStreamHeaderHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads and validates the ObjectInputStream header from the source stream.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.</exception>
        <exception cref="T:Java.IO.StreamCorruptedException">if the source stream does not contain readable serialized
             objects.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadUnshared">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object ReadUnshared ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object ReadUnshared() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadUnshared" />
      <MemberSignature Language="F#" Value="abstract member ReadUnshared : unit -&gt; Java.Lang.Object&#xA;override this.ReadUnshared : unit -&gt; Java.Lang.Object" Usage="objectInputStream.ReadUnshared " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readUnshared", "()Ljava/lang/Object;", "GetReadUnsharedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads the next unshared object from the source stream.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassNotFoundException">if the class of one of the objects in the object graph cannot
             be found.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.</exception>
        <altmember cref="M:Java.IO.ObjectOutputStream.WriteUnshared(Java.Lang.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ReadUnsignedByte">
      <MemberSignature Language="C#" Value="public virtual int ReadUnsignedByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadUnsignedByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadUnsignedByte" />
      <MemberSignature Language="F#" Value="abstract member ReadUnsignedByte : unit -&gt; int&#xA;override this.ReadUnsignedByte : unit -&gt; int" Usage="objectInputStream.ReadUnsignedByte " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.IDataInput.ReadUnsignedByte</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readUnsignedByte", "()I", "GetReadUnsignedByteHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads an unsigned byte (8 bit) from the source stream.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
             request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadUnsignedShort">
      <MemberSignature Language="C#" Value="public virtual int ReadUnsignedShort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadUnsignedShort() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadUnsignedShort" />
      <MemberSignature Language="F#" Value="abstract member ReadUnsignedShort : unit -&gt; int&#xA;override this.ReadUnsignedShort : unit -&gt; int" Usage="objectInputStream.ReadUnsignedShort " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.IDataInput.ReadUnsignedShort</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readUnsignedShort", "()I", "GetReadUnsignedShortHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads an unsigned short (16 bit) from the source stream.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
             request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadUTF">
      <MemberSignature Language="C#" Value="public virtual string ReadUTF ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadUTF() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ReadUTF" />
      <MemberSignature Language="F#" Value="abstract member ReadUTF : unit -&gt; string&#xA;override this.ReadUTF : unit -&gt; string" Usage="objectInputStream.ReadUTF " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.IDataInput.ReadUTF</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readUTF", "()Ljava/lang/String;", "GetReadUTFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads a string encoded in <c><see cref="T:Java.IO.IDataInput" /></c> from the
 source stream.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.EOFException">if the end of the input is reached before the read
             request can be satisfied.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.
</exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterValidation">
      <MemberSignature Language="C#" Value="public virtual void RegisterValidation (Java.IO.IObjectInputValidation obj, int prio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterValidation(class Java.IO.IObjectInputValidation obj, int32 prio) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.RegisterValidation(Java.IO.IObjectInputValidation,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member RegisterValidation : Java.IO.IObjectInputValidation * int -&gt; unit&#xA;override this.RegisterValidation : Java.IO.IObjectInputValidation * int -&gt; unit" Usage="objectInputStream.RegisterValidation (obj, prio)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerValidation", "(Ljava/io/ObjectInputValidation;I)V", "GetRegisterValidation_Ljava_io_ObjectInputValidation_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Java.IO.IObjectInputValidation" />
        <Parameter Name="prio" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <param name="prio">To be added.</param>
        <summary>Registers a callback for post-deserialization validation of objects.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.InvalidObjectException">if <c>object</c> is <c>null</c>.</exception>
        <exception cref="T:Java.IO.NotActiveException">if this stream is currently not reading objects. In that
             case, calling this method is not allowed.</exception>
        <altmember cref="M:Java.IO.IObjectInputValidation.ValidateObject" />
      </Docs>
    </Member>
    <Member MemberName="ResolveClass">
      <MemberSignature Language="C#" Value="protected virtual Java.Lang.Class ResolveClass (Java.IO.ObjectStreamClass desc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Lang.Class ResolveClass(class Java.IO.ObjectStreamClass desc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ResolveClass(Java.IO.ObjectStreamClass)" />
      <MemberSignature Language="F#" Value="abstract member ResolveClass : Java.IO.ObjectStreamClass -&gt; Java.Lang.Class&#xA;override this.ResolveClass : Java.IO.ObjectStreamClass -&gt; Java.Lang.Class" Usage="objectInputStream.ResolveClass desc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resolveClass", "(Ljava/io/ObjectStreamClass;)Ljava/lang/Class;", "GetResolveClass_Ljava_io_ObjectStreamClass_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="desc" Type="Java.IO.ObjectStreamClass" />
      </Parameters>
      <Docs>
        <param name="desc">To be added.</param>
        <summary>Loads the Java class corresponding to the class descriptor <c>osClass</c> that has just been read from the source stream.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassNotFoundException">if the class for an object cannot be found.</exception>
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while creating the class.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveObject">
      <MemberSignature Language="C#" Value="protected virtual Java.Lang.Object ResolveObject (Java.Lang.Object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Lang.Object ResolveObject(class Java.Lang.Object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ResolveObject(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member ResolveObject : Java.Lang.Object -&gt; Java.Lang.Object&#xA;override this.ResolveObject : Java.Lang.Object -&gt; Java.Lang.Object" Usage="objectInputStream.ResolveObject obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resolveObject", "(Ljava/lang/Object;)Ljava/lang/Object;", "GetResolveObject_Ljava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>Allows trusted subclasses to substitute the specified original <c>object</c> with a new object.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if any I/O error occurs while creating the replacement
             object.</exception>
        <altmember cref="M:Java.IO.ObjectInputStream.EnableResolveObject(System.Boolean)" />
        <altmember cref="M:Java.IO.ObjectOutputStream.EnableReplaceObject(System.Boolean)" />
        <altmember cref="M:Java.IO.ObjectOutputStream.ReplaceObject(Java.Lang.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ResolveProxyClass">
      <MemberSignature Language="C#" Value="protected virtual Java.Lang.Class ResolveProxyClass (string[] interfaces);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Lang.Class ResolveProxyClass(string[] interfaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.ResolveProxyClass(System.String[])" />
      <MemberSignature Language="F#" Value="abstract member ResolveProxyClass : string[] -&gt; Java.Lang.Class&#xA;override this.ResolveProxyClass : string[] -&gt; Java.Lang.Class" Usage="objectInputStream.ResolveProxyClass interfaces" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resolveProxyClass", "([Ljava/lang/String;)Ljava/lang/Class;", "GetResolveProxyClass_arrayLjava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interfaces" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="interfaces">To be added.</param>
        <summary>Creates the proxy class that implements the interfaces specified in
 <c>interfaceNames</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassNotFoundException">if the proxy class or any of the specified interfaces cannot
             be created.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while reading from the source stream.</exception>
      </Docs>
    </Member>
    <Member MemberName="SkipBytes">
      <MemberSignature Language="C#" Value="public virtual int SkipBytes (int len);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SkipBytes(int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.ObjectInputStream.SkipBytes(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SkipBytes : int -&gt; int&#xA;override this.SkipBytes : int -&gt; int" Usage="objectInputStream.SkipBytes len" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.IDataInput.SkipBytes(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("skipBytes", "(I)I", "GetSkipBytes_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="len">To be added.</param>
        <summary>Skips <c>length</c> bytes on the source stream.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while skipping bytes on the source stream.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the source stream is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.IO.ObjectInputStream.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.IO.ObjectInputStream.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.IO.ObjectInputStream.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.IO.ObjectInputStream.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
