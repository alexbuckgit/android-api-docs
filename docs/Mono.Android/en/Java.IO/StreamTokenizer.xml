<Type Name="StreamTokenizer" FullName="Java.IO.StreamTokenizer">
  <TypeSignature Language="C#" Value="public class StreamTokenizer : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StreamTokenizer extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Java.IO.StreamTokenizer" />
  <TypeSignature Language="F#" Value="type StreamTokenizer = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/io/StreamTokenizer", ApiSince=1, DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Parses a stream into a set of defined tokens, one at a time.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/io/StreamTokenizer" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamTokenizer (Java.IO.Reader r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.IO.Reader r) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.StreamTokenizer.#ctor(Java.IO.Reader)" />
      <MemberSignature Language="F#" Value="new Java.IO.StreamTokenizer : Java.IO.Reader -&gt; Java.IO.StreamTokenizer" Usage="new Java.IO.StreamTokenizer r" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/Reader;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="r" Type="Java.IO.Reader" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <summary>Constructs a new <c>StreamTokenizer</c> with <c>r</c> as source reader.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamTokenizer (System.IO.Stream is);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream is) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.StreamTokenizer.#ctor(System.IO.Stream)" />
      <MemberSignature Language="F#" Value="new Java.IO.StreamTokenizer : System.IO.Stream -&gt; Java.IO.StreamTokenizer" Usage="new Java.IO.StreamTokenizer is" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/InputStream;)V", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="is" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="is">To be added.</param>
        <summary>Constructs a new <c>StreamTokenizer</c> with <c>is</c> as source input
 stream.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>is</c> is <c>null</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected StreamTokenizer (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.StreamTokenizer.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.IO.StreamTokenizer : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.IO.StreamTokenizer" Usage="new Java.IO.StreamTokenizer (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommentChar">
      <MemberSignature Language="C#" Value="public virtual void CommentChar (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommentChar(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.StreamTokenizer.CommentChar(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member CommentChar : int -&gt; unit&#xA;override this.CommentChar : int -&gt; unit" Usage="streamTokenizer.CommentChar ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("commentChar", "(I)V", "GetCommentChar_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be considered a comment character.
</param>
        <summary>Specifies that the character <c>ch</c> shall be treated as a comment
 character.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EolIsSignificant">
      <MemberSignature Language="C#" Value="public virtual void EolIsSignificant (bool flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EolIsSignificant(bool flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.StreamTokenizer.EolIsSignificant(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member EolIsSignificant : bool -&gt; unit&#xA;override this.EolIsSignificant : bool -&gt; unit" Usage="streamTokenizer.EolIsSignificant flag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("eolIsSignificant", "(Z)V", "GetEolIsSignificant_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="flag">
          <c>true</c> if EOL is significant, <c>false</c> otherwise.
</param>
        <summary>Specifies whether the end of a line is significant and should be returned
 as <c>TT_EOF</c> in <c>ttype</c> by this tokenizer.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.IO.StreamTokenizer.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.IO.StreamTokenizer.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Lineno">
      <MemberSignature Language="C#" Value="public virtual int Lineno ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Lineno() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.StreamTokenizer.Lineno" />
      <MemberSignature Language="F#" Value="abstract member Lineno : unit -&gt; int&#xA;override this.Lineno : unit -&gt; int" Usage="streamTokenizer.Lineno " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("lineno", "()I", "GetLinenoHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the current line number.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LowerCaseMode">
      <MemberSignature Language="C#" Value="public virtual void LowerCaseMode (bool fl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LowerCaseMode(bool fl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.StreamTokenizer.LowerCaseMode(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member LowerCaseMode : bool -&gt; unit&#xA;override this.LowerCaseMode : bool -&gt; unit" Usage="streamTokenizer.LowerCaseMode fl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("lowerCaseMode", "(Z)V", "GetLowerCaseMode_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fl" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fl">To be added.</param>
        <summary>Specifies whether word tokens should be converted to lower case when they
 are stored in <c>sval</c>.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NextToken">
      <MemberSignature Language="C#" Value="public virtual Java.IO.TokenType NextToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Java.IO.TokenType NextToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.StreamTokenizer.NextToken" />
      <MemberSignature Language="F#" Value="abstract member NextToken : unit -&gt; Java.IO.TokenType&#xA;override this.NextToken : unit -&gt; Java.IO.TokenType" Usage="streamTokenizer.NextToken " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("nextToken", "()I", "GetNextTokenHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.TokenType</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Parses the next token from this tokenizer's source stream or reader.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while parsing the next token.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Nval">
      <MemberSignature Language="C#" Value="public double Nval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Nval" />
      <MemberSignature Language="DocId" Value="P:Java.IO.StreamTokenizer.Nval" />
      <MemberSignature Language="F#" Value="member this.Nval : double with get, set" Usage="Java.IO.StreamTokenizer.Nval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("nval")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contains a number if the current token is a number (<c>ttype</c> ==
 <c>TT_NUMBER</c>).</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OrdinaryChar">
      <MemberSignature Language="C#" Value="public virtual void OrdinaryChar (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrdinaryChar(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.StreamTokenizer.OrdinaryChar(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OrdinaryChar : int -&gt; unit&#xA;override this.OrdinaryChar : int -&gt; unit" Usage="streamTokenizer.OrdinaryChar ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ordinaryChar", "(I)V", "GetOrdinaryChar_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be considered an ordinary character.
</param>
        <summary>Specifies that the character <c>ch</c> shall be treated as an ordinary
 character by this tokenizer.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OrdinaryChars">
      <MemberSignature Language="C#" Value="public virtual void OrdinaryChars (int low, int hi);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrdinaryChars(int32 low, int32 hi) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.StreamTokenizer.OrdinaryChars(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OrdinaryChars : int * int -&gt; unit&#xA;override this.OrdinaryChars : int * int -&gt; unit" Usage="streamTokenizer.OrdinaryChars (low, hi)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ordinaryChars", "(II)V", "GetOrdinaryChars_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="low" Type="System.Int32" />
        <Parameter Name="hi" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="low">the first character in the range of ordinary characters.</param>
        <param name="hi">the last character in the range of ordinary characters.
</param>
        <summary>Specifies that the characters in the range from <c>low</c> to <c>hi</c>
 shall be treated as an ordinary character by this tokenizer.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ParseNumbers">
      <MemberSignature Language="C#" Value="public virtual void ParseNumbers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ParseNumbers() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.StreamTokenizer.ParseNumbers" />
      <MemberSignature Language="F#" Value="abstract member ParseNumbers : unit -&gt; unit&#xA;override this.ParseNumbers : unit -&gt; unit" Usage="streamTokenizer.ParseNumbers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parseNumbers", "()V", "GetParseNumbersHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Specifies that this tokenizer shall parse numbers.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PushBack">
      <MemberSignature Language="C#" Value="public virtual void PushBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PushBack() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.StreamTokenizer.PushBack" />
      <MemberSignature Language="F#" Value="abstract member PushBack : unit -&gt; unit&#xA;override this.PushBack : unit -&gt; unit" Usage="streamTokenizer.PushBack " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("pushBack", "()V", "GetPushBackHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indicates that the current token should be pushed back and returned again
 the next time <c>nextToken()</c> is called.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public virtual void QuoteChar (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void QuoteChar(int32 ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.StreamTokenizer.QuoteChar(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member QuoteChar : int -&gt; unit&#xA;override this.QuoteChar : int -&gt; unit" Usage="streamTokenizer.QuoteChar ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("quoteChar", "(I)V", "GetQuoteChar_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be considered a quote character.
</param>
        <summary>Specifies that the character <c>ch</c> shall be treated as a quote
 character.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ResetSyntax">
      <MemberSignature Language="C#" Value="public virtual void ResetSyntax ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetSyntax() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.StreamTokenizer.ResetSyntax" />
      <MemberSignature Language="F#" Value="abstract member ResetSyntax : unit -&gt; unit&#xA;override this.ResetSyntax : unit -&gt; unit" Usage="streamTokenizer.ResetSyntax " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resetSyntax", "()V", "GetResetSyntaxHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Specifies that all characters shall be treated as ordinary characters.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SlashSlashComments">
      <MemberSignature Language="C#" Value="public virtual void SlashSlashComments (bool flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SlashSlashComments(bool flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.StreamTokenizer.SlashSlashComments(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SlashSlashComments : bool -&gt; unit&#xA;override this.SlashSlashComments : bool -&gt; unit" Usage="streamTokenizer.SlashSlashComments flag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("slashSlashComments", "(Z)V", "GetSlashSlashComments_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="flag">
          <c>true</c> if <c>//</c> should be recognized as the start
            of a comment, <c>false</c> otherwise.
</param>
        <summary>Specifies whether "slash-slash" (C++-style) comments shall be recognized.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SlashStarComments">
      <MemberSignature Language="C#" Value="public virtual void SlashStarComments (bool flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SlashStarComments(bool flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.StreamTokenizer.SlashStarComments(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SlashStarComments : bool -&gt; unit&#xA;override this.SlashStarComments : bool -&gt; unit" Usage="streamTokenizer.SlashStarComments flag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("slashStarComments", "(Z)V", "GetSlashStarComments_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="flag">
          <c>true</c> if <c>/*</c> should be recognized as the start
            of a comment, <c>false</c> otherwise.
</param>
        <summary>Specifies whether "slash-star" (C-style) comments shall be recognized.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Sval">
      <MemberSignature Language="C#" Value="public string Sval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Sval" />
      <MemberSignature Language="DocId" Value="P:Java.IO.StreamTokenizer.Sval" />
      <MemberSignature Language="F#" Value="member this.Sval : string with get, set" Usage="Java.IO.StreamTokenizer.Sval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sval")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contains a string if the current token is a word (<c>ttype</c> ==
 <c>TT_WORD</c>).</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.IO.StreamTokenizer.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.IO.StreamTokenizer.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.IO.StreamTokenizer.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.IO.StreamTokenizer.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TtEof">
      <MemberSignature Language="C#" Value="public const Java.IO.TokenType TtEof = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.IO.TokenType TtEof = (-1)" />
      <MemberSignature Language="DocId" Value="F:Java.IO.StreamTokenizer.TtEof" />
      <MemberSignature Language="F#" Value="val mutable TtEof : Java.IO.TokenType" Usage="Java.IO.StreamTokenizer.TtEof" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TT_EOF")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Java.IO.TokenType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.TokenType</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>The constant representing the end of the stream.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TtEol">
      <MemberSignature Language="C#" Value="public const Java.IO.TokenType TtEol = 10;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.IO.TokenType TtEol = (10)" />
      <MemberSignature Language="DocId" Value="F:Java.IO.StreamTokenizer.TtEol" />
      <MemberSignature Language="F#" Value="val mutable TtEol : Java.IO.TokenType" Usage="Java.IO.StreamTokenizer.TtEol" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TT_EOL")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Java.IO.TokenType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.TokenType</ReturnType>
      </ReturnValue>
      <MemberValue>10</MemberValue>
      <Docs>
        <summary>The constant representing the end of the line.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TtNumber">
      <MemberSignature Language="C#" Value="public const Java.IO.TokenType TtNumber = -2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.IO.TokenType TtNumber = (-2)" />
      <MemberSignature Language="DocId" Value="F:Java.IO.StreamTokenizer.TtNumber" />
      <MemberSignature Language="F#" Value="val mutable TtNumber : Java.IO.TokenType" Usage="Java.IO.StreamTokenizer.TtNumber" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TT_NUMBER")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Java.IO.TokenType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.TokenType</ReturnType>
      </ReturnValue>
      <MemberValue>-2</MemberValue>
      <Docs>
        <summary>The constant representing a number token.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TtWord">
      <MemberSignature Language="C#" Value="public const Java.IO.TokenType TtWord = -3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.IO.TokenType TtWord = (-3)" />
      <MemberSignature Language="DocId" Value="F:Java.IO.StreamTokenizer.TtWord" />
      <MemberSignature Language="F#" Value="val mutable TtWord : Java.IO.TokenType" Usage="Java.IO.StreamTokenizer.TtWord" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TT_WORD")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Java.IO.TokenType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.TokenType</ReturnType>
      </ReturnValue>
      <MemberValue>-3</MemberValue>
      <Docs>
        <summary>The constant representing a word token.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Ttype">
      <MemberSignature Language="C#" Value="public Java.IO.TokenType Ttype { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Java.IO.TokenType Ttype" />
      <MemberSignature Language="DocId" Value="P:Java.IO.StreamTokenizer.Ttype" />
      <MemberSignature Language="F#" Value="member this.Ttype : Java.IO.TokenType with get, set" Usage="Java.IO.StreamTokenizer.Ttype" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ttype")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.TokenType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>After calling <c>nextToken()</c>, <c>ttype</c> contains the type of
 token that has been read.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WhitespaceChars">
      <MemberSignature Language="C#" Value="public virtual void WhitespaceChars (int low, int hi);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WhitespaceChars(int32 low, int32 hi) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.StreamTokenizer.WhitespaceChars(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member WhitespaceChars : int * int -&gt; unit&#xA;override this.WhitespaceChars : int * int -&gt; unit" Usage="streamTokenizer.WhitespaceChars (low, hi)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("whitespaceChars", "(II)V", "GetWhitespaceChars_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="low" Type="System.Int32" />
        <Parameter Name="hi" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="low">the first character in the range of whitespace characters.</param>
        <param name="hi">the last character in the range of whitespace characters.
</param>
        <summary>Specifies that the characters in the range from <c>low</c> to <c>hi</c>
 shall be treated as whitespace characters by this tokenizer.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WordChars">
      <MemberSignature Language="C#" Value="public virtual void WordChars (int low, int hi);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WordChars(int32 low, int32 hi) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.IO.StreamTokenizer.WordChars(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member WordChars : int * int -&gt; unit&#xA;override this.WordChars : int * int -&gt; unit" Usage="streamTokenizer.WordChars (low, hi)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("wordChars", "(II)V", "GetWordChars_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="low" Type="System.Int32" />
        <Parameter Name="hi" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="low">the first character in the range of word characters.</param>
        <param name="hi">the last character in the range of word characters.
</param>
        <summary>Specifies that the characters in the range from <c>low</c> to <c>hi</c>
 shall be treated as word characters by this tokenizer.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
