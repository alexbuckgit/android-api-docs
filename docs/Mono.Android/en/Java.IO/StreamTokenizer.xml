<Type Name="StreamTokenizer" FullName="Java.IO.StreamTokenizer">
  <TypeSignature Language="C#" Value="public class StreamTokenizer : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StreamTokenizer extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/io/StreamTokenizer", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Parses a stream into a set of defined tokens, one at a time.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Parses a stream into a set of defined tokens, one at a time. The different
 types of tokens that can be found are numbers, identifiers, quoted strings,
 and different comment styles. The class can be used for limited processing
 of source code of programming languages like Java, although it is nowhere
 near a full parser.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/java/io/StreamTokenizer.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamTokenizer (Java.IO.Reader r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.IO.Reader r) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/Reader;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="r" Type="Java.IO.Reader" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <summary>Constructs a new <c>StreamTokenizer</c> with <c>r</c> as source reader.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>StreamTokenizer</c> with <c>r</c> as source reader.
 The tokenizer's initial state is as follows:
 <list type="bullet"><item><term>All byte values 'A' through 'Z', 'a' through 'z', and '&amp;#92;u00A0'
 through '&amp;#92;u00FF' are considered to be alphabetic.</term></item><item><term>All byte values '&amp;#92;u0000' through '&amp;#92;u0020' are considered to
 be white space. '/' is a comment character.</term></item><item><term>Single quote '\'' and double quote '"' are string quote characters.
 </term></item><item><term>Numbers are parsed.</term></item><item><term>End of lines are considered to be white space rather than separate
 tokens.</term></item><item><term>C-style and C++-style comments are not recognized.</term></item></list></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/StreamTokenizer.html#StreamTokenizer(java.io.Reader)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StreamTokenizer (System.IO.Stream is);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream is) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/InputStream;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="is" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="is">To be added.</param>
        <summary>Constructs a new <c>StreamTokenizer</c> with <c>is</c> as source input
 stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>StreamTokenizer</c> with <c>is</c> as source input
 stream. This constructor is deprecated; instead, the constructor that
 takes a <c>Reader</c> as an argument should be used.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/StreamTokenizer.html#StreamTokenizer(java.io.InputStream)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if <c>is</c> is <c>null</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected StreamTokenizer (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommentChar">
      <MemberSignature Language="C#" Value="public virtual void CommentChar (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommentChar(int32 ch) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("commentChar", "(I)V", "GetCommentChar_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be considered a comment character.
</param>
        <summary>Specifies that the character <c>ch</c> shall be treated as a comment
 character.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Specifies that the character <c>ch</c> shall be treated as a comment
 character.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/StreamTokenizer.html#commentChar(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EolIsSignificant">
      <MemberSignature Language="C#" Value="public virtual void EolIsSignificant (bool flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EolIsSignificant(bool flag) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("eolIsSignificant", "(Z)V", "GetEolIsSignificant_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="flag">
          <c>true</c> if EOL is significant, <c>false</c> otherwise.
</param>
        <summary>Specifies whether the end of a line is significant and should be returned
 as <c>TT_EOF</c> in <c>ttype</c> by this tokenizer.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Specifies whether the end of a line is significant and should be returned
 as <c>TT_EOF</c> in <c>ttype</c> by this tokenizer.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/StreamTokenizer.html#eolIsSignificant(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Lineno">
      <MemberSignature Language="C#" Value="public virtual int Lineno ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Lineno() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("lineno", "()I", "GetLinenoHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the current line number.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the current line number.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/StreamTokenizer.html#lineno()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LowerCaseMode">
      <MemberSignature Language="C#" Value="public virtual void LowerCaseMode (bool flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LowerCaseMode(bool flag) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("lowerCaseMode", "(Z)V", "GetLowerCaseMode_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="flag">
          <c>true</c> if <c>sval</c> should be converted to lower
            case, <c>false</c> otherwise.
</param>
        <summary>Specifies whether word tokens should be converted to lower case when they
 are stored in <c>sval</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Specifies whether word tokens should be converted to lower case when they
 are stored in <c>sval</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/StreamTokenizer.html#lowerCaseMode(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NextToken">
      <MemberSignature Language="C#" Value="public virtual Java.IO.TokenType NextToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Java.IO.TokenType NextToken() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("nextToken", "()I", "GetNextTokenHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.TokenType</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Parses the next token from this tokenizer's source stream or reader.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Parses the next token from this tokenizer's source stream or reader. The
 type of the token is stored in the <c>ttype</c> field, additional
 information may be stored in the <c>nval</c> or <c>sval</c> fields.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/StreamTokenizer.html#nextToken()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while parsing the next token.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Nval">
      <MemberSignature Language="C#" Value="public double Nval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Nval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("nval")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contains a number if the current token is a number (<c>ttype</c> ==
 <c>TT_NUMBER</c>).</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Contains a number if the current token is a number (<c>ttype</c> ==
 <c>TT_NUMBER</c>).
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/StreamTokenizer.html#nval" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OrdinaryChar">
      <MemberSignature Language="C#" Value="public virtual void OrdinaryChar (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrdinaryChar(int32 ch) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ordinaryChar", "(I)V", "GetOrdinaryChar_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be considered an ordinary character.
</param>
        <summary>Specifies that the character <c>ch</c> shall be treated as an ordinary
 character by this tokenizer.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Specifies that the character <c>ch</c> shall be treated as an ordinary
 character by this tokenizer. That is, it has no special meaning as a
 comment character, word component, white space, string delimiter or
 number.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/StreamTokenizer.html#ordinaryChar(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OrdinaryChars">
      <MemberSignature Language="C#" Value="public virtual void OrdinaryChars (int low, int hi);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OrdinaryChars(int32 low, int32 hi) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ordinaryChars", "(II)V", "GetOrdinaryChars_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="low" Type="System.Int32" />
        <Parameter Name="hi" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="low">the first character in the range of ordinary characters.</param>
        <param name="hi">the last character in the range of ordinary characters.
</param>
        <summary>Specifies that the characters in the range from <c>low</c> to <c>hi</c>
 shall be treated as an ordinary character by this tokenizer.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Specifies that the characters in the range from <c>low</c> to <c>hi</c>
 shall be treated as an ordinary character by this tokenizer. That is,
 they have no special meaning as a comment character, word component,
 white space, string delimiter or number.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/StreamTokenizer.html#ordinaryChars(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ParseNumbers">
      <MemberSignature Language="C#" Value="public virtual void ParseNumbers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ParseNumbers() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parseNumbers", "()V", "GetParseNumbersHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Specifies that this tokenizer shall parse numbers.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Specifies that this tokenizer shall parse numbers.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/StreamTokenizer.html#parseNumbers()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PushBack">
      <MemberSignature Language="C#" Value="public virtual void PushBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PushBack() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("pushBack", "()V", "GetPushBackHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indicates that the current token should be pushed back and returned again
 the next time <c>nextToken()</c> is called.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates that the current token should be pushed back and returned again
 the next time <c>nextToken()</c> is called.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/StreamTokenizer.html#pushBack()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public virtual void QuoteChar (int ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void QuoteChar(int32 ch) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("quoteChar", "(I)V", "GetQuoteChar_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">the character to be considered a quote character.
</param>
        <summary>Specifies that the character <c>ch</c> shall be treated as a quote
 character.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Specifies that the character <c>ch</c> shall be treated as a quote
 character.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/StreamTokenizer.html#quoteChar(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ResetSyntax">
      <MemberSignature Language="C#" Value="public virtual void ResetSyntax ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetSyntax() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resetSyntax", "()V", "GetResetSyntaxHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Specifies that all characters shall be treated as ordinary characters.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Specifies that all characters shall be treated as ordinary characters.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/StreamTokenizer.html#resetSyntax()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SlashSlashComments">
      <MemberSignature Language="C#" Value="public virtual void SlashSlashComments (bool flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SlashSlashComments(bool flag) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("slashSlashComments", "(Z)V", "GetSlashSlashComments_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="flag">
          <c>true</c> if <c>//</c> should be recognized as the start
            of a comment, <c>false</c> otherwise.
</param>
        <summary>Specifies whether "slash-slash" (C++-style) comments shall be recognized.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Specifies whether "slash-slash" (C++-style) comments shall be recognized.
 This kind of comment ends at the end of the line.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/StreamTokenizer.html#slashSlashComments(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SlashStarComments">
      <MemberSignature Language="C#" Value="public virtual void SlashStarComments (bool flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SlashStarComments(bool flag) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("slashStarComments", "(Z)V", "GetSlashStarComments_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="flag">
          <c>true</c> if <c>/*</c> should be recognized as the start
            of a comment, <c>false</c> otherwise.
</param>
        <summary>Specifies whether "slash-star" (C-style) comments shall be recognized.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Specifies whether "slash-star" (C-style) comments shall be recognized.
 Slash-star comments cannot be nested and end when a star-slash
 combination is found.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/StreamTokenizer.html#slashStarComments(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Sval">
      <MemberSignature Language="C#" Value="public string Sval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Sval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sval")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contains a string if the current token is a word (<c>ttype</c> ==
 <c>TT_WORD</c>).</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Contains a string if the current token is a word (<c>ttype</c> ==
 <c>TT_WORD</c>).
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/StreamTokenizer.html#sval" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TtEof">
      <MemberSignature Language="C#" Value="public const Java.IO.TokenType TtEof = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.IO.TokenType TtEof = (-1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TT_EOF")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Java.IO.TokenType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.TokenType</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>The constant representing the end of the stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The constant representing the end of the stream.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/StreamTokenizer.html#TT_EOF" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TtEol">
      <MemberSignature Language="C#" Value="public const Java.IO.TokenType TtEol = 10;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.IO.TokenType TtEol = (10)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TT_EOL")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Java.IO.TokenType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.TokenType</ReturnType>
      </ReturnValue>
      <MemberValue>10</MemberValue>
      <Docs>
        <summary>The constant representing the end of the line.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The constant representing the end of the line.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/StreamTokenizer.html#TT_EOL" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TtNumber">
      <MemberSignature Language="C#" Value="public const Java.IO.TokenType TtNumber = -2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.IO.TokenType TtNumber = (-2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TT_NUMBER")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Java.IO.TokenType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.TokenType</ReturnType>
      </ReturnValue>
      <MemberValue>-2</MemberValue>
      <Docs>
        <summary>The constant representing a number token.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The constant representing a number token.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/StreamTokenizer.html#TT_NUMBER" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TtWord">
      <MemberSignature Language="C#" Value="public const Java.IO.TokenType TtWord = -3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Java.IO.TokenType TtWord = (-3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TT_WORD")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Java.IO.TokenType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.TokenType</ReturnType>
      </ReturnValue>
      <MemberValue>-3</MemberValue>
      <Docs>
        <summary>The constant representing a word token.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The constant representing a word token.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/StreamTokenizer.html#TT_WORD" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Ttype">
      <MemberSignature Language="C#" Value="public Java.IO.TokenType Ttype { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Java.IO.TokenType Ttype" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ttype")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.TokenType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>After calling <c>nextToken()</c>, <c>ttype</c> contains the type of
 token that has been read.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">After calling <c>nextToken()</c>, <c>ttype</c> contains the type of
 token that has been read. When a single character is read, its value
 converted to an integer is stored in <c>ttype</c>. For a quoted string,
 the value is the quoted character. Otherwise, its value is one of the
 following:
 <list type="bullet"><item><term><c>TT_WORD</c> - the token is a word.</term></item><item><term><c>TT_NUMBER</c> - the token is a number.</term></item><item><term><c>TT_EOL</c> - the end of line has been reached. Depends on
 whether <c>eolIsSignificant</c> is <c>true</c>.</term></item><item><term><c>TT_EOF</c> - the end of the stream has been reached.</term></item></list></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/StreamTokenizer.html#ttype" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WhitespaceChars">
      <MemberSignature Language="C#" Value="public virtual void WhitespaceChars (int low, int hi);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WhitespaceChars(int32 low, int32 hi) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("whitespaceChars", "(II)V", "GetWhitespaceChars_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="low" Type="System.Int32" />
        <Parameter Name="hi" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="low">the first character in the range of whitespace characters.</param>
        <param name="hi">the last character in the range of whitespace characters.
</param>
        <summary>Specifies that the characters in the range from <c>low</c> to <c>hi</c>
 shall be treated as whitespace characters by this tokenizer.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Specifies that the characters in the range from <c>low</c> to <c>hi</c>
 shall be treated as whitespace characters by this tokenizer.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/StreamTokenizer.html#whitespaceChars(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WordChars">
      <MemberSignature Language="C#" Value="public virtual void WordChars (int low, int hi);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WordChars(int32 low, int32 hi) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("wordChars", "(II)V", "GetWordChars_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="low" Type="System.Int32" />
        <Parameter Name="hi" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="low">the first character in the range of word characters.</param>
        <param name="hi">the last character in the range of word characters.
</param>
        <summary>Specifies that the characters in the range from <c>low</c> to <c>hi</c>
 shall be treated as word characters by this tokenizer.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Specifies that the characters in the range from <c>low</c> to <c>hi</c>
 shall be treated as word characters by this tokenizer. A word consists of
 a word character followed by zero or more word or number characters.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/io/StreamTokenizer.html#wordChars(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
