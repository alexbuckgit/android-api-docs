<Type Name="TelecomManager" FullName="Android.Telecom.TelecomManager">
  <TypeSignature Language="C#" Value="public class TelecomManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TelecomManager extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/telecom/TelecomManager", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="21">
    <summary>Provides access to information about active calls and registration/call-management functionality.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Provides access to information about active calls and registration/call-management functionality.
 Apps can use methods in this class to determine the current call state.
 </para>
      <para tool="javadoc-to-mdoc">
 Apps do not instantiate this class directly; instead, they retrieve a reference to an instance
 through <c><see cref="!:Android.Content.Context.getSystemService(java.lang.Class&lt;T&gt;)" /></c>.
 </para>
      <para tool="javadoc-to-mdoc">
 Note that access to some telecom information is permission-protected. Your app cannot access the
 protected information or gain access to protected functionality unless it has the appropriate
 permissions declared in its manifest file. Where permissions apply, they are noted in the method
 descriptions.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/telecom/TelecomManager.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TelecomManager (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionShowCallSettings">
      <MemberSignature Language="C#" Value="public const string ActionShowCallSettings;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionShowCallSettings" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACTION_SHOW_CALL_SETTINGS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <c><see cref="T:Android.Content.Intent" /></c> action used to show the call settings page.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The <c><see cref="T:Android.Content.Intent" /></c> action used to show the call settings page.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/telecom/TelecomManager.html#ACTION_SHOW_CALL_SETTINGS" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelMissedCallsNotification">
      <MemberSignature Language="C#" Value="public virtual void CancelMissedCallsNotification ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelMissedCallsNotification() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("cancelMissedCallsNotification", "()V", "GetCancelMissedCallsNotificationHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes the missed-call notification if one is present.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Removes the missed-call notification if one is present.
 </para>
          <para tool="javadoc-to-mdoc">
 Requires that the method-caller be set as the system dialer app.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/telecom/TelecomManager.html#cancelMissedCallsNotification()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DtmfCharacterPause">
      <MemberSignature Language="C#" Value="public const char DtmfCharacterPause;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char DtmfCharacterPause" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DTMF_CHARACTER_PAUSE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The dual tone multi-frequency signaling character sent to indicate the dialing system should
 pause for a predefined period.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The dual tone multi-frequency signaling character sent to indicate the dialing system should
 pause for a predefined period.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/telecom/TelecomManager.html#DTMF_CHARACTER_PAUSE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DtmfCharacterWait">
      <MemberSignature Language="C#" Value="public const char DtmfCharacterWait;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char DtmfCharacterWait" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DTMF_CHARACTER_WAIT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The dual-tone multi-frequency signaling character sent to indicate the dialing system should
 wait for user confirmation before proceeding.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The dual-tone multi-frequency signaling character sent to indicate the dialing system should
 wait for user confirmation before proceeding.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/telecom/TelecomManager.html#DTMF_CHARACTER_WAIT" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraCallDisconnectCause">
      <MemberSignature Language="C#" Value="public const string ExtraCallDisconnectCause;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraCallDisconnectCause" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_CALL_DISCONNECT_CAUSE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Optional extra for <c><see cref="F:Android.Telephony.TelephonyManager.ActionPhoneStateChanged" /></c>
 containing the disconnect code.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Optional extra for <c><see cref="F:Android.Telephony.TelephonyManager.ActionPhoneStateChanged" /></c>
 containing the disconnect code.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/telecom/TelecomManager.html#EXTRA_CALL_DISCONNECT_CAUSE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraCallDisconnectMessage">
      <MemberSignature Language="C#" Value="public const string ExtraCallDisconnectMessage;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraCallDisconnectMessage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_CALL_DISCONNECT_MESSAGE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Optional extra for <c><see cref="F:Android.Telephony.TelephonyManager.ActionPhoneStateChanged" /></c>
 containing the disconnect message.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Optional extra for <c><see cref="F:Android.Telephony.TelephonyManager.ActionPhoneStateChanged" /></c>
 containing the disconnect message.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/telecom/TelecomManager.html#EXTRA_CALL_DISCONNECT_MESSAGE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraStartCallWithSpeakerphone">
      <MemberSignature Language="C#" Value="public const string ExtraStartCallWithSpeakerphone;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraStartCallWithSpeakerphone" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_START_CALL_WITH_SPEAKERPHONE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Optional extra for <c><see cref="F:Android.Content.Intent.ActionCall" /></c> containing a boolean that
 determines whether the speakerphone should be automatically turned on for an outgoing call.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Optional extra for <c><see cref="F:Android.Content.Intent.ActionCall" /></c> containing a boolean that
 determines whether the speakerphone should be automatically turned on for an outgoing call.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/telecom/TelecomManager.html#EXTRA_START_CALL_WITH_SPEAKERPHONE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GatewayOriginalAddress">
      <MemberSignature Language="C#" Value="public const string GatewayOriginalAddress;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string GatewayOriginalAddress" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("GATEWAY_ORIGINAL_ADDRESS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An optional <c><see cref="F:Android.Content.Intent.ActionCall" /></c> intent extra corresponding to the
 original address to dial for the call.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">An optional <c><see cref="F:Android.Content.Intent.ActionCall" /></c> intent extra corresponding to the
 original address to dial for the call. This is used when an alternative gateway address is
 provided to recall the original address.
 The value is a <c><see cref="T:Android.Net.Uri" /></c>.

 (See <c><see cref="F:Android.Telecom.TelecomManager.GatewayProviderPackage" /></c> for details)
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/telecom/TelecomManager.html#GATEWAY_ORIGINAL_ADDRESS" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GatewayProviderPackage">
      <MemberSignature Language="C#" Value="public const string GatewayProviderPackage;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string GatewayProviderPackage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("GATEWAY_PROVIDER_PACKAGE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An optional <c><see cref="F:Android.Content.Intent.ActionCall" /></c> intent extra denoting the
 package name of the app specifying an alternative gateway for the call.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">An optional <c><see cref="F:Android.Content.Intent.ActionCall" /></c> intent extra denoting the
 package name of the app specifying an alternative gateway for the call.
 The value is a string.

 (The following comment corresponds to the all GATEWAY_* extras)
 An app which sends the <c><see cref="F:Android.Content.Intent.ActionCall" /></c> intent can specify an
 alternative address to dial which is different from the one specified and displayed to
 the user. This alternative address is referred to as the gateway address.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/telecom/TelecomManager.html#GATEWAY_PROVIDER_PACKAGE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleMmi">
      <MemberSignature Language="C#" Value="public virtual bool HandleMmi (string dialString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HandleMmi(string dialString) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("handleMmi", "(Ljava/lang/String;)Z", "GetHandleMmi_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dialString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dialString">The digits to dial.</param>
        <summary>Processes the specified dial string as an MMI code.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Processes the specified dial string as an MMI code.
 MMI codes are any sequence of characters entered into the dialpad that contain a "*" or "#".
 Some of these sequences launch special behavior through handled by Telephony.
 This method uses the default subscription.
 </para>
          <para tool="javadoc-to-mdoc">
 Requires that the method-caller be set as the system dialer app.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/telecom/TelecomManager.html#handleMmi(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInCall">
      <MemberSignature Language="C#" Value="public virtual bool IsInCall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInCall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isInCall", "()Z", "GetIsInCallHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether there is an ongoing phone call (can be in dialing, ringing, active or holding
 states).</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns whether there is an ongoing phone call (can be in dialing, ringing, active or holding
 states).
 </para>
          <para tool="javadoc-to-mdoc">
 Requires permission: <c><see cref="F:Android.Manifest.Permission.ReadPhoneState" tool="ReplaceLinkValue" /></c></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/telecom/TelecomManager.html#isInCall()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowInCallScreen">
      <MemberSignature Language="C#" Value="public virtual void ShowInCallScreen (bool showDialpad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowInCallScreen(bool showDialpad) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("showInCallScreen", "(Z)V", "GetShowInCallScreen_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="showDialpad" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="showDialpad">Brings up the in-call dialpad as part of showing the in-call screen.
</param>
        <summary>Brings the in-call screen to the foreground if there is an ongoing call.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Brings the in-call screen to the foreground if there is an ongoing call. If there is
 currently no ongoing call, then this method does nothing.
 </para>
          <para tool="javadoc-to-mdoc">
 Requires that the method-caller be set as the system dialer app or have the
 <c><see cref="F:Android.Manifest.Permission.ReadPhoneState" tool="ReplaceLinkValue" /></c> permission.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/telecom/TelecomManager.html#showInCallScreen(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>