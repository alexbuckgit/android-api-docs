<Type Name="RaiseThrowableEventArgs" FullName="Android.Runtime.RaiseThrowableEventArgs">
  <TypeSignature Language="C#" Value="public class RaiseThrowableEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RaiseThrowableEventArgs extends System.EventArgs" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      Provides data for the 
      <see cref="E:Android.Runtime.AndroidEnvironment.UnhandledExceptionRaiser" />
      event.
    </summary>
    <remarks>
      <para>
        <c>RaiseThrowableEventArgs</c> provides access to the exception and a
        propery allowing the event handler to indicate if the exception has
        been handled.
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RaiseThrowableEventArgs (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception e) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">
          A <see cref="T:System.Exception" /> containing the unhandled
          exception.
        </param>
        <summary>
          Constructs and initializes a new instance of the 
          <see cref="T:Android.Runtime.RaiseThrowableEventArgs" /> class with
          the specified exception instance.
        </summary>
        <remarks>
          <para>
            This constructor initializes the 
            <see cref="P:Android.Runtime.RaiseThrowableEventArgs.Exception" /> 
            property of the new instance using <paramref name="e" />.
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the unhandled exception instance.</summary>
        <value>
          An <see cref="T:System.Exception" /> instance which was unhandled
          and should be dealt with before returning to Android.
        </value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          Gets or sets a value indicating whether 
          <see cref="P:Android.Runtime.RaiseThrowableEventArgs.Exception" />
          has been handled.
        </summary>
        <value>
          A <see cref="T:System.Boolean" /> indicating whether 
          <see cref="P:Android.Runtime.RaiseThrowableEventArgs.Exception" />
          has been handled.
        </value>
        <remarks>
          <para>
            The <c>Handled</c> property is checked in between the invocation
            of each event handler registered with the 
            <see cref="E:Android.Runtime.AndroidEnvironment.UnhandledExceptionRaiser" />
            event, and the next registered event handler will only be invoked
            if <c>Handled</c> is <see langword="false" />.
            If no event handlers set <c>Handled</c> to <see langword="true" />,
            then the default operation of invoking 
            <see cref="M:Android.Runtime.AndroidEnvironment.RaiseThrowable(Java.Lang.Throwable)" />
            will be performed.
          </para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
