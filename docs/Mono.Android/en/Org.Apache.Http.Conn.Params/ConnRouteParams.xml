<Type Name="ConnRouteParams" FullName="Org.Apache.Http.Conn.Params.ConnRouteParams">
  <TypeSignature Language="C#" Value="public class ConnRouteParams : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConnRouteParams extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("org/apache/http/conn/params/ConnRouteParams", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>An adaptor for accessing route related parameters in <c><see cref="T:Org.Apache.Http.Params.IHttpParams" /></c>.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">An adaptor for accessing route related parameters in <c><see cref="T:Org.Apache.Http.Params.IHttpParams" /></c>.
 See <c><see cref="T:Org.Apache.Http.Conn.Params.ConnRoutePNames" /></c> for parameter name definitions.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/org/apache/http/conn/params/ConnRouteParams.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ConnRouteParams (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultProxy">
      <MemberSignature Language="C#" Value="public static Org.Apache.Http.HttpHost GetDefaultProxy (Org.Apache.Http.Params.IHttpParams params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Org.Apache.Http.HttpHost GetDefaultProxy(class Org.Apache.Http.Params.IHttpParams params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDefaultProxy", "(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/HttpHost;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.HttpHost</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="params" Type="Org.Apache.Http.Params.IHttpParams" />
      </Parameters>
      <Docs>
        <param name="params">the parameters in which to look up</param>
        <summary>Obtains the <c><see cref="F:Org.Apache.Http.Conn.Params.ConnRoutePNames.DefaultProxy" /></c>
 parameter value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Obtains the <c><see cref="F:Org.Apache.Http.Conn.Params.ConnRoutePNames.DefaultProxy" /></c>
 parameter value.
 <c><see cref="P:Org.Apache.Http.Conn.Params.ConnRouteParams.NoHost" /></c> will be mapped to <c>null</c>,
 to allow unsetting in a hierarchy.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/params/ConnRouteParams.html#getDefaultProxy(org.apache.http.params.HttpParams)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetForcedRoute">
      <MemberSignature Language="C#" Value="public static Org.Apache.Http.Conn.Routing.HttpRoute GetForcedRoute (Org.Apache.Http.Params.IHttpParams params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Org.Apache.Http.Conn.Routing.HttpRoute GetForcedRoute(class Org.Apache.Http.Params.IHttpParams params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getForcedRoute", "(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/conn/routing/HttpRoute;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.Conn.Routing.HttpRoute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="params" Type="Org.Apache.Http.Params.IHttpParams" />
      </Parameters>
      <Docs>
        <param name="params">the parameters in which to look up</param>
        <summary>Obtains the <c><see cref="F:Org.Apache.Http.Conn.Params.ConnRoutePNames.ForcedRoute" /></c>
 parameter value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Obtains the <c><see cref="F:Org.Apache.Http.Conn.Params.ConnRoutePNames.ForcedRoute" /></c>
 parameter value.
 <c><see cref="P:Org.Apache.Http.Conn.Params.ConnRouteParams.NoRoute" /></c> will be mapped to <c>null</c>,
 to allow unsetting in a hierarchy.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/params/ConnRouteParams.html#getForcedRoute(org.apache.http.params.HttpParams)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLocalAddress">
      <MemberSignature Language="C#" Value="public static Java.Net.InetAddress GetLocalAddress (Org.Apache.Http.Params.IHttpParams params);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Net.InetAddress GetLocalAddress(class Org.Apache.Http.Params.IHttpParams params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getLocalAddress", "(Lorg/apache/http/params/HttpParams;)Ljava/net/InetAddress;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.InetAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="params" Type="Org.Apache.Http.Params.IHttpParams" />
      </Parameters>
      <Docs>
        <param name="params">the parameters in which to look up</param>
        <summary>Obtains the <c><see cref="F:Org.Apache.Http.Conn.Params.ConnRoutePNames.LocalAddress" /></c>
 parameter value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Obtains the <c><see cref="F:Org.Apache.Http.Conn.Params.ConnRoutePNames.LocalAddress" /></c>
 parameter value.
 There is no special value that would automatically be mapped to
 <c>null</c>. You can use the wildcard address (0.0.0.0 for IPv4,
 :: for IPv6) to override a specific local address in a hierarchy.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/params/ConnRouteParams.html#getLocalAddress(org.apache.http.params.HttpParams)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NoHost">
      <MemberSignature Language="C#" Value="public static Org.Apache.Http.HttpHost NoHost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Org.Apache.Http.HttpHost NoHost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("NO_HOST")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.HttpHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A special value indicating "no host".</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">A special value indicating "no host".
 This relies on a nonsense scheme name to avoid conflicts
 with actual hosts. Note that this is a <format type="text/html"><i>valid</i></format> host.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/params/ConnRouteParams.html#NO_HOST" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NoRoute">
      <MemberSignature Language="C#" Value="public static Org.Apache.Http.Conn.Routing.HttpRoute NoRoute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Org.Apache.Http.Conn.Routing.HttpRoute NoRoute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("NO_ROUTE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.Conn.Routing.HttpRoute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A special value indicating "no route".</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">A special value indicating "no route".
 This is a route with <c><see cref="P:Org.Apache.Http.Conn.Params.ConnRouteParams.NoHost" /></c> as the target.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/params/ConnRouteParams.html#NO_ROUTE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetDefaultProxy">
      <MemberSignature Language="C#" Value="public static void SetDefaultProxy (Org.Apache.Http.Params.IHttpParams params, Org.Apache.Http.HttpHost proxy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDefaultProxy(class Org.Apache.Http.Params.IHttpParams params, class Org.Apache.Http.HttpHost proxy) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDefaultProxy", "(Lorg/apache/http/params/HttpParams;Lorg/apache/http/HttpHost;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="params" Type="Org.Apache.Http.Params.IHttpParams" />
        <Parameter Name="proxy" Type="Org.Apache.Http.HttpHost" />
      </Parameters>
      <Docs>
        <param name="params">the parameters in which to set the value</param>
        <param name="proxy">the value to set, may be <c>null</c>.
                  Note that <c><see cref="P:Org.Apache.Http.Conn.Params.ConnRouteParams.NoHost" /></c> will be mapped to
                  <c>null</c> by <c><see cref="M:Org.Apache.Http.Conn.Params.ConnRouteParams.GetDefaultProxy(Org.Apache.Http.Params.IHttpParams)" /></c>,
                  to allow for explicit unsetting in hierarchies.
</param>
        <summary>Sets the <c><see cref="F:Org.Apache.Http.Conn.Params.ConnRoutePNames.DefaultProxy" /></c>
 parameter value.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the <c><see cref="F:Org.Apache.Http.Conn.Params.ConnRoutePNames.DefaultProxy" /></c>
 parameter value.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/params/ConnRouteParams.html#setDefaultProxy(org.apache.http.params.HttpParams, org.apache.http.HttpHost)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetForcedRoute">
      <MemberSignature Language="C#" Value="public static void SetForcedRoute (Org.Apache.Http.Params.IHttpParams params, Org.Apache.Http.Conn.Routing.HttpRoute route);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetForcedRoute(class Org.Apache.Http.Params.IHttpParams params, class Org.Apache.Http.Conn.Routing.HttpRoute route) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setForcedRoute", "(Lorg/apache/http/params/HttpParams;Lorg/apache/http/conn/routing/HttpRoute;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="params" Type="Org.Apache.Http.Params.IHttpParams" />
        <Parameter Name="route" Type="Org.Apache.Http.Conn.Routing.HttpRoute" />
      </Parameters>
      <Docs>
        <param name="params">the parameters in which to set the value</param>
        <param name="route">the value to set, may be <c>null</c>.
                  Note that <c><see cref="P:Org.Apache.Http.Conn.Params.ConnRouteParams.NoRoute" /></c> will be mapped to
                  <c>null</c> by <c><see cref="M:Org.Apache.Http.Conn.Params.ConnRouteParams.GetForcedRoute(Org.Apache.Http.Params.IHttpParams)" /></c>,
                  to allow for explicit unsetting in hierarchies.
</param>
        <summary>Sets the <c><see cref="F:Org.Apache.Http.Conn.Params.ConnRoutePNames.ForcedRoute" /></c>
 parameter value.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the <c><see cref="F:Org.Apache.Http.Conn.Params.ConnRoutePNames.ForcedRoute" /></c>
 parameter value.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/params/ConnRouteParams.html#setForcedRoute(org.apache.http.params.HttpParams, org.apache.http.conn.routing.HttpRoute)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetLocalAddress">
      <MemberSignature Language="C#" Value="public static void SetLocalAddress (Org.Apache.Http.Params.IHttpParams params, Java.Net.InetAddress local);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetLocalAddress(class Org.Apache.Http.Params.IHttpParams params, class Java.Net.InetAddress local) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLocalAddress", "(Lorg/apache/http/params/HttpParams;Ljava/net/InetAddress;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="params" Type="Org.Apache.Http.Params.IHttpParams" />
        <Parameter Name="local" Type="Java.Net.InetAddress" />
      </Parameters>
      <Docs>
        <param name="params">the parameters in which to set the value</param>
        <param name="local">the value to set, may be <c>null</c></param>
        <summary>Sets the <c><see cref="F:Org.Apache.Http.Conn.Params.ConnRoutePNames.LocalAddress" /></c>
 parameter value.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the <c><see cref="F:Org.Apache.Http.Conn.Params.ConnRoutePNames.LocalAddress" /></c>
 parameter value.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/params/ConnRouteParams.html#setLocalAddress(org.apache.http.params.HttpParams, java.net.InetAddress)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>