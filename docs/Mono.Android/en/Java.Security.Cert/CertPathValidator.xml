<Type Name="CertPathValidator" FullName="Java.Security.Cert.CertPathValidator">
  <TypeSignature Language="C#" Value="public class CertPathValidator : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CertPathValidator extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/security/cert/CertPathValidator", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This class provides the functionality for validating certification paths
 (certificate chains) establishing a trust chain from a certificate to a trust
 anchor.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">This class provides the functionality for validating certification paths
 (certificate chains) establishing a trust chain from a certificate to a trust
 anchor.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/java/security/cert/CertPathValidator.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CertPathValidator (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CertPathValidator (Java.Security.Cert.CertPathValidatorSpi validatorSpi, Java.Security.Provider provider, string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Java.Security.Cert.CertPathValidatorSpi validatorSpi, class Java.Security.Provider provider, string algorithm) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/security/cert/CertPathValidatorSpi;Ljava/security/Provider;Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="validatorSpi" Type="Java.Security.Cert.CertPathValidatorSpi" />
        <Parameter Name="provider" Type="Java.Security.Provider" />
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="validatorSpi">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="algorithm">To be added.</param>
        <summary>Creates a new <c>CertPathValidator</c> instance.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new <c>CertPathValidator</c> instance.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/security/cert/CertPathValidator.html#CertPathValidator(java.security.cert.CertPathValidatorSpi, java.security.Provider, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Algorithm">
      <MemberSignature Language="C#" Value="public string Algorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Algorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAlgorithm", "()Ljava/lang/String;", "GetGetAlgorithmHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the certification path algorithm name.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the certification path algorithm name.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/security/cert/CertPathValidator.html#getAlgorithm()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DefaultType">
      <MemberSignature Language="C#" Value="public static string DefaultType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string DefaultType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDefaultType", "()Ljava/lang/String;", "GetGetDefaultTypeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the default <c>CertPathValidator</c> type from the <format type="text/html"><i>Security
 Properties</i></format>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the default <c>CertPathValidator</c> type from the <format type="text/html"><i>Security
 Properties</i></format>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/security/cert/CertPathValidator.html#getDefaultType()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Java.Security.Cert.CertPathValidator GetInstance (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Security.Cert.CertPathValidator GetInstance(string algorithm) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInstance", "(Ljava/lang/String;)Ljava/security/cert/CertPathValidator;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Cert.CertPathValidator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">the algorithm name.</param>
        <summary tool="true">Returns a new certification path validator for the specified algorithm
 from the specified provider.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new certification path validator for the specified algorithm.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/security/cert/CertPathValidator.html#getInstance(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if no installed provider provides the specified algorithm.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if algorithm is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Java.Security.Cert.CertPathValidator GetInstance (string algorithm, Java.Security.Provider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Security.Cert.CertPathValidator GetInstance(string algorithm, class Java.Security.Provider provider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/security/Provider;)Ljava/security/cert/CertPathValidator;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Cert.CertPathValidator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="provider" Type="Java.Security.Provider" />
      </Parameters>
      <Docs>
        <param name="algorithm">the algorithm name.</param>
        <param name="provider">the security provider name.</param>
        <summary>Returns a new certification path validator for the specified algorithm
 from the specified provider.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new certification path validator for the specified algorithm
 from the specified provider. The <c>provider</c> supplied does not
 have to be registered.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/security/cert/CertPathValidator.html#getInstance(java.lang.String, java.security.Provider)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if the specified provider cannot provide the requested
             algorithm.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>provider == null</c></exception>
        <exception cref="T:Java.Lang.NullPointerException">if algorithm is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Java.Security.Cert.CertPathValidator GetInstance (string algorithm, string provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Security.Cert.CertPathValidator GetInstance(string algorithm, string provider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInstance", "(Ljava/lang/String;Ljava/lang/String;)Ljava/security/cert/CertPathValidator;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Cert.CertPathValidator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="provider" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm">the algorithm name.</param>
        <param name="provider">the security provider name.</param>
        <summary>Returns a new certification path validator for the specified algorithm
 from the specified provider.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a new certification path validator for the specified algorithm
 from the specified provider.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/security/cert/CertPathValidator.html#getInstance(java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException">if the specified security provider cannot provide the
             requested algorithm.</exception>
        <exception cref="T:Java.Security.NoSuchProviderException">if no provider with the specified name can be found.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if algorithm is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>provider == null || provider.isEmpty()</c></exception>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public Java.Security.Provider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Security.Provider Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getProvider", "()Ljava/security/Provider;", "GetGetProviderHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Provider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the security provider.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the security provider.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/security/cert/CertPathValidator.html#getProvider()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public Java.Security.Cert.ICertPathValidatorResult Validate (Java.Security.Cert.CertPath certPath, Java.Security.Cert.ICertPathParameters params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Security.Cert.ICertPathValidatorResult Validate(class Java.Security.Cert.CertPath certPath, class Java.Security.Cert.ICertPathParameters params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("validate", "(Ljava/security/cert/CertPath;Ljava/security/cert/CertPathParameters;)Ljava/security/cert/CertPathValidatorResult;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Security.Cert.ICertPathValidatorResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certPath" Type="Java.Security.Cert.CertPath" />
        <Parameter Name="params" Type="Java.Security.Cert.ICertPathParameters" />
      </Parameters>
      <Docs>
        <param name="certPath">the certification path to be validated.</param>
        <param name="params">the certification path validator algorithm parameters.</param>
        <summary>Validates the <c>CertPath</c> with the algorithm of this <c>CertPathValidator</c> using the specified algorithm parameters.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Validates the <c>CertPath</c> with the algorithm of this <c>CertPathValidator</c> using the specified algorithm parameters.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/security/cert/CertPathValidator.html#validate(java.security.cert.CertPath, java.security.cert.CertPathParameters)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.Cert.CertPathValidatorException">if the validation fails, or the algorithm of the specified
             certification path cannot be validated using the algorithm of
             this instance.</exception>
        <exception cref="T:Java.Security.InvalidAlgorithmParameterException">if the specified algorithm parameters cannot be used with
             this algorithm.</exception>
        <altmember cref="T:Java.Security.Cert.ICertPathValidatorResult" />
      </Docs>
    </Member>
  </Members>
</Type>