<Type Name="PKIXBuilderParameters" FullName="Java.Security.Cert.PKIXBuilderParameters">
  <TypeSignature Language="C#" Value="public class PKIXBuilderParameters : Java.Security.Cert.PKIXParameters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PKIXBuilderParameters extends Java.Security.Cert.PKIXParameters" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Security.Cert.PKIXParameters</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/security/cert/PKIXBuilderParameters", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>The parameter specification for a PKIX <c>CertPathBuilder</c>
 algorithm used to <c><see cref="M:Java.Security.Cert.CertPathBuilder.Build(Java.Security.Cert.ICertPathParameters)" /></c>
 certificate chains validated with the PKIX certification path validation.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">The parameter specification for a PKIX <c>CertPathBuilder</c>
 algorithm used to <c><see cref="M:Java.Security.Cert.CertPathBuilder.Build(Java.Security.Cert.ICertPathParameters)" /></c>
 certificate chains validated with the PKIX certification path validation.
 </para>
      <para tool="javadoc-to-mdoc">
 The parameters must be created with <format type="text/html"><i>trusted</i></format> certificate authorities
 and constraints for the target certificates.</para>
      <format type="text/html">
        <h5 class="jd-tagtitle">See Also</h5>
      </format>
      <list type="bullet">
        <item>
          <term>
            <c>
              <see cref="T:Java.Security.Cert.CertPathBuilder" />
            </c>
          </term>
        </item>
        <item>
          <term>
            <c>
              <see cref="T:Java.Security.Cert.ICertPathParameters" />
            </c>
          </term>
        </item>
      </list>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/java/security/cert/PKIXBuilderParameters.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PKIXBuilderParameters (Java.Security.KeyStore keyStore, Java.Security.Cert.ICertSelector targetConstraints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Security.KeyStore keyStore, class Java.Security.Cert.ICertSelector targetConstraints) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/security/KeyStore;Ljava/security/cert/CertSelector;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="keyStore" Type="Java.Security.KeyStore" />
        <Parameter Name="targetConstraints" Type="Java.Security.Cert.ICertSelector" />
      </Parameters>
      <Docs>
        <param name="keyStore">To be added.</param>
        <param name="targetConstraints">To be added.</param>
        <summary>Creates a new <c>PKIXBuilderParameters</c> instance with the trusted
 <c>X509Certificate</c> entries from the specified <c>KeyStore</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new <c>PKIXBuilderParameters</c> instance with the trusted
 <c>X509Certificate</c> entries from the specified <c>KeyStore</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/security/cert/PKIXBuilderParameters.html#PKIXBuilderParameters(java.security.KeyStore, java.security.cert.CertSelector)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.KeyStoreException">if the <c>keyStore</c> is not initialized.</exception>
        <exception cref="T:Java.Security.InvalidAlgorithmParameterException">if <c>keyStore</c> does not contained any trusted
             certificate entry.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PKIXBuilderParameters (System.Collections.Generic.ICollection&lt;Java.Security.Cert.TrustAnchor&gt; trustAnchors, Java.Security.Cert.ICertSelector targetConstraints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.ICollection`1&lt;class Java.Security.Cert.TrustAnchor&gt; trustAnchors, class Java.Security.Cert.ICertSelector targetConstraints) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/util/Set;Ljava/security/cert/CertSelector;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="trustAnchors" Type="System.Collections.Generic.ICollection&lt;Java.Security.Cert.TrustAnchor&gt;" />
        <Parameter Name="targetConstraints" Type="Java.Security.Cert.ICertSelector" />
      </Parameters>
      <Docs>
        <param name="trustAnchors">To be added.</param>
        <param name="targetConstraints">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PKIXBuilderParameters (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPathLength">
      <MemberSignature Language="C#" Value="public virtual int MaxPathLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxPathLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMaxPathLength", "()I", "GetGetMaxPathLengthHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setMaxPathLength", "(I)V", "GetSetMaxPathLength_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the maximum length of a certification path.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/java/security/cert/PKIXBuilderParameters.html#getMaxPathLength()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the maximum length of a certification path.
 
 This is the maximum number of non-self-signed certificates in a
 certification path.</para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/java/security/cert/PKIXBuilderParameters.html#setMaxPathLength(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the maximum length of a certification path.
 
 This is the maximum number of non-self-signed certificates in a
 certification path.</para>
          <para tool="javadoc-to-mdoc" />
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.InvalidParameterException">if <c>maxPathLength</c> is less than <c>-1</c>.
</exception>
        <exception cref="T:Java.Security.InvalidParameterException">if <c>maxPathLength</c> is less than <c>-1</c>.
</exception>
        <exception cref="T:Java.Security.InvalidParameterException">if <c>maxPathLength</c> is less than <c>-1</c>.
</exception>
        <exception cref="T:Java.Security.InvalidParameterException">if <c>maxPathLength</c> is less than <c>-1</c>.
</exception>
        <exception cref="T:Java.Security.InvalidParameterException">if <c>maxPathLength</c> is less than <c>-1</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>