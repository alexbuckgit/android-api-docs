<Type Name="ServerSocket" FullName="Java.Net.ServerSocket">
  <TypeSignature Language="C#" Value="public class ServerSocket : Java.Lang.Object, IDisposable, Java.IO.ICloseable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServerSocket extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.IO.ICloseable, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Java.IO.ICloseable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/net/ServerSocket", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This class represents a server-side socket that waits for incoming client
 connections.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">This class represents a server-side socket that waits for incoming client
 connections. A <c>ServerSocket</c> handles the requests and sends back an
 appropriate reply. The actual tasks that a server socket must accomplish are
 implemented by an internal <c>SocketImpl</c> instance.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/java/net/ServerSocket.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServerSocket ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Constructs a new unbound <c>ServerSocket</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new unbound <c>ServerSocket</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/ServerSocket.html#ServerSocket()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while creating the socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServerSocket (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="aport" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port">To be added.</param>
        <summary>Constructs a new <c>ServerSocket</c> instance bound to the given <c>port</c> using a
 wildcard address.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>ServerSocket</c> instance bound to the given <c>port</c> using a
 wildcard address. The backlog is set to 50. If <c>port == 0</c>, a port will be assigned by
 the OS.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/ServerSocket.html#ServerSocket(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while creating the socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServerSocket (int port, int backlog);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port, int32 backlog) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(II)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="aport" Type="System.Int32" />
        <Parameter Name="backlog" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port">To be added.</param>
        <param name="backlog">To be added.</param>
        <summary>Constructs a new <c>ServerSocket</c> instance bound to the given <c>port</c> using a
 wildcard address.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>ServerSocket</c> instance bound to the given <c>port</c> using a
 wildcard address. The backlog is set to <c>backlog</c>.
 If <c>port == 0</c>, a port will be assigned by the OS.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/ServerSocket.html#ServerSocket(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while creating the socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ServerSocket (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServerSocket (int port, int backlog, Java.Net.InetAddress localAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port, int32 backlog, class Java.Net.InetAddress localAddress) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(IILjava/net/InetAddress;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="aport" Type="System.Int32" />
        <Parameter Name="backlog" Type="System.Int32" />
        <Parameter Name="localAddr" Type="Java.Net.InetAddress" />
      </Parameters>
      <Docs>
        <param name="port">To be added.</param>
        <param name="backlog">To be added.</param>
        <param name="localAddress">To be added.</param>
        <summary>Constructs a new <c>ServerSocket</c> instance bound to the given <c>localAddress</c>
 and <c>port</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>ServerSocket</c> instance bound to the given <c>localAddress</c>
 and <c>port</c>. The backlog is set to <c>backlog</c>.
 If <c>localAddress == null</c>, the ANY address is used.
 If <c>port == 0</c>, a port will be assigned by the OS.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/ServerSocket.html#ServerSocket(int, int, java.net.InetAddress)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while creating the socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public virtual Java.Net.Socket Accept ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Net.Socket Accept() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("accept", "()Ljava/net/Socket;", "GetAcceptHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.Socket</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Waits for an incoming request and blocks until the connection is opened.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Waits for an incoming request and blocks until the connection is opened.
 This method returns a socket object representing the just opened
 connection.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/ServerSocket.html#accept()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while accepting a new connection.
</exception>
      </Docs>
    </Member>
    <Member MemberName="AcceptAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Java.Net.Socket&gt; AcceptAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Java.Net.Socket&gt; AcceptAsync() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Java.Net.Socket&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public virtual void Bind (Java.Net.SocketAddress localAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Bind(class Java.Net.SocketAddress localAddr) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("bind", "(Ljava/net/SocketAddress;)V", "GetBind_Ljava_net_SocketAddress_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localAddr" Type="Java.Net.SocketAddress" />
      </Parameters>
      <Docs>
        <param name="localAddr">the local address and port to bind on.</param>
        <summary tool="true">Binds this server socket to the given local socket address with a maximum
 backlog of 50 unaccepted connections.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Binds this server socket to the given local socket address with a maximum
 backlog of 50 unaccepted connections. If the <c>localAddr</c> is set to
 <c>null</c> the socket will be bound to an available local address on
 any free port of the system.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/ServerSocket.html#bind(java.net.SocketAddress)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the <c>SocketAddress</c> is not supported.</exception>
        <exception cref="T:Java.IO.IOException">if the socket is already bound or a problem occurs during
             binding.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public virtual void Bind (Java.Net.SocketAddress localAddr, int backlog);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Bind(class Java.Net.SocketAddress localAddr, int32 backlog) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("bind", "(Ljava/net/SocketAddress;I)V", "GetBind_Ljava_net_SocketAddress_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localAddr" Type="Java.Net.SocketAddress" />
        <Parameter Name="backlog" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="localAddr">the local machine address and port to bind on.</param>
        <param name="backlog">the maximum number of unaccepted connections. Passing 0 or
     a negative value yields the default backlog of 50.</param>
        <summary>Binds this server socket to the given local socket address.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Binds this server socket to the given local socket address. If the
 <c>localAddr</c> is set to <c>null</c> the socket will be bound to an
 available local address on any free port of the system.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/ServerSocket.html#bind(java.net.SocketAddress, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the <c>SocketAddress</c> is not
     supported.</exception>
        <exception cref="T:Java.IO.IOException">if the socket is already bound or a problem occurs
     during binding.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Channel">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.Channels.ServerSocketChannel Channel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Nio.Channels.ServerSocketChannel Channel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getChannel", "()Ljava/nio/channels/ServerSocketChannel;", "GetGetChannelHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.ServerSocketChannel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns this socket's <c>ServerSocketChannel</c>, if one exists.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns this socket's <c>ServerSocketChannel</c>, if one exists. A channel is
 available only if this socket wraps a channel. (That is, you can go from a
 channel to a socket and back again, but you can't go from an arbitrary socket to a channel.)
 In practice, this means that the socket must have been created by
 <c><see cref="M:Java.Nio.Channels.ServerSocketChannel.Open" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/ServerSocket.html#getChannel()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("close", "()V", "GetCloseHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes this server socket and its implementation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Closes this server socket and its implementation. Any attempt to connect
 to this socket thereafter will fail.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/ServerSocket.html#close()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while closing this socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ImplAccept">
      <MemberSignature Language="C#" Value="protected void ImplAccept (Java.Net.Socket aSocket);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ImplAccept(class Java.Net.Socket aSocket) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("implAccept", "(Ljava/net/Socket;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aSocket" Type="Java.Net.Socket" />
      </Parameters>
      <Docs>
        <param name="aSocket">the concrete <c>SocketImpl</c> to accept the connection
            request on.</param>
        <summary>Invokes the server socket implementation to accept a connection on the
 given socket <c>aSocket</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Invokes the server socket implementation to accept a connection on the
 given socket <c>aSocket</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/ServerSocket.html#implAccept(java.net.Socket)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if the connection cannot be accepted.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ImplAcceptAsync">
      <MemberSignature Language="C#" Value="protected System.Threading.Tasks.Task ImplAcceptAsync (Java.Net.Socket aSocket);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Threading.Tasks.Task ImplAcceptAsync(class Java.Net.Socket aSocket) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aSocket" Type="Java.Net.Socket" />
      </Parameters>
      <Docs>
        <param name="aSocket">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InetAddress">
      <MemberSignature Language="C#" Value="public virtual Java.Net.InetAddress InetAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Net.InetAddress InetAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getInetAddress", "()Ljava/net/InetAddress;", "GetGetInetAddressHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.InetAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local IP address of this server socket if this socket has ever been bound,
 <c>null</c> otherwise.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the local IP address of this server socket if this socket has ever been bound,
 <c>null</c> otherwise. This is useful for multihomed hosts.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/ServerSocket.html#getInetAddress()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsBound">
      <MemberSignature Language="C#" Value="public virtual bool IsBound { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBound" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isBound", "()Z", "GetIsBoundHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether this server socket is bound to a local address and port
 or not.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns whether this server socket is bound to a local address and port
 or not.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/ServerSocket.html#isBound()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public virtual bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isClosed", "()Z", "GetIsClosedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether this server socket is closed or not.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns whether this server socket is closed or not.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/ServerSocket.html#isClosed()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LocalPort">
      <MemberSignature Language="C#" Value="public virtual int LocalPort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LocalPort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLocalPort", "()I", "GetGetLocalPortHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local port of this server socket or <c>-1</c> if the socket is not bound.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the local port of this server socket or <c>-1</c> if the socket is not bound.
 If the socket has ever been bound this method will return the local port it was bound to,
 even after it has been closed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/ServerSocket.html#getLocalPort()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LocalSocketAddress">
      <MemberSignature Language="C#" Value="public virtual Java.Net.SocketAddress LocalSocketAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Net.SocketAddress LocalSocketAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLocalSocketAddress", "()Ljava/net/SocketAddress;", "GetGetLocalSocketAddressHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.SocketAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the local socket address of this server socket or <c>null</c> if the socket is unbound.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the local socket address of this server socket or <c>null</c> if the socket is unbound.
 This is useful on multihomed hosts. If the socket has ever been bound this method will return
 the local address it was bound to, even after it has been closed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/ServerSocket.html#getLocalSocketAddress()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public virtual int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getReceiveBufferSize", "()I", "GetGetReceiveBufferSizeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setReceiveBufferSize", "(I)V", "GetSetReceiveBufferSize_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns this socket's <c><see cref="F:Java.Net.SocketOptions.SoRcvbuf" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/java/net/ServerSocket.html#getReceiveBufferSize()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns this socket's <c><see cref="F:Java.Net.SocketOptions.SoRcvbuf" /></c>.
</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/java/net/ServerSocket.html#setReceiveBufferSize(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets this socket's <c><see cref="F:Java.Net.SocketOptions.SoSndbuf" /></c>.
</para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException" />
        <exception cref="T:Java.Net.SocketException" />
      </Docs>
    </Member>
    <Member MemberName="ReuseAddress">
      <MemberSignature Language="C#" Value="public virtual bool ReuseAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReuseAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getReuseAddress", "()Z", "GetGetReuseAddressHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setReuseAddress", "(Z)V", "GetSetReuseAddress_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the value of the socket option <c>SocketOptions.SO_REUSEADDR</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/java/net/ServerSocket.html#getReuseAddress()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the value of the socket option <c>SocketOptions.SO_REUSEADDR</c>.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/java/net/ServerSocket.html#setReuseAddress(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the value for the socket option <c>SocketOptions.SO_REUSEADDR</c>.</para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException">if an error occurs while reading the option value.
</exception>
        <exception cref="T:Java.Net.SocketException">if an error occurs while setting the option value.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetPerformancePreferences">
      <MemberSignature Language="C#" Value="public virtual void SetPerformancePreferences (int connectionTime, int latency, int bandwidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPerformancePreferences(int32 connectionTime, int32 latency, int32 bandwidth) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPerformancePreferences", "(III)V", "GetSetPerformancePreferences_IIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionTime" Type="System.Int32" />
        <Parameter Name="latency" Type="System.Int32" />
        <Parameter Name="bandwidth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="connectionTime">the value representing the importance of a short connecting
            time.</param>
        <param name="latency">the value representing the importance of low latency.</param>
        <param name="bandwidth">the value representing the importance of high bandwidth.
</param>
        <summary>Sets performance preferences for connection time, latency and bandwidth.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets performance preferences for connection time, latency and bandwidth.
 </para>
          <para tool="javadoc-to-mdoc">
 This method does currently nothing.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/ServerSocket.html#setPerformancePreferences(int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetSocketFactory">
      <MemberSignature Language="C#" Value="public static void SetSocketFactory (Java.Net.ISocketImplFactory aFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetSocketFactory(class Java.Net.ISocketImplFactory aFactory) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSocketFactory", "(Ljava/net/SocketImplFactory;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aFactory" Type="Java.Net.ISocketImplFactory" />
      </Parameters>
      <Docs>
        <param name="aFactory">the streaming socket factory to be used for further socket
            instantiations.</param>
        <summary>Sets the server socket implementation factory of this instance.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the server socket implementation factory of this instance. This
 method may only be invoked with sufficient security privilege and only
 once during the application lifetime.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/ServerSocket.html#setSocketFactory(java.net.SocketImplFactory)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if the factory could not be set or is already set.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SoTimeout">
      <MemberSignature Language="C#" Value="public virtual int SoTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SoTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSoTimeout", "()I", "GetGetSoTimeoutHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSoTimeout", "(I)V", "GetSetSoTimeout_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the socket <c><see cref="F:Java.Net.SocketOptions.SoTimeout" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/java/net/ServerSocket.html#getSoTimeout()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the socket <c><see cref="F:Java.Net.SocketOptions.SoTimeout" /></c>.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/java/net/ServerSocket.html#setSoTimeout(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the <c><see cref="F:Java.Net.SocketOptions.SoTimeout" /></c> in milliseconds for this socket.
 This accept timeout defines the period the socket will block waiting to
 accept a connection before throwing an <c>InterruptedIOException</c>. The value
 <c>0</c> (default) is used to set an infinite timeout. To have effect
 this option must be set before the blocking method was called.</para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if the option cannot be retrieved.
</exception>
        <exception cref="T:Java.Net.SocketException">if an error occurs while setting the option.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>