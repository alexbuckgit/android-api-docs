<Type Name="NetworkInterface" FullName="Java.Net.NetworkInterface">
  <TypeSignature Language="C#" Value="public sealed class NetworkInterface : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NetworkInterface extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/net/NetworkInterface", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This class is used to represent a network interface of the local device.</summary>
    <remarks><para tool="javadoc-to-mdoc">This class is used to represent a network interface of the local device. An
 interface is defined by its address and a platform dependent name. The class
 provides methods to get all information about the available interfaces of the
 system or to identify the local interface of a joined multicast group.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/NetworkInterface.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDisplayName", "()Ljava/lang/String;", "GetGetDisplayNameHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a human-readable name for this network interface.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns a human-readable name for this network interface. On Android, this is the same
 string as returned by <c><see cref="P:Java.Net.NetworkInterface.Name" /></c>.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/NetworkInterface.html#getDisplayName()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetByIndex">
      <MemberSignature Language="C#" Value="public static Java.Net.NetworkInterface GetByIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Net.NetworkInterface GetByIndex(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getByIndex", "(I)Ljava/net/NetworkInterface;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.NetworkInterface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>Returns the NetworkInterface corresponding to the given interface index, or null if no
 interface has this index.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns the NetworkInterface corresponding to the given interface index, or null if no
 interface has this index.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/NetworkInterface.html#getByIndex(int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <exception cref="T:Java.Net.SocketException">if an error occurs.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetByInetAddress">
      <MemberSignature Language="C#" Value="public static Java.Net.NetworkInterface GetByInetAddress (Java.Net.InetAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Net.NetworkInterface GetByInetAddress(class Java.Net.InetAddress address) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getByInetAddress", "(Ljava/net/InetAddress;)Ljava/net/NetworkInterface;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.NetworkInterface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="Java.Net.InetAddress" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>Returns the <c>NetworkInterface</c> corresponding to the given address, or null if no
 interface has this address.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns the <c>NetworkInterface</c> corresponding to the given address, or null if no
 interface has this address.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/NetworkInterface.html#getByInetAddress(java.net.InetAddress)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException">if an error occurs.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>address == null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetByName">
      <MemberSignature Language="C#" Value="public static Java.Net.NetworkInterface GetByName (string interfaceName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Net.NetworkInterface GetByName(string interfaceName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getByName", "(Ljava/lang/String;)Ljava/net/NetworkInterface;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.NetworkInterface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interfaceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="interfaceName">To be added.</param>
        <summary>Returns the <c>NetworkInterface</c> corresponding to the named network interface, or null
 if no interface has this name.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns the <c>NetworkInterface</c> corresponding to the named network interface, or null
 if no interface has this name.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/NetworkInterface.html#getByName(java.lang.String)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException">if an error occurs.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>interfaceName == null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHardwareAddress">
      <MemberSignature Language="C#" Value="public byte[] GetHardwareAddress ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetHardwareAddress() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getHardwareAddress", "()[B", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the hardware address of the interface, if it has one, or null otherwise.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns the hardware address of the interface, if it has one, or null otherwise.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/NetworkInterface.html#getHardwareAddress()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Net.SocketException">if an I/O error occurs.</exception>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getIndex", "()I", "GetGetIndexHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the index for the network interface, or -1 if unknown.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns the index for the network interface, or -1 if unknown.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/NetworkInterface.html#getIndex()" target="_blank">[Android Documentation]</a></format></para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InetAddresses">
      <MemberSignature Language="C#" Value="public Java.Util.IEnumeration InetAddresses { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.IEnumeration InetAddresses" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getInetAddresses", "()Ljava/util/Enumeration;", "GetGetInetAddressesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.IEnumeration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns an enumeration of the addresses bound to this network interface.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns an enumeration of the addresses bound to this network interface.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/NetworkInterface.html#getInetAddresses()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InterfaceAddresses">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Java.Net.InterfaceAddress&gt; InterfaceAddresses { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Java.Net.InterfaceAddress&gt; InterfaceAddresses" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getInterfaceAddresses", "()Ljava/util/List;", "GetGetInterfaceAddressesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Java.Net.InterfaceAddress&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a List of the InterfaceAddresses for this network interface.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns a List of the InterfaceAddresses for this network interface.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/NetworkInterface.html#getInterfaceAddresses()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="IsLoopback">
      <MemberSignature Language="C#" Value="public bool IsLoopback { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLoopback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isLoopback", "()Z", "GetIsLoopbackHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this network interface is a loopback interface.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns true if this network interface is a loopback interface.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/NetworkInterface.html#isLoopback()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Net.SocketException">if an I/O error occurs.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsPointToPoint">
      <MemberSignature Language="C#" Value="public bool IsPointToPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPointToPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isPointToPoint", "()Z", "GetIsPointToPointHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this network interface is a point-to-point interface.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns true if this network interface is a point-to-point interface.
 (For example, a PPP connection using a modem.)</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/NetworkInterface.html#isPointToPoint()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Net.SocketException">if an I/O error occurs.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUp">
      <MemberSignature Language="C#" Value="public bool IsUp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isUp", "()Z", "GetIsUpHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this network interface is up.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns true if this network interface is up.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/NetworkInterface.html#isUp()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Net.SocketException">if an I/O error occurs.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsVirtual">
      <MemberSignature Language="C#" Value="public bool IsVirtual { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVirtual" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isVirtual", "()Z", "GetIsVirtualHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this interface is a virtual interface (also called
 a sub-interface).</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns true if this interface is a virtual interface (also called
 a sub-interface). Virtual interfaces are, on some systems, interfaces
 created as a child of a physical interface and given different settings
 (like address or MTU). Usually the name of the interface will the name of
 the parent followed by a colon (:) and a number identifying the child,
 since there can be several virtual interfaces attached to a single
 physical interface.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/NetworkInterface.html#isVirtual()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="MTU">
      <MemberSignature Language="C#" Value="public int MTU { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MTU" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMTU", "()I", "GetGetMTUHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the Maximum Transmission Unit (MTU) of this interface.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns the Maximum Transmission Unit (MTU) of this interface.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/NetworkInterface.html#getMTU()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Net.SocketException">if an I/O error occurs.</exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getName", "()Ljava/lang/String;", "GetGetNameHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the name of this network interface (such as "eth0" or "lo").</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns the name of this network interface (such as "eth0" or "lo").
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/NetworkInterface.html#getName()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NetworkInterfaces">
      <MemberSignature Language="C#" Value="public static Java.Util.IEnumeration NetworkInterfaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Util.IEnumeration NetworkInterfaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getNetworkInterfaces", "()Ljava/util/Enumeration;", "GetGetNetworkInterfacesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.IEnumeration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a list of all network interfaces available on the local system or
 <c>null</c> if no interface is available.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Gets a list of all network interfaces available on the local system or
 <c>null</c> if no interface is available.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/NetworkInterface.html#getNetworkInterfaces()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException">if an error occurs while getting the network interface
             information.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public Java.Net.NetworkInterface Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Net.NetworkInterface Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getParent", "()Ljava/net/NetworkInterface;", "GetGetParentHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.NetworkInterface</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the parent NetworkInterface of this interface if this is a
 sub-interface, or null if it's a physical (non virtual) interface.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns the parent NetworkInterface of this interface if this is a
 sub-interface, or null if it's a physical (non virtual) interface.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/NetworkInterface.html#getParent()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="SubInterfaces">
      <MemberSignature Language="C#" Value="public Java.Util.IEnumeration SubInterfaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.IEnumeration SubInterfaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSubInterfaces", "()Ljava/util/Enumeration;", "GetGetSubInterfacesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.IEnumeration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns an enumeration of all the sub-interfaces of this network interface.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns an enumeration of all the sub-interfaces of this network interface.
 Sub-interfaces are also known as virtual interfaces.

 </para><para tool="javadoc-to-mdoc">For example, <c>eth0:1</c> would be a sub-interface of <c>eth0</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/NetworkInterface.html#getSubInterfaces()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="SupportsMulticast">
      <MemberSignature Language="C#" Value="public bool SupportsMulticast ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SupportsMulticast() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("supportsMulticast", "()Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns true if this network interface supports multicast.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Returns true if this network interface supports multicast.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/NetworkInterface.html#supportsMulticast()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Net.SocketException">if an I/O error occurs.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
