<Type Name="DatagramSocketImpl" FullName="Java.Net.DatagramSocketImpl">
  <TypeSignature Language="C#" Value="public abstract class DatagramSocketImpl : Java.Lang.Object, IDisposable, Java.Net.ISocketOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DatagramSocketImpl extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Net.ISocketOptions, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Java.Net.ISocketOptions</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/net/DatagramSocketImpl", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>The abstract superclass for datagram and multicast socket implementations.</summary>
    <remarks><para tool="javadoc-to-mdoc">The abstract superclass for datagram and multicast socket implementations.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/DatagramSocketImpl.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DatagramSocketImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Constructs an unbound datagram socket implementation.</summary>
        <remarks><para tool="javadoc-to-mdoc">Constructs an unbound datagram socket implementation.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/DatagramSocketImpl.html#DatagramSocketImpl()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DatagramSocketImpl (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="protected abstract void Bind (int port, Java.Net.InetAddress addr);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Bind(int32 port, class Java.Net.InetAddress addr) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("bind", "(ILjava/net/InetAddress;)V", "GetBind_ILjava_net_InetAddress_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="addr" Type="Java.Net.InetAddress" />
      </Parameters>
      <Docs>
        <param name="port">the port on the localhost to bind.</param>
        <param name="addr">the address on the multihomed localhost to bind.</param>
        <summary>Binds the datagram socket to the given localhost/port.</summary>
        <remarks><para tool="javadoc-to-mdoc">Binds the datagram socket to the given localhost/port. Sockets must be
 bound prior to attempting to send or receive data.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/DatagramSocketImpl.html#bind(int, java.net.InetAddress)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException">if an error occurs while binding, for example, if the port
                has been already bound.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="protected abstract void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Close() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("close", "()V", "GetCloseHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes this socket.</summary>
        <remarks><para tool="javadoc-to-mdoc">Closes this socket.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/DatagramSocketImpl.html#close()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="protected virtual void Connect (Java.Net.InetAddress inetAddr, int port);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Connect(class Java.Net.InetAddress inetAddr, int32 port) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("connect", "(Ljava/net/InetAddress;I)V", "GetConnect_Ljava_net_InetAddress_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inetAddr" Type="Java.Net.InetAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inetAddr">the address of the target host which has to be connected.</param>
        <param name="port">the port on the target host which has to be connected.</param>
        <summary>Connects this socket to the specified remote address and port.</summary>
        <remarks><para tool="javadoc-to-mdoc">Connects this socket to the specified remote address and port.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/DatagramSocketImpl.html#connect(java.net.InetAddress, int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException">if the datagram socket cannot be connected to the
                specified remote address and port.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="protected System.Threading.Tasks.Task ConnectAsync (Java.Net.InetAddress inetAddr, int port);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Threading.Tasks.Task ConnectAsync(class Java.Net.InetAddress inetAddr, int32 port) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inetAddr" Type="Java.Net.InetAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inetAddr">To be added.</param>
        <param name="port">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="protected abstract void Create ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Create() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("create", "()V", "GetCreateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This method allocates the socket descriptor in the underlying operating
 system.</summary>
        <remarks><para tool="javadoc-to-mdoc">This method allocates the socket descriptor in the underlying operating
 system.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/DatagramSocketImpl.html#create()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException">if an error occurs while creating the socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Disconnect">
      <MemberSignature Language="C#" Value="protected virtual void Disconnect ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Disconnect() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("disconnect", "()V", "GetDisconnectHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disconnects this socket from the remote host.</summary>
        <remarks><para tool="javadoc-to-mdoc">Disconnects this socket from the remote host.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/DatagramSocketImpl.html#disconnect()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Fd">
      <MemberSignature Language="C#" Value="protected Java.IO.FileDescriptor Fd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.IO.FileDescriptor Fd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("fd")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.FileDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>File descriptor that is used to address this socket.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">File descriptor that is used to address this socket.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/DatagramSocketImpl.html#fd" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FileDescriptor">
      <MemberSignature Language="C#" Value="protected virtual Java.IO.FileDescriptor FileDescriptor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.IO.FileDescriptor FileDescriptor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFileDescriptor", "()Ljava/io/FileDescriptor;", "GetGetFileDescriptorHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.FileDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <c>FileDescriptor</c> of this datagram socket, which is invalid
 if the socket is closed or not bound.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Gets the <c>FileDescriptor</c> of this datagram socket, which is invalid
 if the socket is closed or not bound.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/DatagramSocketImpl.html#getFileDescriptor()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetOption">
      <MemberSignature Language="C#" Value="public abstract Java.Lang.Object GetOption (int optID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object GetOption(int32 optID) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getOption", "(I)Ljava/lang/Object;", "GetGetOption_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="optID">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="protected abstract void Join (Java.Net.InetAddress addr);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Join(class Java.Net.InetAddress addr) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("join", "(Ljava/net/InetAddress;)V", "GetJoin_Ljava_net_InetAddress_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addr" Type="Java.Net.InetAddress" />
      </Parameters>
      <Docs>
        <param name="addr">the multicast group to which this socket has to be joined.</param>
        <summary>Adds this socket to the multicast group <c>addr</c>.</summary>
        <remarks><para tool="javadoc-to-mdoc">Adds this socket to the multicast group <c>addr</c>. A socket must join
 a group before being able to receive data. Further, a socket may be a
 member of multiple groups but may join any group only once.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/DatagramSocketImpl.html#join(java.net.InetAddress)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while joining the specified multicast
             group.
</exception>
      </Docs>
    </Member>
    <Member MemberName="JoinGroup">
      <MemberSignature Language="C#" Value="protected abstract void JoinGroup (Java.Net.SocketAddress addr, Java.Net.NetworkInterface netInterface);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void JoinGroup(class Java.Net.SocketAddress addr, class Java.Net.NetworkInterface netInterface) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("joinGroup", "(Ljava/net/SocketAddress;Ljava/net/NetworkInterface;)V", "GetJoinGroup_Ljava_net_SocketAddress_Ljava_net_NetworkInterface_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addr" Type="Java.Net.SocketAddress" />
        <Parameter Name="netInterface" Type="Java.Net.NetworkInterface" />
      </Parameters>
      <Docs>
        <param name="addr">the multicast group to which this socket has to be joined.</param>
        <param name="netInterface">the local network interface which will receive the multicast
            datagram packets.</param>
        <summary>Adds this socket to the multicast group <c>addr</c>.</summary>
        <remarks><para tool="javadoc-to-mdoc">Adds this socket to the multicast group <c>addr</c>. A socket must join
 a group before being able to receive data. Further, a socket may be a
 member of multiple groups but may join any group only once.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/DatagramSocketImpl.html#joinGroup(java.net.SocketAddress, java.net.NetworkInterface)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while joining the specified multicast
             group.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Leave">
      <MemberSignature Language="C#" Value="protected abstract void Leave (Java.Net.InetAddress addr);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Leave(class Java.Net.InetAddress addr) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("leave", "(Ljava/net/InetAddress;)V", "GetLeave_Ljava_net_InetAddress_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addr" Type="Java.Net.InetAddress" />
      </Parameters>
      <Docs>
        <param name="addr">the multicast group to be left.</param>
        <summary>Removes this socket from the multicast group <c>addr</c>.</summary>
        <remarks><para tool="javadoc-to-mdoc">Removes this socket from the multicast group <c>addr</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/DatagramSocketImpl.html#leave(java.net.InetAddress)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while leaving the group or no multicast
             address was assigned.
</exception>
      </Docs>
    </Member>
    <Member MemberName="LeaveGroup">
      <MemberSignature Language="C#" Value="protected abstract void LeaveGroup (Java.Net.SocketAddress addr, Java.Net.NetworkInterface netInterface);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LeaveGroup(class Java.Net.SocketAddress addr, class Java.Net.NetworkInterface netInterface) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("leaveGroup", "(Ljava/net/SocketAddress;Ljava/net/NetworkInterface;)V", "GetLeaveGroup_Ljava_net_SocketAddress_Ljava_net_NetworkInterface_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addr" Type="Java.Net.SocketAddress" />
        <Parameter Name="netInterface" Type="Java.Net.NetworkInterface" />
      </Parameters>
      <Docs>
        <param name="addr">the multicast group to be left.</param>
        <param name="netInterface">the local network interface on which this socket has to be
            removed.</param>
        <summary>Removes this socket from the multicast group <c>addr</c>.</summary>
        <remarks><para tool="javadoc-to-mdoc">Removes this socket from the multicast group <c>addr</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/DatagramSocketImpl.html#leaveGroup(java.net.SocketAddress, java.net.NetworkInterface)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while leaving the group.
</exception>
      </Docs>
    </Member>
    <Member MemberName="LocalPort">
      <MemberSignature Language="C#" Value="protected virtual int LocalPort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LocalPort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLocalPort", "()I", "GetGetLocalPortHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the local port to which this socket is bound.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns the local port to which this socket is bound.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/DatagramSocketImpl.html#getLocalPort()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="protected abstract int Peek (Java.Net.InetAddress sender);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Peek(class Java.Net.InetAddress sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("peek", "(Ljava/net/InetAddress;)I", "GetPeek_Ljava_net_InetAddress_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Java.Net.InetAddress" />
      </Parameters>
      <Docs>
        <param name="sender">the origin address of a packet.</param>
        <summary>Peeks at the incoming packet to this socket and returns the address of
 the <c>sender</c>.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Peeks at the incoming packet to this socket and returns the address of
 the <c>sender</c>. The method will block until a packet is received or
 timeout expires.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/DatagramSocketImpl.html#peek(java.net.InetAddress)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error or a timeout occurs while reading the address.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PeekAsync">
      <MemberSignature Language="C#" Value="protected System.Threading.Tasks.Task&lt;int&gt; PeekAsync (Java.Net.InetAddress sender);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; PeekAsync(class Java.Net.InetAddress sender) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="Java.Net.InetAddress" />
      </Parameters>
      <Docs>
        <param name="sender">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PeekData">
      <MemberSignature Language="C#" Value="protected abstract int PeekData (Java.Net.DatagramPacket pack);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 PeekData(class Java.Net.DatagramPacket pack) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("peekData", "(Ljava/net/DatagramPacket;)I", "GetPeekData_Ljava_net_DatagramPacket_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pack" Type="Java.Net.DatagramPacket" />
      </Parameters>
      <Docs>
        <param name="pack">the datagram packet used to store the data.</param>
        <summary>Receives data into the supplied datagram packet by peeking.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Receives data into the supplied datagram packet by peeking. The data is
 not removed from socket buffer and can be received again by another
 <c>peekData()</c> or <c>receive()</c> call. This call blocks until
 either data has been received or, if a timeout is set, the timeout has
 been expired.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/DatagramSocketImpl.html#peekData(java.net.DatagramPacket)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while peeking at the data.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PeekDataAsync">
      <MemberSignature Language="C#" Value="protected System.Threading.Tasks.Task&lt;int&gt; PeekDataAsync (Java.Net.DatagramPacket pack);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; PeekDataAsync(class Java.Net.DatagramPacket pack) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pack" Type="Java.Net.DatagramPacket" />
      </Parameters>
      <Docs>
        <param name="pack">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="protected abstract void Receive (Java.Net.DatagramPacket pack);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Receive(class Java.Net.DatagramPacket pack) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("receive", "(Ljava/net/DatagramPacket;)V", "GetReceive_Ljava_net_DatagramPacket_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pack" Type="Java.Net.DatagramPacket" />
      </Parameters>
      <Docs>
        <param name="pack">the datagram packet container to fill in the received data.</param>
        <summary>Receives data and stores it in the supplied datagram packet <c>pack</c>.</summary>
        <remarks><para tool="javadoc-to-mdoc">Receives data and stores it in the supplied datagram packet <c>pack</c>.
 This call will block until either data has been received or, if a timeout
 is set, the timeout has expired. If the timeout expires an <c>InterruptedIOException</c> is thrown.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/DatagramSocketImpl.html#receive(java.net.DatagramPacket)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error or timeout occurs while receiving data.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="protected System.Threading.Tasks.Task ReceiveAsync (Java.Net.DatagramPacket pack);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Threading.Tasks.Task ReceiveAsync(class Java.Net.DatagramPacket pack) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pack" Type="Java.Net.DatagramPacket" />
      </Parameters>
      <Docs>
        <param name="pack">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="protected abstract void Send (Java.Net.DatagramPacket pack);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Send(class Java.Net.DatagramPacket pack) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("send", "(Ljava/net/DatagramPacket;)V", "GetSend_Ljava_net_DatagramPacket_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pack" Type="Java.Net.DatagramPacket" />
      </Parameters>
      <Docs>
        <param name="pack">the datagram packet to be sent.</param>
        <summary>Sends the given datagram packet <c>pack</c>.</summary>
        <remarks><para tool="javadoc-to-mdoc">Sends the given datagram packet <c>pack</c>. The packet contains the
 data and the address and port information of the target host as well.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/DatagramSocketImpl.html#send(java.net.DatagramPacket)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while sending the packet.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="protected System.Threading.Tasks.Task SendAsync (Java.Net.DatagramPacket pack);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Threading.Tasks.Task SendAsync(class Java.Net.DatagramPacket pack) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pack" Type="Java.Net.DatagramPacket" />
      </Parameters>
      <Docs>
        <param name="pack">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOption">
      <MemberSignature Language="C#" Value="public abstract void SetOption (int optID, Java.Lang.Object val);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOption(int32 optID, class Java.Lang.Object val) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOption", "(ILjava/lang/Object;)V", "GetSetOption_ILjava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optID" Type="System.Int32" />
        <Parameter Name="val" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="optID">To be added.</param>
        <param name="val">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeToLive">
      <MemberSignature Language="C#" Value="protected abstract int TimeToLive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TimeToLive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTimeToLive", "()I", "GetGetTimeToLiveHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTimeToLive", "(I)V", "GetSetTimeToLive_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the time-to-live (TTL) for multicast packets sent on this socket.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/java/net/DatagramSocketImpl.html#getTimeToLive()" target="_blank">[Android Documentation]</a><br /></format>Gets the time-to-live (TTL) for multicast packets sent on this socket.
 The TTL option defines how many routers a packet may be pass before it is
 discarded.</para><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/java/net/DatagramSocketImpl.html#setTimeToLive(int)" target="_blank">[Android Documentation]</a><br /></format>Sets the time-to-live (TTL) option for multicast packets sent on this
 socket.</para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while getting the time-to-live option
             value.
</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while setting the option.
</exception>
      </Docs>
    </Member>
    <Member MemberName="TTL">
      <MemberSignature Language="C#" Value="protected abstract sbyte TTL { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int8 TTL" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTTL", "()B", "GetGetTTLHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTTL", "(B)V", "GetSetTTL_BHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the time-to-live (TTL) for multicast packets sent on this socket.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/java/net/DatagramSocketImpl.html#getTTL()" target="_blank">[Android Documentation]</a><br /></format>Gets the time-to-live (TTL) for multicast packets sent on this socket.</para><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/java/net/DatagramSocketImpl.html#setTTL(byte)" target="_blank">[Android Documentation]</a><br /></format>Sets the time-to-live (TTL) option for multicast packets sent on this
 socket.</para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while getting the time-to-live option
             value.</exception>
        <altmember cref="P:Java.Net.DatagramSocketImpl.TimeToLive" />
        <exception cref="T:Java.IO.IOException">if an error occurs while setting the option.</exception>
        <altmember cref="P:Java.Net.DatagramSocketImpl.TimeToLive" />
      </Docs>
    </Member>
  </Members>
</Type>
