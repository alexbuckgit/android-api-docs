<Type Name="Inet6Address" FullName="Java.Net.Inet6Address">
  <TypeSignature Language="C#" Value="public sealed class Inet6Address : Java.Net.InetAddress" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Inet6Address extends Java.Net.InetAddress" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Net.InetAddress</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/net/Inet6Address", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>An IPv6 address.</summary>
    <remarks><para tool="javadoc-to-mdoc">An IPv6 address. See <c><see cref="T:Java.Net.InetAddress" /></c>.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/Inet6Address.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="GetByAddress">
      <MemberSignature Language="C#" Value="public static Java.Net.Inet6Address GetByAddress (string host, byte[] addr, Java.Net.NetworkInterface nif);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Net.Inet6Address GetByAddress(string host, unsigned int8[] addr, class Java.Net.NetworkInterface nif) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getByAddress", "(Ljava/lang/String;[BLjava/net/NetworkInterface;)Ljava/net/Inet6Address;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.Inet6Address</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="addr" Type="System.Byte[]" />
        <Parameter Name="nif" Type="Java.Net.NetworkInterface" />
      </Parameters>
      <Docs>
        <param name="host">the hostname associated with the address.</param>
        <param name="addr">the network address.</param>
        <param name="nif">the network interface that this address is associated with.</param>
        <summary>Gets an IPv6 address instance according to the given <c>host</c>,
 <c>addr</c> and <c>nif</c>.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Gets an IPv6 address instance according to the given <c>host</c>,
 <c>addr</c> and <c>nif</c>. <c>scope_id</c> is set according to the
 given <c>nif</c> and the <c>addr</c> type (for example site-local or
 link-local).</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/Inet6Address.html#getByAddress(java.lang.String, byte[], java.net.NetworkInterface)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.UnknownHostException">if the address is <c>null</c> or has an invalid length or
             the interface doesn't have a numeric scope id for the given
             address type.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetByAddress">
      <MemberSignature Language="C#" Value="public static Java.Net.Inet6Address GetByAddress (string host, byte[] addr, int scope_id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Net.Inet6Address GetByAddress(string host, unsigned int8[] addr, int32 scope_id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getByAddress", "(Ljava/lang/String;[BI)Ljava/net/Inet6Address;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.Inet6Address</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="addr" Type="System.Byte[]" />
        <Parameter Name="scope_id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">the host name associated with the address.</param>
        <param name="addr">the network address.</param>
        <param name="scope_id">the scope id for link- or site-local addresses.</param>
        <summary>Constructs an IPv6 address according to the given <c>host</c>, <c>addr</c> and <c>scope_id</c>.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Constructs an IPv6 address according to the given <c>host</c>, <c>addr</c> and <c>scope_id</c>.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/Inet6Address.html#getByAddress(java.lang.String, byte[], int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.UnknownHostException">if the address is null or has an invalid length.
</exception>
      </Docs>
    </Member>
    <Member MemberName="IsIPv4CompatibleAddress">
      <MemberSignature Language="C#" Value="public bool IsIPv4CompatibleAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIPv4CompatibleAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isIPv4CompatibleAddress", "()Z", "GetIsIPv4CompatibleAddressHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether this IPv6 address is an IPv4-compatible address or not.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns whether this IPv6 address is an IPv4-compatible address or not.
 An IPv4-compatible address has the prefix <c>::/96</c> and is a deprecated
 and no-longer used equivalent of the modern IPv4-mapped IPv6 addresses.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/Inet6Address.html#isIPv4CompatibleAddress()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ScopedInterface">
      <MemberSignature Language="C#" Value="public Java.Net.NetworkInterface ScopedInterface { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Net.NetworkInterface ScopedInterface" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getScopedInterface", "()Ljava/net/NetworkInterface;", "GetGetScopedInterfaceHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.NetworkInterface</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the network interface if this address is instanced with a scoped
 network interface, null otherwise.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns the network interface if this address is instanced with a scoped
 network interface, null otherwise.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/Inet6Address.html#getScopedInterface()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ScopeId">
      <MemberSignature Language="C#" Value="public int ScopeId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScopeId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getScopeId", "()I", "GetGetScopeIdHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the scope id if this address is scoped to an interface, 0 otherwise.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns the scope id if this address is scoped to an interface, 0 otherwise.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/java/net/Inet6Address.html#getScopeId()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
