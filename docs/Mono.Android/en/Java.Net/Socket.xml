<Type Name="Socket" FullName="Java.Net.Socket">
  <TypeSignature Language="C#" Value="public class Socket : Java.Lang.Object, IDisposable, Java.IO.ICloseable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Socket extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.IO.ICloseable, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Java.IO.ICloseable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/net/Socket", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Provides a client-side TCP socket.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Provides a client-side TCP socket.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/java/net/Socket.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Socket ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Creates a new unconnected socket.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new unconnected socket. When a SocketImplFactory is defined it
 creates the internal socket implementation, otherwise the default socket
 implementation will be used for this socket.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/Socket.html#Socket()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Java.Net.ISocketImplFactory" />
        <altmember cref="T:Java.Net.SocketImpl" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Socket (Java.Net.Proxy proxy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Net.Proxy proxy) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/net/Proxy;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="proxy" Type="Java.Net.Proxy" />
      </Parameters>
      <Docs>
        <param name="proxy">To be added.</param>
        <summary>Creates a new unconnected socket using the given proxy type.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new unconnected socket using the given proxy type. When a
 <c>SocketImplFactory</c> is defined it creates the internal socket
 implementation, otherwise the default socket implementation will be used
 for this socket.
 </para>
          <para tool="javadoc-to-mdoc">
 Example that will create a socket connection through a <c>SOCKS</c>
 proxy server: <format type="text/html"><br /></format><c>Socket sock = new Socket(new Proxy(Proxy.Type.SOCKS, new
 InetSocketAddress("test.domain.org", 2130)));</c></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/Socket.html#Socket(java.net.Proxy)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the argument <c>proxy</c> is <c>null</c> or of an
             invalid type.</exception>
        <altmember cref="T:Java.Net.ISocketImplFactory" />
        <altmember cref="T:Java.Net.SocketImpl" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Socket (Java.Net.SocketImpl impl);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Java.Net.SocketImpl impl) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/net/SocketImpl;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="anImpl" Type="Java.Net.SocketImpl" />
      </Parameters>
      <Docs>
        <param name="impl">To be added.</param>
        <summary>Creates an unconnected socket with the given socket implementation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates an unconnected socket with the given socket implementation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/Socket.html#Socket(java.net.SocketImpl)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException">if an error occurs while creating the socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Socket (Java.Net.InetAddress dstAddress, int dstPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Net.InetAddress dstAddress, int32 dstPort) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/net/InetAddress;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="dstAddress" Type="Java.Net.InetAddress" />
        <Parameter Name="dstPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dstAddress">To be added.</param>
        <param name="dstPort">To be added.</param>
        <summary>Creates a new streaming socket connected to the target host specified by
 the parameters <c>dstAddress</c> and <c>dstPort</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new streaming socket connected to the target host specified by
 the parameters <c>dstAddress</c> and <c>dstPort</c>. The socket is
 bound to any available port on the local host.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/Socket.html#Socket(java.net.InetAddress, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while creating the socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Socket (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Socket (string dstName, int dstPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string dstName, int32 dstPort) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="dstName" Type="System.String" />
        <Parameter Name="dstPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dstName">To be added.</param>
        <param name="dstPort">To be added.</param>
        <summary>Creates a new streaming socket connected to the target host specified by
 the parameters <c>dstName</c> and <c>dstPort</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new streaming socket connected to the target host specified by
 the parameters <c>dstName</c> and <c>dstPort</c>. The socket is bound
 to any available port on the local host.

 </para>
          <para tool="javadoc-to-mdoc">This implementation tries each IP address for the given hostname (in
  order)
 until it either connects successfully or it exhausts the set.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/Socket.html#Socket(java.lang.String, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.UnknownHostException">if the host name could not be resolved into an IP address.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while creating the socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Socket (Java.Net.InetAddress addr, int port, bool streaming);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Net.InetAddress addr, int32 port, bool streaming) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/net/InetAddress;IZ)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="addr" Type="Java.Net.InetAddress" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="streaming" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="addr">To be added.</param>
        <param name="port">To be added.</param>
        <param name="streaming">To be added.</param>
        <summary>Creates a new streaming or datagram socket connected to the target host
 specified by the parameters <c>addr</c> and <c>port</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new streaming or datagram socket connected to the target host
 specified by the parameters <c>addr</c> and <c>port</c>. The socket is
 bound to any available port on the local host.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/Socket.html#Socket(java.net.InetAddress, int, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while creating the socket.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Socket (string hostName, int port, bool streaming);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string hostName, int32 port, bool streaming) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;IZ)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="hostName" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="streaming" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="hostName">To be added.</param>
        <param name="port">To be added.</param>
        <param name="streaming">To be added.</param>
        <summary>Creates a new streaming or datagram socket connected to the target host
 specified by the parameters <c>hostName</c> and <c>port</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new streaming or datagram socket connected to the target host
 specified by the parameters <c>hostName</c> and <c>port</c>. The socket
 is bound to any available port on the local host.

 </para>
          <para tool="javadoc-to-mdoc">This implementation tries each IP address for the given hostname (in
  order)
 until it either connects successfully or it exhausts the set.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/Socket.html#Socket(java.lang.String, int, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.UnknownHostException">if the host name could not be resolved into an IP address.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while creating the socket.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Socket (Java.Net.InetAddress dstAddress, int dstPort, Java.Net.InetAddress localAddress, int localPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Net.InetAddress dstAddress, int32 dstPort, class Java.Net.InetAddress localAddress, int32 localPort) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/net/InetAddress;ILjava/net/InetAddress;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="dstAddress" Type="Java.Net.InetAddress" />
        <Parameter Name="dstPort" Type="System.Int32" />
        <Parameter Name="localAddress" Type="Java.Net.InetAddress" />
        <Parameter Name="localPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dstAddress">To be added.</param>
        <param name="dstPort">To be added.</param>
        <param name="localAddress">To be added.</param>
        <param name="localPort">To be added.</param>
        <summary>Creates a new streaming socket connected to the target host specified by
 the parameters <c>dstAddress</c> and <c>dstPort</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new streaming socket connected to the target host specified by
 the parameters <c>dstAddress</c> and <c>dstPort</c>. On the local
 endpoint the socket is bound to the given address <c>localAddress</c> on
 port <c>localPort</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/Socket.html#Socket(java.net.InetAddress, int, java.net.InetAddress, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while creating the socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Socket (string dstName, int dstPort, Java.Net.InetAddress localAddress, int localPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string dstName, int32 dstPort, class Java.Net.InetAddress localAddress, int32 localPort) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;ILjava/net/InetAddress;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="dstName" Type="System.String" />
        <Parameter Name="dstPort" Type="System.Int32" />
        <Parameter Name="localAddress" Type="Java.Net.InetAddress" />
        <Parameter Name="localPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dstName">To be added.</param>
        <param name="dstPort">To be added.</param>
        <param name="localAddress">To be added.</param>
        <param name="localPort">To be added.</param>
        <summary>Creates a new streaming socket connected to the target host specified by
 the parameters <c>dstName</c> and <c>dstPort</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new streaming socket connected to the target host specified by
 the parameters <c>dstName</c> and <c>dstPort</c>. On the local endpoint
 the socket is bound to the given address <c>localAddress</c> on port
 <c>localPort</c>. If <c>host</c> is <c>null</c> a loopback address is used to connect to.

 </para>
          <para tool="javadoc-to-mdoc">This implementation tries each IP address for the given hostname (in
  order)
 until it either connects successfully or it exhausts the set.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/Socket.html#Socket(java.lang.String, int, java.net.InetAddress, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.UnknownHostException">if the host name could not be resolved into an IP address.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while creating the socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public virtual void Bind (Java.Net.SocketAddress localAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Bind(class Java.Net.SocketAddress localAddr) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("bind", "(Ljava/net/SocketAddress;)V", "GetBind_Ljava_net_SocketAddress_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localAddr" Type="Java.Net.SocketAddress" />
      </Parameters>
      <Docs>
        <param name="localAddr">the specific address and port on the local machine to bind to.</param>
        <summary>Binds this socket to the given local host address and port specified by
 the SocketAddress <c>localAddr</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Binds this socket to the given local host address and port specified by
 the SocketAddress <c>localAddr</c>. If <c>localAddr</c> is set to
 <c>null</c>, this socket will be bound to an available local address on
 any free port.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/Socket.html#bind(java.net.SocketAddress)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the given SocketAddress is invalid or not supported.</exception>
        <exception cref="T:Java.IO.IOException">if the socket is already bound or an error occurs while
             binding.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Channel">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.Channels.SocketChannel Channel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Nio.Channels.SocketChannel Channel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getChannel", "()Ljava/nio/channels/SocketChannel;", "GetGetChannelHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.SocketChannel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns this socket's <c>SocketChannel</c>, if one exists.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns this socket's <c>SocketChannel</c>, if one exists. A channel is
 available only if this socket wraps a channel. (That is, you can go from a
 channel to a socket and back again, but you can't go from an arbitrary socket to a channel.)
 In practice, this means that the socket must have been created by
 <c><see cref="M:Java.Nio.Channels.ServerSocketChannel.Accept" /></c> or
 <c><see cref="M:Java.Nio.Channels.SocketChannel.Open" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/Socket.html#getChannel()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("close", "()V", "GetCloseHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes the socket.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Closes the socket. It is not possible to reconnect or rebind to this
 socket thereafter which means a new socket instance has to be created.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/Socket.html#close()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while closing the socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public virtual void Connect (Java.Net.SocketAddress remoteAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Connect(class Java.Net.SocketAddress remoteAddr) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("connect", "(Ljava/net/SocketAddress;)V", "GetConnect_Ljava_net_SocketAddress_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remoteAddr" Type="Java.Net.SocketAddress" />
      </Parameters>
      <Docs>
        <param name="remoteAddr">the address and port of the remote host to connect to.</param>
        <summary tool="true">Connects this socket to the given remote host address and port specified
 by the SocketAddress <c>remoteAddr</c> with the specified timeout.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Connects this socket to the given remote host address and port specified
 by the SocketAddress <c>remoteAddr</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/Socket.html#connect(java.net.SocketAddress)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the given SocketAddress is invalid or not supported.</exception>
        <exception cref="T:Java.IO.IOException">if the socket is already connected or an error occurs while
             connecting.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public virtual void Connect (Java.Net.SocketAddress remoteAddr, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Connect(class Java.Net.SocketAddress remoteAddr, int32 timeout) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("connect", "(Ljava/net/SocketAddress;I)V", "GetConnect_Ljava_net_SocketAddress_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remoteAddr" Type="Java.Net.SocketAddress" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="remoteAddr">the address and port of the remote host to connect to.</param>
        <param name="timeout">the timeout value in milliseconds or <c>0</c> for an infinite
            timeout.</param>
        <summary>Connects this socket to the given remote host address and port specified
 by the SocketAddress <c>remoteAddr</c> with the specified timeout.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Connects this socket to the given remote host address and port specified
 by the SocketAddress <c>remoteAddr</c> with the specified timeout. The
 connecting method will block until the connection is established or an
 error occurred.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/Socket.html#connect(java.net.SocketAddress, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the given SocketAddress is invalid or not supported or the
             timeout value is negative.</exception>
        <exception cref="T:Java.IO.IOException">if the socket is already connected or an error occurs while
             connecting.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (Java.Net.SocketAddress remoteAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class Java.Net.SocketAddress remoteAddr) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remoteAddr" Type="Java.Net.SocketAddress" />
      </Parameters>
      <Docs>
        <param name="remoteAddr">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (Java.Net.SocketAddress remoteAddr, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class Java.Net.SocketAddress remoteAddr, int32 timeout) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remoteAddr" Type="Java.Net.SocketAddress" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="remoteAddr">To be added.</param>
        <param name="timeout">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InetAddress">
      <MemberSignature Language="C#" Value="public virtual Java.Net.InetAddress InetAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Net.InetAddress InetAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getInetAddress", "()Ljava/net/InetAddress;", "GetGetInetAddressHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.InetAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the IP address of the target host this socket is connected to, or null if this
 socket is not yet connected.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the IP address of the target host this socket is connected to, or null if this
 socket is not yet connected.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/Socket.html#getInetAddress()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InputStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream InputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream InputStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getInputStream", "()Ljava/io/InputStream;", "GetGetInputStreamHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns an input stream to read data from this socket.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns an input stream to read data from this socket. If the socket has an associated
 <c><see cref="T:Java.Nio.Channels.SocketChannel" /></c> and that channel is in non-blocking mode then reads from the
 stream will throw a <c><see cref="T:Java.Nio.Channels.IllegalBlockingModeException" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/Socket.html#getInputStream()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while creating the input stream or the
             socket is in an invalid state.
</exception>
      </Docs>
    </Member>
    <Member MemberName="IsBound">
      <MemberSignature Language="C#" Value="public virtual bool IsBound { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBound" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isBound", "()Z", "GetIsBoundHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether this socket is bound to a local address and port.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns whether this socket is bound to a local address and port.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/Socket.html#isBound()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public virtual bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isClosed", "()Z", "GetIsClosedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether this socket is closed.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns whether this socket is closed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/Socket.html#isClosed()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsConnected">
      <MemberSignature Language="C#" Value="public virtual bool IsConnected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConnected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isConnected", "()Z", "GetIsConnectedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether this socket is connected to a remote host.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns whether this socket is connected to a remote host.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/Socket.html#isConnected()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsInputShutdown">
      <MemberSignature Language="C#" Value="public virtual bool IsInputShutdown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInputShutdown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isInputShutdown", "()Z", "GetIsInputShutdownHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether the incoming channel of the socket has already been
 closed.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns whether the incoming channel of the socket has already been
 closed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/Socket.html#isInputShutdown()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsOutputShutdown">
      <MemberSignature Language="C#" Value="public virtual bool IsOutputShutdown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOutputShutdown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isOutputShutdown", "()Z", "GetIsOutputShutdownHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether the outgoing channel of the socket has already been
 closed.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns whether the outgoing channel of the socket has already been
 closed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/Socket.html#isOutputShutdown()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="public virtual bool KeepAlive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepAlive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getKeepAlive", "()Z", "GetGetKeepAliveHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setKeepAlive", "(Z)V", "GetSetKeepAlive_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns this socket's <c><see cref="F:Java.Net.SocketOptions.SoKeepalive" /></c> setting.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/java/net/Socket.html#getKeepAlive()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns this socket's <c><see cref="F:Java.Net.SocketOptions.SoKeepalive" /></c> setting.
</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/java/net/Socket.html#setKeepAlive(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets this socket's <c><see cref="F:Java.Net.SocketOptions.SoKeepalive" /></c> option.
</para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException" />
        <exception cref="T:Java.Net.SocketException" />
      </Docs>
    </Member>
    <Member MemberName="LocalAddress">
      <MemberSignature Language="C#" Value="public virtual Java.Net.InetAddress LocalAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Net.InetAddress LocalAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLocalAddress", "()Ljava/net/InetAddress;", "GetGetLocalAddressHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.InetAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the local IP address this socket is bound to, or an address for which
 <c><see cref="P:Java.Net.InetAddress.IsAnyLocalAddress" /></c> returns true if the socket is closed or unbound.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the local IP address this socket is bound to, or an address for which
 <c><see cref="P:Java.Net.InetAddress.IsAnyLocalAddress" /></c> returns true if the socket is closed or unbound.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/Socket.html#getLocalAddress()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LocalPort">
      <MemberSignature Language="C#" Value="public virtual int LocalPort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LocalPort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLocalPort", "()I", "GetGetLocalPortHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the local port this socket is bound to, or -1 if the socket is unbound.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the local port this socket is bound to, or -1 if the socket is unbound. If the socket
 has been closed this method will still return the local port the socket was bound to.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/Socket.html#getLocalPort()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LocalSocketAddress">
      <MemberSignature Language="C#" Value="public virtual Java.Net.SocketAddress LocalSocketAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Net.SocketAddress LocalSocketAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLocalSocketAddress", "()Ljava/net/SocketAddress;", "GetGetLocalSocketAddressHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.SocketAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the local address and port of this socket as a SocketAddress or null if the socket
 has never been bound.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the local address and port of this socket as a SocketAddress or null if the socket
 has never been bound. If the socket is closed but has previously been bound then an address
 for which <c><see cref="P:Java.Net.InetAddress.IsAnyLocalAddress" /></c> returns true will be returned with the
 previously-bound port. This is useful on multihomed hosts.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/Socket.html#getLocalSocketAddress()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OOBInline">
      <MemberSignature Language="C#" Value="public virtual bool OOBInline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OOBInline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getOOBInline", "()Z", "GetGetOOBInlineHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setOOBInline", "(Z)V", "GetSetOOBInline_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns this socket's <c><see cref="F:Java.Net.SocketOptions.SoOobinline" /></c> setting.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/java/net/Socket.html#getOOBInline()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns this socket's <c><see cref="F:Java.Net.SocketOptions.SoOobinline" /></c> setting.
</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/java/net/Socket.html#setOOBInline(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets this socket's <c><see cref="F:Java.Net.SocketOptions.SoOobinline" /></c> option.
</para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException" />
        <exception cref="T:Java.Net.SocketException" />
      </Docs>
    </Member>
    <Member MemberName="OutputStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream OutputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream OutputStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getOutputStream", "()Ljava/io/OutputStream;", "GetGetOutputStreamHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns an output stream to write data into this socket.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns an output stream to write data into this socket. If the socket has an associated
 <c><see cref="T:Java.Nio.Channels.SocketChannel" /></c> and that channel is in non-blocking mode then writes to the
 stream will throw a <c><see cref="T:Java.Nio.Channels.IllegalBlockingModeException" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/Socket.html#getOutputStream()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while creating the output stream or the
             socket is in an invalid state.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public virtual int Port { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPort", "()I", "GetGetPortHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the port number of the target host this socket is connected to, or 0 if this socket
 is not yet connected.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the port number of the target host this socket is connected to, or 0 if this socket
 is not yet connected.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/Socket.html#getPort()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public virtual int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getReceiveBufferSize", "()I", "GetGetReceiveBufferSizeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setReceiveBufferSize", "(I)V", "GetSetReceiveBufferSize_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns this socket's <c><see cref="F:Java.Net.SocketOptions.SoRcvbuf" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/java/net/Socket.html#getReceiveBufferSize()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns this socket's <c><see cref="F:Java.Net.SocketOptions.SoRcvbuf" /></c>.
</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/java/net/Socket.html#setReceiveBufferSize(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets this socket's <c><see cref="F:Java.Net.SocketOptions.SoRcvbuf" /></c>.
</para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException" />
        <exception cref="T:Java.Net.SocketException" />
      </Docs>
    </Member>
    <Member MemberName="RemoteSocketAddress">
      <MemberSignature Language="C#" Value="public virtual Java.Net.SocketAddress RemoteSocketAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Net.SocketAddress RemoteSocketAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getRemoteSocketAddress", "()Ljava/net/SocketAddress;", "GetGetRemoteSocketAddressHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.SocketAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the remote address and port of this socket as a <c>SocketAddress</c> or null if the socket is not connected.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the remote address and port of this socket as a <c>SocketAddress</c> or null if the socket is not connected.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/Socket.html#getRemoteSocketAddress()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ReuseAddress">
      <MemberSignature Language="C#" Value="public virtual bool ReuseAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReuseAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getReuseAddress", "()Z", "GetGetReuseAddressHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setReuseAddress", "(Z)V", "GetSetReuseAddress_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns this socket's <c><see cref="F:Java.Net.SocketOptions.SoReuseaddr" /></c> setting.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/java/net/Socket.html#getReuseAddress()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns this socket's <c><see cref="F:Java.Net.SocketOptions.SoReuseaddr" /></c> setting.
</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/java/net/Socket.html#setReuseAddress(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets this socket's <c><see cref="F:Java.Net.SocketOptions.SoReuseaddr" /></c> option.
</para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException" />
        <exception cref="T:Java.Net.SocketException" />
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public virtual int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSendBufferSize", "()I", "GetGetSendBufferSizeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSendBufferSize", "(I)V", "GetSetSendBufferSize_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns this socket's <c><see cref="F:Java.Net.SocketOptions.SoSndbuf" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/java/net/Socket.html#getSendBufferSize()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns this socket's <c><see cref="F:Java.Net.SocketOptions.SoSndbuf" /></c>.
</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/java/net/Socket.html#setSendBufferSize(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets this socket's <c><see cref="F:Java.Net.SocketOptions.SoSndbuf" /></c>.
</para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException" />
        <exception cref="T:Java.Net.SocketException" />
      </Docs>
    </Member>
    <Member MemberName="SendUrgentData">
      <MemberSignature Language="C#" Value="public virtual void SendUrgentData (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendUrgentData(int32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sendUrgentData", "(I)V", "GetSendUrgentData_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">the byte of urgent data to be sent.</param>
        <summary>Sends the given single byte data which is represented by the lowest octet
 of <c>value</c> as "TCP urgent data".</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sends the given single byte data which is represented by the lowest octet
 of <c>value</c> as "TCP urgent data".</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/Socket.html#sendUrgentData(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while sending urgent data.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SendUrgentDataAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendUrgentDataAsync (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SendUrgentDataAsync(int32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPerformancePreferences">
      <MemberSignature Language="C#" Value="public virtual void SetPerformancePreferences (int connectionTime, int latency, int bandwidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPerformancePreferences(int32 connectionTime, int32 latency, int32 bandwidth) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPerformancePreferences", "(III)V", "GetSetPerformancePreferences_IIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionTime" Type="System.Int32" />
        <Parameter Name="latency" Type="System.Int32" />
        <Parameter Name="bandwidth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="connectionTime">the value representing the importance of a short connecting
            time.</param>
        <param name="latency">the value representing the importance of low latency.</param>
        <param name="bandwidth">the value representing the importance of high bandwidth.
</param>
        <summary>Sets performance preferences for connectionTime, latency and bandwidth.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets performance preferences for connectionTime, latency and bandwidth.

 </para>
          <para tool="javadoc-to-mdoc">This method does currently nothing.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/Socket.html#setPerformancePreferences(int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetSocketImplFactory">
      <MemberSignature Language="C#" Value="public static void SetSocketImplFactory (Java.Net.ISocketImplFactory fac);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetSocketImplFactory(class Java.Net.ISocketImplFactory fac) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSocketImplFactory", "(Ljava/net/SocketImplFactory;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fac" Type="Java.Net.ISocketImplFactory" />
      </Parameters>
      <Docs>
        <param name="fac">the socket implementation factory to be set.</param>
        <summary>Sets the internal factory for creating socket implementations.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the internal factory for creating socket implementations. This may
 only be executed once during the lifetime of the application.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/Socket.html#setSocketImplFactory(java.net.SocketImplFactory)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if the factory has been already set.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetSoLinger">
      <MemberSignature Language="C#" Value="public virtual void SetSoLinger (bool on, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSoLinger(bool on, int32 timeout) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSoLinger", "(ZI)V", "GetSetSoLinger_ZIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="on" Type="System.Boolean" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="on">To be added.</param>
        <param name="timeout">To be added.</param>
        <summary>Sets this socket's <c><see cref="F:Java.Net.SocketOptions.SoLinger" /></c> timeout in seconds.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets this socket's <c><see cref="F:Java.Net.SocketOptions.SoLinger" /></c> timeout in seconds.
 If <c>on</c> is false, <c>timeout</c> is irrelevant.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/Socket.html#setSoLinger(boolean, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException" />
      </Docs>
    </Member>
    <Member MemberName="ShutdownInput">
      <MemberSignature Language="C#" Value="public virtual void ShutdownInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShutdownInput() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("shutdownInput", "()V", "GetShutdownInputHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes the input stream of this socket.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Closes the input stream of this socket. Any further data sent to this
 socket will be discarded. Reading from this socket after this method has
 been called will return the value <c>EOF</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/Socket.html#shutdownInput()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while closing the socket input stream.</exception>
        <exception cref="T:Java.Net.SocketException">if the input stream is already closed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ShutdownOutput">
      <MemberSignature Language="C#" Value="public virtual void ShutdownOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShutdownOutput() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("shutdownOutput", "()V", "GetShutdownOutputHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes the output stream of this socket.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Closes the output stream of this socket. All buffered data will be sent
 followed by the termination sequence. Writing to the closed output stream
 will cause an <c>IOException</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/Socket.html#shutdownOutput()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while closing the socket output stream.</exception>
        <exception cref="T:Java.Net.SocketException">if the output stream is already closed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SoLinger">
      <MemberSignature Language="C#" Value="public virtual int SoLinger { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SoLinger" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSoLinger", "()I", "GetGetSoLingerHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns this socket's <c><see cref="F:Java.Net.SocketOptions.SoLinger" /></c> timeout in seconds, or -1
 for no linger (i.e.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns this socket's <c><see cref="F:Java.Net.SocketOptions.SoLinger" /></c> timeout in seconds, or -1
 for no linger (i.e. <c>close</c> will return immediately).
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/net/Socket.html#getSoLinger()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException" />
      </Docs>
    </Member>
    <Member MemberName="SoTimeout">
      <MemberSignature Language="C#" Value="public virtual int SoTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SoTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSoTimeout", "()I", "GetGetSoTimeoutHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSoTimeout", "(I)V", "GetSetSoTimeout_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns this socket's <c><see cref="F:Java.Net.SocketOptions.SoTimeout" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/java/net/Socket.html#getSoTimeout()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns this socket's <c><see cref="F:Java.Net.SocketOptions.SoTimeout" /></c>.
</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/java/net/Socket.html#setSoTimeout(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets this socket's <c><see cref="F:Java.Net.SocketOptions.SoTimeout" /></c> in milliseconds.
 Use 0 for no timeout.
 To take effect, this option must be set before the blocking method was called.
</para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException" />
        <exception cref="T:Java.Net.SocketException" />
      </Docs>
    </Member>
    <Member MemberName="TcpNoDelay">
      <MemberSignature Language="C#" Value="public virtual bool TcpNoDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TcpNoDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTcpNoDelay", "()Z", "GetGetTcpNoDelayHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTcpNoDelay", "(Z)V", "GetSetTcpNoDelay_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns this socket's <c>SocketOptions#TCP_NODELAY</c> setting.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/java/net/Socket.html#getTcpNoDelay()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns this socket's <c>SocketOptions#TCP_NODELAY</c> setting.
</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/java/net/Socket.html#setTcpNoDelay(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets this socket's <c><see cref="F:Java.Net.SocketOptions.TcpNodelay" /></c> option.
</para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException" />
        <exception cref="T:Java.Net.SocketException" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrafficClass">
      <MemberSignature Language="C#" Value="public virtual int TrafficClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TrafficClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTrafficClass", "()I", "GetGetTrafficClassHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTrafficClass", "(I)V", "GetSetTrafficClass_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns this socket's  setting.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/java/net/Socket.html#getTrafficClass()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns this socket's  setting.
</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/java/net/Socket.html#setTrafficClass(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets this socket's <c><see cref="F:Java.Net.SocketOptions.IpTos" /></c> value for every packet sent by this socket.
</para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException" />
        <altmember cref="F:Java.Net.SocketOptions.IpTos" />
        <exception cref="T:Java.Net.SocketException" />
      </Docs>
    </Member>
  </Members>
</Type>