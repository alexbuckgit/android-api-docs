<Type Name="Socket" FullName="Java.Net.Socket">
  <TypeSignature Language="C#" Value="public class Socket : Java.Lang.Object, IDisposable, Java.IO.ICloseable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Socket extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.IO.ICloseable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Net.Socket" />
  <TypeSignature Language="F#" Value="type Socket = class&#xA;    inherit Object&#xA;    interface ICloseable&#xA;    interface IJavaObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.IO.ICloseable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/net/Socket", ApiSince=1, DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Provides a client-side TCP socket.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/net/Socket" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Socket ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Creates a new unconnected socket.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Java.Net.ISocketImplFactory" />
        <altmember cref="T:Java.Net.SocketImpl" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Socket (Java.Net.Proxy proxy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Net.Proxy proxy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.#ctor(Java.Net.Proxy)" />
      <MemberSignature Language="F#" Value="new Java.Net.Socket : Java.Net.Proxy -&gt; Java.Net.Socket" Usage="new Java.Net.Socket proxy" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/net/Proxy;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="proxy" Type="Java.Net.Proxy" />
      </Parameters>
      <Docs>
        <param name="proxy">To be added.</param>
        <summary>Creates a new unconnected socket using the given proxy type.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the argument <c>proxy</c> is <c>null</c> or of an
             invalid type.</exception>
        <altmember cref="T:Java.Net.ISocketImplFactory" />
        <altmember cref="T:Java.Net.SocketImpl" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Socket (Java.Net.SocketImpl impl);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Java.Net.SocketImpl impl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.#ctor(Java.Net.SocketImpl)" />
      <MemberSignature Language="F#" Value="new Java.Net.Socket : Java.Net.SocketImpl -&gt; Java.Net.Socket" Usage="new Java.Net.Socket impl" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/net/SocketImpl;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="impl" Type="Java.Net.SocketImpl" />
      </Parameters>
      <Docs>
        <param name="impl">To be added.</param>
        <summary>Creates an unconnected socket with the given socket implementation.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException">if an error occurs while creating the socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Socket (Java.Net.InetAddress address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Net.InetAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.#ctor(Java.Net.InetAddress,System.Int32)" />
      <MemberSignature Language="F#" Value="new Java.Net.Socket : Java.Net.InetAddress * int -&gt; Java.Net.Socket" Usage="new Java.Net.Socket (address, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/net/InetAddress;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="address" Type="Java.Net.InetAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <param name="port">To be added.</param>
        <summary>Creates a new streaming socket connected to the target host specified by
 the parameters <c>dstAddress</c> and <c>dstPort</c>.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while creating the socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Socket (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Net.Socket : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Net.Socket" Usage="new Java.Net.Socket (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Socket (string host, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string host, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="F#" Value="new Java.Net.Socket : string * int -&gt; Java.Net.Socket" Usage="new Java.Net.Socket (host, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">To be added.</param>
        <param name="port">To be added.</param>
        <summary>Creates a new streaming socket connected to the target host specified by
 the parameters <c>dstName</c> and <c>dstPort</c>.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.UnknownHostException">if the host name could not be resolved into an IP address.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while creating the socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Socket (Java.Net.InetAddress host, int port, bool stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Net.InetAddress host, int32 port, bool stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.#ctor(Java.Net.InetAddress,System.Int32,System.Boolean)" />
      <MemberSignature Language="F#" Value="new Java.Net.Socket : Java.Net.InetAddress * int * bool -&gt; Java.Net.Socket" Usage="new Java.Net.Socket (host, port, stream)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/net/InetAddress;IZ)V", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="host" Type="Java.Net.InetAddress" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="stream" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="host">To be added.</param>
        <param name="port">To be added.</param>
        <param name="stream">To be added.</param>
        <summary>Creates a new streaming or datagram socket connected to the target host
 specified by the parameters <c>addr</c> and <c>port</c>.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while creating the socket.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Socket (string host, int port, bool stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string host, int32 port, bool stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.#ctor(System.String,System.Int32,System.Boolean)" />
      <MemberSignature Language="F#" Value="new Java.Net.Socket : string * int * bool -&gt; Java.Net.Socket" Usage="new Java.Net.Socket (host, port, stream)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;IZ)V", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="stream" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="host">To be added.</param>
        <param name="port">To be added.</param>
        <param name="stream">To be added.</param>
        <summary>Creates a new streaming or datagram socket connected to the target host
 specified by the parameters <c>hostName</c> and <c>port</c>.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.UnknownHostException">if the host name could not be resolved into an IP address.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while creating the socket.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Socket (Java.Net.InetAddress address, int port, Java.Net.InetAddress localAddr, int localPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Net.InetAddress address, int32 port, class Java.Net.InetAddress localAddr, int32 localPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.#ctor(Java.Net.InetAddress,System.Int32,Java.Net.InetAddress,System.Int32)" />
      <MemberSignature Language="F#" Value="new Java.Net.Socket : Java.Net.InetAddress * int * Java.Net.InetAddress * int -&gt; Java.Net.Socket" Usage="new Java.Net.Socket (address, port, localAddr, localPort)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/net/InetAddress;ILjava/net/InetAddress;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="address" Type="Java.Net.InetAddress" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="localAddr" Type="Java.Net.InetAddress" />
        <Parameter Name="localPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <param name="port">To be added.</param>
        <param name="localAddr">To be added.</param>
        <param name="localPort">To be added.</param>
        <summary>Creates a new streaming socket connected to the target host specified by
 the parameters <c>dstAddress</c> and <c>dstPort</c>.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while creating the socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Socket (string host, int port, Java.Net.InetAddress localAddr, int localPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string host, int32 port, class Java.Net.InetAddress localAddr, int32 localPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.#ctor(System.String,System.Int32,Java.Net.InetAddress,System.Int32)" />
      <MemberSignature Language="F#" Value="new Java.Net.Socket : string * int * Java.Net.InetAddress * int -&gt; Java.Net.Socket" Usage="new Java.Net.Socket (host, port, localAddr, localPort)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;ILjava/net/InetAddress;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="localAddr" Type="Java.Net.InetAddress" />
        <Parameter Name="localPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">To be added.</param>
        <param name="port">To be added.</param>
        <param name="localAddr">To be added.</param>
        <param name="localPort">To be added.</param>
        <summary>Creates a new streaming socket connected to the target host specified by
 the parameters <c>dstName</c> and <c>dstPort</c>.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.UnknownHostException">if the host name could not be resolved into an IP address.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while creating the socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public virtual void Bind (Java.Net.SocketAddress bindpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Bind(class Java.Net.SocketAddress bindpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.Bind(Java.Net.SocketAddress)" />
      <MemberSignature Language="F#" Value="abstract member Bind : Java.Net.SocketAddress -&gt; unit&#xA;override this.Bind : Java.Net.SocketAddress -&gt; unit" Usage="socket.Bind bindpoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("bind", "(Ljava/net/SocketAddress;)V", "GetBind_Ljava_net_SocketAddress_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindpoint" Type="Java.Net.SocketAddress" />
      </Parameters>
      <Docs>
        <param name="bindpoint">To be added.</param>
        <summary>Binds this socket to the given local host address and port specified by
 the SocketAddress <c>localAddr</c>.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the given SocketAddress is invalid or not supported.</exception>
        <exception cref="T:Java.IO.IOException">if the socket is already bound or an error occurs while
             binding.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Channel">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.Channels.SocketChannel Channel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Nio.Channels.SocketChannel Channel" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.Channel" />
      <MemberSignature Language="F#" Value="member this.Channel : Java.Nio.Channels.SocketChannel" Usage="Java.Net.Socket.Channel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getChannel", "()Ljava/nio/channels/SocketChannel;", "GetGetChannelHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Channels.SocketChannel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns this socket's <c>SocketChannel</c>, if one exists.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.Close" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="socket.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.ICloseable.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("close", "()V", "GetCloseHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes the socket.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while closing the socket.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public virtual void Connect (Java.Net.SocketAddress endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Connect(class Java.Net.SocketAddress endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.Connect(Java.Net.SocketAddress)" />
      <MemberSignature Language="F#" Value="abstract member Connect : Java.Net.SocketAddress -&gt; unit&#xA;override this.Connect : Java.Net.SocketAddress -&gt; unit" Usage="socket.Connect endpoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("connect", "(Ljava/net/SocketAddress;)V", "GetConnect_Ljava_net_SocketAddress_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="Java.Net.SocketAddress" />
      </Parameters>
      <Docs>
        <param name="endpoint">To be added.</param>
        <summary tool="true">Connects this socket to the given remote host address and port specified
 by the SocketAddress <c>remoteAddr</c>.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the given SocketAddress is invalid or not supported.</exception>
        <exception cref="T:Java.IO.IOException">if the socket is already connected or an error occurs while
             connecting.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public virtual void Connect (Java.Net.SocketAddress endpoint, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Connect(class Java.Net.SocketAddress endpoint, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.Connect(Java.Net.SocketAddress,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Connect : Java.Net.SocketAddress * int -&gt; unit&#xA;override this.Connect : Java.Net.SocketAddress * int -&gt; unit" Usage="socket.Connect (endpoint, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("connect", "(Ljava/net/SocketAddress;I)V", "GetConnect_Ljava_net_SocketAddress_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="Java.Net.SocketAddress" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="endpoint">To be added.</param>
        <param name="timeout">the timeout value in milliseconds or <c>0</c> for an infinite
            timeout.</param>
        <summary>Connects this socket to the given remote host address and port specified
 by the SocketAddress <c>remoteAddr</c> with the specified timeout.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the given SocketAddress is invalid or not supported or the
             timeout value is negative.</exception>
        <exception cref="T:Java.IO.IOException">if the socket is already connected or an error occurs while
             connecting.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (Java.Net.SocketAddress endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class Java.Net.SocketAddress endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.ConnectAsync(Java.Net.SocketAddress)" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : Java.Net.SocketAddress -&gt; System.Threading.Tasks.Task" Usage="socket.ConnectAsync endpoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="Java.Net.SocketAddress" />
      </Parameters>
      <Docs>
        <param name="endpoint">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (Java.Net.SocketAddress endpoint, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class Java.Net.SocketAddress endpoint, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.ConnectAsync(Java.Net.SocketAddress,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : Java.Net.SocketAddress * int -&gt; System.Threading.Tasks.Task" Usage="socket.ConnectAsync (endpoint, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="Java.Net.SocketAddress" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="endpoint">To be added.</param>
        <param name="timeout">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InetAddress">
      <MemberSignature Language="C#" Value="public virtual Java.Net.InetAddress InetAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Net.InetAddress InetAddress" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.InetAddress" />
      <MemberSignature Language="F#" Value="member this.InetAddress : Java.Net.InetAddress" Usage="Java.Net.Socket.InetAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getInetAddress", "()Ljava/net/InetAddress;", "GetGetInetAddressHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.InetAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the IP address of the target host this socket is connected to, or null if this
 socket is not yet connected.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InputStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream InputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream InputStream" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.InputStream" />
      <MemberSignature Language="F#" Value="member this.InputStream : System.IO.Stream" Usage="Java.Net.Socket.InputStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getInputStream", "()Ljava/io/InputStream;", "GetGetInputStreamHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns an input stream to read data from this socket.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while creating the input stream or the
             socket is in an invalid state.
</exception>
      </Docs>
    </Member>
    <Member MemberName="IsBound">
      <MemberSignature Language="C#" Value="public virtual bool IsBound { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBound" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.IsBound" />
      <MemberSignature Language="F#" Value="member this.IsBound : bool" Usage="Java.Net.Socket.IsBound" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isBound", "()Z", "GetIsBoundHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether this socket is bound to a local address and port.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public virtual bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.IsClosed" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="Java.Net.Socket.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isClosed", "()Z", "GetIsClosedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether this socket is closed.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsConnected">
      <MemberSignature Language="C#" Value="public virtual bool IsConnected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConnected" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.IsConnected" />
      <MemberSignature Language="F#" Value="member this.IsConnected : bool" Usage="Java.Net.Socket.IsConnected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isConnected", "()Z", "GetIsConnectedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether this socket is connected to a remote host.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsInputShutdown">
      <MemberSignature Language="C#" Value="public virtual bool IsInputShutdown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInputShutdown" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.IsInputShutdown" />
      <MemberSignature Language="F#" Value="member this.IsInputShutdown : bool" Usage="Java.Net.Socket.IsInputShutdown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isInputShutdown", "()Z", "GetIsInputShutdownHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether the incoming channel of the socket has already been
 closed.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsOutputShutdown">
      <MemberSignature Language="C#" Value="public virtual bool IsOutputShutdown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOutputShutdown" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.IsOutputShutdown" />
      <MemberSignature Language="F#" Value="member this.IsOutputShutdown : bool" Usage="Java.Net.Socket.IsOutputShutdown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isOutputShutdown", "()Z", "GetIsOutputShutdownHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether the outgoing channel of the socket has already been
 closed.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Net.Socket.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="public virtual bool KeepAlive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepAlive" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.KeepAlive" />
      <MemberSignature Language="F#" Value="member this.KeepAlive : bool with get, set" Usage="Java.Net.Socket.KeepAlive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getKeepAlive", "()Z", "GetGetKeepAliveHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setKeepAlive", "(Z)V", "GetSetKeepAlive_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns this socket's <see cref="F:Java.Net.SocketOptions.SoKeepalive" /> setting.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException" />
        <exception cref="T:Java.Net.SocketException" />
      </Docs>
    </Member>
    <Member MemberName="LocalAddress">
      <MemberSignature Language="C#" Value="public virtual Java.Net.InetAddress LocalAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Net.InetAddress LocalAddress" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.LocalAddress" />
      <MemberSignature Language="F#" Value="member this.LocalAddress : Java.Net.InetAddress" Usage="Java.Net.Socket.LocalAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLocalAddress", "()Ljava/net/InetAddress;", "GetGetLocalAddressHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.InetAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the local IP address this socket is bound to, or an address for which
 <see cref="P:Java.Net.InetAddress.IsAnyLocalAddress" /> returns true if the socket is closed or unbound.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LocalPort">
      <MemberSignature Language="C#" Value="public virtual int LocalPort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LocalPort" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.LocalPort" />
      <MemberSignature Language="F#" Value="member this.LocalPort : int" Usage="Java.Net.Socket.LocalPort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLocalPort", "()I", "GetGetLocalPortHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the local port this socket is bound to, or -1 if the socket is unbound.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LocalSocketAddress">
      <MemberSignature Language="C#" Value="public virtual Java.Net.SocketAddress LocalSocketAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Net.SocketAddress LocalSocketAddress" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.LocalSocketAddress" />
      <MemberSignature Language="F#" Value="member this.LocalSocketAddress : Java.Net.SocketAddress" Usage="Java.Net.Socket.LocalSocketAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLocalSocketAddress", "()Ljava/net/SocketAddress;", "GetGetLocalSocketAddressHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.SocketAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the local address and port of this socket as a SocketAddress or null if the socket
 has never been bound.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OOBInline">
      <MemberSignature Language="C#" Value="public virtual bool OOBInline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OOBInline" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.OOBInline" />
      <MemberSignature Language="F#" Value="member this.OOBInline : bool with get, set" Usage="Java.Net.Socket.OOBInline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getOOBInline", "()Z", "GetGetOOBInlineHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setOOBInline", "(Z)V", "GetSetOOBInline_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns this socket's <see cref="F:Java.Net.SocketOptions.SoOobinline" /> setting.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException" />
        <exception cref="T:Java.Net.SocketException" />
      </Docs>
    </Member>
    <Member MemberName="OutputStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream OutputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream OutputStream" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.OutputStream" />
      <MemberSignature Language="F#" Value="member this.OutputStream : System.IO.Stream" Usage="Java.Net.Socket.OutputStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getOutputStream", "()Ljava/io/OutputStream;", "GetGetOutputStreamHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns an output stream to write data into this socket.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while creating the output stream or the
             socket is in an invalid state.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public virtual int Port { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.Port" />
      <MemberSignature Language="F#" Value="member this.Port : int" Usage="Java.Net.Socket.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPort", "()I", "GetGetPortHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the port number of the target host this socket is connected to, or 0 if this socket
 is not yet connected.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public virtual int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.ReceiveBufferSize" />
      <MemberSignature Language="F#" Value="member this.ReceiveBufferSize : int with get, set" Usage="Java.Net.Socket.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getReceiveBufferSize", "()I", "GetGetReceiveBufferSizeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setReceiveBufferSize", "(I)V", "GetSetReceiveBufferSize_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns this socket's <see cref="F:Java.Net.SocketOptions.SoRcvbuf" />.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException" />
        <exception cref="T:Java.Net.SocketException" />
      </Docs>
    </Member>
    <Member MemberName="RemoteSocketAddress">
      <MemberSignature Language="C#" Value="public virtual Java.Net.SocketAddress RemoteSocketAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Net.SocketAddress RemoteSocketAddress" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.RemoteSocketAddress" />
      <MemberSignature Language="F#" Value="member this.RemoteSocketAddress : Java.Net.SocketAddress" Usage="Java.Net.Socket.RemoteSocketAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getRemoteSocketAddress", "()Ljava/net/SocketAddress;", "GetGetRemoteSocketAddressHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.SocketAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the remote address and port of this socket as a <c>SocketAddress</c> or null if the socket is not connected.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ReuseAddress">
      <MemberSignature Language="C#" Value="public virtual bool ReuseAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReuseAddress" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.ReuseAddress" />
      <MemberSignature Language="F#" Value="member this.ReuseAddress : bool with get, set" Usage="Java.Net.Socket.ReuseAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getReuseAddress", "()Z", "GetGetReuseAddressHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setReuseAddress", "(Z)V", "GetSetReuseAddress_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns this socket's <see cref="F:Java.Net.SocketOptions.SoReuseaddr" /> setting.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException" />
        <exception cref="T:Java.Net.SocketException" />
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public virtual int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.SendBufferSize" />
      <MemberSignature Language="F#" Value="member this.SendBufferSize : int with get, set" Usage="Java.Net.Socket.SendBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSendBufferSize", "()I", "GetGetSendBufferSizeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSendBufferSize", "(I)V", "GetSetSendBufferSize_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns this socket's <see cref="F:Java.Net.SocketOptions.SoSndbuf" />.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException" />
        <exception cref="T:Java.Net.SocketException" />
      </Docs>
    </Member>
    <Member MemberName="SendUrgentData">
      <MemberSignature Language="C#" Value="public virtual void SendUrgentData (int data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendUrgentData(int32 data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.SendUrgentData(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SendUrgentData : int -&gt; unit&#xA;override this.SendUrgentData : int -&gt; unit" Usage="socket.SendUrgentData data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sendUrgentData", "(I)V", "GetSendUrgentData_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>Sends the given single byte data which is represented by the lowest octet
 of <c>value</c> as "TCP urgent data".</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while sending urgent data.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SendUrgentDataAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendUrgentDataAsync (int data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SendUrgentDataAsync(int32 data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.SendUrgentDataAsync(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.SendUrgentDataAsync : int -&gt; System.Threading.Tasks.Task" Usage="socket.SendUrgentDataAsync data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPerformancePreferences">
      <MemberSignature Language="C#" Value="public virtual void SetPerformancePreferences (int connectionTime, int latency, int bandwidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPerformancePreferences(int32 connectionTime, int32 latency, int32 bandwidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.SetPerformancePreferences(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetPerformancePreferences : int * int * int -&gt; unit&#xA;override this.SetPerformancePreferences : int * int * int -&gt; unit" Usage="socket.SetPerformancePreferences (connectionTime, latency, bandwidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPerformancePreferences", "(III)V", "GetSetPerformancePreferences_IIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionTime" Type="System.Int32" />
        <Parameter Name="latency" Type="System.Int32" />
        <Parameter Name="bandwidth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="connectionTime">the value representing the importance of a short connecting
            time.</param>
        <param name="latency">the value representing the importance of low latency.</param>
        <param name="bandwidth">the value representing the importance of high bandwidth.
</param>
        <summary>Sets performance preferences for connectionTime, latency and bandwidth.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetSocketImplFactory">
      <MemberSignature Language="C#" Value="public static void SetSocketImplFactory (Java.Net.ISocketImplFactory fac);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetSocketImplFactory(class Java.Net.ISocketImplFactory fac) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.SetSocketImplFactory(Java.Net.ISocketImplFactory)" />
      <MemberSignature Language="F#" Value="static member SetSocketImplFactory : Java.Net.ISocketImplFactory -&gt; unit" Usage="Java.Net.Socket.SetSocketImplFactory fac" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSocketImplFactory", "(Ljava/net/SocketImplFactory;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fac" Type="Java.Net.ISocketImplFactory" />
      </Parameters>
      <Docs>
        <param name="fac">the socket implementation factory to be set.</param>
        <summary>Sets the internal factory for creating socket implementations.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if the factory has been already set.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetSoLinger">
      <MemberSignature Language="C#" Value="public virtual void SetSoLinger (bool on, int linger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSoLinger(bool on, int32 linger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.SetSoLinger(System.Boolean,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetSoLinger : bool * int -&gt; unit&#xA;override this.SetSoLinger : bool * int -&gt; unit" Usage="socket.SetSoLinger (on, linger)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSoLinger", "(ZI)V", "GetSetSoLinger_ZIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="on" Type="System.Boolean" />
        <Parameter Name="linger" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="on">To be added.</param>
        <param name="linger">To be added.</param>
        <summary>Sets this socket's <see cref="F:Java.Net.SocketOptions.SoLinger" /> timeout in seconds.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException" />
      </Docs>
    </Member>
    <Member MemberName="ShutdownInput">
      <MemberSignature Language="C#" Value="public virtual void ShutdownInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShutdownInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.ShutdownInput" />
      <MemberSignature Language="F#" Value="abstract member ShutdownInput : unit -&gt; unit&#xA;override this.ShutdownInput : unit -&gt; unit" Usage="socket.ShutdownInput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("shutdownInput", "()V", "GetShutdownInputHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes the input stream of this socket.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while closing the socket input stream.</exception>
        <exception cref="T:Java.Net.SocketException">if the input stream is already closed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ShutdownOutput">
      <MemberSignature Language="C#" Value="public virtual void ShutdownOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShutdownOutput() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Net.Socket.ShutdownOutput" />
      <MemberSignature Language="F#" Value="abstract member ShutdownOutput : unit -&gt; unit&#xA;override this.ShutdownOutput : unit -&gt; unit" Usage="socket.ShutdownOutput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("shutdownOutput", "()V", "GetShutdownOutputHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes the output stream of this socket.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while closing the socket output stream.</exception>
        <exception cref="T:Java.Net.SocketException">if the output stream is already closed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SoLinger">
      <MemberSignature Language="C#" Value="public virtual int SoLinger { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SoLinger" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.SoLinger" />
      <MemberSignature Language="F#" Value="member this.SoLinger : int" Usage="Java.Net.Socket.SoLinger" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSoLinger", "()I", "GetGetSoLingerHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns this socket's <see cref="F:Java.Net.SocketOptions.SoLinger" /> timeout in seconds, or -1
 for no linger (i.e.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException" />
      </Docs>
    </Member>
    <Member MemberName="SoTimeout">
      <MemberSignature Language="C#" Value="public virtual int SoTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SoTimeout" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.SoTimeout" />
      <MemberSignature Language="F#" Value="member this.SoTimeout : int with get, set" Usage="Java.Net.Socket.SoTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSoTimeout", "()I", "GetGetSoTimeoutHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSoTimeout", "(I)V", "GetSetSoTimeout_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns this socket's <see cref="F:Java.Net.SocketOptions.SoTimeout" />.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException" />
        <exception cref="T:Java.Net.SocketException" />
      </Docs>
    </Member>
    <Member MemberName="TcpNoDelay">
      <MemberSignature Language="C#" Value="public virtual bool TcpNoDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TcpNoDelay" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.TcpNoDelay" />
      <MemberSignature Language="F#" Value="member this.TcpNoDelay : bool with get, set" Usage="Java.Net.Socket.TcpNoDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTcpNoDelay", "()Z", "GetGetTcpNoDelayHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTcpNoDelay", "(Z)V", "GetSetTcpNoDelay_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns this socket's <c>SocketOptions#TCP_NODELAY</c> setting.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException" />
        <exception cref="T:Java.Net.SocketException" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Net.Socket.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Net.Socket.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrafficClass">
      <MemberSignature Language="C#" Value="public virtual int TrafficClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TrafficClass" />
      <MemberSignature Language="DocId" Value="P:Java.Net.Socket.TrafficClass" />
      <MemberSignature Language="F#" Value="member this.TrafficClass : int with get, set" Usage="Java.Net.Socket.TrafficClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTrafficClass", "()I", "GetGetTrafficClassHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTrafficClass", "(I)V", "GetSetTrafficClass_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns this socket's  setting.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="http://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Net.SocketException" />
        <altmember cref="F:Java.Net.SocketOptions.IpTos" />
        <exception cref="T:Java.Net.SocketException" />
      </Docs>
    </Member>
  </Members>
</Type>
