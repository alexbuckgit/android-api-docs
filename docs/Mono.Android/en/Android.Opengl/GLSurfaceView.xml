<Type Name="GLSurfaceView" FullName="Android.Opengl.GLSurfaceView">
  <TypeSignature Language="C#" Value="public class GLSurfaceView : Android.Views.SurfaceView, Android.Views.ISurfaceHolderCallback, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GLSurfaceView extends Android.Views.SurfaceView implements class Android.Runtime.IJavaObject, class Android.Views.ISurfaceHolderCallback, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Views.SurfaceView</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Views.ISurfaceHolderCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/opengl/GLSurfaceView", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="3">
    <summary>An implementation of SurfaceView that uses the dedicated surface for
 displaying OpenGL rendering.</summary>
    <remarks />
    <since version="Added in API level 3" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GLSurfaceView (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>Standard View constructor.</summary>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GLSurfaceView (Android.Content.Context context, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>Standard View constructor.</summary>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected GLSurfaceView (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="DebugCheckGlError">
      <MemberSignature Language="C#" Value="public const Android.Opengl.DebugFlags DebugCheckGlError = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Opengl.DebugFlags DebugCheckGlError = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DEBUG_CHECK_GL_ERROR")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Opengl.DebugFlags enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Opengl.DebugFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Check glError() after every GL call and throw an exception if glError indicates
 that an error has occurred.</summary>
        <remarks />
        <since version="Added in API level 3" />
        <altmember cref="P:Android.Opengl.GLSurfaceView.DebugFlags" />
        <altmember cref="P:Android.Opengl.GLSurfaceView.DebugFlags" />
      </Docs>
    </Member>
    <Member MemberName="DebugFlags">
      <MemberSignature Language="C#" Value="public virtual Android.Opengl.DebugFlags DebugFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Opengl.DebugFlags DebugFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDebugFlags", "()I", "GetGetDebugFlagsHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setDebugFlags", "(I)V", "GetSetDebugFlags_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Opengl.DebugFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the current value of the debug flags.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 3" />
        <altmember cref="F:Android.Opengl.GLSurfaceView.DebugCheckGlError" />
        <altmember cref="F:Android.Opengl.GLSurfaceView.DebugLogGlCalls" />
      </Docs>
    </Member>
    <Member MemberName="DebugLogGlCalls">
      <MemberSignature Language="C#" Value="public const Android.Opengl.DebugFlags DebugLogGlCalls = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Opengl.DebugFlags DebugLogGlCalls = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DEBUG_LOG_GL_CALLS")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Opengl.DebugFlags enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Opengl.DebugFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Log GL calls to the system log at "verbose" level with tag "GLSurfaceView".</summary>
        <remarks />
        <since version="Added in API level 3" />
        <altmember cref="P:Android.Opengl.GLSurfaceView.DebugFlags" />
        <altmember cref="P:Android.Opengl.GLSurfaceView.DebugFlags" />
      </Docs>
    </Member>
    <Member MemberName="OnPause">
      <MemberSignature Language="C#" Value="public virtual void OnPause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPause() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onPause", "()V", "GetOnPauseHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inform the view that the activity is paused.</summary>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnResume">
      <MemberSignature Language="C#" Value="public virtual void OnResume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnResume() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onResume", "()V", "GetOnResumeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inform the view that the activity is resumed.</summary>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="PreserveEGLContextOnPause">
      <MemberSignature Language="C#" Value="public virtual bool PreserveEGLContextOnPause { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveEGLContextOnPause" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPreserveEGLContextOnPause", "()Z", "GetGetPreserveEGLContextOnPauseHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setPreserveEGLContextOnPause", "(Z)V", "GetSetPreserveEGLContextOnPause_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="QueueEvent">
      <MemberSignature Language="C#" Value="public virtual void QueueEvent (Java.Lang.IRunnable r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void QueueEvent(class Java.Lang.IRunnable r) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("queueEvent", "(Ljava/lang/Runnable;)V", "GetQueueEvent_Ljava_lang_Runnable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="r">the runnable to be run on the GL rendering thread.
</param>
        <summary>Queue a runnable to be run on the GL rendering thread.</summary>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="QueueEvent">
      <MemberSignature Language="C#" Value="public void QueueEvent (Action r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void QueueEvent(class System.Action r) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <summary>To be added.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="RenderMode">
      <MemberSignature Language="C#" Value="public virtual Android.Opengl.Rendermode RenderMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Opengl.Rendermode RenderMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getRenderMode", "()I", "GetGetRenderModeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setRenderMode", "(I)V", "GetSetRenderMode_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Opengl.Rendermode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the current rendering mode.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 3" />
        <altmember cref="F:Android.Opengl.GLSurfaceView.RendermodeContinuously" />
        <altmember cref="F:Android.Opengl.GLSurfaceView.RendermodeWhenDirty" />
        <altmember cref="F:Android.Opengl.GLSurfaceView.RendermodeContinuously" />
        <altmember cref="F:Android.Opengl.GLSurfaceView.RendermodeWhenDirty" />
      </Docs>
    </Member>
    <Member MemberName="RendermodeContinuously">
      <MemberSignature Language="C#" Value="public const Android.Opengl.Rendermode RendermodeContinuously = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Opengl.Rendermode RendermodeContinuously = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("RENDERMODE_CONTINUOUSLY")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Opengl.Rendermode enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Opengl.Rendermode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>The renderer is called
 continuously to re-render the scene.</summary>
        <remarks />
        <since version="Added in API level 3" />
        <altmember cref="P:Android.Opengl.GLSurfaceView.RenderMode" />
        <altmember cref="P:Android.Opengl.GLSurfaceView.RenderMode" />
      </Docs>
    </Member>
    <Member MemberName="RendermodeWhenDirty">
      <MemberSignature Language="C#" Value="public const Android.Opengl.Rendermode RendermodeWhenDirty = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Opengl.Rendermode RendermodeWhenDirty = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("RENDERMODE_WHEN_DIRTY")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Opengl.Rendermode enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Opengl.Rendermode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>The renderer only renders
 when the surface is created, or when <c><see cref="M:Android.Opengl.GLSurfaceView.RequestRender" /></c> is called.</summary>
        <remarks />
        <since version="Added in API level 3" />
        <altmember cref="P:Android.Opengl.GLSurfaceView.RenderMode" />
        <altmember cref="P:Android.Opengl.GLSurfaceView.RenderMode" />
        <altmember cref="M:Android.Opengl.GLSurfaceView.RequestRender" />
      </Docs>
    </Member>
    <Member MemberName="RequestRender">
      <MemberSignature Language="C#" Value="public virtual void RequestRender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestRender() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requestRender", "()V", "GetRequestRenderHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Request that the renderer render a frame.</summary>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetEGLConfigChooser">
      <MemberSignature Language="C#" Value="public virtual void SetEGLConfigChooser (Android.Opengl.GLSurfaceView.IEGLConfigChooser configChooser);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEGLConfigChooser(class Android.Opengl.GLSurfaceView/IEGLConfigChooser configChooser) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setEGLConfigChooser", "(Landroid/opengl/GLSurfaceView$EGLConfigChooser;)V", "GetSetEGLConfigChooser_Landroid_opengl_GLSurfaceView_EGLConfigChooser_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configChooser" Type="Android.Opengl.GLSurfaceView+IEGLConfigChooser" />
      </Parameters>
      <Docs>
        <param name="configChooser">To be added.</param>
        <summary>Install a custom EGLConfigChooser.</summary>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetEGLConfigChooser">
      <MemberSignature Language="C#" Value="public virtual void SetEGLConfigChooser (bool needDepth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEGLConfigChooser(bool needDepth) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setEGLConfigChooser", "(Z)V", "GetSetEGLConfigChooser_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="needDepth" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="needDepth">To be added.</param>
        <summary>Install a config chooser which will choose a config
 as close to 16-bit RGB as possible, with or without an optional depth
 buffer as close to 16-bits as possible.</summary>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetEGLConfigChooser">
      <MemberSignature Language="C#" Value="public virtual void SetEGLConfigChooser (int redSize, int greenSize, int blueSize, int alphaSize, int depthSize, int stencilSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEGLConfigChooser(int32 redSize, int32 greenSize, int32 blueSize, int32 alphaSize, int32 depthSize, int32 stencilSize) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setEGLConfigChooser", "(IIIIII)V", "GetSetEGLConfigChooser_IIIIIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="redSize" Type="System.Int32" />
        <Parameter Name="greenSize" Type="System.Int32" />
        <Parameter Name="blueSize" Type="System.Int32" />
        <Parameter Name="alphaSize" Type="System.Int32" />
        <Parameter Name="depthSize" Type="System.Int32" />
        <Parameter Name="stencilSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="redSize">To be added.</param>
        <param name="greenSize">To be added.</param>
        <param name="blueSize">To be added.</param>
        <param name="alphaSize">To be added.</param>
        <param name="depthSize">To be added.</param>
        <param name="stencilSize">To be added.</param>
        <summary>Install a config chooser which will choose a config
 with at least the specified depthSize and stencilSize,
 and exactly the specified redSize, greenSize, blueSize and alphaSize.</summary>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetEGLContextClientVersion">
      <MemberSignature Language="C#" Value="public virtual void SetEGLContextClientVersion (int version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEGLContextClientVersion(int32 version) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setEGLContextClientVersion", "(I)V", "GetSetEGLContextClientVersion_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="version">The EGLContext client version to choose. Use 2 for OpenGL ES 2.0
</param>
        <summary>Inform the default EGLContextFactory and default EGLConfigChooser
 which EGLContext client version to pick.</summary>
        <remarks />
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetEGLContextFactory">
      <MemberSignature Language="C#" Value="public virtual void SetEGLContextFactory (Android.Opengl.GLSurfaceView.IEGLContextFactory factory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEGLContextFactory(class Android.Opengl.GLSurfaceView/IEGLContextFactory factory) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setEGLContextFactory", "(Landroid/opengl/GLSurfaceView$EGLContextFactory;)V", "GetSetEGLContextFactory_Landroid_opengl_GLSurfaceView_EGLContextFactory_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factory" Type="Android.Opengl.GLSurfaceView+IEGLContextFactory" />
      </Parameters>
      <Docs>
        <param name="factory">To be added.</param>
        <summary>Install a custom EGLContextFactory.</summary>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="SetEGLWindowSurfaceFactory">
      <MemberSignature Language="C#" Value="public virtual void SetEGLWindowSurfaceFactory (Android.Opengl.GLSurfaceView.IEGLWindowSurfaceFactory factory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEGLWindowSurfaceFactory(class Android.Opengl.GLSurfaceView/IEGLWindowSurfaceFactory factory) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setEGLWindowSurfaceFactory", "(Landroid/opengl/GLSurfaceView$EGLWindowSurfaceFactory;)V", "GetSetEGLWindowSurfaceFactory_Landroid_opengl_GLSurfaceView_EGLWindowSurfaceFactory_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factory" Type="Android.Opengl.GLSurfaceView+IEGLWindowSurfaceFactory" />
      </Parameters>
      <Docs>
        <param name="factory">To be added.</param>
        <summary>Install a custom EGLWindowSurfaceFactory.</summary>
        <remarks />
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="SetGLWrapper">
      <MemberSignature Language="C#" Value="public virtual void SetGLWrapper (Android.Opengl.GLSurfaceView.IGLWrapper glWrapper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetGLWrapper(class Android.Opengl.GLSurfaceView/IGLWrapper glWrapper) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setGLWrapper", "(Landroid/opengl/GLSurfaceView$GLWrapper;)V", "GetSetGLWrapper_Landroid_opengl_GLSurfaceView_GLWrapper_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glWrapper" Type="Android.Opengl.GLSurfaceView+IGLWrapper" />
      </Parameters>
      <Docs>
        <param name="glWrapper">the new GLWrapper
</param>
        <summary>Set the glWrapper.</summary>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetRenderer">
      <MemberSignature Language="C#" Value="public virtual void SetRenderer (Android.Opengl.GLSurfaceView.IRenderer renderer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRenderer(class Android.Opengl.GLSurfaceView/IRenderer renderer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setRenderer", "(Landroid/opengl/GLSurfaceView$Renderer;)V", "GetSetRenderer_Landroid_opengl_GLSurfaceView_Renderer_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="renderer" Type="Android.Opengl.GLSurfaceView+IRenderer" />
      </Parameters>
      <Docs>
        <param name="renderer">the renderer to use to perform OpenGL drawing.
</param>
        <summary>Set the renderer associated with this view.</summary>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SurfaceChanged">
      <MemberSignature Language="C#" Value="public virtual void SurfaceChanged (Android.Views.ISurfaceHolder holder, Android.Graphics.Format format, int w, int h);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SurfaceChanged(class Android.Views.ISurfaceHolder holder, valuetype Android.Graphics.Format format, int32 w, int32 h) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("surfaceChanged", "(Landroid/view/SurfaceHolder;III)V", "GetSurfaceChanged_Landroid_view_SurfaceHolder_IIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="holder" Type="Android.Views.ISurfaceHolder" />
        <Parameter Name="format" Type="Android.Graphics.Format" />
        <Parameter Name="w" Type="System.Int32" />
        <Parameter Name="h" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="holder">The SurfaceHolder whose surface has changed.</param>
        <param name="format">The new PixelFormat of the surface.</param>
        <param name="w">The new width of the surface.</param>
        <param name="h">The new height of the surface.
</param>
        <summary tool="true">This method is part of the SurfaceHolder.</summary>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SurfaceCreated">
      <MemberSignature Language="C#" Value="public virtual void SurfaceCreated (Android.Views.ISurfaceHolder holder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SurfaceCreated(class Android.Views.ISurfaceHolder holder) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("surfaceCreated", "(Landroid/view/SurfaceHolder;)V", "GetSurfaceCreated_Landroid_view_SurfaceHolder_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="holder" Type="Android.Views.ISurfaceHolder" />
      </Parameters>
      <Docs>
        <param name="holder">The SurfaceHolder whose surface is being created.
</param>
        <summary tool="true">This method is part of the SurfaceHolder.</summary>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SurfaceDestroyed">
      <MemberSignature Language="C#" Value="public virtual void SurfaceDestroyed (Android.Views.ISurfaceHolder holder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SurfaceDestroyed(class Android.Views.ISurfaceHolder holder) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("surfaceDestroyed", "(Landroid/view/SurfaceHolder;)V", "GetSurfaceDestroyed_Landroid_view_SurfaceHolder_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="holder" Type="Android.Views.ISurfaceHolder" />
      </Parameters>
      <Docs>
        <param name="holder">The SurfaceHolder whose surface is being destroyed.
</param>
        <summary tool="true">This method is part of the SurfaceHolder.</summary>
        <remarks />
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
