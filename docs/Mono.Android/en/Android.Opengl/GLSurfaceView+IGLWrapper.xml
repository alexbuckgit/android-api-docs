<Type Name="GLSurfaceView+IGLWrapper" FullName="Android.Opengl.GLSurfaceView+IGLWrapper">
  <TypeSignature Language="C#" Value="public interface GLSurfaceView.IGLWrapper : Android.Runtime.IJavaObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class nested public interface auto ansi abstract GLSurfaceView/IGLWrapper implements class Android.Runtime.IJavaObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/opengl/GLSurfaceView$GLWrapper", "", "Android.Opengl.GLSurfaceView/IGLWrapperInvoker")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>An interface used to wrap a GL interface.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">An interface used to wrap a GL interface.
 </para>
      <para tool="javadoc-to-mdoc">Typically
 used for implementing debugging and tracing on top of the default
 GL interface. You would typically use this by creating your own class
 that implemented all the GL methods by delegating to another GL instance.
 Then you could add your own behavior before or after calling the
 delegate. All the GLWrapper would do was instantiate and return the
 wrapper GL instance:
 <example><code lang="java">
 class MyGLWrapper implements GLWrapper {
     GL wrap(GL gl) {
         return new MyGLImplementation(gl);
     }
     static class MyGLImplementation implements GL,GL10,GL11,... {
         ...
     }
 }
 </code></example></para>
      <format type="text/html">
        <h5 class="jd-tagtitle">See Also</h5>
      </format>
      <list type="bullet">
        <item>
          <term>
            <c>
              <see cref="M:Android.Opengl.GLSurfaceView.SetGLWrapper(Android.Opengl.GLSurfaceView.IGLWrapper)" />
            </c>
          </term>
        </item>
      </list>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/opengl/GLSurfaceView.GLWrapper.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 3" />
  </Docs>
  <Members>
    <Member MemberName="Wrap">
      <MemberSignature Language="C#" Value="public Javax.Microedition.Khronos.Opengles.IGL Wrap (Javax.Microedition.Khronos.Opengles.IGL gl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Javax.Microedition.Khronos.Opengles.IGL Wrap(class Javax.Microedition.Khronos.Opengles.IGL gl) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("wrap", "(Ljavax/microedition/khronos/opengles/GL;)Ljavax/microedition/khronos/opengles/GL;", "GetWrap_Ljavax_microedition_khronos_opengles_GL_Handler:Android.Opengl.GLSurfaceView/IGLWrapperInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Microedition.Khronos.Opengles.IGL</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gl" Type="Javax.Microedition.Khronos.Opengles.IGL" />
      </Parameters>
      <Docs>
        <param name="gl">a GL interface that is to be wrapped.</param>
        <summary>Wraps a gl interface in another gl interface.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Wraps a gl interface in another gl interface.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/opengl/GLSurfaceView.GLWrapper.html#wrap(javax.microedition.khronos.opengles.GL)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
  </Members>
</Type>
