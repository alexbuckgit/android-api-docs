<Type Name="Matrix" FullName="Android.Opengl.Matrix">
  <TypeSignature Language="C#" Value="public class Matrix : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Matrix extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/opengl/Matrix", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Matrix math utilities.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Matrix math utilities. These methods operate on OpenGL ES format
 matrices and vectors stored in float arrays.

 Matrices are 4 x 4 column-vector matrices stored in column-major
 order:
 <example><code lang="java">
  m[offset +  0] m[offset +  4] m[offset +  8] m[offset + 12]
  m[offset +  1] m[offset +  5] m[offset +  9] m[offset + 13]
  m[offset +  2] m[offset +  6] m[offset + 10] m[offset + 14]
  m[offset +  3] m[offset +  7] m[offset + 11] m[offset + 15]
 </code></example>

 Vectors are 4 row x 1 column column-vectors stored in order:
 <example><code lang="java">
 v[offset + 0]
 v[offset + 1]
 v[offset + 2]
 v[offset + 3]
 </code></example></para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/opengl/Matrix.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/opengl/Matrix.html#Matrix()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Matrix (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FrustumM">
      <MemberSignature Language="C#" Value="public static void FrustumM (float[] m, int offset, float left, float right, float bottom, float top, float near, float far);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FrustumM(float32[] m, int32 offset, float32 left, float32 right, float32 bottom, float32 top, float32 near, float32 far) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("frustumM", "([FIFFFFFF)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Single[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="left" Type="System.Single" />
        <Parameter Name="right" Type="System.Single" />
        <Parameter Name="bottom" Type="System.Single" />
        <Parameter Name="top" Type="System.Single" />
        <Parameter Name="near" Type="System.Single" />
        <Parameter Name="far" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="m">the float array that holds the perspective matrix</param>
        <param name="offset">the offset into float array m where the perspective
 matrix data is written</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <param name="bottom">To be added.</param>
        <param name="top">To be added.</param>
        <param name="near">To be added.</param>
        <param name="far">To be added.</param>
        <summary>Define a projection matrix in terms of six clip planes</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Define a projection matrix in terms of six clip planes</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/opengl/Matrix.html#frustumM(float[], int, float, float, float, float, float, float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InvertM">
      <MemberSignature Language="C#" Value="public static bool InvertM (float[] mInv, int mInvOffset, float[] m, int mOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool InvertM(float32[] mInv, int32 mInvOffset, float32[] m, int32 mOffset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("invertM", "([FI[FI)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mInv" Type="System.Single[]" />
        <Parameter Name="mInvOffset" Type="System.Int32" />
        <Parameter Name="m" Type="System.Single[]" />
        <Parameter Name="mOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mInv">the array that holds the output inverted matrix</param>
        <param name="mInvOffset">an offset into mInv where the inverted matrix is
        stored.</param>
        <param name="m">the input array</param>
        <param name="mOffset">an offset into m where the matrix is stored.</param>
        <summary>Inverts a 4 x 4 matrix.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Inverts a 4 x 4 matrix.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/opengl/Matrix.html#invertM(float[], int, float[], int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public static float Length (float x, float y, float z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Length(float32 x, float32 y, float32 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("length", "(FFF)F", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="z" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">x coordinate of a vector</param>
        <param name="y">y coordinate of a vector</param>
        <param name="z">z coordinate of a vector</param>
        <summary>Computes the length of a vector</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Computes the length of a vector</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/opengl/Matrix.html#length(float, float, float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MultiplyMM">
      <MemberSignature Language="C#" Value="public static void MultiplyMM (float[] result, int resultOffset, float[] lhs, int lhsOffset, float[] rhs, int rhsOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiplyMM(float32[] result, int32 resultOffset, float32[] lhs, int32 lhsOffset, float32[] rhs, int32 rhsOffset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("multiplyMM", "([FI[FI[FI)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.Single[]" />
        <Parameter Name="resultOffset" Type="System.Int32" />
        <Parameter Name="lhs" Type="System.Single[]" />
        <Parameter Name="lhsOffset" Type="System.Int32" />
        <Parameter Name="rhs" Type="System.Single[]" />
        <Parameter Name="rhsOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="result">The float array that holds the result.</param>
        <param name="resultOffset">The offset into the result array where the result is
        stored.</param>
        <param name="lhs">The float array that holds the left-hand-side matrix.</param>
        <param name="lhsOffset">The offset into the lhs array where the lhs is stored</param>
        <param name="rhs">The float array that holds the right-hand-side matrix.</param>
        <param name="rhsOffset">The offset into the rhs array where the rhs is stored.</param>
        <summary>Multiply two 4x4 matrices together and store the result in a third 4x4
 matrix.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Multiply two 4x4 matrices together and store the result in a third 4x4
 matrix. In matrix notation: result = lhs x rhs. Due to the way
 matrix multiplication works, the result matrix will have the same
 effect as first multiplying by the rhs matrix, then multiplying by
 the lhs matrix. This is the opposite of what you might expect.

 The same float array may be passed for result, lhs, and/or rhs. However,
 the result element values are undefined if the result elements overlap
 either the lhs or rhs elements.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/opengl/Matrix.html#multiplyMM(float[], int, float[], int, float[], int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if result, lhs, or rhs are null, or if
 resultOffset + 16 &gt; result.length or lhsOffset + 16 &gt; lhs.length or
 rhsOffset + 16 &gt; rhs.length.
</exception>
      </Docs>
    </Member>
    <Member MemberName="MultiplyMV">
      <MemberSignature Language="C#" Value="public static void MultiplyMV (float[] resultVec, int resultVecOffset, float[] lhsMat, int lhsMatOffset, float[] rhsVec, int rhsVecOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MultiplyMV(float32[] resultVec, int32 resultVecOffset, float32[] lhsMat, int32 lhsMatOffset, float32[] rhsVec, int32 rhsVecOffset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("multiplyMV", "([FI[FI[FI)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultVec" Type="System.Single[]" />
        <Parameter Name="resultVecOffset" Type="System.Int32" />
        <Parameter Name="lhsMat" Type="System.Single[]" />
        <Parameter Name="lhsMatOffset" Type="System.Int32" />
        <Parameter Name="rhsVec" Type="System.Single[]" />
        <Parameter Name="rhsVecOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resultVec">The float array that holds the result vector.</param>
        <param name="resultVecOffset">The offset into the result array where the result
        vector is stored.</param>
        <param name="lhsMat">The float array that holds the left-hand-side matrix.</param>
        <param name="lhsMatOffset">The offset into the lhs array where the lhs is stored</param>
        <param name="rhsVec">The float array that holds the right-hand-side vector.</param>
        <param name="rhsVecOffset">The offset into the rhs vector where the rhs vector
        is stored.</param>
        <summary>Multiply a 4 element vector by a 4x4 matrix and store the result in a 4
 element column vector.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Multiply a 4 element vector by a 4x4 matrix and store the result in a 4
 element column vector. In matrix notation: result = lhs x rhs

 The same float array may be passed for resultVec, lhsMat, and/or rhsVec.
 However, the resultVec element values are undefined if the resultVec
 elements overlap either the lhsMat or rhsVec elements.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/opengl/Matrix.html#multiplyMV(float[], int, float[], int, float[], int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if resultVec, lhsMat,
 or rhsVec are null, or if resultVecOffset + 4 &gt; resultVec.length
 or lhsMatOffset + 16 &gt; lhsMat.length or
 rhsVecOffset + 4 &gt; rhsVec.length.
</exception>
      </Docs>
    </Member>
    <Member MemberName="OrthoM">
      <MemberSignature Language="C#" Value="public static void OrthoM (float[] m, int mOffset, float left, float right, float bottom, float top, float near, float far);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void OrthoM(float32[] m, int32 mOffset, float32 left, float32 right, float32 bottom, float32 top, float32 near, float32 far) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("orthoM", "([FIFFFFFF)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Single[]" />
        <Parameter Name="mOffset" Type="System.Int32" />
        <Parameter Name="left" Type="System.Single" />
        <Parameter Name="right" Type="System.Single" />
        <Parameter Name="bottom" Type="System.Single" />
        <Parameter Name="top" Type="System.Single" />
        <Parameter Name="near" Type="System.Single" />
        <Parameter Name="far" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="m">returns the result</param>
        <param name="mOffset">To be added.</param>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <param name="bottom">To be added.</param>
        <param name="top">To be added.</param>
        <param name="near">To be added.</param>
        <param name="far">To be added.</param>
        <summary>Computes an orthographic projection matrix.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Computes an orthographic projection matrix.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/opengl/Matrix.html#orthoM(float[], int, float, float, float, float, float, float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PerspectiveM">
      <MemberSignature Language="C#" Value="public static void PerspectiveM (float[] m, int offset, float fovy, float aspect, float zNear, float zFar);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PerspectiveM(float32[] m, int32 offset, float32 fovy, float32 aspect, float32 zNear, float32 zFar) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("perspectiveM", "([FIFFFF)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Single[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="fovy" Type="System.Single" />
        <Parameter Name="aspect" Type="System.Single" />
        <Parameter Name="zNear" Type="System.Single" />
        <Parameter Name="zFar" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="m">the float array that holds the perspective matrix</param>
        <param name="offset">the offset into float array m where the perspective
 matrix data is written</param>
        <param name="fovy">field of view in y direction, in degrees</param>
        <param name="aspect">width to height aspect ratio of the viewport</param>
        <param name="zNear">To be added.</param>
        <param name="zFar">To be added.</param>
        <summary>Define a projection matrix in terms of a field of view angle, an
 aspect ratio, and z clip planes</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Define a projection matrix in terms of a field of view angle, an
 aspect ratio, and z clip planes</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/opengl/Matrix.html#perspectiveM(float[], int, float, float, float, float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="RotateM">
      <MemberSignature Language="C#" Value="public static void RotateM (float[] m, int mOffset, float a, float x, float y, float z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RotateM(float32[] m, int32 mOffset, float32 a, float32 x, float32 y, float32 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("rotateM", "([FIFFFF)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Single[]" />
        <Parameter Name="mOffset" Type="System.Int32" />
        <Parameter Name="a" Type="System.Single" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="z" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="m">source matrix</param>
        <param name="mOffset">index into m where the matrix starts</param>
        <param name="a">angle to rotate in degrees</param>
        <param name="x">scale factor x</param>
        <param name="y">scale factor y</param>
        <param name="z">scale factor z
</param>
        <summary>Rotates matrix m in place by angle a (in degrees)
 around the axis (x, y, z)</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Rotates matrix m in place by angle a (in degrees)
 around the axis (x, y, z)</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/opengl/Matrix.html#rotateM(float[], int, float, float, float, float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RotateM">
      <MemberSignature Language="C#" Value="public static void RotateM (float[] rm, int rmOffset, float[] m, int mOffset, float a, float x, float y, float z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RotateM(float32[] rm, int32 rmOffset, float32[] m, int32 mOffset, float32 a, float32 x, float32 y, float32 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("rotateM", "([FI[FIFFFF)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rm" Type="System.Single[]" />
        <Parameter Name="rmOffset" Type="System.Int32" />
        <Parameter Name="m" Type="System.Single[]" />
        <Parameter Name="mOffset" Type="System.Int32" />
        <Parameter Name="a" Type="System.Single" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="z" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rm">returns the result</param>
        <param name="rmOffset">index into rm where the result matrix starts</param>
        <param name="m">source matrix</param>
        <param name="mOffset">index into m where the source matrix starts</param>
        <param name="a">angle to rotate in degrees</param>
        <param name="x">scale factor x</param>
        <param name="y">scale factor y</param>
        <param name="z">scale factor z
</param>
        <summary>Rotates matrix m by angle a (in degrees) around the axis (x, y, z)</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Rotates matrix m by angle a (in degrees) around the axis (x, y, z)</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/opengl/Matrix.html#rotateM(float[], int, float[], int, float, float, float, float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ScaleM">
      <MemberSignature Language="C#" Value="public static void ScaleM (float[] m, int mOffset, float x, float y, float z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ScaleM(float32[] m, int32 mOffset, float32 x, float32 y, float32 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("scaleM", "([FIFFF)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Single[]" />
        <Parameter Name="mOffset" Type="System.Int32" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="z" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="m">matrix to scale</param>
        <param name="mOffset">index into m where the matrix starts</param>
        <param name="x">scale factor x</param>
        <param name="y">scale factor y</param>
        <param name="z">scale factor z
</param>
        <summary>Scales matrix m in place by sx, sy, and sz</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Scales matrix m in place by sx, sy, and sz</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/opengl/Matrix.html#scaleM(float[], int, float, float, float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ScaleM">
      <MemberSignature Language="C#" Value="public static void ScaleM (float[] sm, int smOffset, float[] m, int mOffset, float x, float y, float z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ScaleM(float32[] sm, int32 smOffset, float32[] m, int32 mOffset, float32 x, float32 y, float32 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("scaleM", "([FI[FIFFF)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sm" Type="System.Single[]" />
        <Parameter Name="smOffset" Type="System.Int32" />
        <Parameter Name="m" Type="System.Single[]" />
        <Parameter Name="mOffset" Type="System.Int32" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="z" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="sm">returns the result</param>
        <param name="smOffset">index into sm where the result matrix starts</param>
        <param name="m">source matrix</param>
        <param name="mOffset">index into m where the source matrix starts</param>
        <param name="x">scale factor x</param>
        <param name="y">scale factor y</param>
        <param name="z">scale factor z
</param>
        <summary>Scales matrix  m by x, y, and z, putting the result in sm</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Scales matrix  m by x, y, and z, putting the result in sm</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/opengl/Matrix.html#scaleM(float[], int, float[], int, float, float, float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetIdentityM">
      <MemberSignature Language="C#" Value="public static void SetIdentityM (float[] sm, int smOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIdentityM(float32[] sm, int32 smOffset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setIdentityM", "([FI)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sm" Type="System.Single[]" />
        <Parameter Name="smOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sm">returns the result</param>
        <param name="smOffset">index into sm where the result matrix starts
</param>
        <summary>Sets matrix m to the identity matrix.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets matrix m to the identity matrix.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/opengl/Matrix.html#setIdentityM(float[], int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetLookAtM">
      <MemberSignature Language="C#" Value="public static void SetLookAtM (float[] rm, int rmOffset, float eyeX, float eyeY, float eyeZ, float centerX, float centerY, float centerZ, float upX, float upY, float upZ);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetLookAtM(float32[] rm, int32 rmOffset, float32 eyeX, float32 eyeY, float32 eyeZ, float32 centerX, float32 centerY, float32 centerZ, float32 upX, float32 upY, float32 upZ) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLookAtM", "([FIFFFFFFFFF)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rm" Type="System.Single[]" />
        <Parameter Name="rmOffset" Type="System.Int32" />
        <Parameter Name="eyeX" Type="System.Single" />
        <Parameter Name="eyeY" Type="System.Single" />
        <Parameter Name="eyeZ" Type="System.Single" />
        <Parameter Name="centerX" Type="System.Single" />
        <Parameter Name="centerY" Type="System.Single" />
        <Parameter Name="centerZ" Type="System.Single" />
        <Parameter Name="upX" Type="System.Single" />
        <Parameter Name="upY" Type="System.Single" />
        <Parameter Name="upZ" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rm">returns the result</param>
        <param name="rmOffset">index into rm where the result matrix starts</param>
        <param name="eyeX">eye point X</param>
        <param name="eyeY">eye point Y</param>
        <param name="eyeZ">eye point Z</param>
        <param name="centerX">center of view X</param>
        <param name="centerY">center of view Y</param>
        <param name="centerZ">center of view Z</param>
        <param name="upX">up vector X</param>
        <param name="upY">up vector Y</param>
        <param name="upZ">up vector Z
</param>
        <summary>Define a viewing transformation in terms of an eye point, a center of
 view, and an up vector.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Define a viewing transformation in terms of an eye point, a center of
 view, and an up vector.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/opengl/Matrix.html#setLookAtM(float[], int, float, float, float, float, float, float, float, float, float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetRotateEulerM">
      <MemberSignature Language="C#" Value="public static void SetRotateEulerM (float[] rm, int rmOffset, float x, float y, float z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetRotateEulerM(float32[] rm, int32 rmOffset, float32 x, float32 y, float32 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setRotateEulerM", "([FIFFF)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rm" Type="System.Single[]" />
        <Parameter Name="rmOffset" Type="System.Int32" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="z" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rm">returns the result</param>
        <param name="rmOffset">index into rm where the result matrix starts</param>
        <param name="x">angle of rotation, in degrees</param>
        <param name="y">angle of rotation, in degrees</param>
        <param name="z">angle of rotation, in degrees
</param>
        <summary>Converts Euler angles to a rotation matrix</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Converts Euler angles to a rotation matrix</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/opengl/Matrix.html#setRotateEulerM(float[], int, float, float, float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetRotateM">
      <MemberSignature Language="C#" Value="public static void SetRotateM (float[] rm, int rmOffset, float a, float x, float y, float z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetRotateM(float32[] rm, int32 rmOffset, float32 a, float32 x, float32 y, float32 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setRotateM", "([FIFFFF)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rm" Type="System.Single[]" />
        <Parameter Name="rmOffset" Type="System.Int32" />
        <Parameter Name="a" Type="System.Single" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="z" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rm">returns the result</param>
        <param name="rmOffset">index into rm where the result matrix starts</param>
        <param name="a">angle to rotate in degrees</param>
        <param name="x">scale factor x</param>
        <param name="y">scale factor y</param>
        <param name="z">scale factor z
</param>
        <summary>Rotates matrix m by angle a (in degrees) around the axis (x, y, z)</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Rotates matrix m by angle a (in degrees) around the axis (x, y, z)</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/opengl/Matrix.html#setRotateM(float[], int, float, float, float, float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateM">
      <MemberSignature Language="C#" Value="public static void TranslateM (float[] m, int mOffset, float x, float y, float z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TranslateM(float32[] m, int32 mOffset, float32 x, float32 y, float32 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("translateM", "([FIFFF)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Single[]" />
        <Parameter Name="mOffset" Type="System.Int32" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="z" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="m">matrix</param>
        <param name="mOffset">index into m where the matrix starts</param>
        <param name="x">translation factor x</param>
        <param name="y">translation factor y</param>
        <param name="z">translation factor z
</param>
        <summary>Translates matrix m by x, y, and z in place.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Translates matrix m by x, y, and z in place.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/opengl/Matrix.html#translateM(float[], int, float, float, float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TranslateM">
      <MemberSignature Language="C#" Value="public static void TranslateM (float[] tm, int tmOffset, float[] m, int mOffset, float x, float y, float z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TranslateM(float32[] tm, int32 tmOffset, float32[] m, int32 mOffset, float32 x, float32 y, float32 z) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("translateM", "([FI[FIFFF)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tm" Type="System.Single[]" />
        <Parameter Name="tmOffset" Type="System.Int32" />
        <Parameter Name="m" Type="System.Single[]" />
        <Parameter Name="mOffset" Type="System.Int32" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="z" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="tm">returns the result</param>
        <param name="tmOffset">index into sm where the result matrix starts</param>
        <param name="m">source matrix</param>
        <param name="mOffset">index into m where the source matrix starts</param>
        <param name="x">translation factor x</param>
        <param name="y">translation factor y</param>
        <param name="z">translation factor z
</param>
        <summary>Translates matrix m by x, y, and z, putting the result in tm</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Translates matrix m by x, y, and z, putting the result in tm</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/opengl/Matrix.html#translateM(float[], int, float[], int, float, float, float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TransposeM">
      <MemberSignature Language="C#" Value="public static void TransposeM (float[] mTrans, int mTransOffset, float[] m, int mOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TransposeM(float32[] mTrans, int32 mTransOffset, float32[] m, int32 mOffset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("transposeM", "([FI[FI)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mTrans" Type="System.Single[]" />
        <Parameter Name="mTransOffset" Type="System.Int32" />
        <Parameter Name="m" Type="System.Single[]" />
        <Parameter Name="mOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mTrans">the array that holds the output inverted matrix</param>
        <param name="mTransOffset">an offset into mInv where the inverted matrix is
        stored.</param>
        <param name="m">the input array</param>
        <param name="mOffset">an offset into m where the matrix is stored.
</param>
        <summary>Transposes a 4 x 4 matrix.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Transposes a 4 x 4 matrix.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/opengl/Matrix.html#transposeM(float[], int, float[], int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
