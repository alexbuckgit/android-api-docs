<Type Name="ETC1" FullName="Android.Opengl.ETC1">
  <TypeSignature Language="C#" Value="public class ETC1 : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ETC1 extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/opengl/ETC1", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Methods for encoding and decoding ETC1 textures.</summary>
    <remarks><para tool="javadoc-to-mdoc">Methods for encoding and decoding ETC1 textures.
 </para><para tool="javadoc-to-mdoc">
 The standard for the ETC1 texture format can be found at
 http://www.khronos.org/registry/gles/extensions/OES/OES_compressed_ETC1_RGB8_texture.txt
 </para><para tool="javadoc-to-mdoc">
 The PKM file format is of a 16-byte header that describes the image bounds
 followed by the encoded ETC1 texture data.
 </para><para tool="javadoc-to-mdoc"><format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="T:Android.Opengl.ETC1Util" /></c></term></item></list></para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/opengl/ETC1.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ETC1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary></summary>
        <remarks><para tool="javadoc-to-mdoc" /><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/opengl/ETC1.html#ETC1()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ETC1 (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeBlock">
      <MemberSignature Language="C#" Value="public static void DecodeBlock (Java.Nio.Buffer in, Java.Nio.Buffer out);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DecodeBlock(class Java.Nio.Buffer in, class Java.Nio.Buffer out) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("decodeBlock", "(Ljava/nio/Buffer;Ljava/nio/Buffer;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="in" Type="Java.Nio.Buffer" />
        <Parameter Name="out" Type="Java.Nio.Buffer" />
      </Parameters>
      <Docs>
        <param name="in">a native order direct buffer of size ENCODED_BLOCK_SIZE that contains the
 ETC1 compressed version of the data.</param>
        <param name="out">a native order direct buffer of size DECODED_BLOCK_SIZE that will receive
 the decoded data. The data represents a
 4 x 4 square of 3-byte pixels in form R, G, B. Byte (3 * (x + 4 * y) is the R
 value of pixel (x, y).
</param>
        <summary>Decode a block of pixels.</summary>
        <remarks><para tool="javadoc-to-mdoc">Decode a block of pixels.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/opengl/ETC1.html#decodeBlock(java.nio.Buffer, java.nio.Buffer)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DecodedBlockSize">
      <MemberSignature Language="C#" Value="public const int DecodedBlockSize = 48;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 DecodedBlockSize = (48)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DECODED_BLOCK_SIZE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>48</MemberValue>
      <Docs>
        <summary>Size in bytes of a decoded block.</summary>
        <remarks><para tool="javadoc-to-mdoc">Size in bytes of a decoded block.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/opengl/ETC1.html#DECODED_BLOCK_SIZE" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DecodeImage">
      <MemberSignature Language="C#" Value="public static void DecodeImage (Java.Nio.Buffer in, Java.Nio.Buffer out, int width, int height, int pixelSize, int stride);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DecodeImage(class Java.Nio.Buffer in, class Java.Nio.Buffer out, int32 width, int32 height, int32 pixelSize, int32 stride) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("decodeImage", "(Ljava/nio/Buffer;Ljava/nio/Buffer;IIII)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="in" Type="Java.Nio.Buffer" />
        <Parameter Name="out" Type="Java.Nio.Buffer" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="pixelSize" Type="System.Int32" />
        <Parameter Name="stride" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="in">native order direct buffer of the encoded data.</param>
        <param name="out">native order direct buffer of the image data. Will be written such that
 pixel (x,y) is at pIn + pixelSize * x + stride * y. Must be
 large enough to store entire image.</param>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <param name="pixelSize">must be 2 or 3. 2 is an GL_UNSIGNED_SHORT_5_6_5 image,
 3 is a GL_BYTE RGB image.
</param>
        <param name="stride">To be added.</param>
        <summary>Decode an entire image.</summary>
        <remarks><para tool="javadoc-to-mdoc">Decode an entire image.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/opengl/ETC1.html#decodeImage(java.nio.Buffer, java.nio.Buffer, int, int, int, int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="EncodeBlock">
      <MemberSignature Language="C#" Value="public static void EncodeBlock (Java.Nio.Buffer in, int validPixelMask, Java.Nio.Buffer out);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EncodeBlock(class Java.Nio.Buffer in, int32 validPixelMask, class Java.Nio.Buffer out) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("encodeBlock", "(Ljava/nio/Buffer;ILjava/nio/Buffer;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="in" Type="Java.Nio.Buffer" />
        <Parameter Name="validPixelMask" Type="System.Int32" />
        <Parameter Name="out" Type="Java.Nio.Buffer" />
      </Parameters>
      <Docs>
        <param name="in">a native order direct buffer of size DECODED_BLOCK_SIZE that represent a
 4 x 4 square of 3-byte pixels in form R, G, B. Byte (3 * (x + 4 * y) is the R
 value of pixel (x, y).</param>
        <param name="validPixelMask">is a 16-bit mask where bit (1 </param>
        <param name="out">a native order direct buffer of size ENCODED_BLOCK_SIZE that receives the
 ETC1 compressed version of the data.

</param>
        <summary>Encode a block of pixels.</summary>
        <remarks><para tool="javadoc-to-mdoc">Encode a block of pixels.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/opengl/ETC1.html#encodeBlock(java.nio.Buffer, int, java.nio.Buffer)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="EncodedBlockSize">
      <MemberSignature Language="C#" Value="public const int EncodedBlockSize = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 EncodedBlockSize = (8)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ENCODED_BLOCK_SIZE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>Size in bytes of an encoded block.</summary>
        <remarks><para tool="javadoc-to-mdoc">Size in bytes of an encoded block.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/opengl/ETC1.html#ENCODED_BLOCK_SIZE" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="EncodeImage">
      <MemberSignature Language="C#" Value="public static void EncodeImage (Java.Nio.Buffer in, int width, int height, int pixelSize, int stride, Java.Nio.Buffer out);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EncodeImage(class Java.Nio.Buffer in, int32 width, int32 height, int32 pixelSize, int32 stride, class Java.Nio.Buffer out) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("encodeImage", "(Ljava/nio/Buffer;IIIILjava/nio/Buffer;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="in" Type="Java.Nio.Buffer" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="pixelSize" Type="System.Int32" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="out" Type="Java.Nio.Buffer" />
      </Parameters>
      <Docs>
        <param name="in">a native order direct buffer of the image data. Formatted such that
           pixel (x,y) is at pIn + pixelSize * x + stride * y;</param>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <param name="pixelSize">must be 2 or 3. 2 is an GL_UNSIGNED_SHORT_5_6_5 image,
 3 is a GL_BYTE RGB image.
</param>
        <param name="stride">To be added.</param>
        <param name="out">a native order direct buffer of the encoded data.
 Must be large enough to store entire encoded image.</param>
        <summary>Encode an entire image.</summary>
        <remarks><para tool="javadoc-to-mdoc">Encode an entire image.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/opengl/ETC1.html#encodeImage(java.nio.Buffer, int, int, int, int, java.nio.Buffer)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="Etc1Rgb8Oes">
      <MemberSignature Language="C#" Value="public const int Etc1Rgb8Oes = 36196;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 Etc1Rgb8Oes = (36196)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ETC1_RGB8_OES")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>36196</MemberValue>
      <Docs>
        <summary>Accepted by the internalformat parameter of glCompressedTexImage2D.</summary>
        <remarks><para tool="javadoc-to-mdoc">Accepted by the internalformat parameter of glCompressedTexImage2D.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/opengl/ETC1.html#ETC1_RGB8_OES" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="EtcPkmHeaderSize">
      <MemberSignature Language="C#" Value="public const int EtcPkmHeaderSize = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 EtcPkmHeaderSize = (16)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ETC_PKM_HEADER_SIZE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>Size of a PKM file header, in bytes.</summary>
        <remarks><para tool="javadoc-to-mdoc">Size of a PKM file header, in bytes.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/opengl/ETC1.html#ETC_PKM_HEADER_SIZE" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="FormatHeader">
      <MemberSignature Language="C#" Value="public static void FormatHeader (Java.Nio.Buffer header, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FormatHeader(class Java.Nio.Buffer header, int32 width, int32 height) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("formatHeader", "(Ljava/nio/Buffer;II)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="header" Type="Java.Nio.Buffer" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="header">native order direct buffer of the header.</param>
        <param name="width">the width of the image in pixels.</param>
        <param name="height">the height of the image in pixels.
</param>
        <summary>Format a PKM header</summary>
        <remarks><para tool="javadoc-to-mdoc">Format a PKM header</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/opengl/ETC1.html#formatHeader(java.nio.Buffer, int, int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetEncodedDataSize">
      <MemberSignature Language="C#" Value="public static int GetEncodedDataSize (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetEncodedDataSize(int32 width, int32 height) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getEncodedDataSize", "(II)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <summary>Return the size of the encoded image data (does not include size of PKM header).</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Return the size of the encoded image data (does not include size of PKM header).
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/opengl/ETC1.html#getEncodedDataSize(int, int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetHeight">
      <MemberSignature Language="C#" Value="public static int GetHeight (Java.Nio.Buffer header);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetHeight(class Java.Nio.Buffer header) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getHeight", "(Ljava/nio/Buffer;)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="header" Type="Java.Nio.Buffer" />
      </Parameters>
      <Docs>
        <param name="header">native order direct buffer of the header.
</param>
        <summary>Read the image height from a PKM header</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Read the image height from a PKM header</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/opengl/ETC1.html#getHeight(java.nio.Buffer)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetWidth">
      <MemberSignature Language="C#" Value="public static int GetWidth (Java.Nio.Buffer header);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetWidth(class Java.Nio.Buffer header) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getWidth", "(Ljava/nio/Buffer;)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="header" Type="Java.Nio.Buffer" />
      </Parameters>
      <Docs>
        <param name="header">native order direct buffer of the header.
</param>
        <summary>Read the image width from a PKM header</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Read the image width from a PKM header</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/opengl/ETC1.html#getWidth(java.nio.Buffer)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public static bool IsValid (Java.Nio.Buffer header);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValid(class Java.Nio.Buffer header) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isValid", "(Ljava/nio/Buffer;)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="header" Type="Java.Nio.Buffer" />
      </Parameters>
      <Docs>
        <param name="header">native order direct buffer of the header.
</param>
        <summary>Check if a PKM header is correctly formatted.</summary>
        <returns>To be added.</returns>
        <remarks><para tool="javadoc-to-mdoc">Check if a PKM header is correctly formatted.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/opengl/ETC1.html#isValid(java.nio.Buffer)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
