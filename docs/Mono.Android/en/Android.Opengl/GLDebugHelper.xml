<Type Name="GLDebugHelper" FullName="Android.Opengl.GLDebugHelper">
  <TypeSignature Language="C#" Value="public class GLDebugHelper : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GLDebugHelper extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/opengl/GLDebugHelper", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A helper class for debugging OpenGL ES applications.</summary>
    <remarks />
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GLDebugHelper ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected GLDebugHelper (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ConfigCheckGlError">
      <MemberSignature Language="C#" Value="public const Android.Opengl.GLDebugConfig ConfigCheckGlError = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Opengl.GLDebugConfig ConfigCheckGlError = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONFIG_CHECK_GL_ERROR")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Opengl.GLDebugConfig enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Opengl.GLDebugConfig</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Check glError() after every call.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ConfigCheckThread">
      <MemberSignature Language="C#" Value="public const Android.Opengl.GLDebugConfig ConfigCheckThread = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Opengl.GLDebugConfig ConfigCheckThread = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONFIG_CHECK_THREAD")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Opengl.GLDebugConfig enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Opengl.GLDebugConfig</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Check if all calls are on the same thread.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ConfigLogArgumentNames">
      <MemberSignature Language="C#" Value="public const Android.Opengl.GLDebugConfig ConfigLogArgumentNames = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Opengl.GLDebugConfig ConfigLogArgumentNames = (4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONFIG_LOG_ARGUMENT_NAMES")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Opengl.GLDebugConfig enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Opengl.GLDebugConfig</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Print argument names when logging GL Calls.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ErrorWrongThread">
      <MemberSignature Language="C#" Value="public const int ErrorWrongThread = 28672;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ErrorWrongThread = (28672)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ERROR_WRONG_THREAD")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>28672</MemberValue>
      <Docs>
        <summary>The Error number used in the GLException that is thrown if
 CONFIG_CHECK_THREAD is enabled and you call OpenGL ES on the
 a different thread.</summary>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Wrap">
      <MemberSignature Language="C#" Value="public static Javax.Microedition.Khronos.Egl.IEGL Wrap (Javax.Microedition.Khronos.Egl.IEGL egl, int configFlags, Java.IO.Writer log);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Microedition.Khronos.Egl.IEGL Wrap(class Javax.Microedition.Khronos.Egl.IEGL egl, int32 configFlags, class Java.IO.Writer log) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("wrap", "(Ljavax/microedition/khronos/egl/EGL;ILjava/io/Writer;)Ljavax/microedition/khronos/egl/EGL;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Microedition.Khronos.Egl.IEGL</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="egl" Type="Javax.Microedition.Khronos.Egl.IEGL" />
        <Parameter Name="configFlags" Type="System.Int32" />
        <Parameter Name="log" Type="Java.IO.Writer" />
      </Parameters>
      <Docs>
        <param name="egl">the existing GL interface. Must implement EGL and EGL10. May
 optionally implement EGL11 as well.</param>
        <param name="configFlags">A bitmask of error checking flags.</param>
        <param name="log">- null to disable logging, non-null to enable logging.</param>
        <summary>Wrap an existing EGL interface in a new EGL interface that adds
 support for error checking and/or logging.</summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Wrap">
      <MemberSignature Language="C#" Value="public static Javax.Microedition.Khronos.Opengles.IGL Wrap (Javax.Microedition.Khronos.Opengles.IGL gl, int configFlags, Java.IO.Writer log);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Javax.Microedition.Khronos.Opengles.IGL Wrap(class Javax.Microedition.Khronos.Opengles.IGL gl, int32 configFlags, class Java.IO.Writer log) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("wrap", "(Ljavax/microedition/khronos/opengles/GL;ILjava/io/Writer;)Ljavax/microedition/khronos/opengles/GL;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Javax.Microedition.Khronos.Opengles.IGL</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gl" Type="Javax.Microedition.Khronos.Opengles.IGL" />
        <Parameter Name="configFlags" Type="System.Int32" />
        <Parameter Name="log" Type="Java.IO.Writer" />
      </Parameters>
      <Docs>
        <param name="gl">To be added.</param>
        <param name="configFlags">To be added.</param>
        <param name="log">To be added.</param>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks />
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
