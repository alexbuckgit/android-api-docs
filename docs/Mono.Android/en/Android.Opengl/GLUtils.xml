<Type Name="GLUtils" FullName="Android.Opengl.GLUtils">
  <TypeSignature Language="C#" Value="public sealed class GLUtils : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit GLUtils extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/opengl/GLUtils", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Utility class to help bridging OpenGL ES and Android APIs.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Utility class to help bridging OpenGL ES and Android APIs.

</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/opengl/GLUtils.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="GetEGLErrorString">
      <MemberSignature Language="C#" Value="public static string GetEGLErrorString (int error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEGLErrorString(int32 error) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getEGLErrorString", "(I)Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="error">The EGL error to convert into a String.</param>
        <summary>Return a string for the EGL error code, or the hex representation
 if the error is unknown.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return a string for the EGL error code, or the hex representation
 if the error is unknown.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/opengl/GLUtils.html#getEGLErrorString(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="GetInternalFormat">
      <MemberSignature Language="C#" Value="public static int GetInternalFormat (Android.Graphics.Bitmap bitmap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetInternalFormat(class Android.Graphics.Bitmap bitmap) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInternalFormat", "(Landroid/graphics/Bitmap;)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmap" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="bitmap">To be added.</param>
        <summary>return the internal format as defined by OpenGL ES of the supplied bitmap.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">return the internal format as defined by OpenGL ES of the supplied bitmap.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/opengl/GLUtils.html#getInternalFormat(android.graphics.Bitmap)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public static int GetType (Android.Graphics.Bitmap bitmap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetType(class Android.Graphics.Bitmap bitmap) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getType", "(Landroid/graphics/Bitmap;)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmap" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="bitmap">To be added.</param>
        <summary>Return the type as defined by OpenGL ES of the supplied bitmap, if there
 is one.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the type as defined by OpenGL ES of the supplied bitmap, if there
 is one. If the bitmap is stored in a compressed format, it may not have
 a valid OpenGL ES type.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/opengl/GLUtils.html#getType(android.graphics.Bitmap)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the bitmap does not have a type.</exception>
      </Docs>
    </Member>
    <Member MemberName="TexImage2D">
      <MemberSignature Language="C#" Value="public static void TexImage2D (int target, int level, Android.Graphics.Bitmap bitmap, int border);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexImage2D(int32 target, int32 level, class Android.Graphics.Bitmap bitmap, int32 border) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("texImage2D", "(IILandroid/graphics/Bitmap;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Int32" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="bitmap" Type="Android.Graphics.Bitmap" />
        <Parameter Name="border" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="level">To be added.</param>
        <param name="bitmap">To be added.</param>
        <param name="border">To be added.</param>
        <summary tool="true">A version of texImage2D() that takes an explicit type parameter
 as defined by the OpenGL ES specification.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">A version of texImage2D that determines the internalFormat and type
 automatically.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/opengl/GLUtils.html#texImage2D(int, int, android.graphics.Bitmap, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TexImage2D">
      <MemberSignature Language="C#" Value="public static void TexImage2D (int target, int level, int internalformat, Android.Graphics.Bitmap bitmap, int border);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexImage2D(int32 target, int32 level, int32 internalformat, class Android.Graphics.Bitmap bitmap, int32 border) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("texImage2D", "(IIILandroid/graphics/Bitmap;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Int32" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="internalformat" Type="System.Int32" />
        <Parameter Name="bitmap" Type="Android.Graphics.Bitmap" />
        <Parameter Name="border" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="level">To be added.</param>
        <param name="internalformat">To be added.</param>
        <param name="bitmap">To be added.</param>
        <param name="border">To be added.</param>
        <summary>Calls glTexImage2D() on the current OpenGL context.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Calls glTexImage2D() on the current OpenGL context. If no context is
 current the behavior is the same as calling glTexImage2D() with  no
 current context, that is, eglGetError() will return the appropriate
 error.
 Unlike glTexImage2D() bitmap cannot be null and will raise an exception
 in that case.
 All other parameters are identical to those used for glTexImage2D().

 NOTE: this method doesn't change GL_UNPACK_ALIGNMENT, you must make
 sure to set it properly according to the supplied bitmap.

 Whether or not bitmap can have non power of two dimensions depends on
 the current OpenGL context. Always check glGetError() some time
 after calling this method, just like when using OpenGL directly.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/opengl/GLUtils.html#texImage2D(int, int, int, android.graphics.Bitmap, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TexImage2D">
      <MemberSignature Language="C#" Value="public static void TexImage2D (int target, int level, int internalformat, Android.Graphics.Bitmap bitmap, int type, int border);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexImage2D(int32 target, int32 level, int32 internalformat, class Android.Graphics.Bitmap bitmap, int32 type, int32 border) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("texImage2D", "(IIILandroid/graphics/Bitmap;II)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Int32" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="internalformat" Type="System.Int32" />
        <Parameter Name="bitmap" Type="Android.Graphics.Bitmap" />
        <Parameter Name="type" Type="System.Int32" />
        <Parameter Name="border" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="level">To be added.</param>
        <param name="internalformat">To be added.</param>
        <param name="bitmap">To be added.</param>
        <param name="type">To be added.</param>
        <param name="border">To be added.</param>
        <summary>A version of texImage2D() that takes an explicit type parameter
 as defined by the OpenGL ES specification.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">A version of texImage2D() that takes an explicit type parameter
 as defined by the OpenGL ES specification. The actual type and
 internalformat of the bitmap must be compatible with the specified
 type and internalformat parameters.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/opengl/GLUtils.html#texImage2D(int, int, int, android.graphics.Bitmap, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TexSubImage2D">
      <MemberSignature Language="C#" Value="public static void TexSubImage2D (int target, int level, int xoffset, int yoffset, Android.Graphics.Bitmap bitmap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexSubImage2D(int32 target, int32 level, int32 xoffset, int32 yoffset, class Android.Graphics.Bitmap bitmap) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("texSubImage2D", "(IIIILandroid/graphics/Bitmap;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Int32" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="xoffset" Type="System.Int32" />
        <Parameter Name="yoffset" Type="System.Int32" />
        <Parameter Name="bitmap" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="level">To be added.</param>
        <param name="xoffset">To be added.</param>
        <param name="yoffset">To be added.</param>
        <param name="bitmap">To be added.</param>
        <summary tool="true">A version of texSubImage2D() that takes an explicit type parameter
 as defined by the OpenGL ES specification.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Calls glTexSubImage2D() on the current OpenGL context. If no context is
 current the behavior is the same as calling glTexSubImage2D() with  no
 current context, that is, eglGetError() will return the appropriate
 error.
 Unlike glTexSubImage2D() bitmap cannot be null and will raise an exception
 in that case.
 All other parameters are identical to those used for glTexSubImage2D().

 NOTE: this method doesn't change GL_UNPACK_ALIGNMENT, you must make
 sure to set it properly according to the supplied bitmap.

 Whether or not bitmap can have non power of two dimensions depends on
 the current OpenGL context. Always check glGetError() some time
 after calling this method, just like when using OpenGL directly.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/opengl/GLUtils.html#texSubImage2D(int, int, int, int, android.graphics.Bitmap)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TexSubImage2D">
      <MemberSignature Language="C#" Value="public static void TexSubImage2D (int target, int level, int xoffset, int yoffset, Android.Graphics.Bitmap bitmap, int format, int type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TexSubImage2D(int32 target, int32 level, int32 xoffset, int32 yoffset, class Android.Graphics.Bitmap bitmap, int32 format, int32 type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("texSubImage2D", "(IIIILandroid/graphics/Bitmap;II)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Int32" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="xoffset" Type="System.Int32" />
        <Parameter Name="yoffset" Type="System.Int32" />
        <Parameter Name="bitmap" Type="Android.Graphics.Bitmap" />
        <Parameter Name="format" Type="System.Int32" />
        <Parameter Name="type" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="level">To be added.</param>
        <param name="xoffset">To be added.</param>
        <param name="yoffset">To be added.</param>
        <param name="bitmap">To be added.</param>
        <param name="format">To be added.</param>
        <param name="type">To be added.</param>
        <summary>A version of texSubImage2D() that takes an explicit type parameter
 as defined by the OpenGL ES specification.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">A version of texSubImage2D() that takes an explicit type parameter
 as defined by the OpenGL ES specification.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/opengl/GLUtils.html#texSubImage2D(int, int, int, int, android.graphics.Bitmap, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>