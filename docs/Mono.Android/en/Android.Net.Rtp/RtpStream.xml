<Type Name="RtpStream" FullName="Android.Net.Rtp.RtpStream">
  <TypeSignature Language="C#" Value="public class RtpStream : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RtpStream extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/net/rtp/RtpStream", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>RtpStream represents the base class of streams which send and receive network
 packets with media payloads over Real-time Transport Protocol (RTP).</summary>
    <remarks><para tool="javadoc-to-mdoc">RtpStream represents the base class of streams which send and receive network
 packets with media payloads over Real-time Transport Protocol (RTP).

 </para><para tool="javadoc-to-mdoc">Using this class requires
 <c><see cref="!:NoType:android/Manifest$permission;Href=../../../../reference/android/Manifest.permission.html#INTERNET" /></c> permission.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/rtp/RtpStream.html" target="_blank">[Android Documentation]</a></format></para></remarks>
    <since version="Added in API level 12" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RtpStream (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Associate">
      <MemberSignature Language="C#" Value="public virtual void Associate (Java.Net.InetAddress address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Associate(class Java.Net.InetAddress address, int32 port) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("associate", "(Ljava/net/InetAddress;I)V", "GetAssociate_Ljava_net_InetAddress_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="Java.Net.InetAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">The network address of the remote host.</param>
        <param name="port">The network port of the remote host.</param>
        <summary>Associates with a remote host.</summary>
        <remarks><para tool="javadoc-to-mdoc">Associates with a remote host. This defines the destination of the
 outgoing packets.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/rtp/RtpStream.html#associate(java.net.InetAddress, int)" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 12" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the address is not supported or the
     port is invalid.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if the stream is busy.</exception>
        <altmember cref="P:Android.Net.Rtp.RtpStream.IsBusy" />
      </Docs>
    </Member>
    <Member MemberName="IsBusy">
      <MemberSignature Language="C#" Value="public virtual bool IsBusy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBusy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isBusy", "()Z", "GetIsBusyHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if the stream is busy.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns <c>true</c> if the stream is busy. In this case most of the
 setter methods are disabled. This method is intended to be overridden
 by subclasses.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/rtp/RtpStream.html#isBusy()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="LocalAddress">
      <MemberSignature Language="C#" Value="public virtual Java.Net.InetAddress LocalAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Net.InetAddress LocalAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLocalAddress", "()Ljava/net/InetAddress;", "GetGetLocalAddressHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.InetAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the network address of the local host.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns the network address of the local host.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/rtp/RtpStream.html#getLocalAddress()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="LocalPort">
      <MemberSignature Language="C#" Value="public virtual int LocalPort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LocalPort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLocalPort", "()I", "GetGetLocalPortHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the network port of the local host.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns the network port of the local host.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/rtp/RtpStream.html#getLocalPort()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public virtual Android.Net.Rtp.RtpStreamMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Net.Rtp.RtpStreamMode Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMode", "()I", "GetGetModeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setMode", "(I)V", "GetSetMode_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Rtp.RtpStreamMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current mode.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc: Get method documentation"><format type="text/html"><b>Get method documentation</b> <a href="http://developer.android.com/reference/android/net/rtp/RtpStream.html#getMode()" target="_blank">[Android Documentation]</a><br /></format>Returns the current mode.
</para><para tool="javadoc-to-mdoc: Set method documentation"><format type="text/html"><b>Set method documentation</b> <a href="http://developer.android.com/reference/android/net/rtp/RtpStream.html#setMode(int)" target="_blank">[Android Documentation]</a><br /></format>Changes the current mode. It must be one of <c><see cref="!:Android.Net.Rtp.RtpStream.MODE_NORMAL" /></c>,
 <c><see cref="!:Android.Net.Rtp.RtpStream.MODE_SEND_ONLY" /></c>, and <c><see cref="!:Android.Net.Rtp.RtpStream.MODE_RECEIVE_ONLY" /></c>.</para></remarks>
        <since version="Added in API level 12" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the mode is invalid.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if the stream is busy.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the mode is invalid.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if the stream is busy.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the mode is invalid.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if the stream is busy.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the mode is invalid.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if the stream is busy.</exception>
        <altmember cref="P:Android.Net.Rtp.RtpStream.IsBusy" />
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public virtual void Release ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Release() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("release", "()V", "GetReleaseHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases allocated resources.</summary>
        <remarks><para tool="javadoc-to-mdoc">Releases allocated resources. The stream becomes inoperable after calling
 this method.</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/rtp/RtpStream.html#release()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 12" />
        <exception cref="T:Java.Lang.IllegalStateException">if the stream is busy.</exception>
        <altmember cref="P:Android.Net.Rtp.RtpStream.IsBusy" />
      </Docs>
    </Member>
    <Member MemberName="RemoteAddress">
      <MemberSignature Language="C#" Value="public virtual Java.Net.InetAddress RemoteAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Net.InetAddress RemoteAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getRemoteAddress", "()Ljava/net/InetAddress;", "GetGetRemoteAddressHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.InetAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the network address of the remote host or <c>null</c> if the
 stream is not associated.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns the network address of the remote host or <c>null</c> if the
 stream is not associated.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/rtp/RtpStream.html#getRemoteAddress()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="RemotePort">
      <MemberSignature Language="C#" Value="public virtual int RemotePort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RemotePort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getRemotePort", "()I", "GetGetRemotePortHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the network port of the remote host or <c>-1</c> if the stream
 is not associated.</summary>
        <value>To be added.</value>
        <remarks><para tool="javadoc-to-mdoc">Returns the network port of the remote host or <c>-1</c> if the stream
 is not associated.
</para><para tool="javadoc-to-mdoc"><format type="text/html"><a href="http://developer.android.com/reference/android/net/rtp/RtpStream.html#getRemotePort()" target="_blank">[Android Documentation]</a></format></para></remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
