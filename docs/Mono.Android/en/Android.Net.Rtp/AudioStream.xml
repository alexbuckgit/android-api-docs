<Type Name="AudioStream" FullName="Android.Net.Rtp.AudioStream">
  <TypeSignature Language="C#" Value="public class AudioStream : Android.Net.Rtp.RtpStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AudioStream extends Android.Net.Rtp.RtpStream" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Net.Rtp.RtpStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/net/rtp/AudioStream", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="12">
    <summary>An AudioStream is a <c><see cref="T:Android.Net.Rtp.RtpStream" /></c> which carrys audio payloads over
 Real-time Transport Protocol (RTP).</summary>
    <remarks />
    <since version="Added in API level 12" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AudioStream (Java.Net.InetAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Net.InetAddress address) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/net/InetAddress;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="address" Type="Java.Net.InetAddress" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <summary>Creates an AudioStream on the given local address.</summary>
        <remarks />
        <since version="Added in API level 12" />
        <exception cref="T:Java.Net.SocketException">if the address cannot be bound or a problem
     occurs during binding.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AudioStream (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Codec">
      <MemberSignature Language="C#" Value="public virtual Android.Net.Rtp.AudioCodec Codec { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Net.Rtp.AudioCodec Codec" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCodec", "()Landroid/net/rtp/AudioCodec;", "GetGetCodecHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setCodec", "(Landroid/net/rtp/AudioCodec;)V", "GetSetCodec_Landroid_net_rtp_AudioCodec_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Rtp.AudioCodec</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the <c><see cref="T:Android.Net.Rtp.AudioCodec" /></c>, or <c>null</c> if it is not set.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 12" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if its type is used by DTMF.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if the stream is busy.
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if its type is used by DTMF.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if the stream is busy.
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if its type is used by DTMF.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if the stream is busy.
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if its type is used by DTMF.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if the stream is busy.
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if its type is used by DTMF.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if the stream is busy.
</exception>
        <altmember cref="P:Android.Net.Rtp.AudioStream.Codec" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if its type is used by DTMF.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if the stream is busy.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DtmfType">
      <MemberSignature Language="C#" Value="public virtual int DtmfType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DtmfType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDtmfType", "()I", "GetGetDtmfTypeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setDtmfType", "(I)V", "GetSetDtmfType_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the RTP payload type for dual-tone multi-frequency (DTMF) digits,
 or <c>-1</c> if it is not enabled.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 12" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the type is invalid or used by codec.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if the stream is busy.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the type is invalid or used by codec.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if the stream is busy.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the type is invalid or used by codec.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if the stream is busy.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the type is invalid or used by codec.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if the stream is busy.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the type is invalid or used by codec.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if the stream is busy.</exception>
        <altmember cref="P:Android.Net.Rtp.AudioStream.DtmfType" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the type is invalid or used by codec.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if the stream is busy.</exception>
        <altmember cref="M:Android.Net.Rtp.AudioGroup.SendDtmf(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public virtual Android.Net.Rtp.AudioGroup Group { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Net.Rtp.AudioGroup Group" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getGroup", "()Landroid/net/rtp/AudioGroup;", "GetGetGroupHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Rtp.AudioGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the joined <c><see cref="T:Android.Net.Rtp.AudioGroup" /></c>.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="IsBusy">
      <MemberSignature Language="C#" Value="public override bool IsBusy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBusy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isBusy", "()Z", "GetIsBusyHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if the stream has already joined an
 <c><see cref="T:Android.Net.Rtp.AudioGroup" /></c>.</summary>
        <value>To be added.</value>
        <remarks />
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public virtual void Join (Android.Net.Rtp.AudioGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Join(class Android.Net.Rtp.AudioGroup group) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("join", "(Landroid/net/rtp/AudioGroup;)V", "GetJoin_Landroid_net_rtp_AudioGroup_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="Android.Net.Rtp.AudioGroup" />
      </Parameters>
      <Docs>
        <param name="group">The AudioGroup to join or <c>null</c> to leave.</param>
        <summary>Joins an <c><see cref="T:Android.Net.Rtp.AudioGroup" /></c>.</summary>
        <remarks />
        <since version="Added in API level 12" />
        <exception cref="T:Java.Lang.IllegalStateException">if the stream is not properly configured.</exception>
        <altmember cref="T:Android.Net.Rtp.AudioGroup" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
