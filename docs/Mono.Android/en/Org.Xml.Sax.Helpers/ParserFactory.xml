<Type Name="ParserFactory" FullName="Org.Xml.Sax.Helpers.ParserFactory">
  <TypeSignature Language="C#" Value="public class ParserFactory : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ParserFactory extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("org/xml/sax/helpers/ParserFactory", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Java-specific class for dynamically loading SAX parsers.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Java-specific class for dynamically loading SAX parsers.

 <format type="text/html"><blockquote><i>This module, both source code and documentation, is in the
 Public Domain, and comes with <i>NO WARRANTY</i>.</i>
 See 
 for further information.
 </blockquote></format></para>
      <para tool="javadoc-to-mdoc">
        <i>Note:</i> This class is designed to work with the now-deprecated
 SAX1 <c><see cref="T:Org.Xml.Sax.IParser" /></c> class.  SAX2 applications should use
 <c><see cref="T:Org.Xml.Sax.Helpers.XMLReaderFactory" /></c> instead.</para>
      <para tool="javadoc-to-mdoc">ParserFactory is not part of the platform-independent definition
 of SAX; it is an additional convenience class designed
 specifically for Java XML application writers.  SAX applications
 can use the static methods in this class to allocate a SAX parser
 dynamically at run-time based either on the value of the
 `org.xml.sax.parser' system property or on a string containing the class
 name.</para>
      <para tool="javadoc-to-mdoc">Note that the application still requires an XML parser that
 implements SAX1.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/org/xml/sax/helpers/ParserFactory.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1Deprecated since API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ParserFactory (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeParser">
      <MemberSignature Language="C#" Value="public static Org.Xml.Sax.IParser MakeParser ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Org.Xml.Sax.IParser MakeParser() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("makeParser", "()Lorg/xml/sax/Parser;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Xml.Sax.IParser</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">Create a new SAX parser object using the class name provided.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new SAX parser using the `org.xml.sax.parser' system property.

 </para>
          <para tool="javadoc-to-mdoc">The named class must exist and must implement the
 <c><see cref="T:Org.Xml.Sax.IParser" /></c> interface.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/helpers/ParserFactory.html#makeParser()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">There is no value
            for the `org.xml.sax.parser' system property.</exception>
        <exception cref="T:Java.Lang.ClassNotFoundException">The SAX parser
            class was not found (check your CLASSPATH).</exception>
        <exception cref="T:Java.Lang.IllegalAccessException">The SAX parser class was
            found, but you do not have permission to load
            it.</exception>
        <exception cref="T:Java.Lang.InstantiationException">The SAX parser class was
            found but could not be instantiated.</exception>
        <exception cref="T:Java.Lang.ClassCastException">The SAX parser class
            was found and instantiated, but does not implement
            org.xml.sax.Parser.</exception>
        <altmember cref="M:Org.Xml.Sax.Helpers.ParserFactory.MakeParser(System.String)" />
        <altmember cref="T:Org.Xml.Sax.IParser" />
      </Docs>
    </Member>
    <Member MemberName="MakeParser">
      <MemberSignature Language="C#" Value="public static Org.Xml.Sax.IParser MakeParser (string className);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Org.Xml.Sax.IParser MakeParser(string className) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("makeParser", "(Ljava/lang/String;)Lorg/xml/sax/Parser;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Xml.Sax.IParser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="className">A string containing the name of the
                  SAX parser class.</param>
        <summary>Create a new SAX parser object using the class name provided.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new SAX parser object using the class name provided.

 </para>
          <para tool="javadoc-to-mdoc">The named class must exist and must implement the
 <c><see cref="T:Org.Xml.Sax.IParser" /></c> interface.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/helpers/ParserFactory.html#makeParser(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassNotFoundException">The SAX parser
            class was not found (check your CLASSPATH).</exception>
        <exception cref="T:Java.Lang.IllegalAccessException">The SAX parser class was
            found, but you do not have permission to load
            it.</exception>
        <exception cref="T:Java.Lang.InstantiationException">The SAX parser class was
            found but could not be instantiated.</exception>
        <exception cref="T:Java.Lang.ClassCastException">The SAX parser class
            was found and instantiated, but does not implement
            org.xml.sax.Parser.</exception>
        <altmember cref="M:Org.Xml.Sax.Helpers.ParserFactory.MakeParser" />
        <altmember cref="T:Org.Xml.Sax.IParser" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>