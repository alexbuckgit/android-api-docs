<Type Name="BluetoothHealthCallback" FullName="Android.Bluetooth.BluetoothHealthCallback">
  <TypeSignature Language="C#" Value="public abstract class BluetoothHealthCallback : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BluetoothHealthCallback extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/bluetooth/BluetoothHealthCallback", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="14">
    <summary>This abstract class is used to implement <c><see cref="T:Android.Bluetooth.BluetoothHealth" /></c> callbacks.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">This abstract class is used to implement <c><see cref="T:Android.Bluetooth.BluetoothHealth" /></c> callbacks.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/bluetooth/BluetoothHealthCallback.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 14" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BluetoothHealthCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary></summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/bluetooth/BluetoothHealthCallback.html#BluetoothHealthCallback()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BluetoothHealthCallback (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHealthAppConfigurationStatusChange">
      <MemberSignature Language="C#" Value="public virtual void OnHealthAppConfigurationStatusChange (Android.Bluetooth.BluetoothHealthAppConfiguration config, Android.Bluetooth.HealthApplicationConfig status);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnHealthAppConfigurationStatusChange(class Android.Bluetooth.BluetoothHealthAppConfiguration config, valuetype Android.Bluetooth.HealthApplicationConfig status) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onHealthAppConfigurationStatusChange", "(Landroid/bluetooth/BluetoothHealthAppConfiguration;I)V", "GetOnHealthAppConfigurationStatusChange_Landroid_bluetooth_BluetoothHealthAppConfiguration_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="config" Type="Android.Bluetooth.BluetoothHealthAppConfiguration" />
        <Parameter Name="status" Type="Android.Bluetooth.HealthApplicationConfig">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="config">Bluetooth Health app configuration</param>
        <param name="status">Success or failure of the registration or unregistration
            calls. Can be one of
            <c><see cref="F:Android.Bluetooth.BluetoothHealth.AppConfigRegistrationSuccess" /></c> or
            <c><see cref="F:Android.Bluetooth.BluetoothHealth.AppConfigRegistrationFailure" /></c> or
            <c><see cref="F:Android.Bluetooth.BluetoothHealth.AppConfigUnregistrationSuccess" /></c> or
            <c><see cref="F:Android.Bluetooth.BluetoothHealth.AppConfigUnregistrationFailure" /></c></param>
        <summary>Callback to inform change in registration state of the health
 application.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Callback to inform change in registration state of the health
 application.
 </para>
          <para tool="javadoc-to-mdoc"> This callback is called on the binder thread (not on the UI thread)</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/bluetooth/BluetoothHealthCallback.html#onHealthAppConfigurationStatusChange(android.bluetooth.BluetoothHealthAppConfiguration, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="OnHealthChannelStateChange">
      <MemberSignature Language="C#" Value="public virtual void OnHealthChannelStateChange (Android.Bluetooth.BluetoothHealthAppConfiguration config, Android.Bluetooth.BluetoothDevice device, Android.Bluetooth.HealthState prevState, Android.Bluetooth.HealthState newState, Android.OS.ParcelFileDescriptor fd, int channelId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnHealthChannelStateChange(class Android.Bluetooth.BluetoothHealthAppConfiguration config, class Android.Bluetooth.BluetoothDevice device, valuetype Android.Bluetooth.HealthState prevState, valuetype Android.Bluetooth.HealthState newState, class Android.OS.ParcelFileDescriptor fd, int32 channelId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onHealthChannelStateChange", "(Landroid/bluetooth/BluetoothHealthAppConfiguration;Landroid/bluetooth/BluetoothDevice;IILandroid/os/ParcelFileDescriptor;I)V", "GetOnHealthChannelStateChange_Landroid_bluetooth_BluetoothHealthAppConfiguration_Landroid_bluetooth_BluetoothDevice_IILandroid_os_ParcelFileDescriptor_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="config" Type="Android.Bluetooth.BluetoothHealthAppConfiguration" />
        <Parameter Name="device" Type="Android.Bluetooth.BluetoothDevice" />
        <Parameter Name="prevState" Type="Android.Bluetooth.HealthState">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="newState" Type="Android.Bluetooth.HealthState">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="fd" Type="Android.OS.ParcelFileDescriptor" />
        <Parameter Name="channelId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="config">The Health app configutation</param>
        <param name="device">The Bluetooth Device</param>
        <param name="prevState">The previous state of the channel</param>
        <param name="newState">The new state of the channel.</param>
        <param name="fd">The Parcel File Descriptor when the channel state is connected.</param>
        <param name="channelId">The id associated with the channel. This id will be used
            in future calls like when disconnecting the channel.
</param>
        <summary>Callback to inform change in channel state.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Callback to inform change in channel state.
 </para>
          <para tool="javadoc-to-mdoc"> Its the responsibility of the implementor of this callback to close the
 parcel file descriptor when done. This callback is called on the Binder
 thread (not the UI thread)</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/bluetooth/BluetoothHealthCallback.html#onHealthChannelStateChange(android.bluetooth.BluetoothHealthAppConfiguration, android.bluetooth.BluetoothDevice, int, int, android.os.ParcelFileDescriptor, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>