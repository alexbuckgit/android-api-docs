<Type Name="ICallbackHandler" FullName="Javax.Security.Auth.Callback.ICallbackHandler">
  <TypeSignature Language="C#" Value="public interface ICallbackHandler : Android.Runtime.IJavaObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICallbackHandler implements class Android.Runtime.IJavaObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("javax/security/auth/callback/CallbackHandler", "", "Javax.Security.Auth.Callback.ICallbackHandlerInvoker")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Needs to be implemented by classes that want to handle authentication
 <c><see cref="T:Javax.Security.Auth.Callback.ICallback" /></c>s.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Needs to be implemented by classes that want to handle authentication
 <c><see cref="T:Javax.Security.Auth.Callback.ICallback" /></c>s. A single method <c><see cref="M:Javax.Security.Auth.Callback.ICallbackHandler.HandleCallbacks(Javax.Security.Auth.Callback.ICallback[])" /></c> must be
 provided that checks the type of the incoming <c>Callback</c>s and reacts
 accordingly. <c>CallbackHandler</c>s can be installed per application. It is
 also possible to configure a system-default <c>CallbackHandler</c> by
 setting the <c>auth.login.defaultCallbackHandler</c> property in the
 standard <c>security.properties</c> file.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/javax/security/auth/callback/CallbackHandler.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="HandleCallbacks">
      <MemberSignature Language="C#" Value="public void HandleCallbacks (Javax.Security.Auth.Callback.ICallback[] callbacks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HandleCallbacks(class Javax.Security.Auth.Callback.ICallback[] callbacks) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("handle", "([Ljavax/security/auth/callback/Callback;)V", "GetHandleCallbacks_arrayLjavax_security_auth_callback_Callback_Handler:Javax.Security.Auth.Callback.ICallbackHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callbacks" Type="Javax.Security.Auth.Callback.ICallback[]" />
      </Parameters>
      <Docs>
        <param name="callbacks">the array of <c>Callback</c>s that need handling</param>
        <summary>Handles the actual <c><see cref="T:Javax.Security.Auth.Callback.ICallback" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Handles the actual <c><see cref="T:Javax.Security.Auth.Callback.ICallback" /></c>. A <c>CallbackHandler</c> needs to
 implement this method. In the method, it is free to select which <c>Callback</c>s it actually wants to handle and in which way. For example, a
 console-based <c>CallbackHandler</c> might choose to sequentially ask
 the user for login and password, if it implements these <c>Callback</c>
 s, whereas a GUI-based one might open a single dialog window for both
 values. If a <c>CallbackHandler</c> is not able to handle a specific
 <c>Callback</c>, it needs to throw an
 <c><see cref="T:Javax.Security.Auth.Callback.UnsupportedCallbackException" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/security/auth/callback/CallbackHandler.html#handle(javax.security.auth.callback.Callback[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O related error occurs</exception>
        <exception cref="T:Javax.Security.Auth.Callback.UnsupportedCallbackException">if the <c>CallbackHandler</c> is not able to handle a
             specific <c>Callback</c></exception>
      </Docs>
    </Member>
  </Members>
</Type>
