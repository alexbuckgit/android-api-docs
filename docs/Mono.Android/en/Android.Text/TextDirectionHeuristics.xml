<Type Name="TextDirectionHeuristics" FullName="Android.Text.TextDirectionHeuristics">
  <TypeSignature Language="C#" Value="public class TextDirectionHeuristics : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextDirectionHeuristics extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/text/TextDirectionHeuristics", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Some objects that implement TextDirectionHeuristic.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Some objects that implement TextDirectionHeuristic.

</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/text/TextDirectionHeuristics.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 18" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextDirectionHeuristics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/TextDirectionHeuristics.html#TextDirectionHeuristics()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextDirectionHeuristics (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnyrtlLtr">
      <MemberSignature Language="C#" Value="public static Android.Text.ITextDirectionHeuristic AnyrtlLtr { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Text.ITextDirectionHeuristic AnyrtlLtr" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ANYRTL_LTR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.ITextDirectionHeuristic</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If the text contains any strong right to left non-format character, determines that the
 direction is right to left, falling back to left to right if it finds none.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">If the text contains any strong right to left non-format character, determines that the
 direction is right to left, falling back to left to right if it finds none.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/TextDirectionHeuristics.html#ANYRTL_LTR" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="FirststrongLtr">
      <MemberSignature Language="C#" Value="public static Android.Text.ITextDirectionHeuristic FirststrongLtr { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Text.ITextDirectionHeuristic FirststrongLtr" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FIRSTSTRONG_LTR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.ITextDirectionHeuristic</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Determines the direction based on the first strong directional character, including bidi
 format chars, falling back to left to right if it finds none.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Determines the direction based on the first strong directional character, including bidi
 format chars, falling back to left to right if it finds none. This is the default behavior
 of the Unicode Bidirectional Algorithm.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/TextDirectionHeuristics.html#FIRSTSTRONG_LTR" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="FirststrongRtl">
      <MemberSignature Language="C#" Value="public static Android.Text.ITextDirectionHeuristic FirststrongRtl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Text.ITextDirectionHeuristic FirststrongRtl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FIRSTSTRONG_RTL")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.ITextDirectionHeuristic</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Determines the direction based on the first strong directional character, including bidi
 format chars, falling back to right to left if it finds none.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Determines the direction based on the first strong directional character, including bidi
 format chars, falling back to right to left if it finds none. This is similar to the default
 behavior of the Unicode Bidirectional Algorithm, just with different fallback behavior.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/TextDirectionHeuristics.html#FIRSTSTRONG_RTL" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="Locale">
      <MemberSignature Language="C#" Value="public static Android.Text.ITextDirectionHeuristic Locale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Text.ITextDirectionHeuristic Locale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LOCALE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.ITextDirectionHeuristic</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Force the paragraph direction to the Locale direction.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Force the paragraph direction to the Locale direction. Falls back to left to right.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/TextDirectionHeuristics.html#LOCALE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="Ltr">
      <MemberSignature Language="C#" Value="public static Android.Text.ITextDirectionHeuristic Ltr { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Text.ITextDirectionHeuristic Ltr" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LTR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.ITextDirectionHeuristic</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Always decides that the direction is left to right.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Always decides that the direction is left to right.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/TextDirectionHeuristics.html#LTR" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="Rtl">
      <MemberSignature Language="C#" Value="public static Android.Text.ITextDirectionHeuristic Rtl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Text.ITextDirectionHeuristic Rtl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("RTL")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.ITextDirectionHeuristic</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Always decides that the direction is right to left.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Always decides that the direction is right to left.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/TextDirectionHeuristics.html#RTL" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
