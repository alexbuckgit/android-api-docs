<Type Name="GraphicsContext" FullName="OpenTK.Graphics.GraphicsContext">
  <TypeSignature Language="C#" Value="public sealed class GraphicsContext : IDisposable, OpenTK.Graphics.IGraphicsContext, OpenTK.Graphics.IGraphicsContextInternal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed GraphicsContext extends System.Object implements class OpenTK.Graphics.IGraphicsContext, class OpenTK.Graphics.IGraphicsContextInternal, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>OpenTK</AssemblyName>
    <AssemblyVersion>0.9.9.3</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>OpenTK.Graphics.IGraphicsContext</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>OpenTK.Graphics.IGraphicsContextInternal</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Represents and provides methods to manipulate an OpenGL render context.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsContext (OpenTK.Graphics.GraphicsMode mode, OpenTK.Platform.IWindowInfo window);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class OpenTK.Graphics.GraphicsMode mode, class OpenTK.Platform.IWindowInfo window) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.9.3</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mode" Type="OpenTK.Graphics.GraphicsMode" />
        <Parameter Name="window" Type="OpenTK.Platform.IWindowInfo" />
      </Parameters>
      <Docs>
        <param name="mode">To be added.</param>
        <param name="window">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsContext (OpenTK.Graphics.GraphicsMode mode, OpenTK.Platform.IWindowInfo window, int major, int minor, OpenTK.Graphics.GraphicsContextFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class OpenTK.Graphics.GraphicsMode mode, class OpenTK.Platform.IWindowInfo window, int32 major, int32 minor, valuetype OpenTK.Graphics.GraphicsContextFlags flags) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.9.3</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mode" Type="OpenTK.Graphics.GraphicsMode" />
        <Parameter Name="window" Type="OpenTK.Platform.IWindowInfo" />
        <Parameter Name="major" Type="System.Int32" />
        <Parameter Name="minor" Type="System.Int32" />
        <Parameter Name="flags" Type="OpenTK.Graphics.GraphicsContextFlags" />
      </Parameters>
      <Docs>
        <param name="mode">To be added.</param>
        <param name="window">To be added.</param>
        <param name="major">To be added.</param>
        <param name="minor">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.9.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Checks if a GraphicsContext exists in the calling thread and throws a GraphicsContextMissingException if it doesn't.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:OpenTK.Graphics.GraphicsContextMissingException">Generated when no GraphicsContext is current in the calling thread.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDummyContext">
      <MemberSignature Language="C#" Value="public static OpenTK.Graphics.GraphicsContext CreateDummyContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class OpenTK.Graphics.GraphicsContext CreateDummyContext() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.9.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>OpenTK.Graphics.GraphicsContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates a dummy GraphicsContext to allow OpenTK to work with contexts created by external libraries.
            </summary>
        <returns>A new, dummy GraphicsContext instance.</returns>
        <remarks>
          <para>Instances created by this method will not be functional. Instance methods will have no effect.</para>
          <para>This method requires that a context is current on the calling thread.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDummyContext">
      <MemberSignature Language="C#" Value="public static OpenTK.Graphics.GraphicsContext CreateDummyContext (OpenTK.ContextHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class OpenTK.Graphics.GraphicsContext CreateDummyContext(valuetype OpenTK.ContextHandle handle) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.9.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>OpenTK.Graphics.GraphicsContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="OpenTK.ContextHandle" />
      </Parameters>
      <Docs>
        <param name="handle">The handle of a context.</param>
        <summary>
            Creates a dummy GraphicsContext to allow OpenTK to work with contexts created by external libraries.
            </summary>
        <returns>A new, dummy GraphicsContext instance.</returns>
        <remarks>
          <para>Instances created by this method will not be functional. Instance methods will have no effect.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentContext">
      <MemberSignature Language="C#" Value="public static OpenTK.Graphics.IGraphicsContext CurrentContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class OpenTK.Graphics.IGraphicsContext CurrentContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.9.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>OpenTK.Graphics.IGraphicsContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the GraphicsContext that is current in the calling thread.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectRendering">
      <MemberSignature Language="C#" Value="public static bool DirectRendering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool DirectRendering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.9.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a System.Boolean, indicating whether GraphicsContexts will perform direct rendering.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            If DirectRendering is true, new contexts will be constructed with direct rendering capabilities, if possible.
            If DirectRendering is false, new contexts will be constructed with indirect rendering capabilities.
            </para>
          <para>This property does not affect existing GraphicsContexts, unless they are recreated.</para>
          <para>
            This property is ignored on Operating Systems without support for indirect rendering, like Windows and OS X.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.9.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Disposes of the GraphicsContext.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorChecking">
      <MemberSignature Language="C#" Value="public bool ErrorChecking { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ErrorChecking" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.9.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a System.Boolean, indicating whether automatic error checking should be performed.
            Influences the debug version of OpenTK.dll, only.
            </summary>
        <value>To be added.</value>
        <remarks>Automatic error checking will clear the OpenGL error state. Set CheckErrors to false if you use
            the OpenGL error state in your code flow (e.g. for checking supported texture formats).</remarks>
      </Docs>
    </Member>
    <Member MemberName="GraphicsMode">
      <MemberSignature Language="C#" Value="public OpenTK.Graphics.GraphicsMode GraphicsMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class OpenTK.Graphics.GraphicsMode GraphicsMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.9.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>OpenTK.Graphics.GraphicsMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the GraphicsMode of the context.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCurrent">
      <MemberSignature Language="C#" Value="public bool IsCurrent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCurrent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.9.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a <see cref="T:System.Boolean" /> indicating whether this instance is current in the calling thread.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="public bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.9.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a <see cref="T:System.Boolean" /> indicating whether this instance has been disposed.
            It is an error to access any instance methods if this property returns true.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeCurrent">
      <MemberSignature Language="C#" Value="public void MakeCurrent (OpenTK.Platform.IWindowInfo window);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MakeCurrent(class OpenTK.Platform.IWindowInfo window) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.9.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="window" Type="OpenTK.Platform.IWindowInfo" />
      </Parameters>
      <Docs>
        <param name="window">A valid <see cref="T:OpenTK.Platform.IWindowInfo" /> structure.</param>
        <summary>
            Makes the GraphicsContext the current rendering target.
            </summary>
        <remarks>
            You can use this method to bind the GraphicsContext to a different window than the one it was created from.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenTK.Graphics.IGraphicsContextInternal.Context">
      <MemberSignature Language="C#" Value="OpenTK.ContextHandle OpenTK.Graphics.IGraphicsContextInternal.Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype OpenTK.ContextHandle OpenTK.Graphics.IGraphicsContextInternal.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.9.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>OpenTK.ContextHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a handle to the OpenGL rendering context.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenTK.Graphics.IGraphicsContextInternal.GetAddress">
      <MemberSignature Language="C#" Value="IntPtr IGraphicsContextInternal.GetAddress (string function);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance native int OpenTK.Graphics.IGraphicsContextInternal.GetAddress(string function) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.9.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="function">The name of the OpenGL function (e.g. "glGetString")</param>
        <summary>
            Gets the address of an OpenGL extension function.
            </summary>
        <returns>
            A pointer to the specified function or IntPtr.Zero if the function isn't
            available in the current opengl context.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenTK.Graphics.IGraphicsContextInternal.Implementation">
      <MemberSignature Language="C#" Value="OpenTK.Graphics.IGraphicsContext OpenTK.Graphics.IGraphicsContextInternal.Implementation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class OpenTK.Graphics.IGraphicsContext OpenTK.Graphics.IGraphicsContextInternal.Implementation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.9.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>OpenTK.Graphics.IGraphicsContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the platform-specific implementation of this IGraphicsContext.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenTK.Graphics.IGraphicsContextInternal.LoadAll">
      <MemberSignature Language="C#" Value="void IGraphicsContextInternal.LoadAll ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void OpenTK.Graphics.IGraphicsContextInternal.LoadAll() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.9.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Loads all OpenGL extensions.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:OpenTK.Graphics.GraphicsContextException">
            Occurs when this instance is not the current GraphicsContext on the calling thread.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ShareContexts">
      <MemberSignature Language="C#" Value="public static bool ShareContexts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool ShareContexts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.9.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a System.Boolean, indicating whether GraphicsContext resources are shared</summary>
        <value>To be added.</value>
        <remarks>
          <para>If ShareContexts is true, new GLContexts will share resources. If this value is
            false, new GLContexts will not share resources.</para>
          <para>Changing this value will not affect already created GLContexts.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SwapBuffers">
      <MemberSignature Language="C#" Value="public void SwapBuffers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SwapBuffers() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.9.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Swaps buffers on a context. This presents the rendered scene to the user.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update (OpenTK.Platform.IWindowInfo window);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(class OpenTK.Platform.IWindowInfo window) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.9.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="window" Type="OpenTK.Platform.IWindowInfo" />
      </Parameters>
      <Docs>
        <param name="window" />
        <summary>
            Updates the graphics context.  This must be called when the render target
            is resized for proper behavior on Mac OS X.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VSync">
      <MemberSignature Language="C#" Value="public bool VSync { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VSync" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.9.9.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether VSync is enabled.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
