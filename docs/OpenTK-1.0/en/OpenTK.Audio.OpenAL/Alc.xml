<Type Name="Alc" FullName="OpenTK.Audio.OpenAL.Alc">
  <TypeSignature Language="C#" Value="public static class Alc" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Alc extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>OpenTK-1.0</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Alc = Audio Library Context</summary>
    <remarks>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CaptureCloseDevice">
      <MemberSignature Language="C#" Value="public static bool CaptureCloseDevice (IntPtr device);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig pinvokeimpl (&quot;openal32.dll&quot; as &quot;alcCaptureCloseDevice&quot; cdecl)bool CaptureCloseDevice(native int device) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="device" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="device">a pointer to a capture device.</param>
        <summary>This function closes the specified capture device.</summary>
        <returns>Returns True if the close operation was successful, False on failure.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureOpenDevice">
      <MemberSignature Language="C#" Value="public static IntPtr CaptureOpenDevice (string devicename, int frequency, OpenTK.Audio.OpenAL.ALFormat format, int buffersize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig pinvokeimpl (&quot;openal32.dll&quot; as &quot;alcCaptureOpenDevice&quot; ansi cdecl)native int CaptureOpenDevice(string devicename, int32 frequency, valuetype OpenTK.Audio.OpenAL.ALFormat format, int32 buffersize) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="devicename" Type="System.String" />
        <Parameter Name="frequency" Type="System.Int32" />
        <Parameter Name="format" Type="OpenTK.Audio.OpenAL.ALFormat" />
        <Parameter Name="buffersize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="devicename">a pointer to a device name string.</param>
        <param name="frequency">the frequency that the buffer should be captured at.</param>
        <param name="format">the requested capture buffer format.</param>
        <param name="buffersize">the size of the capture buffer in samples, not bytes.</param>
        <summary>This function opens a capture device by name. </summary>
        <returns>Returns the capture device pointer, or NULL on failure.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureOpenDevice">
      <MemberSignature Language="C#" Value="public static IntPtr CaptureOpenDevice (string devicename, uint frequency, OpenTK.Audio.OpenAL.ALFormat format, int buffersize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig pinvokeimpl (&quot;openal32.dll&quot; as &quot;alcCaptureOpenDevice&quot; ansi cdecl)native int CaptureOpenDevice(string devicename, unsigned int32 frequency, valuetype OpenTK.Audio.OpenAL.ALFormat format, int32 buffersize) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="devicename" Type="System.String" />
        <Parameter Name="frequency" Type="System.UInt32" />
        <Parameter Name="format" Type="OpenTK.Audio.OpenAL.ALFormat" />
        <Parameter Name="buffersize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="devicename">a pointer to a device name string.</param>
        <param name="frequency">the frequency that the buffer should be captured at.</param>
        <param name="format">the requested capture buffer format.</param>
        <param name="buffersize">the size of the capture buffer in samples, not bytes.</param>
        <summary>This function opens a capture device by name. </summary>
        <returns>Returns the capture device pointer, or NULL on failure.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureSamples">
      <MemberSignature Language="C#" Value="public static void CaptureSamples (IntPtr device, IntPtr buffer, int samples);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig pinvokeimpl (&quot;openal32.dll&quot; as &quot;alcCaptureSamples&quot; cdecl)void CaptureSamples(native int device, native int buffer, int32 samples) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="device" Type="System.IntPtr" />
        <Parameter Name="buffer" Type="System.IntPtr" />
        <Parameter Name="samples" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="device">a pointer to a capture device.</param>
        <param name="buffer">a pointer to a buffer, which must be large enough to accommodate the number of samples.</param>
        <param name="samples">the number of samples to be retrieved.</param>
        <summary>This function completes a capture operation, and does not block.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureSamples&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void CaptureSamples&lt;T&gt; (IntPtr device, ref T buffer, int samples) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CaptureSamples&lt;struct .ctor (class System.ValueType) T&gt;(native int device, !!T buffer, int32 samples) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="device" Type="System.IntPtr" />
        <Parameter Name="buffer" Type="T&amp;" RefType="ref" />
        <Parameter Name="samples" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="device">a pointer to a capture device.</param>
        <param name="buffer">a reference to a buffer, which must be large enough to accommodate the number of samples.</param>
        <param name="samples">the number of samples to be retrieved.</param>
        <summary>This function completes a capture operation, and does not block.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureSamples&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void CaptureSamples&lt;T&gt; (IntPtr device, T[,,] buffer, int samples) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CaptureSamples&lt;struct .ctor (class System.ValueType) T&gt;(native int device, !!T[,,] buffer, int32 samples) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="device" Type="System.IntPtr" />
        <Parameter Name="buffer" Type="T[,,]" />
        <Parameter Name="samples" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="device">To be added.</param>
        <param name="buffer">To be added.</param>
        <param name="samples">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureSamples&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void CaptureSamples&lt;T&gt; (IntPtr device, T[,] buffer, int samples) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CaptureSamples&lt;struct .ctor (class System.ValueType) T&gt;(native int device, !!T[,] buffer, int32 samples) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="device" Type="System.IntPtr" />
        <Parameter Name="buffer" Type="T[,]" />
        <Parameter Name="samples" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="device">To be added.</param>
        <param name="buffer">To be added.</param>
        <param name="samples">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureSamples&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void CaptureSamples&lt;T&gt; (IntPtr device, T[] buffer, int samples) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CaptureSamples&lt;struct .ctor (class System.ValueType) T&gt;(native int device, !!T[] buffer, int32 samples) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="device" Type="System.IntPtr" />
        <Parameter Name="buffer" Type="T[]" />
        <Parameter Name="samples" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="device">a pointer to a capture device.</param>
        <param name="buffer">a buffer, which must be large enough to accommodate the number of samples.</param>
        <param name="samples">the number of samples to be retrieved.</param>
        <summary>This function completes a capture operation, and does not block.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureStart">
      <MemberSignature Language="C#" Value="public static void CaptureStart (IntPtr device);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig pinvokeimpl (&quot;openal32.dll&quot; as &quot;alcCaptureStart&quot; cdecl)void CaptureStart(native int device) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="device" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="device">a pointer to a capture device.</param>
        <summary>This function begins a capture operation.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureStop">
      <MemberSignature Language="C#" Value="public static void CaptureStop (IntPtr device);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig pinvokeimpl (&quot;openal32.dll&quot; as &quot;alcCaptureStop&quot; cdecl)void CaptureStop(native int device) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="device" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="device">a pointer to a capture device.</param>
        <summary>This function stops a capture operation.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseDevice">
      <MemberSignature Language="C#" Value="public static bool CloseDevice (IntPtr device);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig pinvokeimpl (&quot;openal32.dll&quot; as &quot;alcCloseDevice&quot; cdecl)bool CloseDevice(native int device) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="device" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="device">a pointer to an opened device</param>
        <summary>This function closes a device by name.</summary>
        <returns>True will be returned on success or False on failure. Closing a device will fail if the device contains any contexts or buffers.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="public static OpenTK.ContextHandle CreateContext (IntPtr device, int* attrlist);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype OpenTK.ContextHandle CreateContext(native int device, int32* attrlist) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>OpenTK.ContextHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="device" Type="System.IntPtr" />
        <Parameter Name="attrlist" Type="System.Int32*" />
      </Parameters>
      <Docs>
        <param name="device">a pointer to a device</param>
        <param name="attrlist">a pointer to a set of attributes: ALC_FREQUENCY, ALC_MONO_SOURCES, ALC_REFRESH, ALC_STEREO_SOURCES, ALC_SYNC</param>
        <summary>This function creates a context using a specified device.</summary>
        <returns>Returns a pointer to the new context (NULL on failure). The attribute list can be NULL, or a zero terminated list of integer pairs composed of valid ALC attribute tokens and requested values.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="public static OpenTK.ContextHandle CreateContext (IntPtr device, int[] attriblist);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype OpenTK.ContextHandle CreateContext(native int device, int32[] attriblist) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>OpenTK.ContextHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="device" Type="System.IntPtr" />
        <Parameter Name="attriblist" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="device">a pointer to a device</param>
        <param name="attriblist">an array of a set of attributes: ALC_FREQUENCY, ALC_MONO_SOURCES, ALC_REFRESH, ALC_STEREO_SOURCES, ALC_SYNC</param>
        <summary>This function creates a context using a specified device.</summary>
        <returns>Returns a pointer to the new context (NULL on failure).</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DestroyContext">
      <MemberSignature Language="C#" Value="public static void DestroyContext (OpenTK.ContextHandle context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DestroyContext(valuetype OpenTK.ContextHandle context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="OpenTK.ContextHandle" />
      </Parameters>
      <Docs>
        <param name="context">a pointer to the new context.</param>
        <summary>This function destroys a context.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContextsDevice">
      <MemberSignature Language="C#" Value="public static IntPtr GetContextsDevice (OpenTK.ContextHandle context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetContextsDevice(valuetype OpenTK.ContextHandle context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="OpenTK.ContextHandle" />
      </Parameters>
      <Docs>
        <param name="context">a pointer to a context.</param>
        <summary>This function retrieves a context's device pointer.</summary>
        <returns>Returns a pointer to the specified context's device.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentContext">
      <MemberSignature Language="C#" Value="public static OpenTK.ContextHandle GetCurrentContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype OpenTK.ContextHandle GetCurrentContext() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>OpenTK.ContextHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This function retrieves the current context.</summary>
        <returns>Returns a pointer to the current context.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumValue">
      <MemberSignature Language="C#" Value="public static int GetEnumValue (IntPtr device, string enumname);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig pinvokeimpl (&quot;openal32.dll&quot; as &quot;alcGetEnumValue&quot; ansi cdecl)int32 GetEnumValue(native int device, string enumname) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="device" Type="System.IntPtr" />
        <Parameter Name="enumname" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="device">a pointer to the device to be queried.</param>
        <param name="enumname">a null terminated string describing the enum value.</param>
        <summary>This function retrieves the enum value for a specified enumeration name.</summary>
        <returns>Returns the enum value described by the enumName string. This is most often used for querying an enum value for an ALC extension.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetError">
      <MemberSignature Language="C#" Value="public static OpenTK.Audio.OpenAL.AlcError GetError (IntPtr device);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig pinvokeimpl (&quot;openal32.dll&quot; as &quot;alcGetError&quot; cdecl)valuetype OpenTK.Audio.OpenAL.AlcError GetError(native int device) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>OpenTK.Audio.OpenAL.AlcError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="device" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="device">a pointer to the device to retrieve the error state from</param>
        <summary>This function retrieves the current context error state.</summary>
        <returns>Errorcode Int32.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInteger">
      <MemberSignature Language="C#" Value="public static void GetInteger (IntPtr device, OpenTK.Audio.OpenAL.AlcGetInteger param, int size, out int data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetInteger(native int device, valuetype OpenTK.Audio.OpenAL.AlcGetInteger param, int32 size, int32 data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="device" Type="System.IntPtr" />
        <Parameter Name="param" Type="OpenTK.Audio.OpenAL.AlcGetInteger" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="data" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="device">a pointer to the device to be queried.</param>
        <param name="param">an attribute to be retrieved: ALC_MAJOR_VERSION, ALC_MINOR_VERSION, ALC_ATTRIBUTES_SIZE, ALC_ALL_ATTRIBUTES</param>
        <param name="size">the size of the destination buffer provided, in number of integers.</param>
        <param name="data">a pointer to the buffer to be returned</param>
        <summary>This function returns integers related to the context.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInteger">
      <MemberSignature Language="C#" Value="public static void GetInteger (IntPtr device, OpenTK.Audio.OpenAL.AlcGetInteger param, int size, int[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetInteger(native int device, valuetype OpenTK.Audio.OpenAL.AlcGetInteger param, int32 size, int32[] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="device" Type="System.IntPtr" />
        <Parameter Name="param" Type="OpenTK.Audio.OpenAL.AlcGetInteger" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="data" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="device">a pointer to the device to be queried.</param>
        <param name="param">an attribute to be retrieved: ALC_MAJOR_VERSION, ALC_MINOR_VERSION, ALC_ATTRIBUTES_SIZE, ALC_ALL_ATTRIBUTES</param>
        <param name="size">the size of the destination buffer provided, in number of integers.</param>
        <param name="data">a pointer to the buffer to be returned</param>
        <summary>This function returns integers related to the context.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProcAddress">
      <MemberSignature Language="C#" Value="public static IntPtr GetProcAddress (IntPtr device, string funcname);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig pinvokeimpl (&quot;openal32.dll&quot; as &quot;alcGetProcAddress&quot; ansi cdecl)native int GetProcAddress(native int device, string funcname) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="device" Type="System.IntPtr" />
        <Parameter Name="funcname" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="device">a pointer to the device to be queried for the function.</param>
        <param name="funcname">a null-terminated string describing the function.</param>
        <summary>This function retrieves the address of a specified context extension function.</summary>
        <returns>Returns the address of the function, or NULL if it is not found.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public static string GetString (IntPtr device, OpenTK.Audio.OpenAL.AlcGetString param);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetString(native int device, valuetype OpenTK.Audio.OpenAL.AlcGetString param) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="device" Type="System.IntPtr" />
        <Parameter Name="param" Type="OpenTK.Audio.OpenAL.AlcGetString" />
      </Parameters>
      <Docs>
        <param name="device">a pointer to the device to be queried.</param>
        <param name="param">an attribute to be retrieved: ALC_DEFAULT_DEVICE_SPECIFIER, ALC_CAPTURE_DEFAULT_DEVICE_SPECIFIER, ALC_DEVICE_SPECIFIER, ALC_CAPTURE_DEVICE_SPECIFIER, ALC_EXTENSIONS</param>
        <summary>This function returns pointers to strings related to the context.</summary>
        <returns>A string containing the name of the Device.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;string&gt; GetString (IntPtr device, OpenTK.Audio.OpenAL.AlcGetStringList param);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;string&gt; GetString(native int device, valuetype OpenTK.Audio.OpenAL.AlcGetStringList param) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="device" Type="System.IntPtr" />
        <Parameter Name="param" Type="OpenTK.Audio.OpenAL.AlcGetStringList" />
      </Parameters>
      <Docs>
        <param name="device">a pointer to the device to be queried.</param>
        <param name="param">an attribute to be retrieved: ALC_DEVICE_SPECIFIER, ALC_CAPTURE_DEVICE_SPECIFIER, ALC_ALL_DEVICES_SPECIFIER</param>
        <summary>This function returns a List of strings related to the context.</summary>
        <returns>A List of strings containing the names of the Devices.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExtensionPresent">
      <MemberSignature Language="C#" Value="public static bool IsExtensionPresent (IntPtr device, string extname);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig pinvokeimpl (&quot;openal32.dll&quot; as &quot;alcIsExtensionPresent&quot; ansi cdecl)bool IsExtensionPresent(native int device, string extname) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="device" Type="System.IntPtr" />
        <Parameter Name="extname" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="device">a pointer to the device to be queried for an extension.</param>
        <param name="extname">a null-terminated string describing the extension.</param>
        <summary>This function queries if a specified context extension is available.</summary>
        <returns>Returns True if the extension is available, False if the extension is not available.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeContextCurrent">
      <MemberSignature Language="C#" Value="public static bool MakeContextCurrent (OpenTK.ContextHandle context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool MakeContextCurrent(valuetype OpenTK.ContextHandle context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="OpenTK.ContextHandle" />
      </Parameters>
      <Docs>
        <param name="context">A pointer to the new context.</param>
        <summary>This function makes a specified context the current context.</summary>
        <returns>Returns True on success, or False on failure.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenDevice">
      <MemberSignature Language="C#" Value="public static IntPtr OpenDevice (string devicename);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig pinvokeimpl (&quot;openal32.dll&quot; as &quot;alcOpenDevice&quot; ansi cdecl)native int OpenDevice(string devicename) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="devicename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="devicename">a null-terminated string describing a device.</param>
        <summary>This function opens a device by name.</summary>
        <returns>Returns a pointer to the opened device. The return value will be NULL if there is an error.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessContext">
      <MemberSignature Language="C#" Value="public static void ProcessContext (OpenTK.ContextHandle context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ProcessContext(valuetype OpenTK.ContextHandle context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="OpenTK.ContextHandle" />
      </Parameters>
      <Docs>
        <param name="context">a pointer to the new context</param>
        <summary>This function tells a context to begin processing. When a context is suspended, changes in OpenAL state will be accepted but will not be processed. alcSuspendContext can be used to suspend a context, and then all the OpenAL state changes can be applied at once, followed by a call to alcProcessContext to apply all the state changes immediately. In some cases, this procedure may be more efficient than application of properties in a non-suspended state. In some implementations, process and suspend calls are each a NOP.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuspendContext">
      <MemberSignature Language="C#" Value="public static void SuspendContext (OpenTK.ContextHandle context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SuspendContext(valuetype OpenTK.ContextHandle context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="OpenTK.ContextHandle" />
      </Parameters>
      <Docs>
        <param name="context">a pointer to the context to be suspended.</param>
        <summary>This function suspends processing on a specified context. When a context is suspended, changes in OpenAL state will be accepted but will not be processed. A typical use of alcSuspendContext would be to suspend a context, apply all the OpenAL state changes at once, and then call alcProcessContext to apply all the state changes at once. In some cases, this procedure may be more efficient than application of properties in a non-suspended state. In some implementations, process and suspend calls are each a NOP.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
