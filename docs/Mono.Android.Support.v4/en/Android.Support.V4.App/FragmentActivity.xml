<Type Name="FragmentActivity" FullName="Android.Support.V4.App.FragmentActivity">
  <TypeSignature Language="C#" Value="public class FragmentActivity : Android.App.Activity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FragmentActivity extends Android.App.Activity" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android.Support.v4</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.App.Activity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/support/v4/app/FragmentActivity", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Base class for activities that want to use the support-based
 <c><see cref="T:Android.Support.V4.App.Fragment" /></c> and
 <c><see cref="T:Android.Support.V4.Content.Loader" /></c> APIs.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Base class for activities that want to use the support-based
 <c><see cref="T:Android.Support.V4.App.Fragment" /></c> and
 <c><see cref="T:Android.Support.V4.Content.Loader" /></c> APIs.

 </para>
      <para tool="javadoc-to-mdoc">When using this class as opposed to new platform's built-in fragment
 and loader support, you must use the <c><see cref="P:Android.Support.V4.App.FragmentActivity.SupportFragmentManager" /></c>
 and <c><see cref="P:Android.Support.V4.App.FragmentActivity.SupportLoaderManager" /></c> methods respectively to access
 those features.

 <list type="bullet"><item><term /></item><item><term /></item></list></para>
      <para tool="javadoc-to-mdoc">Known limitations:</para>
      <para tool="javadoc-to-mdoc">When using the &lt;fragment&gt; tag, this implementation can not
 use the parent view's ID as the new fragment's ID.  You must explicitly
 specify an ID (or tag) in the &lt;fragment&gt;.</para>
      <para tool="javadoc-to-mdoc">Prior to Honeycomb (3.0), an activity's state was saved before pausing.
 Fragments are a significant amount of new state, and dynamic enough that one
 often wants them to change between pausing and stopping.  These classes
 throw an exception if you try to change the fragment state after it has been
 saved, to avoid accidental loss of UI state.  However this is too restrictive
 prior to Honeycomb, where the state is saved before pausing.  To address this,
 when running on platforms prior to Honeycomb an exception will not be thrown
 if you change fragments between the state save and the activity being stopped.
 This means that in some cases if the activity is restored from its last saved
 state, this may be a snapshot slightly before what the user last saw.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FragmentActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html#FragmentActivity()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FragmentActivity (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T}(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastCustomNonConfigurationInstance">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object LastCustomNonConfigurationInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.Object LastCustomNonConfigurationInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLastCustomNonConfigurationInstance", "()Ljava/lang/Object;", "GetGetLastCustomNonConfigurationInstanceHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the value previously returned from
 <c><see cref="M:Android.Support.V4.App.FragmentActivity.OnRetainCustomNonConfigurationInstance" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the value previously returned from
 <c><see cref="M:Android.Support.V4.App.FragmentActivity.OnRetainCustomNonConfigurationInstance" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html#getLastCustomNonConfigurationInstance()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnAttachFragment">
      <MemberSignature Language="C#" Value="public virtual void OnAttachFragment (Android.Support.V4.App.Fragment fragment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnAttachFragment(class Android.Support.V4.App.Fragment fragment) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onAttachFragment", "(Landroid/support/v4/app/Fragment;)V", "GetOnAttachFragment_Landroid_support_v4_app_Fragment_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fragment" Type="Android.Support.V4.App.Fragment" />
      </Parameters>
      <Docs>
        <param name="fragment">To be added.</param>
        <summary>Called when a fragment is attached to the activity.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when a fragment is attached to the activity.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html#onAttachFragment(android.support.v4.app.Fragment)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnResumeFragments">
      <MemberSignature Language="C#" Value="protected virtual void OnResumeFragments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResumeFragments() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onResumeFragments", "()V", "GetOnResumeFragmentsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This is the fragment-orientated version of <c><see cref="M:Android.App.Activity.OnResume" /></c> that you
 can override to perform operations in the Activity at the same point
 where its fragments are resumed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This is the fragment-orientated version of <c><see cref="M:Android.App.Activity.OnResume" /></c> that you
 can override to perform operations in the Activity at the same point
 where its fragments are resumed.  Be sure to always call through to
 the super-class.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html#onResumeFragments()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnRetainCustomNonConfigurationInstance">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object OnRetainCustomNonConfigurationInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object OnRetainCustomNonConfigurationInstance() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onRetainCustomNonConfigurationInstance", "()Ljava/lang/Object;", "GetOnRetainCustomNonConfigurationInstanceHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Use this instead of <c><see cref="M:Android.Support.V4.App.FragmentActivity.OnRetainNonConfigurationInstance" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Use this instead of <c><see cref="M:Android.Support.V4.App.FragmentActivity.OnRetainNonConfigurationInstance" /></c>.
 Retrieve later with <c><see cref="P:Android.Support.V4.App.FragmentActivity.LastCustomNonConfigurationInstance" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html#onRetainCustomNonConfigurationInstance()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnRetainNonConfigurationInstance">
      <MemberSignature Language="C#" Value="public override sealed Java.Lang.Object OnRetainNonConfigurationInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Lang.Object OnRetainNonConfigurationInstance() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onRetainNonConfigurationInstance", "()Ljava/lang/Object;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retain all appropriate fragment and loader state.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Retain all appropriate fragment and loader state.  You can NOT
 override this yourself!  Use <c><see cref="M:Android.Support.V4.App.FragmentActivity.OnRetainCustomNonConfigurationInstance" /></c>
 if you want to retain your own state.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html#onRetainNonConfigurationInstance()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="StartActivityFromFragment">
      <MemberSignature Language="C#" Value="public virtual void StartActivityFromFragment (Android.Support.V4.App.Fragment fragment, Android.Content.Intent intent, int requestCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartActivityFromFragment(class Android.Support.V4.App.Fragment fragment, class Android.Content.Intent intent, int32 requestCode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startActivityFromFragment", "(Landroid/support/v4/app/Fragment;Landroid/content/Intent;I)V", "GetStartActivityFromFragment_Landroid_support_v4_app_Fragment_Landroid_content_Intent_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fragment" Type="Android.Support.V4.App.Fragment" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="requestCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fragment">To be added.</param>
        <param name="intent">To be added.</param>
        <param name="requestCode">To be added.</param>
        <summary>Called by Fragment.startActivityForResult() to implement its behavior.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called by Fragment.startActivityForResult() to implement its behavior.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html#startActivityFromFragment(android.support.v4.app.Fragment, android.content.Intent, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="SupportFragmentManager">
      <MemberSignature Language="C#" Value="public virtual Android.Support.V4.App.FragmentManager SupportFragmentManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Support.V4.App.FragmentManager SupportFragmentManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSupportFragmentManager", "()Landroid/support/v4/app/FragmentManager;", "GetGetSupportFragmentManagerHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Support.V4.App.FragmentManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the FragmentManager for interacting with fragments associated
 with this activity.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the FragmentManager for interacting with fragments associated
 with this activity.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html#getSupportFragmentManager()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="SupportInvalidateOptionsMenu">
      <MemberSignature Language="C#" Value="public virtual void SupportInvalidateOptionsMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SupportInvalidateOptionsMenu() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("supportInvalidateOptionsMenu", "()V", "GetSupportInvalidateOptionsMenuHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Support library version of <c><see cref="M:Android.App.Activity.InvalidateOptionsMenu" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Support library version of <c><see cref="M:Android.App.Activity.InvalidateOptionsMenu" /></c>.

 </para>
          <para tool="javadoc-to-mdoc">Invalidate the activity's options menu. This will cause relevant presentations
 of the menu to fully update via calls to onCreateOptionsMenu and
 onPrepareOptionsMenu the next time the menu is requested.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html#supportInvalidateOptionsMenu()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="SupportLoaderManager">
      <MemberSignature Language="C#" Value="public virtual Android.Support.V4.App.LoaderManager SupportLoaderManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Support.V4.App.LoaderManager SupportLoaderManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSupportLoaderManager", "()Landroid/support/v4/app/LoaderManager;", "GetGetSupportLoaderManagerHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Support.V4.App.LoaderManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the LoaderManager for this fragment, creating it if needed.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the LoaderManager for this fragment, creating it if needed.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html#getSupportLoaderManager()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>