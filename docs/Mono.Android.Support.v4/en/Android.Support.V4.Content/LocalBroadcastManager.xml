<Type Name="LocalBroadcastManager" FullName="Android.Support.V4.Content.LocalBroadcastManager">
  <TypeSignature Language="C#" Value="public class LocalBroadcastManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LocalBroadcastManager extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android.Support.v4</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/support/v4/content/LocalBroadcastManager", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Helper to register for and send broadcasts of Intents to local objects
 within your process.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Helper to register for and send broadcasts of Intents to local objects
 within your process.  This is has a number of advantages over sending
 global broadcasts with <c><see cref="M:Android.Content.Context.SendBroadcast(Android.Content.Intent)" /></c>:
 <list type="bullet"><item><term> You know that the data you are broadcasting won't leave your app, so
 don't need to worry about leaking private data.
 </term></item><item><term> It is not possible for other applications to send these broadcasts to
 your app, so you don't need to worry about having security holes they can
 exploit.
 </term></item><item><term> It is more efficient than sending a global broadcast through the
 system.
 </term></item></list></para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/support/v4/content/LocalBroadcastManager.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LocalBroadcastManager (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T}(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Android.Support.V4.Content.LocalBroadcastManager GetInstance (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Support.V4.Content.LocalBroadcastManager GetInstance(class Android.Content.Context context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInstance", "(Landroid/content/Context;)Landroid/support/v4/content/LocalBroadcastManager;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Support.V4.Content.LocalBroadcastManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/content/LocalBroadcastManager.html#getInstance(android.content.Context)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="RegisterReceiver">
      <MemberSignature Language="C#" Value="public virtual void RegisterReceiver (Android.Content.BroadcastReceiver receiver, Android.Content.IntentFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterReceiver(class Android.Content.BroadcastReceiver receiver, class Android.Content.IntentFilter filter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerReceiver", "(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)V", "GetRegisterReceiver_Landroid_content_BroadcastReceiver_Landroid_content_IntentFilter_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="receiver" Type="Android.Content.BroadcastReceiver" />
        <Parameter Name="filter" Type="Android.Content.IntentFilter" />
      </Parameters>
      <Docs>
        <param name="receiver">The BroadcastReceiver to handle the broadcast.</param>
        <param name="filter">Selects the Intent broadcasts to be received.</param>
        <summary>Register a receive for any local broadcasts that match the given IntentFilter.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Register a receive for any local broadcasts that match the given IntentFilter.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/content/LocalBroadcastManager.html#registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <altmember cref="M:Android.Support.V4.Content.LocalBroadcastManager.UnregisterReceiver(Android.Content.BroadcastReceiver)" />
      </Docs>
    </Member>
    <Member MemberName="SendBroadcast">
      <MemberSignature Language="C#" Value="public virtual bool SendBroadcast (Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SendBroadcast(class Android.Content.Intent intent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sendBroadcast", "(Landroid/content/Intent;)Z", "GetSendBroadcast_Landroid_content_Intent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="intent">The Intent to broadcast; all receivers matching this
     Intent will receive the broadcast.</param>
        <summary>Broadcast the given intent to all interested BroadcastReceivers.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Broadcast the given intent to all interested BroadcastReceivers.  This
 call is asynchronous; it returns immediately, and you will continue
 executing while the receivers are run.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/content/LocalBroadcastManager.html#sendBroadcast(android.content.Intent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <altmember cref="M:Android.Support.V4.Content.LocalBroadcastManager.RegisterReceiver(Android.Content.BroadcastReceiver, Android.Content.IntentFilter)" />
      </Docs>
    </Member>
    <Member MemberName="SendBroadcastSync">
      <MemberSignature Language="C#" Value="public virtual void SendBroadcastSync (Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendBroadcastSync(class Android.Content.Intent intent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sendBroadcastSync", "(Landroid/content/Intent;)V", "GetSendBroadcastSync_Landroid_content_Intent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="intent">To be added.</param>
        <summary>Like <c><see cref="M:Android.Support.V4.Content.LocalBroadcastManager.SendBroadcast(Android.Content.Intent)" /></c>, but if there are any receivers for
 the Intent this function will block and immediately dispatch them before
 returning.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Like <c><see cref="M:Android.Support.V4.Content.LocalBroadcastManager.SendBroadcast(Android.Content.Intent)" /></c>, but if there are any receivers for
 the Intent this function will block and immediately dispatch them before
 returning.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/content/LocalBroadcastManager.html#sendBroadcastSync(android.content.Intent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterReceiver">
      <MemberSignature Language="C#" Value="public virtual void UnregisterReceiver (Android.Content.BroadcastReceiver receiver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterReceiver(class Android.Content.BroadcastReceiver receiver) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unregisterReceiver", "(Landroid/content/BroadcastReceiver;)V", "GetUnregisterReceiver_Landroid_content_BroadcastReceiver_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="receiver" Type="Android.Content.BroadcastReceiver" />
      </Parameters>
      <Docs>
        <param name="receiver">The BroadcastReceiver to unregister.</param>
        <summary>Unregister a previously registered BroadcastReceiver.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Unregister a previously registered BroadcastReceiver.  <i>All</i>
 filters that have been registered for this BroadcastReceiver will be
 removed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/content/LocalBroadcastManager.html#unregisterReceiver(android.content.BroadcastReceiver)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <altmember cref="M:Android.Support.V4.Content.LocalBroadcastManager.RegisterReceiver(Android.Content.BroadcastReceiver, Android.Content.IntentFilter)" />
      </Docs>
    </Member>
  </Members>
</Type>