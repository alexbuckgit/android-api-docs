<Type Name="AccessibilityNodeProviderCompat" FullName="Android.Support.V4.View.Accessibility.AccessibilityNodeProviderCompat">
  <TypeSignature Language="C#" Value="public class AccessibilityNodeProviderCompat : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AccessibilityNodeProviderCompat extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android.Support.v4</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/support/v4/view/accessibility/AccessibilityNodeProviderCompat", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Helper for accessing <c><see cref="T:Android.Views.Accessibility.AccessibilityNodeProvider" /></c>
 introduced after API level 4 in a backwards compatible fashion.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Helper for accessing <c><see cref="T:Android.Views.Accessibility.AccessibilityNodeProvider" /></c>
 introduced after API level 4 in a backwards compatible fashion.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/support/v4/view/accessibility/AccessibilityNodeProviderCompat.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AccessibilityNodeProviderCompat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Creates a new instance.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new instance.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/accessibility/AccessibilityNodeProviderCompat.html#AccessibilityNodeProviderCompat()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AccessibilityNodeProviderCompat (Java.Lang.Object provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Lang.Object provider) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/Object;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="provider" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>Creates a new instance wrapping an
 <c><see cref="T:Android.Views.Accessibility.AccessibilityNodeProvider" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new instance wrapping an
 <c><see cref="T:Android.Views.Accessibility.AccessibilityNodeProvider" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/accessibility/AccessibilityNodeProviderCompat.html#AccessibilityNodeProviderCompat(java.lang.Object)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AccessibilityNodeProviderCompat (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityNodeInfo">
      <MemberSignature Language="C#" Value="public virtual Android.Support.V4.View.Accessibility.AccessibilityNodeInfoCompat CreateAccessibilityNodeInfo (int virtualViewId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Support.V4.View.Accessibility.AccessibilityNodeInfoCompat CreateAccessibilityNodeInfo(int32 virtualViewId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createAccessibilityNodeInfo", "(I)Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;", "GetCreateAccessibilityNodeInfo_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Support.V4.View.Accessibility.AccessibilityNodeInfoCompat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualViewId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="virtualViewId">A client defined virtual view id.</param>
        <summary>Returns an <c><see cref="T:Android.Support.V4.View.Accessibility.AccessibilityNodeInfoCompat" /></c> representing a virtual view,
 i.e. a descendant of the host View, with the given <c>virtualViewId</c>
 or the host View itself if <c>virtualViewId</c> equals to <c><see cref="F:Android.Views.View.NoId" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns an <c><see cref="T:Android.Support.V4.View.Accessibility.AccessibilityNodeInfoCompat" /></c> representing a virtual view,
 i.e. a descendant of the host View, with the given <c>virtualViewId</c>
 or the host View itself if <c>virtualViewId</c> equals to <c><see cref="F:Android.Views.View.NoId" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
 A virtual descendant is an imaginary View that is reported as a part of the view
 hierarchy for accessibility purposes. This enables custom views that draw complex
 content to report them selves as a tree of virtual views, thus conveying their
 logical structure.
 </para>
          <para tool="javadoc-to-mdoc">
 The implementer is responsible for obtaining an accessibility node info from the
 pool of reusable instances and setting the desired properties of the node info
 before returning it.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/accessibility/AccessibilityNodeProviderCompat.html#createAccessibilityNodeInfo(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <altmember cref="T:Android.Support.V4.View.Accessibility.AccessibilityNodeInfoCompat" />
      </Docs>
    </Member>
    <Member MemberName="FindAccessibilityNodeInfosByText">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Support.V4.View.Accessibility.AccessibilityNodeInfoCompat&gt; FindAccessibilityNodeInfosByText (string text, int virtualViewId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.Support.V4.View.Accessibility.AccessibilityNodeInfoCompat&gt; FindAccessibilityNodeInfosByText(string text, int32 virtualViewId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("findAccessibilityNodeInfosByText", "(Ljava/lang/String;I)Ljava/util/List;", "GetFindAccessibilityNodeInfosByText_Ljava_lang_String_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Support.V4.View.Accessibility.AccessibilityNodeInfoCompat&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="virtualViewId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">The searched text.</param>
        <param name="virtualViewId">A client defined virtual view id which defined
     the root of the tree in which to perform the search.</param>
        <summary>Finds <c><see cref="T:Android.Support.V4.View.Accessibility.AccessibilityNodeInfoCompat" /></c>s by text.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Finds <c><see cref="T:Android.Support.V4.View.Accessibility.AccessibilityNodeInfoCompat" /></c>s by text. The match is case insensitive
 containment. The search is relative to the virtual view, i.e. a descendant of the
 host View, with the given <c>virtualViewId</c> or the host View itself
 <c>virtualViewId</c> equals to <c><see cref="F:Android.Views.View.NoId" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/accessibility/AccessibilityNodeProviderCompat.html#findAccessibilityNodeInfosByText(java.lang.String, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <altmember cref="M:Android.Support.V4.View.Accessibility.AccessibilityNodeProviderCompat.CreateAccessibilityNodeInfo(System.Int32)" />
        <altmember cref="T:Android.Support.V4.View.Accessibility.AccessibilityNodeInfoCompat" />
      </Docs>
    </Member>
    <Member MemberName="PerformAction">
      <MemberSignature Language="C#" Value="public virtual bool PerformAction (int virtualViewId, int action, Android.OS.Bundle arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PerformAction(int32 virtualViewId, int32 action, class Android.OS.Bundle arguments) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("performAction", "(IILandroid/os/Bundle;)Z", "GetPerformAction_IILandroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualViewId" Type="System.Int32" />
        <Parameter Name="action" Type="System.Int32" />
        <Parameter Name="arguments" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="virtualViewId">A client defined virtual view id.</param>
        <param name="action">The action to perform.</param>
        <param name="arguments">Optional arguments.</param>
        <summary>Performs an accessibility action on a virtual view, i.e. a descendant of the
 host View, with the given <c>virtualViewId</c> or the host View itself
 if <c>virtualViewId</c> equals to <c><see cref="F:Android.Views.View.NoId" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Performs an accessibility action on a virtual view, i.e. a descendant of the
 host View, with the given <c>virtualViewId</c> or the host View itself
 if <c>virtualViewId</c> equals to <c><see cref="F:Android.Views.View.NoId" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/accessibility/AccessibilityNodeProviderCompat.html#performAction(int, int, android.os.Bundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <altmember cref="M:Android.Support.V4.View.Accessibility.AccessibilityNodeProviderCompat.CreateAccessibilityNodeInfo(System.Int32)" />
        <altmember cref="T:Android.Support.V4.View.Accessibility.AccessibilityNodeInfoCompat" />
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.Object Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getProvider", "()Ljava/lang/Object;", "GetGetProviderHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/accessibility/AccessibilityNodeProviderCompat.html#getProvider()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
