<Type Name="AccessibilityDelegateCompat" FullName="Android.Support.V4.View.AccessibilityDelegateCompat">
  <TypeSignature Language="C#" Value="public class AccessibilityDelegateCompat : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AccessibilityDelegateCompat extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android.Support.v4</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/support/v4/view/AccessibilityDelegateCompat", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Helper for accessing <c><see cref="T:Android.Views.View+AccessibilityDelegate" /></c> introduced after
 API level 4 in a backwards compatible fashion.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Helper for accessing <c><see cref="T:Android.Views.View+AccessibilityDelegate" /></c> introduced after
 API level 4 in a backwards compatible fashion.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/support/v4/view/AccessibilityDelegateCompat.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AccessibilityDelegateCompat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Creates a new instance.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new instance.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/AccessibilityDelegateCompat.html#AccessibilityDelegateCompat()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AccessibilityDelegateCompat (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T}(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchPopulateAccessibilityEvent">
      <MemberSignature Language="C#" Value="public virtual bool DispatchPopulateAccessibilityEvent (Android.Views.View host, Android.Views.Accessibility.AccessibilityEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchPopulateAccessibilityEvent(class Android.Views.View host, class Android.Views.Accessibility.AccessibilityEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchPopulateAccessibilityEvent", "(Landroid/view/View;Landroid/view/accessibility/AccessibilityEvent;)Z", "GetDispatchPopulateAccessibilityEvent_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="Android.Views.View" />
        <Parameter Name="e" Type="Android.Views.Accessibility.AccessibilityEvent" />
      </Parameters>
      <Docs>
        <param name="host">The View hosting the delegate.</param>
        <param name="e">The event.</param>
        <summary>Dispatches an <c><see cref="T:Android.Views.Accessibility.AccessibilityEvent" /></c> to the host <c><see cref="T:Android.Views.View" /></c> first and then
 to its children for adding their text content to the event.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Dispatches an <c><see cref="T:Android.Views.Accessibility.AccessibilityEvent" /></c> to the host <c><see cref="T:Android.Views.View" /></c> first and then
 to its children for adding their text content to the event.
 </para>
          <para tool="javadoc-to-mdoc">
 The default implementation behaves as
 <c><see cref="M:Android.Views.View.DispatchPopulateAccessibilityEvent(Android.Views.Accessibility.AccessibilityEvent)" /></c> for
 the case of no accessibility delegate been set.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/AccessibilityDelegateCompat.html#dispatchPopulateAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <altmember cref="M:Android.Views.View.DispatchPopulateAccessibilityEvent(Android.Views.Accessibility.AccessibilityEvent)" />
      </Docs>
    </Member>
    <Member MemberName="GetAccessibilityNodeProvider">
      <MemberSignature Language="C#" Value="public virtual Android.Support.V4.View.Accessibility.AccessibilityNodeProviderCompat GetAccessibilityNodeProvider (Android.Views.View host);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Support.V4.View.Accessibility.AccessibilityNodeProviderCompat GetAccessibilityNodeProvider(class Android.Views.View host) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getAccessibilityNodeProvider", "(Landroid/view/View;)Landroid/support/v4/view/accessibility/AccessibilityNodeProviderCompat;", "GetGetAccessibilityNodeProvider_Landroid_view_View_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Support.V4.View.Accessibility.AccessibilityNodeProviderCompat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="host">To be added.</param>
        <summary>Gets the provider for managing a virtual view hierarchy rooted at this View
 and reported to <c><see cref="T:Android.AccessibilityServices.AccessibilityService" /></c>s
 that explore the window content.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the provider for managing a virtual view hierarchy rooted at this View
 and reported to <c><see cref="T:Android.AccessibilityServices.AccessibilityService" /></c>s
 that explore the window content.
 </para>
          <para tool="javadoc-to-mdoc">
 The default implementation behaves as
 <c><see cref="M:Android.Support.V4.View.ViewCompat.GetAccessibilityNodeProvider(Android.Views.View)" /></c>
 for the case of no accessibility delegate been set.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/AccessibilityDelegateCompat.html#getAccessibilityNodeProvider(android.view.View)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <altmember cref="T:Android.Support.V4.View.Accessibility.AccessibilityNodeProviderCompat" />
      </Docs>
    </Member>
    <Member MemberName="OnInitializeAccessibilityEvent">
      <MemberSignature Language="C#" Value="public virtual void OnInitializeAccessibilityEvent (Android.Views.View host, Android.Views.Accessibility.AccessibilityEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnInitializeAccessibilityEvent(class Android.Views.View host, class Android.Views.Accessibility.AccessibilityEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onInitializeAccessibilityEvent", "(Landroid/view/View;Landroid/view/accessibility/AccessibilityEvent;)V", "GetOnInitializeAccessibilityEvent_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="Android.Views.View" />
        <Parameter Name="e" Type="Android.Views.Accessibility.AccessibilityEvent" />
      </Parameters>
      <Docs>
        <param name="host">The View hosting the delegate.</param>
        <param name="e">The event to initialize.</param>
        <summary>Initializes an <c><see cref="T:Android.Views.Accessibility.AccessibilityEvent" /></c> with information about the
 the host View which is the event source.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Initializes an <c><see cref="T:Android.Views.Accessibility.AccessibilityEvent" /></c> with information about the
 the host View which is the event source.
 </para>
          <para tool="javadoc-to-mdoc">
 The default implementation behaves as
 <c><see cref="M:Android.Support.V4.View.ViewCompat.OnInitializeAccessibilityEvent(Android.Views.View, Android.Views.Accessibility.AccessibilityEvent)" /></c> for
 the case of no accessibility delegate been set.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/AccessibilityDelegateCompat.html#onInitializeAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <altmember cref="M:Android.Support.V4.View.ViewCompat.OnInitializeAccessibilityEvent(Android.Views.View, Android.Views.Accessibility.AccessibilityEvent)" />
      </Docs>
    </Member>
    <Member MemberName="OnInitializeAccessibilityNodeInfo">
      <MemberSignature Language="C#" Value="public virtual void OnInitializeAccessibilityNodeInfo (Android.Views.View host, Android.Support.V4.View.Accessibility.AccessibilityNodeInfoCompat info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnInitializeAccessibilityNodeInfo(class Android.Views.View host, class Android.Support.V4.View.Accessibility.AccessibilityNodeInfoCompat info) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onInitializeAccessibilityNodeInfo", "(Landroid/view/View;Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;)V", "GetOnInitializeAccessibilityNodeInfo_Landroid_view_View_Landroid_support_v4_view_accessibility_AccessibilityNodeInfoCompat_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="Android.Views.View" />
        <Parameter Name="info" Type="Android.Support.V4.View.Accessibility.AccessibilityNodeInfoCompat" />
      </Parameters>
      <Docs>
        <param name="host">The View hosting the delegate.</param>
        <param name="info">The instance to initialize.</param>
        <summary>Initializes an <c><see cref="T:Android.Support.V4.View.Accessibility.AccessibilityNodeInfoCompat" /></c> with information about the host view.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Initializes an <c><see cref="T:Android.Support.V4.View.Accessibility.AccessibilityNodeInfoCompat" /></c> with information about the host view.
 </para>
          <para tool="javadoc-to-mdoc">
 The default implementation behaves as
 <c><see cref="M:Android.Support.V4.View.ViewCompat.OnInitializeAccessibilityNodeInfo(Android.Views.View, Android.Support.V4.View.Accessibility.AccessibilityNodeInfoCompat)" /></c> for
 the case of no accessibility delegate been set.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/AccessibilityDelegateCompat.html#onInitializeAccessibilityNodeInfo(android.view.View, android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <altmember cref="M:Android.Support.V4.View.ViewCompat.OnInitializeAccessibilityNodeInfo(Android.Views.View, Android.Support.V4.View.Accessibility.AccessibilityNodeInfoCompat)" />
      </Docs>
    </Member>
    <Member MemberName="OnPopulateAccessibilityEvent">
      <MemberSignature Language="C#" Value="public virtual void OnPopulateAccessibilityEvent (Android.Views.View host, Android.Views.Accessibility.AccessibilityEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPopulateAccessibilityEvent(class Android.Views.View host, class Android.Views.Accessibility.AccessibilityEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onPopulateAccessibilityEvent", "(Landroid/view/View;Landroid/view/accessibility/AccessibilityEvent;)V", "GetOnPopulateAccessibilityEvent_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="Android.Views.View" />
        <Parameter Name="e" Type="Android.Views.Accessibility.AccessibilityEvent" />
      </Parameters>
      <Docs>
        <param name="host">The View hosting the delegate.</param>
        <param name="e">The accessibility event which to populate.</param>
        <summary>Gives a chance to the host View to populate the accessibility event with its
 text content.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Gives a chance to the host View to populate the accessibility event with its
 text content.
 </para>
          <para tool="javadoc-to-mdoc">
 The default implementation behaves as
 <c><see cref="M:Android.Support.V4.View.ViewCompat.OnPopulateAccessibilityEvent(Android.Views.View, Android.Views.Accessibility.AccessibilityEvent)" /></c> for
 the case of no accessibility delegate been set.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/AccessibilityDelegateCompat.html#onPopulateAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <altmember cref="M:Android.Support.V4.View.ViewCompat.OnPopulateAccessibilityEvent(Android.Views.View, Android.Views.Accessibility.AccessibilityEvent)" />
      </Docs>
    </Member>
    <Member MemberName="OnRequestSendAccessibilityEvent">
      <MemberSignature Language="C#" Value="public virtual bool OnRequestSendAccessibilityEvent (Android.Views.ViewGroup host, Android.Views.View child, Android.Views.Accessibility.AccessibilityEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnRequestSendAccessibilityEvent(class Android.Views.ViewGroup host, class Android.Views.View child, class Android.Views.Accessibility.AccessibilityEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onRequestSendAccessibilityEvent", "(Landroid/view/ViewGroup;Landroid/view/View;Landroid/view/accessibility/AccessibilityEvent;)Z", "GetOnRequestSendAccessibilityEvent_Landroid_view_ViewGroup_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="Android.Views.ViewGroup" />
        <Parameter Name="child" Type="Android.Views.View" />
        <Parameter Name="e" Type="Android.Views.Accessibility.AccessibilityEvent" />
      </Parameters>
      <Docs>
        <param name="host">The View hosting the delegate.</param>
        <param name="child">The child which requests sending the event.</param>
        <param name="e">The event to be sent.</param>
        <summary>Called when a child of the host View has requested sending an
 <c><see cref="T:Android.Views.Accessibility.AccessibilityEvent" /></c> and gives an opportunity to the parent (the host)
 to augment the event.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when a child of the host View has requested sending an
 <c><see cref="T:Android.Views.Accessibility.AccessibilityEvent" /></c> and gives an opportunity to the parent (the host)
 to augment the event.
 </para>
          <para tool="javadoc-to-mdoc">
 The default implementation behaves as
 <c><see cref="M:Android.Support.V4.View.ViewGroupCompat.OnRequestSendAccessibilityEvent(Android.Views.ViewGroup, Android.Views.View, Android.Views.View)" /></c> for
 the case of no accessibility delegate been set.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/AccessibilityDelegateCompat.html#onRequestSendAccessibilityEvent(android.view.ViewGroup, android.view.View, android.view.accessibility.AccessibilityEvent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <altmember cref="M:Android.Support.V4.View.ViewGroupCompat.OnRequestSendAccessibilityEvent(Android.Views.ViewGroup, Android.Views.View, Android.Views.View)" />
      </Docs>
    </Member>
    <Member MemberName="PerformAccessibilityAction">
      <MemberSignature Language="C#" Value="public virtual bool PerformAccessibilityAction (Android.Views.View host, int action, Android.OS.Bundle args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PerformAccessibilityAction(class Android.Views.View host, int32 action, class Android.OS.Bundle args) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("performAccessibilityAction", "(Landroid/view/View;ILandroid/os/Bundle;)Z", "GetPerformAccessibilityAction_Landroid_view_View_ILandroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="Android.Views.View" />
        <Parameter Name="action" Type="System.Int32" />
        <Parameter Name="args" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="host">To be added.</param>
        <param name="action">The action to perform.</param>
        <param name="args">To be added.</param>
        <summary>Performs the specified accessibility action on the view.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Performs the specified accessibility action on the view. For
 possible accessibility actions look at <c><see cref="T:Android.Support.V4.View.Accessibility.AccessibilityNodeInfoCompat" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
 The default implementation behaves as
 <c><see cref="M:Android.Views.View.PerformAccessibilityAction(Android.AccessibilityServices.GlobalAction, Android.OS.Bundle)" /></c> for the case of
  no accessibility delegate been set.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/AccessibilityDelegateCompat.html#performAccessibilityAction(android.view.View, int, android.os.Bundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <altmember cref="M:Android.Views.View.PerformAccessibilityAction(Android.AccessibilityServices.GlobalAction, Android.OS.Bundle)" />
      </Docs>
    </Member>
    <Member MemberName="SendAccessibilityEvent">
      <MemberSignature Language="C#" Value="public virtual void SendAccessibilityEvent (Android.Views.View host, int eventType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendAccessibilityEvent(class Android.Views.View host, int32 eventType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sendAccessibilityEvent", "(Landroid/view/View;I)V", "GetSendAccessibilityEvent_Landroid_view_View_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="Android.Views.View" />
        <Parameter Name="eventType" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">The View hosting the delegate.</param>
        <param name="eventType">The type of the event to send.</param>
        <summary>Sends an accessibility event of the given type.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sends an accessibility event of the given type. If accessibility is not
 enabled this method has no effect.
 </para>
          <para tool="javadoc-to-mdoc">
 The default implementation behaves as <c><see cref="M:Android.Views.View.SendAccessibilityEvent(Android.Views.Accessibility.EventTypes)" /></c> for the case of no accessibility delegate
 been set.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/AccessibilityDelegateCompat.html#sendAccessibilityEvent(android.view.View, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <altmember cref="M:Android.Views.View.SendAccessibilityEvent(Android.Views.Accessibility.EventTypes)" />
      </Docs>
    </Member>
    <Member MemberName="SendAccessibilityEventUnchecked">
      <MemberSignature Language="C#" Value="public virtual void SendAccessibilityEventUnchecked (Android.Views.View host, Android.Views.Accessibility.AccessibilityEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendAccessibilityEventUnchecked(class Android.Views.View host, class Android.Views.Accessibility.AccessibilityEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sendAccessibilityEventUnchecked", "(Landroid/view/View;Landroid/view/accessibility/AccessibilityEvent;)V", "GetSendAccessibilityEventUnchecked_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="Android.Views.View" />
        <Parameter Name="e" Type="Android.Views.Accessibility.AccessibilityEvent" />
      </Parameters>
      <Docs>
        <param name="host">The View hosting the delegate.</param>
        <param name="e">The event to send.</param>
        <summary>Sends an accessibility event.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sends an accessibility event. This method behaves exactly as
 <c><see cref="M:Android.Support.V4.View.AccessibilityDelegateCompat.SendAccessibilityEvent(Android.Views.View, System.Int32)" /></c> but takes as an argument an
 empty <c><see cref="T:Android.Views.Accessibility.AccessibilityEvent" /></c> and does not perform a check whether
 accessibility is enabled.
 </para>
          <para tool="javadoc-to-mdoc">
 The default implementation behaves as
 <c><see cref="M:Android.Views.View.SendAccessibilityEventUnchecked(Android.Views.Accessibility.AccessibilityEvent)" /></c> for
 the case of no accessibility delegate been set.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/AccessibilityDelegateCompat.html#sendAccessibilityEventUnchecked(android.view.View, android.view.accessibility.AccessibilityEvent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <altmember cref="M:Android.Views.View.SendAccessibilityEventUnchecked(Android.Views.Accessibility.AccessibilityEvent)" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>