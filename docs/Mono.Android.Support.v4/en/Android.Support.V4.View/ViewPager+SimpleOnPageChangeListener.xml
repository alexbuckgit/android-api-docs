<Type Name="ViewPager+SimpleOnPageChangeListener" FullName="Android.Support.V4.View.ViewPager+SimpleOnPageChangeListener">
  <TypeSignature Language="C#" Value="public class ViewPager.SimpleOnPageChangeListener : Java.Lang.Object, Android.Support.V4.View.ViewPager.IOnPageChangeListener, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ViewPager/SimpleOnPageChangeListener extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Android.Support.V4.View.ViewPager/IOnPageChangeListener, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android.Support.v4</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Support.V4.View.ViewPager+IOnPageChangeListener</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/support/v4/view/ViewPager$SimpleOnPageChangeListener", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Simple implementation of the <c><see cref="T:Android.Support.V4.View.ViewPager+IOnPageChangeListener" /></c> interface with stub
 implementations of each method.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Simple implementation of the <c><see cref="T:Android.Support.V4.View.ViewPager+IOnPageChangeListener" /></c> interface with stub
 implementations of each method. Extend this if you do not intend to override
 every method of <c><see cref="T:Android.Support.V4.View.ViewPager+IOnPageChangeListener" /></c>.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/support/v4/view/ViewPager.SimpleOnPageChangeListener.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SimpleOnPageChangeListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewPager.SimpleOnPageChangeListener.html#ViewPager.SimpleOnPageChangeListener()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SimpleOnPageChangeListener (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T}(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPageScrolled">
      <MemberSignature Language="C#" Value="public virtual void OnPageScrolled (int position, float positionOffset, int positionOffsetPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPageScrolled(int32 position, float32 positionOffset, int32 positionOffsetPixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onPageScrolled", "(IFI)V", "GetOnPageScrolled_IFIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="positionOffset" Type="System.Single" />
        <Parameter Name="positionOffsetPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">Position index of the first page currently being displayed.
                 Page position+1 will be visible if positionOffset is nonzero.</param>
        <param name="positionOffset">Value from [0, 1) indicating the offset from the page at position.</param>
        <param name="positionOffsetPixels">Value in pixels indicating the offset from position.
</param>
        <summary>This method will be invoked when the current page is scrolled, either as part
 of a programmatically initiated smooth scroll or a user initiated touch scroll.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This method will be invoked when the current page is scrolled, either as part
 of a programmatically initiated smooth scroll or a user initiated touch scroll.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewPager.SimpleOnPageChangeListener.html#onPageScrolled(int, float, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnPageScrollStateChanged">
      <MemberSignature Language="C#" Value="public virtual void OnPageScrollStateChanged (int state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPageScrollStateChanged(int32 state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onPageScrollStateChanged", "(I)V", "GetOnPageScrollStateChanged_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="state">The new scroll state.</param>
        <summary>Called when the scroll state changes.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when the scroll state changes. Useful for discovering when the user
 begins dragging, when the pager is automatically settling to the current page,
 or when it is fully stopped/idle.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewPager.SimpleOnPageChangeListener.html#onPageScrollStateChanged(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnPageSelected">
      <MemberSignature Language="C#" Value="public virtual void OnPageSelected (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPageSelected(int32 position) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onPageSelected", "(I)V", "GetOnPageSelected_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">Position index of the new selected page.
</param>
        <summary>This method will be invoked when a new page becomes selected.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This method will be invoked when a new page becomes selected. Animation is not
 necessarily complete.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewPager.SimpleOnPageChangeListener.html#onPageSelected(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>