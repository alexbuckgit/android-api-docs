<Type Name="ViewPager" FullName="Android.Support.V4.View.ViewPager">
  <TypeSignature Language="C#" Value="public class ViewPager : Android.Views.ViewGroup" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ViewPager extends Android.Views.ViewGroup" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android.Support.v4</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Views.ViewGroup</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/support/v4/view/ViewPager", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Layout manager that allows the user to flip left and right
 through pages of data.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Layout manager that allows the user to flip left and right
 through pages of data.  You supply an implementation of a
 <c><see cref="T:Android.Support.V4.View.PagerAdapter" /></c> to generate the pages that the view shows.

 </para>
      <para tool="javadoc-to-mdoc">Note this class is currently under early design and
 development.  The API will likely change in later updates of
 the compatibility library, requiring changes to the source code
 of apps when they are compiled against the newer version.</para>
      <para tool="javadoc-to-mdoc">ViewPager is most often used in conjunction with <c><see cref="T:Android.App.Fragment" /></c>,
 which is a convenient way to supply and manage the lifecycle of each page.
 There are standard adapters implemented for using fragments with the ViewPager,
 which cover the most common use cases.  These are
 <c><see cref="T:Android.Support.V4.App.FragmentPagerAdapter" /></c> and 
 <c><see cref="T:Android.Support.V4.App.FragmentStatePagerAdapter" /></c>; each of these
 classes have simple code showing how to build a full user interface
 with them.

 </para>
      <para tool="javadoc-to-mdoc">Here is a more complicated example of ViewPager, using it in conjuction
 with <c><see cref="T:Android.App.ActionBar" /></c> tabs.  You can find other examples of using
 ViewPager in the API 4+ Support Demos and API 13+ Support Demos sample code.

 <sample external-id="422F00301B66E13D4DC3DEAC2C3D486B" /></para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/support/v4/view/ViewPager.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ViewPager (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewPager.html#ViewPager(android.content.Context)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ViewPager (Android.Content.Context context, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewPager.html#ViewPager(android.content.Context, android.util.AttributeSet)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ViewPager (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Adapter">
      <MemberSignature Language="C#" Value="public virtual Android.Support.V4.View.PagerAdapter Adapter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Support.V4.View.PagerAdapter Adapter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAdapter", "()Landroid/support/v4/view/PagerAdapter;", "GetGetAdapterHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setAdapter", "(Landroid/support/v4/view/PagerAdapter;)V", "GetSetAdapter_Landroid_support_v4_view_PagerAdapter_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Support.V4.View.PagerAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the current adapter supplying pages.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewPager.html#getAdapter()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Retrieve the current adapter supplying pages.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewPager.html#setAdapter(android.support.v4.view.PagerAdapter)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set a PagerAdapter that will supply views for this pager as needed.</para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="ArrowScroll">
      <MemberSignature Language="C#" Value="public virtual bool ArrowScroll (int direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ArrowScroll(int32 direction) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("arrowScroll", "(I)Z", "GetArrowScroll_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="direction">To be added.</param>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewPager.html#arrowScroll(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="BeginFakeDrag">
      <MemberSignature Language="C#" Value="public virtual bool BeginFakeDrag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool BeginFakeDrag() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("beginFakeDrag", "()Z", "GetBeginFakeDragHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Start a fake drag of the pager.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Start a fake drag of the pager.

 </para>
          <para tool="javadoc-to-mdoc">A fake drag can be useful if you want to synchronize the motion of the ViewPager
 with the touch scrolling of another view, while still letting the ViewPager
 control the snapping motion and fling behavior. (e.g. parallax-scrolling tabs.)
 Call <c><see cref="M:Android.Support.V4.View.ViewPager.FakeDragBy(System.Single)" /></c> to simulate the actual drag motion. Call
 <c><see cref="M:Android.Support.V4.View.ViewPager.EndFakeDrag" /></c> to complete the fake drag and fling as necessary.

 </para>
          <para tool="javadoc-to-mdoc">During a fake drag the ViewPager will ignore all touch events. If a real drag
 is already in progress, this method will return false.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewPager.html#beginFakeDrag()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <altmember cref="M:Android.Support.V4.View.ViewPager.FakeDragBy(System.Single)" />
        <altmember cref="M:Android.Support.V4.View.ViewPager.EndFakeDrag" />
      </Docs>
    </Member>
    <Member MemberName="CanScroll">
      <MemberSignature Language="C#" Value="protected virtual bool CanScroll (Android.Views.View v, bool checkV, int dx, int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanScroll(class Android.Views.View v, bool checkV, int32 dx, int32 x, int32 y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("canScroll", "(Landroid/view/View;ZIII)Z", "GetCanScroll_Landroid_view_View_ZIIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="Android.Views.View" />
        <Parameter Name="checkV" Type="System.Boolean" />
        <Parameter Name="dx" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="v">View to test for horizontal scrollability</param>
        <param name="checkV">Whether the view v passed should itself be checked for scrollability (true),
               or just its children (false).</param>
        <param name="dx">Delta scrolled in pixels</param>
        <param name="x">X coordinate of the active touch point</param>
        <param name="y">Y coordinate of the active touch point</param>
        <summary>Tests scrollability within child views of v given a delta of dx.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Tests scrollability within child views of v given a delta of dx.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewPager.html#canScroll(android.view.View, boolean, int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="CurrentItem">
      <MemberSignature Language="C#" Value="public virtual int CurrentItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCurrentItem", "()I", "GetGetCurrentItemHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setCurrentItem", "(I)V", "GetSetCurrentItem_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewPager.html#getCurrentItem()" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewPager.html#setCurrentItem(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the currently selected page. If the ViewPager has already been through its first
 layout with its current adapter there will be a smooth animated transition between
 the current item and the specified item.</para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="EndFakeDrag">
      <MemberSignature Language="C#" Value="public virtual void EndFakeDrag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndFakeDrag() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("endFakeDrag", "()V", "GetEndFakeDragHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>End a fake drag of the pager.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">End a fake drag of the pager.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewPager.html#endFakeDrag()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <altmember cref="M:Android.Support.V4.View.ViewPager.BeginFakeDrag" />
        <altmember cref="M:Android.Support.V4.View.ViewPager.FakeDragBy(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteKeyEvent">
      <MemberSignature Language="C#" Value="public virtual bool ExecuteKeyEvent (Android.Views.KeyEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ExecuteKeyEvent(class Android.Views.KeyEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("executeKeyEvent", "(Landroid/view/KeyEvent;)Z", "GetExecuteKeyEvent_Landroid_view_KeyEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="e">The key event to execute.</param>
        <summary>You can call this function yourself to have the scroll view perform
 scrolling from a key event, just as if the event had been dispatched to
 it by the view hierarchy.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">You can call this function yourself to have the scroll view perform
 scrolling from a key event, just as if the event had been dispatched to
 it by the view hierarchy.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewPager.html#executeKeyEvent(android.view.KeyEvent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="FakeDragBy">
      <MemberSignature Language="C#" Value="public virtual void FakeDragBy (float xOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FakeDragBy(float32 xOffset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("fakeDragBy", "(F)V", "GetFakeDragBy_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xOffset" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="xOffset">Offset in pixels to drag by.</param>
        <summary>Fake drag by an offset in pixels.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Fake drag by an offset in pixels. You must have called <c><see cref="M:Android.Support.V4.View.ViewPager.BeginFakeDrag" /></c> first.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewPager.html#fakeDragBy(float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <altmember cref="M:Android.Support.V4.View.ViewPager.BeginFakeDrag" />
        <altmember cref="M:Android.Support.V4.View.ViewPager.EndFakeDrag" />
      </Docs>
    </Member>
    <Member MemberName="IsFakeDragging">
      <MemberSignature Language="C#" Value="public virtual bool IsFakeDragging { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFakeDragging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isFakeDragging", "()Z", "GetIsFakeDraggingHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if a fake drag is in progress.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns true if a fake drag is in progress.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewPager.html#isFakeDragging()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <altmember cref="M:Android.Support.V4.View.ViewPager.BeginFakeDrag" />
        <altmember cref="M:Android.Support.V4.View.ViewPager.FakeDragBy(System.Single)" />
        <altmember cref="M:Android.Support.V4.View.ViewPager.EndFakeDrag" />
      </Docs>
    </Member>
    <Member MemberName="OffscreenPageLimit">
      <MemberSignature Language="C#" Value="public virtual int OffscreenPageLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OffscreenPageLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getOffscreenPageLimit", "()I", "GetGetOffscreenPageLimitHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setOffscreenPageLimit", "(I)V", "GetSetOffscreenPageLimit_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the number of pages that will be retained to either side of the
 current page in the view hierarchy in an idle state.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewPager.html#getOffscreenPageLimit()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the number of pages that will be retained to either side of the
 current page in the view hierarchy in an idle state. Defaults to 1.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewPager.html#setOffscreenPageLimit(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the number of pages that should be retained to either side of the
 current page in the view hierarchy in an idle state. Pages beyond this
 limit will be recreated from the adapter when needed.

 </para>
          <para tool="javadoc-to-mdoc">This is offered as an optimization. If you know in advance the number
 of pages you will need to support or have lazy-loading mechanisms in place
 on your pages, tweaking this setting can have benefits in perceived smoothness
 of paging animations and interaction. If you have a small number of pages (3-4)
 that you can keep active all at once, less time will be spent in layout for
 newly created view subtrees as the user pages back and forth.</para>
          <para tool="javadoc-to-mdoc">You should keep this limit low, especially if your pages have complex layouts.
 This setting defaults to 1.</para>
        </remarks>
        <since version="" />
        <altmember cref="P:Android.Support.V4.View.ViewPager.OffscreenPageLimit" />
      </Docs>
    </Member>
    <Member MemberName="OnLayout">
      <MemberSignature Language="C#" Value="protected override void OnLayout (bool changed, int l, int t, int r, int b);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLayout(bool changed, int32 l, int32 t, int32 r, int32 b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onLayout", "(ZIIII)V", "GetOnLayout_ZIIIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changed" Type="System.Boolean" />
        <Parameter Name="l" Type="System.Int32" />
        <Parameter Name="t" Type="System.Int32" />
        <Parameter Name="r" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="changed">This is a new size or position for this view</param>
        <param name="l">Left position, relative to parent</param>
        <param name="t">Top position, relative to parent</param>
        <param name="r">Right position, relative to parent</param>
        <param name="b">Bottom position, relative to parent
</param>
        <summary>Called from layout when this view should
 assign a size and position to each of its children.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called from layout when this view should
 assign a size and position to each of its children.

 Derived classes with children should override
 this method and call layout on each of
 their children.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewPager.html#onLayout(boolean, int, int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnPageScrolled">
      <MemberSignature Language="C#" Value="protected virtual void OnPageScrolled (int position, float offset, int offsetPixels);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageScrolled(int32 position, float32 offset, int32 offsetPixels) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onPageScrolled", "(IFI)V", "GetOnPageScrolled_IFIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
        <Parameter Name="offset" Type="System.Single" />
        <Parameter Name="offsetPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="position">Position index of the first page currently being displayed.
                 Page position+1 will be visible if positionOffset is nonzero.</param>
        <param name="offset">Value from [0, 1) indicating the offset from the page at position.</param>
        <param name="offsetPixels">Value in pixels indicating the offset from position.
</param>
        <summary>This method will be invoked when the current page is scrolled, either as part
 of a programmatically initiated smooth scroll or a user initiated touch scroll.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This method will be invoked when the current page is scrolled, either as part
 of a programmatically initiated smooth scroll or a user initiated touch scroll.
 If you override this method you must call through to the superclass implementation
 (e.g. super.onPageScrolled(position, offset, offsetPixels)) before onPageScrolled
 returns.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewPager.html#onPageScrolled(int, float, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnRestoreInstanceState">
      <MemberSignature Language="C#" Value="public virtual void OnRestoreInstanceState (Android.OS.IParcelable state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnRestoreInstanceState(class Android.OS.IParcelable state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onRestoreInstanceState", "(Landroid/os/Parcelable;)V", "GetOnRestoreInstanceState_Landroid_os_Parcelable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Android.OS.IParcelable" />
      </Parameters>
      <Docs>
        <param name="state">The frozen state that had previously been returned by
        <c><see cref="M:Android.Support.V4.View.ViewPager.OnSaveInstanceState" /></c>.</param>
        <summary>Hook allowing a view to re-apply a representation of its internal state that had previously
 been generated by <c><see cref="M:Android.Views.View.OnSaveInstanceState" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Hook allowing a view to re-apply a representation of its internal state that had previously
 been generated by <c><see cref="M:Android.Views.View.OnSaveInstanceState" /></c>. This function will never be called with a
 null state.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewPager.html#onRestoreInstanceState(android.os.Parcelable)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnSaveInstanceState">
      <MemberSignature Language="C#" Value="public virtual Android.OS.IParcelable OnSaveInstanceState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.IParcelable OnSaveInstanceState() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onSaveInstanceState", "()Landroid/os/Parcelable;", "GetOnSaveInstanceStateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IParcelable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Hook allowing a view to generate a representation of its internal state
 that can later be used to create a new instance with that same state.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Hook allowing a view to generate a representation of its internal state
 that can later be used to create a new instance with that same state.
 This state should only contain information that is not persistent or can
 not be reconstructed later. For example, you will never store your
 current position on screen because that will be computed again when a
 new instance of the view is placed in its view hierarchy.
 </para>
          <para tool="javadoc-to-mdoc">
 Some examples of things you may store here: the current cursor position
 in a text view (but usually not the text itself since that is stored in a
 content provider or other persistent storage), the currently selected
 item in a list view.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewPager.html#onSaveInstanceState()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="PageMargin">
      <MemberSignature Language="C#" Value="public virtual int PageMargin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageMargin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPageMargin", "()I", "GetGetPageMarginHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setPageMargin", "(I)V", "GetSetPageMargin_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the margin between pages.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewPager.html#getPageMargin()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Return the margin between pages.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewPager.html#setPageMargin(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the margin between pages.</para>
        </remarks>
        <since version="" />
        <altmember cref="P:Android.Support.V4.View.ViewPager.PageMargin" />
        <altmember cref="M:Android.Support.V4.View.ViewPager.SetPageMarginDrawable(Android.Graphics.Drawables.Drawable)" />
        <altmember cref="M:Android.Support.V4.View.ViewPager.SetPageMarginDrawable(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="PageScrolled">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Support.V4.View.ViewPager.PageScrolledEventArgs&gt; PageScrolled;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Support.V4.View.ViewPager/PageScrolledEventArgs&gt; PageScrolled" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Support.V4.View.ViewPager+PageScrolledEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageScrollStateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Support.V4.View.ViewPager.PageScrollStateChangedEventArgs&gt; PageScrollStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Support.V4.View.ViewPager/PageScrollStateChangedEventArgs&gt; PageScrollStateChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Support.V4.View.ViewPager+PageScrollStateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageSelected">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Support.V4.View.ViewPager.PageSelectedEventArgs&gt; PageSelected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Support.V4.View.ViewPager/PageSelectedEventArgs&gt; PageSelected" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Support.V4.View.ViewPager+PageSelectedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollStateDragging">
      <MemberSignature Language="C#" Value="public const int ScrollStateDragging = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ScrollStateDragging = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SCROLL_STATE_DRAGGING")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Indicates that the pager is currently being dragged by the user.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates that the pager is currently being dragged by the user.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewPager.html#SCROLL_STATE_DRAGGING" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="ScrollStateIdle">
      <MemberSignature Language="C#" Value="public const int ScrollStateIdle = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ScrollStateIdle = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SCROLL_STATE_IDLE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Indicates that the pager is in an idle, settled state.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates that the pager is in an idle, settled state. The current page
 is fully in view and no animation is in progress.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewPager.html#SCROLL_STATE_IDLE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="ScrollStateSettling">
      <MemberSignature Language="C#" Value="public const int ScrollStateSettling = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ScrollStateSettling = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SCROLL_STATE_SETTLING")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Indicates that the pager is in the process of settling to a final position.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates that the pager is in the process of settling to a final position.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewPager.html#SCROLL_STATE_SETTLING" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="SetCurrentItem">
      <MemberSignature Language="C#" Value="public virtual void SetCurrentItem (int item, bool smoothScroll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCurrentItem(int32 item, bool smoothScroll) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setCurrentItem", "(IZ)V", "GetSetCurrentItem_IZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
        <Parameter Name="smoothScroll" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="item">Item index to select</param>
        <param name="smoothScroll">True to smoothly scroll to the new item, false to transition immediately
</param>
        <summary>Set the currently selected page.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the currently selected page.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewPager.html#setCurrentItem(int, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="SetOnPageChangeListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnPageChangeListener (Android.Support.V4.View.ViewPager.IOnPageChangeListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnPageChangeListener(class Android.Support.V4.View.ViewPager/IOnPageChangeListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnPageChangeListener", "(Landroid/support/v4/view/ViewPager$OnPageChangeListener;)V", "GetSetOnPageChangeListener_Landroid_support_v4_view_ViewPager_OnPageChangeListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Support.V4.View.ViewPager+IOnPageChangeListener" />
      </Parameters>
      <Docs>
        <param name="listener">Listener to set
</param>
        <summary>Set a listener that will be invoked whenever the page changes or is incrementally
 scrolled.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set a listener that will be invoked whenever the page changes or is incrementally
 scrolled. See <c><see cref="T:Android.Support.V4.View.ViewPager+IOnPageChangeListener" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewPager.html#setOnPageChangeListener(android.support.v4.view.ViewPager.OnPageChangeListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="SetPageMarginDrawable">
      <MemberSignature Language="C#" Value="public virtual void SetPageMarginDrawable (Android.Graphics.Drawables.Drawable d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPageMarginDrawable(class Android.Graphics.Drawables.Drawable d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPageMarginDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetPageMarginDrawable_Landroid_graphics_drawable_Drawable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="d">Drawable to display between pages
</param>
        <summary>Set a drawable that will be used to fill the margin between pages.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set a drawable that will be used to fill the margin between pages.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewPager.html#setPageMarginDrawable(android.graphics.drawable.Drawable)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="SetPageMarginDrawable">
      <MemberSignature Language="C#" Value="public virtual void SetPageMarginDrawable (int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPageMarginDrawable(int32 resId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPageMarginDrawable", "(I)V", "GetSetPageMarginDrawable_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resId">Resource ID of a drawable to display between pages
</param>
        <summary>Set a drawable that will be used to fill the margin between pages.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set a drawable that will be used to fill the margin between pages.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewPager.html#setPageMarginDrawable(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="SetPageTransformer">
      <MemberSignature Language="C#" Value="public virtual void SetPageTransformer (bool reverseDrawingOrder, Android.Support.V4.View.ViewPager.IPageTransformer transformer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPageTransformer(bool reverseDrawingOrder, class Android.Support.V4.View.ViewPager/IPageTransformer transformer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPageTransformer", "(ZLandroid/support/v4/view/ViewPager$PageTransformer;)V", "GetSetPageTransformer_ZLandroid_support_v4_view_ViewPager_PageTransformer_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reverseDrawingOrder" Type="System.Boolean" />
        <Parameter Name="transformer" Type="Android.Support.V4.View.ViewPager+IPageTransformer" />
      </Parameters>
      <Docs>
        <param name="reverseDrawingOrder">true if the supplied PageTransformer requires page views
                            to be drawn from last to first instead of first to last.</param>
        <param name="transformer">PageTransformer that will modify each page's animation properties
</param>
        <summary>Set a <c><see cref="T:Android.Support.V4.View.ViewPager+IPageTransformer" /></c> that will be called for each attached page whenever
 the scroll position is changed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set a <c><see cref="T:Android.Support.V4.View.ViewPager+IPageTransformer" /></c> that will be called for each attached page whenever
 the scroll position is changed. This allows the application to apply custom property
 transformations to each page, overriding the default sliding look and feel.

 </para>
          <para tool="javadoc-to-mdoc">
            <i>Note:</i> Prior to Android 3.0 the property animation APIs did not exist.
 As a result, setting a PageTransformer prior to Android 3.0 (API 11) will have no effect.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewPager.html#setPageTransformer(boolean, android.support.v4.view.ViewPager.PageTransformer)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
