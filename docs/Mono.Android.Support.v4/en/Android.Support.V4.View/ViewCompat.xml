<Type Name="ViewCompat" FullName="Android.Support.V4.View.ViewCompat">
  <TypeSignature Language="C#" Value="public class ViewCompat : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ViewCompat extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android.Support.v4</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/support/v4/view/ViewCompat", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Helper for accessing features in <c><see cref="T:Android.Views.View" /></c> introduced after API
 level 4 in a backwards compatible fashion.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Helper for accessing features in <c><see cref="T:Android.Views.View" /></c> introduced after API
 level 4 in a backwards compatible fashion.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ViewCompat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#ViewCompat()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ViewCompat (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T}(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanScrollHorizontally">
      <MemberSignature Language="C#" Value="public static bool CanScrollHorizontally (Android.Views.View v, int direction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanScrollHorizontally(class Android.Views.View v, int32 direction) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("canScrollHorizontally", "(Landroid/view/View;I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="Android.Views.View" />
        <Parameter Name="direction" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="v">The View against which to invoke the method.</param>
        <param name="direction">Negative to check scrolling left, positive to check scrolling right.</param>
        <summary>Check if this view can be scrolled horizontally in a certain direction.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Check if this view can be scrolled horizontally in a certain direction.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#canScrollHorizontally(android.view.View, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="CanScrollVertically">
      <MemberSignature Language="C#" Value="public static bool CanScrollVertically (Android.Views.View v, int direction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanScrollVertically(class Android.Views.View v, int32 direction) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("canScrollVertically", "(Landroid/view/View;I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="Android.Views.View" />
        <Parameter Name="direction" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="v">The View against which to invoke the method.</param>
        <param name="direction">Negative to check scrolling up, positive to check scrolling down.</param>
        <summary>Check if this view can be scrolled vertically in a certain direction.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Check if this view can be scrolled vertically in a certain direction.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#canScrollVertically(android.view.View, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="GetAccessibilityNodeProvider">
      <MemberSignature Language="C#" Value="public static Android.Support.V4.View.Accessibility.AccessibilityNodeProviderCompat GetAccessibilityNodeProvider (Android.Views.View view);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Support.V4.View.Accessibility.AccessibilityNodeProviderCompat GetAccessibilityNodeProvider(class Android.Views.View view) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getAccessibilityNodeProvider", "(Landroid/view/View;)Landroid/support/v4/view/accessibility/AccessibilityNodeProviderCompat;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Support.V4.View.Accessibility.AccessibilityNodeProviderCompat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="view">The view whose property to get.</param>
        <summary>Gets the provider for managing a virtual view hierarchy rooted at this View
 and reported to <c><see cref="T:Android.AccessibilityServices.AccessibilityService" /></c>s
 that explore the window content.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the provider for managing a virtual view hierarchy rooted at this View
 and reported to <c><see cref="T:Android.AccessibilityServices.AccessibilityService" /></c>s
 that explore the window content.
 </para>
          <para tool="javadoc-to-mdoc">
 If this method returns an instance, this instance is responsible for managing
 <c><see cref="T:Android.Support.V4.View.Accessibility.AccessibilityNodeInfoCompat" /></c>s describing the virtual sub-tree rooted at
 this View including the one representing the View itself. Similarly the returned
 instance is responsible for performing accessibility actions on any virtual
 view or the root view itself.
 </para>
          <para tool="javadoc-to-mdoc">
 If an <c><see cref="T:Android.Support.V4.View.AccessibilityDelegateCompat" /></c> has been specified via calling
 <c><see cref="M:Android.Support.V4.View.ViewCompat.SetAccessibilityDelegate(Android.Views.View, Android.Support.V4.View.AccessibilityDelegateCompat)" /></c>
 is responsible for handling this call.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#getAccessibilityNodeProvider(android.view.View)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <altmember cref="T:Android.Support.V4.View.Accessibility.AccessibilityNodeProviderCompat" />
      </Docs>
    </Member>
    <Member MemberName="GetImportantForAccessibility">
      <MemberSignature Language="C#" Value="public static int GetImportantForAccessibility (Android.Views.View view);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetImportantForAccessibility(class Android.Views.View view) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getImportantForAccessibility", "(Landroid/view/View;)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="view">The view whose property to get.</param>
        <summary>Gets the mode for determining whether this View is important for accessibility
 which is if it fires accessibility events and if it is reported to
 accessibility services that query the screen.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the mode for determining whether this View is important for accessibility
 which is if it fires accessibility events and if it is reported to
 accessibility services that query the screen.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#getImportantForAccessibility(android.view.View)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <altmember cref="F:Android.Support.V4.View.ViewCompat.ImportantForAccessibilityYes" />
        <altmember cref="F:Android.Support.V4.View.ViewCompat.ImportantForAccessibilityNo" />
        <altmember cref="F:Android.Support.V4.View.ViewCompat.ImportantForAccessibilityAuto" />
      </Docs>
    </Member>
    <Member MemberName="GetLabelFor">
      <MemberSignature Language="C#" Value="public static int GetLabelFor (Android.Views.View view);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetLabelFor(class Android.Views.View view) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getLabelFor", "(Landroid/view/View;)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="view">The view on which to invoke the corresponding method.</param>
        <summary>Gets the id of a view for which a given view serves as a label for
 accessibility purposes.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the id of a view for which a given view serves as a label for
 accessibility purposes.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#getLabelFor(android.view.View)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="GetLayerType">
      <MemberSignature Language="C#" Value="public static int GetLayerType (Android.Views.View view);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetLayerType(class Android.Views.View view) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getLayerType", "(Landroid/view/View;)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="view">The view to fetch the layer type from</param>
        <summary>Indicates what type of layer is currently associated with this view.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates what type of layer is currently associated with this view. By default
 a view does not have a layer, and the layer type is <c><see cref="F:Android.Support.V4.View.ViewCompat.LayerTypeNone" /></c>.
 Refer to the documentation of
 <c><see cref="M:Android.Support.V4.View.ViewCompat.SetLayerType(Android.Views.View, System.Int32, System.Int32)" /></c>
 for more information on the different types of layers.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#getLayerType(android.view.View)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <altmember cref="M:Android.Support.V4.View.ViewCompat.SetLayerType(Android.Views.View, System.Int32, System.Int32)" />
        <altmember cref="F:Android.Support.V4.View.ViewCompat.LayerTypeNone" />
        <altmember cref="F:Android.Support.V4.View.ViewCompat.LayerTypeSoftware" />
        <altmember cref="F:Android.Support.V4.View.ViewCompat.LayerTypeHardware" />
      </Docs>
    </Member>
    <Member MemberName="GetLayoutDirection">
      <MemberSignature Language="C#" Value="public static int GetLayoutDirection (Android.Views.View view);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetLayoutDirection(class Android.Views.View view) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getLayoutDirection", "(Landroid/view/View;)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="view">View to get layout direction for</param>
        <summary>Returns the resolved layout direction for this view.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the resolved layout direction for this view.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#getLayoutDirection(android.view.View)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="GetOverScrollMode">
      <MemberSignature Language="C#" Value="public static int GetOverScrollMode (Android.Views.View v);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetOverScrollMode(class Android.Views.View v) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getOverScrollMode", "(Landroid/view/View;)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="v">The View against which to invoke the method.</param>
        <summary>Returns the over-scroll mode for this view.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the over-scroll mode for this view. The result will be
 one of <c><see cref="F:Android.Support.V4.View.ViewCompat.OverScrollAlways" /></c> (default), <c><see cref="F:Android.Support.V4.View.ViewCompat.OverScrollIfContentScrolls" /></c>
 (allow over-scrolling only if the view content is larger than the container),
 or <c><see cref="F:Android.Support.V4.View.ViewCompat.OverScrollNever" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#getOverScrollMode(android.view.View)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="GetParentForAccessibility">
      <MemberSignature Language="C#" Value="public static Android.Views.IViewParent GetParentForAccessibility (Android.Views.View view);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Views.IViewParent GetParentForAccessibility(class Android.Views.View view) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getParentForAccessibility", "(Landroid/view/View;)Landroid/view/ViewParent;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.IViewParent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="view">View to retrieve parent for</param>
        <summary>Gets the parent for accessibility purposes.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the parent for accessibility purposes. Note that the parent for
 accessibility is not necessary the immediate parent. It is the first
 predecessor that is important for accessibility.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#getParentForAccessibility(android.view.View)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="HasTransientState">
      <MemberSignature Language="C#" Value="public static bool HasTransientState (Android.Views.View view);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HasTransientState(class Android.Views.View view) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("hasTransientState", "(Landroid/view/View;)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="view">View to check for transient state</param>
        <summary>Indicates whether the view is currently tracking transient state that the
 app should not need to concern itself with saving and restoring, but that
 the framework should take special note to preserve when possible.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates whether the view is currently tracking transient state that the
 app should not need to concern itself with saving and restoring, but that
 the framework should take special note to preserve when possible.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#hasTransientState(android.view.View)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="ImportantForAccessibilityAuto">
      <MemberSignature Language="C#" Value="public const int ImportantForAccessibilityAuto = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ImportantForAccessibilityAuto = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("IMPORTANT_FOR_ACCESSIBILITY_AUTO")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Automatically determine whether a view is important for accessibility.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Automatically determine whether a view is important for accessibility.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#IMPORTANT_FOR_ACCESSIBILITY_AUTO" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="ImportantForAccessibilityNo">
      <MemberSignature Language="C#" Value="public const int ImportantForAccessibilityNo = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ImportantForAccessibilityNo = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("IMPORTANT_FOR_ACCESSIBILITY_NO")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>The view is not important for accessibility.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The view is not important for accessibility.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#IMPORTANT_FOR_ACCESSIBILITY_NO" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="ImportantForAccessibilityYes">
      <MemberSignature Language="C#" Value="public const int ImportantForAccessibilityYes = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ImportantForAccessibilityYes = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("IMPORTANT_FOR_ACCESSIBILITY_YES")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>The view is important for accessibility.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The view is important for accessibility.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#IMPORTANT_FOR_ACCESSIBILITY_YES" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="LayerTypeHardware">
      <MemberSignature Language="C#" Value="public const int LayerTypeHardware = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 LayerTypeHardware = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LAYER_TYPE_HARDWARE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Indicates that the view has a hardware layer. A hardware layer is backed
 by a hardware specific texture (generally Frame Buffer Objects or FBO on
 OpenGL hardware) and causes the view to be rendered using Android's hardware
 rendering pipeline, but only if hardware acceleration is turned on for the
 view hierarchy. When hardware acceleration is turned off, hardware layers
 behave exactly as <c><see cref="F:Android.Support.V4.View.ViewCompat.LayerTypeSoftware" /></c>.</para>
          <para tool="javadoc-to-mdoc">A hardware layer is useful to apply a specific color filter and/or
 blending mode and/or translucency to a view and all its children.</para>
          <para tool="javadoc-to-mdoc">A hardware layer can be used to cache a complex view tree into a
 texture and reduce the complexity of drawing operations. For instance,
 when animating a complex view tree with a translation, a hardware layer can
 be used to render the view tree only once.</para>
          <para tool="javadoc-to-mdoc">A hardware layer can also be used to increase the rendering quality when
 rotation transformations are applied on a view. It can also be used to
 prevent potential clipping issues when applying 3D transforms on a view.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#LAYER_TYPE_HARDWARE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="LayerTypeNone">
      <MemberSignature Language="C#" Value="public const int LayerTypeNone = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 LayerTypeNone = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LAYER_TYPE_NONE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Indicates that the view does not have a layer.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates that the view does not have a layer.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#LAYER_TYPE_NONE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="LayerTypeSoftware">
      <MemberSignature Language="C#" Value="public const int LayerTypeSoftware = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 LayerTypeSoftware = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LAYER_TYPE_SOFTWARE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Indicates that the view has a software layer. A software layer is backed
 by a bitmap and causes the view to be rendered using Android's software
 rendering pipeline, even if hardware acceleration is enabled.</para>
          <para tool="javadoc-to-mdoc">Software layers have various usages:</para>
          <para tool="javadoc-to-mdoc">When the application is not using hardware acceleration, a software layer
 is useful to apply a specific color filter and/or blending mode and/or
 translucency to a view and all its children.</para>
          <para tool="javadoc-to-mdoc">When the application is using hardware acceleration, a software layer
 is useful to render drawing primitives not supported by the hardware
 accelerated pipeline. It can also be used to cache a complex view tree
 into a texture and reduce the complexity of drawing operations. For instance,
 when animating a complex view tree with a translation, a software layer can
 be used to render the view tree only once.</para>
          <para tool="javadoc-to-mdoc">Software layers should be avoided when the affected view tree updates
 often. Every update will require to re-render the software layer, which can
 potentially be slow (particularly when hardware acceleration is turned on
 since the layer will have to be uploaded into a hardware texture after every
 update.)</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#LAYER_TYPE_SOFTWARE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="LayoutDirectionInherit">
      <MemberSignature Language="C#" Value="public const int LayoutDirectionInherit = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 LayoutDirectionInherit = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LAYOUT_DIRECTION_INHERIT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Horizontal layout direction of this view is inherited from its parent.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Horizontal layout direction of this view is inherited from its parent.
 Use with <c><see cref="M:Android.Support.V4.View.ViewCompat.SetLayoutDirection(Android.Views.View, System.Int32)" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#LAYOUT_DIRECTION_INHERIT" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="LayoutDirectionLocale">
      <MemberSignature Language="C#" Value="public const int LayoutDirectionLocale = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 LayoutDirectionLocale = (3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LAYOUT_DIRECTION_LOCALE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Horizontal layout direction of this view is from deduced from the default language
 script for the locale.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Horizontal layout direction of this view is from deduced from the default language
 script for the locale. Use with <c><see cref="M:Android.Support.V4.View.ViewCompat.SetLayoutDirection(Android.Views.View, System.Int32)" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#LAYOUT_DIRECTION_LOCALE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="LayoutDirectionLtr">
      <MemberSignature Language="C#" Value="public const int LayoutDirectionLtr = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 LayoutDirectionLtr = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LAYOUT_DIRECTION_LTR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Horizontal layout direction of this view is from Left to Right.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Horizontal layout direction of this view is from Left to Right.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#LAYOUT_DIRECTION_LTR" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="LayoutDirectionRtl">
      <MemberSignature Language="C#" Value="public const int LayoutDirectionRtl = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 LayoutDirectionRtl = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LAYOUT_DIRECTION_RTL")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Horizontal layout direction of this view is from Right to Left.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Horizontal layout direction of this view is from Right to Left.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#LAYOUT_DIRECTION_RTL" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnInitializeAccessibilityEvent">
      <MemberSignature Language="C#" Value="public static void OnInitializeAccessibilityEvent (Android.Views.View v, Android.Views.Accessibility.AccessibilityEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void OnInitializeAccessibilityEvent(class Android.Views.View v, class Android.Views.Accessibility.AccessibilityEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onInitializeAccessibilityEvent", "(Landroid/view/View;Landroid/view/accessibility/AccessibilityEvent;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="Android.Views.View" />
        <Parameter Name="e" Type="Android.Views.Accessibility.AccessibilityEvent" />
      </Parameters>
      <Docs>
        <param name="v">The View against which to invoke the method.</param>
        <param name="e">The event to initialize.</param>
        <summary>Initializes an <c><see cref="T:Android.Views.Accessibility.AccessibilityEvent" /></c> with information about
 this View which is the event source.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Initializes an <c><see cref="T:Android.Views.Accessibility.AccessibilityEvent" /></c> with information about
 this View which is the event source. In other words, the source of
 an accessibility event is the view whose state change triggered firing
 the event.
 </para>
          <para tool="javadoc-to-mdoc">
 Example: Setting the password property of an event in addition
          to properties set by the super implementation:
 <example><code lang="java"> public void onInitializeAccessibilityEvent(AccessibilityEvent event) {
     super.onInitializeAccessibilityEvent(event);
     event.setPassword(true);
 }</code></example></para>
          <para tool="javadoc-to-mdoc">
 If an <c><see cref="T:Android.Views.View+AccessibilityDelegate" /></c> has been specified via calling
 <c><see cref="M:Android.Views.View.SetAccessibilityDelegate(Android.Views.View.AccessibilityDelegate)" /></c> its
 <c><see cref="M:Android.Views.View.AccessibilityDelegate.OnInitializeAccessibilityEvent(Android.Views.View, Android.Views.Accessibility.AccessibilityEvent)" /></c>
 is responsible for handling this call.
 </para>
          <para tool="javadoc-to-mdoc">
            <i>Note:</i> Always call the super implementation before adding
 information to the event, in case the default implementation has basic information to add.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#onInitializeAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <altmember cref="M:Android.Views.View.SendAccessibilityEvent(Android.Views.Accessibility.EventTypes)" />
        <altmember cref="M:Android.Views.View.DispatchPopulateAccessibilityEvent(Android.Views.Accessibility.AccessibilityEvent)" />
      </Docs>
    </Member>
    <Member MemberName="OnInitializeAccessibilityNodeInfo">
      <MemberSignature Language="C#" Value="public static void OnInitializeAccessibilityNodeInfo (Android.Views.View v, Android.Support.V4.View.Accessibility.AccessibilityNodeInfoCompat info);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void OnInitializeAccessibilityNodeInfo(class Android.Views.View v, class Android.Support.V4.View.Accessibility.AccessibilityNodeInfoCompat info) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onInitializeAccessibilityNodeInfo", "(Landroid/view/View;Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="Android.Views.View" />
        <Parameter Name="info" Type="Android.Support.V4.View.Accessibility.AccessibilityNodeInfoCompat" />
      </Parameters>
      <Docs>
        <param name="v">The View against which to invoke the method.</param>
        <param name="info">The instance to initialize.
</param>
        <summary>Initializes an <c><see cref="T:Android.Views.Accessibility.AccessibilityNodeInfo" /></c> with information
 about this view.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Initializes an <c><see cref="T:Android.Views.Accessibility.AccessibilityNodeInfo" /></c> with information
 about this view. The base implementation sets:
 <list type="bullet"><item><term><c><see cref="M:Android.Views.Accessibility.AccessibilityNodeInfo.SetParent(Android.Views.View)" /></c>,</term></item><item><term><c><see cref="M:Android.Views.Accessibility.AccessibilityNodeInfo.SetBoundsInParent(Android.Graphics.Rect)" /></c>,</term></item><item><term><c><see cref="M:Android.Views.Accessibility.AccessibilityNodeInfo.SetBoundsInScreen(Android.Graphics.Rect)" /></c>,</term></item><item><term><c><see cref="P:Android.Views.Accessibility.AccessibilityNodeInfo.PackageNameFormatted" /></c>,</term></item><item><term><c><see cref="P:Android.Views.Accessibility.AccessibilityNodeInfo.ClassNameFormatted" /></c>,</term></item><item><term><c><see cref="P:Android.Views.Accessibility.AccessibilityNodeInfo.ContentDescriptionFormatted" /></c>,</term></item><item><term><c><see cref="P:Android.Views.Accessibility.AccessibilityNodeInfo.Enabled" /></c>,</term></item><item><term><c><see cref="P:Android.Views.Accessibility.AccessibilityNodeInfo.Clickable" /></c>,</term></item><item><term><c><see cref="P:Android.Views.Accessibility.AccessibilityNodeInfo.Focusable" /></c>,</term></item><item><term><c><see cref="P:Android.Views.Accessibility.AccessibilityNodeInfo.Focused" /></c>,</term></item><item><term><c><see cref="P:Android.Views.Accessibility.AccessibilityNodeInfo.LongClickable" /></c>,</term></item><item><term><c><see cref="P:Android.Views.Accessibility.AccessibilityNodeInfo.Selected" /></c>,</term></item></list></para>
          <para tool="javadoc-to-mdoc">
 Subclasses should override this method, call the super implementation,
 and set additional attributes.
 </para>
          <para tool="javadoc-to-mdoc">
 If an <c><see cref="T:Android.Views.View+AccessibilityDelegate" /></c> has been specified via calling
 <c><see cref="M:Android.Views.View.SetAccessibilityDelegate(Android.Views.View.AccessibilityDelegate)" /></c> its
 <c><see cref="M:Android.Views.View.AccessibilityDelegate.OnInitializeAccessibilityNodeInfo(Android.Views.View, Android.Views.Accessibility.AccessibilityNodeInfo)" /></c>
 is responsible for handling this call.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#onInitializeAccessibilityNodeInfo(android.view.View, android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnPopulateAccessibilityEvent">
      <MemberSignature Language="C#" Value="public static void OnPopulateAccessibilityEvent (Android.Views.View v, Android.Views.Accessibility.AccessibilityEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void OnPopulateAccessibilityEvent(class Android.Views.View v, class Android.Views.Accessibility.AccessibilityEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onPopulateAccessibilityEvent", "(Landroid/view/View;Landroid/view/accessibility/AccessibilityEvent;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="Android.Views.View" />
        <Parameter Name="e" Type="Android.Views.Accessibility.AccessibilityEvent" />
      </Parameters>
      <Docs>
        <param name="v">The View against which to invoke the method.</param>
        <param name="e">The accessibility event which to populate.</param>
        <summary>Called from <c><see cref="M:Android.Views.View.DispatchPopulateAccessibilityEvent(Android.Views.Accessibility.AccessibilityEvent)" /></c>
 giving a chance to this View to populate the accessibility event with its
 text content.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called from <c><see cref="M:Android.Views.View.DispatchPopulateAccessibilityEvent(Android.Views.Accessibility.AccessibilityEvent)" /></c>
 giving a chance to this View to populate the accessibility event with its
 text content. While this method is free to modify event
 attributes other than text content, doing so should normally be performed in
 <c><see cref="M:Android.Views.View.OnInitializeAccessibilityEvent(Android.Views.Accessibility.AccessibilityEvent)" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
 Example: Adding formatted date string to an accessibility event in addition
          to the text added by the super implementation:
 <example><code lang="java"> public void onPopulateAccessibilityEvent(AccessibilityEvent event) {
     super.onPopulateAccessibilityEvent(event);
     final int flags = DateUtils.FORMAT_SHOW_DATE | DateUtils.FORMAT_SHOW_WEEKDAY;
     String selectedDateUtterance = DateUtils.formatDateTime(mContext,
         mCurrentDate.getTimeInMillis(), flags);
     event.getText().add(selectedDateUtterance);
 }</code></example></para>
          <para tool="javadoc-to-mdoc">
 If an <c><see cref="T:Android.Views.View+AccessibilityDelegate" /></c> has been specified via calling
 <c><see cref="M:Android.Views.View.SetAccessibilityDelegate(Android.Views.View.AccessibilityDelegate)" /></c> its
 <c><see cref="M:Android.Views.View.AccessibilityDelegate.OnPopulateAccessibilityEvent(Android.Views.View, Android.Views.Accessibility.AccessibilityEvent)" /></c>
 is responsible for handling this call.
 </para>
          <para tool="javadoc-to-mdoc">
            <i>Note:</i> Always call the super implementation before adding
 information to the event, in case the default implementation has basic information to add.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#onPopulateAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <altmember cref="M:Android.Views.View.SendAccessibilityEvent(Android.Views.Accessibility.EventTypes)" />
        <altmember cref="M:Android.Views.View.DispatchPopulateAccessibilityEvent(Android.Views.Accessibility.AccessibilityEvent)" />
      </Docs>
    </Member>
    <Member MemberName="OverScrollAlways">
      <MemberSignature Language="C#" Value="public const int OverScrollAlways = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 OverScrollAlways = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("OVER_SCROLL_ALWAYS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Always allow a user to over-scroll this view, provided it is a
 view that can scroll.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Always allow a user to over-scroll this view, provided it is a
 view that can scroll.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#OVER_SCROLL_ALWAYS" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OverScrollIfContentScrolls">
      <MemberSignature Language="C#" Value="public const int OverScrollIfContentScrolls = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 OverScrollIfContentScrolls = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("OVER_SCROLL_IF_CONTENT_SCROLLS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Allow a user to over-scroll this view only if the content is large
 enough to meaningfully scroll, provided it is a view that can scroll.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Allow a user to over-scroll this view only if the content is large
 enough to meaningfully scroll, provided it is a view that can scroll.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#OVER_SCROLL_IF_CONTENT_SCROLLS" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OverScrollNever">
      <MemberSignature Language="C#" Value="public const int OverScrollNever = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 OverScrollNever = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("OVER_SCROLL_NEVER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Never allow a user to over-scroll this view.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Never allow a user to over-scroll this view.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#OVER_SCROLL_NEVER" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="PerformAccessibilityAction">
      <MemberSignature Language="C#" Value="public static bool PerformAccessibilityAction (Android.Views.View view, int action, Android.OS.Bundle arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool PerformAccessibilityAction(class Android.Views.View view, int32 action, class Android.OS.Bundle arguments) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("performAccessibilityAction", "(Landroid/view/View;ILandroid/os/Bundle;)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="action" Type="System.Int32" />
        <Parameter Name="arguments" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <param name="action">The action to perform.</param>
        <param name="arguments">Optional action arguments.</param>
        <summary>Performs the specified accessibility action on the view.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Performs the specified accessibility action on the view. For
 possible accessibility actions look at <c><see cref="T:Android.Support.V4.View.Accessibility.AccessibilityNodeInfoCompat" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
 If an <c><see cref="T:Android.Support.V4.View.AccessibilityDelegateCompat" /></c> has been specified via calling
 <c><see cref="M:Android.Support.V4.View.ViewCompat.SetAccessibilityDelegate(Android.Views.View, Android.Support.V4.View.AccessibilityDelegateCompat)" /></c> its
 <c><see cref="M:Android.Support.V4.View.AccessibilityDelegateCompat.PerformAccessibilityAction(Android.Views.View, System.Int32, System.Int32)" /></c>
 is responsible for handling this call.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#performAccessibilityAction(android.view.View, int, android.os.Bundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="PostInvalidateOnAnimation">
      <MemberSignature Language="C#" Value="public static void PostInvalidateOnAnimation (Android.Views.View view);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PostInvalidateOnAnimation(class Android.Views.View view) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("postInvalidateOnAnimation", "(Landroid/view/View;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="view">View to invalidate
</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Cause an invalidate to happen on the next animation time step, typically the
 next display frame.</para>
          <para tool="javadoc-to-mdoc">This method can be invoked from outside of the UI thread
 only when this View is attached to a window.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#postInvalidateOnAnimation(android.view.View)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="PostInvalidateOnAnimation">
      <MemberSignature Language="C#" Value="public static void PostInvalidateOnAnimation (Android.Views.View view, int left, int top, int right, int bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PostInvalidateOnAnimation(class Android.Views.View view, int32 left, int32 top, int32 right, int32 bottom) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("postInvalidateOnAnimation", "(Landroid/view/View;IIII)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="view">View to invalidate</param>
        <param name="left">The left coordinate of the rectangle to invalidate.</param>
        <param name="top">The top coordinate of the rectangle to invalidate.</param>
        <param name="right">The right coordinate of the rectangle to invalidate.</param>
        <param name="bottom">The bottom coordinate of the rectangle to invalidate.
</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Cause an invalidate of the specified area to happen on the next animation
 time step, typically the next display frame.</para>
          <para tool="javadoc-to-mdoc">This method can be invoked from outside of the UI thread
 only when this View is attached to a window.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#postInvalidateOnAnimation(android.view.View, int, int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="PostOnAnimation">
      <MemberSignature Language="C#" Value="public static void PostOnAnimation (Android.Views.View view, Java.Lang.IRunnable action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PostOnAnimation(class Android.Views.View view, class Java.Lang.IRunnable action) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("postOnAnimation", "(Landroid/view/View;Ljava/lang/Runnable;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="action" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="view">View to post this Runnable to</param>
        <param name="action">The Runnable that will be executed.
</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Causes the Runnable to execute on the next animation time step.
 The runnable will be run on the user interface thread.</para>
          <para tool="javadoc-to-mdoc">This method can be invoked from outside of the UI thread
 only when this View is attached to a window.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#postOnAnimation(android.view.View, java.lang.Runnable)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="PostOnAnimationDelayed">
      <MemberSignature Language="C#" Value="public static void PostOnAnimationDelayed (Android.Views.View view, Java.Lang.IRunnable action, long delayMillis);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PostOnAnimationDelayed(class Android.Views.View view, class Java.Lang.IRunnable action, int64 delayMillis) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("postOnAnimationDelayed", "(Landroid/view/View;Ljava/lang/Runnable;J)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="action" Type="Java.Lang.IRunnable" />
        <Parameter Name="delayMillis" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="view">The view to post this Runnable to</param>
        <param name="action">The Runnable that will be executed.</param>
        <param name="delayMillis">The delay (in milliseconds) until the Runnable
        will be executed.
</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Causes the Runnable to execute on the next animation time step,
 after the specified amount of time elapses.
 The runnable will be run on the user interface thread.</para>
          <para tool="javadoc-to-mdoc">This method can be invoked from outside of the UI thread
 only when this View is attached to a window.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#postOnAnimationDelayed(android.view.View, java.lang.Runnable, long)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="SetAccessibilityDelegate">
      <MemberSignature Language="C#" Value="public static void SetAccessibilityDelegate (Android.Views.View v, Android.Support.V4.View.AccessibilityDelegateCompat delegate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAccessibilityDelegate(class Android.Views.View v, class Android.Support.V4.View.AccessibilityDelegateCompat delegate) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAccessibilityDelegate", "(Landroid/view/View;Landroid/support/v4/view/AccessibilityDelegateCompat;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="Android.Views.View" />
        <Parameter Name="delegate" Type="Android.Support.V4.View.AccessibilityDelegateCompat" />
      </Parameters>
      <Docs>
        <param name="v">The View against which to invoke the method.</param>
        <param name="delegate">The delegate instance.</param>
        <summary>Sets a delegate for implementing accessibility support via compositon as
 opposed to inheritance.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets a delegate for implementing accessibility support via compositon as
 opposed to inheritance. The delegate's primary use is for implementing
 backwards compatible widgets. For more details see
 <c><see cref="T:Android.Views.View+AccessibilityDelegate" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#setAccessibilityDelegate(android.view.View, android.support.v4.view.AccessibilityDelegateCompat)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <altmember cref="T:Android.Views.View+AccessibilityDelegate" />
      </Docs>
    </Member>
    <Member MemberName="SetHasTransientState">
      <MemberSignature Language="C#" Value="public static void SetHasTransientState (Android.Views.View view, bool hasTransientState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetHasTransientState(class Android.Views.View view, bool hasTransientState) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setHasTransientState", "(Landroid/view/View;Z)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="hasTransientState" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="view">View tracking transient state</param>
        <param name="hasTransientState">true if this view has transient state
</param>
        <summary>Set whether this view is currently tracking transient state that the
 framework should attempt to preserve when possible.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set whether this view is currently tracking transient state that the
 framework should attempt to preserve when possible.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#setHasTransientState(android.view.View, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="SetImportantForAccessibility">
      <MemberSignature Language="C#" Value="public static void SetImportantForAccessibility (Android.Views.View view, int mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetImportantForAccessibility(class Android.Views.View view, int32 mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setImportantForAccessibility", "(Landroid/view/View;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="mode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="view">The view whose property to set.</param>
        <param name="mode">How to determine whether this view is important for accessibility.</param>
        <summary>Sets how to determine whether this view is important for accessibility
 which is if it fires accessibility events and if it is reported to
 accessibility services that query the screen.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets how to determine whether this view is important for accessibility
 which is if it fires accessibility events and if it is reported to
 accessibility services that query the screen.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#setImportantForAccessibility(android.view.View, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <altmember cref="F:Android.Support.V4.View.ViewCompat.ImportantForAccessibilityYes" />
        <altmember cref="F:Android.Support.V4.View.ViewCompat.ImportantForAccessibilityNo" />
        <altmember cref="F:Android.Support.V4.View.ViewCompat.ImportantForAccessibilityAuto" />
      </Docs>
    </Member>
    <Member MemberName="SetLabelFor">
      <MemberSignature Language="C#" Value="public static void SetLabelFor (Android.Views.View view, int labeledId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetLabelFor(class Android.Views.View view, int32 labeledId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLabelFor", "(Landroid/view/View;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="labeledId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="view">The view on which to invoke the corresponding method.</param>
        <param name="labeledId">The labeled view id.
</param>
        <summary>Sets the id of a view for which a given view serves as a label for
 accessibility purposes.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the id of a view for which a given view serves as a label for
 accessibility purposes.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#setLabelFor(android.view.View, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="SetLayerPaint">
      <MemberSignature Language="C#" Value="public static void SetLayerPaint (Android.Views.View view, Android.Graphics.Paint paint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetLayerPaint(class Android.Views.View view, class Android.Graphics.Paint paint) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLayerPaint", "(Landroid/view/View;Landroid/graphics/Paint;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="paint" Type="Android.Graphics.Paint" />
      </Parameters>
      <Docs>
        <param name="view">View to set a layer paint for</param>
        <param name="paint">The paint used to compose the layer. This argument is optional
        and can be null. It is ignored when the layer type is
        <c><see cref="F:Android.Support.V4.View.ViewCompat.LayerTypeNone" /></c></param>
        <summary>Updates the <c><see cref="T:Android.Graphics.Paint" /></c> object used with the current layer (used only if the current
 layer type is not set to <c><see cref="F:Android.Support.V4.View.ViewCompat.LayerTypeNone" /></c>).</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Updates the <c><see cref="T:Android.Graphics.Paint" /></c> object used with the current layer (used only if the current
 layer type is not set to <c><see cref="F:Android.Support.V4.View.ViewCompat.LayerTypeNone" /></c>). Changed properties of the Paint
 provided to <c><see cref="M:Android.Support.V4.View.ViewCompat.SetLayerType(Android.Views.View, System.Int32, System.Int32)" /></c>
 will be used the next time the View is redrawn, but
 <c><see cref="M:Android.Support.V4.View.ViewCompat.SetLayerPaint(Android.Views.View, Android.Graphics.Paint)" /></c>
 must be called to ensure that the view gets redrawn immediately.

 <list type="bullet"><item><term><c><see cref="P:Android.Graphics.Paint.Alpha" /></c></term></item><item><term><c><see cref="P:Android.Graphics.Paint.Xfermode" /></c></term></item><item><term><c><see cref="P:Android.Graphics.Paint.ColorFilter" /></c></term></item></list></para>
          <para tool="javadoc-to-mdoc">A layer is associated with an optional <c><see cref="T:Android.Graphics.Paint" /></c>
 instance that controls how the layer is composed on screen. The following
 properties of the paint are taken into account when composing the layer:</para>
          <para tool="javadoc-to-mdoc">If this view has an alpha value set to </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#setLayerPaint(android.view.View, android.graphics.Paint)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <altmember cref="M:Android.Support.V4.View.ViewCompat.SetLayerType(Android.Views.View, System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SetLayerType">
      <MemberSignature Language="C#" Value="public static void SetLayerType (Android.Views.View view, int layerType, Android.Graphics.Paint paint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetLayerType(class Android.Views.View view, int32 layerType, class Android.Graphics.Paint paint) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLayerType", "(Landroid/view/View;ILandroid/graphics/Paint;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="layerType" Type="System.Int32" />
        <Parameter Name="paint" Type="Android.Graphics.Paint" />
      </Parameters>
      <Docs>
        <param name="view">View to set the layer type for</param>
        <param name="layerType">The type of layer to use with this view, must be one of
        <c><see cref="F:Android.Support.V4.View.ViewCompat.LayerTypeNone" /></c>, <c><see cref="F:Android.Support.V4.View.ViewCompat.LayerTypeSoftware" /></c> or
        <c><see cref="F:Android.Support.V4.View.ViewCompat.LayerTypeHardware" /></c></param>
        <param name="paint">The paint used to compose the layer. This argument is optional
        and can be null. It is ignored when the layer type is
        <c><see cref="F:Android.Support.V4.View.ViewCompat.LayerTypeNone" /></c></param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Specifies the type of layer backing this view. The layer can be
 <c><see cref="F:Android.Support.V4.View.ViewCompat.LayerTypeNone" /></c>, <c><see cref="F:Android.Support.V4.View.ViewCompat.LayerTypeSoftware" /></c> or
 <c><see cref="F:Android.Support.V4.View.ViewCompat.LayerTypeHardware" /></c>.</para>
          <para tool="javadoc-to-mdoc">A layer is associated with an optional <c><see cref="T:Android.Graphics.Paint" /></c>
 instance that controls how the layer is composed on screen. The following
 properties of the paint are taken into account when composing the layer:</para>
          <list type="bullet">
            <item>
              <term>
                <c>
                  <see cref="P:Android.Graphics.Paint.Alpha" />
                </c>
              </term>
            </item>
            <item>
              <term>
                <c>
                  <see cref="P:Android.Graphics.Paint.Xfermode" />
                </c>
              </term>
            </item>
            <item>
              <term>
                <c>
                  <see cref="P:Android.Graphics.Paint.ColorFilter" />
                </c>
              </term>
            </item>
          </list>
          <para tool="javadoc-to-mdoc">If this view has an alpha value set to </para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Refer to the documentation of <c><see cref="F:Android.Support.V4.View.ViewCompat.LayerTypeNone" /></c>,
 <c><see cref="F:Android.Support.V4.View.ViewCompat.LayerTypeSoftware" /></c> and <c><see cref="F:Android.Support.V4.View.ViewCompat.LayerTypeHardware" /></c>
 for more information on when and how to use layers.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#setLayerType(android.view.View, int, android.graphics.Paint)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="SetLayoutDirection">
      <MemberSignature Language="C#" Value="public static void SetLayoutDirection (Android.Views.View view, int layoutDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetLayoutDirection(class Android.Views.View view, int32 layoutDirection) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLayoutDirection", "(Landroid/view/View;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="layoutDirection" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="view">View to set layout direction for</param>
        <param name="layoutDirection">the layout direction to set. Should be one of:

 <c><see cref="F:Android.Support.V4.View.ViewCompat.LayoutDirectionLtr" /></c>,
 <c><see cref="F:Android.Support.V4.View.ViewCompat.LayoutDirectionRtl" /></c>,
 <c><see cref="F:Android.Support.V4.View.ViewCompat.LayoutDirectionInherit" /></c>,
 <c><see cref="F:Android.Support.V4.View.ViewCompat.LayoutDirectionLocale" /></c>.

 Resolution will be done if the value is set to LAYOUT_DIRECTION_INHERIT. The resolution
 proceeds up the parent chain of the view to get the value. If there is no parent, then it
 will return the default <c><see cref="F:Android.Support.V4.View.ViewCompat.LayoutDirectionLtr" /></c>.
</param>
        <summary>Set the layout direction for this view.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the layout direction for this view. This will propagate a reset of layout direction
 resolution to the view's children and resolve layout direction for this view.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#setLayoutDirection(android.view.View, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="SetOverScrollMode">
      <MemberSignature Language="C#" Value="public static void SetOverScrollMode (Android.Views.View v, int overScrollMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetOverScrollMode(class Android.Views.View v, int32 overScrollMode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOverScrollMode", "(Landroid/view/View;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="Android.Views.View" />
        <Parameter Name="overScrollMode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="v">The View against which to invoke the method.</param>
        <param name="overScrollMode">The new over-scroll mode for this view.
</param>
        <summary>Set the over-scroll mode for this view.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the over-scroll mode for this view. Valid over-scroll modes are
 <c><see cref="F:Android.Support.V4.View.ViewCompat.OverScrollAlways" /></c> (default), <c><see cref="F:Android.Support.V4.View.ViewCompat.OverScrollIfContentScrolls" /></c>
 (allow over-scrolling only if the view content is larger than the container),
 or <c><see cref="F:Android.Support.V4.View.ViewCompat.OverScrollNever" /></c>.

 Setting the over-scroll mode of a view will have an effect only if the
 view is capable of scrolling.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/view/ViewCompat.html#setOverScrollMode(android.view.View, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
