<Type Name="ViewDragHelper+Callback" FullName="Android.Support.V4.Widget.ViewDragHelper+Callback">
  <TypeSignature Language="C#" Value="public abstract class ViewDragHelper.Callback : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi abstract beforefieldinit ViewDragHelper/Callback extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android.Support.v4</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/support/v4/widget/ViewDragHelper$Callback", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A Callback is used as a communication channel with the ViewDragHelper back to the
 parent view using it.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">A Callback is used as a communication channel with the ViewDragHelper back to the
 parent view using it. <c>on*</c>methods are invoked on siginficant events and several
 accessor methods are expected to provide the ViewDragHelper with more information
 about the state of the parent view upon request. The callback also makes decisions
 governing the range and draggability of child views.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/support/v4/widget/ViewDragHelper.Callback.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Callback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/widget/ViewDragHelper.Callback.html#ViewDragHelper.Callback()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Callback (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject``1(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClampViewPositionHorizontal">
      <MemberSignature Language="C#" Value="public virtual int ClampViewPositionHorizontal (Android.Views.View child, int left, int dx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ClampViewPositionHorizontal(class Android.Views.View child, int32 left, int32 dx) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clampViewPositionHorizontal", "(Landroid/view/View;II)I", "GetClampViewPositionHorizontal_Landroid_view_View_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Android.Views.View" />
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="dx" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="child">Child view being dragged</param>
        <param name="left">Attempted motion along the X axis</param>
        <param name="dx">Proposed change in position for left</param>
        <summary>Restrict the motion of the dragged child view along the horizontal axis.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Restrict the motion of the dragged child view along the horizontal axis.
 The default implementation does not allow horizontal motion; the extending
 class must override this method and provide the desired clamping.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/widget/ViewDragHelper.Callback.html#clampViewPositionHorizontal(android.view.View, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="ClampViewPositionVertical">
      <MemberSignature Language="C#" Value="public virtual int ClampViewPositionVertical (Android.Views.View child, int top, int dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ClampViewPositionVertical(class Android.Views.View child, int32 top, int32 dy) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clampViewPositionVertical", "(Landroid/view/View;II)I", "GetClampViewPositionVertical_Landroid_view_View_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Android.Views.View" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="dy" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="child">Child view being dragged</param>
        <param name="top">Attempted motion along the Y axis</param>
        <param name="dy">Proposed change in position for top</param>
        <summary>Restrict the motion of the dragged child view along the vertical axis.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Restrict the motion of the dragged child view along the vertical axis.
 The default implementation does not allow vertical motion; the extending
 class must override this method and provide the desired clamping.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/widget/ViewDragHelper.Callback.html#clampViewPositionVertical(android.view.View, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="GetOrderedChildIndex">
      <MemberSignature Language="C#" Value="public virtual int GetOrderedChildIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetOrderedChildIndex(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getOrderedChildIndex", "(I)I", "GetGetOrderedChildIndex_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">the ordered position to query for</param>
        <summary>Called to determine the Z-order of child views.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Called to determine the Z-order of child views.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/widget/ViewDragHelper.Callback.html#getOrderedChildIndex(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="GetViewHorizontalDragRange">
      <MemberSignature Language="C#" Value="public virtual int GetViewHorizontalDragRange (Android.Views.View child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetViewHorizontalDragRange(class Android.Views.View child) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getViewHorizontalDragRange", "(Landroid/view/View;)I", "GetGetViewHorizontalDragRange_Landroid_view_View_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="child">Child view to check</param>
        <summary>Return the magnitude of a draggable child view's horizontal range of motion in pixels.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the magnitude of a draggable child view's horizontal range of motion in pixels.
 This method should return 0 for views that cannot move horizontally.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/widget/ViewDragHelper.Callback.html#getViewHorizontalDragRange(android.view.View)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="GetViewVerticalDragRange">
      <MemberSignature Language="C#" Value="public virtual int GetViewVerticalDragRange (Android.Views.View child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetViewVerticalDragRange(class Android.Views.View child) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getViewVerticalDragRange", "(Landroid/view/View;)I", "GetGetViewVerticalDragRange_Landroid_view_View_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="child">Child view to check</param>
        <summary>Return the magnitude of a draggable child view's vertical range of motion in pixels.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the magnitude of a draggable child view's vertical range of motion in pixels.
 This method should return 0 for views that cannot move vertically.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/widget/ViewDragHelper.Callback.html#getViewVerticalDragRange(android.view.View)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnEdgeDragStarted">
      <MemberSignature Language="C#" Value="public virtual void OnEdgeDragStarted (int edgeFlags, int pointerId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnEdgeDragStarted(int32 edgeFlags, int32 pointerId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onEdgeDragStarted", "(II)V", "GetOnEdgeDragStarted_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edgeFlags" Type="System.Int32" />
        <Parameter Name="pointerId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="edgeFlags">A combination of edge flags describing the edge(s) dragged</param>
        <param name="pointerId">ID of the pointer touching the described edge(s)</param>
        <summary>Called when the user has started a deliberate drag away from one
 of the subscribed edges in the parent view while no child view is currently captured.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when the user has started a deliberate drag away from one
 of the subscribed edges in the parent view while no child view is currently captured.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/widget/ViewDragHelper.Callback.html#onEdgeDragStarted(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <altmember cref="F:Android.Support.V4.Widget.ViewDragHelper.EdgeLeft" />
        <altmember cref="F:Android.Support.V4.Widget.ViewDragHelper.EdgeTop" />
        <altmember cref="F:Android.Support.V4.Widget.ViewDragHelper.EdgeRight" />
        <altmember cref="F:Android.Support.V4.Widget.ViewDragHelper.EdgeBottom" />
      </Docs>
    </Member>
    <Member MemberName="OnEdgeLock">
      <MemberSignature Language="C#" Value="public virtual bool OnEdgeLock (int edgeFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnEdgeLock(int32 edgeFlags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onEdgeLock", "(I)Z", "GetOnEdgeLock_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edgeFlags" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="edgeFlags">A combination of edge flags describing the edge(s) locked</param>
        <summary>Called when the given edge may become locked.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when the given edge may become locked. This can happen if an edge drag
 was preliminarily rejected before beginning, but after <c><see cref="M:Android.Support.V4.Widget.ViewDragHelper.Callback.OnEdgeTouched(System.Int32, System.Int32)" /></c>
 was called. This method should return true to lock this edge or false to leave it
 unlocked. The default behavior is to leave edges unlocked.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/widget/ViewDragHelper.Callback.html#onEdgeLock(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnEdgeTouched">
      <MemberSignature Language="C#" Value="public virtual void OnEdgeTouched (int edgeFlags, int pointerId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnEdgeTouched(int32 edgeFlags, int32 pointerId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onEdgeTouched", "(II)V", "GetOnEdgeTouched_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edgeFlags" Type="System.Int32" />
        <Parameter Name="pointerId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="edgeFlags">A combination of edge flags describing the edge(s) currently touched</param>
        <param name="pointerId">ID of the pointer touching the described edge(s)</param>
        <summary>Called when one of the subscribed edges in the parent view has been touched
 by the user while no child view is currently captured.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when one of the subscribed edges in the parent view has been touched
 by the user while no child view is currently captured.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/widget/ViewDragHelper.Callback.html#onEdgeTouched(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <altmember cref="F:Android.Support.V4.Widget.ViewDragHelper.EdgeLeft" />
        <altmember cref="F:Android.Support.V4.Widget.ViewDragHelper.EdgeTop" />
        <altmember cref="F:Android.Support.V4.Widget.ViewDragHelper.EdgeRight" />
        <altmember cref="F:Android.Support.V4.Widget.ViewDragHelper.EdgeBottom" />
      </Docs>
    </Member>
    <Member MemberName="OnViewCaptured">
      <MemberSignature Language="C#" Value="public virtual void OnViewCaptured (Android.Views.View capturedChild, int activePointerId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnViewCaptured(class Android.Views.View capturedChild, int32 activePointerId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onViewCaptured", "(Landroid/view/View;I)V", "GetOnViewCaptured_Landroid_view_View_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capturedChild" Type="Android.Views.View" />
        <Parameter Name="activePointerId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capturedChild">Child view that was captured</param>
        <param name="activePointerId">Pointer id tracking the child capture
</param>
        <summary>Called when a child view is captured for dragging or settling.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when a child view is captured for dragging or settling. The ID of the pointer
 currently dragging the captured view is supplied. If activePointerId is
 identified as <c><see cref="F:Android.Support.V4.Widget.ViewDragHelper.InvalidPointer" /></c> the capture is programmatic instead of
 pointer-initiated.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/widget/ViewDragHelper.Callback.html#onViewCaptured(android.view.View, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnViewDragStateChanged">
      <MemberSignature Language="C#" Value="public virtual void OnViewDragStateChanged (int state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnViewDragStateChanged(int32 state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onViewDragStateChanged", "(I)V", "GetOnViewDragStateChanged_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="state">The new drag state</param>
        <summary>Called when the drag state changes.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when the drag state changes. See the <c>STATE_*</c> constants
 for more information.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/widget/ViewDragHelper.Callback.html#onViewDragStateChanged(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
        <altmember cref="F:Android.Support.V4.Widget.ViewDragHelper.StateIdle" />
        <altmember cref="F:Android.Support.V4.Widget.ViewDragHelper.StateDragging" />
        <altmember cref="F:Android.Support.V4.Widget.ViewDragHelper.StateSettling" />
      </Docs>
    </Member>
    <Member MemberName="OnViewPositionChanged">
      <MemberSignature Language="C#" Value="public virtual void OnViewPositionChanged (Android.Views.View changedView, int left, int top, int dx, int dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnViewPositionChanged(class Android.Views.View changedView, int32 left, int32 top, int32 dx, int32 dy) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onViewPositionChanged", "(Landroid/view/View;IIII)V", "GetOnViewPositionChanged_Landroid_view_View_IIIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changedView" Type="Android.Views.View" />
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="dx" Type="System.Int32" />
        <Parameter Name="dy" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="changedView">View whose position changed</param>
        <param name="left">New X coordinate of the left edge of the view</param>
        <param name="top">New Y coordinate of the top edge of the view</param>
        <param name="dx">Change in X position from the last call</param>
        <param name="dy">Change in Y position from the last call
</param>
        <summary>Called when the captured view's position changes as the result of a drag or settle.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when the captured view's position changes as the result of a drag or settle.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/widget/ViewDragHelper.Callback.html#onViewPositionChanged(android.view.View, int, int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="OnViewReleased">
      <MemberSignature Language="C#" Value="public virtual void OnViewReleased (Android.Views.View releasedChild, float xvel, float yvel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnViewReleased(class Android.Views.View releasedChild, float32 xvel, float32 yvel) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onViewReleased", "(Landroid/view/View;FF)V", "GetOnViewReleased_Landroid_view_View_FFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="releasedChild" Type="Android.Views.View" />
        <Parameter Name="xvel" Type="System.Single" />
        <Parameter Name="yvel" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="releasedChild">The captured child view now being released</param>
        <param name="xvel">X velocity of the pointer as it left the screen in pixels per second.</param>
        <param name="yvel">Y velocity of the pointer as it left the screen in pixels per second.
</param>
        <summary>Called when the child view is no longer being actively dragged.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when the child view is no longer being actively dragged.
 The fling velocity is also supplied, if relevant. The velocity values may
 be clamped to system minimums or maximums.

 </para>
          <para tool="javadoc-to-mdoc">Calling code may decide to fling or otherwise release the view to let it
 settle into place. It should do so using <c><see cref="M:Android.Support.V4.Widget.ViewDragHelper.SettleCapturedViewAt(System.Int32, System.Int32)" /></c>
 or <c><see cref="M:Android.Support.V4.Widget.ViewDragHelper.FlingCapturedView(System.Int32, System.Int32, System.Int32, System.Int32)" /></c>. If the Callback invokes
 one of these methods, the ViewDragHelper will enter <c><see cref="F:Android.Support.V4.Widget.ViewDragHelper.StateSettling" /></c>
 and the view capture will not fully end until it comes to a complete stop.
 If neither of these methods is invoked before <c>onViewReleased</c> returns,
 the view will stop in place and the ViewDragHelper will return to
 <c><see cref="F:Android.Support.V4.Widget.ViewDragHelper.StateIdle" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/widget/ViewDragHelper.Callback.html#onViewReleased(android.view.View, float, float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonVirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCaptureView">
      <MemberSignature Language="C#" Value="public abstract bool TryCaptureView (Android.Views.View child, int pointerId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryCaptureView(class Android.Views.View child, int32 pointerId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("tryCaptureView", "(Landroid/view/View;I)Z", "GetTryCaptureView_Landroid_view_View_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Android.Views.View" />
        <Parameter Name="pointerId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="child">Child the user is attempting to capture</param>
        <param name="pointerId">ID of the pointer attempting the capture</param>
        <summary>Called when the user's input indicates that they want to capture the given child view
 with the pointer indicated by pointerId.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when the user's input indicates that they want to capture the given child view
 with the pointer indicated by pointerId. The callback should return true if the user
 is permitted to drag the given view with the indicated pointer.

 </para>
          <para tool="javadoc-to-mdoc">ViewDragHelper may call this method multiple times for the same view even if
 the view is already captured; this indicates that a new pointer is trying to take
 control of the view.</para>
          <para tool="javadoc-to-mdoc">If this method returns true, a call to <c><see cref="M:Android.Support.V4.Widget.ViewDragHelper.Callback.OnViewCaptured(Android.Views.View, System.Int32)" /></c>
 will follow if the capture is successful.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/support/v4/widget/ViewDragHelper.Callback.html#tryCaptureView(android.view.View, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
  </Members>
</Type>
